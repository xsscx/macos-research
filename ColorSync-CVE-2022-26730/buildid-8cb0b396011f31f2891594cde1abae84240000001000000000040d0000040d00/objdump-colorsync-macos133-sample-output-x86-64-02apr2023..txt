ColorSync Utility:
(__TEXT,__text) section
100001410:	55	pushq	%rbp
100001411:	48 89 e5	movq	%rsp, %rbp
100001414:	5d	popq	%rbp
100001415:	e9 b8 de 02 00	jmp	0x10002f2d2 ## symbol stub for: _NSApplicationMain
10000141a:	55	pushq	%rbp
10000141b:	48 89 e5	movq	%rsp, %rbp
10000141e:	53	pushq	%rbx
10000141f:	48 83 ec 18	subq	$24, %rsp
100001423:	48 8d 45 e8	leaq	-24(%rbp), %rax
100001427:	48 89 38	movq	%rdi, (%rax)
10000142a:	48 8b 0d 4f 13 05 00	movq	332623(%rip), %rcx ## Objc class ref: CSUtilityApp
100001431:	48 89 48 08	movq	%rcx, 8(%rax)
100001435:	48 8b 35 d4 ff 04 00	movq	327636(%rip), %rsi ## Objc selector ref: init
10000143c:	48 89 c7	movq	%rax, %rdi
10000143f:	e8 98 e0 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
100001444:	48 89 c3	movq	%rax, %rbx
100001447:	48 85 c0	testq	%rax, %rax
10000144a:	74 13	je	0x10000145f
10000144c:	48 8b 35 35 09 05 00	movq	330037(%rip), %rsi ## Objc selector ref: setDelegate:
100001453:	48 89 df	movq	%rbx, %rdi
100001456:	48 89 da	movq	%rbx, %rdx
100001459:	ff 15 c1 b7 03 00	callq	*243649(%rip) ## Objc message: -[%rdi setDelegate:]
10000145f:	48 89 d8	movq	%rbx, %rax
100001462:	48 83 c4 18	addq	$24, %rsp
100001466:	5b	popq	%rbx
100001467:	5d	popq	%rbp
100001468:	c3	retq
100001469:	55	pushq	%rbp
10000146a:	48 89 e5	movq	%rsp, %rbp
10000146d:	b8 01 00 00 00	movl	$1, %eax
100001472:	5d	popq	%rbp
100001473:	c3	retq
100001474:	55	pushq	%rbp
100001475:	48 89 e5	movq	%rsp, %rbp
100001478:	41 57	pushq	%r15
10000147a:	41 56	pushq	%r14
10000147c:	53	pushq	%rbx
10000147d:	50	pushq	%rax
10000147e:	48 8b 3d eb 10 05 00	movq	332011(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAppleEventManager
100001485:	48 8b 35 84 0d 05 00	movq	331140(%rip), %rsi ## Objc selector ref: sharedAppleEventManager
10000148c:	ff 15 8e b7 03 00	callq	*243598(%rip) ## Objc message: +[NSAppleEventManager sharedAppleEventManager]
100001492:	48 89 c3	movq	%rax, %rbx
100001495:	4c 8b 35 5c fb 04 00	movq	326492(%rip), %r14 ## Objc selector ref: currentAppleEvent
10000149c:	48 89 c7	movq	%rax, %rdi
10000149f:	4c 89 f6	movq	%r14, %rsi
1000014a2:	e8 4d e0 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000014a7:	84 c0	testb	%al, %al
1000014a9:	74 3b	je	0x1000014e6
1000014ab:	4c 8b 3d 6e b7 03 00	movq	243566(%rip), %r15 ## Objc message: -[%rdi currentAppleEvent]
1000014b2:	48 89 df	movq	%rbx, %rdi
1000014b5:	4c 89 f6	movq	%r14, %rsi
1000014b8:	41 ff d7	callq	*%r15
1000014bb:	48 8b 35 c6 fb 04 00	movq	326598(%rip), %rsi ## Objc selector ref: descriptorForKeyword:
1000014c2:	48 89 c7	movq	%rax, %rdi
1000014c5:	ba 74 64 72 70	movl	$1886545012, %edx
1000014ca:	41 ff d7	callq	*%r15
1000014cd:	48 8b 35 34 00 05 00	movq	327732(%rip), %rsi ## Objc selector ref: int32Value
1000014d4:	48 89 c7	movq	%rax, %rdi
1000014d7:	4c 89 f8	movq	%r15, %rax
1000014da:	48 83 c4 08	addq	$8, %rsp
1000014de:	5b	popq	%rbx
1000014df:	41 5e	popq	%r14
1000014e1:	41 5f	popq	%r15
1000014e3:	5d	popq	%rbp
1000014e4:	ff e0	jmpq	*%rax
1000014e6:	31 c0	xorl	%eax, %eax
1000014e8:	48 83 c4 08	addq	$8, %rsp
1000014ec:	5b	popq	%rbx
1000014ed:	41 5e	popq	%r14
1000014ef:	41 5f	popq	%r15
1000014f1:	5d	popq	%rbp
1000014f2:	c3	retq
1000014f3:	55	pushq	%rbp
1000014f4:	48 89 e5	movq	%rsp, %rbp
1000014f7:	80 3d 92 37 05 00 00	cmpb	$0, 341906(%rip)
1000014fe:	75 16	jne	0x100001516
100001500:	48 8b 35 b9 02 05 00	movq	328377(%rip), %rsi ## Objc selector ref: newUtilityWindow:
100001507:	31 d2	xorl	%edx, %edx
100001509:	ff 15 11 b7 03 00	callq	*243473(%rip) ## Objc message: -[%rdi newUtilityWindow:]
10000150f:	c6 05 7a 37 05 00 01	movb	$1, 341882(%rip)
100001516:	b8 01 00 00 00	movl	$1, %eax
10000151b:	5d	popq	%rbp
10000151c:	c3	retq
10000151d:	55	pushq	%rbp
10000151e:	48 89 e5	movq	%rsp, %rbp
100001521:	41 57	pushq	%r15
100001523:	41 56	pushq	%r14
100001525:	53	pushq	%rbx
100001526:	50	pushq	%rax
100001527:	b3 01	movb	$1, %bl
100001529:	84 c9	testb	%cl, %cl
10000152b:	74 2c	je	0x100001559
10000152d:	49 89 d6	movq	%rdx, %r14
100001530:	49 89 ff	movq	%rdi, %r15
100001533:	48 8b 35 a6 03 05 00	movq	328614(%rip), %rsi ## Objc selector ref: optionalSignature
10000153a:	ff 15 e0 b6 03 00	callq	*243424(%rip) ## Objc message: -[%rdi optionalSignature]
100001540:	85 c0	testl	%eax, %eax
100001542:	74 15	je	0x100001559
100001544:	48 8b 35 75 02 05 00	movq	328309(%rip), %rsi ## Objc selector ref: newUtilityWindow:
10000154b:	4c 89 ff	movq	%r15, %rdi
10000154e:	4c 89 f2	movq	%r14, %rdx
100001551:	ff 15 c9 b6 03 00	callq	*243401(%rip) ## Objc message: -[%rdi newUtilityWindow:]
100001557:	31 db	xorl	%ebx, %ebx
100001559:	0f b6 c3	movzbl	%bl, %eax
10000155c:	48 83 c4 08	addq	$8, %rsp
100001560:	5b	popq	%rbx
100001561:	41 5e	popq	%r14
100001563:	41 5f	popq	%r15
100001565:	5d	popq	%rbp
100001566:	c3	retq
100001567:	55	pushq	%rbp
100001568:	48 89 e5	movq	%rsp, %rbp
10000156b:	41 57	pushq	%r15
10000156d:	41 56	pushq	%r14
10000156f:	53	pushq	%rbx
100001570:	50	pushq	%rax
100001571:	49 89 d6	movq	%rdx, %r14
100001574:	48 8b 35 65 03 05 00	movq	328549(%rip), %rsi ## Objc selector ref: optionalSignature
10000157b:	4c 8b 3d 9e b6 03 00	movq	243358(%rip), %r15 ## Objc message: -[%rdi optionalSignature]
100001582:	41 ff d7	callq	*%r15
100001585:	89 c3	movl	%eax, %ebx
100001587:	48 8b 3d ea 0f 05 00	movq	331754(%rip), %rdi ## Objc class ref: CSUtilities
10000158e:	e8 2b df 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100001593:	48 8b 35 2e ff 04 00	movq	327470(%rip), %rsi ## Objc selector ref: initWithWindow:signature:
10000159a:	48 89 c7	movq	%rax, %rdi
10000159d:	31 d2	xorl	%edx, %edx
10000159f:	89 d9	movl	%ebx, %ecx
1000015a1:	41 ff d7	callq	*%r15
1000015a4:	48 8b 35 a5 0c 05 00	movq	330917(%rip), %rsi ## Objc selector ref: showWindow:
1000015ab:	48 89 c7	movq	%rax, %rdi
1000015ae:	4c 89 f2	movq	%r14, %rdx
1000015b1:	4c 89 f8	movq	%r15, %rax
1000015b4:	48 83 c4 08	addq	$8, %rsp
1000015b8:	5b	popq	%rbx
1000015b9:	41 5e	popq	%r14
1000015bb:	41 5f	popq	%r15
1000015bd:	5d	popq	%rbp
1000015be:	ff e0	jmpq	*%rax
1000015c0:	55	pushq	%rbp
1000015c1:	48 89 e5	movq	%rsp, %rbp
1000015c4:	41 56	pushq	%r14
1000015c6:	53	pushq	%rbx
1000015c7:	48 83 ec 10	subq	$16, %rsp
1000015cb:	41 89 ce	movl	%ecx, %r14d
1000015ce:	48 89 fb	movq	%rdi, %rbx
1000015d1:	48 8d 7d e0	leaq	-32(%rbp), %rdi
1000015d5:	48 89 1f	movq	%rbx, (%rdi)
1000015d8:	48 8b 05 a9 11 05 00	movq	332201(%rip), %rax ## Objc class ref: CSUtilities
1000015df:	48 89 47 08	movq	%rax, 8(%rdi)
1000015e3:	48 8b 35 d6 fe 04 00	movq	327382(%rip), %rsi ## Objc selector ref: initWithWindow:
1000015ea:	e8 ed de 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithWindow:]
1000015ef:	48 8b 05 da 12 05 00	movq	332506(%rip), %rax
1000015f6:	44 89 34 03	movl	%r14d, (%rbx,%rax)
1000015fa:	48 8b 3d 7f 0f 05 00	movq	331647(%rip), %rdi ## Objc class ref: CSUtilityWrapperArray
100001601:	e8 be de 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
100001606:	48 8b 0d cb 12 05 00	movq	332491(%rip), %rcx
10000160d:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100001611:	48 8b 3d 80 36 05 00	movq	341632(%rip), %rdi
100001618:	48 85 ff	testq	%rdi, %rdi
10000161b:	75 27	jne	0x100001644
10000161d:	48 8b 3d 64 0f 05 00	movq	331620(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
100001624:	48 8b 35 ed f6 04 00	movq	325357(%rip), %rsi ## Objc selector ref: array
10000162b:	ff 15 ef b5 03 00	callq	*243183(%rip) ## Objc message: +[NSMutableArray array]
100001631:	48 89 c7	movq	%rax, %rdi
100001634:	ff 15 26 b6 03 00	callq	*243238(%rip) ## literal pool symbol address: _objc_retain
10000163a:	48 89 c7	movq	%rax, %rdi
10000163d:	48 89 05 54 36 05 00	movq	%rax, 341588(%rip)
100001644:	48 8b 35 25 f6 04 00	movq	325157(%rip), %rsi ## Objc selector ref: addObject:
10000164b:	48 89 da	movq	%rbx, %rdx
10000164e:	ff 15 cc b5 03 00	callq	*243148(%rip) ## Objc message: -[%rdi addObject:]
100001654:	48 89 d8	movq	%rbx, %rax
100001657:	48 83 c4 10	addq	$16, %rsp
10000165b:	5b	popq	%rbx
10000165c:	41 5e	popq	%r14
10000165e:	5d	popq	%rbp
10000165f:	c3	retq
100001660:	55	pushq	%rbp
100001661:	48 89 e5	movq	%rsp, %rbp
100001664:	48 8b 35 5d fe 04 00	movq	327261(%rip), %rsi ## Objc selector ref: initWithWindow:signature:
10000166b:	31 c9	xorl	%ecx, %ecx
10000166d:	5d	popq	%rbp
10000166e:	ff 25 ac b5 03 00	jmpq	*243116(%rip) ## Objc message: -[%rdi initWithWindow:signature:]
100001674:	55	pushq	%rbp
100001675:	48 89 e5	movq	%rsp, %rbp
100001678:	41 56	pushq	%r14
10000167a:	53	pushq	%rbx
10000167b:	48 83 ec 10	subq	$16, %rsp
10000167f:	48 89 fb	movq	%rdi, %rbx
100001682:	48 8b 05 4f 12 05 00	movq	332367(%rip), %rax
100001689:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10000168d:	4c 8b 35 c4 b5 03 00	movq	243140(%rip), %r14 ## literal pool symbol address: _objc_release
100001694:	41 ff d6	callq	*%r14
100001697:	48 8b 05 42 12 05 00	movq	332354(%rip), %rax
10000169e:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000016a2:	41 ff d6	callq	*%r14
1000016a5:	48 8d 7d e0	leaq	-32(%rbp), %rdi
1000016a9:	48 89 1f	movq	%rbx, (%rdi)
1000016ac:	48 8b 05 d5 10 05 00	movq	331989(%rip), %rax ## Objc class ref: CSUtilities
1000016b3:	48 89 47 08	movq	%rax, 8(%rdi)
1000016b7:	48 8b 35 92 f9 04 00	movq	326034(%rip), %rsi ## Objc selector ref: dealloc
1000016be:	e8 19 de 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
1000016c3:	48 83 c4 10	addq	$16, %rsp
1000016c7:	5b	popq	%rbx
1000016c8:	41 5e	popq	%r14
1000016ca:	5d	popq	%rbp
1000016cb:	c3	retq
1000016cc:	55	pushq	%rbp
1000016cd:	48 89 e5	movq	%rsp, %rbp
1000016d0:	41 57	pushq	%r15
1000016d2:	41 56	pushq	%r14
1000016d4:	41 54	pushq	%r12
1000016d6:	53	pushq	%rbx
1000016d7:	49 89 fe	movq	%rdi, %r14
1000016da:	48 8b 3d af 0e 05 00	movq	331439(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
1000016e1:	48 8b 35 c8 0b 05 00	movq	330696(%rip), %rsi ## Objc selector ref: standardUserDefaults
1000016e8:	48 8b 1d 31 b5 03 00	movq	242993(%rip), %rbx ## Objc message: +[NSUserDefaults standardUserDefaults]
1000016ef:	ff d3	callq	*%rbx
1000016f1:	48 8b 15 10 34 05 00	movq	341008(%rip), %rdx
1000016f8:	48 8b 35 79 01 05 00	movq	328057(%rip), %rsi ## Objc selector ref: objectForKey:
1000016ff:	48 89 c7	movq	%rax, %rdi
100001702:	49 89 dc	movq	%rbx, %r12
100001705:	ff d3	callq	*%rbx
100001707:	4c 8b 3d da 11 05 00	movq	332250(%rip), %r15
10000170e:	48 85 c0	testq	%rax, %rax
100001711:	74 1c	je	0x10000172f
100001713:	4b 8b 1c 3e	movq	(%r14,%r15), %rbx
100001717:	48 89 c7	movq	%rax, %rdi
10000171a:	e8 f5 db 02 00	callq	0x10002f314 ## symbol stub for: _NSSizeFromString
10000171f:	48 8b 35 12 06 05 00	movq	329234(%rip), %rsi ## Objc selector ref: setContentSize:
100001726:	48 89 df	movq	%rbx, %rdi
100001729:	ff 15 f1 b4 03 00	callq	*242929(%rip) ## Objc message: -[%rdi setContentSize:]
10000172f:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100001733:	48 8b 35 26 00 05 00	movq	327718(%rip), %rsi ## Objc selector ref: minSize
10000173a:	41 ff d4	callq	*%r12
10000173d:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100001741:	48 8b 35 d8 05 05 00	movq	329176(%rip), %rsi ## Objc selector ref: setCollectionBehavior:
100001748:	ba 00 02 00 00	movl	$512, %edx
10000174d:	41 ff d4	callq	*%r12
100001750:	48 8b 3d 41 0e 05 00	movq	331329(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSToolbar
100001757:	e8 62 dd 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10000175c:	48 8b 35 05 fd 04 00	movq	326917(%rip), %rsi ## Objc selector ref: initWithIdentifier:
100001763:	48 8d 15 f6 b6 03 00	leaq	243446(%rip), %rdx ## Objc cfstring ref: @"CSUtilityToolbar"
10000176a:	48 89 c7	movq	%rax, %rdi
10000176d:	41 ff d4	callq	*%r12
100001770:	48 89 c7	movq	%rax, %rdi
100001773:	e8 52 dd 02 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100001778:	48 89 c3	movq	%rax, %rbx
10000177b:	48 8b 35 16 05 05 00	movq	328982(%rip), %rsi ## Objc selector ref: setAllowsUserCustomization:
100001782:	48 89 c7	movq	%rax, %rdi
100001785:	31 d2	xorl	%edx, %edx
100001787:	41 ff d4	callq	*%r12
10000178a:	48 8b 35 2f 05 05 00	movq	329007(%rip), %rsi ## Objc selector ref: setAutosavesConfiguration:
100001791:	48 89 df	movq	%rbx, %rdi
100001794:	31 d2	xorl	%edx, %edx
100001796:	41 ff d4	callq	*%r12
100001799:	48 8b 35 f8 05 05 00	movq	329208(%rip), %rsi ## Objc selector ref: setDisplayMode:
1000017a0:	ba 01 00 00 00	movl	$1, %edx
1000017a5:	48 89 df	movq	%rbx, %rdi
1000017a8:	41 ff d4	callq	*%r12
1000017ab:	48 8b 35 d6 05 05 00	movq	329174(%rip), %rsi ## Objc selector ref: setDelegate:
1000017b2:	48 89 df	movq	%rbx, %rdi
1000017b5:	4c 89 f2	movq	%r14, %rdx
1000017b8:	41 ff d4	callq	*%r12
1000017bb:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
1000017bf:	48 8b 35 62 09 05 00	movq	330082(%rip), %rsi ## Objc selector ref: setToolbar:
1000017c6:	48 89 da	movq	%rbx, %rdx
1000017c9:	41 ff d4	callq	*%r12
1000017cc:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
1000017d0:	48 8b 35 59 09 05 00	movq	330073(%rip), %rsi ## Objc selector ref: setToolbarStyle:
1000017d7:	ba 02 00 00 00	movl	$2, %edx
1000017dc:	4c 89 e0	movq	%r12, %rax
1000017df:	5b	popq	%rbx
1000017e0:	41 5c	popq	%r12
1000017e2:	41 5e	popq	%r14
1000017e4:	41 5f	popq	%r15
1000017e6:	5d	popq	%rbp
1000017e7:	ff e0	jmpq	*%rax
1000017e9:	55	pushq	%rbp
1000017ea:	48 89 e5	movq	%rsp, %rbp
1000017ed:	41 57	pushq	%r15
1000017ef:	41 56	pushq	%r14
1000017f1:	41 55	pushq	%r13
1000017f3:	41 54	pushq	%r12
1000017f5:	53	pushq	%rbx
1000017f6:	48 83 ec 18	subq	$24, %rsp
1000017fa:	89 d3	movl	%edx, %ebx
1000017fc:	49 89 fe	movq	%rdi, %r14
1000017ff:	48 8b 3d 8a 0d 05 00	movq	331146(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
100001806:	48 8b 35 a3 0a 05 00	movq	330403(%rip), %rsi ## Objc selector ref: standardUserDefaults
10000180d:	ff 15 0d b4 03 00	callq	*242701(%rip) ## Objc message: +[NSUserDefaults standardUserDefaults]
100001813:	85 db	testl	%ebx, %ebx
100001815:	0f 84 e7 00 00 00	je	0x100001902
10000181b:	49 89 c4	movq	%rax, %r12
10000181e:	48 8b 1d bb 10 05 00	movq	331963(%rip), %rbx
100001825:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001829:	48 8b 35 d8 0c 05 00	movq	330968(%rip), %rsi ## Objc selector ref: willUnselect:
100001830:	4c 8b 2d e9 b3 03 00	movq	242665(%rip), %r13 ## Objc message: -[%rdi willUnselect:]
100001837:	4c 89 f2	movq	%r14, %rdx
10000183a:	41 ff d5	callq	*%r13
10000183d:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001841:	48 8b 35 88 f8 04 00	movq	325768(%rip), %rsi ## Objc selector ref: didUnselect:
100001848:	4c 89 f2	movq	%r14, %rdx
10000184b:	41 ff d5	callq	*%r13
10000184e:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001852:	ff 15 00 b4 03 00	callq	*242688(%rip) ## literal pool symbol address: _objc_release
100001858:	49 c7 04 1e 00 00 00 00	movq	$0, (%r14,%rbx)
100001860:	4c 8b 3d 89 10 05 00	movq	331913(%rip), %r15
100001867:	4b 8b 14 3e	movq	(%r14,%r15), %rdx
10000186b:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100001875:	48 39 c2	cmpq	%rax, %rdx
100001878:	0f 84 fa 00 00 00	je	0x100001978
10000187e:	4c 89 65 d0	movq	%r12, -48(%rbp)
100001882:	48 8b 05 4f 10 05 00	movq	331855(%rip), %rax
100001889:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10000188d:	48 8b 35 cc ff 04 00	movq	327628(%rip), %rsi ## Objc selector ref: objectAtIndex:
100001894:	41 ff d5	callq	*%r13
100001897:	48 89 c7	movq	%rax, %rdi
10000189a:	ff 15 c0 b3 03 00	callq	*242624(%rip) ## literal pool symbol address: _objc_retain
1000018a0:	49 89 04 1e	movq	%rax, (%r14,%rbx)
1000018a4:	48 8b 35 0d 0c 05 00	movq	330765(%rip), %rsi ## Objc selector ref: view
1000018ab:	48 89 c7	movq	%rax, %rdi
1000018ae:	41 ff d5	callq	*%r13
1000018b1:	49 89 c4	movq	%rax, %r12
1000018b4:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000018b8:	48 8b 35 41 0c 05 00	movq	330817(%rip), %rsi ## Objc selector ref: willSelect:
1000018bf:	4c 89 f2	movq	%r14, %rdx
1000018c2:	41 ff d5	callq	*%r13
1000018c5:	4b 8b 04 3e	movq	(%r14,%r15), %rax
1000018c9:	48 8b 0d 28 10 05 00	movq	331816(%rip), %rcx
1000018d0:	49 89 04 0e	movq	%rax, (%r14,%rcx)
1000018d4:	48 8b 05 0d 10 05 00	movq	331789(%rip), %rax
1000018db:	4d 8b 3c 06	movq	(%r14,%rax), %r15
1000018df:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000018e3:	48 85 ff	testq	%rdi, %rdi
1000018e6:	4c 89 65 c8	movq	%r12, -56(%rbp)
1000018ea:	0f 84 97 00 00 00	je	0x100001987
1000018f0:	48 8b 35 89 f7 04 00	movq	325513(%rip), %rsi ## Objc selector ref: description
1000018f7:	ff 15 23 b3 03 00	callq	*242467(%rip) ## Objc message: -[%rdi description]
1000018fd:	e9 c2 00 00 00	jmp	0x1000019c4
100001902:	48 8b 1d df 0f 05 00	movq	331743(%rip), %rbx
100001909:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
10000190d:	4c 8b 25 dc 0a 05 00	movq	330460(%rip), %r12 ## Objc selector ref: toolbar
100001914:	4c 89 e6	movq	%r12, %rsi
100001917:	ff 15 03 b3 03 00	callq	*242435(%rip) ## Objc message: -[%rdi toolbar]
10000191d:	4c 8b 3d 8c 07 05 00	movq	329612(%rip), %r15 ## Objc selector ref: setSelectedItemIdentifier:
100001924:	48 89 c7	movq	%rax, %rdi
100001927:	4c 89 fe	movq	%r15, %rsi
10000192a:	e8 c5 db 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
10000192f:	84 c0	testb	%al, %al
100001931:	74 45	je	0x100001978
100001933:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001937:	4c 8b 2d e2 b2 03 00	movq	242402(%rip), %r13 ## Objc message: -[%rdi setSelectedItemIdentifier:]
10000193e:	4c 89 e6	movq	%r12, %rsi
100001941:	41 ff d5	callq	*%r13
100001944:	48 89 c3	movq	%rax, %rbx
100001947:	48 8b 05 92 0f 05 00	movq	331666(%rip), %rax
10000194e:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001952:	48 8b 35 ef f9 04 00	movq	326127(%rip), %rsi ## Objc selector ref: identifier
100001959:	41 ff d5	callq	*%r13
10000195c:	48 89 df	movq	%rbx, %rdi
10000195f:	4c 89 fe	movq	%r15, %rsi
100001962:	48 89 c2	movq	%rax, %rdx
100001965:	4c 89 e8	movq	%r13, %rax
100001968:	48 83 c4 18	addq	$24, %rsp
10000196c:	5b	popq	%rbx
10000196d:	41 5c	popq	%r12
10000196f:	41 5d	popq	%r13
100001971:	41 5e	popq	%r14
100001973:	41 5f	popq	%r15
100001975:	5d	popq	%rbp
100001976:	ff e0	jmpq	*%rax
100001978:	48 83 c4 18	addq	$24, %rsp
10000197c:	5b	popq	%rbx
10000197d:	41 5c	popq	%r12
10000197f:	41 5d	popq	%r13
100001981:	41 5e	popq	%r14
100001983:	41 5f	popq	%r15
100001985:	5d	popq	%rbp
100001986:	c3	retq
100001987:	48 8b 1d 12 0c 05 00	movq	330770(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000198e:	4c 89 f7	movq	%r14, %rdi
100001991:	e8 52 db 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100001996:	48 8b 35 53 f4 04 00	movq	324691(%rip), %rsi ## Objc selector ref: bundleForClass:
10000199d:	48 89 df	movq	%rbx, %rdi
1000019a0:	48 89 c2	movq	%rax, %rdx
1000019a3:	41 ff d5	callq	*%r13
1000019a6:	48 8b 35 b3 fc 04 00	movq	326835(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000019ad:	48 8d 15 cc b4 03 00	leaq	242892(%rip), %rdx ## Objc cfstring ref: @"ColorSync Utility"
1000019b4:	48 8d 0d e5 b4 03 00	leaq	242917(%rip), %rcx ## Objc cfstring ref: @""
1000019bb:	48 89 c7	movq	%rax, %rdi
1000019be:	45 31 c0	xorl	%r8d, %r8d
1000019c1:	41 ff d5	callq	*%r13
1000019c4:	48 89 c2	movq	%rax, %rdx
1000019c7:	48 8b 35 4a 07 05 00	movq	329546(%rip), %rsi ## Objc selector ref: setTitle:
1000019ce:	4c 89 ff	movq	%r15, %rdi
1000019d1:	41 ff d5	callq	*%r13
1000019d4:	4c 8b 25 0d 0f 05 00	movq	331533(%rip), %r12
1000019db:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
1000019df:	48 8b 1d 0a 0a 05 00	movq	330250(%rip), %rbx ## Objc selector ref: toolbar
1000019e6:	48 89 de	movq	%rbx, %rsi
1000019e9:	41 ff d5	callq	*%r13
1000019ec:	4c 8b 3d bd 06 05 00	movq	329405(%rip), %r15 ## Objc selector ref: setSelectedItemIdentifier:
1000019f3:	48 89 c7	movq	%rax, %rdi
1000019f6:	4c 89 fe	movq	%r15, %rsi
1000019f9:	e8 f6 da 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000019fe:	84 c0	testb	%al, %al
100001a00:	74 2e	je	0x100001a30
100001a02:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
100001a06:	48 89 de	movq	%rbx, %rsi
100001a09:	41 ff d5	callq	*%r13
100001a0c:	48 89 c3	movq	%rax, %rbx
100001a0f:	48 8b 05 ca 0e 05 00	movq	331466(%rip), %rax
100001a16:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001a1a:	48 8b 35 27 f9 04 00	movq	325927(%rip), %rsi ## Objc selector ref: identifier
100001a21:	41 ff d5	callq	*%r13
100001a24:	48 89 df	movq	%rbx, %rdi
100001a27:	4c 89 fe	movq	%r15, %rsi
100001a2a:	48 89 c2	movq	%rax, %rdx
100001a2d:	41 ff d5	callq	*%r13
100001a30:	48 8b 5d c8	movq	-56(%rbp), %rbx
100001a34:	48 85 db	testq	%rbx, %rbx
100001a37:	0f 84 af 00 00 00	je	0x100001aec
100001a3d:	48 8b 35 04 f9 04 00	movq	325892(%rip), %rsi ## Objc selector ref: identifier
100001a44:	48 89 df	movq	%rbx, %rdi
100001a47:	41 ff d5	callq	*%r13
100001a4a:	48 8b 35 37 fb 04 00	movq	326455(%rip), %rsi ## Objc selector ref: isEqualToString:
100001a51:	48 8d 15 68 b4 03 00	leaq	242792(%rip), %rdx ## Objc cfstring ref: @"Calculator_id"
100001a58:	48 89 c7	movq	%rax, %rdi
100001a5b:	41 ff d5	callq	*%r13
100001a5e:	48 8b 0d 9b 0e 05 00	movq	331419(%rip), %rcx
100001a65:	84 c0	testb	%al, %al
100001a67:	74 07	je	0x100001a70
100001a69:	41 c6 04 0e 01	movb	$1, (%r14,%rcx)
100001a6e:	eb 61	jmp	0x100001ad1
100001a70:	41 c6 04 0e 00	movb	$0, (%r14,%rcx)
100001a75:	48 8b 3d 14 0b 05 00	movq	330516(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
100001a7c:	48 8b 35 2d 08 05 00	movq	329773(%rip), %rsi ## Objc selector ref: standardUserDefaults
100001a83:	41 ff d5	callq	*%r13
100001a86:	48 8b 15 7b 30 05 00	movq	340091(%rip), %rdx
100001a8d:	48 8b 35 e4 fd 04 00	movq	327140(%rip), %rsi ## Objc selector ref: objectForKey:
100001a94:	48 89 c7	movq	%rax, %rdi
100001a97:	41 ff d5	callq	*%r13
100001a9a:	48 85 c0	testq	%rax, %rax
100001a9d:	74 0a	je	0x100001aa9
100001a9f:	48 89 c7	movq	%rax, %rdi
100001aa2:	e8 6d d8 02 00	callq	0x10002f314 ## symbol stub for: _NSSizeFromString
100001aa7:	eb 10	jmp	0x100001ab9
100001aa9:	f2 0f 10 0d 8f 64 03 00	movsd	222351(%rip), %xmm1
100001ab1:	f2 0f 10 05 8f 64 03 00	movsd	222351(%rip), %xmm0
100001ab9:	48 8b 05 28 0e 05 00	movq	331304(%rip), %rax
100001ac0:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001ac4:	48 8b 35 6d 02 05 00	movq	328301(%rip), %rsi ## Objc selector ref: setContentSize:
100001acb:	ff 15 4f b1 03 00	callq	*241999(%rip) ## Objc message: +[NSUserDefaults setContentSize:]
100001ad1:	48 8b 05 30 0e 05 00	movq	331312(%rip), %rax
100001ad8:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001adc:	48 8b 35 5d 02 05 00	movq	328285(%rip), %rsi ## Objc selector ref: setContentView:
100001ae3:	48 89 da	movq	%rbx, %rdx
100001ae6:	ff 15 34 b1 03 00	callq	*241972(%rip) ## Objc message: -[%rdi setContentView:]
100001aec:	48 8b 05 dd 0d 05 00	movq	331229(%rip), %rax
100001af3:	41 83 3c 06 00	cmpl	$0, (%r14,%rax)
100001af8:	48 8b 1d e1 0d 05 00	movq	331233(%rip), %rbx
100001aff:	75 26	jne	0x100001b27
100001b01:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001b05:	48 8b 35 3c f8 04 00	movq	325692(%rip), %rsi ## Objc selector ref: identifier
100001b0c:	41 ff d5	callq	*%r13
100001b0f:	48 8b 0d ea 2f 05 00	movq	339946(%rip), %rcx
100001b16:	48 8b 35 c3 04 05 00	movq	328899(%rip), %rsi ## Objc selector ref: setObject:forKey:
100001b1d:	48 8b 7d d0	movq	-48(%rbp), %rdi
100001b21:	48 89 c2	movq	%rax, %rdx
100001b24:	41 ff d5	callq	*%r13
100001b27:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001b2b:	48 8b 35 06 00 05 00	movq	327686(%rip), %rsi ## Objc selector ref: responderChainBegin
100001b32:	41 ff d5	callq	*%r13
100001b35:	49 89 c7	movq	%rax, %r15
100001b38:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100001b3c:	48 8b 35 8d f9 04 00	movq	326029(%rip), %rsi ## Objc selector ref: initialFirstResponder
100001b43:	41 ff d5	callq	*%r13
100001b46:	49 89 c4	movq	%rax, %r12
100001b49:	48 8b 05 b8 0d 05 00	movq	331192(%rip), %rax
100001b50:	49 8b 14 06	movq	(%r14,%rax), %rdx
100001b54:	48 8b 35 fd f9 04 00	movq	326141(%rip), %rsi ## Objc selector ref: isDescendantOf:
100001b5b:	4c 89 e7	movq	%r12, %rdi
100001b5e:	41 ff d5	callq	*%r13
100001b61:	31 db	xorl	%ebx, %ebx
100001b63:	84 c0	testb	%al, %al
100001b65:	49 0f 45 dc	cmovneq	%r12, %rbx
100001b69:	48 85 db	testq	%rbx, %rbx
100001b6c:	49 0f 44 df	cmoveq	%r15, %rbx
100001b70:	4c 8b 3d a1 f2 04 00	movq	324257(%rip), %r15 ## Objc selector ref: canBecomeKeyView
100001b77:	48 89 df	movq	%rbx, %rdi
100001b7a:	4c 89 fe	movq	%r15, %rsi
100001b7d:	e8 72 d9 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100001b82:	84 c0	testb	%al, %al
100001b84:	74 10	je	0x100001b96
100001b86:	48 89 df	movq	%rbx, %rdi
100001b89:	4c 89 fe	movq	%r15, %rsi
100001b8c:	ff 15 8e b0 03 00	callq	*241806(%rip) ## Objc message: -[%rdi canBecomeKeyView]
100001b92:	84 c0	testb	%al, %al
100001b94:	74 1d	je	0x100001bb3
100001b96:	48 8b 05 4b 0d 05 00	movq	331083(%rip), %rax
100001b9d:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001ba1:	48 8b 35 60 fb 04 00	movq	326496(%rip), %rsi ## Objc selector ref: makeFirstResponder:
100001ba8:	48 89 da	movq	%rbx, %rdx
100001bab:	ff 15 6f b0 03 00	callq	*241775(%rip) ## Objc message: -[%rdi makeFirstResponder:]
100001bb1:	eb 28	jmp	0x100001bdb
100001bb3:	48 8b 05 2e 0d 05 00	movq	331054(%rip), %rax
100001bba:	4d 8b 3c 06	movq	(%r14,%rax), %r15
100001bbe:	48 8b 35 23 fc 04 00	movq	326691(%rip), %rsi ## Objc selector ref: nextResponder
100001bc5:	48 89 df	movq	%rbx, %rdi
100001bc8:	41 ff d5	callq	*%r13
100001bcb:	48 8b 35 36 fb 04 00	movq	326454(%rip), %rsi ## Objc selector ref: makeFirstResponder:
100001bd2:	4c 89 ff	movq	%r15, %rdi
100001bd5:	48 89 c2	movq	%rax, %rdx
100001bd8:	41 ff d5	callq	*%r13
100001bdb:	48 8b 05 fe 0c 05 00	movq	331006(%rip), %rax
100001be2:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001be6:	48 8b 35 db f4 04 00	movq	324827(%rip), %rsi ## Objc selector ref: didSelect:
100001bed:	4c 89 f2	movq	%r14, %rdx
100001bf0:	48 83 c4 18	addq	$24, %rsp
100001bf4:	5b	popq	%rbx
100001bf5:	41 5c	popq	%r12
100001bf7:	41 5d	popq	%r13
100001bf9:	41 5e	popq	%r14
100001bfb:	41 5f	popq	%r15
100001bfd:	5d	popq	%rbp
100001bfe:	ff 25 1c b0 03 00	jmpq	*241692(%rip) ## Objc message: -[%rdi didSelect:]
100001c04:	55	pushq	%rbp
100001c05:	48 89 e5	movq	%rsp, %rbp
100001c08:	48 63 ca	movslq	%edx, %rcx
100001c0b:	48 8b 15 e6 0c 05 00	movq	330982(%rip), %rdx
100001c12:	48 39 0c 17	cmpq	%rcx, (%rdi,%rdx)
100001c16:	75 02	jne	0x100001c1a
100001c18:	5d	popq	%rbp
100001c19:	c3	retq
100001c1a:	48 89 f8	movq	%rdi, %rax
100001c1d:	48 8b 15 cc 0c 05 00	movq	330956(%rip), %rdx
100001c24:	48 89 0c 17	movq	%rcx, (%rdi,%rdx)
100001c28:	48 8b 0d b1 0c 05 00	movq	330929(%rip), %rcx
100001c2f:	48 8b 3c 0f	movq	(%rdi,%rcx), %rdi
100001c33:	48 85 ff	testq	%rdi, %rdi
100001c36:	74 11	je	0x100001c49
100001c38:	48 8b 35 f9 05 05 00	movq	329209(%rip), %rsi ## Objc selector ref: shouldUnselect:
100001c3f:	48 89 c2	movq	%rax, %rdx
100001c42:	5d	popq	%rbp
100001c43:	ff 25 d7 af 03 00	jmpq	*241623(%rip) ## Objc message: -[%rdi shouldUnselect:]
100001c49:	48 8b 35 f0 05 05 00	movq	329200(%rip), %rsi ## Objc selector ref: shouldUnselectResult:
100001c50:	48 89 c7	movq	%rax, %rdi
100001c53:	ba 01 00 00 00	movl	$1, %edx
100001c58:	5d	popq	%rbp
100001c59:	ff 25 c1 af 03 00	jmpq	*241601(%rip) ## Objc message: -[%rdi shouldUnselectResult:]
100001c5f:	55	pushq	%rbp
100001c60:	48 89 e5	movq	%rsp, %rbp
100001c63:	48 8b 05 76 0c 05 00	movq	330870(%rip), %rax
100001c6a:	48 8b 04 07	movq	(%rdi,%rax), %rax
100001c6e:	5d	popq	%rbp
100001c6f:	c3	retq
100001c70:	55	pushq	%rbp
100001c71:	48 89 e5	movq	%rsp, %rbp
100001c74:	53	pushq	%rbx
100001c75:	50	pushq	%rax
100001c76:	48 89 fb	movq	%rdi, %rbx
100001c79:	48 8b 05 50 0c 05 00	movq	330832(%rip), %rax
100001c80:	89 14 07	movl	%edx, (%rdi,%rax)
100001c83:	48 8b 05 4e 0c 05 00	movq	330830(%rip), %rax
100001c8a:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100001c8e:	48 8b 35 53 f7 04 00	movq	325459(%rip), %rsi ## Objc selector ref: indexOfObjectWithSignature:
100001c95:	ff 15 85 af 03 00	callq	*241541(%rip) ## Objc message: -[%rdi indexOfObjectWithSignature:]
100001c9b:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
100001ca5:	48 39 c8	cmpq	%rcx, %rax
100001ca8:	75 07	jne	0x100001cb1
100001caa:	48 83 c4 08	addq	$8, %rsp
100001cae:	5b	popq	%rbx
100001caf:	5d	popq	%rbp
100001cb0:	c3	retq
100001cb1:	48 8b 35 40 ff 04 00	movq	327488(%rip), %rsi ## Objc selector ref: selectIndex:
100001cb8:	48 89 df	movq	%rbx, %rdi
100001cbb:	89 c2	movl	%eax, %edx
100001cbd:	48 83 c4 08	addq	$8, %rsp
100001cc1:	5b	popq	%rbx
100001cc2:	5d	popq	%rbp
100001cc3:	ff 25 57 af 03 00	jmpq	*241495(%rip) ## Objc message: -[%rdi selectIndex:]
100001cc9:	55	pushq	%rbp
100001cca:	48 89 e5	movq	%rsp, %rbp
100001ccd:	48 89 fa	movq	%rdi, %rdx
100001cd0:	48 8b 05 19 0c 05 00	movq	330777(%rip), %rax
100001cd7:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
100001ce1:	48 89 0c 07	movq	%rcx, (%rdi,%rax)
100001ce5:	48 8b 05 f4 0b 05 00	movq	330740(%rip), %rax
100001cec:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100001cf0:	48 85 ff	testq	%rdi, %rdi
100001cf3:	74 0f	je	0x100001d04
100001cf5:	48 8b 35 3c 05 05 00	movq	329020(%rip), %rsi ## Objc selector ref: shouldUnselect:
100001cfc:	ff 15 1e af 03 00	callq	*241438(%rip) ## Objc message: -[%rdi shouldUnselect:]
100001d02:	eb 15	jmp	0x100001d19
100001d04:	48 8b 35 35 05 05 00	movq	329013(%rip), %rsi ## Objc selector ref: shouldUnselectResult:
100001d0b:	48 89 d7	movq	%rdx, %rdi
100001d0e:	ba 01 00 00 00	movl	$1, %edx
100001d13:	ff 15 07 af 03 00	callq	*241415(%rip) ## Objc message: -[%rdi shouldUnselectResult:]
100001d19:	b8 01 00 00 00	movl	$1, %eax
100001d1e:	5d	popq	%rbp
100001d1f:	c3	retq
100001d20:	55	pushq	%rbp
100001d21:	48 89 e5	movq	%rsp, %rbp
100001d24:	41 56	pushq	%r14
100001d26:	53	pushq	%rbx
100001d27:	48 89 fa	movq	%rdi, %rdx
100001d2a:	48 8b 1d 67 2f 05 00	movq	339815(%rip), %rbx
100001d31:	48 8b 35 a0 f6 04 00	movq	325280(%rip), %rsi ## Objc selector ref: indexOfObject:
100001d38:	4c 8b 35 e1 ae 03 00	movq	241377(%rip), %r14 ## Objc message: -[%rdi indexOfObject:]
100001d3f:	48 89 df	movq	%rbx, %rdi
100001d42:	41 ff d6	callq	*%r14
100001d45:	48 8b 35 ac fd 04 00	movq	327084(%rip), %rsi ## Objc selector ref: removeObjectAtIndex:
100001d4c:	48 89 df	movq	%rbx, %rdi
100001d4f:	48 89 c2	movq	%rax, %rdx
100001d52:	4c 89 f0	movq	%r14, %rax
100001d55:	5b	popq	%rbx
100001d56:	41 5e	popq	%r14
100001d58:	5d	popq	%rbp
100001d59:	ff e0	jmpq	*%rax
100001d5b:	55	pushq	%rbp
100001d5c:	48 89 e5	movq	%rsp, %rbp
100001d5f:	41 56	pushq	%r14
100001d61:	53	pushq	%rbx
100001d62:	48 83 ec 30	subq	$48, %rsp
100001d66:	48 8b 05 93 0b 05 00	movq	330643(%rip), %rax
100001d6d:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
100001d71:	0f 85 a5 00 00 00	jne	0x100001e1c
100001d77:	48 8b 05 6a 0b 05 00	movq	330602(%rip), %rax
100001d7e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100001d82:	48 8b 35 bf f1 04 00	movq	324031(%rip), %rsi ## Objc selector ref: contentView
100001d89:	ff 15 91 ae 03 00	callq	*241297(%rip) ## Objc message: -[%rdi contentView]
100001d8f:	48 85 c0	testq	%rax, %rax
100001d92:	74 2c	je	0x100001dc0
100001d94:	48 8b 15 05 f5 04 00	movq	324869(%rip), %rdx ## Objc selector ref: frame
100001d9b:	48 8d 5d c0	leaq	-64(%rbp), %rbx
100001d9f:	48 89 df	movq	%rbx, %rdi
100001da2:	48 89 c6	movq	%rax, %rsi
100001da5:	e8 38 d7 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100001daa:	f2 0f 10 43 10	movsd	16(%rbx), %xmm0
100001daf:	f2 0f 11 45 e8	movsd	%xmm0, -24(%rbp)
100001db4:	f2 0f 10 43 18	movsd	24(%rbx), %xmm0
100001db9:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
100001dbe:	eb 1b	jmp	0x100001ddb
100001dc0:	0f 57 c0	xorps	%xmm0, %xmm0
100001dc3:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
100001dc7:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100001dcb:	0f 57 c0	xorps	%xmm0, %xmm0
100001dce:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
100001dd3:	0f 57 c0	xorps	%xmm0, %xmm0
100001dd6:	f2 0f 11 45 e8	movsd	%xmm0, -24(%rbp)
100001ddb:	48 8b 3d ae 07 05 00	movq	329646(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
100001de2:	48 8b 35 c7 04 05 00	movq	328903(%rip), %rsi ## Objc selector ref: standardUserDefaults
100001de9:	4c 8b 35 30 ae 03 00	movq	241200(%rip), %r14 ## Objc message: +[NSUserDefaults standardUserDefaults]
100001df0:	41 ff d6	callq	*%r14
100001df3:	48 89 c3	movq	%rax, %rbx
100001df6:	f2 0f 10 45 e8	movsd	-24(%rbp), %xmm0
100001dfb:	f2 0f 10 4d e0	movsd	-32(%rbp), %xmm1
100001e00:	e8 1b d5 02 00	callq	0x10002f320 ## symbol stub for: _NSStringFromSize
100001e05:	48 8b 0d fc 2c 05 00	movq	339196(%rip), %rcx
100001e0c:	48 8b 35 cd 01 05 00	movq	328141(%rip), %rsi ## Objc selector ref: setObject:forKey:
100001e13:	48 89 df	movq	%rbx, %rdi
100001e16:	48 89 c2	movq	%rax, %rdx
100001e19:	41 ff d6	callq	*%r14
100001e1c:	48 83 c4 30	addq	$48, %rsp
100001e20:	5b	popq	%rbx
100001e21:	41 5e	popq	%r14
100001e23:	5d	popq	%rbp
100001e24:	c3	retq
100001e25:	55	pushq	%rbp
100001e26:	48 89 e5	movq	%rsp, %rbp
100001e29:	48 8d 05 b0 b0 03 00	leaq	241840(%rip), %rax ## Objc cfstring ref: @"CSUtilities"
100001e30:	5d	popq	%rbp
100001e31:	c3	retq
100001e32:	55	pushq	%rbp
100001e33:	48 89 e5	movq	%rsp, %rbp
100001e36:	41 57	pushq	%r15
100001e38:	41 56	pushq	%r14
100001e3a:	53	pushq	%rbx
100001e3b:	48 83 ec 18	subq	$24, %rsp
100001e3f:	49 89 fe	movq	%rdi, %r14
100001e42:	48 8d 7d d8	leaq	-40(%rbp), %rdi
100001e46:	4c 89 37	movq	%r14, (%rdi)
100001e49:	48 8b 05 38 09 05 00	movq	330040(%rip), %rax ## Objc class ref: CSUtilities
100001e50:	48 89 47 08	movq	%rax, 8(%rdi)
100001e54:	48 8b 35 c5 06 05 00	movq	329413(%rip), %rsi ## Objc selector ref: windowDidLoad
100001e5b:	e8 7c d6 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] windowDidLoad]
100001e60:	48 8b 35 99 03 05 00	movq	328601(%rip), %rsi ## Objc selector ref: setupUI
100001e67:	4c 89 f7	movq	%r14, %rdi
100001e6a:	ff 15 b0 ad 03 00	callq	*241072(%rip) ## Objc message: -[%rdi setupUI]
100001e70:	48 8b 05 59 0a 05 00	movq	330329(%rip), %rax
100001e77:	41 8b 14 06	movl	(%r14,%rax), %edx
100001e7b:	85 d2	testl	%edx, %edx
100001e7d:	74 1a	je	0x100001e99
100001e7f:	48 8b 05 52 0a 05 00	movq	330322(%rip), %rax
100001e86:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100001e8a:	48 8b 35 57 f5 04 00	movq	324951(%rip), %rsi ## Objc selector ref: indexOfObjectWithSignature:
100001e91:	ff 15 89 ad 03 00	callq	*241033(%rip) ## Objc message: -[%rdi indexOfObjectWithSignature:]
100001e97:	eb 41	jmp	0x100001eda
100001e99:	48 8b 3d f0 06 05 00	movq	329456(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
100001ea0:	48 8b 35 09 04 05 00	movq	328713(%rip), %rsi ## Objc selector ref: standardUserDefaults
100001ea7:	48 8b 1d 72 ad 03 00	movq	241010(%rip), %rbx ## Objc message: +[NSUserDefaults standardUserDefaults]
100001eae:	ff d3	callq	*%rbx
100001eb0:	48 8b 15 49 2c 05 00	movq	339017(%rip), %rdx
100001eb7:	48 8b 35 3a 04 05 00	movq	328762(%rip), %rsi ## Objc selector ref: stringForKey:
100001ebe:	48 89 c7	movq	%rax, %rdi
100001ec1:	ff d3	callq	*%rbx
100001ec3:	48 8b 0d 0e 0a 05 00	movq	330254(%rip), %rcx
100001eca:	49 8b 3c 0e	movq	(%r14,%rcx), %rdi
100001ece:	48 8b 35 0b f5 04 00	movq	324875(%rip), %rsi ## Objc selector ref: indexOfObjectWithIdentifier:
100001ed5:	48 89 c2	movq	%rax, %rdx
100001ed8:	ff d3	callq	*%rbx
100001eda:	31 db	xorl	%ebx, %ebx
100001edc:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
100001ee6:	48 39 c8	cmpq	%rcx, %rax
100001ee9:	48 0f 45 d8	cmovneq	%rax, %rbx
100001eed:	48 8b 05 04 0a 05 00	movq	330244(%rip), %rax
100001ef4:	49 89 0c 06	movq	%rcx, (%r14,%rax)
100001ef8:	48 8b 35 f9 fc 04 00	movq	326905(%rip), %rsi ## Objc selector ref: selectIndex:
100001eff:	4c 89 f7	movq	%r14, %rdi
100001f02:	89 da	movl	%ebx, %edx
100001f04:	ff 15 16 ad 03 00	callq	*240918(%rip) ## Objc message: -[%rdi selectIndex:]
100001f0a:	4c 8b 3d d7 09 05 00	movq	330199(%rip), %r15
100001f11:	48 83 fb 04	cmpq	$4, %rbx
100001f15:	75 16	jne	0x100001f2d
100001f17:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100001f1b:	48 8b 35 86 fe 04 00	movq	327302(%rip), %rsi ## Objc selector ref: setDisplaysWhenScreenProfileChanges:
100001f22:	ba 01 00 00 00	movl	$1, %edx
100001f27:	ff 15 f3 ac 03 00	callq	*240883(%rip) ## Objc message: -[%rdi setDisplaysWhenScreenProfileChanges:]
100001f2d:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100001f31:	48 8b 35 78 f6 04 00	movq	325240(%rip), %rsi ## Objc selector ref: isVisible
100001f38:	ff 15 e2 ac 03 00	callq	*240866(%rip) ## Objc message: -[%rdi isVisible]
100001f3e:	84 c0	testb	%al, %al
100001f40:	75 11	jne	0x100001f53
100001f42:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100001f46:	48 8b 35 fb ee 04 00	movq	323323(%rip), %rsi ## Objc selector ref: center
100001f4d:	ff 15 cd ac 03 00	callq	*240845(%rip) ## Objc message: -[%rdi center]
100001f53:	48 83 c4 18	addq	$24, %rsp
100001f57:	5b	popq	%rbx
100001f58:	41 5e	popq	%r14
100001f5a:	41 5f	popq	%r15
100001f5c:	5d	popq	%rbp
100001f5d:	c3	retq
100001f5e:	55	pushq	%rbp
100001f5f:	48 89 e5	movq	%rsp, %rbp
100001f62:	41 56	pushq	%r14
100001f64:	53	pushq	%rbx
100001f65:	48 89 fb	movq	%rdi, %rbx
100001f68:	48 8b 35 29 04 05 00	movq	328745(%rip), %rsi ## Objc selector ref: tag
100001f6f:	4c 8b 35 aa ac 03 00	movq	240810(%rip), %r14 ## Objc message: -[%rdi tag]
100001f76:	48 89 d7	movq	%rdx, %rdi
100001f79:	41 ff d6	callq	*%r14
100001f7c:	48 8b 35 75 fc 04 00	movq	326773(%rip), %rsi ## Objc selector ref: selectIndex:
100001f83:	48 89 df	movq	%rbx, %rdi
100001f86:	89 c2	movl	%eax, %edx
100001f88:	4c 89 f0	movq	%r14, %rax
100001f8b:	5b	popq	%rbx
100001f8c:	41 5e	popq	%r14
100001f8e:	5d	popq	%rbp
100001f8f:	ff e0	jmpq	*%rax
100001f91:	55	pushq	%rbp
100001f92:	48 89 e5	movq	%rsp, %rbp
100001f95:	41 57	pushq	%r15
100001f97:	41 56	pushq	%r14
100001f99:	41 55	pushq	%r13
100001f9b:	41 54	pushq	%r12
100001f9d:	53	pushq	%rbx
100001f9e:	50	pushq	%rax
100001f9f:	48 89 cb	movq	%rcx, %rbx
100001fa2:	49 89 ff	movq	%rdi, %r15
100001fa5:	4c 8b 25 2c 09 05 00	movq	330028(%rip), %r12
100001fac:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
100001fb0:	48 8b 35 29 f4 04 00	movq	324649(%rip), %rsi ## Objc selector ref: indexOfObjectWithIdentifier:
100001fb7:	4c 8b 35 62 ac 03 00	movq	240738(%rip), %r14 ## Objc message: -[%rdi indexOfObjectWithIdentifier:]
100001fbe:	48 89 ca	movq	%rcx, %rdx
100001fc1:	41 ff d6	callq	*%r14
100001fc4:	48 89 45 d0	movq	%rax, -48(%rbp)
100001fc8:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100001fcc:	48 8b 35 8d f8 04 00	movq	325773(%rip), %rsi ## Objc selector ref: objectAtIndex:
100001fd3:	48 89 c2	movq	%rax, %rdx
100001fd6:	41 ff d6	callq	*%r14
100001fd9:	49 89 c4	movq	%rax, %r12
100001fdc:	48 8b 3d c5 05 05 00	movq	329157(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSToolbarItem
100001fe3:	e8 d6 d4 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100001fe8:	48 8b 35 91 f4 04 00	movq	324753(%rip), %rsi ## Objc selector ref: initWithItemIdentifier:
100001fef:	48 89 c7	movq	%rax, %rdi
100001ff2:	48 89 da	movq	%rbx, %rdx
100001ff5:	41 ff d6	callq	*%r14
100001ff8:	48 89 c7	movq	%rax, %rdi
100001ffb:	e8 ca d4 02 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100002000:	48 89 c3	movq	%rax, %rbx
100002003:	4c 8b 2d 76 f0 04 00	movq	323702(%rip), %r13 ## Objc selector ref: description
10000200a:	4c 89 e7	movq	%r12, %rdi
10000200d:	4c 89 ee	movq	%r13, %rsi
100002010:	41 ff d6	callq	*%r14
100002013:	48 8b 35 2e ff 04 00	movq	327470(%rip), %rsi ## Objc selector ref: setLabel:
10000201a:	48 89 df	movq	%rbx, %rdi
10000201d:	48 89 c2	movq	%rax, %rdx
100002020:	41 ff d6	callq	*%r14
100002023:	4c 89 e7	movq	%r12, %rdi
100002026:	4c 89 ee	movq	%r13, %rsi
100002029:	41 ff d6	callq	*%r14
10000202c:	48 8b 35 dd ff 04 00	movq	327645(%rip), %rsi ## Objc selector ref: setPaletteLabel:
100002033:	48 89 df	movq	%rbx, %rdi
100002036:	48 89 c2	movq	%rax, %rdx
100002039:	41 ff d6	callq	*%r14
10000203c:	48 8b 35 f5 f2 04 00	movq	324341(%rip), %rsi ## Objc selector ref: icon
100002043:	4c 89 e7	movq	%r12, %rdi
100002046:	41 ff d6	callq	*%r14
100002049:	48 8b 35 58 fe 04 00	movq	327256(%rip), %rsi ## Objc selector ref: setImage:
100002050:	48 89 df	movq	%rbx, %rdi
100002053:	48 89 c2	movq	%rax, %rdx
100002056:	41 ff d6	callq	*%r14
100002059:	48 8b 35 a0 00 05 00	movq	327840(%rip), %rsi ## Objc selector ref: setTarget:
100002060:	48 89 df	movq	%rbx, %rdi
100002063:	4c 89 fa	movq	%r15, %rdx
100002066:	41 ff d6	callq	*%r14
100002069:	48 8b 15 c0 fb 04 00	movq	326592(%rip), %rdx ## Objc selector ref: selectToolbarItem:
100002070:	48 8b 35 01 fc 04 00	movq	326657(%rip), %rsi ## Objc selector ref: setAction:
100002077:	48 89 df	movq	%rbx, %rdi
10000207a:	41 ff d6	callq	*%r14
10000207d:	48 8b 35 74 00 05 00	movq	327796(%rip), %rsi ## Objc selector ref: setTag:
100002084:	48 89 df	movq	%rbx, %rdi
100002087:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000208b:	41 ff d6	callq	*%r14
10000208e:	48 89 d8	movq	%rbx, %rax
100002091:	48 83 c4 08	addq	$8, %rsp
100002095:	5b	popq	%rbx
100002096:	41 5c	popq	%r12
100002098:	41 5d	popq	%r13
10000209a:	41 5e	popq	%r14
10000209c:	41 5f	popq	%r15
10000209e:	5d	popq	%rbp
10000209f:	c3	retq
1000020a0:	55	pushq	%rbp
1000020a1:	48 89 e5	movq	%rsp, %rbp
1000020a4:	41 57	pushq	%r15
1000020a6:	41 56	pushq	%r14
1000020a8:	41 55	pushq	%r13
1000020aa:	41 54	pushq	%r12
1000020ac:	53	pushq	%rbx
1000020ad:	48 83 ec 18	subq	$24, %rsp
1000020b1:	49 89 fe	movq	%rdi, %r14
1000020b4:	48 8b 3d f5 04 05 00	movq	328949(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
1000020bb:	48 8b 35 56 ec 04 00	movq	322646(%rip), %rsi ## Objc selector ref: array
1000020c2:	4c 8b 2d 57 ab 03 00	movq	240471(%rip), %r13 ## Objc message: +[NSArray array]
1000020c9:	41 ff d5	callq	*%r13
1000020cc:	48 89 c3	movq	%rax, %rbx
1000020cf:	48 8b 05 02 08 05 00	movq	329730(%rip), %rax
1000020d6:	48 8b 35 e3 ee 04 00	movq	323299(%rip), %rsi ## Objc selector ref: count
1000020dd:	49 8b 3c 06	movq	(%r14,%rax), %rdi
1000020e1:	41 ff d5	callq	*%r13
1000020e4:	48 85 c0	testq	%rax, %rax
1000020e7:	74 61	je	0x10000214a
1000020e9:	48 8b 05 58 f2 04 00	movq	324184(%rip), %rax ## Objc selector ref: identifier
1000020f0:	48 89 45 c8	movq	%rax, -56(%rbp)
1000020f4:	48 8b 05 25 ec 04 00	movq	322597(%rip), %rax ## Objc selector ref: arrayByAddingObject:
1000020fb:	48 89 45 d0	movq	%rax, -48(%rbp)
1000020ff:	45 31 e4	xorl	%r12d, %r12d
100002102:	4c 8b 3d cf 07 05 00	movq	329679(%rip), %r15
100002109:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
10000210d:	48 8b 35 4c f7 04 00	movq	325452(%rip), %rsi ## Objc selector ref: objectAtIndex:
100002114:	4c 89 e2	movq	%r12, %rdx
100002117:	41 ff d5	callq	*%r13
10000211a:	48 89 c7	movq	%rax, %rdi
10000211d:	48 8b 75 c8	movq	-56(%rbp), %rsi
100002121:	41 ff d5	callq	*%r13
100002124:	48 89 df	movq	%rbx, %rdi
100002127:	48 8b 75 d0	movq	-48(%rbp), %rsi
10000212b:	48 89 c2	movq	%rax, %rdx
10000212e:	41 ff d5	callq	*%r13
100002131:	48 89 c3	movq	%rax, %rbx
100002134:	49 ff c4	incq	%r12
100002137:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
10000213b:	48 8b 35 7e ee 04 00	movq	323198(%rip), %rsi ## Objc selector ref: count
100002142:	41 ff d5	callq	*%r13
100002145:	49 39 c4	cmpq	%rax, %r12
100002148:	72 b8	jb	0x100002102
10000214a:	48 89 d8	movq	%rbx, %rax
10000214d:	48 83 c4 18	addq	$24, %rsp
100002151:	5b	popq	%rbx
100002152:	41 5c	popq	%r12
100002154:	41 5d	popq	%r13
100002156:	41 5e	popq	%r14
100002158:	41 5f	popq	%r15
10000215a:	5d	popq	%rbp
10000215b:	c3	retq
10000215c:	55	pushq	%rbp
10000215d:	48 89 e5	movq	%rsp, %rbp
100002160:	48 8b 35 91 02 05 00	movq	328337(%rip), %rsi ## Objc selector ref: toolbarDefaultItemIdentifiers:
100002167:	5d	popq	%rbp
100002168:	ff 25 b2 aa 03 00	jmpq	*240306(%rip) ## Objc message: -[%rdi toolbarDefaultItemIdentifiers:]
10000216e:	55	pushq	%rbp
10000216f:	48 89 e5	movq	%rsp, %rbp
100002172:	48 8b 35 7f 02 05 00	movq	328319(%rip), %rsi ## Objc selector ref: toolbarDefaultItemIdentifiers:
100002179:	5d	popq	%rbp
10000217a:	ff 25 a0 aa 03 00	jmpq	*240288(%rip) ## Objc message: -[%rdi toolbarDefaultItemIdentifiers:]
100002180:	55	pushq	%rbp
100002181:	48 89 e5	movq	%rsp, %rbp
100002184:	41 57	pushq	%r15
100002186:	41 56	pushq	%r14
100002188:	41 55	pushq	%r13
10000218a:	41 54	pushq	%r12
10000218c:	53	pushq	%rbx
10000218d:	48 83 ec 28	subq	$40, %rsp
100002191:	89 55 d4	movl	%edx, -44(%rbp)
100002194:	48 8b 3d fd 2a 05 00	movq	338685(%rip), %rdi
10000219b:	48 8b 35 1e ee 04 00	movq	323102(%rip), %rsi ## Objc selector ref: count
1000021a2:	ff 15 78 aa 03 00	callq	*240248(%rip) ## Objc message: -[%rdi count]
1000021a8:	48 85 c0	testq	%rax, %rax
1000021ab:	0f 84 81 00 00 00	je	0x100002232
1000021b1:	49 89 c7	movq	%rax, %r15
1000021b4:	48 8b 05 5d ee 04 00	movq	323165(%rip), %rax ## Objc selector ref: currentModule
1000021bb:	48 89 45 c8	movq	%rax, -56(%rbp)
1000021bf:	4c 8b 2d 92 00 05 00	movq	327826(%rip), %r13 ## Objc selector ref: signature
1000021c6:	49 8d 47 ff	leaq	-1(%r15), %rax
1000021ca:	48 89 45 b8	movq	%rax, -72(%rbp)
1000021ce:	48 8b 05 43 fa 04 00	movq	326211(%rip), %rax ## Objc selector ref: selectModule:
1000021d5:	48 89 45 c0	movq	%rax, -64(%rbp)
1000021d9:	45 31 e4	xorl	%r12d, %r12d
1000021dc:	4c 8b 35 3d aa 03 00	movq	240189(%rip), %r14 ## Objc message: -[%rdi selectModule:]
1000021e3:	48 8b 3d ae 2a 05 00	movq	338606(%rip), %rdi
1000021ea:	48 8b 35 6f f6 04 00	movq	325231(%rip), %rsi ## Objc selector ref: objectAtIndex:
1000021f1:	4c 89 e2	movq	%r12, %rdx
1000021f4:	41 ff d6	callq	*%r14
1000021f7:	48 89 c3	movq	%rax, %rbx
1000021fa:	48 89 c7	movq	%rax, %rdi
1000021fd:	48 8b 75 c8	movq	-56(%rbp), %rsi
100002201:	41 ff d6	callq	*%r14
100002204:	48 89 c7	movq	%rax, %rdi
100002207:	4c 89 ee	movq	%r13, %rsi
10000220a:	41 ff d6	callq	*%r14
10000220d:	3b 45 d4	cmpl	-44(%rbp), %eax
100002210:	74 13	je	0x100002225
100002212:	4c 39 65 b8	cmpq	%r12, -72(%rbp)
100002216:	75 12	jne	0x10000222a
100002218:	48 89 df	movq	%rbx, %rdi
10000221b:	48 8b 75 c0	movq	-64(%rbp), %rsi
10000221f:	8b 55 d4	movl	-44(%rbp), %edx
100002222:	41 ff d6	callq	*%r14
100002225:	48 85 db	testq	%rbx, %rbx
100002228:	75 31	jne	0x10000225b
10000222a:	49 ff c4	incq	%r12
10000222d:	4d 39 e7	cmpq	%r12, %r15
100002230:	75 b1	jne	0x1000021e3
100002232:	48 8b 3d 3f 03 05 00	movq	328511(%rip), %rdi ## Objc class ref: CSUtilities
100002239:	e8 80 d2 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10000223e:	48 8b 35 83 f2 04 00	movq	324227(%rip), %rsi ## Objc selector ref: initWithWindow:signature:
100002245:	45 31 ff	xorl	%r15d, %r15d
100002248:	48 89 c7	movq	%rax, %rdi
10000224b:	31 d2	xorl	%edx, %edx
10000224d:	8b 4d d4	movl	-44(%rbp), %ecx
100002250:	ff 15 ca a9 03 00	callq	*240074(%rip) ## Objc message: +[CSUtilities initWithWindow:signature:]
100002256:	48 89 c3	movq	%rax, %rbx
100002259:	eb 1a	jmp	0x100002275
10000225b:	48 89 df	movq	%rbx, %rdi
10000225e:	48 8b 75 c8	movq	-56(%rbp), %rsi
100002262:	41 ff d6	callq	*%r14
100002265:	48 8b 35 14 f5 04 00	movq	324884(%rip), %rsi ## Objc selector ref: module
10000226c:	48 89 c7	movq	%rax, %rdi
10000226f:	41 ff d6	callq	*%r14
100002272:	49 89 c7	movq	%rax, %r15
100002275:	48 8b 35 d4 ff 04 00	movq	327636(%rip), %rsi ## Objc selector ref: showWindow:
10000227c:	48 89 df	movq	%rbx, %rdi
10000227f:	31 d2	xorl	%edx, %edx
100002281:	ff 15 99 a9 03 00	callq	*240025(%rip) ## Objc message: -[%rdi showWindow:]
100002287:	4c 89 f8	movq	%r15, %rax
10000228a:	48 83 c4 28	addq	$40, %rsp
10000228e:	5b	popq	%rbx
10000228f:	41 5c	popq	%r12
100002291:	41 5d	popq	%r13
100002293:	41 5e	popq	%r14
100002295:	41 5f	popq	%r15
100002297:	5d	popq	%rbp
100002298:	c3	retq
100002299:	55	pushq	%rbp
10000229a:	48 89 e5	movq	%rsp, %rbp
10000229d:	53	pushq	%rbx
10000229e:	50	pushq	%rax
10000229f:	48 89 d3	movq	%rdx, %rbx
1000022a2:	e8 17 d2 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000022a7:	48 8b 35 ea f1 04 00	movq	324074(%rip), %rsi ## Objc selector ref: initWithPath:
1000022ae:	48 89 c7	movq	%rax, %rdi
1000022b1:	48 89 da	movq	%rbx, %rdx
1000022b4:	ff 15 66 a9 03 00	callq	*239974(%rip) ## Objc message: -[%rdi initWithPath:]
1000022ba:	48 89 c7	movq	%rax, %rdi
1000022bd:	48 83 c4 08	addq	$8, %rsp
1000022c1:	5b	popq	%rbx
1000022c2:	5d	popq	%rbp
1000022c3:	e9 02 d2 02 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
1000022c8:	55	pushq	%rbp
1000022c9:	48 89 e5	movq	%rsp, %rbp
1000022cc:	41 57	pushq	%r15
1000022ce:	41 56	pushq	%r14
1000022d0:	53	pushq	%rbx
1000022d1:	48 83 ec 18	subq	$24, %rsp
1000022d5:	49 89 d6	movq	%rdx, %r14
1000022d8:	48 8d 45 d8	leaq	-40(%rbp), %rax
1000022dc:	48 89 38	movq	%rdi, (%rax)
1000022df:	48 8b 0d aa 04 05 00	movq	328874(%rip), %rcx ## Objc class ref: CSUtilityWrapper
1000022e6:	48 89 48 08	movq	%rcx, 8(%rax)
1000022ea:	48 8b 35 1f f1 04 00	movq	323871(%rip), %rsi ## Objc selector ref: init
1000022f1:	48 89 c7	movq	%rax, %rdi
1000022f4:	e8 e3 d1 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
1000022f9:	48 85 c0	testq	%rax, %rax
1000022fc:	74 54	je	0x100002352
1000022fe:	48 89 c3	movq	%rax, %rbx
100002301:	48 8b 3d 98 02 05 00	movq	328344(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100002308:	48 8b 35 f1 ea 04 00	movq	322289(%rip), %rsi ## Objc selector ref: bundleWithPath:
10000230f:	4c 89 f2	movq	%r14, %rdx
100002312:	ff 15 08 a9 03 00	callq	*239880(%rip) ## Objc message: +[NSBundle bundleWithPath:]
100002318:	48 85 c0	testq	%rax, %rax
10000231b:	74 35	je	0x100002352
10000231d:	49 89 c6	movq	%rax, %r14
100002320:	4c 8b 3d 71 f6 04 00	movq	325233(%rip), %r15 ## Objc selector ref: principalClass
100002327:	48 89 c7	movq	%rax, %rdi
10000232a:	4c 89 fe	movq	%r15, %rsi
10000232d:	ff 15 ed a8 03 00	callq	*239853(%rip) ## Objc message: -[%rdi principalClass]
100002333:	48 85 c0	testq	%rax, %rax
100002336:	74 1a	je	0x100002352
100002338:	4c 89 f7	movq	%r14, %rdi
10000233b:	4c 89 fe	movq	%r15, %rsi
10000233e:	ff 15 dc a8 03 00	callq	*239836(%rip) ## Objc message: -[%rdi principalClass]
100002344:	48 89 c7	movq	%rax, %rdi
100002347:	e8 78 d1 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10000234c:	48 89 43 38	movq	%rax, 56(%rbx)
100002350:	eb 02	jmp	0x100002354
100002352:	31 db	xorl	%ebx, %ebx
100002354:	48 89 d8	movq	%rbx, %rax
100002357:	48 83 c4 18	addq	$24, %rsp
10000235b:	5b	popq	%rbx
10000235c:	41 5e	popq	%r14
10000235e:	41 5f	popq	%r15
100002360:	5d	popq	%rbp
100002361:	c3	retq
100002362:	55	pushq	%rbp
100002363:	48 89 e5	movq	%rsp, %rbp
100002366:	41 56	pushq	%r14
100002368:	53	pushq	%rbx
100002369:	48 83 ec 10	subq	$16, %rsp
10000236d:	48 89 fb	movq	%rdi, %rbx
100002370:	48 8b 7f 38	movq	56(%rdi), %rdi
100002374:	4c 8b 35 dd a8 03 00	movq	239837(%rip), %r14 ## literal pool symbol address: _objc_release
10000237b:	41 ff d6	callq	*%r14
10000237e:	48 8b 7b 08	movq	8(%rbx), %rdi
100002382:	41 ff d6	callq	*%r14
100002385:	48 8b 7b 10	movq	16(%rbx), %rdi
100002389:	41 ff d6	callq	*%r14
10000238c:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100002390:	48 89 1f	movq	%rbx, (%rdi)
100002393:	48 8b 05 f6 03 05 00	movq	328694(%rip), %rax ## Objc class ref: CSUtilityWrapper
10000239a:	48 89 47 08	movq	%rax, 8(%rdi)
10000239e:	48 8b 35 ab ec 04 00	movq	322731(%rip), %rsi ## Objc selector ref: dealloc
1000023a5:	e8 32 d1 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
1000023aa:	48 83 c4 10	addq	$16, %rsp
1000023ae:	5b	popq	%rbx
1000023af:	41 5e	popq	%r14
1000023b1:	5d	popq	%rbp
1000023b2:	c3	retq
1000023b3:	55	pushq	%rbp
1000023b4:	48 89 e5	movq	%rsp, %rbp
1000023b7:	53	pushq	%rbx
1000023b8:	50	pushq	%rax
1000023b9:	48 8b 1d e0 01 05 00	movq	328160(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000023c0:	48 8b 7f 38	movq	56(%rdi), %rdi
1000023c4:	e8 1f d1 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
1000023c9:	48 8b 35 20 ea 04 00	movq	322080(%rip), %rsi ## Objc selector ref: bundleForClass:
1000023d0:	48 89 df	movq	%rbx, %rdi
1000023d3:	48 89 c2	movq	%rax, %rdx
1000023d6:	48 83 c4 08	addq	$8, %rsp
1000023da:	5b	popq	%rbx
1000023db:	5d	popq	%rbp
1000023dc:	ff 25 3e a8 03 00	jmpq	*239678(%rip) ## Objc message: +[NSBundle bundleForClass:]
1000023e2:	55	pushq	%rbp
1000023e3:	48 89 e5	movq	%rsp, %rbp
1000023e6:	53	pushq	%rbx
1000023e7:	50	pushq	%rax
1000023e8:	48 8b 35 f9 e9 04 00	movq	322041(%rip), %rsi ## Objc selector ref: bundle
1000023ef:	48 8b 1d 2a a8 03 00	movq	239658(%rip), %rbx ## Objc message: -[%rdi bundle]
1000023f6:	ff d3	callq	*%rbx
1000023f8:	48 8b 35 09 f0 04 00	movq	323593(%rip), %rsi ## Objc selector ref: infoDictionary
1000023ff:	48 89 c7	movq	%rax, %rdi
100002402:	ff d3	callq	*%rbx
100002404:	48 8b 35 6d f4 04 00	movq	324717(%rip), %rsi ## Objc selector ref: objectForKey:
10000240b:	48 8d 15 ee aa 03 00	leaq	240366(%rip), %rdx ## Objc cfstring ref: @"NSMainNibFile"
100002412:	48 89 c7	movq	%rax, %rdi
100002415:	48 89 d8	movq	%rbx, %rax
100002418:	48 83 c4 08	addq	$8, %rsp
10000241c:	5b	popq	%rbx
10000241d:	5d	popq	%rbp
10000241e:	ff e0	jmpq	*%rax
100002420:	55	pushq	%rbp
100002421:	48 89 e5	movq	%rsp, %rbp
100002424:	53	pushq	%rbx
100002425:	50	pushq	%rax
100002426:	48 8b 35 bb e9 04 00	movq	321979(%rip), %rsi ## Objc selector ref: bundle
10000242d:	48 8b 1d ec a7 03 00	movq	239596(%rip), %rbx ## Objc message: -[%rdi bundle]
100002434:	ff d3	callq	*%rbx
100002436:	48 8b 35 bb e9 04 00	movq	321979(%rip), %rsi ## Objc selector ref: bundleIdentifier
10000243d:	48 89 c7	movq	%rax, %rdi
100002440:	48 89 d8	movq	%rbx, %rax
100002443:	48 83 c4 08	addq	$8, %rsp
100002447:	5b	popq	%rbx
100002448:	5d	popq	%rbp
100002449:	ff e0	jmpq	*%rax
10000244b:	55	pushq	%rbp
10000244c:	48 89 e5	movq	%rsp, %rbp
10000244f:	53	pushq	%rbx
100002450:	50	pushq	%rax
100002451:	48 8b 35 90 e9 04 00	movq	321936(%rip), %rsi ## Objc selector ref: bundle
100002458:	48 8b 1d c1 a7 03 00	movq	239553(%rip), %rbx ## Objc message: -[%rdi bundle]
10000245f:	ff d3	callq	*%rbx
100002461:	48 8b 35 08 f4 04 00	movq	324616(%rip), %rsi ## Objc selector ref: objectForInfoDictionaryKey:
100002468:	48 8d 15 b1 aa 03 00	leaq	240305(%rip), %rdx ## Objc cfstring ref: @"CFBundleSignature"
10000246f:	48 89 c7	movq	%rax, %rdi
100002472:	ff d3	callq	*%rbx
100002474:	48 8b 35 05 f2 04 00	movq	324101(%rip), %rsi ## Objc selector ref: lossyCString
10000247b:	48 89 c7	movq	%rax, %rdi
10000247e:	ff d3	callq	*%rbx
100002480:	48 85 c0	testq	%rax, %rax
100002483:	74 06	je	0x10000248b
100002485:	8b 00	movl	(%rax), %eax
100002487:	0f c8	bswapl	%eax
100002489:	eb 02	jmp	0x10000248d
10000248b:	31 c0	xorl	%eax, %eax
10000248d:	48 83 c4 08	addq	$8, %rsp
100002491:	5b	popq	%rbx
100002492:	5d	popq	%rbp
100002493:	c3	retq
100002494:	55	pushq	%rbp
100002495:	48 89 e5	movq	%rsp, %rbp
100002498:	53	pushq	%rbx
100002499:	50	pushq	%rax
10000249a:	48 8b 35 47 e9 04 00	movq	321863(%rip), %rsi ## Objc selector ref: bundle
1000024a1:	48 8b 1d 78 a7 03 00	movq	239480(%rip), %rbx ## Objc message: -[%rdi bundle]
1000024a8:	ff d3	callq	*%rbx
1000024aa:	48 8b 35 57 ef 04 00	movq	323415(%rip), %rsi ## Objc selector ref: infoDictionary
1000024b1:	48 89 c7	movq	%rax, %rdi
1000024b4:	ff d3	callq	*%rbx
1000024b6:	48 8b 35 bb f3 04 00	movq	324539(%rip), %rsi ## Objc selector ref: objectForKey:
1000024bd:	48 8d 15 7c aa 03 00	leaq	240252(%rip), %rdx ## Objc cfstring ref: @"CSUtilSortOrder"
1000024c4:	48 89 c7	movq	%rax, %rdi
1000024c7:	ff d3	callq	*%rbx
1000024c9:	48 85 c0	testq	%rax, %rax
1000024cc:	74 16	je	0x1000024e4
1000024ce:	48 8b 35 bb ed 04 00	movq	323003(%rip), %rsi ## Objc selector ref: floatValue
1000024d5:	48 89 c7	movq	%rax, %rdi
1000024d8:	48 83 c4 08	addq	$8, %rsp
1000024dc:	5b	popq	%rbx
1000024dd:	5d	popq	%rbp
1000024de:	ff 25 3c a7 03 00	jmpq	*239420(%rip) ## Objc message: -[%rdi floatValue]
1000024e4:	f3 0f 10 05 64 5a 03 00	movss	219748(%rip), %xmm0
1000024ec:	48 83 c4 08	addq	$8, %rsp
1000024f0:	5b	popq	%rbx
1000024f1:	5d	popq	%rbp
1000024f2:	c3	retq
1000024f3:	55	pushq	%rbp
1000024f4:	48 89 e5	movq	%rsp, %rbp
1000024f7:	53	pushq	%rbx
1000024f8:	50	pushq	%rax
1000024f9:	48 8b 35 e8 e8 04 00	movq	321768(%rip), %rsi ## Objc selector ref: bundle
100002500:	48 8b 1d 19 a7 03 00	movq	239385(%rip), %rbx ## Objc message: -[%rdi bundle]
100002507:	ff d3	callq	*%rbx
100002509:	48 8b 35 50 f1 04 00	movq	323920(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100002510:	48 8d 15 49 aa 03 00	leaq	240201(%rip), %rdx ## Objc cfstring ref: @"CFBundleName"
100002517:	48 8d 0d 82 a9 03 00	leaq	240002(%rip), %rcx ## Objc cfstring ref: @""
10000251e:	48 89 c7	movq	%rax, %rdi
100002521:	45 31 c0	xorl	%r8d, %r8d
100002524:	48 89 d8	movq	%rbx, %rax
100002527:	48 83 c4 08	addq	$8, %rsp
10000252b:	5b	popq	%rbx
10000252c:	5d	popq	%rbp
10000252d:	ff e0	jmpq	*%rax
10000252f:	55	pushq	%rbp
100002530:	48 89 e5	movq	%rsp, %rbp
100002533:	41 57	pushq	%r15
100002535:	41 56	pushq	%r14
100002537:	41 54	pushq	%r12
100002539:	53	pushq	%rbx
10000253a:	48 83 ec 20	subq	$32, %rsp
10000253e:	48 89 fb	movq	%rdi, %rbx
100002541:	48 83 7f 08 00	cmpq	$0, 8(%rdi)
100002546:	0f 85 2f 01 00 00	jne	0x10000267b
10000254c:	4c 8b 3d 4d 00 05 00	movq	327757(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSBundle
100002553:	4c 8b 35 96 f1 04 00	movq	323990(%rip), %r14 ## Objc selector ref: mainNibName
10000255a:	4c 8b 25 bf a6 03 00	movq	239295(%rip), %r12 ## Objc message: +[NSBundle mainNibName]
100002561:	48 89 df	movq	%rbx, %rdi
100002564:	4c 89 f6	movq	%r14, %rsi
100002567:	41 ff d4	callq	*%r12
10000256a:	48 8b 4b 38	movq	56(%rbx), %rcx
10000256e:	48 8b 35 ab f0 04 00	movq	323755(%rip), %rsi ## Objc selector ref: loadNibNamed:owner:
100002575:	4c 89 ff	movq	%r15, %rdi
100002578:	48 89 c2	movq	%rax, %rdx
10000257b:	41 ff d4	callq	*%r12
10000257e:	84 c0	testb	%al, %al
100002580:	75 1d	jne	0x10000259f
100002582:	48 89 df	movq	%rbx, %rdi
100002585:	4c 89 f6	movq	%r14, %rsi
100002588:	ff 15 92 a6 03 00	callq	*239250(%rip) ## Objc message: -[%rdi loadNibNamed:owner:]
10000258e:	48 8d 3d eb a9 03 00	leaq	240107(%rip), %rdi ## Objc cfstring ref: @"CSUtility Module failed to load nib %@"
100002595:	48 89 c6	movq	%rax, %rsi
100002598:	31 c0	xorl	%eax, %eax
10000259a:	e8 5d cd 02 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10000259f:	48 8b 7b 38	movq	56(%rbx), %rdi
1000025a3:	48 8b 35 06 ff 04 00	movq	327430(%rip), %rsi ## Objc selector ref: valueForKey:
1000025aa:	48 8d 15 ef a9 03 00	leaq	240111(%rip), %rdx ## Objc cfstring ref: @"view"
1000025b1:	ff 15 69 a6 03 00	callq	*239209(%rip) ## Objc message: -[%rdi valueForKey:]
1000025b7:	48 89 c7	movq	%rax, %rdi
1000025ba:	ff 15 a0 a6 03 00	callq	*239264(%rip) ## literal pool symbol address: _objc_retain
1000025c0:	48 89 43 08	movq	%rax, 8(%rbx)
1000025c4:	4c 8d 73 18	leaq	24(%rbx), %r14
1000025c8:	48 85 c0	testq	%rax, %rax
1000025cb:	74 19	je	0x1000025e6
1000025cd:	48 8b 15 cc ec 04 00	movq	322764(%rip), %rdx ## Objc selector ref: frame
1000025d4:	48 8d 7d c0	leaq	-64(%rbp), %rdi
1000025d8:	48 89 c6	movq	%rax, %rsi
1000025db:	e8 02 cf 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
1000025e0:	48 8b 7b 08	movq	8(%rbx), %rdi
1000025e4:	eb 0d	jmp	0x1000025f3
1000025e6:	0f 57 c0	xorps	%xmm0, %xmm0
1000025e9:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
1000025ed:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
1000025f1:	31 ff	xorl	%edi, %edi
1000025f3:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
1000025f7:	41 0f 11 06	movups	%xmm0, (%r14)
1000025fb:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
1000025ff:	0f 11 43 28	movups	%xmm0, 40(%rbx)
100002603:	4c 8b 35 5e e7 04 00	movq	321374(%rip), %r14 ## Objc selector ref: autoresizingMask
10000260a:	4c 89 f6	movq	%r14, %rsi
10000260d:	ff 15 0d a6 03 00	callq	*239117(%rip) ## Objc message: -[%rdi autoresizingMask]
100002613:	a8 10	testb	$16, %al
100002615:	74 0e	je	0x100002625
100002617:	48 b8 00 00 00 00 00 40 8f 40	movabsq	$4652007308841189376, %rax
100002621:	48 89 43 30	movq	%rax, 48(%rbx)
100002625:	48 8b 7b 08	movq	8(%rbx), %rdi
100002629:	4c 89 f6	movq	%r14, %rsi
10000262c:	ff 15 ee a5 03 00	callq	*239086(%rip) ## Objc message: -[%rdi autoresizingMask]
100002632:	a8 02	testb	$2, %al
100002634:	74 11	je	0x100002647
100002636:	48 8d 43 28	leaq	40(%rbx), %rax
10000263a:	48 b9 00 00 00 00 00 40 8f 40	movabsq	$4652007308841189376, %rcx
100002644:	48 89 08	movq	%rcx, (%rax)
100002647:	48 8b 7b 08	movq	8(%rbx), %rdi
10000264b:	48 8b 35 0e fd 04 00	movq	326926(%rip), %rsi ## Objc selector ref: superview
100002652:	ff 15 c8 a5 03 00	callq	*239048(%rip) ## Objc message: -[%rdi superview]
100002658:	48 85 c0	testq	%rax, %rax
10000265b:	74 1e	je	0x10000267b
10000265d:	48 8b 7b 08	movq	8(%rbx), %rdi
100002661:	48 8b 35 80 f4 04 00	movq	324736(%rip), %rsi ## Objc selector ref: removeFromSuperview
100002668:	41 ff d4	callq	*%r12
10000266b:	48 8b 7b 08	movq	8(%rbx), %rdi
10000266f:	48 8b 35 72 f6 04 00	movq	325234(%rip), %rsi ## Objc selector ref: setBorderType:
100002676:	31 d2	xorl	%edx, %edx
100002678:	41 ff d4	callq	*%r12
10000267b:	48 8b 43 08	movq	8(%rbx), %rax
10000267f:	48 83 c4 20	addq	$32, %rsp
100002683:	5b	popq	%rbx
100002684:	41 5c	popq	%r12
100002686:	41 5e	popq	%r14
100002688:	41 5f	popq	%r15
10000268a:	5d	popq	%rbp
10000268b:	c3	retq
10000268c:	55	pushq	%rbp
10000268d:	48 89 e5	movq	%rsp, %rbp
100002690:	41 56	pushq	%r14
100002692:	53	pushq	%rbx
100002693:	48 89 fb	movq	%rdi, %rbx
100002696:	48 8b 7f 38	movq	56(%rdi), %rdi
10000269a:	4c 8b 35 27 fe 04 00	movq	327207(%rip), %r14 ## Objc selector ref: viewMinSize
1000026a1:	4c 89 f6	movq	%r14, %rsi
1000026a4:	e8 4b ce 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000026a9:	84 c0	testb	%al, %al
1000026ab:	74 0f	je	0x1000026bc
1000026ad:	48 8b 7b 38	movq	56(%rbx), %rdi
1000026b1:	4c 89 f6	movq	%r14, %rsi
1000026b4:	ff 15 66 a5 03 00	callq	*238950(%rip) ## Objc message: -[%rdi viewMinSize]
1000026ba:	eb 0a	jmp	0x1000026c6
1000026bc:	f2 0f 10 43 18	movsd	24(%rbx), %xmm0
1000026c1:	f2 0f 10 4b 20	movsd	32(%rbx), %xmm1
1000026c6:	5b	popq	%rbx
1000026c7:	41 5e	popq	%r14
1000026c9:	5d	popq	%rbp
1000026ca:	c3	retq
1000026cb:	55	pushq	%rbp
1000026cc:	48 89 e5	movq	%rsp, %rbp
1000026cf:	41 56	pushq	%r14
1000026d1:	53	pushq	%rbx
1000026d2:	48 89 fb	movq	%rdi, %rbx
1000026d5:	48 8b 7f 38	movq	56(%rdi), %rdi
1000026d9:	4c 8b 35 e0 fd 04 00	movq	327136(%rip), %r14 ## Objc selector ref: viewMaxSize
1000026e0:	4c 89 f6	movq	%r14, %rsi
1000026e3:	e8 0c ce 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000026e8:	84 c0	testb	%al, %al
1000026ea:	74 0f	je	0x1000026fb
1000026ec:	48 8b 7b 38	movq	56(%rbx), %rdi
1000026f0:	4c 89 f6	movq	%r14, %rsi
1000026f3:	ff 15 27 a5 03 00	callq	*238887(%rip) ## Objc message: -[%rdi viewMaxSize]
1000026f9:	eb 0a	jmp	0x100002705
1000026fb:	f2 0f 10 43 28	movsd	40(%rbx), %xmm0
100002700:	f2 0f 10 4b 30	movsd	48(%rbx), %xmm1
100002705:	5b	popq	%rbx
100002706:	41 5e	popq	%r14
100002708:	5d	popq	%rbp
100002709:	c3	retq
10000270a:	55	pushq	%rbp
10000270b:	48 89 e5	movq	%rsp, %rbp
10000270e:	53	pushq	%rbx
10000270f:	50	pushq	%rax
100002710:	48 89 fb	movq	%rdi, %rbx
100002713:	48 8b 35 9e fd 04 00	movq	327070(%rip), %rsi ## Objc selector ref: view
10000271a:	ff 15 00 a5 03 00	callq	*238848(%rip) ## Objc message: -[%rdi view]
100002720:	48 85 c0	testq	%rax, %rax
100002723:	74 27	je	0x10000274c
100002725:	48 8b 7b 38	movq	56(%rbx), %rdi
100002729:	48 8b 35 80 fd 04 00	movq	327040(%rip), %rsi ## Objc selector ref: valueForKey:
100002730:	48 8d 15 89 a8 03 00	leaq	239753(%rip), %rdx ## Objc cfstring ref: @"initialFirstResponder"
100002737:	ff 15 e3 a4 03 00	callq	*238819(%rip) ## Objc message: -[%rdi valueForKey:]
10000273d:	48 89 c7	movq	%rax, %rdi
100002740:	ff 15 1a a5 03 00	callq	*238874(%rip) ## literal pool symbol address: _objc_retain
100002746:	48 89 43 10	movq	%rax, 16(%rbx)
10000274a:	eb 04	jmp	0x100002750
10000274c:	48 8b 43 10	movq	16(%rbx), %rax
100002750:	48 83 c4 08	addq	$8, %rsp
100002754:	5b	popq	%rbx
100002755:	5d	popq	%rbp
100002756:	c3	retq
100002757:	55	pushq	%rbp
100002758:	48 89 e5	movq	%rsp, %rbp
10000275b:	41 57	pushq	%r15
10000275d:	41 56	pushq	%r14
10000275f:	41 55	pushq	%r13
100002761:	41 54	pushq	%r12
100002763:	53	pushq	%rbx
100002764:	48 83 ec 18	subq	$24, %rsp
100002768:	48 8b 35 49 fd 04 00	movq	326985(%rip), %rsi ## Objc selector ref: view
10000276f:	4c 8b 2d aa a4 03 00	movq	238762(%rip), %r13 ## Objc message: -[%rdi view]
100002776:	41 ff d5	callq	*%r13
100002779:	48 8b 35 d0 fb 04 00	movq	326608(%rip), %rsi ## Objc selector ref: subviews
100002780:	48 89 c7	movq	%rax, %rdi
100002783:	41 ff d5	callq	*%r13
100002786:	48 8b 35 db f0 04 00	movq	323803(%rip), %rsi ## Objc selector ref: objectEnumerator
10000278d:	48 89 45 d0	movq	%rax, -48(%rbp)
100002791:	48 89 c7	movq	%rax, %rdi
100002794:	41 ff d5	callq	*%r13
100002797:	48 89 45 c8	movq	%rax, -56(%rbp)
10000279b:	4c 8b 35 3e f0 04 00	movq	323646(%rip), %r14 ## Objc selector ref: nextObject
1000027a2:	4c 8b 25 2f f0 04 00	movq	323631(%rip), %r12 ## Objc selector ref: nextKeyView
1000027a9:	48 8b 7d c8	movq	-56(%rbp), %rdi
1000027ad:	4c 89 f6	movq	%r14, %rsi
1000027b0:	41 ff d5	callq	*%r13
1000027b3:	48 85 c0	testq	%rax, %rax
1000027b6:	74 4a	je	0x100002802
1000027b8:	48 89 c3	movq	%rax, %rbx
1000027bb:	48 89 c7	movq	%rax, %rdi
1000027be:	4c 89 e6	movq	%r12, %rsi
1000027c1:	41 ff d5	callq	*%r13
1000027c4:	48 85 c0	testq	%rax, %rax
1000027c7:	74 2d	je	0x1000027f6
1000027c9:	48 8b 7d d0	movq	-48(%rbp), %rdi
1000027cd:	48 8b 35 94 f0 04 00	movq	323732(%rip), %rsi ## Objc selector ref: objectEnumerator
1000027d4:	41 ff d5	callq	*%r13
1000027d7:	49 89 c7	movq	%rax, %r15
1000027da:	4c 89 ff	movq	%r15, %rdi
1000027dd:	4c 89 f6	movq	%r14, %rsi
1000027e0:	41 ff d5	callq	*%r13
1000027e3:	48 85 c0	testq	%rax, %rax
1000027e6:	74 10	je	0x1000027f8
1000027e8:	48 89 c7	movq	%rax, %rdi
1000027eb:	4c 89 e6	movq	%r12, %rsi
1000027ee:	41 ff d5	callq	*%r13
1000027f1:	48 39 d8	cmpq	%rbx, %rax
1000027f4:	75 e4	jne	0x1000027da
1000027f6:	31 db	xorl	%ebx, %ebx
1000027f8:	48 85 db	testq	%rbx, %rbx
1000027fb:	74 ac	je	0x1000027a9
1000027fd:	e9 ad 00 00 00	jmp	0x1000028af
100002802:	48 8b 7d d0	movq	-48(%rbp), %rdi
100002806:	48 8b 35 5b f0 04 00	movq	323675(%rip), %rsi ## Objc selector ref: objectEnumerator
10000280d:	ff 15 0d a4 03 00	callq	*238605(%rip) ## Objc message: -[%rdi objectEnumerator]
100002813:	49 89 c4	movq	%rax, %r12
100002816:	48 8b 05 f3 e3 04 00	movq	320499(%rip), %rax ## Objc selector ref: acceptsFirstResponder
10000281d:	48 89 45 d0	movq	%rax, -48(%rbp)
100002821:	48 8b 05 80 fb 04 00	movq	326528(%rip), %rax ## Objc selector ref: target
100002828:	48 89 45 c8	movq	%rax, -56(%rbp)
10000282c:	4c 8b 3d 3d e8 04 00	movq	321597(%rip), %r15 ## Objc selector ref: delegate
100002833:	4c 89 65 c0	movq	%r12, -64(%rbp)
100002837:	4c 89 e7	movq	%r12, %rdi
10000283a:	4c 89 f6	movq	%r14, %rsi
10000283d:	41 ff d5	callq	*%r13
100002840:	48 85 c0	testq	%rax, %rax
100002843:	74 68	je	0x1000028ad
100002845:	48 89 c3	movq	%rax, %rbx
100002848:	48 89 c7	movq	%rax, %rdi
10000284b:	48 8b 75 d0	movq	-48(%rbp), %rsi
10000284f:	41 ff d5	callq	*%r13
100002852:	84 c0	testb	%al, %al
100002854:	74 43	je	0x100002899
100002856:	48 89 df	movq	%rbx, %rdi
100002859:	48 8b 75 c8	movq	-56(%rbp), %rsi
10000285d:	e8 92 cc 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002862:	84 c0	testb	%al, %al
100002864:	74 0f	je	0x100002875
100002866:	48 89 df	movq	%rbx, %rdi
100002869:	48 8b 75 c8	movq	-56(%rbp), %rsi
10000286d:	41 ff d5	callq	*%r13
100002870:	48 85 c0	testq	%rax, %rax
100002873:	75 31	jne	0x1000028a6
100002875:	48 89 df	movq	%rbx, %rdi
100002878:	4d 89 fc	movq	%r15, %r12
10000287b:	4c 89 fe	movq	%r15, %rsi
10000287e:	e8 71 cc 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002883:	84 c0	testb	%al, %al
100002885:	74 16	je	0x10000289d
100002887:	48 89 df	movq	%rbx, %rdi
10000288a:	4c 89 e6	movq	%r12, %rsi
10000288d:	41 ff d5	callq	*%r13
100002890:	48 85 c0	testq	%rax, %rax
100002893:	4c 8b 65 c0	movq	-64(%rbp), %r12
100002897:	75 0d	jne	0x1000028a6
100002899:	31 db	xorl	%ebx, %ebx
10000289b:	eb 09	jmp	0x1000028a6
10000289d:	31 db	xorl	%ebx, %ebx
10000289f:	4d 89 e7	movq	%r12, %r15
1000028a2:	4c 8b 65 c0	movq	-64(%rbp), %r12
1000028a6:	48 85 db	testq	%rbx, %rbx
1000028a9:	74 8c	je	0x100002837
1000028ab:	eb 02	jmp	0x1000028af
1000028ad:	31 db	xorl	%ebx, %ebx
1000028af:	48 89 d8	movq	%rbx, %rax
1000028b2:	48 83 c4 18	addq	$24, %rsp
1000028b6:	5b	popq	%rbx
1000028b7:	41 5c	popq	%r12
1000028b9:	41 5d	popq	%r13
1000028bb:	41 5e	popq	%r14
1000028bd:	41 5f	popq	%r15
1000028bf:	5d	popq	%rbp
1000028c0:	c3	retq
1000028c1:	55	pushq	%rbp
1000028c2:	48 89 e5	movq	%rsp, %rbp
1000028c5:	41 56	pushq	%r14
1000028c7:	53	pushq	%rbx
1000028c8:	48 89 fb	movq	%rdi, %rbx
1000028cb:	48 8b 7f 38	movq	56(%rdi), %rdi
1000028cf:	4c 8b 35 6a ea 04 00	movq	322154(%rip), %r14 ## Objc selector ref: iconSymbolName
1000028d6:	4c 89 f6	movq	%r14, %rsi
1000028d9:	e8 16 cc 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000028de:	48 8b 7b 38	movq	56(%rbx), %rdi
1000028e2:	84 c0	testb	%al, %al
1000028e4:	74 26	je	0x10000290c
1000028e6:	48 8b 1d 33 a3 03 00	movq	238387(%rip), %rbx ## Objc message: -[%rdi iconSymbolName]
1000028ed:	4c 89 f6	movq	%r14, %rsi
1000028f0:	ff d3	callq	*%rbx
1000028f2:	48 8b 3d bf fc 04 00	movq	326847(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
1000028f9:	48 8b 35 f0 e2 04 00	movq	320240(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
100002900:	48 89 c2	movq	%rax, %rdx
100002903:	48 89 d8	movq	%rbx, %rax
100002906:	5b	popq	%rbx
100002907:	41 5e	popq	%r14
100002909:	5d	popq	%rbp
10000290a:	ff e0	jmpq	*%rax
10000290c:	4c 8b 35 25 ea 04 00	movq	322085(%rip), %r14 ## Objc selector ref: icon
100002913:	4c 89 f6	movq	%r14, %rsi
100002916:	e8 d9 cb 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
10000291b:	84 c0	testb	%al, %al
10000291d:	74 11	je	0x100002930
10000291f:	48 8b 7b 38	movq	56(%rbx), %rdi
100002923:	4c 89 f6	movq	%r14, %rsi
100002926:	5b	popq	%rbx
100002927:	41 5e	popq	%r14
100002929:	5d	popq	%rbp
10000292a:	ff 25 f0 a2 03 00	jmpq	*238320(%rip) ## Objc message: +[NSImage icon]
100002930:	48 8b 35 b1 e4 04 00	movq	320689(%rip), %rsi ## Objc selector ref: bundle
100002937:	4c 8b 35 e2 a2 03 00	movq	238306(%rip), %r14 ## Objc message: -[%rdi bundle]
10000293e:	48 89 df	movq	%rbx, %rdi
100002941:	41 ff d6	callq	*%r14
100002944:	48 89 c3	movq	%rax, %rbx
100002947:	48 8b 35 ba ea 04 00	movq	322234(%rip), %rsi ## Objc selector ref: infoDictionary
10000294e:	48 89 c7	movq	%rax, %rdi
100002951:	41 ff d6	callq	*%r14
100002954:	48 8b 35 1d ef 04 00	movq	323357(%rip), %rsi ## Objc selector ref: objectForKey:
10000295b:	48 8d 15 7e a6 03 00	leaq	239230(%rip), %rdx ## Objc cfstring ref: @"CFBundleIconFile"
100002962:	48 89 c7	movq	%rax, %rdi
100002965:	41 ff d6	callq	*%r14
100002968:	48 8b 35 09 ea 04 00	movq	322057(%rip), %rsi ## Objc selector ref: imageForResource:
10000296f:	48 89 df	movq	%rbx, %rdi
100002972:	48 89 c2	movq	%rax, %rdx
100002975:	41 ff d6	callq	*%r14
100002978:	48 85 c0	testq	%rax, %rax
10000297b:	74 05	je	0x100002982
10000297d:	5b	popq	%rbx
10000297e:	41 5e	popq	%r14
100002980:	5d	popq	%rbp
100002981:	c3	retq
100002982:	48 8b 3d 2f fc 04 00	movq	326703(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
100002989:	48 8b 35 00 ea 04 00	movq	322048(%rip), %rsi ## Objc selector ref: imageNamed:
100002990:	48 8d 15 69 a6 03 00	leaq	239209(%rip), %rdx ## Objc cfstring ref: @"NSApplicationIcon"
100002997:	5b	popq	%rbx
100002998:	41 5e	popq	%r14
10000299a:	5d	popq	%rbp
10000299b:	ff 25 7f a2 03 00	jmpq	*238207(%rip) ## Objc message: +[NSImage imageNamed:]
1000029a1:	55	pushq	%rbp
1000029a2:	48 89 e5	movq	%rsp, %rbp
1000029a5:	41 57	pushq	%r15
1000029a7:	41 56	pushq	%r14
1000029a9:	53	pushq	%rbx
1000029aa:	50	pushq	%rax
1000029ab:	49 89 d7	movq	%rdx, %r15
1000029ae:	48 89 fb	movq	%rdi, %rbx
1000029b1:	48 8b 7f 38	movq	56(%rdi), %rdi
1000029b5:	4c 8b 35 7c f8 04 00	movq	325756(%rip), %r14 ## Objc selector ref: shouldUnselect:
1000029bc:	4c 89 f6	movq	%r14, %rsi
1000029bf:	e8 30 cb 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
1000029c4:	84 c0	testb	%al, %al
1000029c6:	74 19	je	0x1000029e1
1000029c8:	48 8b 7b 38	movq	56(%rbx), %rdi
1000029cc:	4c 89 f6	movq	%r14, %rsi
1000029cf:	4c 89 fa	movq	%r15, %rdx
1000029d2:	ff 15 48 a2 03 00	callq	*238152(%rip) ## Objc message: -[%rdi shouldUnselect:]
1000029d8:	89 c2	movl	%eax, %edx
1000029da:	83 f8 01	cmpl	$1, %eax
1000029dd:	76 07	jbe	0x1000029e6
1000029df:	eb 15	jmp	0x1000029f6
1000029e1:	ba 01 00 00 00	movl	$1, %edx
1000029e6:	48 8b 35 53 f8 04 00	movq	325715(%rip), %rsi ## Objc selector ref: shouldUnselectResult:
1000029ed:	4c 89 ff	movq	%r15, %rdi
1000029f0:	ff 15 2a a2 03 00	callq	*238122(%rip) ## Objc message: -[%rdi shouldUnselectResult:]
1000029f6:	b8 ff ff ff ff	movl	$4294967295, %eax
1000029fb:	48 83 c4 08	addq	$8, %rsp
1000029ff:	5b	popq	%rbx
100002a00:	41 5e	popq	%r14
100002a02:	41 5f	popq	%r15
100002a04:	5d	popq	%rbp
100002a05:	c3	retq
100002a06:	55	pushq	%rbp
100002a07:	48 89 e5	movq	%rsp, %rbp
100002a0a:	41 57	pushq	%r15
100002a0c:	41 56	pushq	%r14
100002a0e:	53	pushq	%rbx
100002a0f:	50	pushq	%rax
100002a10:	49 89 d7	movq	%rdx, %r15
100002a13:	48 89 fb	movq	%rdi, %rbx
100002a16:	48 8b 7f 38	movq	56(%rdi), %rdi
100002a1a:	4c 8b 35 e7 fa 04 00	movq	326375(%rip), %r14 ## Objc selector ref: willUnselect:
100002a21:	4c 89 f6	movq	%r14, %rsi
100002a24:	e8 cb ca 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002a29:	84 c0	testb	%al, %al
100002a2b:	74 1a	je	0x100002a47
100002a2d:	48 8b 7b 38	movq	56(%rbx), %rdi
100002a31:	4c 89 f6	movq	%r14, %rsi
100002a34:	4c 89 fa	movq	%r15, %rdx
100002a37:	48 83 c4 08	addq	$8, %rsp
100002a3b:	5b	popq	%rbx
100002a3c:	41 5e	popq	%r14
100002a3e:	41 5f	popq	%r15
100002a40:	5d	popq	%rbp
100002a41:	ff 25 d9 a1 03 00	jmpq	*238041(%rip) ## Objc message: -[%rdi willUnselect:]
100002a47:	48 83 c4 08	addq	$8, %rsp
100002a4b:	5b	popq	%rbx
100002a4c:	41 5e	popq	%r14
100002a4e:	41 5f	popq	%r15
100002a50:	5d	popq	%rbp
100002a51:	c3	retq
100002a52:	55	pushq	%rbp
100002a53:	48 89 e5	movq	%rsp, %rbp
100002a56:	41 57	pushq	%r15
100002a58:	41 56	pushq	%r14
100002a5a:	53	pushq	%rbx
100002a5b:	50	pushq	%rax
100002a5c:	49 89 d7	movq	%rdx, %r15
100002a5f:	48 89 fb	movq	%rdi, %rbx
100002a62:	48 8b 7f 38	movq	56(%rdi), %rdi
100002a66:	4c 8b 35 63 e6 04 00	movq	321123(%rip), %r14 ## Objc selector ref: didUnselect:
100002a6d:	4c 89 f6	movq	%r14, %rsi
100002a70:	e8 7f ca 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002a75:	84 c0	testb	%al, %al
100002a77:	74 1a	je	0x100002a93
100002a79:	48 8b 7b 38	movq	56(%rbx), %rdi
100002a7d:	4c 89 f6	movq	%r14, %rsi
100002a80:	4c 89 fa	movq	%r15, %rdx
100002a83:	48 83 c4 08	addq	$8, %rsp
100002a87:	5b	popq	%rbx
100002a88:	41 5e	popq	%r14
100002a8a:	41 5f	popq	%r15
100002a8c:	5d	popq	%rbp
100002a8d:	ff 25 8d a1 03 00	jmpq	*237965(%rip) ## Objc message: -[%rdi didUnselect:]
100002a93:	48 83 c4 08	addq	$8, %rsp
100002a97:	5b	popq	%rbx
100002a98:	41 5e	popq	%r14
100002a9a:	41 5f	popq	%r15
100002a9c:	5d	popq	%rbp
100002a9d:	c3	retq
100002a9e:	55	pushq	%rbp
100002a9f:	48 89 e5	movq	%rsp, %rbp
100002aa2:	41 57	pushq	%r15
100002aa4:	41 56	pushq	%r14
100002aa6:	53	pushq	%rbx
100002aa7:	50	pushq	%rax
100002aa8:	49 89 d7	movq	%rdx, %r15
100002aab:	48 89 fb	movq	%rdi, %rbx
100002aae:	48 8b 7f 38	movq	56(%rdi), %rdi
100002ab2:	4c 8b 35 47 fa 04 00	movq	326215(%rip), %r14 ## Objc selector ref: willSelect:
100002ab9:	4c 89 f6	movq	%r14, %rsi
100002abc:	e8 33 ca 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002ac1:	84 c0	testb	%al, %al
100002ac3:	74 1a	je	0x100002adf
100002ac5:	48 8b 7b 38	movq	56(%rbx), %rdi
100002ac9:	4c 89 f6	movq	%r14, %rsi
100002acc:	4c 89 fa	movq	%r15, %rdx
100002acf:	48 83 c4 08	addq	$8, %rsp
100002ad3:	5b	popq	%rbx
100002ad4:	41 5e	popq	%r14
100002ad6:	41 5f	popq	%r15
100002ad8:	5d	popq	%rbp
100002ad9:	ff 25 41 a1 03 00	jmpq	*237889(%rip) ## Objc message: -[%rdi willSelect:]
100002adf:	48 83 c4 08	addq	$8, %rsp
100002ae3:	5b	popq	%rbx
100002ae4:	41 5e	popq	%r14
100002ae6:	41 5f	popq	%r15
100002ae8:	5d	popq	%rbp
100002ae9:	c3	retq
100002aea:	55	pushq	%rbp
100002aeb:	48 89 e5	movq	%rsp, %rbp
100002aee:	41 57	pushq	%r15
100002af0:	41 56	pushq	%r14
100002af2:	53	pushq	%rbx
100002af3:	50	pushq	%rax
100002af4:	49 89 d7	movq	%rdx, %r15
100002af7:	48 89 fb	movq	%rdi, %rbx
100002afa:	48 8b 7f 38	movq	56(%rdi), %rdi
100002afe:	4c 8b 35 c3 e5 04 00	movq	320963(%rip), %r14 ## Objc selector ref: didSelect:
100002b05:	4c 89 f6	movq	%r14, %rsi
100002b08:	e8 e7 c9 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100002b0d:	84 c0	testb	%al, %al
100002b0f:	74 1a	je	0x100002b2b
100002b11:	48 8b 7b 38	movq	56(%rbx), %rdi
100002b15:	4c 89 f6	movq	%r14, %rsi
100002b18:	4c 89 fa	movq	%r15, %rdx
100002b1b:	48 83 c4 08	addq	$8, %rsp
100002b1f:	5b	popq	%rbx
100002b20:	41 5e	popq	%r14
100002b22:	41 5f	popq	%r15
100002b24:	5d	popq	%rbp
100002b25:	ff 25 f5 a0 03 00	jmpq	*237813(%rip) ## Objc message: -[%rdi didSelect:]
100002b2b:	48 83 c4 08	addq	$8, %rsp
100002b2f:	5b	popq	%rbx
100002b30:	41 5e	popq	%r14
100002b32:	41 5f	popq	%r15
100002b34:	5d	popq	%rbp
100002b35:	c3	retq
100002b36:	55	pushq	%rbp
100002b37:	48 89 e5	movq	%rsp, %rbp
100002b3a:	48 8b 47 38	movq	56(%rdi), %rax
100002b3e:	5d	popq	%rbp
100002b3f:	c3	retq
100002b40:	55	pushq	%rbp
100002b41:	48 89 e5	movq	%rsp, %rbp
100002b44:	41 57	pushq	%r15
100002b46:	41 56	pushq	%r14
100002b48:	53	pushq	%rbx
100002b49:	48 83 ec 18	subq	$24, %rsp
100002b4d:	48 8d 45 d8	leaq	-40(%rbp), %rax
100002b51:	48 89 38	movq	%rdi, (%rax)
100002b54:	48 8b 0d 3d fc 04 00	movq	326717(%rip), %rcx ## Objc class ref: CSUtilityWrapperArray
100002b5b:	48 89 48 08	movq	%rcx, 8(%rax)
100002b5f:	48 8b 35 aa e8 04 00	movq	321706(%rip), %rsi ## Objc selector ref: init
100002b66:	48 89 c7	movq	%rax, %rdi
100002b69:	e8 6e c9 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
100002b6e:	48 89 c3	movq	%rax, %rbx
100002b71:	48 85 c0	testq	%rax, %rax
100002b74:	74 63	je	0x100002bd9
100002b76:	48 8b 3d 0b fa 04 00	movq	326155(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
100002b7d:	e8 42 c9 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
100002b82:	4c 8b 3d af fd 04 00	movq	327087(%rip), %r15
100002b89:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
100002b8d:	48 8b 3d 0c fa 04 00	movq	326156(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100002b94:	48 8b 35 4d eb 04 00	movq	322381(%rip), %rsi ## Objc selector ref: mainBundle
100002b9b:	4c 8b 35 7e a0 03 00	movq	237694(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
100002ba2:	41 ff d6	callq	*%r14
100002ba5:	48 8b 35 84 ef 04 00	movq	323460(%rip), %rsi ## Objc selector ref: resourcePath
100002bac:	48 89 c7	movq	%rax, %rdi
100002baf:	41 ff d6	callq	*%r14
100002bb2:	48 8b 35 87 ea 04 00	movq	322183(%rip), %rsi ## Objc selector ref: loadUtilitiesInDir:
100002bb9:	48 89 df	movq	%rbx, %rdi
100002bbc:	48 89 c2	movq	%rax, %rdx
100002bbf:	41 ff d6	callq	*%r14
100002bc2:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100002bc6:	48 8b 35 d3 f6 04 00	movq	325331(%rip), %rsi ## Objc selector ref: sortUsingFunction:context:
100002bcd:	48 8d 15 13 00 00 00	leaq	19(%rip), %rdx
100002bd4:	31 c9	xorl	%ecx, %ecx
100002bd6:	41 ff d6	callq	*%r14
100002bd9:	48 89 d8	movq	%rbx, %rax
100002bdc:	48 83 c4 18	addq	$24, %rsp
100002be0:	5b	popq	%rbx
100002be1:	41 5e	popq	%r14
100002be3:	41 5f	popq	%r15
100002be5:	5d	popq	%rbp
100002be6:	c3	retq
100002be7:	55	pushq	%rbp
100002be8:	48 89 e5	movq	%rsp, %rbp
100002beb:	41 57	pushq	%r15
100002bed:	41 56	pushq	%r14
100002bef:	53	pushq	%rbx
100002bf0:	50	pushq	%rax
100002bf1:	48 89 f3	movq	%rsi, %rbx
100002bf4:	4c 8b 35 9d f6 04 00	movq	325277(%rip), %r14 ## Objc selector ref: sortOrder
100002bfb:	4c 8b 3d 1e a0 03 00	movq	237598(%rip), %r15 ## Objc message: -[%rdi sortOrder]
100002c02:	4c 89 f6	movq	%r14, %rsi
100002c05:	41 ff d7	callq	*%r15
100002c08:	f3 0f 11 45 e4	movss	%xmm0, -28(%rbp)
100002c0d:	48 89 df	movq	%rbx, %rdi
100002c10:	4c 89 f6	movq	%r14, %rsi
100002c13:	41 ff d7	callq	*%r15
100002c16:	31 c9	xorl	%ecx, %ecx
100002c18:	f3 0f 10 4d e4	movss	-28(%rbp), %xmm1
100002c1d:	0f 2e c1	ucomiss	%xmm1, %xmm0
100002c20:	0f 96 c1	setbe	%cl
100002c23:	31 c0	xorl	%eax, %eax
100002c25:	0f 2e c8	ucomiss	%xmm0, %xmm1
100002c28:	48 8d 4c 09 ff	leaq	-1(%rcx,%rcx), %rcx
100002c2d:	48 0f 45 c1	cmovneq	%rcx, %rax
100002c31:	48 0f 4a c1	cmovpq	%rcx, %rax
100002c35:	48 83 c4 08	addq	$8, %rsp
100002c39:	5b	popq	%rbx
100002c3a:	41 5e	popq	%r14
100002c3c:	41 5f	popq	%r15
100002c3e:	5d	popq	%rbp
100002c3f:	c3	retq
100002c40:	55	pushq	%rbp
100002c41:	48 89 e5	movq	%rsp, %rbp
100002c44:	53	pushq	%rbx
100002c45:	48 83 ec 18	subq	$24, %rsp
100002c49:	48 89 fb	movq	%rdi, %rbx
100002c4c:	48 8b 05 e5 fc 04 00	movq	326885(%rip), %rax
100002c53:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100002c57:	ff 15 fb 9f 03 00	callq	*237563(%rip) ## literal pool symbol address: _objc_release
100002c5d:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100002c61:	48 89 1f	movq	%rbx, (%rdi)
100002c64:	48 8b 05 2d fb 04 00	movq	326445(%rip), %rax ## Objc class ref: CSUtilityWrapperArray
100002c6b:	48 89 47 08	movq	%rax, 8(%rdi)
100002c6f:	48 8b 35 da e3 04 00	movq	320474(%rip), %rsi ## Objc selector ref: dealloc
100002c76:	e8 61 c8 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100002c7b:	48 83 c4 18	addq	$24, %rsp
100002c7f:	5b	popq	%rbx
100002c80:	5d	popq	%rbp
100002c81:	c3	retq
100002c82:	55	pushq	%rbp
100002c83:	48 89 e5	movq	%rsp, %rbp
100002c86:	48 8b 05 b3 fc 04 00	movq	326835(%rip), %rax
100002c8d:	48 8b 04 07	movq	(%rdi,%rax), %rax
100002c91:	5d	popq	%rbp
100002c92:	c3	retq
100002c93:	55	pushq	%rbp
100002c94:	48 89 e5	movq	%rsp, %rbp
100002c97:	48 8b 05 9a fc 04 00	movq	326810(%rip), %rax
100002c9e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100002ca2:	48 8b 35 b7 eb 04 00	movq	322487(%rip), %rsi ## Objc selector ref: objectAtIndex:
100002ca9:	5d	popq	%rbp
100002caa:	ff 25 70 9f 03 00	jmpq	*237424(%rip) ## Objc message: -[%rdi objectAtIndex:]
100002cb0:	55	pushq	%rbp
100002cb1:	48 89 e5	movq	%rsp, %rbp
100002cb4:	41 57	pushq	%r15
100002cb6:	41 56	pushq	%r14
100002cb8:	41 55	pushq	%r13
100002cba:	41 54	pushq	%r12
100002cbc:	53	pushq	%rbx
100002cbd:	50	pushq	%rax
100002cbe:	48 89 55 d0	movq	%rdx, -48(%rbp)
100002cc2:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100002ccc:	48 8b 0d 6d fc 04 00	movq	326765(%rip), %rcx
100002cd3:	48 83 3c 0f 00	cmpq	$0, (%rdi,%rcx)
100002cd8:	74 6c	je	0x100002d46
100002cda:	48 89 fb	movq	%rdi, %rbx
100002cdd:	4c 8b 2d 64 e6 04 00	movq	321124(%rip), %r13 ## Objc selector ref: identifier
100002ce4:	4c 8b 25 9d e8 04 00	movq	321693(%rip), %r12 ## Objc selector ref: isEqualToString:
100002ceb:	45 31 f6	xorl	%r14d, %r14d
100002cee:	4c 8b 3d 2b 9f 03 00	movq	237355(%rip), %r15 ## Objc message: -[%rdi isEqualToString:]
100002cf5:	48 8b 05 3c fc 04 00	movq	326716(%rip), %rax
100002cfc:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100002d00:	48 8b 35 59 eb 04 00	movq	322393(%rip), %rsi ## Objc selector ref: objectAtIndex:
100002d07:	4c 89 f2	movq	%r14, %rdx
100002d0a:	41 ff d7	callq	*%r15
100002d0d:	48 89 c7	movq	%rax, %rdi
100002d10:	4c 89 ee	movq	%r13, %rsi
100002d13:	41 ff d7	callq	*%r15
100002d16:	48 89 c7	movq	%rax, %rdi
100002d19:	4c 89 e6	movq	%r12, %rsi
100002d1c:	48 8b 55 d0	movq	-48(%rbp), %rdx
100002d20:	41 ff d7	callq	*%r15
100002d23:	84 c0	testb	%al, %al
100002d25:	75 1c	jne	0x100002d43
100002d27:	49 ff c6	incq	%r14
100002d2a:	48 8b 05 0f fc 04 00	movq	326671(%rip), %rax
100002d31:	4c 3b 34 03	cmpq	(%rbx,%rax), %r14
100002d35:	72 be	jb	0x100002cf5
100002d37:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100002d41:	eb 03	jmp	0x100002d46
100002d43:	4c 89 f0	movq	%r14, %rax
100002d46:	48 83 c4 08	addq	$8, %rsp
100002d4a:	5b	popq	%rbx
100002d4b:	41 5c	popq	%r12
100002d4d:	41 5d	popq	%r13
100002d4f:	41 5e	popq	%r14
100002d51:	41 5f	popq	%r15
100002d53:	5d	popq	%rbp
100002d54:	c3	retq
100002d55:	55	pushq	%rbp
100002d56:	48 89 e5	movq	%rsp, %rbp
100002d59:	41 57	pushq	%r15
100002d5b:	41 56	pushq	%r14
100002d5d:	41 55	pushq	%r13
100002d5f:	41 54	pushq	%r12
100002d61:	53	pushq	%rbx
100002d62:	50	pushq	%rax
100002d63:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100002d6d:	48 8b 0d cc fb 04 00	movq	326604(%rip), %rcx
100002d74:	48 83 3c 0f 00	cmpq	$0, (%rdi,%rcx)
100002d79:	74 5d	je	0x100002dd8
100002d7b:	41 89 d7	movl	%edx, %r15d
100002d7e:	49 89 fd	movq	%rdi, %r13
100002d81:	4c 8b 35 d0 f4 04 00	movq	324816(%rip), %r14 ## Objc selector ref: signature
100002d88:	31 db	xorl	%ebx, %ebx
100002d8a:	4c 8b 25 8f 9e 03 00	movq	237199(%rip), %r12 ## Objc message: -[%rdi signature]
100002d91:	48 8b 05 a0 fb 04 00	movq	326560(%rip), %rax
100002d98:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100002d9d:	48 8b 35 bc ea 04 00	movq	322236(%rip), %rsi ## Objc selector ref: objectAtIndex:
100002da4:	48 89 da	movq	%rbx, %rdx
100002da7:	41 ff d4	callq	*%r12
100002daa:	48 89 c7	movq	%rax, %rdi
100002dad:	4c 89 f6	movq	%r14, %rsi
100002db0:	41 ff d4	callq	*%r12
100002db3:	44 39 f8	cmpl	%r15d, %eax
100002db6:	74 1d	je	0x100002dd5
100002db8:	48 ff c3	incq	%rbx
100002dbb:	48 8b 05 7e fb 04 00	movq	326526(%rip), %rax
100002dc2:	49 3b 5c 05 00	cmpq	(%r13,%rax), %rbx
100002dc7:	72 c8	jb	0x100002d91
100002dc9:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100002dd3:	eb 03	jmp	0x100002dd8
100002dd5:	48 89 d8	movq	%rbx, %rax
100002dd8:	48 83 c4 08	addq	$8, %rsp
100002ddc:	5b	popq	%rbx
100002ddd:	41 5c	popq	%r12
100002ddf:	41 5d	popq	%r13
100002de1:	41 5e	popq	%r14
100002de3:	41 5f	popq	%r15
100002de5:	5d	popq	%rbp
100002de6:	c3	retq
100002de7:	55	pushq	%rbp
100002de8:	48 89 e5	movq	%rsp, %rbp
100002deb:	41 57	pushq	%r15
100002ded:	41 56	pushq	%r14
100002def:	41 55	pushq	%r13
100002df1:	41 54	pushq	%r12
100002df3:	53	pushq	%rbx
100002df4:	48 83 ec 48	subq	$72, %rsp
100002df8:	48 89 d3	movq	%rdx, %rbx
100002dfb:	48 89 7d a8	movq	%rdi, -88(%rbp)
100002dff:	48 8b 3d ba f7 04 00	movq	325562(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFileManager
100002e06:	4c 8b 35 53 e2 04 00	movq	320083(%rip), %r14 ## Objc selector ref: defaultManager
100002e0d:	4c 8b 2d 0c 9e 03 00	movq	237068(%rip), %r13 ## Objc message: +[NSFileManager defaultManager]
100002e14:	4c 89 f6	movq	%r14, %rsi
100002e17:	41 ff d5	callq	*%r13
100002e1a:	48 8b 35 df e3 04 00	movq	320479(%rip), %rsi ## Objc selector ref: fileExistsAtPath:isDirectory:
100002e21:	48 8d 4d d7	leaq	-41(%rbp), %rcx
100002e25:	48 89 c7	movq	%rax, %rdi
100002e28:	48 89 5d c8	movq	%rbx, -56(%rbp)
100002e2c:	48 89 da	movq	%rbx, %rdx
100002e2f:	41 ff d5	callq	*%r13
100002e32:	84 c0	testb	%al, %al
100002e34:	0f 84 22 01 00 00	je	0x100002f5c
100002e3a:	80 7d d7 00	cmpb	$0, -41(%rbp)
100002e3e:	0f 84 18 01 00 00	je	0x100002f5c
100002e44:	48 8b 3d 75 f7 04 00	movq	325493(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFileManager
100002e4b:	4c 89 f6	movq	%r14, %rsi
100002e4e:	41 ff d5	callq	*%r13
100002e51:	48 8b 35 f8 e0 04 00	movq	319736(%rip), %rsi ## Objc selector ref: contentsOfDirectoryAtPath:error:
100002e58:	48 89 c7	movq	%rax, %rdi
100002e5b:	48 8b 55 c8	movq	-56(%rbp), %rdx
100002e5f:	31 c9	xorl	%ecx, %ecx
100002e61:	41 ff d5	callq	*%r13
100002e64:	48 8b 35 fd e9 04 00	movq	322045(%rip), %rsi ## Objc selector ref: objectEnumerator
100002e6b:	48 89 c7	movq	%rax, %rdi
100002e6e:	41 ff d5	callq	*%r13
100002e71:	49 89 c6	movq	%rax, %r14
100002e74:	48 8b 1d 65 e9 04 00	movq	321893(%rip), %rbx ## Objc selector ref: nextObject
100002e7b:	48 89 c7	movq	%rax, %rdi
100002e7e:	48 89 de	movq	%rbx, %rsi
100002e81:	41 ff d5	callq	*%r13
100002e84:	48 85 c0	testq	%rax, %rax
100002e87:	0f 84 cf 00 00 00	je	0x100002f5c
100002e8d:	49 89 c7	movq	%rax, %r15
100002e90:	4c 8b 25 f1 e6 04 00	movq	321265(%rip), %r12 ## Objc selector ref: isEqualToString:
100002e97:	48 8b 05 8a f4 04 00	movq	324746(%rip), %rax ## Objc selector ref: stringWithFormat:
100002e9e:	48 89 45 98	movq	%rax, -104(%rbp)
100002ea2:	48 8b 05 27 e9 04 00	movq	321831(%rip), %rax ## Objc selector ref: newWithPath:
100002ea9:	48 89 45 a0	movq	%rax, -96(%rbp)
100002ead:	48 8b 05 84 fa 04 00	movq	326276(%rip), %rax
100002eb4:	48 89 45 b0	movq	%rax, -80(%rbp)
100002eb8:	48 8b 05 b1 dd 04 00	movq	318897(%rip), %rax ## Objc selector ref: addObject:
100002ebf:	48 89 45 b8	movq	%rax, -72(%rbp)
100002ec3:	48 8b 05 76 fa 04 00	movq	326262(%rip), %rax
100002eca:	48 89 45 c0	movq	%rax, -64(%rbp)
100002ece:	4c 89 ff	movq	%r15, %rdi
100002ed1:	48 8b 35 78 ea 04 00	movq	322168(%rip), %rsi ## Objc selector ref: pathExtension
100002ed8:	41 ff d5	callq	*%r13
100002edb:	48 89 c7	movq	%rax, %rdi
100002ede:	4c 89 e6	movq	%r12, %rsi
100002ee1:	48 8d 15 38 a1 03 00	leaq	237880(%rip), %rdx ## Objc cfstring ref: @"csutil"
100002ee8:	41 ff d5	callq	*%r13
100002eeb:	84 c0	testb	%al, %al
100002eed:	74 58	je	0x100002f47
100002eef:	48 8b 3d d2 f6 04 00	movq	325330(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100002ef6:	48 8b 75 98	movq	-104(%rbp), %rsi
100002efa:	48 8d 15 3f a1 03 00	leaq	237887(%rip), %rdx ## Objc cfstring ref: @"%@/%@"
100002f01:	48 8b 4d c8	movq	-56(%rbp), %rcx
100002f05:	4d 89 f8	movq	%r15, %r8
100002f08:	31 c0	xorl	%eax, %eax
100002f0a:	41 ff d5	callq	*%r13
100002f0d:	48 8b 3d bc f6 04 00	movq	325308(%rip), %rdi ## Objc class ref: CSUtilityWrapper
100002f14:	48 8b 75 a0	movq	-96(%rbp), %rsi
100002f18:	48 89 c2	movq	%rax, %rdx
100002f1b:	41 ff d5	callq	*%r13
100002f1e:	48 85 c0	testq	%rax, %rax
100002f21:	74 24	je	0x100002f47
100002f23:	49 89 df	movq	%rbx, %r15
100002f26:	48 8b 5d a8	movq	-88(%rbp), %rbx
100002f2a:	48 8b 4d b0	movq	-80(%rbp), %rcx
100002f2e:	48 8b 3c 0b	movq	(%rbx,%rcx), %rdi
100002f32:	48 8b 75 b8	movq	-72(%rbp), %rsi
100002f36:	48 89 c2	movq	%rax, %rdx
100002f39:	41 ff d5	callq	*%r13
100002f3c:	48 8b 45 c0	movq	-64(%rbp), %rax
100002f40:	48 ff 04 03	incq	(%rbx,%rax)
100002f44:	4c 89 fb	movq	%r15, %rbx
100002f47:	4c 89 f7	movq	%r14, %rdi
100002f4a:	48 89 de	movq	%rbx, %rsi
100002f4d:	41 ff d5	callq	*%r13
100002f50:	49 89 c7	movq	%rax, %r15
100002f53:	48 85 c0	testq	%rax, %rax
100002f56:	0f 85 72 ff ff ff	jne	0x100002ece
100002f5c:	48 83 c4 48	addq	$72, %rsp
100002f60:	5b	popq	%rbx
100002f61:	41 5c	popq	%r12
100002f63:	41 5d	popq	%r13
100002f65:	41 5e	popq	%r14
100002f67:	41 5f	popq	%r15
100002f69:	5d	popq	%rbp
100002f6a:	c3	retq
100002f6b:	55	pushq	%rbp
100002f6c:	48 89 e5	movq	%rsp, %rbp
100002f6f:	53	pushq	%rbx
100002f70:	48 83 ec 38	subq	$56, %rsp
100002f74:	48 8d 45 e8	leaq	-24(%rbp), %rax
100002f78:	48 89 38	movq	%rdi, (%rax)
100002f7b:	48 8b 0d 1e f8 04 00	movq	325662(%rip), %rcx ## Objc class ref: CSProfileTable
100002f82:	48 89 48 08	movq	%rcx, 8(%rax)
100002f86:	48 8b 35 c3 e4 04 00	movq	320707(%rip), %rsi ## Objc selector ref: initWithFrame:
100002f8d:	0f 28 45 10	movaps	16(%rbp), %xmm0
100002f91:	0f 28 4d 20	movaps	32(%rbp), %xmm1
100002f95:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100002f9a:	0f 11 04 24	movups	%xmm0, (%rsp)
100002f9e:	48 89 c7	movq	%rax, %rdi
100002fa1:	e8 36 c5 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
100002fa6:	48 89 c3	movq	%rax, %rbx
100002fa9:	48 85 c0	testq	%rax, %rax
100002fac:	74 15	je	0x100002fc3
100002fae:	48 8b 35 7b ed 04 00	movq	322939(%rip), %rsi ## Objc selector ref: setColumnAutoresizingStyle:
100002fb5:	ba 04 00 00 00	movl	$4, %edx
100002fba:	48 89 df	movq	%rbx, %rdi
100002fbd:	ff 15 5d 9c 03 00	callq	*236637(%rip) ## Objc message: -[%rdi setColumnAutoresizingStyle:]
100002fc3:	48 89 d8	movq	%rbx, %rax
100002fc6:	48 83 c4 38	addq	$56, %rsp
100002fca:	5b	popq	%rbx
100002fcb:	5d	popq	%rbp
100002fcc:	c3	retq
100002fcd:	55	pushq	%rbp
100002fce:	48 89 e5	movq	%rsp, %rbp
100002fd1:	53	pushq	%rbx
100002fd2:	48 83 ec 18	subq	$24, %rsp
100002fd6:	48 8d 45 e8	leaq	-24(%rbp), %rax
100002fda:	48 89 38	movq	%rdi, (%rax)
100002fdd:	48 8b 0d bc f7 04 00	movq	325564(%rip), %rcx ## Objc class ref: CSProfileTable
100002fe4:	48 89 48 08	movq	%rcx, 8(%rax)
100002fe8:	48 8b 35 49 e4 04 00	movq	320585(%rip), %rsi ## Objc selector ref: initWithCoder:
100002fef:	48 89 c7	movq	%rax, %rdi
100002ff2:	e8 e5 c4 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithCoder:]
100002ff7:	48 89 c3	movq	%rax, %rbx
100002ffa:	48 85 c0	testq	%rax, %rax
100002ffd:	74 15	je	0x100003014
100002fff:	48 8b 35 2a ed 04 00	movq	322858(%rip), %rsi ## Objc selector ref: setColumnAutoresizingStyle:
100003006:	ba 04 00 00 00	movl	$4, %edx
10000300b:	48 89 df	movq	%rbx, %rdi
10000300e:	ff 15 0c 9c 03 00	callq	*236556(%rip) ## Objc message: -[%rdi setColumnAutoresizingStyle:]
100003014:	48 89 d8	movq	%rbx, %rax
100003017:	48 83 c4 18	addq	$24, %rsp
10000301b:	5b	popq	%rbx
10000301c:	5d	popq	%rbp
10000301d:	c3	retq
10000301e:	55	pushq	%rbp
10000301f:	48 89 e5	movq	%rsp, %rbp
100003022:	41 56	pushq	%r14
100003024:	53	pushq	%rbx
100003025:	48 83 ec 10	subq	$16, %rsp
100003029:	48 89 fb	movq	%rdi, %rbx
10000302c:	48 8b 05 15 f9 04 00	movq	325909(%rip), %rax
100003033:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003037:	4c 8b 35 1a 9c 03 00	movq	236570(%rip), %r14 ## literal pool symbol address: _objc_release
10000303e:	41 ff d6	callq	*%r14
100003041:	48 8b 05 08 f9 04 00	movq	325896(%rip), %rax
100003048:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000304c:	41 ff d6	callq	*%r14
10000304f:	48 8b 05 02 f9 04 00	movq	325890(%rip), %rax
100003056:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000305a:	41 ff d6	callq	*%r14
10000305d:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100003061:	48 89 1f	movq	%rbx, (%rdi)
100003064:	48 8b 05 3d f7 04 00	movq	325437(%rip), %rax ## Objc class ref: CSProfileDoc
10000306b:	48 89 47 08	movq	%rax, 8(%rdi)
10000306f:	48 8b 35 da df 04 00	movq	319450(%rip), %rsi ## Objc selector ref: dealloc
100003076:	e8 61 c4 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10000307b:	48 83 c4 10	addq	$16, %rsp
10000307f:	5b	popq	%rbx
100003080:	41 5e	popq	%r14
100003082:	5d	popq	%rbp
100003083:	c3	retq
100003084:	55	pushq	%rbp
100003085:	48 89 e5	movq	%rsp, %rbp
100003088:	48 8d 05 d1 9f 03 00	leaq	237521(%rip), %rax ## Objc cfstring ref: @"CSProfile"
10000308f:	5d	popq	%rbp
100003090:	c3	retq
100003091:	55	pushq	%rbp
100003092:	48 89 e5	movq	%rsp, %rbp
100003095:	41 57	pushq	%r15
100003097:	41 56	pushq	%r14
100003099:	41 54	pushq	%r12
10000309b:	53	pushq	%rbx
10000309c:	48 83 ec 10	subq	$16, %rsp
1000030a0:	49 89 d6	movq	%rdx, %r14
1000030a3:	48 89 fb	movq	%rdi, %rbx
1000030a6:	48 8b 3d 2b f5 04 00	movq	324907(%rip), %rdi ## Objc class ref: CSProfTagArray
1000030ad:	e8 12 c4 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
1000030b2:	48 8b 0d 97 f8 04 00	movq	325783(%rip), %rcx
1000030b9:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000030bd:	48 8b 35 cc ed 04 00	movq	323020(%rip), %rsi ## Objc selector ref: setHasUndoManager:
1000030c4:	4c 8b 25 55 9b 03 00	movq	236373(%rip), %r12 ## Objc message: +[CSProfTagArray setHasUndoManager:]
1000030cb:	48 89 df	movq	%rbx, %rdi
1000030ce:	31 d2	xorl	%edx, %edx
1000030d0:	41 ff d4	callq	*%r12
1000030d3:	48 8b 05 86 f8 04 00	movq	325766(%rip), %rax
1000030da:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
1000030de:	48 8b 3d fb f4 04 00	movq	324859(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSIndexSet
1000030e5:	48 8b 35 14 e3 04 00	movq	320276(%rip), %rsi ## Objc selector ref: indexSetWithIndex:
1000030ec:	31 d2	xorl	%edx, %edx
1000030ee:	41 ff d4	callq	*%r12
1000030f1:	48 8b 35 28 eb 04 00	movq	322344(%rip), %rsi ## Objc selector ref: selectRowIndexes:byExtendingSelection:
1000030f8:	4c 89 ff	movq	%r15, %rdi
1000030fb:	48 89 c2	movq	%rax, %rdx
1000030fe:	31 c9	xorl	%ecx, %ecx
100003100:	41 ff d4	callq	*%r12
100003103:	48 8b 35 86 f2 04 00	movq	324230(%rip), %rsi ## Objc selector ref: tableViewSelectionDidChange:
10000310a:	48 89 df	movq	%rbx, %rdi
10000310d:	31 d2	xorl	%edx, %edx
10000310f:	41 ff d4	callq	*%r12
100003112:	48 8d 7d d0	leaq	-48(%rbp), %rdi
100003116:	48 89 1f	movq	%rbx, (%rdi)
100003119:	48 8b 05 88 f6 04 00	movq	325256(%rip), %rax ## Objc class ref: CSProfileDoc
100003120:	48 89 47 08	movq	%rax, 8(%rdi)
100003124:	48 8b 35 ed f3 04 00	movq	324589(%rip), %rsi ## Objc selector ref: windowControllerDidLoadNib:
10000312b:	4c 89 f2	movq	%r14, %rdx
10000312e:	e8 a9 c3 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] windowControllerDidLoadNib:]
100003133:	48 83 c4 10	addq	$16, %rsp
100003137:	5b	popq	%rbx
100003138:	41 5c	popq	%r12
10000313a:	41 5e	popq	%r14
10000313c:	41 5f	popq	%r15
10000313e:	5d	popq	%rbp
10000313f:	c3	retq
100003140:	55	pushq	%rbp
100003141:	48 89 e5	movq	%rsp, %rbp
100003144:	48 8b 05 fd f7 04 00	movq	325629(%rip), %rax
10000314b:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
100003150:	74 2e	je	0x100003180
100003152:	48 8b 0d 0f f8 04 00	movq	325647(%rip), %rcx
100003159:	c6 04 0f 00	movb	$0, (%rdi,%rcx)
10000315d:	49 83 f8 02	cmpq	$2, %r8
100003161:	74 21	je	0x100003184
100003163:	49 83 f8 01	cmpq	$1, %r8
100003167:	74 28	je	0x100003191
100003169:	4d 85 c0	testq	%r8, %r8
10000316c:	75 12	jne	0x100003180
10000316e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003172:	48 8b 35 07 ea 04 00	movq	322055(%rip), %rsi ## Objc selector ref: save
100003179:	5d	popq	%rbp
10000317a:	ff 25 a0 9a 03 00	jmpq	*236192(%rip) ## Objc message: -[%rdi save]
100003180:	31 c0	xorl	%eax, %eax
100003182:	5d	popq	%rbp
100003183:	c3	retq
100003184:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003188:	48 8b 35 21 ea 04 00	movq	322081(%rip), %rsi ## Objc selector ref: saveTo:
10000318f:	eb 0b	jmp	0x10000319c
100003191:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003195:	48 8b 35 ec e9 04 00	movq	322028(%rip), %rsi ## Objc selector ref: saveAs:
10000319c:	5d	popq	%rbp
10000319d:	ff 25 7d 9a 03 00	jmpq	*236157(%rip) ## Objc message: -[%rdi saveAs:]
1000031a3:	55	pushq	%rbp
1000031a4:	48 89 e5	movq	%rsp, %rbp
1000031a7:	41 57	pushq	%r15
1000031a9:	41 56	pushq	%r14
1000031ab:	41 54	pushq	%r12
1000031ad:	53	pushq	%rbx
1000031ae:	49 89 d6	movq	%rdx, %r14
1000031b1:	48 89 fb	movq	%rdi, %rbx
1000031b4:	4c 8b 3d 8d f7 04 00	movq	325517(%rip), %r15
1000031bb:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
1000031bf:	ff 15 93 9a 03 00	callq	*236179(%rip) ## literal pool symbol address: _objc_release
1000031c5:	48 8b 3d 1c f4 04 00	movq	324636(%rip), %rdi ## Objc class ref: CSProfile
1000031cc:	48 8b 35 45 e8 04 00	movq	321605(%rip), %rsi ## Objc selector ref: profileWithURL:
1000031d3:	4c 8b 25 46 9a 03 00	movq	236102(%rip), %r12 ## Objc message: +[CSProfile profileWithURL:]
1000031da:	4c 89 f2	movq	%r14, %rdx
1000031dd:	41 ff d4	callq	*%r12
1000031e0:	48 89 c7	movq	%rax, %rdi
1000031e3:	ff 15 77 9a 03 00	callq	*236151(%rip) ## literal pool symbol address: _objc_retain
1000031e9:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
1000031ed:	48 8b 35 ac f2 04 00	movq	324268(%rip), %rsi ## Objc selector ref: valid
1000031f4:	48 89 c7	movq	%rax, %rdi
1000031f7:	41 ff d4	callq	*%r12
1000031fa:	84 c0	testb	%al, %al
1000031fc:	75 1d	jne	0x10000321b
1000031fe:	48 8b 35 d3 de 04 00	movq	319187(%rip), %rsi ## Objc selector ref: displayName
100003205:	48 89 df	movq	%rbx, %rdi
100003208:	41 ff d4	callq	*%r12
10000320b:	48 8b 35 8e eb 04 00	movq	322446(%rip), %rsi ## Objc selector ref: setDisplayName:
100003212:	48 89 df	movq	%rbx, %rdi
100003215:	48 89 c2	movq	%rax, %rdx
100003218:	41 ff d4	callq	*%r12
10000321b:	31 c0	xorl	%eax, %eax
10000321d:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
100003222:	0f 95 c0	setne	%al
100003225:	5b	popq	%rbx
100003226:	41 5c	popq	%r12
100003228:	41 5e	popq	%r14
10000322a:	41 5f	popq	%r15
10000322c:	5d	popq	%rbp
10000322d:	c3	retq
10000322e:	55	pushq	%rbp
10000322f:	48 89 e5	movq	%rsp, %rbp
100003232:	48 83 ec 10	subq	$16, %rsp
100003236:	48 8d 45 f0	leaq	-16(%rbp), %rax
10000323a:	48 89 38	movq	%rdi, (%rax)
10000323d:	48 8b 0d 64 f5 04 00	movq	324964(%rip), %rcx ## Objc class ref: CSProfileDoc
100003244:	48 89 48 08	movq	%rcx, 8(%rax)
100003248:	48 8b 35 89 de 04 00	movq	319113(%rip), %rsi ## Objc selector ref: displayName
10000324f:	48 89 c7	movq	%rax, %rdi
100003252:	e8 85 c2 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] displayName]
100003257:	48 83 c4 10	addq	$16, %rsp
10000325b:	5d	popq	%rbp
10000325c:	c3	retq
10000325d:	55	pushq	%rbp
10000325e:	48 89 e5	movq	%rsp, %rbp
100003261:	41 57	pushq	%r15
100003263:	41 56	pushq	%r14
100003265:	53	pushq	%rbx
100003266:	48 83 ec 28	subq	$40, %rsp
10000326a:	49 89 d6	movq	%rdx, %r14
10000326d:	48 89 fb	movq	%rdi, %rbx
100003270:	48 8b 05 d1 f6 04 00	movq	325329(%rip), %rax
100003277:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10000327b:	48 85 ff	testq	%rdi, %rdi
10000327e:	74 11	je	0x100003291
100003280:	48 8b 35 19 f2 04 00	movq	324121(%rip), %rsi ## Objc selector ref: valid
100003287:	ff 15 93 99 03 00	callq	*235923(%rip) ## Objc message: -[%rdi valid]
10000328d:	84 c0	testb	%al, %al
10000328f:	74 1e	je	0x1000032af
100003291:	48 8d 7d c8	leaq	-56(%rbp), %rdi
100003295:	48 89 1f	movq	%rbx, (%rdi)
100003298:	48 8b 05 09 f5 04 00	movq	324873(%rip), %rax ## Objc class ref: CSProfileDoc
10000329f:	48 89 47 08	movq	%rax, 8(%rdi)
1000032a3:	48 8b 35 f6 ea 04 00	movq	322294(%rip), %rsi ## Objc selector ref: setDisplayName:
1000032aa:	4c 89 f2	movq	%r14, %rdx
1000032ad:	eb 5b	jmp	0x10000330a
1000032af:	48 8b 3d 12 f3 04 00	movq	324370(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000032b6:	48 8b 35 73 f0 04 00	movq	323699(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
1000032bd:	48 8d 15 68 62 03 00	leaq	221800(%rip), %rdx ## literal pool for: "\342\232\240\357\270\217"
1000032c4:	4c 8b 3d 55 99 03 00	movq	235861(%rip), %r15 ## Objc message: +[NSString stringWithUTF8String:]
1000032cb:	41 ff d7	callq	*%r15
1000032ce:	48 8b 3d f3 f2 04 00	movq	324339(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000032d5:	48 8b 35 4c f0 04 00	movq	323660(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000032dc:	48 8d 15 9d 9d 03 00	leaq	236957(%rip), %rdx ## Objc cfstring ref: @"%@ %@"
1000032e3:	4c 89 f1	movq	%r14, %rcx
1000032e6:	49 89 c0	movq	%rax, %r8
1000032e9:	31 c0	xorl	%eax, %eax
1000032eb:	41 ff d7	callq	*%r15
1000032ee:	48 8d 7d d8	leaq	-40(%rbp), %rdi
1000032f2:	48 89 1f	movq	%rbx, (%rdi)
1000032f5:	48 8b 0d ac f4 04 00	movq	324780(%rip), %rcx ## Objc class ref: CSProfileDoc
1000032fc:	48 89 4f 08	movq	%rcx, 8(%rdi)
100003300:	48 8b 35 99 ea 04 00	movq	322201(%rip), %rsi ## Objc selector ref: setDisplayName:
100003307:	48 89 c2	movq	%rax, %rdx
10000330a:	e8 cd c1 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setDisplayName:]
10000330f:	48 83 c4 28	addq	$40, %rsp
100003313:	5b	popq	%rbx
100003314:	41 5e	popq	%r14
100003316:	41 5f	popq	%r15
100003318:	5d	popq	%rbp
100003319:	c3	retq
10000331a:	55	pushq	%rbp
10000331b:	48 89 e5	movq	%rsp, %rbp
10000331e:	48 8b 05 23 f6 04 00	movq	325155(%rip), %rax
100003325:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003329:	48 8b 35 b8 e6 04 00	movq	321208(%rip), %rsi ## Objc selector ref: profRef
100003330:	ff 15 ea 98 03 00	callq	*235754(%rip) ## Objc message: -[%rdi profRef]
100003336:	48 89 c7	movq	%rax, %rdi
100003339:	e8 46 bf 02 00	callq	0x10002f284 ## symbol stub for: _ColorSyncProfileCopyTagSignatures
10000333e:	48 85 c0	testq	%rax, %rax
100003341:	74 0d	je	0x100003350
100003343:	48 89 c7	movq	%rax, %rdi
100003346:	e8 07 bb 02 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10000334b:	48 ff c0	incq	%rax
10000334e:	eb 02	jmp	0x100003352
100003350:	31 c0	xorl	%eax, %eax
100003352:	5d	popq	%rbp
100003353:	c3	retq
100003354:	55	pushq	%rbp
100003355:	48 89 e5	movq	%rsp, %rbp
100003358:	41 57	pushq	%r15
10000335a:	41 56	pushq	%r14
10000335c:	41 54	pushq	%r12
10000335e:	53	pushq	%rbx
10000335f:	48 83 ec 10	subq	$16, %rsp
100003363:	4c 89 c3	movq	%r8, %rbx
100003366:	49 89 fe	movq	%rdi, %r14
100003369:	48 8b 35 d8 df 04 00	movq	319448(%rip), %rsi ## Objc selector ref: identifier
100003370:	48 89 cf	movq	%rcx, %rdi
100003373:	ff 15 a7 98 03 00	callq	*235687(%rip) ## Objc message: -[%rdi identifier]
100003379:	49 89 c4	movq	%rax, %r12
10000337c:	4c 8b 3d ed e1 04 00	movq	319981(%rip), %r15 ## Objc selector ref: isEqual:
100003383:	48 85 db	testq	%rbx, %rbx
100003386:	74 60	je	0x1000033e8
100003388:	48 8d 15 71 9d 03 00	leaq	236913(%rip), %rdx ## Objc cfstring ref: @"#"
10000338f:	4c 89 e7	movq	%r12, %rdi
100003392:	4c 89 fe	movq	%r15, %rsi
100003395:	ff 15 85 98 03 00	callq	*235653(%rip) ## Objc message: -[%rdi isEqual:]
10000339b:	84 c0	testb	%al, %al
10000339d:	0f 84 ae 00 00 00	je	0x100003451
1000033a3:	4c 8b 35 4e f2 04 00	movq	324174(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSNumberFormatter
1000033aa:	48 8b 3d 3f f2 04 00	movq	324159(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
1000033b1:	48 8b 35 70 e4 04 00	movq	320624(%rip), %rsi ## Objc selector ref: numberWithInteger:
1000033b8:	4c 8b 3d 61 98 03 00	movq	235617(%rip), %r15 ## Objc message: +[NSNumber numberWithInteger:]
1000033bf:	48 89 da	movq	%rbx, %rdx
1000033c2:	41 ff d7	callq	*%r15
1000033c5:	48 8b 35 9c e2 04 00	movq	320156(%rip), %rsi ## Objc selector ref: localizedStringFromNumber:numberStyle:
1000033cc:	b9 01 00 00 00	movl	$1, %ecx
1000033d1:	4c 89 f7	movq	%r14, %rdi
1000033d4:	48 89 c2	movq	%rax, %rdx
1000033d7:	4c 89 f8	movq	%r15, %rax
1000033da:	48 83 c4 10	addq	$16, %rsp
1000033de:	5b	popq	%rbx
1000033df:	41 5c	popq	%r12
1000033e1:	41 5e	popq	%r14
1000033e3:	41 5f	popq	%r15
1000033e5:	5d	popq	%rbp
1000033e6:	ff e0	jmpq	*%rax
1000033e8:	48 8d 15 b1 9c 03 00	leaq	236721(%rip), %rdx ## Objc cfstring ref: @"Tag"
1000033ef:	4c 89 e7	movq	%r12, %rdi
1000033f2:	4c 89 fe	movq	%r15, %rsi
1000033f5:	ff 15 25 98 03 00	callq	*235557(%rip) ## Objc message: -[%rdi localizedStringFromNumber:numberStyle:]
1000033fb:	84 c0	testb	%al, %al
1000033fd:	74 7f	je	0x10000347e
1000033ff:	48 8b 1d 9a f1 04 00	movq	323994(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
100003406:	4c 89 f7	movq	%r14, %rdi
100003409:	e8 da c0 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000340e:	48 8b 35 db d9 04 00	movq	317915(%rip), %rsi ## Objc selector ref: bundleForClass:
100003415:	4c 8b 35 04 98 03 00	movq	235524(%rip), %r14 ## Objc message: +[NSBundle bundleForClass:]
10000341c:	48 89 df	movq	%rbx, %rdi
10000341f:	48 89 c2	movq	%rax, %rdx
100003422:	41 ff d6	callq	*%r14
100003425:	48 8b 35 34 e2 04 00	movq	320052(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000342c:	48 8d 15 8d 9c 03 00	leaq	236685(%rip), %rdx ## Objc cfstring ref: @"Header"
100003433:	48 8d 0d 66 9a 03 00	leaq	236134(%rip), %rcx ## Objc cfstring ref: @""
10000343a:	48 89 c7	movq	%rax, %rdi
10000343d:	45 31 c0	xorl	%r8d, %r8d
100003440:	4c 89 f0	movq	%r14, %rax
100003443:	48 83 c4 10	addq	$16, %rsp
100003447:	5b	popq	%rbx
100003448:	41 5c	popq	%r12
10000344a:	41 5e	popq	%r14
10000344c:	41 5f	popq	%r15
10000344e:	5d	popq	%rbp
10000344f:	ff e0	jmpq	*%rax
100003451:	31 c0	xorl	%eax, %eax
100003453:	89 45 d8	movl	%eax, -40(%rbp)
100003456:	89 45 dc	movl	%eax, -36(%rbp)
100003459:	48 c7 45 d0 00 00 00 00	movq	$0, -48(%rbp)
100003461:	48 8d 15 b8 9c 03 00	leaq	236728(%rip), %rdx ## Objc cfstring ref: @"Data"
100003468:	4c 89 e7	movq	%r12, %rdi
10000346b:	4c 89 fe	movq	%r15, %rsi
10000346e:	ff 15 ac 97 03 00	callq	*235436(%rip) ## Objc message: -[%rdi localizedStringForKey:value:table:]
100003474:	84 c0	testb	%al, %al
100003476:	74 46	je	0x1000034be
100003478:	4c 8d 45 dc	leaq	-36(%rbp), %r8
10000347c:	eb 5f	jmp	0x1000034dd
10000347e:	48 8d 15 5b 9c 03 00	leaq	236635(%rip), %rdx ## Objc cfstring ref: @"Size"
100003485:	4c 89 e7	movq	%r12, %rdi
100003488:	4c 89 fe	movq	%r15, %rsi
10000348b:	ff 15 8f 97 03 00	callq	*235407(%rip) ## Objc message: -[%rdi localizedStringForKey:value:table:]
100003491:	84 c0	testb	%al, %al
100003493:	0f 84 33 01 00 00	je	0x1000035cc
100003499:	48 8b 3d 50 f1 04 00	movq	323920(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
1000034a0:	48 8b 35 79 e3 04 00	movq	320377(%rip), %rsi ## Objc selector ref: numberWithInt:
1000034a7:	ba 80 00 00 00	movl	$128, %edx
1000034ac:	48 83 c4 10	addq	$16, %rsp
1000034b0:	5b	popq	%rbx
1000034b1:	41 5c	popq	%r12
1000034b3:	41 5e	popq	%r14
1000034b5:	41 5f	popq	%r15
1000034b7:	5d	popq	%rbp
1000034b8:	ff 25 62 97 03 00	jmpq	*235362(%rip) ## Objc message: +[NSNumber numberWithInt:]
1000034be:	48 8d 15 7b 9c 03 00	leaq	236667(%rip), %rdx ## Objc cfstring ref: @"Desc"
1000034c5:	4c 89 e7	movq	%r12, %rdi
1000034c8:	4c 89 fe	movq	%r15, %rsi
1000034cb:	ff 15 4f 97 03 00	callq	*235343(%rip) ## Objc message: -[%rdi numberWithInt:]
1000034d1:	31 c9	xorl	%ecx, %ecx
1000034d3:	84 c0	testb	%al, %al
1000034d5:	4c 8d 45 dc	leaq	-36(%rbp), %r8
1000034d9:	4c 0f 44 c1	cmoveq	%rcx, %r8
1000034dd:	48 8b 05 64 f4 04 00	movq	324708(%rip), %rax
1000034e4:	49 8b 3c 06	movq	(%r14,%rax), %rdi
1000034e8:	48 8b 35 f1 dd 04 00	movq	318961(%rip), %rsi ## Objc selector ref: getElementInfoAtIndex:tagSig:tagType:dataSize:
1000034ef:	48 8d 4d d8	leaq	-40(%rbp), %rcx
1000034f3:	4c 8d 4d d0	leaq	-48(%rbp), %r9
1000034f7:	48 89 da	movq	%rbx, %rdx
1000034fa:	ff 15 20 97 03 00	callq	*235296(%rip) ## Objc message: -[%rdi getElementInfoAtIndex:tagSig:tagType:dataSize:]
100003500:	84 c0	testb	%al, %al
100003502:	0f 84 c4 00 00 00	je	0x1000035cc
100003508:	48 8d 15 91 9b 03 00	leaq	236433(%rip), %rdx ## Objc cfstring ref: @"Tag"
10000350f:	4c 89 e7	movq	%r12, %rdi
100003512:	4c 89 fe	movq	%r15, %rsi
100003515:	ff 15 05 97 03 00	callq	*235269(%rip) ## Objc message: -[%rdi getElementInfoAtIndex:tagSig:tagType:dataSize:]
10000351b:	84 c0	testb	%al, %al
10000351d:	74 13	je	0x100003532
10000351f:	48 8b 3d a2 f0 04 00	movq	323746(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100003526:	8b 55 d8	movl	-40(%rbp), %edx
100003529:	48 8b 35 e0 ed 04 00	movq	323040(%rip), %rsi ## Objc selector ref: stringForType:
100003530:	eb 28	jmp	0x10000355a
100003532:	48 8d 15 a7 9b 03 00	leaq	236455(%rip), %rdx ## Objc cfstring ref: @"Size"
100003539:	4c 89 e7	movq	%r12, %rdi
10000353c:	4c 89 fe	movq	%r15, %rsi
10000353f:	ff 15 db 96 03 00	callq	*235227(%rip) ## Objc message: +[NSString stringForType:]
100003545:	84 c0	testb	%al, %al
100003547:	74 19	je	0x100003562
100003549:	48 8b 3d a0 f0 04 00	movq	323744(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100003550:	8b 55 d0	movl	-48(%rbp), %edx
100003553:	48 8b 35 c6 e2 04 00	movq	320198(%rip), %rsi ## Objc selector ref: numberWithInt:
10000355a:	ff 15 c0 96 03 00	callq	*235200(%rip) ## Objc message: +[NSNumber numberWithInt:]
100003560:	eb 6c	jmp	0x1000035ce
100003562:	83 7d dc 00	cmpl	$0, -36(%rbp)
100003566:	74 64	je	0x1000035cc
100003568:	48 8d 15 b1 9b 03 00	leaq	236465(%rip), %rdx ## Objc cfstring ref: @"Data"
10000356f:	4c 89 e7	movq	%r12, %rdi
100003572:	4c 89 fe	movq	%r15, %rsi
100003575:	ff 15 a5 96 03 00	callq	*235173(%rip) ## Objc message: -[%rdi numberWithInt:]
10000357b:	84 c0	testb	%al, %al
10000357d:	74 0c	je	0x10000358b
10000357f:	48 8b 3d 42 f0 04 00	movq	323650(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100003586:	8b 55 dc	movl	-36(%rbp), %edx
100003589:	eb 9e	jmp	0x100003529
10000358b:	83 7d dc 00	cmpl	$0, -36(%rbp)
10000358f:	74 3b	je	0x1000035cc
100003591:	48 8d 15 a8 9b 03 00	leaq	236456(%rip), %rdx ## Objc cfstring ref: @"Desc"
100003598:	4c 89 e7	movq	%r12, %rdi
10000359b:	4c 89 fe	movq	%r15, %rsi
10000359e:	ff 15 7c 96 03 00	callq	*235132(%rip) ## Objc message: +[NSString numberWithInt:]
1000035a4:	84 c0	testb	%al, %al
1000035a6:	74 24	je	0x1000035cc
1000035a8:	48 8b 05 a1 f3 04 00	movq	324513(%rip), %rax
1000035af:	49 8b 3c 06	movq	(%r14,%rax), %rdi
1000035b3:	8b 55 d8	movl	-40(%rbp), %edx
1000035b6:	8b 4d dc	movl	-36(%rbp), %ecx
1000035b9:	4c 8b 45 d0	movq	-48(%rbp), %r8
1000035bd:	48 8b 35 b4 da 04 00	movq	318132(%rip), %rsi ## Objc selector ref: describeTagType:dataType:dataSize:
1000035c4:	ff 15 56 96 03 00	callq	*235094(%rip) ## Objc message: -[%rdi describeTagType:dataType:dataSize:]
1000035ca:	eb 02	jmp	0x1000035ce
1000035cc:	31 c0	xorl	%eax, %eax
1000035ce:	48 83 c4 10	addq	$16, %rsp
1000035d2:	5b	popq	%rbx
1000035d3:	41 5c	popq	%r12
1000035d5:	41 5e	popq	%r14
1000035d7:	41 5f	popq	%r15
1000035d9:	5d	popq	%rbp
1000035da:	c3	retq
1000035db:	55	pushq	%rbp
1000035dc:	48 89 e5	movq	%rsp, %rbp
1000035df:	31 c0	xorl	%eax, %eax
1000035e1:	5d	popq	%rbp
1000035e2:	c3	retq
1000035e3:	55	pushq	%rbp
1000035e4:	48 89 e5	movq	%rsp, %rbp
1000035e7:	41 56	pushq	%r14
1000035e9:	53	pushq	%rbx
1000035ea:	48 89 fb	movq	%rdi, %rbx
1000035ed:	48 8b 05 6c f3 04 00	movq	324460(%rip), %rax
1000035f4:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000035f8:	48 8b 35 49 e6 04 00	movq	321097(%rip), %rsi ## Objc selector ref: selectedRow
1000035ff:	4c 8b 35 1a 96 03 00	movq	235034(%rip), %r14 ## Objc message: -[%rdi selectedRow]
100003606:	41 ff d6	callq	*%r14
100003609:	48 8b 0d 60 f3 04 00	movq	324448(%rip), %rcx
100003610:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100003614:	48 8b 05 1d 90 03 00	movq	233501(%rip), %rax ## literal pool symbol address: _NSApp
10000361b:	48 8b 38	movq	(%rax), %rdi
10000361e:	48 8b 35 e3 d9 04 00	movq	317923(%rip), %rsi ## Objc selector ref: currentEvent
100003625:	41 ff d6	callq	*%r14
100003628:	48 8b 35 49 e1 04 00	movq	319817(%rip), %rsi ## Objc selector ref: modifierFlags
10000362f:	48 89 c7	movq	%rax, %rdi
100003632:	41 ff d6	callq	*%r14
100003635:	48 c1 e8 13	shrq	$19, %rax
100003639:	24 01	andb	$1, %al
10000363b:	48 8b 0d 36 f3 04 00	movq	324406(%rip), %rcx
100003642:	88 04 0b	movb	%al, (%rbx,%rcx)
100003645:	48 8b 05 0c f3 04 00	movq	324364(%rip), %rax
10000364c:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100003650:	48 85 ff	testq	%rdi, %rdi
100003653:	74 1c	je	0x100003671
100003655:	48 8b 35 dc eb 04 00	movq	322524(%rip), %rsi ## Objc selector ref: shouldUnselect:
10000365c:	48 89 da	movq	%rbx, %rdx
10000365f:	ff 15 bb 95 03 00	callq	*234939(%rip) ## Objc message: -[%rdi shouldUnselect:]
100003665:	89 c2	movl	%eax, %edx
100003667:	83 f8 01	cmpl	$1, %eax
10000366a:	76 0a	jbe	0x100003676
10000366c:	5b	popq	%rbx
10000366d:	41 5e	popq	%r14
10000366f:	5d	popq	%rbp
100003670:	c3	retq
100003671:	ba 01 00 00 00	movl	$1, %edx
100003676:	48 8b 35 c3 eb 04 00	movq	322499(%rip), %rsi ## Objc selector ref: shouldUnselectResult:
10000367d:	48 89 df	movq	%rbx, %rdi
100003680:	5b	popq	%rbx
100003681:	41 5e	popq	%r14
100003683:	5d	popq	%rbp
100003684:	ff 25 96 95 03 00	jmpq	*234902(%rip) ## Objc message: -[%rdi shouldUnselectResult:]
10000368a:	55	pushq	%rbp
10000368b:	48 89 e5	movq	%rsp, %rbp
10000368e:	41 57	pushq	%r15
100003690:	41 56	pushq	%r14
100003692:	41 55	pushq	%r13
100003694:	41 54	pushq	%r12
100003696:	53	pushq	%rbx
100003697:	48 83 ec 18	subq	$24, %rsp
10000369b:	48 89 fb	movq	%rdi, %rbx
10000369e:	b8 64 61 65 68	movl	$1751474532, %eax
1000036a3:	89 45 d0	movl	%eax, -48(%rbp)
1000036a6:	89 45 d4	movl	%eax, -44(%rbp)
1000036a9:	85 d2	testl	%edx, %edx
1000036ab:	0f 84 d8 00 00 00	je	0x100003789
1000036b1:	4c 8b 2d a0 f2 04 00	movq	324256(%rip), %r13
1000036b8:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000036bc:	48 8b 35 45 ee 04 00	movq	323141(%rip), %rsi ## Objc selector ref: willUnselect:
1000036c3:	4c 8b 25 56 95 03 00	movq	234838(%rip), %r12 ## Objc message: -[%rdi willUnselect:]
1000036ca:	48 89 da	movq	%rbx, %rdx
1000036cd:	41 ff d4	callq	*%r12
1000036d0:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000036d4:	48 8b 35 f5 d9 04 00	movq	317941(%rip), %rsi ## Objc selector ref: didUnselect:
1000036db:	48 89 da	movq	%rbx, %rdx
1000036de:	41 ff d4	callq	*%r12
1000036e1:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000036e5:	ff 15 6d 95 03 00	callq	*234861(%rip) ## literal pool symbol address: _objc_release
1000036eb:	4a c7 04 2b 00 00 00 00	movq	$0, (%rbx,%r13)
1000036f3:	4c 8b 3d 76 f2 04 00	movq	324214(%rip), %r15
1000036fa:	4a 8b 14 3b	movq	(%rbx,%r15), %rdx
1000036fe:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100003708:	48 39 c2	cmpq	%rax, %rdx
10000370b:	0f 84 74 01 00 00	je	0x100003885
100003711:	48 85 d2	testq	%rdx, %rdx
100003714:	7e 24	jle	0x10000373a
100003716:	48 8b 05 2b f2 04 00	movq	324139(%rip), %rax
10000371d:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100003721:	48 8b 35 b8 db 04 00	movq	318392(%rip), %rsi ## Objc selector ref: getElementInfoAtIndex:tagSig:tagType:dataSize:
100003728:	48 8d 4d d0	leaq	-48(%rbp), %rcx
10000372c:	4c 8d 45 d4	leaq	-44(%rbp), %r8
100003730:	4c 8d 4d c8	leaq	-56(%rbp), %r9
100003734:	ff 15 e6 94 03 00	callq	*234726(%rip) ## Objc message: -[%rdi getElementInfoAtIndex:tagSig:tagType:dataSize:]
10000373a:	4c 8b 35 37 f2 04 00	movq	324151(%rip), %r14
100003741:	42 80 3c 33 00	cmpb	$0, (%rbx,%r14)
100003746:	48 8b 05 03 f2 04 00	movq	324099(%rip), %rax
10000374d:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100003751:	0f 84 81 00 00 00	je	0x1000037d8
100003757:	48 8b 35 22 e1 04 00	movq	319778(%rip), %rsi ## Objc selector ref: objectToDisplayTagType:dataType:dataSize:
10000375e:	ba 2a 2a 2a 2a	movl	$707406378, %edx
100003763:	b9 2a 2a 2a 2a	movl	$707406378, %ecx
100003768:	45 31 c0	xorl	%r8d, %r8d
10000376b:	ff 15 af 94 03 00	callq	*234671(%rip) ## Objc message: -[%rdi objectToDisplayTagType:dataType:dataSize:]
100003771:	48 89 c7	movq	%rax, %rdi
100003774:	ff 15 e6 94 03 00	callq	*234726(%rip) ## literal pool symbol address: _objc_retain
10000377a:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
10000377e:	42 c6 04 33 00	movb	$0, (%rbx,%r14)
100003783:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100003787:	eb 76	jmp	0x1000037ff
100003789:	48 8b 05 d0 f1 04 00	movq	324048(%rip), %rax
100003790:	4c 8b 34 03	movq	(%rbx,%rax), %r14
100003794:	48 8b 3d 45 ee 04 00	movq	323141(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSIndexSet
10000379b:	48 8b 05 de f1 04 00	movq	324062(%rip), %rax
1000037a2:	48 8b 14 03	movq	(%rbx,%rax), %rdx
1000037a6:	48 8b 35 53 dc 04 00	movq	318547(%rip), %rsi ## Objc selector ref: indexSetWithIndex:
1000037ad:	48 8b 1d 6c 94 03 00	movq	234604(%rip), %rbx ## Objc message: +[NSIndexSet indexSetWithIndex:]
1000037b4:	ff d3	callq	*%rbx
1000037b6:	48 8b 35 63 e4 04 00	movq	320611(%rip), %rsi ## Objc selector ref: selectRowIndexes:byExtendingSelection:
1000037bd:	4c 89 f7	movq	%r14, %rdi
1000037c0:	48 89 c2	movq	%rax, %rdx
1000037c3:	31 c9	xorl	%ecx, %ecx
1000037c5:	48 89 d8	movq	%rbx, %rax
1000037c8:	48 83 c4 18	addq	$24, %rsp
1000037cc:	5b	popq	%rbx
1000037cd:	41 5c	popq	%r12
1000037cf:	41 5d	popq	%r13
1000037d1:	41 5e	popq	%r14
1000037d3:	41 5f	popq	%r15
1000037d5:	5d	popq	%rbp
1000037d6:	ff e0	jmpq	*%rax
1000037d8:	8b 55 d0	movl	-48(%rbp), %edx
1000037db:	8b 4d d4	movl	-44(%rbp), %ecx
1000037de:	44 8b 45 c8	movl	-56(%rbp), %r8d
1000037e2:	48 8b 35 97 e0 04 00	movq	319639(%rip), %rsi ## Objc selector ref: objectToDisplayTagType:dataType:dataSize:
1000037e9:	ff 15 31 94 03 00	callq	*234545(%rip) ## Objc message: -[%rdi objectToDisplayTagType:dataType:dataSize:]
1000037ef:	48 89 c7	movq	%rax, %rdi
1000037f2:	ff 15 68 94 03 00	callq	*234600(%rip) ## literal pool symbol address: _objc_retain
1000037f8:	48 89 c7	movq	%rax, %rdi
1000037fb:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
1000037ff:	48 8b 35 b2 ec 04 00	movq	322738(%rip), %rsi ## Objc selector ref: view
100003806:	41 ff d4	callq	*%r12
100003809:	49 89 c6	movq	%rax, %r14
10000380c:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100003810:	48 8b 35 e9 ec 04 00	movq	322793(%rip), %rsi ## Objc selector ref: willSelect:
100003817:	48 89 da	movq	%rbx, %rdx
10000381a:	41 ff d4	callq	*%r12
10000381d:	4a 8b 04 3b	movq	(%rbx,%r15), %rax
100003821:	48 8b 0d 58 f1 04 00	movq	323928(%rip), %rcx
100003828:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10000382c:	4e 8b 3c 2b	movq	(%rbx,%r13), %r15
100003830:	48 8b 05 11 f1 04 00	movq	323857(%rip), %rax
100003837:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000383b:	48 8b 35 a6 e1 04 00	movq	319910(%rip), %rsi ## Objc selector ref: profRef
100003842:	41 ff d4	callq	*%r12
100003845:	8b 4d d0	movl	-48(%rbp), %ecx
100003848:	44 8b 45 d4	movl	-44(%rbp), %r8d
10000384c:	48 8b 35 fd e7 04 00	movq	321533(%rip), %rsi ## Objc selector ref: setProfile:tagType:dataType:
100003853:	4c 89 ff	movq	%r15, %rdi
100003856:	48 89 c2	movq	%rax, %rdx
100003859:	41 ff d4	callq	*%r12
10000385c:	48 8b 05 25 f1 04 00	movq	323877(%rip), %rax
100003863:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100003867:	48 8b 35 d2 e4 04 00	movq	320722(%rip), %rsi ## Objc selector ref: setContentView:
10000386e:	4c 89 f2	movq	%r14, %rdx
100003871:	41 ff d4	callq	*%r12
100003874:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100003878:	48 8b 35 49 d8 04 00	movq	317513(%rip), %rsi ## Objc selector ref: didSelect:
10000387f:	48 89 da	movq	%rbx, %rdx
100003882:	41 ff d4	callq	*%r12
100003885:	48 83 c4 18	addq	$24, %rsp
100003889:	5b	popq	%rbx
10000388a:	41 5c	popq	%r12
10000388c:	41 5d	popq	%r13
10000388e:	41 5e	popq	%r14
100003890:	41 5f	popq	%r15
100003892:	5d	popq	%rbp
100003893:	c3	retq
100003894:	55	pushq	%rbp
100003895:	48 89 e5	movq	%rsp, %rbp
100003898:	41 56	pushq	%r14
10000389a:	53	pushq	%rbx
10000389b:	48 89 fb	movq	%rdi, %rbx
10000389e:	48 8b 05 cb f0 04 00	movq	323787(%rip), %rax
1000038a5:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
1000038af:	48 89 0c 07	movq	%rcx, (%rdi,%rax)
1000038b3:	4c 8b 35 9e f0 04 00	movq	323742(%rip), %r14
1000038ba:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
1000038be:	48 85 ff	testq	%rdi, %rdi
1000038c1:	74 19	je	0x1000038dc
1000038c3:	48 8b 35 6e e9 04 00	movq	321902(%rip), %rsi ## Objc selector ref: shouldUnselect:
1000038ca:	48 89 da	movq	%rbx, %rdx
1000038cd:	ff 15 4d 93 03 00	callq	*234317(%rip) ## Objc message: -[%rdi shouldUnselect:]
1000038d3:	89 c2	movl	%eax, %edx
1000038d5:	83 f8 01	cmpl	$1, %eax
1000038d8:	76 07	jbe	0x1000038e1
1000038da:	eb 15	jmp	0x1000038f1
1000038dc:	ba 01 00 00 00	movl	$1, %edx
1000038e1:	48 8b 35 58 e9 04 00	movq	321880(%rip), %rsi ## Objc selector ref: shouldUnselectResult:
1000038e8:	48 89 df	movq	%rbx, %rdi
1000038eb:	ff 15 2f 93 03 00	callq	*234287(%rip) ## Objc message: -[%rdi shouldUnselectResult:]
1000038f1:	31 c0	xorl	%eax, %eax
1000038f3:	4a 83 3c 33 00	cmpq	$0, (%rbx,%r14)
1000038f8:	0f 94 c0	sete	%al
1000038fb:	5b	popq	%rbx
1000038fc:	41 5e	popq	%r14
1000038fe:	5d	popq	%rbp
1000038ff:	c3	retq
100003900:	55	pushq	%rbp
100003901:	48 89 e5	movq	%rsp, %rbp
100003904:	53	pushq	%rbx
100003905:	50	pushq	%rax
100003906:	48 8b 05 5b f0 04 00	movq	323675(%rip), %rax
10000390d:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
100003911:	74 07	je	0x10000391a
100003913:	48 83 c4 08	addq	$8, %rsp
100003917:	5b	popq	%rbx
100003918:	5d	popq	%rbp
100003919:	c3	retq
10000391a:	48 89 fb	movq	%rdi, %rbx
10000391d:	48 8b 35 e4 e0 04 00	movq	319716(%rip), %rsi ## Objc selector ref: profileIsDirty
100003924:	ff 15 f6 92 03 00	callq	*234230(%rip) ## Objc message: -[%rdi profileIsDirty]
10000392a:	84 c0	testb	%al, %al
10000392c:	74 e5	je	0x100003913
10000392e:	48 8b 35 03 eb 04 00	movq	322307(%rip), %rsi ## Objc selector ref: updateChangeCount:
100003935:	48 89 df	movq	%rbx, %rdi
100003938:	31 d2	xorl	%edx, %edx
10000393a:	48 83 c4 08	addq	$8, %rsp
10000393e:	5b	popq	%rbx
10000393f:	5d	popq	%rbp
100003940:	ff 25 da 92 03 00	jmpq	*234202(%rip) ## Objc message: -[%rdi updateChangeCount:]
100003946:	55	pushq	%rbp
100003947:	48 89 e5	movq	%rsp, %rbp
10000394a:	41 56	pushq	%r14
10000394c:	53	pushq	%rbx
10000394d:	4c 8b 35 14 f0 04 00	movq	323604(%rip), %r14
100003954:	42 8a 04 37	movb	(%rdi,%r14), %al
100003958:	84 c0	testb	%al, %al
10000395a:	75 1f	jne	0x10000397b
10000395c:	48 89 fb	movq	%rdi, %rbx
10000395f:	48 8b 05 e2 ef 04 00	movq	323554(%rip), %rax
100003966:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10000396a:	48 8b 35 ef db 04 00	movq	318447(%rip), %rsi ## Objc selector ref: isDirty
100003971:	ff 15 a9 92 03 00	callq	*234153(%rip) ## Objc message: -[%rdi isDirty]
100003977:	42 88 04 33	movb	%al, (%rbx,%r14)
10000397b:	0f be c0	movsbl	%al, %eax
10000397e:	5b	popq	%rbx
10000397f:	41 5e	popq	%r14
100003981:	5d	popq	%rbp
100003982:	c3	retq
100003983:	55	pushq	%rbp
100003984:	48 89 e5	movq	%rsp, %rbp
100003987:	48 8b 05 02 f0 04 00	movq	323586(%rip), %rax
10000398e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100003992:	48 8b 35 af d5 04 00	movq	316847(%rip), %rsi ## Objc selector ref: contentView
100003999:	5d	popq	%rbp
10000399a:	ff 25 80 92 03 00	jmpq	*234112(%rip) ## Objc message: -[%rdi contentView]
1000039a0:	55	pushq	%rbp
1000039a1:	48 89 e5	movq	%rsp, %rbp
1000039a4:	41 57	pushq	%r15
1000039a6:	41 56	pushq	%r14
1000039a8:	41 54	pushq	%r12
1000039aa:	53	pushq	%rbx
1000039ab:	48 89 fb	movq	%rdi, %rbx
1000039ae:	4c 8b 3d e3 ef 04 00	movq	323555(%rip), %r15
1000039b5:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
1000039b9:	48 39 d7	cmpq	%rdx, %rdi
1000039bc:	74 30	je	0x1000039ee
1000039be:	49 89 d6	movq	%rdx, %r14
1000039c1:	e8 04 bb 02 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
1000039c6:	48 8b 35 93 eb 04 00	movq	322451(%rip), %rsi ## Objc selector ref: zone
1000039cd:	4c 8b 25 4c 92 03 00	movq	234060(%rip), %r12 ## Objc message: -[%rdi zone]
1000039d4:	48 89 df	movq	%rbx, %rdi
1000039d7:	41 ff d4	callq	*%r12
1000039da:	48 8b 35 d7 d5 04 00	movq	316887(%rip), %rsi ## Objc selector ref: copyWithZone:
1000039e1:	4c 89 f7	movq	%r14, %rdi
1000039e4:	48 89 c2	movq	%rax, %rdx
1000039e7:	41 ff d4	callq	*%r12
1000039ea:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
1000039ee:	5b	popq	%rbx
1000039ef:	41 5c	popq	%r12
1000039f1:	41 5e	popq	%r14
1000039f3:	41 5f	popq	%r15
1000039f5:	5d	popq	%rbp
1000039f6:	c3	retq
1000039f7:	55	pushq	%rbp
1000039f8:	48 89 e5	movq	%rsp, %rbp
1000039fb:	41 57	pushq	%r15
1000039fd:	41 56	pushq	%r14
1000039ff:	53	pushq	%rbx
100003a00:	50	pushq	%rax
100003a01:	4c 8b 35 90 ef 04 00	movq	323472(%rip), %r14
100003a08:	4a 8b 04 37	movq	(%rdi,%r14), %rax
100003a0c:	48 85 c0	testq	%rax, %rax
100003a0f:	75 2f	jne	0x100003a40
100003a11:	48 89 fb	movq	%rdi, %rbx
100003a14:	48 8b 3d e5 eb 04 00	movq	322533(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintInfo
100003a1b:	48 8b 35 06 e8 04 00	movq	321542(%rip), %rsi ## Objc selector ref: sharedPrintInfo
100003a22:	4c 8b 3d f7 91 03 00	movq	233975(%rip), %r15 ## Objc message: +[NSPrintInfo sharedPrintInfo]
100003a29:	41 ff d7	callq	*%r15
100003a2c:	48 8b 35 f5 e5 04 00	movq	321013(%rip), %rsi ## Objc selector ref: setPrintInfo:
100003a33:	48 89 df	movq	%rbx, %rdi
100003a36:	48 89 c2	movq	%rax, %rdx
100003a39:	41 ff d7	callq	*%r15
100003a3c:	4a 8b 04 33	movq	(%rbx,%r14), %rax
100003a40:	48 83 c4 08	addq	$8, %rsp
100003a44:	5b	popq	%rbx
100003a45:	41 5e	popq	%r14
100003a47:	41 5f	popq	%r15
100003a49:	5d	popq	%rbp
100003a4a:	c3	retq
100003a4b:	55	pushq	%rbp
100003a4c:	48 89 e5	movq	%rsp, %rbp
100003a4f:	41 57	pushq	%r15
100003a51:	41 56	pushq	%r14
100003a53:	41 55	pushq	%r13
100003a55:	41 54	pushq	%r12
100003a57:	53	pushq	%rbx
100003a58:	48 83 ec 38	subq	$56, %rsp
100003a5c:	49 89 ce	movq	%rcx, %r14
100003a5f:	49 89 ff	movq	%rdi, %r15
100003a62:	48 8b 35 37 df 04 00	movq	319287(%rip), %rsi ## Objc selector ref: printInfo
100003a69:	4c 8b 2d b0 91 03 00	movq	233904(%rip), %r13 ## Objc message: -[%rdi printInfo]
100003a70:	41 ff d5	callq	*%r13
100003a73:	48 89 c3	movq	%rax, %rbx
100003a76:	48 8b 35 c3 de 04 00	movq	319171(%rip), %rsi ## Objc selector ref: paperSize
100003a7d:	48 89 c7	movq	%rax, %rdi
100003a80:	41 ff d5	callq	*%r13
100003a83:	48 85 db	testq	%rbx, %rbx
100003a86:	74 47	je	0x100003acf
100003a88:	48 8b 15 39 d9 04 00	movq	317753(%rip), %rdx ## Objc selector ref: imageablePageBounds
100003a8f:	4c 8d 65 a0	leaq	-96(%rbp), %r12
100003a93:	4c 89 e7	movq	%r12, %rdi
100003a96:	48 89 de	movq	%rbx, %rsi
100003a99:	f2 0f 11 4d d0	movsd	%xmm1, -48(%rbp)
100003a9e:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100003aa3:	e8 3a ba 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100003aa8:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
100003aad:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100003ab2:	f2 41 0f 10 1c 24	movsd	(%r12), %xmm3
100003ab8:	f2 41 0f 10 6c 24 08	movsd	8(%r12), %xmm5
100003abf:	f2 41 0f 10 54 24 10	movsd	16(%r12), %xmm2
100003ac6:	f2 41 0f 10 74 24 18	movsd	24(%r12), %xmm6
100003acd:	eb 1c	jmp	0x100003aeb
100003acf:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100003ad3:	66 0f 29 55 b0	movapd	%xmm2, -80(%rbp)
100003ad8:	66 0f 29 55 a0	movapd	%xmm2, -96(%rbp)
100003add:	66 0f 57 f6	xorpd	%xmm6, %xmm6
100003ae1:	0f 57 ed	xorps	%xmm5, %xmm5
100003ae4:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100003ae8:	0f 57 db	xorps	%xmm3, %xmm3
100003aeb:	f2 0f 5a e3	cvtsd2ss	%xmm3, %xmm4
100003aef:	f2 0f 58 d3	addsd	%xmm3, %xmm2
100003af3:	f2 0f 5c c2	subsd	%xmm2, %xmm0
100003af7:	0f 57 d2	xorps	%xmm2, %xmm2
100003afa:	f2 0f 5a d0	cvtsd2ss	%xmm0, %xmm2
100003afe:	f3 0f 5f d4	maxss	%xmm4, %xmm2
100003b02:	0f 57 db	xorps	%xmm3, %xmm3
100003b05:	f2 0f 5a dd	cvtsd2ss	%xmm5, %xmm3
100003b09:	f2 0f 58 f5	addsd	%xmm5, %xmm6
100003b0d:	f2 0f 5c ce	subsd	%xmm6, %xmm1
100003b11:	0f 57 c0	xorps	%xmm0, %xmm0
100003b14:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100003b18:	f3 0f 5f d8	maxss	%xmm0, %xmm3
100003b1c:	0f 57 c0	xorps	%xmm0, %xmm0
100003b1f:	f3 0f 5f d0	maxss	%xmm0, %xmm2
100003b23:	f3 0f 5f d8	maxss	%xmm0, %xmm3
100003b27:	f3 0f 11 5d d0	movss	%xmm3, -48(%rbp)
100003b2c:	0f 57 c0	xorps	%xmm0, %xmm0
100003b2f:	f3 0f 5a c2	cvtss2sd	%xmm2, %xmm0
100003b33:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100003b38:	48 8b 35 11 e4 04 00	movq	320529(%rip), %rsi ## Objc selector ref: setLeftMargin:
100003b3f:	48 89 df	movq	%rbx, %rdi
100003b42:	41 ff d5	callq	*%r13
100003b45:	48 8b 35 34 e5 04 00	movq	320820(%rip), %rsi ## Objc selector ref: setRightMargin:
100003b4c:	48 89 df	movq	%rbx, %rdi
100003b4f:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
100003b54:	41 ff d5	callq	*%r13
100003b57:	0f 57 c0	xorps	%xmm0, %xmm0
100003b5a:	f3 0f 5a 45 d0	cvtss2sd	-48(%rbp), %xmm0
100003b5f:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100003b64:	48 8b 35 cd e5 04 00	movq	320973(%rip), %rsi ## Objc selector ref: setTopMargin:
100003b6b:	48 89 df	movq	%rbx, %rdi
100003b6e:	41 ff d5	callq	*%r13
100003b71:	48 8b 35 78 e1 04 00	movq	319864(%rip), %rsi ## Objc selector ref: setBottomMargin:
100003b78:	48 89 df	movq	%rbx, %rdi
100003b7b:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
100003b80:	41 ff d5	callq	*%r13
100003b83:	48 8b 05 06 ee 04 00	movq	323078(%rip), %rax
100003b8a:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100003b8e:	48 8b 35 b3 d3 04 00	movq	316339(%rip), %rsi ## Objc selector ref: contentView
100003b95:	41 ff d5	callq	*%r13
100003b98:	48 8b 3d 69 ea 04 00	movq	322153(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
100003b9f:	48 8b 35 0a de 04 00	movq	318986(%rip), %rsi ## Objc selector ref: printOperationWithView:printInfo:
100003ba6:	48 89 c2	movq	%rax, %rdx
100003ba9:	48 89 d9	movq	%rbx, %rcx
100003bac:	41 ff d5	callq	*%r13
100003baf:	49 89 c4	movq	%rax, %r12
100003bb2:	4c 8b 3d ff dd 04 00	movq	318975(%rip), %r15 ## Objc selector ref: printPanel
100003bb9:	48 89 c7	movq	%rax, %rdi
100003bbc:	4c 89 fe	movq	%r15, %rsi
100003bbf:	41 ff d5	callq	*%r13
100003bc2:	48 8b 35 1f dd 04 00	movq	318751(%rip), %rsi ## Objc selector ref: options
100003bc9:	48 89 c7	movq	%rax, %rdi
100003bcc:	41 ff d5	callq	*%r13
100003bcf:	48 89 c3	movq	%rax, %rbx
100003bd2:	48 83 cb 0c	orq	$12, %rbx
100003bd6:	4c 89 e7	movq	%r12, %rdi
100003bd9:	4c 89 fe	movq	%r15, %rsi
100003bdc:	41 ff d5	callq	*%r13
100003bdf:	48 8b 0d d2 8a 03 00	movq	232146(%rip), %rcx ## literal pool symbol address: _NSPrintPhotoJobStyleHint
100003be6:	48 8b 11	movq	(%rcx), %rdx
100003be9:	48 8b 35 20 e3 04 00	movq	320288(%rip), %rsi ## Objc selector ref: setJobStyleHint:
100003bf0:	48 89 c7	movq	%rax, %rdi
100003bf3:	41 ff d5	callq	*%r13
100003bf6:	4c 89 e7	movq	%r12, %rdi
100003bf9:	4c 89 fe	movq	%r15, %rsi
100003bfc:	41 ff d5	callq	*%r13
100003bff:	48 8b 35 f2 e3 04 00	movq	320498(%rip), %rsi ## Objc selector ref: setOptions:
100003c06:	48 89 c7	movq	%rax, %rdi
100003c09:	48 89 da	movq	%rbx, %rdx
100003c0c:	41 ff d5	callq	*%r13
100003c0f:	4d 85 f6	testq	%r14, %r14
100003c12:	74 07	je	0x100003c1b
100003c14:	49 c7 06 00 00 00 00	movq	$0, (%r14)
100003c1b:	4c 89 e0	movq	%r12, %rax
100003c1e:	48 83 c4 38	addq	$56, %rsp
100003c22:	5b	popq	%rbx
100003c23:	41 5c	popq	%r12
100003c25:	41 5d	popq	%r13
100003c27:	41 5e	popq	%r14
100003c29:	41 5f	popq	%r15
100003c2b:	5d	popq	%rbp
100003c2c:	c3	retq
100003c2d:	55	pushq	%rbp
100003c2e:	48 89 e5	movq	%rsp, %rbp
100003c31:	41 57	pushq	%r15
100003c33:	41 56	pushq	%r14
100003c35:	41 54	pushq	%r12
100003c37:	53	pushq	%rbx
100003c38:	49 89 d6	movq	%rdx, %r14
100003c3b:	48 89 fb	movq	%rdi, %rbx
100003c3e:	48 8b 3d 5b e9 04 00	movq	321883(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100003c45:	48 8b 35 a4 d1 04 00	movq	315812(%rip), %rsi ## Objc selector ref: bundleForClass:
100003c4c:	4c 8b 25 cd 8f 03 00	movq	233421(%rip), %r12 ## Objc message: +[NSBundle bundleForClass:]
100003c53:	48 89 da	movq	%rbx, %rdx
100003c56:	41 ff d4	callq	*%r12
100003c59:	49 89 c7	movq	%rax, %r15
100003c5c:	48 89 df	movq	%rbx, %rdi
100003c5f:	e8 b6 b6 02 00	callq	0x10002f31a ## symbol stub for: _NSStringFromClass
100003c64:	48 8b 35 f5 d9 04 00	movq	317941(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100003c6b:	48 8d 0d 2e 92 03 00	leaq	234030(%rip), %rcx ## Objc cfstring ref: @""
100003c72:	4c 89 ff	movq	%r15, %rdi
100003c75:	4c 89 f2	movq	%r14, %rdx
100003c78:	49 89 c0	movq	%rax, %r8
100003c7b:	4c 89 e0	movq	%r12, %rax
100003c7e:	5b	popq	%rbx
100003c7f:	41 5c	popq	%r12
100003c81:	41 5e	popq	%r14
100003c83:	41 5f	popq	%r15
100003c85:	5d	popq	%rbp
100003c86:	ff e0	jmpq	*%rax
100003c88:	55	pushq	%rbp
100003c89:	48 89 e5	movq	%rsp, %rbp
100003c8c:	53	pushq	%rbx
100003c8d:	50	pushq	%rax
100003c8e:	48 89 d3	movq	%rdx, %rbx
100003c91:	e8 28 b8 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100003c96:	48 8b 35 fb d7 04 00	movq	317435(%rip), %rsi ## Objc selector ref: initWithPath:
100003c9d:	48 89 c7	movq	%rax, %rdi
100003ca0:	48 89 da	movq	%rbx, %rdx
100003ca3:	ff 15 77 8f 03 00	callq	*233335(%rip) ## Objc message: -[%rdi initWithPath:]
100003ca9:	48 89 c7	movq	%rax, %rdi
100003cac:	48 83 c4 08	addq	$8, %rsp
100003cb0:	5b	popq	%rbx
100003cb1:	5d	popq	%rbp
100003cb2:	e9 13 b8 02 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
100003cb7:	55	pushq	%rbp
100003cb8:	48 89 e5	movq	%rsp, %rbp
100003cbb:	41 56	pushq	%r14
100003cbd:	53	pushq	%rbx
100003cbe:	48 83 ec 10	subq	$16, %rsp
100003cc2:	49 89 d6	movq	%rdx, %r14
100003cc5:	48 8d 45 e0	leaq	-32(%rbp), %rax
100003cc9:	48 89 38	movq	%rdi, (%rax)
100003ccc:	48 8b 0d dd ea 04 00	movq	322269(%rip), %rcx ## Objc class ref: CSProfTag
100003cd3:	48 89 48 08	movq	%rcx, 8(%rax)
100003cd7:	48 8b 35 32 d7 04 00	movq	317234(%rip), %rsi ## Objc selector ref: init
100003cde:	48 89 c7	movq	%rax, %rdi
100003ce1:	e8 f6 b7 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
100003ce6:	48 89 c3	movq	%rax, %rbx
100003ce9:	48 85 c0	testq	%rax, %rax
100003cec:	74 0d	je	0x100003cfb
100003cee:	4c 89 f7	movq	%r14, %rdi
100003cf1:	ff 15 69 8f 03 00	callq	*233321(%rip) ## literal pool symbol address: _objc_retain
100003cf7:	48 89 43 08	movq	%rax, 8(%rbx)
100003cfb:	48 89 d8	movq	%rbx, %rax
100003cfe:	48 83 c4 10	addq	$16, %rsp
100003d02:	5b	popq	%rbx
100003d03:	41 5e	popq	%r14
100003d05:	5d	popq	%rbp
100003d06:	c3	retq
100003d07:	55	pushq	%rbp
100003d08:	48 89 e5	movq	%rsp, %rbp
100003d0b:	53	pushq	%rbx
100003d0c:	48 83 ec 18	subq	$24, %rsp
100003d10:	48 89 fb	movq	%rdi, %rbx
100003d13:	48 8b 7f 08	movq	8(%rdi), %rdi
100003d17:	ff 15 3b 8f 03 00	callq	*233275(%rip) ## literal pool symbol address: _objc_release
100003d1d:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100003d21:	48 89 1f	movq	%rbx, (%rdi)
100003d24:	48 8b 05 85 ea 04 00	movq	322181(%rip), %rax ## Objc class ref: CSProfTag
100003d2b:	48 89 47 08	movq	%rax, 8(%rdi)
100003d2f:	48 8b 35 1a d3 04 00	movq	316186(%rip), %rsi ## Objc selector ref: dealloc
100003d36:	e8 a1 b7 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100003d3b:	48 83 c4 18	addq	$24, %rsp
100003d3f:	5b	popq	%rbx
100003d40:	5d	popq	%rbp
100003d41:	c3	retq
100003d42:	55	pushq	%rbp
100003d43:	48 89 e5	movq	%rsp, %rbp
100003d46:	53	pushq	%rbx
100003d47:	50	pushq	%rax
100003d48:	48 8b 1d 51 e8 04 00	movq	321617(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
100003d4f:	e8 94 b7 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100003d54:	48 8b 35 95 d0 04 00	movq	315541(%rip), %rsi ## Objc selector ref: bundleForClass:
100003d5b:	48 89 df	movq	%rbx, %rdi
100003d5e:	48 89 c2	movq	%rax, %rdx
100003d61:	48 83 c4 08	addq	$8, %rsp
100003d65:	5b	popq	%rbx
100003d66:	5d	popq	%rbp
100003d67:	ff 25 b3 8e 03 00	jmpq	*233139(%rip) ## Objc message: +[NSBundle bundleForClass:]
100003d6d:	55	pushq	%rbp
100003d6e:	48 89 e5	movq	%rsp, %rbp
100003d71:	53	pushq	%rbx
100003d72:	50	pushq	%rax
100003d73:	48 8b 1d 4e e8 04 00	movq	321614(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
100003d7a:	e8 69 b7 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100003d7f:	48 89 c7	movq	%rax, %rdi
100003d82:	e8 93 b5 02 00	callq	0x10002f31a ## symbol stub for: _NSStringFromClass
100003d87:	48 8b 35 9a e5 04 00	movq	320922(%rip), %rsi ## Objc selector ref: stringWithFormat:
100003d8e:	48 8d 15 cb 93 03 00	leaq	234443(%rip), %rdx ## Objc cfstring ref: @"com.apple.ColorSyncUtility.%@"
100003d95:	48 89 df	movq	%rbx, %rdi
100003d98:	48 89 c1	movq	%rax, %rcx
100003d9b:	31 c0	xorl	%eax, %eax
100003d9d:	48 83 c4 08	addq	$8, %rsp
100003da1:	5b	popq	%rbx
100003da2:	5d	popq	%rbp
100003da3:	ff 25 77 8e 03 00	jmpq	*233079(%rip) ## Objc message: +[NSString stringWithFormat:]
100003da9:	55	pushq	%rbp
100003daa:	48 89 e5	movq	%rsp, %rbp
100003dad:	53	pushq	%rbx
100003dae:	50	pushq	%rax
100003daf:	48 89 d3	movq	%rdx, %rbx
100003db2:	e8 31 b7 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100003db7:	48 8b 35 9a d8 04 00	movq	317594(%rip), %rsi ## Objc selector ref: localizedString:
100003dbe:	48 89 c7	movq	%rax, %rdi
100003dc1:	48 89 da	movq	%rbx, %rdx
100003dc4:	48 83 c4 08	addq	$8, %rsp
100003dc8:	5b	popq	%rbx
100003dc9:	5d	popq	%rbp
100003dca:	ff 25 50 8e 03 00	jmpq	*233040(%rip) ## Objc message: -[%rdi localizedString:]
100003dd0:	55	pushq	%rbp
100003dd1:	48 89 e5	movq	%rsp, %rbp
100003dd4:	53	pushq	%rbx
100003dd5:	50	pushq	%rax
100003dd6:	48 8b 35 0b d0 04 00	movq	315403(%rip), %rsi ## Objc selector ref: bundle
100003ddd:	48 8b 1d 3c 8e 03 00	movq	233020(%rip), %rbx ## Objc message: -[%rdi bundle]
100003de4:	ff d3	callq	*%rbx
100003de6:	48 8b 35 73 d8 04 00	movq	317555(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100003ded:	48 8d 15 6c 91 03 00	leaq	233836(%rip), %rdx ## Objc cfstring ref: @"CFBundleName"
100003df4:	48 8d 0d a5 90 03 00	leaq	233637(%rip), %rcx ## Objc cfstring ref: @""
100003dfb:	48 89 c7	movq	%rax, %rdi
100003dfe:	45 31 c0	xorl	%r8d, %r8d
100003e01:	48 89 d8	movq	%rbx, %rax
100003e04:	48 83 c4 08	addq	$8, %rsp
100003e08:	5b	popq	%rbx
100003e09:	5d	popq	%rbp
100003e0a:	ff e0	jmpq	*%rax
100003e0c:	55	pushq	%rbp
100003e0d:	48 89 e5	movq	%rsp, %rbp
100003e10:	53	pushq	%rbx
100003e11:	50	pushq	%rax
100003e12:	48 89 fb	movq	%rdi, %rbx
100003e15:	48 83 7f 10 00	cmpq	$0, 16(%rdi)
100003e1a:	75 31	jne	0x100003e4d
100003e1c:	48 8b 3d 7d e7 04 00	movq	321405(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100003e23:	48 8b 53 08	movq	8(%rbx), %rdx
100003e27:	48 8b 35 f2 d7 04 00	movq	317426(%rip), %rsi ## Objc selector ref: loadNibNamed:owner:
100003e2e:	48 89 d9	movq	%rbx, %rcx
100003e31:	ff 15 e9 8d 03 00	callq	*232937(%rip) ## Objc message: +[NSBundle loadNibNamed:owner:]
100003e37:	84 c0	testb	%al, %al
100003e39:	75 12	jne	0x100003e4d
100003e3b:	48 8b 73 08	movq	8(%rbx), %rsi
100003e3f:	48 8d 3d 3a 93 03 00	leaq	234298(%rip), %rdi ## Objc cfstring ref: @"Failed to load nib %@"
100003e46:	31 c0	xorl	%eax, %eax
100003e48:	e8 af b4 02 00	callq	0x10002f2fc ## symbol stub for: _NSLog
100003e4d:	48 8b 43 10	movq	16(%rbx), %rax
100003e51:	48 83 c4 08	addq	$8, %rsp
100003e55:	5b	popq	%rbx
100003e56:	5d	popq	%rbp
100003e57:	c3	retq
100003e58:	55	pushq	%rbp
100003e59:	48 89 e5	movq	%rsp, %rbp
100003e5c:	48 8b 47 18	movq	24(%rdi), %rax
100003e60:	5d	popq	%rbp
100003e61:	c3	retq
100003e62:	55	pushq	%rbp
100003e63:	48 89 e5	movq	%rsp, %rbp
100003e66:	41 57	pushq	%r15
100003e68:	41 56	pushq	%r14
100003e6a:	41 55	pushq	%r13
100003e6c:	41 54	pushq	%r12
100003e6e:	53	pushq	%rbx
100003e6f:	48 83 ec 18	subq	$24, %rsp
100003e73:	48 8b 35 3e e6 04 00	movq	321086(%rip), %rsi ## Objc selector ref: view
100003e7a:	4c 8b 2d 9f 8d 03 00	movq	232863(%rip), %r13 ## Objc message: -[%rdi view]
100003e81:	41 ff d5	callq	*%r13
100003e84:	48 8b 35 c5 e4 04 00	movq	320709(%rip), %rsi ## Objc selector ref: subviews
100003e8b:	48 89 c7	movq	%rax, %rdi
100003e8e:	41 ff d5	callq	*%r13
100003e91:	48 8b 35 d0 d9 04 00	movq	317904(%rip), %rsi ## Objc selector ref: objectEnumerator
100003e98:	48 89 45 d0	movq	%rax, -48(%rbp)
100003e9c:	48 89 c7	movq	%rax, %rdi
100003e9f:	41 ff d5	callq	*%r13
100003ea2:	48 89 45 c8	movq	%rax, -56(%rbp)
100003ea6:	4c 8b 35 33 d9 04 00	movq	317747(%rip), %r14 ## Objc selector ref: nextObject
100003ead:	4c 8b 25 24 d9 04 00	movq	317732(%rip), %r12 ## Objc selector ref: nextKeyView
100003eb4:	48 8b 7d c8	movq	-56(%rbp), %rdi
100003eb8:	4c 89 f6	movq	%r14, %rsi
100003ebb:	41 ff d5	callq	*%r13
100003ebe:	48 85 c0	testq	%rax, %rax
100003ec1:	74 4a	je	0x100003f0d
100003ec3:	48 89 c3	movq	%rax, %rbx
100003ec6:	48 89 c7	movq	%rax, %rdi
100003ec9:	4c 89 e6	movq	%r12, %rsi
100003ecc:	41 ff d5	callq	*%r13
100003ecf:	48 85 c0	testq	%rax, %rax
100003ed2:	74 2d	je	0x100003f01
100003ed4:	48 8b 7d d0	movq	-48(%rbp), %rdi
100003ed8:	48 8b 35 89 d9 04 00	movq	317833(%rip), %rsi ## Objc selector ref: objectEnumerator
100003edf:	41 ff d5	callq	*%r13
100003ee2:	49 89 c7	movq	%rax, %r15
100003ee5:	4c 89 ff	movq	%r15, %rdi
100003ee8:	4c 89 f6	movq	%r14, %rsi
100003eeb:	41 ff d5	callq	*%r13
100003eee:	48 85 c0	testq	%rax, %rax
100003ef1:	74 10	je	0x100003f03
100003ef3:	48 89 c7	movq	%rax, %rdi
100003ef6:	4c 89 e6	movq	%r12, %rsi
100003ef9:	41 ff d5	callq	*%r13
100003efc:	48 39 d8	cmpq	%rbx, %rax
100003eff:	75 e4	jne	0x100003ee5
100003f01:	31 db	xorl	%ebx, %ebx
100003f03:	48 85 db	testq	%rbx, %rbx
100003f06:	74 ac	je	0x100003eb4
100003f08:	e9 ad 00 00 00	jmp	0x100003fba
100003f0d:	48 8b 7d d0	movq	-48(%rbp), %rdi
100003f11:	48 8b 35 50 d9 04 00	movq	317776(%rip), %rsi ## Objc selector ref: objectEnumerator
100003f18:	ff 15 02 8d 03 00	callq	*232706(%rip) ## Objc message: -[%rdi objectEnumerator]
100003f1e:	49 89 c4	movq	%rax, %r12
100003f21:	48 8b 05 e8 cc 04 00	movq	314600(%rip), %rax ## Objc selector ref: acceptsFirstResponder
100003f28:	48 89 45 d0	movq	%rax, -48(%rbp)
100003f2c:	48 8b 05 75 e4 04 00	movq	320629(%rip), %rax ## Objc selector ref: target
100003f33:	48 89 45 c8	movq	%rax, -56(%rbp)
100003f37:	4c 8b 3d 32 d1 04 00	movq	315698(%rip), %r15 ## Objc selector ref: delegate
100003f3e:	4c 89 65 c0	movq	%r12, -64(%rbp)
100003f42:	4c 89 e7	movq	%r12, %rdi
100003f45:	4c 89 f6	movq	%r14, %rsi
100003f48:	41 ff d5	callq	*%r13
100003f4b:	48 85 c0	testq	%rax, %rax
100003f4e:	74 68	je	0x100003fb8
100003f50:	48 89 c3	movq	%rax, %rbx
100003f53:	48 89 c7	movq	%rax, %rdi
100003f56:	48 8b 75 d0	movq	-48(%rbp), %rsi
100003f5a:	41 ff d5	callq	*%r13
100003f5d:	84 c0	testb	%al, %al
100003f5f:	74 43	je	0x100003fa4
100003f61:	48 89 df	movq	%rbx, %rdi
100003f64:	48 8b 75 c8	movq	-56(%rbp), %rsi
100003f68:	e8 87 b5 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100003f6d:	84 c0	testb	%al, %al
100003f6f:	74 0f	je	0x100003f80
100003f71:	48 89 df	movq	%rbx, %rdi
100003f74:	48 8b 75 c8	movq	-56(%rbp), %rsi
100003f78:	41 ff d5	callq	*%r13
100003f7b:	48 85 c0	testq	%rax, %rax
100003f7e:	75 31	jne	0x100003fb1
100003f80:	48 89 df	movq	%rbx, %rdi
100003f83:	4d 89 fc	movq	%r15, %r12
100003f86:	4c 89 fe	movq	%r15, %rsi
100003f89:	e8 66 b5 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100003f8e:	84 c0	testb	%al, %al
100003f90:	74 16	je	0x100003fa8
100003f92:	48 89 df	movq	%rbx, %rdi
100003f95:	4c 89 e6	movq	%r12, %rsi
100003f98:	41 ff d5	callq	*%r13
100003f9b:	48 85 c0	testq	%rax, %rax
100003f9e:	4c 8b 65 c0	movq	-64(%rbp), %r12
100003fa2:	75 0d	jne	0x100003fb1
100003fa4:	31 db	xorl	%ebx, %ebx
100003fa6:	eb 09	jmp	0x100003fb1
100003fa8:	31 db	xorl	%ebx, %ebx
100003faa:	4d 89 e7	movq	%r12, %r15
100003fad:	4c 8b 65 c0	movq	-64(%rbp), %r12
100003fb1:	48 85 db	testq	%rbx, %rbx
100003fb4:	74 8c	je	0x100003f42
100003fb6:	eb 02	jmp	0x100003fba
100003fb8:	31 db	xorl	%ebx, %ebx
100003fba:	48 89 d8	movq	%rbx, %rax
100003fbd:	48 83 c4 18	addq	$24, %rsp
100003fc1:	5b	popq	%rbx
100003fc2:	41 5c	popq	%r12
100003fc4:	41 5d	popq	%r13
100003fc6:	41 5e	popq	%r14
100003fc8:	41 5f	popq	%r15
100003fca:	5d	popq	%rbp
100003fcb:	c3	retq
100003fcc:	55	pushq	%rbp
100003fcd:	48 89 e5	movq	%rsp, %rbp
100003fd0:	41 57	pushq	%r15
100003fd2:	41 56	pushq	%r14
100003fd4:	41 55	pushq	%r13
100003fd6:	41 54	pushq	%r12
100003fd8:	53	pushq	%rbx
100003fd9:	48 83 ec 18	subq	$24, %rsp
100003fdd:	48 8b 35 54 db 04 00	movq	318292(%rip), %rsi ## Objc selector ref: responderChainBegin
100003fe4:	4c 8b 35 35 8c 03 00	movq	232501(%rip), %r14 ## Objc message: -[%rdi responderChainBegin]
100003feb:	48 89 7d c0	movq	%rdi, -64(%rbp)
100003fef:	41 ff d6	callq	*%r14
100003ff2:	49 89 c7	movq	%rax, %r15
100003ff5:	4c 8b 2d dc d7 04 00	movq	317404(%rip), %r13 ## Objc selector ref: nextKeyView
100003ffc:	48 89 c7	movq	%rax, %rdi
100003fff:	4c 89 ee	movq	%r13, %rsi
100004002:	41 ff d6	callq	*%r14
100004005:	48 85 c0	testq	%rax, %rax
100004008:	74 6c	je	0x100004076
10000400a:	48 8b 05 a7 e4 04 00	movq	320679(%rip), %rax ## Objc selector ref: view
100004011:	48 89 45 c8	movq	%rax, -56(%rbp)
100004015:	48 8b 05 3c d5 04 00	movq	316732(%rip), %rax ## Objc selector ref: isDescendantOf:
10000401c:	48 89 45 d0	movq	%rax, -48(%rbp)
100004020:	4c 89 fb	movq	%r15, %rbx
100004023:	48 89 df	movq	%rbx, %rdi
100004026:	4c 89 ee	movq	%r13, %rsi
100004029:	41 ff d6	callq	*%r14
10000402c:	4c 39 f8	cmpq	%r15, %rax
10000402f:	74 42	je	0x100004073
100004031:	48 89 df	movq	%rbx, %rdi
100004034:	4c 89 ee	movq	%r13, %rsi
100004037:	41 ff d6	callq	*%r14
10000403a:	49 89 c4	movq	%rax, %r12
10000403d:	48 8b 7d c0	movq	-64(%rbp), %rdi
100004041:	48 8b 75 c8	movq	-56(%rbp), %rsi
100004045:	41 ff d6	callq	*%r14
100004048:	4c 89 e7	movq	%r12, %rdi
10000404b:	48 8b 75 d0	movq	-48(%rbp), %rsi
10000404f:	48 89 c2	movq	%rax, %rdx
100004052:	41 ff d6	callq	*%r14
100004055:	84 c0	testb	%al, %al
100004057:	74 1a	je	0x100004073
100004059:	48 89 df	movq	%rbx, %rdi
10000405c:	4c 89 ee	movq	%r13, %rsi
10000405f:	41 ff d6	callq	*%r14
100004062:	48 89 c3	movq	%rax, %rbx
100004065:	48 89 c7	movq	%rax, %rdi
100004068:	4c 89 ee	movq	%r13, %rsi
10000406b:	41 ff d6	callq	*%r14
10000406e:	48 85 c0	testq	%rax, %rax
100004071:	75 b0	jne	0x100004023
100004073:	49 89 df	movq	%rbx, %r15
100004076:	4c 89 f8	movq	%r15, %rax
100004079:	48 83 c4 18	addq	$24, %rsp
10000407d:	5b	popq	%rbx
10000407e:	41 5c	popq	%r12
100004080:	41 5d	popq	%r13
100004082:	41 5e	popq	%r14
100004084:	41 5f	popq	%r15
100004086:	5d	popq	%rbp
100004087:	c3	retq
100004088:	55	pushq	%rbp
100004089:	48 89 e5	movq	%rsp, %rbp
10000408c:	b8 01 00 00 00	movl	$1, %eax
100004091:	5d	popq	%rbp
100004092:	c3	retq
100004093:	55	pushq	%rbp
100004094:	48 89 e5	movq	%rsp, %rbp
100004097:	5d	popq	%rbp
100004098:	c3	retq
100004099:	55	pushq	%rbp
10000409a:	48 89 e5	movq	%rsp, %rbp
10000409d:	5d	popq	%rbp
10000409e:	c3	retq
10000409f:	55	pushq	%rbp
1000040a0:	48 89 e5	movq	%rsp, %rbp
1000040a3:	5d	popq	%rbp
1000040a4:	c3	retq
1000040a5:	55	pushq	%rbp
1000040a6:	48 89 e5	movq	%rsp, %rbp
1000040a9:	5d	popq	%rbp
1000040aa:	c3	retq
1000040ab:	55	pushq	%rbp
1000040ac:	48 89 e5	movq	%rsp, %rbp
1000040af:	31 c0	xorl	%eax, %eax
1000040b1:	5d	popq	%rbp
1000040b2:	c3	retq
1000040b3:	55	pushq	%rbp
1000040b4:	48 89 e5	movq	%rsp, %rbp
1000040b7:	31 c0	xorl	%eax, %eax
1000040b9:	5d	popq	%rbp
1000040ba:	c3	retq
1000040bb:	55	pushq	%rbp
1000040bc:	48 89 e5	movq	%rsp, %rbp
1000040bf:	5d	popq	%rbp
1000040c0:	c3	retq
1000040c1:	55	pushq	%rbp
1000040c2:	48 89 e5	movq	%rsp, %rbp
1000040c5:	41 57	pushq	%r15
1000040c7:	41 56	pushq	%r14
1000040c9:	41 55	pushq	%r13
1000040cb:	41 54	pushq	%r12
1000040cd:	53	pushq	%rbx
1000040ce:	48 83 ec 28	subq	$40, %rsp
1000040d2:	48 8d 45 b8	leaq	-72(%rbp), %rax
1000040d6:	48 89 38	movq	%rdi, (%rax)
1000040d9:	48 8b 0d d8 e6 04 00	movq	321240(%rip), %rcx ## Objc class ref: CSProfTagArray
1000040e0:	48 89 48 08	movq	%rcx, 8(%rax)
1000040e4:	48 8b 35 25 d3 04 00	movq	316197(%rip), %rsi ## Objc selector ref: init
1000040eb:	48 89 c7	movq	%rax, %rdi
1000040ee:	e8 e9 b3 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
1000040f3:	48 89 45 d0	movq	%rax, -48(%rbp)
1000040f7:	48 85 c0	testq	%rax, %rax
1000040fa:	0f 84 5e 01 00 00	je	0x10000425e
100004100:	48 8b 3d 81 e4 04 00	movq	320641(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
100004107:	e8 b8 b3 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10000410c:	48 8b 15 a5 e8 04 00	movq	321701(%rip), %rdx
100004113:	48 8b 4d d0	movq	-48(%rbp), %rcx
100004117:	48 89 04 11	movq	%rax, (%rcx,%rdx)
10000411b:	48 8b 3d 8e e4 04 00	movq	320654(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100004122:	48 8b 35 0f cc 04 00	movq	314383(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100004129:	48 8d 1d 50 92 03 00	leaq	234064(%rip), %rbx ## Objc cfstring ref: @"AnyTag"
100004130:	4c 8d 15 29 92 03 00	leaq	234025(%rip), %r10 ## Objc cfstring ref: @"ViewTag"
100004137:	4c 8d 1d 02 92 03 00	leaq	233986(%rip), %r11 ## Objc cfstring ref: @"VcgtTag"
10000413e:	4c 8d 35 db 91 03 00	leaq	233947(%rip), %r14 ## Objc cfstring ref: @"MmodTag"
100004145:	4c 8d 25 b4 91 03 00	leaq	233908(%rip), %r12 ## Objc cfstring ref: @"NdinTag"
10000414c:	4c 8d 2d 8d 91 03 00	leaq	233869(%rip), %r13 ## Objc cfstring ref: @"DtimTag"
100004153:	48 8d 15 66 8f 03 00	leaq	233318(%rip), %rdx ## Objc cfstring ref: @"Header"
10000415a:	48 8d 0d 3f 90 03 00	leaq	233535(%rip), %rcx ## Objc cfstring ref: @"ChadTag"
100004161:	4c 8d 05 58 90 03 00	leaq	233560(%rip), %r8 ## Objc cfstring ref: @"DescTag"
100004168:	4c 8d 0d 71 90 03 00	leaq	233585(%rip), %r9 ## Objc cfstring ref: @"XYZTag"
10000416f:	4c 8b 3d aa 8a 03 00	movq	232106(%rip), %r15 ## Objc message: +[NSArray arrayWithObjects:]
100004176:	31 c0	xorl	%eax, %eax
100004178:	6a 00	pushq	$0
10000417a:	53	pushq	%rbx
10000417b:	41 52	pushq	%r10
10000417d:	41 53	pushq	%r11
10000417f:	41 56	pushq	%r14
100004181:	41 54	pushq	%r12
100004183:	41 55	pushq	%r13
100004185:	48 8d 1d 34 91 03 00	leaq	233780(%rip), %rbx ## Objc cfstring ref: @"MbaTag"
10000418c:	53	pushq	%rbx
10000418d:	48 8d 1d 0c 91 03 00	leaq	233740(%rip), %rbx ## Objc cfstring ref: @"MftTag"
100004194:	53	pushq	%rbx
100004195:	48 8d 1d e4 90 03 00	leaq	233700(%rip), %rbx ## Objc cfstring ref: @"MlucTag"
10000419c:	53	pushq	%rbx
10000419d:	48 8d 1d bc 90 03 00	leaq	233660(%rip), %rbx ## Objc cfstring ref: @"NumsTag"
1000041a4:	53	pushq	%rbx
1000041a5:	48 8d 1d 94 90 03 00	leaq	233620(%rip), %rbx ## Objc cfstring ref: @"ParaTag"
1000041ac:	53	pushq	%rbx
1000041ad:	48 8d 1d 6c 90 03 00	leaq	233580(%rip), %rbx ## Objc cfstring ref: @"CurvTag"
1000041b4:	53	pushq	%rbx
1000041b5:	48 8d 1d 44 90 03 00	leaq	233540(%rip), %rbx ## Objc cfstring ref: @"TextTag"
1000041bc:	53	pushq	%rbx
1000041bd:	41 ff d7	callq	*%r15
1000041c0:	48 83 c4 70	addq	$112, %rsp
1000041c4:	48 8b 35 9d d6 04 00	movq	317085(%rip), %rsi ## Objc selector ref: objectEnumerator
1000041cb:	48 89 c7	movq	%rax, %rdi
1000041ce:	41 ff d7	callq	*%r15
1000041d1:	49 89 c5	movq	%rax, %r13
1000041d4:	48 8b 35 05 d6 04 00	movq	316933(%rip), %rsi ## Objc selector ref: nextObject
1000041db:	48 89 c7	movq	%rax, %rdi
1000041de:	41 ff d7	callq	*%r15
1000041e1:	48 85 c0	testq	%rax, %rax
1000041e4:	74 78	je	0x10000425e
1000041e6:	49 89 c4	movq	%rax, %r12
1000041e9:	48 8b 1d 90 cc 04 00	movq	314512(%rip), %rbx ## Objc selector ref: classNamed:
1000041f0:	4c 8b 35 d9 d5 04 00	movq	316889(%rip), %r14 ## Objc selector ref: newWithPath:
1000041f7:	48 8b 05 72 ca 04 00	movq	313970(%rip), %rax ## Objc selector ref: addObject:
1000041fe:	48 89 45 c8	movq	%rax, -56(%rbp)
100004202:	48 8b 3d 97 e3 04 00	movq	320407(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100004209:	48 8b 35 d8 d4 04 00	movq	316632(%rip), %rsi ## Objc selector ref: mainBundle
100004210:	41 ff d7	callq	*%r15
100004213:	48 89 c7	movq	%rax, %rdi
100004216:	48 89 de	movq	%rbx, %rsi
100004219:	4c 89 e2	movq	%r12, %rdx
10000421c:	41 ff d7	callq	*%r15
10000421f:	48 89 c7	movq	%rax, %rdi
100004222:	4c 89 f6	movq	%r14, %rsi
100004225:	4c 89 e2	movq	%r12, %rdx
100004228:	41 ff d7	callq	*%r15
10000422b:	48 85 c0	testq	%rax, %rax
10000422e:	74 19	je	0x100004249
100004230:	48 8b 4d d0	movq	-48(%rbp), %rcx
100004234:	48 8b 15 7d e7 04 00	movq	321405(%rip), %rdx
10000423b:	48 8b 3c 11	movq	(%rcx,%rdx), %rdi
10000423f:	48 8b 75 c8	movq	-56(%rbp), %rsi
100004243:	48 89 c2	movq	%rax, %rdx
100004246:	41 ff d7	callq	*%r15
100004249:	4c 89 ef	movq	%r13, %rdi
10000424c:	48 8b 35 8d d5 04 00	movq	316813(%rip), %rsi ## Objc selector ref: nextObject
100004253:	41 ff d7	callq	*%r15
100004256:	49 89 c4	movq	%rax, %r12
100004259:	48 85 c0	testq	%rax, %rax
10000425c:	75 a4	jne	0x100004202
10000425e:	48 8b 45 d0	movq	-48(%rbp), %rax
100004262:	48 83 c4 28	addq	$40, %rsp
100004266:	5b	popq	%rbx
100004267:	41 5c	popq	%r12
100004269:	41 5d	popq	%r13
10000426b:	41 5e	popq	%r14
10000426d:	41 5f	popq	%r15
10000426f:	5d	popq	%rbp
100004270:	c3	retq
100004271:	55	pushq	%rbp
100004272:	48 89 e5	movq	%rsp, %rbp
100004275:	53	pushq	%rbx
100004276:	48 83 ec 18	subq	$24, %rsp
10000427a:	48 89 fb	movq	%rdi, %rbx
10000427d:	48 8b 05 34 e7 04 00	movq	321332(%rip), %rax
100004284:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100004288:	ff 15 ca 89 03 00	callq	*231882(%rip) ## literal pool symbol address: _objc_release
10000428e:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100004292:	48 89 1f	movq	%rbx, (%rdi)
100004295:	48 8b 05 1c e5 04 00	movq	320796(%rip), %rax ## Objc class ref: CSProfTagArray
10000429c:	48 89 47 08	movq	%rax, 8(%rdi)
1000042a0:	48 8b 35 a9 cd 04 00	movq	314793(%rip), %rsi ## Objc selector ref: dealloc
1000042a7:	e8 30 b2 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
1000042ac:	48 83 c4 18	addq	$24, %rsp
1000042b0:	5b	popq	%rbx
1000042b1:	5d	popq	%rbp
1000042b2:	c3	retq
1000042b3:	55	pushq	%rbp
1000042b4:	48 89 e5	movq	%rsp, %rbp
1000042b7:	48 8b 05 02 e7 04 00	movq	321282(%rip), %rax
1000042be:	8b 04 07	movl	(%rdi,%rax), %eax
1000042c1:	5d	popq	%rbp
1000042c2:	c3	retq
1000042c3:	55	pushq	%rbp
1000042c4:	48 89 e5	movq	%rsp, %rbp
1000042c7:	48 8b 05 ea e6 04 00	movq	321258(%rip), %rax
1000042ce:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000042d2:	48 8b 35 87 d5 04 00	movq	316807(%rip), %rsi ## Objc selector ref: objectAtIndex:
1000042d9:	5d	popq	%rbp
1000042da:	ff 25 40 89 03 00	jmpq	*231744(%rip) ## Objc message: -[%rdi objectAtIndex:]
1000042e0:	55	pushq	%rbp
1000042e1:	48 89 e5	movq	%rsp, %rbp
1000042e4:	41 57	pushq	%r15
1000042e6:	41 56	pushq	%r14
1000042e8:	41 55	pushq	%r13
1000042ea:	41 54	pushq	%r12
1000042ec:	53	pushq	%rbx
1000042ed:	50	pushq	%rax
1000042ee:	48 89 55 d0	movq	%rdx, -48(%rbp)
1000042f2:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
1000042fc:	48 8b 0d bd e6 04 00	movq	321213(%rip), %rcx
100004303:	83 3c 0f 00	cmpl	$0, (%rdi,%rcx)
100004307:	74 6e	je	0x100004377
100004309:	48 89 fb	movq	%rdi, %rbx
10000430c:	4c 8b 2d 35 d0 04 00	movq	315445(%rip), %r13 ## Objc selector ref: identifier
100004313:	4c 8b 25 6e d2 04 00	movq	316014(%rip), %r12 ## Objc selector ref: isEqualToString:
10000431a:	45 31 f6	xorl	%r14d, %r14d
10000431d:	4c 8b 3d fc 88 03 00	movq	231676(%rip), %r15 ## Objc message: -[%rdi isEqualToString:]
100004324:	48 8b 05 8d e6 04 00	movq	321165(%rip), %rax
10000432b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000432f:	48 8b 35 2a d5 04 00	movq	316714(%rip), %rsi ## Objc selector ref: objectAtIndex:
100004336:	4c 89 f2	movq	%r14, %rdx
100004339:	41 ff d7	callq	*%r15
10000433c:	48 89 c7	movq	%rax, %rdi
10000433f:	4c 89 ee	movq	%r13, %rsi
100004342:	41 ff d7	callq	*%r15
100004345:	48 89 c7	movq	%rax, %rdi
100004348:	4c 89 e6	movq	%r12, %rsi
10000434b:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000434f:	41 ff d7	callq	*%r15
100004352:	84 c0	testb	%al, %al
100004354:	75 1e	jne	0x100004374
100004356:	49 ff c6	incq	%r14
100004359:	48 8b 05 60 e6 04 00	movq	321120(%rip), %rax
100004360:	8b 04 03	movl	(%rbx,%rax), %eax
100004363:	49 39 c6	cmpq	%rax, %r14
100004366:	72 bc	jb	0x100004324
100004368:	48 b8 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rax
100004372:	eb 03	jmp	0x100004377
100004374:	4c 89 f0	movq	%r14, %rax
100004377:	48 83 c4 08	addq	$8, %rsp
10000437b:	5b	popq	%rbx
10000437c:	41 5c	popq	%r12
10000437e:	41 5d	popq	%r13
100004380:	41 5e	popq	%r14
100004382:	41 5f	popq	%r15
100004384:	5d	popq	%rbp
100004385:	c3	retq
100004386:	55	pushq	%rbp
100004387:	48 89 e5	movq	%rsp, %rbp
10000438a:	53	pushq	%rbx
10000438b:	48 83 ec 68	subq	$104, %rsp
10000438f:	31 c0	xorl	%eax, %eax
100004391:	48 8d 75 c8	leaq	-56(%rbp), %rsi
100004395:	48 89 06	movq	%rax, (%rsi)
100004398:	48 89 76 08	movq	%rsi, 8(%rsi)
10000439c:	48 bb 00 00 00 52 30 00 00 00	movabsq	$207534161920, %rbx
1000043a6:	48 89 5e 10	movq	%rbx, 16(%rsi)
1000043aa:	48 8d 1d a2 00 00 00	leaq	162(%rip), %rbx
1000043b1:	48 89 5e 18	movq	%rbx, 24(%rsi)
1000043b5:	48 8d 1d ae 00 00 00	leaq	174(%rip), %rbx
1000043bc:	48 89 5e 20	movq	%rbx, 32(%rsi)
1000043c0:	48 89 46 28	movq	%rax, 40(%rsi)
1000043c4:	48 8b 05 ed e5 04 00	movq	321005(%rip), %rax
1000043cb:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000043cf:	48 8b 1d e2 83 03 00	movq	230370(%rip), %rbx ## literal pool symbol address: __NSConcreteStackBlock
1000043d6:	48 8d 45 90	leaq	-112(%rbp), %rax
1000043da:	48 89 18	movq	%rbx, (%rax)
1000043dd:	bb 00 00 00 c2	movl	$3254779904, %ebx
1000043e2:	48 89 58 08	movq	%rbx, 8(%rax)
1000043e6:	48 8d 1d 90 00 00 00	leaq	144(%rip), %rbx
1000043ed:	48 89 58 10	movq	%rbx, 16(%rax)
1000043f1:	48 8d 1d e0 88 03 00	leaq	231648(%rip), %rbx
1000043f8:	48 89 58 18	movq	%rbx, 24(%rax)
1000043fc:	89 50 28	movl	%edx, 40(%rax)
1000043ff:	89 48 2c	movl	%ecx, 44(%rax)
100004402:	44 89 40 30	movl	%r8d, 48(%rax)
100004406:	48 89 70 20	movq	%rsi, 32(%rax)
10000440a:	48 8b 35 bf cd 04 00	movq	314815(%rip), %rsi ## Objc selector ref: enumerateObjectsUsingBlock:
100004411:	48 89 c2	movq	%rax, %rdx
100004414:	ff 15 06 88 03 00	callq	*231430(%rip) ## Objc message: -[%rdi enumerateObjectsUsingBlock:]
10000441a:	48 8d 7d c8	leaq	-56(%rbp), %rdi
10000441e:	48 8b 47 08	movq	8(%rdi), %rax
100004422:	48 8b 58 28	movq	40(%rax), %rbx
100004426:	be 08 00 00 00	movl	$8, %esi
10000442b:	e8 50 af 02 00	callq	0x10002f380 ## symbol stub for: __Block_object_dispose
100004430:	48 89 d8	movq	%rbx, %rax
100004433:	48 83 c4 68	addq	$104, %rsp
100004437:	5b	popq	%rbx
100004438:	5d	popq	%rbp
100004439:	c3	retq
10000443a:	48 89 c3	movq	%rax, %rbx
10000443d:	48 8d 7d c8	leaq	-56(%rbp), %rdi
100004441:	be 08 00 00 00	movl	$8, %esi
100004446:	e8 35 af 02 00	callq	0x10002f380 ## symbol stub for: __Block_object_dispose
10000444b:	48 89 df	movq	%rbx, %rdi
10000444e:	e8 39 af 02 00	callq	0x10002f38c ## symbol stub for: __Unwind_Resume
100004453:	55	pushq	%rbp
100004454:	48 89 e5	movq	%rsp, %rbp
100004457:	48 83 c7 28	addq	$40, %rdi
10000445b:	48 8b 76 28	movq	40(%rsi), %rsi
10000445f:	ba 83 00 00 00	movl	$131, %edx
100004464:	5d	popq	%rbp
100004465:	e9 10 af 02 00	jmp	0x10002f37a ## symbol stub for: __Block_object_assign
10000446a:	55	pushq	%rbp
10000446b:	48 89 e5	movq	%rsp, %rbp
10000446e:	48 8b 7f 28	movq	40(%rdi), %rdi
100004472:	be 83 00 00 00	movl	$131, %esi
100004477:	5d	popq	%rbp
100004478:	e9 03 af 02 00	jmp	0x10002f380 ## symbol stub for: __Block_object_dispose
10000447d:	55	pushq	%rbp
10000447e:	48 89 e5	movq	%rsp, %rbp
100004481:	41 57	pushq	%r15
100004483:	41 56	pushq	%r14
100004485:	53	pushq	%rbx
100004486:	50	pushq	%rax
100004487:	49 89 ce	movq	%rcx, %r14
10000448a:	49 89 f7	movq	%rsi, %r15
10000448d:	48 89 fb	movq	%rdi, %rbx
100004490:	8b 57 28	movl	40(%rdi), %edx
100004493:	8b 4f 2c	movl	44(%rdi), %ecx
100004496:	44 8b 47 30	movl	48(%rdi), %r8d
10000449a:	48 8b 35 7f c9 04 00	movq	313727(%rip), %rsi ## Objc selector ref: canDisplayTagType:dataType:dataSize:
1000044a1:	4c 89 ff	movq	%r15, %rdi
1000044a4:	ff 15 76 87 03 00	callq	*231286(%rip) ## Objc message: -[%rdi canDisplayTagType:dataType:dataSize:]
1000044aa:	84 c0	testb	%al, %al
1000044ac:	74 10	je	0x1000044be
1000044ae:	48 8b 43 20	movq	32(%rbx), %rax
1000044b2:	48 8b 40 08	movq	8(%rax), %rax
1000044b6:	4c 89 78 28	movq	%r15, 40(%rax)
1000044ba:	41 c6 06 01	movb	$1, (%r14)
1000044be:	48 83 c4 08	addq	$8, %rsp
1000044c2:	5b	popq	%rbx
1000044c3:	41 5e	popq	%r14
1000044c5:	41 5f	popq	%r15
1000044c7:	5d	popq	%rbp
1000044c8:	c3	retq
1000044c9:	55	pushq	%rbp
1000044ca:	48 89 e5	movq	%rsp, %rbp
1000044cd:	48 83 c7 20	addq	$32, %rdi
1000044d1:	48 8b 76 20	movq	32(%rsi), %rsi
1000044d5:	ba 08 00 00 00	movl	$8, %edx
1000044da:	5d	popq	%rbp
1000044db:	e9 9a ae 02 00	jmp	0x10002f37a ## symbol stub for: __Block_object_assign
1000044e0:	55	pushq	%rbp
1000044e1:	48 89 e5	movq	%rsp, %rbp
1000044e4:	48 8b 7f 20	movq	32(%rdi), %rdi
1000044e8:	be 08 00 00 00	movl	$8, %esi
1000044ed:	5d	popq	%rbp
1000044ee:	e9 8d ae 02 00	jmp	0x10002f380 ## symbol stub for: __Block_object_dispose
1000044f3:	55	pushq	%rbp
1000044f4:	48 89 e5	movq	%rsp, %rbp
1000044f7:	41 57	pushq	%r15
1000044f9:	41 56	pushq	%r14
1000044fb:	53	pushq	%rbx
1000044fc:	50	pushq	%rax
1000044fd:	4d 89 c6	movq	%r8, %r14
100004500:	41 89 cf	movl	%ecx, %r15d
100004503:	89 d3	movl	%edx, %ebx
100004505:	48 8b 35 74 d3 04 00	movq	316276(%rip), %rsi ## Objc selector ref: objectToDisplayTagType:dataType:dataSize:
10000450c:	ff 15 0e 87 03 00	callq	*231182(%rip) ## Objc message: -[%rdi objectToDisplayTagType:dataType:dataSize:]
100004512:	48 85 c0	testq	%rax, %rax
100004515:	74 22	je	0x100004539
100004517:	48 8b 35 5a cb 04 00	movq	314202(%rip), %rsi ## Objc selector ref: describeTagType:dataType:dataSize:
10000451e:	48 89 c7	movq	%rax, %rdi
100004521:	89 da	movl	%ebx, %edx
100004523:	44 89 f9	movl	%r15d, %ecx
100004526:	4d 89 f0	movq	%r14, %r8
100004529:	48 83 c4 08	addq	$8, %rsp
10000452d:	5b	popq	%rbx
10000452e:	41 5e	popq	%r14
100004530:	41 5f	popq	%r15
100004532:	5d	popq	%rbp
100004533:	ff 25 e7 86 03 00	jmpq	*231143(%rip) ## Objc message: -[%rdi describeTagType:dataType:dataSize:]
100004539:	31 c0	xorl	%eax, %eax
10000453b:	48 83 c4 08	addq	$8, %rsp
10000453f:	5b	popq	%rbx
100004540:	41 5e	popq	%r14
100004542:	41 5f	popq	%r15
100004544:	5d	popq	%rbp
100004545:	c3	retq
100004546:	55	pushq	%rbp
100004547:	48 89 e5	movq	%rsp, %rbp
10000454a:	41 56	pushq	%r14
10000454c:	53	pushq	%rbx
10000454d:	48 83 ec 10	subq	$16, %rsp
100004551:	48 89 fb	movq	%rdi, %rbx
100004554:	48 8b 3d b5 e0 04 00	movq	319669(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
10000455b:	48 8b 35 f6 ca 04 00	movq	314102(%rip), %rsi ## Objc selector ref: defaultCenter
100004562:	4c 8b 35 b7 86 03 00	movq	231095(%rip), %r14 ## Objc message: +[NSNotificationCenter defaultCenter]
100004569:	41 ff d6	callq	*%r14
10000456c:	48 8b 35 8d d5 04 00	movq	316813(%rip), %rsi ## Objc selector ref: removeObserver:
100004573:	48 89 c7	movq	%rax, %rdi
100004576:	48 89 da	movq	%rbx, %rdx
100004579:	41 ff d6	callq	*%r14
10000457c:	48 8b 05 45 e4 04 00	movq	320581(%rip), %rax
100004583:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100004587:	48 85 ff	testq	%rdi, %rdi
10000458a:	74 05	je	0x100004591
10000458c:	e8 81 a9 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100004591:	48 8b 05 38 e4 04 00	movq	320568(%rip), %rax
100004598:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000459c:	e8 e7 ab 02 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
1000045a1:	48 8b 05 30 e4 04 00	movq	320560(%rip), %rax
1000045a8:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000045ac:	ff 15 a6 86 03 00	callq	*231078(%rip) ## literal pool symbol address: _objc_release
1000045b2:	48 8b 05 27 e4 04 00	movq	320551(%rip), %rax
1000045b9:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000045bd:	e8 12 ae 02 00	callq	0x10002f3d4 ## symbol stub for: _free
1000045c2:	48 8b 05 1f e4 04 00	movq	320543(%rip), %rax
1000045c9:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000045cd:	e8 02 ae 02 00	callq	0x10002f3d4 ## symbol stub for: _free
1000045d2:	48 8d 7d e0	leaq	-32(%rbp), %rdi
1000045d6:	48 89 1f	movq	%rbx, (%rdi)
1000045d9:	48 8b 05 e0 e1 04 00	movq	319968(%rip), %rax ## Objc class ref: FilterToneMapping
1000045e0:	48 89 47 08	movq	%rax, 8(%rdi)
1000045e4:	48 8b 35 65 ca 04 00	movq	313957(%rip), %rsi ## Objc selector ref: dealloc
1000045eb:	e8 ec ae 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
1000045f0:	48 83 c4 10	addq	$16, %rsp
1000045f4:	5b	popq	%rbx
1000045f5:	41 5e	popq	%r14
1000045f7:	5d	popq	%rbp
1000045f8:	c3	retq
1000045f9:	55	pushq	%rbp
1000045fa:	48 89 e5	movq	%rsp, %rbp
1000045fd:	41 57	pushq	%r15
1000045ff:	41 56	pushq	%r14
100004601:	41 55	pushq	%r13
100004603:	41 54	pushq	%r12
100004605:	53	pushq	%rbx
100004606:	50	pushq	%rax
100004607:	49 89 d7	movq	%rdx, %r15
10000460a:	48 89 fb	movq	%rdi, %rbx
10000460d:	48 8b 35 74 cd 04 00	movq	314740(%rip), %rsi ## Objc selector ref: imageLoaded:
100004614:	ff 15 06 86 03 00	callq	*230918(%rip) ## Objc message: -[%rdi imageLoaded:]
10000461a:	84 c0	testb	%al, %al
10000461c:	74 39	je	0x100004657
10000461e:	4c 8b 35 eb de 04 00	movq	319211(%rip), %r14 ## Objc selector ref: window
100004625:	48 89 df	movq	%rbx, %rdi
100004628:	4c 89 f6	movq	%r14, %rsi
10000462b:	ff 15 ef 85 03 00	callq	*230895(%rip) ## Objc message: -[%rdi window]
100004631:	48 85 c0	testq	%rax, %rax
100004634:	74 30	je	0x100004666
100004636:	4c 8b 25 e3 85 03 00	movq	230883(%rip), %r12 ## Objc message: -[%rdi window]
10000463d:	48 89 df	movq	%rbx, %rdi
100004640:	4c 89 f6	movq	%r14, %rsi
100004643:	41 ff d4	callq	*%r12
100004646:	48 8b 35 cb d0 04 00	movq	315595(%rip), %rsi ## Objc selector ref: makeKeyAndOrderFront:
10000464d:	48 89 c7	movq	%rax, %rdi
100004650:	31 d2	xorl	%edx, %edx
100004652:	41 ff d4	callq	*%r12
100004655:	eb 78	jmp	0x1000046cf
100004657:	48 83 c4 08	addq	$8, %rsp
10000465b:	5b	popq	%rbx
10000465c:	41 5c	popq	%r12
10000465e:	41 5d	popq	%r13
100004660:	41 5e	popq	%r14
100004662:	41 5f	popq	%r15
100004664:	5d	popq	%rbp
100004665:	c3	retq
100004666:	48 8b 3d 33 df 04 00	movq	319283(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000466d:	48 8b 35 74 d0 04 00	movq	315508(%rip), %rsi ## Objc selector ref: mainBundle
100004674:	4c 8b 2d a5 85 03 00	movq	230821(%rip), %r13 ## Objc message: +[NSBundle mainBundle]
10000467b:	41 ff d5	callq	*%r13
10000467e:	48 8b 35 a3 cf 04 00	movq	315299(%rip), %rsi ## Objc selector ref: loadNibNamed:owner:topLevelObjects:
100004685:	4c 8d 25 14 8d 03 00	leaq	232724(%rip), %r12 ## Objc cfstring ref: @"ToneMapping"
10000468c:	48 89 c7	movq	%rax, %rdi
10000468f:	4c 89 e2	movq	%r12, %rdx
100004692:	48 89 d9	movq	%rbx, %rcx
100004695:	45 31 c0	xorl	%r8d, %r8d
100004698:	41 ff d5	callq	*%r13
10000469b:	48 89 df	movq	%rbx, %rdi
10000469e:	4c 89 f6	movq	%r14, %rsi
1000046a1:	41 ff d5	callq	*%r13
1000046a4:	48 8b 35 b5 d7 04 00	movq	317365(%rip), %rsi ## Objc selector ref: setFrameAutosaveName:
1000046ab:	48 89 c7	movq	%rax, %rdi
1000046ae:	4c 89 e2	movq	%r12, %rdx
1000046b1:	41 ff d5	callq	*%r13
1000046b4:	48 89 df	movq	%rbx, %rdi
1000046b7:	4c 89 f6	movq	%r14, %rsi
1000046ba:	41 ff d5	callq	*%r13
1000046bd:	48 8b 35 94 d8 04 00	movq	317588(%rip), %rsi ## Objc selector ref: setLevel:
1000046c4:	ba 19 00 00 00	movl	$25, %edx
1000046c9:	48 89 c7	movq	%rax, %rdi
1000046cc:	41 ff d5	callq	*%r13
1000046cf:	48 8b 35 6a da 04 00	movq	318058(%rip), %rsi ## Objc selector ref: setUndoOnClose:
1000046d6:	4c 8b 2d 43 85 03 00	movq	230723(%rip), %r13 ## Objc message: -[%rdi setUndoOnClose:]
1000046dd:	48 89 df	movq	%rbx, %rdi
1000046e0:	ba 01 00 00 00	movl	$1, %edx
1000046e5:	41 ff d5	callq	*%r13
1000046e8:	48 89 df	movq	%rbx, %rdi
1000046eb:	4c 89 f6	movq	%r14, %rsi
1000046ee:	41 ff d5	callq	*%r13
1000046f1:	49 89 c4	movq	%rax, %r12
1000046f4:	48 8b 35 dd c9 04 00	movq	313821(%rip), %rsi ## Objc selector ref: displayName
1000046fb:	4c 89 ff	movq	%r15, %rdi
1000046fe:	41 ff d5	callq	*%r13
100004701:	48 8b 35 10 da 04 00	movq	317968(%rip), %rsi ## Objc selector ref: setTitle:
100004708:	4c 89 e7	movq	%r12, %rdi
10000470b:	48 89 c2	movq	%rax, %rdx
10000470e:	41 ff d5	callq	*%r13
100004711:	48 89 df	movq	%rbx, %rdi
100004714:	4c 89 f6	movq	%r14, %rsi
100004717:	41 ff d5	callq	*%r13
10000471a:	48 8b 35 cf d1 04 00	movq	315855(%rip), %rsi ## Objc selector ref: orderFront:
100004721:	48 89 c7	movq	%rax, %rdi
100004724:	48 89 da	movq	%rbx, %rdx
100004727:	4c 89 e8	movq	%r13, %rax
10000472a:	48 83 c4 08	addq	$8, %rsp
10000472e:	5b	popq	%rbx
10000472f:	41 5c	popq	%r12
100004731:	41 5d	popq	%r13
100004733:	41 5e	popq	%r14
100004735:	41 5f	popq	%r15
100004737:	5d	popq	%rbp
100004738:	ff e0	jmpq	*%rax
10000473a:	55	pushq	%rbp
10000473b:	48 89 e5	movq	%rsp, %rbp
10000473e:	41 56	pushq	%r14
100004740:	53	pushq	%rbx
100004741:	48 89 fb	movq	%rdi, %rbx
100004744:	48 8b 35 f5 d9 04 00	movq	317941(%rip), %rsi ## Objc selector ref: setUndoOnClose:
10000474b:	4c 8b 35 ce 84 03 00	movq	230606(%rip), %r14 ## Objc message: -[%rdi setUndoOnClose:]
100004752:	41 ff d6	callq	*%r14
100004755:	48 8b 35 b4 dd 04 00	movq	318900(%rip), %rsi ## Objc selector ref: window
10000475c:	48 89 df	movq	%rbx, %rdi
10000475f:	41 ff d6	callq	*%r14
100004762:	48 8b 35 27 c7 04 00	movq	313127(%rip), %rsi ## Objc selector ref: close
100004769:	48 89 c7	movq	%rax, %rdi
10000476c:	4c 89 f0	movq	%r14, %rax
10000476f:	5b	popq	%rbx
100004770:	41 5e	popq	%r14
100004772:	5d	popq	%rbp
100004773:	ff e0	jmpq	*%rax
100004775:	55	pushq	%rbp
100004776:	48 89 e5	movq	%rsp, %rbp
100004779:	53	pushq	%rbx
10000477a:	50	pushq	%rax
10000477b:	48 8b 35 e6 cb 04 00	movq	314342(%rip), %rsi ## Objc selector ref: imageDoc
100004782:	48 8b 1d 97 84 03 00	movq	230551(%rip), %rbx ## Objc message: -[%rdi imageDoc]
100004789:	ff d3	callq	*%rbx
10000478b:	48 8b 35 96 dc 04 00	movq	318614(%rip), %rsi ## Objc selector ref: undoManager
100004792:	48 89 c7	movq	%rax, %rdi
100004795:	48 89 d8	movq	%rbx, %rax
100004798:	48 83 c4 08	addq	$8, %rsp
10000479c:	5b	popq	%rbx
10000479d:	5d	popq	%rbp
10000479e:	ff e0	jmpq	*%rax
1000047a0:	55	pushq	%rbp
1000047a1:	48 89 e5	movq	%rsp, %rbp
1000047a4:	41 57	pushq	%r15
1000047a6:	41 56	pushq	%r14
1000047a8:	41 55	pushq	%r13
1000047aa:	41 54	pushq	%r12
1000047ac:	53	pushq	%rbx
1000047ad:	48 81 ec 18 01 00 00	subq	$280, %rsp
1000047b4:	48 8b 05 5d 80 03 00	movq	229469(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
1000047bb:	48 8b 00	movq	(%rax), %rax
1000047be:	48 89 45 d0	movq	%rax, -48(%rbp)
1000047c2:	31 c0	xorl	%eax, %eax
1000047c4:	48 85 d2	testq	%rdx, %rdx
1000047c7:	0f 84 cf 02 00 00	je	0x100004a9c
1000047cd:	48 89 cb	movq	%rcx, %rbx
1000047d0:	48 85 c9	testq	%rcx, %rcx
1000047d3:	0f 84 c3 02 00 00	je	0x100004a9c
1000047d9:	48 89 d6	movq	%rdx, %rsi
1000047dc:	49 89 fc	movq	%rdi, %r12
1000047df:	48 8b 05 72 82 03 00	movq	230002(%rip), %rax ## literal pool symbol address: _kColorSyncProfile
1000047e6:	48 8b 00	movq	(%rax), %rax
1000047e9:	48 8d 4d 80	leaq	-128(%rbp), %rcx
1000047ed:	48 89 01	movq	%rax, (%rcx)
1000047f0:	48 8d 55 a8	leaq	-88(%rbp), %rdx
1000047f4:	48 89 32	movq	%rsi, (%rdx)
1000047f7:	48 8b 05 82 82 03 00	movq	230018(%rip), %rax ## literal pool symbol address: _kColorSyncRenderingIntent
1000047fe:	48 8b 00	movq	(%rax), %rax
100004801:	48 89 41 08	movq	%rax, 8(%rcx)
100004805:	48 8b 05 84 82 03 00	movq	230020(%rip), %rax ## literal pool symbol address: _kColorSyncRenderingIntentPerceptual
10000480c:	48 8b 00	movq	(%rax), %rax
10000480f:	48 89 42 08	movq	%rax, 8(%rdx)
100004813:	48 8b 05 b6 82 03 00	movq	230070(%rip), %rax ## literal pool symbol address: _kColorSyncTransformTag
10000481a:	48 8b 00	movq	(%rax), %rax
10000481d:	48 89 41 10	movq	%rax, 16(%rcx)
100004821:	48 8b 05 88 82 03 00	movq	230024(%rip), %rax ## literal pool symbol address: _kColorSyncTransformDeviceToPCS
100004828:	48 8b 00	movq	(%rax), %rax
10000482b:	48 89 42 10	movq	%rax, 16(%rdx)
10000482f:	48 8b 05 f2 81 03 00	movq	229874(%rip), %rax ## literal pool symbol address: _kColorSyncBlackPointCompensation
100004836:	48 8b 00	movq	(%rax), %rax
100004839:	48 89 41 18	movq	%rax, 24(%rcx)
10000483d:	4c 8b 2d 9c 7f 03 00	movq	229276(%rip), %r13 ## literal pool symbol address: ___kCFBooleanFalse
100004844:	4c 89 6a 18	movq	%r13, 24(%rdx)
100004848:	48 8b 05 e1 81 03 00	movq	229857(%rip), %rax ## literal pool symbol address: _kColorSyncExtendedRange
10000484f:	48 8b 00	movq	(%rax), %rax
100004852:	48 89 41 20	movq	%rax, 32(%rcx)
100004856:	48 8b 05 8b 7f 03 00	movq	229259(%rip), %rax ## literal pool symbol address: ___kCFBooleanTrue
10000485d:	48 89 42 20	movq	%rax, 32(%rdx)
100004861:	48 8b 3d b0 dd 04 00	movq	318896(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100004868:	48 8b 35 41 c8 04 00	movq	313409(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:count:
10000486f:	4c 8b 3d aa 83 03 00	movq	230314(%rip), %r15 ## Objc message: +[NSDictionary dictionaryWithObjects:forKeys:count:]
100004876:	41 b8 05 00 00 00	movl	$5, %r8d
10000487c:	41 ff d7	callq	*%r15
10000487f:	49 89 c6	movq	%rax, %r14
100004882:	48 8b 05 cf 81 03 00	movq	229839(%rip), %rax ## literal pool symbol address: _kColorSyncProfile
100004889:	48 8b 00	movq	(%rax), %rax
10000488c:	48 8d 8d 30 ff ff ff	leaq	-208(%rbp), %rcx
100004893:	48 89 01	movq	%rax, (%rcx)
100004896:	48 8d 95 58 ff ff ff	leaq	-168(%rbp), %rdx
10000489d:	48 89 1a	movq	%rbx, (%rdx)
1000048a0:	48 8b 05 d9 81 03 00	movq	229849(%rip), %rax ## literal pool symbol address: _kColorSyncRenderingIntent
1000048a7:	48 8b 00	movq	(%rax), %rax
1000048aa:	48 89 41 08	movq	%rax, 8(%rcx)
1000048ae:	48 8b 05 e3 81 03 00	movq	229859(%rip), %rax ## literal pool symbol address: _kColorSyncRenderingIntentRelative
1000048b5:	48 8b 00	movq	(%rax), %rax
1000048b8:	48 89 42 08	movq	%rax, 8(%rdx)
1000048bc:	48 8b 05 0d 82 03 00	movq	229901(%rip), %rax ## literal pool symbol address: _kColorSyncTransformTag
1000048c3:	48 8b 00	movq	(%rax), %rax
1000048c6:	48 89 41 10	movq	%rax, 16(%rcx)
1000048ca:	48 8b 05 ef 81 03 00	movq	229871(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToDevice
1000048d1:	48 8b 00	movq	(%rax), %rax
1000048d4:	48 89 42 10	movq	%rax, 16(%rdx)
1000048d8:	48 8b 05 49 81 03 00	movq	229705(%rip), %rax ## literal pool symbol address: _kColorSyncBlackPointCompensation
1000048df:	48 8b 00	movq	(%rax), %rax
1000048e2:	48 89 41 18	movq	%rax, 24(%rcx)
1000048e6:	4c 89 6a 18	movq	%r13, 24(%rdx)
1000048ea:	48 8b 05 3f 81 03 00	movq	229695(%rip), %rax ## literal pool symbol address: _kColorSyncExtendedRange
1000048f1:	48 8b 00	movq	(%rax), %rax
1000048f4:	48 89 41 20	movq	%rax, 32(%rcx)
1000048f8:	4c 89 6a 20	movq	%r13, 32(%rdx)
1000048fc:	48 8b 3d 15 dd 04 00	movq	318741(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100004903:	41 b8 05 00 00 00	movl	$5, %r8d
100004909:	48 8b 35 a0 c7 04 00	movq	313248(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:count:
100004910:	41 ff d7	callq	*%r15
100004913:	48 8d 95 20 ff ff ff	leaq	-224(%rbp), %rdx
10000491a:	4c 89 32	movq	%r14, (%rdx)
10000491d:	48 89 42 08	movq	%rax, 8(%rdx)
100004921:	48 8b 3d 88 dc 04 00	movq	318600(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100004928:	48 8b 35 11 c4 04 00	movq	312337(%rip), %rsi ## Objc selector ref: arrayWithObjects:count:
10000492f:	b9 02 00 00 00	movl	$2, %ecx
100004934:	41 ff d7	callq	*%r15
100004937:	48 89 85 c8 fe ff ff	movq	%rax, -312(%rbp)
10000493e:	48 8d 05 7b 8a 03 00	leaq	232059(%rip), %rax ## Objc cfstring ref: @"com.apple.cmm.ToneMappingGammaDefog"
100004945:	4c 8d b5 e0 fe ff ff	leaq	-288(%rbp), %r14
10000494c:	49 89 06	movq	%rax, (%r14)
10000494f:	48 8b 1d 9a dc 04 00	movq	318618(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
100004956:	48 8b 35 2b cd 04 00	movq	314667(%rip), %rsi ## Objc selector ref: mDefog
10000495d:	4c 89 e7	movq	%r12, %rdi
100004960:	41 ff d7	callq	*%r15
100004963:	48 8b 35 26 c9 04 00	movq	313638(%rip), %rsi ## Objc selector ref: floatValue
10000496a:	48 89 c7	movq	%rax, %rdi
10000496d:	41 ff d7	callq	*%r15
100004970:	48 8b 35 a1 ce 04 00	movq	315041(%rip), %rsi ## Objc selector ref: numberWithFloat:
100004977:	48 89 df	movq	%rbx, %rdi
10000497a:	41 ff d7	callq	*%r15
10000497d:	4c 8d ad 00 ff ff ff	leaq	-256(%rbp), %r13
100004984:	49 89 45 00	movq	%rax, (%r13)
100004988:	48 8d 05 51 8a 03 00	leaq	232017(%rip), %rax ## Objc cfstring ref: @"com.apple.cmm.ToneMappingGammaExposure"
10000498f:	49 89 46 08	movq	%rax, 8(%r14)
100004993:	48 8b 1d 56 dc 04 00	movq	318550(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10000499a:	48 8b 35 ff cc 04 00	movq	314623(%rip), %rsi ## Objc selector ref: mExposure
1000049a1:	4c 89 e7	movq	%r12, %rdi
1000049a4:	41 ff d7	callq	*%r15
1000049a7:	48 89 c7	movq	%rax, %rdi
1000049aa:	48 8b 35 df c8 04 00	movq	313567(%rip), %rsi ## Objc selector ref: floatValue
1000049b1:	41 ff d7	callq	*%r15
1000049b4:	48 89 df	movq	%rbx, %rdi
1000049b7:	48 8b 35 5a ce 04 00	movq	314970(%rip), %rsi ## Objc selector ref: numberWithFloat:
1000049be:	41 ff d7	callq	*%r15
1000049c1:	49 89 45 08	movq	%rax, 8(%r13)
1000049c5:	48 8d 05 34 8a 03 00	leaq	231988(%rip), %rax ## Objc cfstring ref: @"com.apple.cmm.ToneMappingGammaKneeLow"
1000049cc:	49 89 46 10	movq	%rax, 16(%r14)
1000049d0:	48 8b 1d 19 dc 04 00	movq	318489(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
1000049d7:	48 8b 35 f2 cc 04 00	movq	314610(%rip), %rsi ## Objc selector ref: mKneeLow
1000049de:	4c 89 e7	movq	%r12, %rdi
1000049e1:	41 ff d7	callq	*%r15
1000049e4:	48 89 c7	movq	%rax, %rdi
1000049e7:	48 8b 35 a2 c8 04 00	movq	313506(%rip), %rsi ## Objc selector ref: floatValue
1000049ee:	41 ff d7	callq	*%r15
1000049f1:	48 89 df	movq	%rbx, %rdi
1000049f4:	48 8b 35 1d ce 04 00	movq	314909(%rip), %rsi ## Objc selector ref: numberWithFloat:
1000049fb:	41 ff d7	callq	*%r15
1000049fe:	49 89 45 10	movq	%rax, 16(%r13)
100004a02:	48 8d 05 17 8a 03 00	leaq	231959(%rip), %rax ## Objc cfstring ref: @"com.apple.cmm.ToneMappingGammaKneeHigh"
100004a09:	49 89 46 18	movq	%rax, 24(%r14)
100004a0d:	48 8b 1d dc db 04 00	movq	318428(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
100004a14:	48 8b 35 9d cc 04 00	movq	314525(%rip), %rsi ## Objc selector ref: mKneeHigh
100004a1b:	4c 89 e7	movq	%r12, %rdi
100004a1e:	41 ff d7	callq	*%r15
100004a21:	48 89 c7	movq	%rax, %rdi
100004a24:	48 8b 35 65 c8 04 00	movq	313445(%rip), %rsi ## Objc selector ref: floatValue
100004a2b:	41 ff d7	callq	*%r15
100004a2e:	48 89 df	movq	%rbx, %rdi
100004a31:	48 8b 35 e0 cd 04 00	movq	314848(%rip), %rsi ## Objc selector ref: numberWithFloat:
100004a38:	41 ff d7	callq	*%r15
100004a3b:	49 89 45 18	movq	%rax, 24(%r13)
100004a3f:	48 8b 3d d2 db 04 00	movq	318418(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100004a46:	41 b8 04 00 00 00	movl	$4, %r8d
100004a4c:	48 8b 1d 5d c6 04 00	movq	312925(%rip), %rbx ## Objc selector ref: dictionaryWithObjects:forKeys:count:
100004a53:	48 89 de	movq	%rbx, %rsi
100004a56:	4c 89 ea	movq	%r13, %rdx
100004a59:	4c 89 f1	movq	%r14, %rcx
100004a5c:	41 ff d7	callq	*%r15
100004a5f:	48 8d 15 da 89 03 00	leaq	231898(%rip), %rdx ## Objc cfstring ref: @"com.apple.cmm.ApplyEXRToneMappingGamma"
100004a66:	48 8d 8d d0 fe ff ff	leaq	-304(%rbp), %rcx
100004a6d:	48 89 11	movq	%rdx, (%rcx)
100004a70:	48 8d 95 d8 fe ff ff	leaq	-296(%rbp), %rdx
100004a77:	48 89 02	movq	%rax, (%rdx)
100004a7a:	48 8b 3d 97 db 04 00	movq	318359(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100004a81:	41 b8 01 00 00 00	movl	$1, %r8d
100004a87:	48 89 de	movq	%rbx, %rsi
100004a8a:	41 ff d7	callq	*%r15
100004a8d:	48 8b bd c8 fe ff ff	movq	-312(%rbp), %rdi
100004a94:	48 89 c6	movq	%rax, %rsi
100004a97:	e8 2a a8 02 00	callq	0x10002f2c6 ## symbol stub for: _ColorSyncTransformCreate
100004a9c:	48 8b 0d 75 7d 03 00	movq	228725(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
100004aa3:	48 8b 09	movq	(%rcx), %rcx
100004aa6:	48 3b 4d d0	cmpq	-48(%rbp), %rcx
100004aaa:	75 12	jne	0x100004abe
100004aac:	48 81 c4 18 01 00 00	addq	$280, %rsp
100004ab3:	5b	popq	%rbx
100004ab4:	41 5c	popq	%r12
100004ab6:	41 5d	popq	%r13
100004ab8:	41 5e	popq	%r14
100004aba:	41 5f	popq	%r15
100004abc:	5d	popq	%rbp
100004abd:	c3	retq
100004abe:	e8 ed a8 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100004ac3:	55	pushq	%rbp
100004ac4:	48 89 e5	movq	%rsp, %rbp
100004ac7:	41 57	pushq	%r15
100004ac9:	41 56	pushq	%r14
100004acb:	41 55	pushq	%r13
100004acd:	41 54	pushq	%r12
100004acf:	53	pushq	%rbx
100004ad0:	48 83 ec 28	subq	$40, %rsp
100004ad4:	48 89 fb	movq	%rdi, %rbx
100004ad7:	48 8b 05 3a 7d 03 00	movq	228666(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100004ade:	48 8b 00	movq	(%rax), %rax
100004ae1:	48 89 45 d0	movq	%rax, -48(%rbp)
100004ae5:	4c 8b 3d ec de 04 00	movq	319212(%rip), %r15
100004aec:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
100004af0:	48 85 ff	testq	%rdi, %rdi
100004af3:	74 24	je	0x100004b19
100004af5:	48 8b 35 c4 c4 04 00	movq	312516(%rip), %rsi ## Objc selector ref: count
100004afc:	ff 15 1e 81 03 00	callq	*229662(%rip) ## Objc message: +[NSDictionary count]
100004b02:	48 85 c0	testq	%rax, %rax
100004b05:	75 12	jne	0x100004b19
100004b07:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100004b0b:	ff 15 47 81 03 00	callq	*229703(%rip) ## literal pool symbol address: _objc_release
100004b11:	4a c7 04 3b 00 00 00 00	movq	$0, (%rbx,%r15)
100004b19:	4c 8b 25 b0 de 04 00	movq	319152(%rip), %r12
100004b20:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
100004b25:	74 55	je	0x100004b7c
100004b27:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100004b2b:	48 85 ff	testq	%rdi, %rdi
100004b2e:	74 70	je	0x100004ba0
100004b30:	48 8b 35 89 c4 04 00	movq	312457(%rip), %rsi ## Objc selector ref: count
100004b37:	ff 15 e3 80 03 00	callq	*229603(%rip) ## Objc message: -[%rdi count]
100004b3d:	48 85 c0	testq	%rax, %rax
100004b40:	0f 84 4a 02 00 00	je	0x100004d90
100004b46:	4e 8b 34 3b	movq	(%rbx,%r15), %r14
100004b4a:	48 8b 35 2f d7 04 00	movq	317231(%rip), %rsi ## Objc selector ref: sliderValues
100004b51:	4d 89 e5	movq	%r12, %r13
100004b54:	4c 8b 25 c5 80 03 00	movq	229573(%rip), %r12 ## Objc message: -[%rdi sliderValues]
100004b5b:	48 89 df	movq	%rbx, %rdi
100004b5e:	41 ff d4	callq	*%r12
100004b61:	48 8b 35 08 ca 04 00	movq	313864(%rip), %rsi ## Objc selector ref: isEqual:
100004b68:	4c 89 f7	movq	%r14, %rdi
100004b6b:	48 89 c2	movq	%rax, %rdx
100004b6e:	41 ff d4	callq	*%r12
100004b71:	4d 89 ec	movq	%r13, %r12
100004b74:	84 c0	testb	%al, %al
100004b76:	0f 85 14 02 00 00	jne	0x100004d90
100004b7c:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100004b80:	48 85 ff	testq	%rdi, %rdi
100004b83:	74 1b	je	0x100004ba0
100004b85:	ff 15 cd 80 03 00	callq	*229581(%rip) ## literal pool symbol address: _objc_release
100004b8b:	48 8b 35 ee d6 04 00	movq	317166(%rip), %rsi ## Objc selector ref: sliderValues
100004b92:	48 89 df	movq	%rbx, %rdi
100004b95:	ff 15 85 80 03 00	callq	*229509(%rip) ## Objc message: -[%rdi sliderValues]
100004b9b:	e9 b2 00 00 00	jmp	0x100004c52
100004ba0:	48 8b 35 e1 d3 04 00	movq	316385(%rip), %rsi ## Objc selector ref: setMKneeHigh:
100004ba7:	48 8d 15 7a b8 03 00	leaq	243834(%rip), %rdx
100004bae:	4c 8b 2d 6b 80 03 00	movq	229483(%rip), %r13 ## Objc message: -[%rdi setMKneeHigh:]
100004bb5:	48 89 df	movq	%rbx, %rdi
100004bb8:	41 ff d5	callq	*%r13
100004bbb:	48 8b 35 ce d3 04 00	movq	316366(%rip), %rsi ## Objc selector ref: setMKneeLow:
100004bc2:	4c 8d 35 6f b8 03 00	leaq	243823(%rip), %r14
100004bc9:	48 89 df	movq	%rbx, %rdi
100004bcc:	4c 89 f2	movq	%r14, %rdx
100004bcf:	41 ff d5	callq	*%r13
100004bd2:	48 8b 35 9f d3 04 00	movq	316319(%rip), %rsi ## Objc selector ref: setMDefog:
100004bd9:	48 89 df	movq	%rbx, %rdi
100004bdc:	4c 89 f2	movq	%r14, %rdx
100004bdf:	41 ff d5	callq	*%r13
100004be2:	48 8b 35 97 d3 04 00	movq	316311(%rip), %rsi ## Objc selector ref: setMExposure:
100004be9:	48 89 df	movq	%rbx, %rdi
100004bec:	4c 89 f2	movq	%r14, %rdx
100004bef:	41 ff d5	callq	*%r13
100004bf2:	48 8b 35 8f ca 04 00	movq	313999(%rip), %rsi ## Objc selector ref: mDefog
100004bf9:	48 89 df	movq	%rbx, %rdi
100004bfc:	41 ff d5	callq	*%r13
100004bff:	4c 8d 75 b0	leaq	-80(%rbp), %r14
100004c03:	49 89 06	movq	%rax, (%r14)
100004c06:	48 8b 35 93 ca 04 00	movq	314003(%rip), %rsi ## Objc selector ref: mExposure
100004c0d:	48 89 df	movq	%rbx, %rdi
100004c10:	41 ff d5	callq	*%r13
100004c13:	49 89 46 08	movq	%rax, 8(%r14)
100004c17:	48 8b 35 b2 ca 04 00	movq	314034(%rip), %rsi ## Objc selector ref: mKneeLow
100004c1e:	48 89 df	movq	%rbx, %rdi
100004c21:	41 ff d5	callq	*%r13
100004c24:	49 89 46 10	movq	%rax, 16(%r14)
100004c28:	48 8b 35 89 ca 04 00	movq	313993(%rip), %rsi ## Objc selector ref: mKneeHigh
100004c2f:	48 89 df	movq	%rbx, %rdi
100004c32:	41 ff d5	callq	*%r13
100004c35:	49 89 46 18	movq	%rax, 24(%r14)
100004c39:	48 8b 3d 70 d9 04 00	movq	317808(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100004c40:	48 8b 35 f9 c0 04 00	movq	311545(%rip), %rsi ## Objc selector ref: arrayWithObjects:count:
100004c47:	b9 04 00 00 00	movl	$4, %ecx
100004c4c:	4c 89 f2	movq	%r14, %rdx
100004c4f:	41 ff d5	callq	*%r13
100004c52:	48 89 c7	movq	%rax, %rdi
100004c55:	ff 15 05 80 03 00	callq	*229381(%rip) ## literal pool symbol address: _objc_retain
100004c5b:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
100004c5f:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100004c63:	e8 20 a5 02 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100004c68:	4a c7 04 23 00 00 00 00	movq	$0, (%rbx,%r12)
100004c70:	48 8b 05 51 dd 04 00	movq	318801(%rip), %rax
100004c77:	48 8b 0c 03	movq	(%rbx,%rax), %rcx
100004c7b:	48 8b 35 6e c3 04 00	movq	312174(%rip), %rsi ## Objc selector ref: create_colorsync_transform:dstProfile:
100004c82:	48 89 df	movq	%rbx, %rdi
100004c85:	48 89 ca	movq	%rcx, %rdx
100004c88:	ff 15 92 7f 03 00	callq	*229266(%rip) ## Objc message: +[NSArray create_colorsync_transform:dstProfile:]
100004c8e:	48 85 c0	testq	%rax, %rax
100004c91:	0f 84 f9 00 00 00	je	0x100004d90
100004c97:	49 89 c6	movq	%rax, %r14
100004c9a:	48 8b 05 4f dd 04 00	movq	318799(%rip), %rax
100004ca1:	48 8b 34 03	movq	(%rbx,%rax), %rsi
100004ca5:	4c 8b 2d 4c dd 04 00	movq	318796(%rip), %r13
100004cac:	4a 8b 14 2b	movq	(%rbx,%r13), %rdx
100004cb0:	4c 8b 3d 31 dd 04 00	movq	318769(%rip), %r15
100004cb7:	4a 8b 0c 3b	movq	(%rbx,%r15), %rcx
100004cbb:	48 8b 05 3e dd 04 00	movq	318782(%rip), %rax
100004cc2:	44 8b 0c 03	movl	(%rbx,%rax), %r9d
100004cc6:	4c 8b 25 3b dd 04 00	movq	318779(%rip), %r12
100004ccd:	4a 8b 04 23	movq	(%rbx,%r12), %rax
100004cd1:	48 0f af c6	imulq	%rsi, %rax
100004cd5:	48 c1 e0 02	shlq	$2, %rax
100004cd9:	4c 8b 15 00 dd 04 00	movq	318720(%rip), %r10
100004ce0:	4c 89 f7	movq	%r14, %rdi
100004ce3:	41 b8 07 00 00 00	movl	$7, %r8d
100004ce9:	6a 00	pushq	$0
100004ceb:	50	pushq	%rax
100004cec:	41 51	pushq	%r9
100004cee:	6a 07	pushq	$7
100004cf0:	42 ff 34 13	pushq	(%rbx,%r10)
100004cf4:	50	pushq	%rax
100004cf5:	e8 c6 a5 02 00	callq	0x10002f2c0 ## symbol stub for: _ColorSyncTransformConvert
100004cfa:	48 83 c4 30	addq	$48, %rsp
100004cfe:	4a 8b 34 3b	movq	(%rbx,%r15), %rsi
100004d02:	48 8b 05 07 dd 04 00	movq	318727(%rip), %rax
100004d09:	48 8b 14 03	movq	(%rbx,%rax), %rdx
100004d0d:	31 ff	xorl	%edi, %edi
100004d0f:	31 c9	xorl	%ecx, %ecx
100004d11:	e8 e2 a3 02 00	callq	0x10002f0f8 ## symbol stub for: _CGDataProviderCreateWithData
100004d16:	48 85 c0	testq	%rax, %rax
100004d19:	74 6d	je	0x100004d88
100004d1b:	49 89 c7	movq	%rax, %r15
100004d1e:	48 8b 05 cb dc 04 00	movq	318667(%rip), %rax
100004d25:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100004d29:	4a 8b 34 2b	movq	(%rbx,%r13), %rsi
100004d2d:	4a 8b 0c 23	movq	(%rbx,%r12), %rcx
100004d31:	49 89 f8	movq	%rdi, %r8
100004d34:	4c 0f af c1	imulq	%rcx, %r8
100004d38:	48 c1 e1 05	shlq	$5, %rcx
100004d3c:	49 c1 e0 02	shlq	$2, %r8
100004d40:	48 8b 05 d1 dc 04 00	movq	318673(%rip), %rax
100004d47:	4c 8b 0c 03	movq	(%rbx,%rax), %r9
100004d4b:	b8 00 21 00 00	movl	$8448, %eax
100004d50:	48 8b 15 a9 dc 04 00	movq	318633(%rip), %rdx
100004d57:	0b 04 13	orl	(%rbx,%rdx), %eax
100004d5a:	48 83 ec 08	subq	$8, %rsp
100004d5e:	ba 20 00 00 00	movl	$32, %edx
100004d63:	6a 00	pushq	$0
100004d65:	6a 01	pushq	$1
100004d67:	6a 00	pushq	$0
100004d69:	41 57	pushq	%r15
100004d6b:	50	pushq	%rax
100004d6c:	e8 93 a3 02 00	callq	0x10002f104 ## symbol stub for: _CGImageCreate
100004d71:	48 83 c4 30	addq	$48, %rsp
100004d75:	48 8b 0d 54 dc 04 00	movq	318548(%rip), %rcx
100004d7c:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100004d80:	4c 89 ff	movq	%r15, %rdi
100004d83:	e8 8a a1 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100004d88:	4c 89 f7	movq	%r14, %rdi
100004d8b:	e8 82 a1 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100004d90:	48 8b 05 81 7a 03 00	movq	227969(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100004d97:	48 8b 00	movq	(%rax), %rax
100004d9a:	48 3b 45 d0	cmpq	-48(%rbp), %rax
100004d9e:	75 0f	jne	0x100004daf
100004da0:	48 83 c4 28	addq	$40, %rsp
100004da4:	5b	popq	%rbx
100004da5:	41 5c	popq	%r12
100004da7:	41 5d	popq	%r13
100004da9:	41 5e	popq	%r14
100004dab:	41 5f	popq	%r15
100004dad:	5d	popq	%rbp
100004dae:	c3	retq
100004daf:	e8 fc a5 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100004db4:	55	pushq	%rbp
100004db5:	48 89 e5	movq	%rsp, %rbp
100004db8:	41 57	pushq	%r15
100004dba:	41 56	pushq	%r14
100004dbc:	41 55	pushq	%r13
100004dbe:	41 54	pushq	%r12
100004dc0:	53	pushq	%rbx
100004dc1:	50	pushq	%rax
100004dc2:	48 89 d3	movq	%rdx, %rbx
100004dc5:	49 89 fc	movq	%rdi, %r12
100004dc8:	48 8b 35 e9 d0 04 00	movq	315625(%rip), %rsi ## Objc selector ref: setImageDoc:
100004dcf:	ff 15 4b 7e 03 00	callq	*228939(%rip) ## Objc message: -[%rdi setImageDoc:]
100004dd5:	48 85 db	testq	%rbx, %rbx
100004dd8:	0f 84 44 01 00 00	je	0x100004f22
100004dde:	48 8b 35 83 c5 04 00	movq	312707(%rip), %rsi ## Objc selector ref: imageDoc
100004de5:	48 8b 1d 34 7e 03 00	movq	228916(%rip), %rbx ## Objc message: -[%rdi imageDoc]
100004dec:	4c 89 e7	movq	%r12, %rdi
100004def:	ff d3	callq	*%rbx
100004df1:	48 8b 35 10 cb 04 00	movq	314128(%rip), %rsi ## Objc selector ref: originalImage
100004df8:	48 89 c7	movq	%rax, %rdi
100004dfb:	ff d3	callq	*%rbx
100004dfd:	49 89 c6	movq	%rax, %r14
100004e00:	48 89 c7	movq	%rax, %rdi
100004e03:	e8 2c a3 02 00	callq	0x10002f134 ## symbol stub for: _CGImageGetBitmapInfo
100004e08:	0f ba e0 08	btl	$8, %eax
100004e0c:	0f 83 10 01 00 00	jae	0x100004f22
100004e12:	48 8b 0d c7 db 04 00	movq	318407(%rip), %rcx
100004e19:	4c 01 e1	addq	%r12, %rcx
100004e1c:	4c 8b 05 c5 db 04 00	movq	318405(%rip), %r8
100004e23:	4d 01 e0	addq	%r12, %r8
100004e26:	4c 8b 0d e3 db 04 00	movq	318435(%rip), %r9
100004e2d:	4d 01 e1	addq	%r12, %r9
100004e30:	48 8b 35 f1 c3 04 00	movq	312305(%rip), %rsi ## Objc selector ref: fillFP32BufferWithImageData:srcPtr:dstPtr:size:
100004e37:	4c 89 e7	movq	%r12, %rdi
100004e3a:	4c 89 f2	movq	%r14, %rdx
100004e3d:	ff 15 dd 7d 03 00	callq	*228829(%rip) ## Objc message: -[%rdi fillFP32BufferWithImageData:srcPtr:dstPtr:size:]
100004e43:	84 c0	testb	%al, %al
100004e45:	0f 84 d7 00 00 00	je	0x100004f22
100004e4b:	4c 89 f7	movq	%r14, %rdi
100004e4e:	e8 f9 a2 02 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100004e53:	48 89 45 d0	movq	%rax, -48(%rbp)
100004e57:	48 89 c7	movq	%rax, %rdi
100004e5a:	e8 73 a1 02 00	callq	0x10002efd2 ## symbol stub for: _CGColorSpaceCopyICCData
100004e5f:	49 89 c5	movq	%rax, %r13
100004e62:	31 db	xorl	%ebx, %ebx
100004e64:	48 89 c7	movq	%rax, %rdi
100004e67:	31 f6	xorl	%esi, %esi
100004e69:	e8 1c a4 02 00	callq	0x10002f28a ## symbol stub for: _ColorSyncProfileCreate
100004e6e:	4c 8b 3d 53 db 04 00	movq	318291(%rip), %r15
100004e75:	4b 89 04 3c	movq	%rax, (%r12,%r15)
100004e79:	4c 89 ef	movq	%r13, %rdi
100004e7c:	e8 91 a0 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100004e81:	4b 8b 3c 3c	movq	(%r12,%r15), %rdi
100004e85:	48 85 ff	testq	%rdi, %rdi
100004e88:	0f 84 96 00 00 00	je	0x100004f24
100004e8e:	31 f6	xorl	%esi, %esi
100004e90:	e8 55 a1 02 00	callq	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
100004e95:	48 8b 0d 7c db 04 00	movq	318332(%rip), %rcx
100004e9c:	49 89 04 0c	movq	%rax, (%r12,%rcx)
100004ea0:	4c 89 f7	movq	%r14, %rdi
100004ea3:	e8 d4 a2 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100004ea8:	48 8b 0d 41 db 04 00	movq	318273(%rip), %rcx
100004eaf:	49 89 04 0c	movq	%rax, (%r12,%rcx)
100004eb3:	4c 89 f7	movq	%r14, %rdi
100004eb6:	e8 a3 a2 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100004ebb:	48 8b 0d 36 db 04 00	movq	318262(%rip), %rcx
100004ec2:	49 89 04 0c	movq	%rax, (%r12,%rcx)
100004ec6:	4c 89 f7	movq	%r14, %rdi
100004ec9:	e8 60 a2 02 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
100004ece:	41 89 c6	movl	%eax, %r14d
100004ed1:	45 8d 7e fe	leal	-2(%r14), %r15d
100004ed5:	41 83 e7 fd	andl	$-3, %r15d
100004ed9:	48 8b 7d d0	movq	-48(%rbp), %rdi
100004edd:	e8 38 a1 02 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
100004ee2:	41 83 ff 01	cmpl	$1, %r15d
100004ee6:	83 d3 03	adcl	$3, %ebx
100004ee9:	31 c9	xorl	%ecx, %ecx
100004eeb:	45 85 f6	testl	%r14d, %r14d
100004eee:	0f 95 c1	setne	%cl
100004ef1:	41 0f 44 de	cmovel	%r14d, %ebx
100004ef5:	48 01 c1	addq	%rax, %rcx
100004ef8:	48 8b 05 09 db 04 00	movq	318217(%rip), %rax
100004eff:	49 89 0c 04	movq	%rcx, (%r12,%rax)
100004f03:	48 8b 05 f6 da 04 00	movq	318198(%rip), %rax
100004f0a:	41 89 1c 04	movl	%ebx, (%r12,%rax)
100004f0e:	48 8b 35 5b d5 04 00	movq	316763(%rip), %rsi ## Objc selector ref: updateToneMappedImage
100004f15:	4c 89 e7	movq	%r12, %rdi
100004f18:	ff 15 02 7d 03 00	callq	*228610(%rip) ## Objc message: -[%rdi updateToneMappedImage]
100004f1e:	b3 01	movb	$1, %bl
100004f20:	eb 02	jmp	0x100004f24
100004f22:	31 db	xorl	%ebx, %ebx
100004f24:	0f b6 c3	movzbl	%bl, %eax
100004f27:	48 83 c4 08	addq	$8, %rsp
100004f2b:	5b	popq	%rbx
100004f2c:	41 5c	popq	%r12
100004f2e:	41 5d	popq	%r13
100004f30:	41 5e	popq	%r14
100004f32:	41 5f	popq	%r15
100004f34:	5d	popq	%rbp
100004f35:	c3	retq
100004f36:	55	pushq	%rbp
100004f37:	48 89 e5	movq	%rsp, %rbp
100004f3a:	41 57	pushq	%r15
100004f3c:	41 56	pushq	%r14
100004f3e:	41 54	pushq	%r12
100004f40:	53	pushq	%rbx
100004f41:	48 89 fb	movq	%rdi, %rbx
100004f44:	4c 8b 35 1d c4 04 00	movq	312349(%rip), %r14 ## Objc selector ref: imageDoc
100004f4b:	4c 89 f6	movq	%r14, %rsi
100004f4e:	ff 15 cc 7c 03 00	callq	*228556(%rip) ## Objc message: -[%rdi imageDoc]
100004f54:	48 85 c0	testq	%rax, %rax
100004f57:	0f 84 83 00 00 00	je	0x100004fe0
100004f5d:	4c 8b 25 bc 7c 03 00	movq	228540(%rip), %r12 ## Objc message: -[%rdi imageDoc]
100004f64:	48 89 df	movq	%rbx, %rdi
100004f67:	4c 89 f6	movq	%r14, %rsi
100004f6a:	41 ff d4	callq	*%r12
100004f6d:	49 89 c6	movq	%rax, %r14
100004f70:	48 8b 35 41 cf 04 00	movq	315201(%rip), %rsi ## Objc selector ref: setImageDoc:
100004f77:	48 89 df	movq	%rbx, %rdi
100004f7a:	31 d2	xorl	%edx, %edx
100004f7c:	41 ff d4	callq	*%r12
100004f7f:	4c 8b 3d a2 d4 04 00	movq	316578(%rip), %r15 ## Objc selector ref: undoManager
100004f86:	4c 89 f7	movq	%r14, %rdi
100004f89:	4c 89 fe	movq	%r15, %rsi
100004f8c:	41 ff d4	callq	*%r12
100004f8f:	48 8b 35 2a cb 04 00	movq	314154(%rip), %rsi ## Objc selector ref: removeAllActionsWithTarget:
100004f96:	48 89 c7	movq	%rax, %rdi
100004f99:	48 89 da	movq	%rbx, %rdx
100004f9c:	41 ff d4	callq	*%r12
100004f9f:	48 8b 35 8a d4 04 00	movq	316554(%rip), %rsi ## Objc selector ref: undoOnClose
100004fa6:	48 89 df	movq	%rbx, %rdi
100004fa9:	41 ff d4	callq	*%r12
100004fac:	3c 01	cmpb	$1, %al
100004fae:	75 16	jne	0x100004fc6
100004fb0:	4c 89 f7	movq	%r14, %rdi
100004fb3:	4c 89 fe	movq	%r15, %rsi
100004fb6:	41 ff d4	callq	*%r12
100004fb9:	48 8b 35 58 d4 04 00	movq	316504(%rip), %rsi ## Objc selector ref: undo
100004fc0:	48 89 c7	movq	%rax, %rdi
100004fc3:	41 ff d4	callq	*%r12
100004fc6:	48 8b 35 db ca 04 00	movq	314075(%rip), %rsi ## Objc selector ref: releaseToneMapping:
100004fcd:	4c 89 f7	movq	%r14, %rdi
100004fd0:	31 d2	xorl	%edx, %edx
100004fd2:	5b	popq	%rbx
100004fd3:	41 5c	popq	%r12
100004fd5:	41 5e	popq	%r14
100004fd7:	41 5f	popq	%r15
100004fd9:	5d	popq	%rbp
100004fda:	ff 25 40 7c 03 00	jmpq	*228416(%rip) ## Objc message: -[%rdi releaseToneMapping:]
100004fe0:	5b	popq	%rbx
100004fe1:	41 5c	popq	%r12
100004fe3:	41 5e	popq	%r14
100004fe5:	41 5f	popq	%r15
100004fe7:	5d	popq	%rbp
100004fe8:	c3	retq
100004fe9:	55	pushq	%rbp
100004fea:	48 89 e5	movq	%rsp, %rbp
100004fed:	41 56	pushq	%r14
100004fef:	53	pushq	%rbx
100004ff0:	48 89 fb	movq	%rdi, %rbx
100004ff3:	48 8b 35 2e cf 04 00	movq	315182(%rip), %rsi ## Objc selector ref: setKneeHighMin:
100004ffa:	4c 8b 35 1f 7c 03 00	movq	228383(%rip), %r14 ## Objc message: -[%rdi setKneeHighMin:]
100005001:	f2 0f 10 05 4f 2f 03 00	movsd	208719(%rip), %xmm0
100005009:	41 ff d6	callq	*%r14
10000500c:	48 8b 35 0d cf 04 00	movq	315149(%rip), %rsi ## Objc selector ref: setKneeHighMax:
100005013:	f2 0f 10 05 45 2f 03 00	movsd	208709(%rip), %xmm0
10000501b:	48 89 df	movq	%rbx, %rdi
10000501e:	41 ff d6	callq	*%r14
100005021:	48 8b 35 18 cf 04 00	movq	315160(%rip), %rsi ## Objc selector ref: setKneeLowMin:
100005028:	f2 0f 10 05 38 2f 03 00	movsd	208696(%rip), %xmm0
100005030:	48 89 df	movq	%rbx, %rdi
100005033:	41 ff d6	callq	*%r14
100005036:	48 8b 35 fb ce 04 00	movq	315131(%rip), %rsi ## Objc selector ref: setKneeLowMax:
10000503d:	f2 0f 10 05 2b 2f 03 00	movsd	208683(%rip), %xmm0
100005045:	48 89 df	movq	%rbx, %rdi
100005048:	41 ff d6	callq	*%r14
10000504b:	48 8b 35 2e cd 04 00	movq	314670(%rip), %rsi ## Objc selector ref: setDefogMin:
100005052:	0f 57 c0	xorps	%xmm0, %xmm0
100005055:	48 89 df	movq	%rbx, %rdi
100005058:	41 ff d6	callq	*%r14
10000505b:	48 8b 35 16 cd 04 00	movq	314646(%rip), %rsi ## Objc selector ref: setDefogMax:
100005062:	f2 0f 10 05 0e 2f 03 00	movsd	208654(%rip), %xmm0
10000506a:	48 89 df	movq	%rbx, %rdi
10000506d:	41 ff d6	callq	*%r14
100005070:	48 8b 35 91 cd 04 00	movq	314769(%rip), %rsi ## Objc selector ref: setExposureMin:
100005077:	f2 0f 10 05 01 2f 03 00	movsd	208641(%rip), %xmm0
10000507f:	48 89 df	movq	%rbx, %rdi
100005082:	41 ff d6	callq	*%r14
100005085:	48 8b 35 74 cd 04 00	movq	314740(%rip), %rsi ## Objc selector ref: setExposureMax:
10000508c:	f2 0f 10 05 f4 2e 03 00	movsd	208628(%rip), %xmm0
100005094:	48 89 df	movq	%rbx, %rdi
100005097:	41 ff d6	callq	*%r14
10000509a:	48 8b 35 2f d1 04 00	movq	315695(%rip), %rsi ## Objc selector ref: setupKneeHigh
1000050a1:	48 89 df	movq	%rbx, %rdi
1000050a4:	41 ff d6	callq	*%r14
1000050a7:	48 8b 35 2a d1 04 00	movq	315690(%rip), %rsi ## Objc selector ref: setupKneeLow
1000050ae:	48 89 df	movq	%rbx, %rdi
1000050b1:	41 ff d6	callq	*%r14
1000050b4:	48 8b 35 f5 d0 04 00	movq	315637(%rip), %rsi ## Objc selector ref: setupDefog
1000050bb:	48 89 df	movq	%rbx, %rdi
1000050be:	41 ff d6	callq	*%r14
1000050c1:	48 8b 35 f0 d0 04 00	movq	315632(%rip), %rsi ## Objc selector ref: setupExposure
1000050c8:	48 89 df	movq	%rbx, %rdi
1000050cb:	4c 89 f0	movq	%r14, %rax
1000050ce:	5b	popq	%rbx
1000050cf:	41 5e	popq	%r14
1000050d1:	5d	popq	%rbp
1000050d2:	ff e0	jmpq	*%rax
1000050d4:	55	pushq	%rbp
1000050d5:	48 89 e5	movq	%rsp, %rbp
1000050d8:	41 57	pushq	%r15
1000050da:	41 56	pushq	%r14
1000050dc:	53	pushq	%rbx
1000050dd:	50	pushq	%rax
1000050de:	48 89 fb	movq	%rdi, %rbx
1000050e1:	48 8b 35 e0 c5 04 00	movq	312800(%rip), %rsi ## Objc selector ref: mKneeHighSlider
1000050e8:	4c 8b 3d 31 7b 03 00	movq	228145(%rip), %r15 ## Objc message: -[%rdi mKneeHighSlider]
1000050ef:	41 ff d7	callq	*%r15
1000050f2:	4c 8b 35 3f cd 04 00	movq	314687(%rip), %r14 ## Objc selector ref: setFloatValue:
1000050f9:	f3 0f 10 05 8f 2e 03 00	movss	208527(%rip), %xmm0
100005101:	48 89 c7	movq	%rax, %rdi
100005104:	4c 89 f6	movq	%r14, %rsi
100005107:	41 ff d7	callq	*%r15
10000510a:	48 8b 35 af c5 04 00	movq	312751(%rip), %rsi ## Objc selector ref: mKneeHighEditField
100005111:	48 89 df	movq	%rbx, %rdi
100005114:	41 ff d7	callq	*%r15
100005117:	48 89 c7	movq	%rax, %rdi
10000511a:	4c 89 f6	movq	%r14, %rsi
10000511d:	f3 0f 10 05 6b 2e 03 00	movss	208491(%rip), %xmm0
100005125:	41 ff d7	callq	*%r15
100005128:	48 8b 35 59 ce 04 00	movq	314969(%rip), %rsi ## Objc selector ref: setMKneeHigh:
10000512f:	48 8d 15 f2 b2 03 00	leaq	242418(%rip), %rdx
100005136:	48 89 df	movq	%rbx, %rdi
100005139:	4c 89 f8	movq	%r15, %rax
10000513c:	48 83 c4 08	addq	$8, %rsp
100005140:	5b	popq	%rbx
100005141:	41 5e	popq	%r14
100005143:	41 5f	popq	%r15
100005145:	5d	popq	%rbp
100005146:	ff e0	jmpq	*%rax
100005148:	55	pushq	%rbp
100005149:	48 89 e5	movq	%rsp, %rbp
10000514c:	41 57	pushq	%r15
10000514e:	41 56	pushq	%r14
100005150:	53	pushq	%rbx
100005151:	50	pushq	%rax
100005152:	48 89 fb	movq	%rdi, %rbx
100005155:	48 8b 35 84 c5 04 00	movq	312708(%rip), %rsi ## Objc selector ref: mKneeLowSlider
10000515c:	4c 8b 3d bd 7a 03 00	movq	228029(%rip), %r15 ## Objc message: -[%rdi mKneeLowSlider]
100005163:	41 ff d7	callq	*%r15
100005166:	4c 8b 35 cb cc 04 00	movq	314571(%rip), %r14 ## Objc selector ref: setFloatValue:
10000516d:	0f 57 c0	xorps	%xmm0, %xmm0
100005170:	48 89 c7	movq	%rax, %rdi
100005173:	4c 89 f6	movq	%r14, %rsi
100005176:	41 ff d7	callq	*%r15
100005179:	48 8b 35 58 c5 04 00	movq	312664(%rip), %rsi ## Objc selector ref: mKneeLowEditField
100005180:	48 89 df	movq	%rbx, %rdi
100005183:	41 ff d7	callq	*%r15
100005186:	0f 57 c0	xorps	%xmm0, %xmm0
100005189:	48 89 c7	movq	%rax, %rdi
10000518c:	4c 89 f6	movq	%r14, %rsi
10000518f:	41 ff d7	callq	*%r15
100005192:	48 8b 35 f7 cd 04 00	movq	314871(%rip), %rsi ## Objc selector ref: setMKneeLow:
100005199:	48 8d 15 98 b2 03 00	leaq	242328(%rip), %rdx
1000051a0:	48 89 df	movq	%rbx, %rdi
1000051a3:	4c 89 f8	movq	%r15, %rax
1000051a6:	48 83 c4 08	addq	$8, %rsp
1000051aa:	5b	popq	%rbx
1000051ab:	41 5e	popq	%r14
1000051ad:	41 5f	popq	%r15
1000051af:	5d	popq	%rbp
1000051b0:	ff e0	jmpq	*%rax
1000051b2:	55	pushq	%rbp
1000051b3:	48 89 e5	movq	%rsp, %rbp
1000051b6:	41 57	pushq	%r15
1000051b8:	41 56	pushq	%r14
1000051ba:	53	pushq	%rbx
1000051bb:	50	pushq	%rax
1000051bc:	48 89 fb	movq	%rdi, %rbx
1000051bf:	48 8b 35 d2 c4 04 00	movq	312530(%rip), %rsi ## Objc selector ref: mDefogSlider
1000051c6:	4c 8b 3d 53 7a 03 00	movq	227923(%rip), %r15 ## Objc message: -[%rdi mDefogSlider]
1000051cd:	41 ff d7	callq	*%r15
1000051d0:	4c 8b 35 61 cc 04 00	movq	314465(%rip), %r14 ## Objc selector ref: setFloatValue:
1000051d7:	0f 57 c0	xorps	%xmm0, %xmm0
1000051da:	48 89 c7	movq	%rax, %rdi
1000051dd:	4c 89 f6	movq	%r14, %rsi
1000051e0:	41 ff d7	callq	*%r15
1000051e3:	48 8b 35 a6 c4 04 00	movq	312486(%rip), %rsi ## Objc selector ref: mDefogEditField
1000051ea:	48 89 df	movq	%rbx, %rdi
1000051ed:	41 ff d7	callq	*%r15
1000051f0:	0f 57 c0	xorps	%xmm0, %xmm0
1000051f3:	48 89 c7	movq	%rax, %rdi
1000051f6:	4c 89 f6	movq	%r14, %rsi
1000051f9:	41 ff d7	callq	*%r15
1000051fc:	48 8b 35 75 cd 04 00	movq	314741(%rip), %rsi ## Objc selector ref: setMDefog:
100005203:	48 8d 15 2e b2 03 00	leaq	242222(%rip), %rdx
10000520a:	48 89 df	movq	%rbx, %rdi
10000520d:	4c 89 f8	movq	%r15, %rax
100005210:	48 83 c4 08	addq	$8, %rsp
100005214:	5b	popq	%rbx
100005215:	41 5e	popq	%r14
100005217:	41 5f	popq	%r15
100005219:	5d	popq	%rbp
10000521a:	ff e0	jmpq	*%rax
10000521c:	55	pushq	%rbp
10000521d:	48 89 e5	movq	%rsp, %rbp
100005220:	41 57	pushq	%r15
100005222:	41 56	pushq	%r14
100005224:	53	pushq	%rbx
100005225:	50	pushq	%rax
100005226:	48 89 fb	movq	%rdi, %rbx
100005229:	48 8b 35 80 c4 04 00	movq	312448(%rip), %rsi ## Objc selector ref: mExposureSlider
100005230:	4c 8b 3d e9 79 03 00	movq	227817(%rip), %r15 ## Objc message: -[%rdi mExposureSlider]
100005237:	41 ff d7	callq	*%r15
10000523a:	4c 8b 35 f7 cb 04 00	movq	314359(%rip), %r14 ## Objc selector ref: setFloatValue:
100005241:	0f 57 c0	xorps	%xmm0, %xmm0
100005244:	48 89 c7	movq	%rax, %rdi
100005247:	4c 89 f6	movq	%r14, %rsi
10000524a:	41 ff d7	callq	*%r15
10000524d:	48 8b 35 54 c4 04 00	movq	312404(%rip), %rsi ## Objc selector ref: mExposureEditField
100005254:	48 89 df	movq	%rbx, %rdi
100005257:	41 ff d7	callq	*%r15
10000525a:	0f 57 c0	xorps	%xmm0, %xmm0
10000525d:	48 89 c7	movq	%rax, %rdi
100005260:	4c 89 f6	movq	%r14, %rsi
100005263:	41 ff d7	callq	*%r15
100005266:	48 8b 35 13 cd 04 00	movq	314643(%rip), %rsi ## Objc selector ref: setMExposure:
10000526d:	48 8d 15 c4 b1 03 00	leaq	242116(%rip), %rdx
100005274:	48 89 df	movq	%rbx, %rdi
100005277:	4c 89 f8	movq	%r15, %rax
10000527a:	48 83 c4 08	addq	$8, %rsp
10000527e:	5b	popq	%rbx
10000527f:	41 5e	popq	%r14
100005281:	41 5f	popq	%r15
100005283:	5d	popq	%rbp
100005284:	ff e0	jmpq	*%rax
100005286:	55	pushq	%rbp
100005287:	48 89 e5	movq	%rsp, %rbp
10000528a:	41 57	pushq	%r15
10000528c:	41 56	pushq	%r14
10000528e:	41 55	pushq	%r13
100005290:	41 54	pushq	%r12
100005292:	53	pushq	%rbx
100005293:	48 81 ec 88 00 00 00	subq	$136, %rsp
10000529a:	4d 89 ce	movq	%r9, %r14
10000529d:	4c 89 45 c0	movq	%r8, -64(%rbp)
1000052a1:	48 89 cb	movq	%rcx, %rbx
1000052a4:	49 89 d5	movq	%rdx, %r13
1000052a7:	48 89 d7	movq	%rdx, %rdi
1000052aa:	e8 8b 9e 02 00	callq	0x10002f13a ## symbol stub for: _CGImageGetBitsPerComponent
1000052af:	49 89 c4	movq	%rax, %r12
1000052b2:	4c 89 ef	movq	%r13, %rdi
1000052b5:	e8 92 9e 02 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
1000052ba:	48 89 c7	movq	%rax, %rdi
1000052bd:	e8 58 9d 02 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
1000052c2:	49 89 c7	movq	%rax, %r15
1000052c5:	48 83 e0 fd	andq	$-3, %rax
1000052c9:	48 83 f8 01	cmpq	$1, %rax
1000052cd:	0f 85 02 02 00 00	jne	0x1000054d5
1000052d3:	4c 89 75 b8	movq	%r14, -72(%rbp)
1000052d7:	4c 89 ef	movq	%r13, %rdi
1000052da:	e8 4f 9e 02 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
1000052df:	49 83 fc 20	cmpq	$32, %r12
1000052e3:	74 0a	je	0x1000052ef
1000052e5:	49 83 fc 10	cmpq	$16, %r12
1000052e9:	0f 85 e6 01 00 00	jne	0x1000054d5
1000052ef:	89 c1	movl	%eax, %ecx
1000052f1:	83 e1 fd	andl	$-3, %ecx
1000052f4:	89 4d d4	movl	%ecx, -44(%rbp)
1000052f7:	8d 48 ff	leal	-1(%rax), %ecx
1000052fa:	89 4d b4	movl	%ecx, -76(%rbp)
1000052fd:	4c 89 ef	movq	%r13, %rdi
100005300:	49 89 c6	movq	%rax, %r14
100005303:	e8 50 9e 02 00	callq	0x10002f158 ## symbol stub for: _CGImageGetDataProvider
100005308:	48 89 c7	movq	%rax, %rdi
10000530b:	e8 dc 9d 02 00	callq	0x10002f0ec ## symbol stub for: _CGDataProviderCopyData
100005310:	48 89 c7	movq	%rax, %rdi
100005313:	e8 88 9b 02 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100005318:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000531f:	4c 89 ef	movq	%r13, %rdi
100005322:	e8 55 9e 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100005327:	4c 89 65 c8	movq	%r12, -56(%rbp)
10000532b:	49 89 c4	movq	%rax, %r12
10000532e:	4c 89 75 88	movq	%r14, -120(%rbp)
100005332:	41 83 fe 01	cmpl	$1, %r14d
100005336:	4c 89 f8	movq	%r15, %rax
100005339:	48 83 d8 ff	sbbq	$-1, %rax
10000533d:	48 89 45 90	movq	%rax, -112(%rbp)
100005341:	4c 0f af e0	imulq	%rax, %r12
100005345:	4c 89 ef	movq	%r13, %rdi
100005348:	e8 11 9e 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10000534d:	4c 89 a5 70 ff ff ff	movq	%r12, -144(%rbp)
100005354:	49 0f af c4	imulq	%r12, %rax
100005358:	4c 8b 65 c8	movq	-56(%rbp), %r12
10000535c:	4c 8d 34 85 00 00 00 00	leaq	(,%rax,4), %r14
100005364:	48 8b 45 b8	movq	-72(%rbp), %rax
100005368:	4c 89 30	movq	%r14, (%rax)
10000536b:	bf 01 00 00 00	movl	$1, %edi
100005370:	4c 89 f6	movq	%r14, %rsi
100005373:	e8 44 a0 02 00	callq	0x10002f3bc ## symbol stub for: _calloc
100005378:	48 89 03	movq	%rax, (%rbx)
10000537b:	bf 01 00 00 00	movl	$1, %edi
100005380:	4c 89 f6	movq	%r14, %rsi
100005383:	e8 34 a0 02 00	callq	0x10002f3bc ## symbol stub for: _calloc
100005388:	48 8b 4d c0	movq	-64(%rbp), %rcx
10000538c:	48 89 01	movq	%rax, (%rcx)
10000538f:	41 b6 01	movb	$1, %r14b
100005392:	49 83 fc 10	cmpq	$16, %r12
100005396:	4c 89 6d b8	movq	%r13, -72(%rbp)
10000539a:	0f 84 4e 01 00 00	je	0x1000054ee
1000053a0:	49 83 fc 20	cmpq	$32, %r12
1000053a4:	0f 85 2e 01 00 00	jne	0x1000054d8
1000053aa:	4c 89 ef	movq	%r13, %rdi
1000053ad:	e8 ac 9d 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000053b2:	48 85 c0	testq	%rax, %rax
1000053b5:	0f 84 1d 01 00 00	je	0x1000054d8
1000053bb:	48 89 5d a8	movq	%rbx, -88(%rbp)
1000053bf:	31 c0	xorl	%eax, %eax
1000053c1:	83 7d 88 00	cmpl	$0, -120(%rbp)
1000053c5:	0f 95 c0	setne	%al
1000053c8:	48 8d 1c 85 0c 00 00 00	leaq	12(,%rax,4), %rbx
1000053d0:	31 c0	xorl	%eax, %eax
1000053d2:	48 89 45 c0	movq	%rax, -64(%rbp)
1000053d6:	31 c0	xorl	%eax, %eax
1000053d8:	48 89 45 c8	movq	%rax, -56(%rbp)
1000053dc:	4c 89 ef	movq	%r13, %rdi
1000053df:	e8 62 9d 02 00	callq	0x10002f146 ## symbol stub for: _CGImageGetBytesPerRow
1000053e4:	49 89 c6	movq	%rax, %r14
1000053e7:	48 8b 45 a8	movq	-88(%rbp), %rax
1000053eb:	4c 8b 20	movq	(%rax), %r12
1000053ee:	4c 89 ef	movq	%r13, %rdi
1000053f1:	e8 86 9d 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
1000053f6:	48 85 c0	testq	%rax, %rax
1000053f9:	0f 84 9f 00 00 00	je	0x10000549e
1000053ff:	4c 0f af 75 c8	imulq	-56(%rbp), %r14
100005404:	4c 03 b5 78 ff ff ff	addq	-136(%rbp), %r14
10000540b:	48 8b 45 c0	movq	-64(%rbp), %rax
10000540f:	4d 8d 24 84	leaq	(%r12,%rax,4), %r12
100005413:	45 31 ed	xorl	%r13d, %r13d
100005416:	48 8b 45 88	movq	-120(%rbp), %rax
10000541a:	83 f8 04	cmpl	$4, %eax
10000541d:	74 05	je	0x100005424
10000541f:	83 f8 02	cmpl	$2, %eax
100005422:	75 0c	jne	0x100005430
100005424:	f3 41 0f 10 06	movss	(%r14), %xmm0
100005429:	b8 01 00 00 00	movl	$1, %eax
10000542e:	eb 05	jmp	0x100005435
100005430:	0f 57 c0	xorps	%xmm0, %xmm0
100005433:	31 c0	xorl	%eax, %eax
100005435:	83 7d d4 01	cmpl	$1, -44(%rbp)
100005439:	75 07	jne	0x100005442
10000543b:	f3 41 0f 10 44 86 0c	movss	12(%r14,%rax,4), %xmm0
100005442:	0f 28 c8	movaps	%xmm0, %xmm1
100005445:	83 7d b4 02	cmpl	$2, -76(%rbp)
100005449:	72 08	jb	0x100005453
10000544b:	f3 0f 10 0d 41 2b 03 00	movss	207681(%rip), %xmm1
100005453:	49 8d 0c 07	leaq	(%r15,%rax), %rcx
100005457:	49 8d 14 86	leaq	(%r14,%rax,4), %rdx
10000545b:	49 8d 04 84	leaq	(%r12,%rax,4), %rax
10000545f:	31 f6	xorl	%esi, %esi
100005461:	f3 0f 10 14 b2	movss	(%rdx,%rsi,4), %xmm2
100005466:	f3 0f 5e d1	divss	%xmm1, %xmm2
10000546a:	f3 0f 11 14 b0	movss	%xmm2, (%rax,%rsi,4)
10000546f:	48 ff c6	incq	%rsi
100005472:	49 39 f7	cmpq	%rsi, %r15
100005475:	75 ea	jne	0x100005461
100005477:	83 7d d4 01	cmpl	$1, -44(%rbp)
10000547b:	75 06	jne	0x100005483
10000547d:	f3 41 0f 11 04 8c	movss	%xmm0, (%r12,%rcx,4)
100005483:	49 01 de	addq	%rbx, %r14
100005486:	49 01 dc	addq	%rbx, %r12
100005489:	49 ff c5	incq	%r13
10000548c:	48 8b 7d b8	movq	-72(%rbp), %rdi
100005490:	e8 e7 9c 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100005495:	49 39 c5	cmpq	%rax, %r13
100005498:	0f 82 78 ff ff ff	jb	0x100005416
10000549e:	4c 8b 75 c8	movq	-56(%rbp), %r14
1000054a2:	49 ff c6	incq	%r14
1000054a5:	4c 8b 6d b8	movq	-72(%rbp), %r13
1000054a9:	4c 89 ef	movq	%r13, %rdi
1000054ac:	e8 ad 9c 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000054b1:	48 8b 4d c0	movq	-64(%rbp), %rcx
1000054b5:	48 03 8d 70 ff ff ff	addq	-144(%rbp), %rcx
1000054bc:	48 89 4d c0	movq	%rcx, -64(%rbp)
1000054c0:	4c 89 f1	movq	%r14, %rcx
1000054c3:	4c 89 75 c8	movq	%r14, -56(%rbp)
1000054c7:	49 39 c6	cmpq	%rax, %r14
1000054ca:	0f 82 0c ff ff ff	jb	0x1000053dc
1000054d0:	e9 99 01 00 00	jmp	0x10000566e
1000054d5:	45 31 f6	xorl	%r14d, %r14d
1000054d8:	41 0f b6 c6	movzbl	%r14b, %eax
1000054dc:	48 81 c4 88 00 00 00	addq	$136, %rsp
1000054e3:	5b	popq	%rbx
1000054e4:	41 5c	popq	%r12
1000054e6:	41 5d	popq	%r13
1000054e8:	41 5e	popq	%r14
1000054ea:	41 5f	popq	%r15
1000054ec:	5d	popq	%rbp
1000054ed:	c3	retq
1000054ee:	4c 8b 65 90	movq	-112(%rbp), %r12
1000054f2:	4c 89 ef	movq	%r13, %rdi
1000054f5:	e8 64 9c 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000054fa:	48 85 c0	testq	%rax, %rax
1000054fd:	74 d9	je	0x1000054d8
1000054ff:	4b 8d 04 24	leaq	(%r12,%r12), %rax
100005503:	48 89 85 68 ff ff ff	movq	%rax, -152(%rbp)
10000550a:	49 c1 e4 02	shlq	$2, %r12
10000550e:	4c 89 65 90	movq	%r12, -112(%rbp)
100005512:	31 c0	xorl	%eax, %eax
100005514:	48 89 45 98	movq	%rax, -104(%rbp)
100005518:	31 c0	xorl	%eax, %eax
10000551a:	48 89 45 a0	movq	%rax, -96(%rbp)
10000551e:	48 89 5d a8	movq	%rbx, -88(%rbp)
100005522:	4c 89 ef	movq	%r13, %rdi
100005525:	e8 1c 9c 02 00	callq	0x10002f146 ## symbol stub for: _CGImageGetBytesPerRow
10000552a:	49 89 c6	movq	%rax, %r14
10000552d:	48 8b 1b	movq	(%rbx), %rbx
100005530:	4c 89 ef	movq	%r13, %rdi
100005533:	e8 44 9c 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100005538:	48 85 c0	testq	%rax, %rax
10000553b:	4d 89 ec	movq	%r13, %r12
10000553e:	0f 84 f5 00 00 00	je	0x100005639
100005544:	4c 0f af 75 a0	imulq	-96(%rbp), %r14
100005549:	4c 03 b5 78 ff ff ff	addq	-136(%rbp), %r14
100005550:	48 8b 45 98	movq	-104(%rbp), %rax
100005554:	48 8d 1c 83	leaq	(%rbx,%rax,4), %rbx
100005558:	31 c0	xorl	%eax, %eax
10000555a:	48 89 45 c8	movq	%rax, -56(%rbp)
10000555e:	48 8b 45 88	movq	-120(%rbp), %rax
100005562:	83 f8 04	cmpl	$4, %eax
100005565:	74 05	je	0x10000556c
100005567:	83 f8 02	cmpl	$2, %eax
10000556a:	75 0c	jne	0x100005578
10000556c:	41 0f b7 06	movzwl	(%r14), %eax
100005570:	41 bd 01 00 00 00	movl	$1, %r13d
100005576:	eb 05	jmp	0x10000557d
100005578:	31 c0	xorl	%eax, %eax
10000557a:	45 31 ed	xorl	%r13d, %r13d
10000557d:	83 7d d4 01	cmpl	$1, -44(%rbp)
100005581:	75 09	jne	0x10000558c
100005583:	4b 8d 04 2f	leaq	(%r15,%r13), %rax
100005587:	41 0f b7 04 46	movzwl	(%r14,%rax,2), %eax
10000558c:	0f b7 f8	movzwl	%ax, %edi
10000558f:	e8 04 9e 02 00	callq	0x10002f398 ## symbol stub for: ___extendhfsf2
100005594:	f3 0f 11 45 84	movss	%xmm0, -124(%rbp)
100005599:	0f 28 c8	movaps	%xmm0, %xmm1
10000559c:	83 7d b4 02	cmpl	$2, -76(%rbp)
1000055a0:	72 08	jb	0x1000055aa
1000055a2:	f3 0f 10 0d ea 29 03 00	movss	207338(%rip), %xmm1
1000055aa:	4b 8d 04 2f	leaq	(%r15,%r13), %rax
1000055ae:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
1000055b5:	4f 8d 24 6e	leaq	(%r14,%r13,2), %r12
1000055b9:	48 89 9d 58 ff ff ff	movq	%rbx, -168(%rbp)
1000055c0:	4e 8d 2c ab	leaq	(%rbx,%r13,4), %r13
1000055c4:	31 db	xorl	%ebx, %ebx
1000055c6:	f3 0f 11 4d c0	movss	%xmm1, -64(%rbp)
1000055cb:	41 0f b7 3c 5c	movzwl	(%r12,%rbx,2), %edi
1000055d0:	e8 c3 9d 02 00	callq	0x10002f398 ## symbol stub for: ___extendhfsf2
1000055d5:	f3 0f 10 4d c0	movss	-64(%rbp), %xmm1
1000055da:	f3 0f 5e c1	divss	%xmm1, %xmm0
1000055de:	f3 41 0f 11 44 9d 00	movss	%xmm0, (%r13,%rbx,4)
1000055e5:	48 ff c3	incq	%rbx
1000055e8:	49 39 df	cmpq	%rbx, %r15
1000055eb:	75 de	jne	0x1000055cb
1000055ed:	83 7d d4 01	cmpl	$1, -44(%rbp)
1000055f1:	48 8b 9d 58 ff ff ff	movq	-168(%rbp), %rbx
1000055f8:	75 11	jne	0x10000560b
1000055fa:	f3 0f 10 45 84	movss	-124(%rbp), %xmm0
1000055ff:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
100005606:	f3 0f 11 04 83	movss	%xmm0, (%rbx,%rax,4)
10000560b:	4c 03 b5 68 ff ff ff	addq	-152(%rbp), %r14
100005612:	48 03 5d 90	addq	-112(%rbp), %rbx
100005616:	4c 8b 6d c8	movq	-56(%rbp), %r13
10000561a:	49 ff c5	incq	%r13
10000561d:	4c 8b 65 b8	movq	-72(%rbp), %r12
100005621:	4c 89 e7	movq	%r12, %rdi
100005624:	e8 53 9b 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100005629:	4c 89 e9	movq	%r13, %rcx
10000562c:	4c 89 6d c8	movq	%r13, -56(%rbp)
100005630:	49 39 c5	cmpq	%rax, %r13
100005633:	0f 82 25 ff ff ff	jb	0x10000555e
100005639:	48 8b 5d a0	movq	-96(%rbp), %rbx
10000563d:	48 ff c3	incq	%rbx
100005640:	4c 89 e7	movq	%r12, %rdi
100005643:	e8 16 9b 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100005648:	48 8b 4d 98	movq	-104(%rbp), %rcx
10000564c:	48 03 8d 70 ff ff ff	addq	-144(%rbp), %rcx
100005653:	48 89 4d 98	movq	%rcx, -104(%rbp)
100005657:	48 89 d9	movq	%rbx, %rcx
10000565a:	48 89 5d a0	movq	%rbx, -96(%rbp)
10000565e:	48 39 c3	cmpq	%rax, %rbx
100005661:	48 8b 5d a8	movq	-88(%rbp), %rbx
100005665:	4d 89 e5	movq	%r12, %r13
100005668:	0f 82 b4 fe ff ff	jb	0x100005522
10000566e:	41 b6 01	movb	$1, %r14b
100005671:	e9 62 fe ff ff	jmp	0x1000054d8
100005676:	55	pushq	%rbp
100005677:	48 89 e5	movq	%rsp, %rbp
10000567a:	53	pushq	%rbx
10000567b:	50	pushq	%rax
10000567c:	48 8b 35 e5 bc 04 00	movq	310501(%rip), %rsi ## Objc selector ref: imageDoc
100005683:	48 8b 1d 96 75 03 00	movq	226710(%rip), %rbx ## Objc message: -[%rdi imageDoc]
10000568a:	ff d3	callq	*%rbx
10000568c:	48 8b 35 c5 cd 04 00	movq	314821(%rip), %rsi ## Objc selector ref: updatePreview
100005693:	48 89 c7	movq	%rax, %rdi
100005696:	48 89 d8	movq	%rbx, %rax
100005699:	48 83 c4 08	addq	$8, %rsp
10000569d:	5b	popq	%rbx
10000569e:	5d	popq	%rbp
10000569f:	ff e0	jmpq	*%rax
1000056a1:	55	pushq	%rbp
1000056a2:	48 89 e5	movq	%rsp, %rbp
1000056a5:	41 57	pushq	%r15
1000056a7:	41 56	pushq	%r14
1000056a9:	41 55	pushq	%r13
1000056ab:	41 54	pushq	%r12
1000056ad:	53	pushq	%rbx
1000056ae:	50	pushq	%rax
1000056af:	48 89 d3	movq	%rdx, %rbx
1000056b2:	49 89 fc	movq	%rdi, %r12
1000056b5:	48 8b 35 cc c1 04 00	movq	311756(%rip), %rsi ## Objc selector ref: objectValue
1000056bc:	4c 8b 2d 5d 75 03 00	movq	226653(%rip), %r13 ## Objc message: -[%rdi objectValue]
1000056c3:	48 89 d7	movq	%rdx, %rdi
1000056c6:	41 ff d5	callq	*%r13
1000056c9:	49 89 c6	movq	%rax, %r14
1000056cc:	4c 8b 3d f5 bf 04 00	movq	311285(%rip), %r15 ## Objc selector ref: mKneeHighSlider
1000056d3:	4c 89 e7	movq	%r12, %rdi
1000056d6:	4c 89 fe	movq	%r15, %rsi
1000056d9:	41 ff d5	callq	*%r13
1000056dc:	48 39 d8	cmpq	%rbx, %rax
1000056df:	74 27	je	0x100005708
1000056e1:	48 8b 35 d8 bf 04 00	movq	311256(%rip), %rsi ## Objc selector ref: mKneeHighEditField
1000056e8:	4c 89 e7	movq	%r12, %rdi
1000056eb:	41 ff d5	callq	*%r13
1000056ee:	48 8b 35 9b bb 04 00	movq	310171(%rip), %rsi ## Objc selector ref: floatValue
1000056f5:	48 89 c7	movq	%rax, %rdi
1000056f8:	41 ff d5	callq	*%r13
1000056fb:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100005700:	4c 89 e7	movq	%r12, %rdi
100005703:	4c 89 fe	movq	%r15, %rsi
100005706:	eb 25	jmp	0x10000572d
100005708:	4c 89 e7	movq	%r12, %rdi
10000570b:	4c 89 fe	movq	%r15, %rsi
10000570e:	41 ff d5	callq	*%r13
100005711:	48 8b 35 78 bb 04 00	movq	310136(%rip), %rsi ## Objc selector ref: floatValue
100005718:	48 89 c7	movq	%rax, %rdi
10000571b:	41 ff d5	callq	*%r13
10000571e:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100005723:	48 8b 35 96 bf 04 00	movq	311190(%rip), %rsi ## Objc selector ref: mKneeHighEditField
10000572a:	4c 89 e7	movq	%r12, %rdi
10000572d:	41 ff d5	callq	*%r13
100005730:	48 8b 35 01 c7 04 00	movq	313089(%rip), %rsi ## Objc selector ref: setFloatValue:
100005737:	48 89 c7	movq	%rax, %rdi
10000573a:	f3 0f 10 45 d4	movss	-44(%rbp), %xmm0
10000573f:	41 ff d5	callq	*%r13
100005742:	48 8b 35 cf c7 04 00	movq	313295(%rip), %rsi ## Objc selector ref: setKneeHigh:
100005749:	4c 89 e7	movq	%r12, %rdi
10000574c:	4c 89 f2	movq	%r14, %rdx
10000574f:	48 83 c4 08	addq	$8, %rsp
100005753:	5b	popq	%rbx
100005754:	41 5c	popq	%r12
100005756:	41 5d	popq	%r13
100005758:	41 5e	popq	%r14
10000575a:	41 5f	popq	%r15
10000575c:	5d	popq	%rbp
10000575d:	ff 25 bd 74 03 00	jmpq	*226493(%rip) ## Objc message: -[%rdi setKneeHigh:]
100005763:	55	pushq	%rbp
100005764:	48 89 e5	movq	%rsp, %rbp
100005767:	41 57	pushq	%r15
100005769:	41 56	pushq	%r14
10000576b:	41 55	pushq	%r13
10000576d:	41 54	pushq	%r12
10000576f:	53	pushq	%rbx
100005770:	50	pushq	%rax
100005771:	48 89 d3	movq	%rdx, %rbx
100005774:	49 89 fc	movq	%rdi, %r12
100005777:	48 8b 35 0a c1 04 00	movq	311562(%rip), %rsi ## Objc selector ref: objectValue
10000577e:	4c 8b 2d 9b 74 03 00	movq	226459(%rip), %r13 ## Objc message: -[%rdi objectValue]
100005785:	48 89 d7	movq	%rdx, %rdi
100005788:	41 ff d5	callq	*%r13
10000578b:	49 89 c6	movq	%rax, %r14
10000578e:	4c 8b 3d 4b bf 04 00	movq	311115(%rip), %r15 ## Objc selector ref: mKneeLowSlider
100005795:	4c 89 e7	movq	%r12, %rdi
100005798:	4c 89 fe	movq	%r15, %rsi
10000579b:	41 ff d5	callq	*%r13
10000579e:	48 39 d8	cmpq	%rbx, %rax
1000057a1:	74 27	je	0x1000057ca
1000057a3:	48 8b 35 2e bf 04 00	movq	311086(%rip), %rsi ## Objc selector ref: mKneeLowEditField
1000057aa:	4c 89 e7	movq	%r12, %rdi
1000057ad:	41 ff d5	callq	*%r13
1000057b0:	48 8b 35 d9 ba 04 00	movq	309977(%rip), %rsi ## Objc selector ref: floatValue
1000057b7:	48 89 c7	movq	%rax, %rdi
1000057ba:	41 ff d5	callq	*%r13
1000057bd:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
1000057c2:	4c 89 e7	movq	%r12, %rdi
1000057c5:	4c 89 fe	movq	%r15, %rsi
1000057c8:	eb 25	jmp	0x1000057ef
1000057ca:	4c 89 e7	movq	%r12, %rdi
1000057cd:	4c 89 fe	movq	%r15, %rsi
1000057d0:	41 ff d5	callq	*%r13
1000057d3:	48 8b 35 b6 ba 04 00	movq	309942(%rip), %rsi ## Objc selector ref: floatValue
1000057da:	48 89 c7	movq	%rax, %rdi
1000057dd:	41 ff d5	callq	*%r13
1000057e0:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
1000057e5:	48 8b 35 ec be 04 00	movq	311020(%rip), %rsi ## Objc selector ref: mKneeLowEditField
1000057ec:	4c 89 e7	movq	%r12, %rdi
1000057ef:	41 ff d5	callq	*%r13
1000057f2:	48 8b 35 3f c6 04 00	movq	312895(%rip), %rsi ## Objc selector ref: setFloatValue:
1000057f9:	48 89 c7	movq	%rax, %rdi
1000057fc:	f3 0f 10 45 d4	movss	-44(%rbp), %xmm0
100005801:	41 ff d5	callq	*%r13
100005804:	48 8b 35 25 c7 04 00	movq	313125(%rip), %rsi ## Objc selector ref: setKneeLow:
10000580b:	4c 89 e7	movq	%r12, %rdi
10000580e:	4c 89 f2	movq	%r14, %rdx
100005811:	48 83 c4 08	addq	$8, %rsp
100005815:	5b	popq	%rbx
100005816:	41 5c	popq	%r12
100005818:	41 5d	popq	%r13
10000581a:	41 5e	popq	%r14
10000581c:	41 5f	popq	%r15
10000581e:	5d	popq	%rbp
10000581f:	ff 25 fb 73 03 00	jmpq	*226299(%rip) ## Objc message: -[%rdi setKneeLow:]
100005825:	55	pushq	%rbp
100005826:	48 89 e5	movq	%rsp, %rbp
100005829:	41 57	pushq	%r15
10000582b:	41 56	pushq	%r14
10000582d:	41 55	pushq	%r13
10000582f:	41 54	pushq	%r12
100005831:	53	pushq	%rbx
100005832:	50	pushq	%rax
100005833:	48 89 d3	movq	%rdx, %rbx
100005836:	49 89 fc	movq	%rdi, %r12
100005839:	48 8b 35 48 c0 04 00	movq	311368(%rip), %rsi ## Objc selector ref: objectValue
100005840:	4c 8b 2d d9 73 03 00	movq	226265(%rip), %r13 ## Objc message: -[%rdi objectValue]
100005847:	48 89 d7	movq	%rdx, %rdi
10000584a:	41 ff d5	callq	*%r13
10000584d:	49 89 c6	movq	%rax, %r14
100005850:	4c 8b 3d 41 be 04 00	movq	310849(%rip), %r15 ## Objc selector ref: mDefogSlider
100005857:	4c 89 e7	movq	%r12, %rdi
10000585a:	4c 89 fe	movq	%r15, %rsi
10000585d:	41 ff d5	callq	*%r13
100005860:	48 39 d8	cmpq	%rbx, %rax
100005863:	74 27	je	0x10000588c
100005865:	48 8b 35 24 be 04 00	movq	310820(%rip), %rsi ## Objc selector ref: mDefogEditField
10000586c:	4c 89 e7	movq	%r12, %rdi
10000586f:	41 ff d5	callq	*%r13
100005872:	48 8b 35 17 ba 04 00	movq	309783(%rip), %rsi ## Objc selector ref: floatValue
100005879:	48 89 c7	movq	%rax, %rdi
10000587c:	41 ff d5	callq	*%r13
10000587f:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100005884:	4c 89 e7	movq	%r12, %rdi
100005887:	4c 89 fe	movq	%r15, %rsi
10000588a:	eb 25	jmp	0x1000058b1
10000588c:	4c 89 e7	movq	%r12, %rdi
10000588f:	4c 89 fe	movq	%r15, %rsi
100005892:	41 ff d5	callq	*%r13
100005895:	48 8b 35 f4 b9 04 00	movq	309748(%rip), %rsi ## Objc selector ref: floatValue
10000589c:	48 89 c7	movq	%rax, %rdi
10000589f:	41 ff d5	callq	*%r13
1000058a2:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
1000058a7:	48 8b 35 e2 bd 04 00	movq	310754(%rip), %rsi ## Objc selector ref: mDefogEditField
1000058ae:	4c 89 e7	movq	%r12, %rdi
1000058b1:	41 ff d5	callq	*%r13
1000058b4:	48 8b 35 7d c5 04 00	movq	312701(%rip), %rsi ## Objc selector ref: setFloatValue:
1000058bb:	48 89 c7	movq	%rax, %rdi
1000058be:	f3 0f 10 45 d4	movss	-44(%rbp), %xmm0
1000058c3:	41 ff d5	callq	*%r13
1000058c6:	48 8b 35 a3 c4 04 00	movq	312483(%rip), %rsi ## Objc selector ref: setDefog:
1000058cd:	4c 89 e7	movq	%r12, %rdi
1000058d0:	4c 89 f2	movq	%r14, %rdx
1000058d3:	48 83 c4 08	addq	$8, %rsp
1000058d7:	5b	popq	%rbx
1000058d8:	41 5c	popq	%r12
1000058da:	41 5d	popq	%r13
1000058dc:	41 5e	popq	%r14
1000058de:	41 5f	popq	%r15
1000058e0:	5d	popq	%rbp
1000058e1:	ff 25 39 73 03 00	jmpq	*226105(%rip) ## Objc message: -[%rdi setDefog:]
1000058e7:	55	pushq	%rbp
1000058e8:	48 89 e5	movq	%rsp, %rbp
1000058eb:	41 57	pushq	%r15
1000058ed:	41 56	pushq	%r14
1000058ef:	41 55	pushq	%r13
1000058f1:	41 54	pushq	%r12
1000058f3:	53	pushq	%rbx
1000058f4:	50	pushq	%rax
1000058f5:	48 89 d3	movq	%rdx, %rbx
1000058f8:	49 89 fc	movq	%rdi, %r12
1000058fb:	48 8b 35 86 bf 04 00	movq	311174(%rip), %rsi ## Objc selector ref: objectValue
100005902:	4c 8b 2d 17 73 03 00	movq	226071(%rip), %r13 ## Objc message: -[%rdi objectValue]
100005909:	48 89 d7	movq	%rdx, %rdi
10000590c:	41 ff d5	callq	*%r13
10000590f:	49 89 c6	movq	%rax, %r14
100005912:	4c 8b 3d 97 bd 04 00	movq	310679(%rip), %r15 ## Objc selector ref: mExposureSlider
100005919:	4c 89 e7	movq	%r12, %rdi
10000591c:	4c 89 fe	movq	%r15, %rsi
10000591f:	41 ff d5	callq	*%r13
100005922:	48 39 d8	cmpq	%rbx, %rax
100005925:	74 27	je	0x10000594e
100005927:	48 8b 35 7a bd 04 00	movq	310650(%rip), %rsi ## Objc selector ref: mExposureEditField
10000592e:	4c 89 e7	movq	%r12, %rdi
100005931:	41 ff d5	callq	*%r13
100005934:	48 8b 35 55 b9 04 00	movq	309589(%rip), %rsi ## Objc selector ref: floatValue
10000593b:	48 89 c7	movq	%rax, %rdi
10000593e:	41 ff d5	callq	*%r13
100005941:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100005946:	4c 89 e7	movq	%r12, %rdi
100005949:	4c 89 fe	movq	%r15, %rsi
10000594c:	eb 25	jmp	0x100005973
10000594e:	4c 89 e7	movq	%r12, %rdi
100005951:	4c 89 fe	movq	%r15, %rsi
100005954:	41 ff d5	callq	*%r13
100005957:	48 8b 35 32 b9 04 00	movq	309554(%rip), %rsi ## Objc selector ref: floatValue
10000595e:	48 89 c7	movq	%rax, %rdi
100005961:	41 ff d5	callq	*%r13
100005964:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100005969:	48 8b 35 38 bd 04 00	movq	310584(%rip), %rsi ## Objc selector ref: mExposureEditField
100005970:	4c 89 e7	movq	%r12, %rdi
100005973:	41 ff d5	callq	*%r13
100005976:	48 8b 35 bb c4 04 00	movq	312507(%rip), %rsi ## Objc selector ref: setFloatValue:
10000597d:	48 89 c7	movq	%rax, %rdi
100005980:	f3 0f 10 45 d4	movss	-44(%rbp), %xmm0
100005985:	41 ff d5	callq	*%r13
100005988:	48 8b 35 69 c4 04 00	movq	312425(%rip), %rsi ## Objc selector ref: setExposure:
10000598f:	4c 89 e7	movq	%r12, %rdi
100005992:	4c 89 f2	movq	%r14, %rdx
100005995:	48 83 c4 08	addq	$8, %rsp
100005999:	5b	popq	%rbx
10000599a:	41 5c	popq	%r12
10000599c:	41 5d	popq	%r13
10000599e:	41 5e	popq	%r14
1000059a0:	41 5f	popq	%r15
1000059a2:	5d	popq	%rbp
1000059a3:	ff 25 77 72 03 00	jmpq	*225911(%rip) ## Objc message: -[%rdi setExposure:]
1000059a9:	55	pushq	%rbp
1000059aa:	48 89 e5	movq	%rsp, %rbp
1000059ad:	41 57	pushq	%r15
1000059af:	41 56	pushq	%r14
1000059b1:	41 55	pushq	%r13
1000059b3:	41 54	pushq	%r12
1000059b5:	53	pushq	%rbx
1000059b6:	50	pushq	%rax
1000059b7:	48 89 fb	movq	%rdi, %rbx
1000059ba:	48 8b 35 a7 b9 04 00	movq	309671(%rip), %rsi ## Objc selector ref: imageDoc
1000059c1:	4c 8b 35 58 72 03 00	movq	225880(%rip), %r14 ## Objc message: -[%rdi imageDoc]
1000059c8:	41 ff d6	callq	*%r14
1000059cb:	4c 8b 3d 56 ca 04 00	movq	313942(%rip), %r15 ## Objc selector ref: undoManager
1000059d2:	48 89 c7	movq	%rax, %rdi
1000059d5:	4c 89 fe	movq	%r15, %rsi
1000059d8:	41 ff d6	callq	*%r14
1000059db:	49 89 c4	movq	%rax, %r12
1000059de:	4c 8b 2d f3 c6 04 00	movq	313075(%rip), %r13 ## Objc selector ref: setSliders:
1000059e5:	48 8b 35 94 c8 04 00	movq	313492(%rip), %rsi ## Objc selector ref: sliderValues
1000059ec:	48 89 df	movq	%rbx, %rdi
1000059ef:	41 ff d6	callq	*%r14
1000059f2:	48 8b 35 97 c0 04 00	movq	311447(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
1000059f9:	4c 89 e7	movq	%r12, %rdi
1000059fc:	48 89 da	movq	%rbx, %rdx
1000059ff:	4c 89 e9	movq	%r13, %rcx
100005a02:	49 89 c0	movq	%rax, %r8
100005a05:	41 ff d6	callq	*%r14
100005a08:	48 89 df	movq	%rbx, %rdi
100005a0b:	4c 8b 25 56 b9 04 00	movq	309590(%rip), %r12 ## Objc selector ref: imageDoc
100005a12:	4c 89 e6	movq	%r12, %rsi
100005a15:	41 ff d6	callq	*%r14
100005a18:	48 89 c7	movq	%rax, %rdi
100005a1b:	4c 89 fe	movq	%r15, %rsi
100005a1e:	41 ff d6	callq	*%r14
100005a21:	49 89 c7	movq	%rax, %r15
100005a24:	48 8b 3d 75 cb 04 00	movq	314229(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100005a2b:	48 8b 35 b6 bc 04 00	movq	310454(%rip), %rsi ## Objc selector ref: mainBundle
100005a32:	41 ff d6	callq	*%r14
100005a35:	48 8b 35 24 bc 04 00	movq	310308(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100005a3c:	48 8d 15 1d 7a 03 00	leaq	227869(%rip), %rdx ## Objc cfstring ref: @"Reset Sliders"
100005a43:	48 8d 0d 56 74 03 00	leaq	226390(%rip), %rcx ## Objc cfstring ref: @""
100005a4a:	48 89 c7	movq	%rax, %rdi
100005a4d:	45 31 c0	xorl	%r8d, %r8d
100005a50:	41 ff d6	callq	*%r14
100005a53:	48 8b 35 26 c2 04 00	movq	311846(%rip), %rsi ## Objc selector ref: setActionName:
100005a5a:	4c 89 ff	movq	%r15, %rdi
100005a5d:	48 89 c2	movq	%rax, %rdx
100005a60:	41 ff d6	callq	*%r14
100005a63:	48 8b 35 66 c7 04 00	movq	313190(%rip), %rsi ## Objc selector ref: setupKneeHigh
100005a6a:	48 89 df	movq	%rbx, %rdi
100005a6d:	41 ff d6	callq	*%r14
100005a70:	48 8b 35 61 c7 04 00	movq	313185(%rip), %rsi ## Objc selector ref: setupKneeLow
100005a77:	48 89 df	movq	%rbx, %rdi
100005a7a:	41 ff d6	callq	*%r14
100005a7d:	48 8b 35 2c c7 04 00	movq	313132(%rip), %rsi ## Objc selector ref: setupDefog
100005a84:	48 89 df	movq	%rbx, %rdi
100005a87:	41 ff d6	callq	*%r14
100005a8a:	48 8b 35 27 c7 04 00	movq	313127(%rip), %rsi ## Objc selector ref: setupExposure
100005a91:	48 89 df	movq	%rbx, %rdi
100005a94:	41 ff d6	callq	*%r14
100005a97:	48 89 df	movq	%rbx, %rdi
100005a9a:	4c 89 e6	movq	%r12, %rsi
100005a9d:	41 ff d6	callq	*%r14
100005aa0:	48 8b 35 b1 c9 04 00	movq	313777(%rip), %rsi ## Objc selector ref: updatePreview
100005aa7:	48 89 c7	movq	%rax, %rdi
100005aaa:	4c 89 f0	movq	%r14, %rax
100005aad:	48 83 c4 08	addq	$8, %rsp
100005ab1:	5b	popq	%rbx
100005ab2:	41 5c	popq	%r12
100005ab4:	41 5d	popq	%r13
100005ab6:	41 5e	popq	%r14
100005ab8:	41 5f	popq	%r15
100005aba:	5d	popq	%rbp
100005abb:	ff e0	jmpq	*%rax
100005abd:	55	pushq	%rbp
100005abe:	48 89 e5	movq	%rsp, %rbp
100005ac1:	41 57	pushq	%r15
100005ac3:	41 56	pushq	%r14
100005ac5:	41 55	pushq	%r13
100005ac7:	41 54	pushq	%r12
100005ac9:	53	pushq	%rbx
100005aca:	50	pushq	%rax
100005acb:	49 89 d6	movq	%rdx, %r14
100005ace:	48 89 fb	movq	%rdi, %rbx
100005ad1:	4c 8b 3d c8 bb 04 00	movq	310216(%rip), %r15 ## Objc selector ref: mExposure
100005ad8:	4c 89 fe	movq	%r15, %rsi
100005adb:	ff 15 3f 71 03 00	callq	*225599(%rip) ## Objc message: +[NSBundle mExposure]
100005ae1:	4c 39 f0	cmpq	%r14, %rax
100005ae4:	0f 84 24 01 00 00	je	0x100005c0e
100005aea:	48 89 df	movq	%rbx, %rdi
100005aed:	4c 89 fe	movq	%r15, %rsi
100005af0:	ff 15 2a 71 03 00	callq	*225578(%rip) ## Objc message: -[%rdi mExposure]
100005af6:	48 85 c0	testq	%rax, %rax
100005af9:	0f 84 a3 00 00 00	je	0x100005ba2
100005aff:	48 8b 35 62 b8 04 00	movq	309346(%rip), %rsi ## Objc selector ref: imageDoc
100005b06:	4c 8b 2d 13 71 03 00	movq	225555(%rip), %r13 ## Objc message: -[%rdi imageDoc]
100005b0d:	48 89 df	movq	%rbx, %rdi
100005b10:	41 ff d5	callq	*%r13
100005b13:	48 8b 35 0e c9 04 00	movq	313614(%rip), %rsi ## Objc selector ref: undoManager
100005b1a:	48 89 c7	movq	%rax, %rdi
100005b1d:	41 ff d5	callq	*%r13
100005b20:	49 89 c4	movq	%rax, %r12
100005b23:	48 89 df	movq	%rbx, %rdi
100005b26:	4c 89 fe	movq	%r15, %rsi
100005b29:	41 ff d5	callq	*%r13
100005b2c:	48 8b 35 5d bf 04 00	movq	311133(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
100005b33:	4c 89 e7	movq	%r12, %rdi
100005b36:	48 89 da	movq	%rbx, %rdx
100005b39:	48 8b 0d b8 c2 04 00	movq	311992(%rip), %rcx ## Objc selector ref: setExposure:
100005b40:	49 89 c0	movq	%rax, %r8
100005b43:	41 ff d5	callq	*%r13
100005b46:	48 89 df	movq	%rbx, %rdi
100005b49:	48 8b 35 18 b8 04 00	movq	309272(%rip), %rsi ## Objc selector ref: imageDoc
100005b50:	41 ff d5	callq	*%r13
100005b53:	48 89 c7	movq	%rax, %rdi
100005b56:	48 8b 35 cb c8 04 00	movq	313547(%rip), %rsi ## Objc selector ref: undoManager
100005b5d:	41 ff d5	callq	*%r13
100005b60:	49 89 c4	movq	%rax, %r12
100005b63:	48 8b 3d 36 ca 04 00	movq	313910(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100005b6a:	48 8b 35 77 bb 04 00	movq	310135(%rip), %rsi ## Objc selector ref: mainBundle
100005b71:	41 ff d5	callq	*%r13
100005b74:	48 8b 35 e5 ba 04 00	movq	309989(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100005b7b:	48 8d 15 fe 78 03 00	leaq	227582(%rip), %rdx ## Objc cfstring ref: @"Exposure"
100005b82:	48 8d 0d 17 73 03 00	leaq	226071(%rip), %rcx ## Objc cfstring ref: @""
100005b89:	48 89 c7	movq	%rax, %rdi
100005b8c:	45 31 c0	xorl	%r8d, %r8d
100005b8f:	41 ff d5	callq	*%r13
100005b92:	48 8b 35 e7 c0 04 00	movq	311527(%rip), %rsi ## Objc selector ref: setActionName:
100005b99:	4c 89 e7	movq	%r12, %rdi
100005b9c:	48 89 c2	movq	%rax, %rdx
100005b9f:	41 ff d5	callq	*%r13
100005ba2:	4c 8b 25 77 70 03 00	movq	225399(%rip), %r12 ## Objc message: +[NSBundle setActionName:]
100005ba9:	48 89 df	movq	%rbx, %rdi
100005bac:	4c 89 fe	movq	%r15, %rsi
100005baf:	41 ff d4	callq	*%r12
100005bb2:	48 89 c7	movq	%rax, %rdi
100005bb5:	ff 15 9d 70 03 00	callq	*225437(%rip) ## literal pool symbol address: _objc_release
100005bbb:	4c 89 f7	movq	%r14, %rdi
100005bbe:	ff 15 9c 70 03 00	callq	*225436(%rip) ## literal pool symbol address: _objc_retain
100005bc4:	48 8b 35 b5 c3 04 00	movq	312245(%rip), %rsi ## Objc selector ref: setMExposure:
100005bcb:	48 89 df	movq	%rbx, %rdi
100005bce:	48 89 c2	movq	%rax, %rdx
100005bd1:	41 ff d4	callq	*%r12
100005bd4:	48 8b 35 d5 ba 04 00	movq	309973(%rip), %rsi ## Objc selector ref: mExposureSlider
100005bdb:	48 89 df	movq	%rbx, %rdi
100005bde:	41 ff d4	callq	*%r12
100005be1:	48 8b 35 00 c4 04 00	movq	312320(%rip), %rsi ## Objc selector ref: setObjectValue:
100005be8:	48 89 c7	movq	%rax, %rdi
100005beb:	4c 89 f2	movq	%r14, %rdx
100005bee:	41 ff d4	callq	*%r12
100005bf1:	48 8b 35 c8 b6 04 00	movq	308936(%rip), %rsi ## Objc selector ref: genericAction
100005bf8:	48 89 df	movq	%rbx, %rdi
100005bfb:	4c 89 e0	movq	%r12, %rax
100005bfe:	48 83 c4 08	addq	$8, %rsp
100005c02:	5b	popq	%rbx
100005c03:	41 5c	popq	%r12
100005c05:	41 5d	popq	%r13
100005c07:	41 5e	popq	%r14
100005c09:	41 5f	popq	%r15
100005c0b:	5d	popq	%rbp
100005c0c:	ff e0	jmpq	*%rax
100005c0e:	48 83 c4 08	addq	$8, %rsp
100005c12:	5b	popq	%rbx
100005c13:	41 5c	popq	%r12
100005c15:	41 5d	popq	%r13
100005c17:	41 5e	popq	%r14
100005c19:	41 5f	popq	%r15
100005c1b:	5d	popq	%rbp
100005c1c:	c3	retq
100005c1d:	55	pushq	%rbp
100005c1e:	48 89 e5	movq	%rsp, %rbp
100005c21:	41 57	pushq	%r15
100005c23:	41 56	pushq	%r14
100005c25:	41 55	pushq	%r13
100005c27:	41 54	pushq	%r12
100005c29:	53	pushq	%rbx
100005c2a:	50	pushq	%rax
100005c2b:	49 89 d6	movq	%rdx, %r14
100005c2e:	48 89 fb	movq	%rdi, %rbx
100005c31:	4c 8b 3d 50 ba 04 00	movq	309840(%rip), %r15 ## Objc selector ref: mDefog
100005c38:	4c 89 fe	movq	%r15, %rsi
100005c3b:	ff 15 df 6f 03 00	callq	*225247(%rip) ## Objc message: -[%rdi mDefog]
100005c41:	4c 39 f0	cmpq	%r14, %rax
100005c44:	0f 84 24 01 00 00	je	0x100005d6e
100005c4a:	48 89 df	movq	%rbx, %rdi
100005c4d:	4c 89 fe	movq	%r15, %rsi
100005c50:	ff 15 ca 6f 03 00	callq	*225226(%rip) ## Objc message: -[%rdi mDefog]
100005c56:	48 85 c0	testq	%rax, %rax
100005c59:	0f 84 a3 00 00 00	je	0x100005d02
100005c5f:	48 8b 35 02 b7 04 00	movq	308994(%rip), %rsi ## Objc selector ref: imageDoc
100005c66:	4c 8b 2d b3 6f 03 00	movq	225203(%rip), %r13 ## Objc message: -[%rdi imageDoc]
100005c6d:	48 89 df	movq	%rbx, %rdi
100005c70:	41 ff d5	callq	*%r13
100005c73:	48 8b 35 ae c7 04 00	movq	313262(%rip), %rsi ## Objc selector ref: undoManager
100005c7a:	48 89 c7	movq	%rax, %rdi
100005c7d:	41 ff d5	callq	*%r13
100005c80:	49 89 c4	movq	%rax, %r12
100005c83:	48 89 df	movq	%rbx, %rdi
100005c86:	4c 89 fe	movq	%r15, %rsi
100005c89:	41 ff d5	callq	*%r13
100005c8c:	48 8b 35 fd bd 04 00	movq	310781(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
100005c93:	4c 89 e7	movq	%r12, %rdi
100005c96:	48 89 da	movq	%rbx, %rdx
100005c99:	48 8b 0d d0 c0 04 00	movq	311504(%rip), %rcx ## Objc selector ref: setDefog:
100005ca0:	49 89 c0	movq	%rax, %r8
100005ca3:	41 ff d5	callq	*%r13
100005ca6:	48 89 df	movq	%rbx, %rdi
100005ca9:	48 8b 35 b8 b6 04 00	movq	308920(%rip), %rsi ## Objc selector ref: imageDoc
100005cb0:	41 ff d5	callq	*%r13
100005cb3:	48 89 c7	movq	%rax, %rdi
100005cb6:	48 8b 35 6b c7 04 00	movq	313195(%rip), %rsi ## Objc selector ref: undoManager
100005cbd:	41 ff d5	callq	*%r13
100005cc0:	49 89 c4	movq	%rax, %r12
100005cc3:	48 8b 3d d6 c8 04 00	movq	313558(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100005cca:	48 8b 35 17 ba 04 00	movq	309783(%rip), %rsi ## Objc selector ref: mainBundle
100005cd1:	41 ff d5	callq	*%r13
100005cd4:	48 8b 35 85 b9 04 00	movq	309637(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100005cdb:	48 8d 15 be 77 03 00	leaq	227262(%rip), %rdx ## Objc cfstring ref: @"Defog"
100005ce2:	48 8d 0d b7 71 03 00	leaq	225719(%rip), %rcx ## Objc cfstring ref: @""
100005ce9:	48 89 c7	movq	%rax, %rdi
100005cec:	45 31 c0	xorl	%r8d, %r8d
100005cef:	41 ff d5	callq	*%r13
100005cf2:	48 8b 35 87 bf 04 00	movq	311175(%rip), %rsi ## Objc selector ref: setActionName:
100005cf9:	4c 89 e7	movq	%r12, %rdi
100005cfc:	48 89 c2	movq	%rax, %rdx
100005cff:	41 ff d5	callq	*%r13
100005d02:	4c 8b 25 17 6f 03 00	movq	225047(%rip), %r12 ## Objc message: +[NSBundle setActionName:]
100005d09:	48 89 df	movq	%rbx, %rdi
100005d0c:	4c 89 fe	movq	%r15, %rsi
100005d0f:	41 ff d4	callq	*%r12
100005d12:	48 89 c7	movq	%rax, %rdi
100005d15:	ff 15 3d 6f 03 00	callq	*225085(%rip) ## literal pool symbol address: _objc_release
100005d1b:	4c 89 f7	movq	%r14, %rdi
100005d1e:	ff 15 3c 6f 03 00	callq	*225084(%rip) ## literal pool symbol address: _objc_retain
100005d24:	48 8b 35 4d c2 04 00	movq	311885(%rip), %rsi ## Objc selector ref: setMDefog:
100005d2b:	48 89 df	movq	%rbx, %rdi
100005d2e:	48 89 c2	movq	%rax, %rdx
100005d31:	41 ff d4	callq	*%r12
100005d34:	48 8b 35 5d b9 04 00	movq	309597(%rip), %rsi ## Objc selector ref: mDefogSlider
100005d3b:	48 89 df	movq	%rbx, %rdi
100005d3e:	41 ff d4	callq	*%r12
100005d41:	48 8b 35 a0 c2 04 00	movq	311968(%rip), %rsi ## Objc selector ref: setObjectValue:
100005d48:	48 89 c7	movq	%rax, %rdi
100005d4b:	4c 89 f2	movq	%r14, %rdx
100005d4e:	41 ff d4	callq	*%r12
100005d51:	48 8b 35 68 b5 04 00	movq	308584(%rip), %rsi ## Objc selector ref: genericAction
100005d58:	48 89 df	movq	%rbx, %rdi
100005d5b:	4c 89 e0	movq	%r12, %rax
100005d5e:	48 83 c4 08	addq	$8, %rsp
100005d62:	5b	popq	%rbx
100005d63:	41 5c	popq	%r12
100005d65:	41 5d	popq	%r13
100005d67:	41 5e	popq	%r14
100005d69:	41 5f	popq	%r15
100005d6b:	5d	popq	%rbp
100005d6c:	ff e0	jmpq	*%rax
100005d6e:	48 83 c4 08	addq	$8, %rsp
100005d72:	5b	popq	%rbx
100005d73:	41 5c	popq	%r12
100005d75:	41 5d	popq	%r13
100005d77:	41 5e	popq	%r14
100005d79:	41 5f	popq	%r15
100005d7b:	5d	popq	%rbp
100005d7c:	c3	retq
100005d7d:	55	pushq	%rbp
100005d7e:	48 89 e5	movq	%rsp, %rbp
100005d81:	41 57	pushq	%r15
100005d83:	41 56	pushq	%r14
100005d85:	41 55	pushq	%r13
100005d87:	41 54	pushq	%r12
100005d89:	53	pushq	%rbx
100005d8a:	50	pushq	%rax
100005d8b:	49 89 d6	movq	%rdx, %r14
100005d8e:	48 89 fb	movq	%rdi, %rbx
100005d91:	4c 8b 3d 38 b9 04 00	movq	309560(%rip), %r15 ## Objc selector ref: mKneeLow
100005d98:	4c 89 fe	movq	%r15, %rsi
100005d9b:	ff 15 7f 6e 03 00	callq	*224895(%rip) ## Objc message: -[%rdi mKneeLow]
100005da1:	4c 39 f0	cmpq	%r14, %rax
100005da4:	0f 84 24 01 00 00	je	0x100005ece
100005daa:	48 89 df	movq	%rbx, %rdi
100005dad:	4c 89 fe	movq	%r15, %rsi
100005db0:	ff 15 6a 6e 03 00	callq	*224874(%rip) ## Objc message: -[%rdi mKneeLow]
100005db6:	48 85 c0	testq	%rax, %rax
100005db9:	0f 84 a3 00 00 00	je	0x100005e62
100005dbf:	48 8b 35 a2 b5 04 00	movq	308642(%rip), %rsi ## Objc selector ref: imageDoc
100005dc6:	4c 8b 2d 53 6e 03 00	movq	224851(%rip), %r13 ## Objc message: -[%rdi imageDoc]
100005dcd:	48 89 df	movq	%rbx, %rdi
100005dd0:	41 ff d5	callq	*%r13
100005dd3:	48 8b 35 4e c6 04 00	movq	312910(%rip), %rsi ## Objc selector ref: undoManager
100005dda:	48 89 c7	movq	%rax, %rdi
100005ddd:	41 ff d5	callq	*%r13
100005de0:	49 89 c4	movq	%rax, %r12
100005de3:	48 89 df	movq	%rbx, %rdi
100005de6:	4c 89 fe	movq	%r15, %rsi
100005de9:	41 ff d5	callq	*%r13
100005dec:	48 8b 35 9d bc 04 00	movq	310429(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
100005df3:	4c 89 e7	movq	%r12, %rdi
100005df6:	48 89 da	movq	%rbx, %rdx
100005df9:	48 8b 0d 30 c1 04 00	movq	311600(%rip), %rcx ## Objc selector ref: setKneeLow:
100005e00:	49 89 c0	movq	%rax, %r8
100005e03:	41 ff d5	callq	*%r13
100005e06:	48 89 df	movq	%rbx, %rdi
100005e09:	48 8b 35 58 b5 04 00	movq	308568(%rip), %rsi ## Objc selector ref: imageDoc
100005e10:	41 ff d5	callq	*%r13
100005e13:	48 89 c7	movq	%rax, %rdi
100005e16:	48 8b 35 0b c6 04 00	movq	312843(%rip), %rsi ## Objc selector ref: undoManager
100005e1d:	41 ff d5	callq	*%r13
100005e20:	49 89 c4	movq	%rax, %r12
100005e23:	48 8b 3d 76 c7 04 00	movq	313206(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100005e2a:	48 8b 35 b7 b8 04 00	movq	309431(%rip), %rsi ## Objc selector ref: mainBundle
100005e31:	41 ff d5	callq	*%r13
100005e34:	48 8b 35 25 b8 04 00	movq	309285(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100005e3b:	48 8d 15 7e 76 03 00	leaq	226942(%rip), %rdx ## Objc cfstring ref: @"Knee Low"
100005e42:	48 8d 0d 57 70 03 00	leaq	225367(%rip), %rcx ## Objc cfstring ref: @""
100005e49:	48 89 c7	movq	%rax, %rdi
100005e4c:	45 31 c0	xorl	%r8d, %r8d
100005e4f:	41 ff d5	callq	*%r13
100005e52:	48 8b 35 27 be 04 00	movq	310823(%rip), %rsi ## Objc selector ref: setActionName:
100005e59:	4c 89 e7	movq	%r12, %rdi
100005e5c:	48 89 c2	movq	%rax, %rdx
100005e5f:	41 ff d5	callq	*%r13
100005e62:	4c 8b 25 b7 6d 03 00	movq	224695(%rip), %r12 ## Objc message: +[NSBundle setActionName:]
100005e69:	48 89 df	movq	%rbx, %rdi
100005e6c:	4c 89 fe	movq	%r15, %rsi
100005e6f:	41 ff d4	callq	*%r12
100005e72:	48 89 c7	movq	%rax, %rdi
100005e75:	ff 15 dd 6d 03 00	callq	*224733(%rip) ## literal pool symbol address: _objc_release
100005e7b:	4c 89 f7	movq	%r14, %rdi
100005e7e:	ff 15 dc 6d 03 00	callq	*224732(%rip) ## literal pool symbol address: _objc_retain
100005e84:	48 8b 35 05 c1 04 00	movq	311557(%rip), %rsi ## Objc selector ref: setMKneeLow:
100005e8b:	48 89 df	movq	%rbx, %rdi
100005e8e:	48 89 c2	movq	%rax, %rdx
100005e91:	41 ff d4	callq	*%r12
100005e94:	48 8b 35 45 b8 04 00	movq	309317(%rip), %rsi ## Objc selector ref: mKneeLowSlider
100005e9b:	48 89 df	movq	%rbx, %rdi
100005e9e:	41 ff d4	callq	*%r12
100005ea1:	48 8b 35 40 c1 04 00	movq	311616(%rip), %rsi ## Objc selector ref: setObjectValue:
100005ea8:	48 89 c7	movq	%rax, %rdi
100005eab:	4c 89 f2	movq	%r14, %rdx
100005eae:	41 ff d4	callq	*%r12
100005eb1:	48 8b 35 08 b4 04 00	movq	308232(%rip), %rsi ## Objc selector ref: genericAction
100005eb8:	48 89 df	movq	%rbx, %rdi
100005ebb:	4c 89 e0	movq	%r12, %rax
100005ebe:	48 83 c4 08	addq	$8, %rsp
100005ec2:	5b	popq	%rbx
100005ec3:	41 5c	popq	%r12
100005ec5:	41 5d	popq	%r13
100005ec7:	41 5e	popq	%r14
100005ec9:	41 5f	popq	%r15
100005ecb:	5d	popq	%rbp
100005ecc:	ff e0	jmpq	*%rax
100005ece:	48 83 c4 08	addq	$8, %rsp
100005ed2:	5b	popq	%rbx
100005ed3:	41 5c	popq	%r12
100005ed5:	41 5d	popq	%r13
100005ed7:	41 5e	popq	%r14
100005ed9:	41 5f	popq	%r15
100005edb:	5d	popq	%rbp
100005edc:	c3	retq
100005edd:	55	pushq	%rbp
100005ede:	48 89 e5	movq	%rsp, %rbp
100005ee1:	41 57	pushq	%r15
100005ee3:	41 56	pushq	%r14
100005ee5:	41 55	pushq	%r13
100005ee7:	41 54	pushq	%r12
100005ee9:	53	pushq	%rbx
100005eea:	50	pushq	%rax
100005eeb:	49 89 d6	movq	%rdx, %r14
100005eee:	48 89 fb	movq	%rdi, %rbx
100005ef1:	4c 8b 3d c0 b7 04 00	movq	309184(%rip), %r15 ## Objc selector ref: mKneeHigh
100005ef8:	4c 89 fe	movq	%r15, %rsi
100005efb:	ff 15 1f 6d 03 00	callq	*224543(%rip) ## Objc message: -[%rdi mKneeHigh]
100005f01:	4c 39 f0	cmpq	%r14, %rax
100005f04:	0f 84 24 01 00 00	je	0x10000602e
100005f0a:	48 89 df	movq	%rbx, %rdi
100005f0d:	4c 89 fe	movq	%r15, %rsi
100005f10:	ff 15 0a 6d 03 00	callq	*224522(%rip) ## Objc message: -[%rdi mKneeHigh]
100005f16:	48 85 c0	testq	%rax, %rax
100005f19:	0f 84 a3 00 00 00	je	0x100005fc2
100005f1f:	48 8b 35 42 b4 04 00	movq	308290(%rip), %rsi ## Objc selector ref: imageDoc
100005f26:	4c 8b 2d f3 6c 03 00	movq	224499(%rip), %r13 ## Objc message: -[%rdi imageDoc]
100005f2d:	48 89 df	movq	%rbx, %rdi
100005f30:	41 ff d5	callq	*%r13
100005f33:	48 8b 35 ee c4 04 00	movq	312558(%rip), %rsi ## Objc selector ref: undoManager
100005f3a:	48 89 c7	movq	%rax, %rdi
100005f3d:	41 ff d5	callq	*%r13
100005f40:	49 89 c4	movq	%rax, %r12
100005f43:	48 89 df	movq	%rbx, %rdi
100005f46:	4c 89 fe	movq	%r15, %rsi
100005f49:	41 ff d5	callq	*%r13
100005f4c:	48 8b 35 3d bb 04 00	movq	310077(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
100005f53:	4c 89 e7	movq	%r12, %rdi
100005f56:	48 89 da	movq	%rbx, %rdx
100005f59:	48 8b 0d b8 bf 04 00	movq	311224(%rip), %rcx ## Objc selector ref: setKneeHigh:
100005f60:	49 89 c0	movq	%rax, %r8
100005f63:	41 ff d5	callq	*%r13
100005f66:	48 89 df	movq	%rbx, %rdi
100005f69:	48 8b 35 f8 b3 04 00	movq	308216(%rip), %rsi ## Objc selector ref: imageDoc
100005f70:	41 ff d5	callq	*%r13
100005f73:	48 89 c7	movq	%rax, %rdi
100005f76:	48 8b 35 ab c4 04 00	movq	312491(%rip), %rsi ## Objc selector ref: undoManager
100005f7d:	41 ff d5	callq	*%r13
100005f80:	49 89 c4	movq	%rax, %r12
100005f83:	48 8b 3d 16 c6 04 00	movq	312854(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100005f8a:	48 8b 35 57 b7 04 00	movq	309079(%rip), %rsi ## Objc selector ref: mainBundle
100005f91:	41 ff d5	callq	*%r13
100005f94:	48 8b 35 c5 b6 04 00	movq	308933(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100005f9b:	48 8d 15 3e 75 03 00	leaq	226622(%rip), %rdx ## Objc cfstring ref: @"Knee High"
100005fa2:	48 8d 0d f7 6e 03 00	leaq	225015(%rip), %rcx ## Objc cfstring ref: @""
100005fa9:	48 89 c7	movq	%rax, %rdi
100005fac:	45 31 c0	xorl	%r8d, %r8d
100005faf:	41 ff d5	callq	*%r13
100005fb2:	48 8b 35 c7 bc 04 00	movq	310471(%rip), %rsi ## Objc selector ref: setActionName:
100005fb9:	4c 89 e7	movq	%r12, %rdi
100005fbc:	48 89 c2	movq	%rax, %rdx
100005fbf:	41 ff d5	callq	*%r13
100005fc2:	4c 8b 25 57 6c 03 00	movq	224343(%rip), %r12 ## Objc message: +[NSBundle setActionName:]
100005fc9:	48 89 df	movq	%rbx, %rdi
100005fcc:	4c 89 fe	movq	%r15, %rsi
100005fcf:	41 ff d4	callq	*%r12
100005fd2:	48 89 c7	movq	%rax, %rdi
100005fd5:	ff 15 7d 6c 03 00	callq	*224381(%rip) ## literal pool symbol address: _objc_release
100005fdb:	4c 89 f7	movq	%r14, %rdi
100005fde:	ff 15 7c 6c 03 00	callq	*224380(%rip) ## literal pool symbol address: _objc_retain
100005fe4:	48 8b 35 9d bf 04 00	movq	311197(%rip), %rsi ## Objc selector ref: setMKneeHigh:
100005feb:	48 89 df	movq	%rbx, %rdi
100005fee:	48 89 c2	movq	%rax, %rdx
100005ff1:	41 ff d4	callq	*%r12
100005ff4:	48 8b 35 cd b6 04 00	movq	308941(%rip), %rsi ## Objc selector ref: mKneeHighSlider
100005ffb:	48 89 df	movq	%rbx, %rdi
100005ffe:	41 ff d4	callq	*%r12
100006001:	48 8b 35 e0 bf 04 00	movq	311264(%rip), %rsi ## Objc selector ref: setObjectValue:
100006008:	48 89 c7	movq	%rax, %rdi
10000600b:	4c 89 f2	movq	%r14, %rdx
10000600e:	41 ff d4	callq	*%r12
100006011:	48 8b 35 a8 b2 04 00	movq	307880(%rip), %rsi ## Objc selector ref: genericAction
100006018:	48 89 df	movq	%rbx, %rdi
10000601b:	4c 89 e0	movq	%r12, %rax
10000601e:	48 83 c4 08	addq	$8, %rsp
100006022:	5b	popq	%rbx
100006023:	41 5c	popq	%r12
100006025:	41 5d	popq	%r13
100006027:	41 5e	popq	%r14
100006029:	41 5f	popq	%r15
10000602b:	5d	popq	%rbp
10000602c:	ff e0	jmpq	*%rax
10000602e:	48 83 c4 08	addq	$8, %rsp
100006032:	5b	popq	%rbx
100006033:	41 5c	popq	%r12
100006035:	41 5d	popq	%r13
100006037:	41 5e	popq	%r14
100006039:	41 5f	popq	%r15
10000603b:	5d	popq	%rbp
10000603c:	c3	retq
10000603d:	55	pushq	%rbp
10000603e:	48 89 e5	movq	%rsp, %rbp
100006041:	41 57	pushq	%r15
100006043:	41 56	pushq	%r14
100006045:	41 55	pushq	%r13
100006047:	41 54	pushq	%r12
100006049:	53	pushq	%rbx
10000604a:	48 83 ec 18	subq	$24, %rsp
10000604e:	48 89 fb	movq	%rdi, %rbx
100006051:	48 8b 05 58 c5 04 00	movq	312664(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSArray
100006058:	48 89 45 c8	movq	%rax, -56(%rbp)
10000605c:	48 8b 35 35 b6 04 00	movq	308789(%rip), %rsi ## Objc selector ref: mDefogSlider
100006063:	4c 8b 3d b6 6b 03 00	movq	224182(%rip), %r15 ## Objc message: +[NSArray mDefogSlider]
10000606a:	41 ff d7	callq	*%r15
10000606d:	4c 8b 25 14 b8 04 00	movq	309268(%rip), %r12 ## Objc selector ref: objectValue
100006074:	48 89 c7	movq	%rax, %rdi
100006077:	4c 89 e6	movq	%r12, %rsi
10000607a:	41 ff d7	callq	*%r15
10000607d:	48 89 45 d0	movq	%rax, -48(%rbp)
100006081:	48 8b 35 28 b6 04 00	movq	308776(%rip), %rsi ## Objc selector ref: mExposureSlider
100006088:	48 89 df	movq	%rbx, %rdi
10000608b:	41 ff d7	callq	*%r15
10000608e:	48 89 c7	movq	%rax, %rdi
100006091:	4c 89 e6	movq	%r12, %rsi
100006094:	41 ff d7	callq	*%r15
100006097:	49 89 c5	movq	%rax, %r13
10000609a:	48 8b 35 3f b6 04 00	movq	308799(%rip), %rsi ## Objc selector ref: mKneeLowSlider
1000060a1:	48 89 df	movq	%rbx, %rdi
1000060a4:	41 ff d7	callq	*%r15
1000060a7:	48 89 c7	movq	%rax, %rdi
1000060aa:	4c 89 e6	movq	%r12, %rsi
1000060ad:	41 ff d7	callq	*%r15
1000060b0:	49 89 c6	movq	%rax, %r14
1000060b3:	48 8b 35 0e b6 04 00	movq	308750(%rip), %rsi ## Objc selector ref: mKneeHighSlider
1000060ba:	48 89 df	movq	%rbx, %rdi
1000060bd:	41 ff d7	callq	*%r15
1000060c0:	48 89 c7	movq	%rax, %rdi
1000060c3:	4c 89 e6	movq	%r12, %rsi
1000060c6:	41 ff d7	callq	*%r15
1000060c9:	48 8b 35 68 ac 04 00	movq	306280(%rip), %rsi ## Objc selector ref: arrayWithObjects:
1000060d0:	48 c7 04 24 00 00 00 00	movq	$0, (%rsp)
1000060d8:	48 8b 7d c8	movq	-56(%rbp), %rdi
1000060dc:	48 8b 55 d0	movq	-48(%rbp), %rdx
1000060e0:	4c 89 e9	movq	%r13, %rcx
1000060e3:	4d 89 f0	movq	%r14, %r8
1000060e6:	49 89 c1	movq	%rax, %r9
1000060e9:	31 c0	xorl	%eax, %eax
1000060eb:	41 ff d7	callq	*%r15
1000060ee:	48 83 c4 18	addq	$24, %rsp
1000060f2:	5b	popq	%rbx
1000060f3:	41 5c	popq	%r12
1000060f5:	41 5d	popq	%r13
1000060f7:	41 5e	popq	%r14
1000060f9:	41 5f	popq	%r15
1000060fb:	5d	popq	%rbp
1000060fc:	c3	retq
1000060fd:	55	pushq	%rbp
1000060fe:	48 89 e5	movq	%rsp, %rbp
100006101:	41 57	pushq	%r15
100006103:	41 56	pushq	%r14
100006105:	41 55	pushq	%r13
100006107:	41 54	pushq	%r12
100006109:	53	pushq	%rbx
10000610a:	50	pushq	%rax
10000610b:	49 89 fe	movq	%rdi, %r14
10000610e:	48 85 d2	testq	%rdx, %rdx
100006111:	0f 84 e3 00 00 00	je	0x1000061fa
100006117:	48 89 d3	movq	%rdx, %rbx
10000611a:	48 8b 35 3f b7 04 00	movq	309055(%rip), %rsi ## Objc selector ref: objectAtIndex:
100006121:	4c 8b 3d f8 6a 03 00	movq	223992(%rip), %r15 ## Objc message: -[%rdi objectAtIndex:]
100006128:	48 89 d7	movq	%rdx, %rdi
10000612b:	31 d2	xorl	%edx, %edx
10000612d:	41 ff d7	callq	*%r15
100006130:	49 89 c5	movq	%rax, %r13
100006133:	48 8b 35 5e b5 04 00	movq	308574(%rip), %rsi ## Objc selector ref: mDefogSlider
10000613a:	4c 89 f7	movq	%r14, %rdi
10000613d:	41 ff d7	callq	*%r15
100006140:	4c 8b 25 a1 be 04 00	movq	310945(%rip), %r12 ## Objc selector ref: setObjectValue:
100006147:	48 89 c7	movq	%rax, %rdi
10000614a:	4c 89 e6	movq	%r12, %rsi
10000614d:	4c 89 ea	movq	%r13, %rdx
100006150:	41 ff d7	callq	*%r15
100006153:	ba 01 00 00 00	movl	$1, %edx
100006158:	48 89 df	movq	%rbx, %rdi
10000615b:	48 8b 35 fe b6 04 00	movq	308990(%rip), %rsi ## Objc selector ref: objectAtIndex:
100006162:	41 ff d7	callq	*%r15
100006165:	49 89 c5	movq	%rax, %r13
100006168:	48 8b 35 41 b5 04 00	movq	308545(%rip), %rsi ## Objc selector ref: mExposureSlider
10000616f:	4c 89 f7	movq	%r14, %rdi
100006172:	41 ff d7	callq	*%r15
100006175:	48 89 c7	movq	%rax, %rdi
100006178:	4c 89 e6	movq	%r12, %rsi
10000617b:	4c 89 ea	movq	%r13, %rdx
10000617e:	41 ff d7	callq	*%r15
100006181:	ba 02 00 00 00	movl	$2, %edx
100006186:	48 89 df	movq	%rbx, %rdi
100006189:	48 8b 35 d0 b6 04 00	movq	308944(%rip), %rsi ## Objc selector ref: objectAtIndex:
100006190:	41 ff d7	callq	*%r15
100006193:	49 89 c5	movq	%rax, %r13
100006196:	48 8b 35 43 b5 04 00	movq	308547(%rip), %rsi ## Objc selector ref: mKneeLowSlider
10000619d:	4c 89 f7	movq	%r14, %rdi
1000061a0:	41 ff d7	callq	*%r15
1000061a3:	48 89 c7	movq	%rax, %rdi
1000061a6:	4c 89 e6	movq	%r12, %rsi
1000061a9:	4c 89 ea	movq	%r13, %rdx
1000061ac:	41 ff d7	callq	*%r15
1000061af:	ba 03 00 00 00	movl	$3, %edx
1000061b4:	48 89 df	movq	%rbx, %rdi
1000061b7:	48 8b 35 a2 b6 04 00	movq	308898(%rip), %rsi ## Objc selector ref: objectAtIndex:
1000061be:	41 ff d7	callq	*%r15
1000061c1:	48 89 c3	movq	%rax, %rbx
1000061c4:	48 8b 35 fd b4 04 00	movq	308477(%rip), %rsi ## Objc selector ref: mKneeHighSlider
1000061cb:	4c 89 f7	movq	%r14, %rdi
1000061ce:	41 ff d7	callq	*%r15
1000061d1:	48 89 c7	movq	%rax, %rdi
1000061d4:	4c 89 e6	movq	%r12, %rsi
1000061d7:	48 89 da	movq	%rbx, %rdx
1000061da:	41 ff d7	callq	*%r15
1000061dd:	48 8b 35 dc b0 04 00	movq	307420(%rip), %rsi ## Objc selector ref: genericAction
1000061e4:	4c 89 f7	movq	%r14, %rdi
1000061e7:	4c 89 f8	movq	%r15, %rax
1000061ea:	48 83 c4 08	addq	$8, %rsp
1000061ee:	5b	popq	%rbx
1000061ef:	41 5c	popq	%r12
1000061f1:	41 5d	popq	%r13
1000061f3:	41 5e	popq	%r14
1000061f5:	41 5f	popq	%r15
1000061f7:	5d	popq	%rbp
1000061f8:	ff e0	jmpq	*%rax
1000061fa:	48 8b 35 9f ac 04 00	movq	306335(%rip), %rsi ## Objc selector ref: closeToneMapping:
100006201:	4c 89 f7	movq	%r14, %rdi
100006204:	31 d2	xorl	%edx, %edx
100006206:	48 83 c4 08	addq	$8, %rsp
10000620a:	5b	popq	%rbx
10000620b:	41 5c	popq	%r12
10000620d:	41 5d	popq	%r13
10000620f:	41 5e	popq	%r14
100006211:	41 5f	popq	%r15
100006213:	5d	popq	%rbp
100006214:	ff 25 06 6a 03 00	jmpq	*223750(%rip) ## Objc message: -[%rdi closeToneMapping:]
10000621a:	55	pushq	%rbp
10000621b:	48 89 e5	movq	%rsp, %rbp
10000621e:	53	pushq	%rbx
10000621f:	50	pushq	%rax
100006220:	48 89 fb	movq	%rdi, %rbx
100006223:	48 8b 35 46 c2 04 00	movq	311878(%rip), %rsi ## Objc selector ref: updateToneMappedImage
10000622a:	ff 15 f0 69 03 00	callq	*223728(%rip) ## Objc message: -[%rdi updateToneMappedImage]
100006230:	48 8b 05 99 c7 04 00	movq	313241(%rip), %rax
100006237:	48 8b 04 03	movq	(%rbx,%rax), %rax
10000623b:	48 83 c4 08	addq	$8, %rsp
10000623f:	5b	popq	%rbx
100006240:	5d	popq	%rbp
100006241:	c3	retq
100006242:	55	pushq	%rbp
100006243:	48 89 e5	movq	%rsp, %rbp
100006246:	48 89 f7	movq	%rsi, %rdi
100006249:	5d	popq	%rbp
10000624a:	e9 85 91 02 00	jmp	0x10002f3d4 ## symbol stub for: _free
10000624f:	55	pushq	%rbp
100006250:	48 89 e5	movq	%rsp, %rbp
100006253:	41 57	pushq	%r15
100006255:	41 56	pushq	%r14
100006257:	41 55	pushq	%r13
100006259:	41 54	pushq	%r12
10000625b:	53	pushq	%rbx
10000625c:	48 83 ec 38	subq	$56, %rsp
100006260:	49 89 d4	movq	%rdx, %r12
100006263:	49 89 fe	movq	%rdi, %r14
100006266:	48 89 d7	movq	%rdx, %rdi
100006269:	e8 c6 8e 02 00	callq	0x10002f134 ## symbol stub for: _CGImageGetBitmapInfo
10000626e:	89 c3	movl	%eax, %ebx
100006270:	4c 89 e7	movq	%r12, %rdi
100006273:	e8 b6 8e 02 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
100006278:	0f ba e3 08	btl	$8, %ebx
10000627c:	72 08	jb	0x100006286
10000627e:	45 31 ed	xorl	%r13d, %r13d
100006281:	e9 9c 01 00 00	jmp	0x100006422
100006286:	48 89 45 d0	movq	%rax, -48(%rbp)
10000628a:	45 31 ed	xorl	%r13d, %r13d
10000628d:	48 8d 4d b8	leaq	-72(%rbp), %rcx
100006291:	4c 89 29	movq	%r13, (%rcx)
100006294:	4c 8d 45 c8	leaq	-56(%rbp), %r8
100006298:	4d 89 28	movq	%r13, (%r8)
10000629b:	48 8b 35 86 af 04 00	movq	307078(%rip), %rsi ## Objc selector ref: fillFP32BufferWithImageData:srcPtr:dstPtr:size:
1000062a2:	4c 8d 4d a0	leaq	-96(%rbp), %r9
1000062a6:	4c 89 f7	movq	%r14, %rdi
1000062a9:	4c 89 e2	movq	%r12, %rdx
1000062ac:	ff 15 6e 69 03 00	callq	*223598(%rip) ## Objc message: -[%rdi fillFP32BufferWithImageData:srcPtr:dstPtr:size:]
1000062b2:	84 c0	testb	%al, %al
1000062b4:	0f 84 56 01 00 00	je	0x100006410
1000062ba:	4c 89 e7	movq	%r12, %rdi
1000062bd:	e8 8a 8e 02 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
1000062c2:	48 89 c7	movq	%rax, %rdi
1000062c5:	e8 08 8d 02 00	callq	0x10002efd2 ## symbol stub for: _CGColorSpaceCopyICCData
1000062ca:	48 89 c3	movq	%rax, %rbx
1000062cd:	45 31 ed	xorl	%r13d, %r13d
1000062d0:	48 89 c7	movq	%rax, %rdi
1000062d3:	31 f6	xorl	%esi, %esi
1000062d5:	e8 b0 8f 02 00	callq	0x10002f28a ## symbol stub for: _ColorSyncProfileCreate
1000062da:	49 89 c7	movq	%rax, %r15
1000062dd:	48 89 df	movq	%rbx, %rdi
1000062e0:	e8 2d 8c 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000062e5:	4d 85 ff	testq	%r15, %r15
1000062e8:	0f 84 22 01 00 00	je	0x100006410
1000062ee:	48 8b 1d d3 c6 04 00	movq	313043(%rip), %rbx
1000062f5:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000062f9:	45 31 ed	xorl	%r13d, %r13d
1000062fc:	31 f6	xorl	%esi, %esi
1000062fe:	e8 e7 8c 02 00	callq	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
100006303:	49 89 c7	movq	%rax, %r15
100006306:	49 8b 0c 1e	movq	(%r14,%rbx), %rcx
10000630a:	48 8b 35 df ac 04 00	movq	306399(%rip), %rsi ## Objc selector ref: create_colorsync_transform:dstProfile:
100006311:	4c 89 f7	movq	%r14, %rdi
100006314:	48 89 ca	movq	%rcx, %rdx
100006317:	ff 15 03 69 03 00	callq	*223491(%rip) ## Objc message: -[%rdi create_colorsync_transform:dstProfile:]
10000631d:	48 85 c0	testq	%rax, %rax
100006320:	0f 84 ea 00 00 00	je	0x100006410
100006326:	49 89 c6	movq	%rax, %r14
100006329:	4c 89 7d a8	movq	%r15, -88(%rbp)
10000632d:	4c 89 e7	movq	%r12, %rdi
100006330:	e8 47 8e 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100006335:	48 89 45 c0	movq	%rax, -64(%rbp)
100006339:	4c 89 e7	movq	%r12, %rdi
10000633c:	e8 1d 8e 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100006341:	48 89 c2	movq	%rax, %rdx
100006344:	48 8b 4d d0	movq	-48(%rbp), %rcx
100006348:	8d 41 fe	leal	-2(%rcx), %eax
10000634b:	83 e0 fd	andl	$-3, %eax
10000634e:	83 f8 01	cmpl	$1, %eax
100006351:	bb 00 00 00 00	movl	$0, %ebx
100006356:	83 d3 03	adcl	$3, %ebx
100006359:	31 c0	xorl	%eax, %eax
10000635b:	85 c9	testl	%ecx, %ecx
10000635d:	0f 94 c0	sete	%al
100006360:	0f 44 d9	cmovel	%ecx, %ebx
100006363:	41 bc 04 00 00 00	movl	$4, %r12d
100006369:	49 29 c4	subq	%rax, %r12
10000636c:	48 8b 4d c8	movq	-56(%rbp), %rcx
100006370:	4d 89 e7	movq	%r12, %r15
100006373:	48 8b 75 c0	movq	-64(%rbp), %rsi
100006377:	4c 0f af fe	imulq	%rsi, %r15
10000637b:	49 c1 e7 02	shlq	$2, %r15
10000637f:	4c 89 75 d0	movq	%r14, -48(%rbp)
100006383:	4c 89 f7	movq	%r14, %rdi
100006386:	48 89 55 b0	movq	%rdx, -80(%rbp)
10000638a:	41 b8 07 00 00 00	movl	$7, %r8d
100006390:	41 89 d9	movl	%ebx, %r9d
100006393:	6a 00	pushq	$0
100006395:	41 57	pushq	%r15
100006397:	53	pushq	%rbx
100006398:	6a 07	pushq	$7
10000639a:	ff 75 b8	pushq	-72(%rbp)
10000639d:	41 57	pushq	%r15
10000639f:	e8 1c 8f 02 00	callq	0x10002f2c0 ## symbol stub for: _ColorSyncTransformConvert
1000063a4:	48 83 c4 30	addq	$48, %rsp
1000063a8:	48 8b 75 c8	movq	-56(%rbp), %rsi
1000063ac:	48 8b 55 a0	movq	-96(%rbp), %rdx
1000063b0:	48 8d 0d 8b fe ff ff	leaq	-373(%rip), %rcx
1000063b7:	31 ff	xorl	%edi, %edi
1000063b9:	e8 3a 8d 02 00	callq	0x10002f0f8 ## symbol stub for: _CGDataProviderCreateWithData
1000063be:	48 85 c0	testq	%rax, %rax
1000063c1:	74 44	je	0x100006407
1000063c3:	49 89 c6	movq	%rax, %r14
1000063c6:	49 c1 e4 05	shlq	$5, %r12
1000063ca:	81 cb 00 21 00 00	orl	$8448, %ebx
1000063d0:	48 83 ec 08	subq	$8, %rsp
1000063d4:	ba 20 00 00 00	movl	$32, %edx
1000063d9:	48 8b 7d c0	movq	-64(%rbp), %rdi
1000063dd:	48 8b 75 b0	movq	-80(%rbp), %rsi
1000063e1:	4c 89 e1	movq	%r12, %rcx
1000063e4:	4d 89 f8	movq	%r15, %r8
1000063e7:	4c 8b 4d a8	movq	-88(%rbp), %r9
1000063eb:	6a 00	pushq	$0
1000063ed:	6a 01	pushq	$1
1000063ef:	6a 00	pushq	$0
1000063f1:	50	pushq	%rax
1000063f2:	53	pushq	%rbx
1000063f3:	e8 0c 8d 02 00	callq	0x10002f104 ## symbol stub for: _CGImageCreate
1000063f8:	48 83 c4 30	addq	$48, %rsp
1000063fc:	49 89 c5	movq	%rax, %r13
1000063ff:	4c 89 f7	movq	%r14, %rdi
100006402:	e8 0b 8b 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100006407:	48 8b 7d d0	movq	-48(%rbp), %rdi
10000640b:	e8 02 8b 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100006410:	48 8b 7d b8	movq	-72(%rbp), %rdi
100006414:	e8 bb 8f 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100006419:	48 8b 7d c8	movq	-56(%rbp), %rdi
10000641d:	e8 b2 8f 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100006422:	4c 89 e8	movq	%r13, %rax
100006425:	48 83 c4 38	addq	$56, %rsp
100006429:	5b	popq	%rbx
10000642a:	41 5c	popq	%r12
10000642c:	41 5d	popq	%r13
10000642e:	41 5e	popq	%r14
100006430:	41 5f	popq	%r15
100006432:	5d	popq	%rbp
100006433:	c3	retq
100006434:	55	pushq	%rbp
100006435:	48 89 e5	movq	%rsp, %rbp
100006438:	48 8b 15 e1 c5 04 00	movq	312801(%rip), %rdx
10000643f:	b9 01 00 00 00	movl	$1, %ecx
100006444:	5d	popq	%rbp
100006445:	e9 8c 90 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10000644a:	55	pushq	%rbp
10000644b:	48 89 e5	movq	%rsp, %rbp
10000644e:	48 8b 0d cb c5 04 00	movq	312779(%rip), %rcx
100006455:	5d	popq	%rbp
100006456:	e9 a5 90 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
10000645b:	55	pushq	%rbp
10000645c:	48 89 e5	movq	%rsp, %rbp
10000645f:	48 8b 15 c2 c5 04 00	movq	312770(%rip), %rdx
100006466:	b9 01 00 00 00	movl	$1, %ecx
10000646b:	5d	popq	%rbp
10000646c:	e9 65 90 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006471:	55	pushq	%rbp
100006472:	48 89 e5	movq	%rsp, %rbp
100006475:	48 8b 0d ac c5 04 00	movq	312748(%rip), %rcx
10000647c:	5d	popq	%rbp
10000647d:	e9 7e 90 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006482:	55	pushq	%rbp
100006483:	48 89 e5	movq	%rsp, %rbp
100006486:	48 8b 15 a3 c5 04 00	movq	312739(%rip), %rdx
10000648d:	b9 01 00 00 00	movl	$1, %ecx
100006492:	5d	popq	%rbp
100006493:	e9 3e 90 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006498:	55	pushq	%rbp
100006499:	48 89 e5	movq	%rsp, %rbp
10000649c:	48 8b 0d 8d c5 04 00	movq	312717(%rip), %rcx
1000064a3:	5d	popq	%rbp
1000064a4:	e9 57 90 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
1000064a9:	55	pushq	%rbp
1000064aa:	48 89 e5	movq	%rsp, %rbp
1000064ad:	48 8b 15 84 c5 04 00	movq	312708(%rip), %rdx
1000064b4:	b9 01 00 00 00	movl	$1, %ecx
1000064b9:	5d	popq	%rbp
1000064ba:	e9 17 90 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
1000064bf:	55	pushq	%rbp
1000064c0:	48 89 e5	movq	%rsp, %rbp
1000064c3:	48 8b 0d 6e c5 04 00	movq	312686(%rip), %rcx
1000064ca:	5d	popq	%rbp
1000064cb:	e9 30 90 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
1000064d0:	55	pushq	%rbp
1000064d1:	48 89 e5	movq	%rsp, %rbp
1000064d4:	48 8b 15 65 c5 04 00	movq	312677(%rip), %rdx
1000064db:	b9 01 00 00 00	movl	$1, %ecx
1000064e0:	5d	popq	%rbp
1000064e1:	e9 f0 8f 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
1000064e6:	55	pushq	%rbp
1000064e7:	48 89 e5	movq	%rsp, %rbp
1000064ea:	48 8b 0d 4f c5 04 00	movq	312655(%rip), %rcx
1000064f1:	5d	popq	%rbp
1000064f2:	e9 09 90 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
1000064f7:	55	pushq	%rbp
1000064f8:	48 89 e5	movq	%rsp, %rbp
1000064fb:	48 8b 15 46 c5 04 00	movq	312646(%rip), %rdx
100006502:	b9 01 00 00 00	movl	$1, %ecx
100006507:	5d	popq	%rbp
100006508:	e9 c9 8f 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10000650d:	55	pushq	%rbp
10000650e:	48 89 e5	movq	%rsp, %rbp
100006511:	48 8b 0d 30 c5 04 00	movq	312624(%rip), %rcx
100006518:	5d	popq	%rbp
100006519:	e9 e2 8f 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
10000651e:	55	pushq	%rbp
10000651f:	48 89 e5	movq	%rsp, %rbp
100006522:	48 8b 15 27 c5 04 00	movq	312615(%rip), %rdx
100006529:	b9 01 00 00 00	movl	$1, %ecx
10000652e:	5d	popq	%rbp
10000652f:	e9 a2 8f 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006534:	55	pushq	%rbp
100006535:	48 89 e5	movq	%rsp, %rbp
100006538:	48 8b 0d 11 c5 04 00	movq	312593(%rip), %rcx
10000653f:	5d	popq	%rbp
100006540:	e9 bb 8f 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006545:	55	pushq	%rbp
100006546:	48 89 e5	movq	%rsp, %rbp
100006549:	48 8b 15 08 c5 04 00	movq	312584(%rip), %rdx
100006550:	b9 01 00 00 00	movl	$1, %ecx
100006555:	5d	popq	%rbp
100006556:	e9 7b 8f 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10000655b:	55	pushq	%rbp
10000655c:	48 89 e5	movq	%rsp, %rbp
10000655f:	48 8b 0d f2 c4 04 00	movq	312562(%rip), %rcx
100006566:	5d	popq	%rbp
100006567:	e9 94 8f 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
10000656c:	55	pushq	%rbp
10000656d:	48 89 e5	movq	%rsp, %rbp
100006570:	48 8b 15 e9 c4 04 00	movq	312553(%rip), %rdx
100006577:	b9 01 00 00 00	movl	$1, %ecx
10000657c:	5d	popq	%rbp
10000657d:	e9 54 8f 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006582:	55	pushq	%rbp
100006583:	48 89 e5	movq	%rsp, %rbp
100006586:	48 8b 0d d3 c4 04 00	movq	312531(%rip), %rcx
10000658d:	5d	popq	%rbp
10000658e:	e9 6d 8f 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006593:	55	pushq	%rbp
100006594:	48 89 e5	movq	%rsp, %rbp
100006597:	48 8b 05 ca c4 04 00	movq	312522(%rip), %rax
10000659e:	48 8b 04 07	movq	(%rdi,%rax), %rax
1000065a2:	5d	popq	%rbp
1000065a3:	c3	retq
1000065a4:	55	pushq	%rbp
1000065a5:	48 89 e5	movq	%rsp, %rbp
1000065a8:	48 8b 05 b9 c4 04 00	movq	312505(%rip), %rax
1000065af:	48 89 14 07	movq	%rdx, (%rdi,%rax)
1000065b3:	5d	popq	%rbp
1000065b4:	c3	retq
1000065b5:	55	pushq	%rbp
1000065b6:	48 89 e5	movq	%rsp, %rbp
1000065b9:	48 8b 05 b0 c4 04 00	movq	312496(%rip), %rax
1000065c0:	0f be 04 07	movsbl	(%rdi,%rax), %eax
1000065c4:	5d	popq	%rbp
1000065c5:	c3	retq
1000065c6:	55	pushq	%rbp
1000065c7:	48 89 e5	movq	%rsp, %rbp
1000065ca:	48 8b 05 9f c4 04 00	movq	312479(%rip), %rax
1000065d1:	88 14 07	movb	%dl, (%rdi,%rax)
1000065d4:	5d	popq	%rbp
1000065d5:	c3	retq
1000065d6:	55	pushq	%rbp
1000065d7:	48 89 e5	movq	%rsp, %rbp
1000065da:	48 8b 15 97 c4 04 00	movq	312471(%rip), %rdx
1000065e1:	b9 01 00 00 00	movl	$1, %ecx
1000065e6:	5d	popq	%rbp
1000065e7:	e9 ea 8e 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
1000065ec:	55	pushq	%rbp
1000065ed:	48 89 e5	movq	%rsp, %rbp
1000065f0:	48 8b 0d 81 c4 04 00	movq	312449(%rip), %rcx
1000065f7:	5d	popq	%rbp
1000065f8:	e9 09 8f 02 00	jmp	0x10002f506 ## symbol stub for: _objc_setProperty_atomic_copy
1000065fd:	55	pushq	%rbp
1000065fe:	48 89 e5	movq	%rsp, %rbp
100006601:	48 8b 15 78 c4 04 00	movq	312440(%rip), %rdx
100006608:	b9 01 00 00 00	movl	$1, %ecx
10000660d:	5d	popq	%rbp
10000660e:	e9 c3 8e 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006613:	55	pushq	%rbp
100006614:	48 89 e5	movq	%rsp, %rbp
100006617:	48 8b 0d 62 c4 04 00	movq	312418(%rip), %rcx
10000661e:	5d	popq	%rbp
10000661f:	e9 dc 8e 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006624:	55	pushq	%rbp
100006625:	48 89 e5	movq	%rsp, %rbp
100006628:	48 8b 15 59 c4 04 00	movq	312409(%rip), %rdx
10000662f:	b9 01 00 00 00	movl	$1, %ecx
100006634:	5d	popq	%rbp
100006635:	e9 9c 8e 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10000663a:	55	pushq	%rbp
10000663b:	48 89 e5	movq	%rsp, %rbp
10000663e:	48 8b 0d 43 c4 04 00	movq	312387(%rip), %rcx
100006645:	5d	popq	%rbp
100006646:	e9 b5 8e 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
10000664b:	55	pushq	%rbp
10000664c:	48 89 e5	movq	%rsp, %rbp
10000664f:	48 8b 15 3a c4 04 00	movq	312378(%rip), %rdx
100006656:	b9 01 00 00 00	movl	$1, %ecx
10000665b:	5d	popq	%rbp
10000665c:	e9 75 8e 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006661:	55	pushq	%rbp
100006662:	48 89 e5	movq	%rsp, %rbp
100006665:	48 8b 0d 24 c4 04 00	movq	312356(%rip), %rcx
10000666c:	5d	popq	%rbp
10000666d:	e9 8e 8e 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006672:	55	pushq	%rbp
100006673:	48 89 e5	movq	%rsp, %rbp
100006676:	48 8b 15 1b c4 04 00	movq	312347(%rip), %rdx
10000667d:	b9 01 00 00 00	movl	$1, %ecx
100006682:	5d	popq	%rbp
100006683:	e9 4e 8e 02 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
100006688:	55	pushq	%rbp
100006689:	48 89 e5	movq	%rsp, %rbp
10000668c:	48 8b 0d 05 c4 04 00	movq	312325(%rip), %rcx
100006693:	5d	popq	%rbp
100006694:	e9 67 8e 02 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
100006699:	55	pushq	%rbp
10000669a:	48 89 e5	movq	%rsp, %rbp
10000669d:	48 8b 05 fc c3 04 00	movq	312316(%rip), %rax
1000066a4:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
1000066a9:	5d	popq	%rbp
1000066aa:	c3	retq
1000066ab:	55	pushq	%rbp
1000066ac:	48 89 e5	movq	%rsp, %rbp
1000066af:	48 8b 05 ea c3 04 00	movq	312298(%rip), %rax
1000066b6:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
1000066bb:	5d	popq	%rbp
1000066bc:	c3	retq
1000066bd:	55	pushq	%rbp
1000066be:	48 89 e5	movq	%rsp, %rbp
1000066c1:	48 8b 05 e0 c3 04 00	movq	312288(%rip), %rax
1000066c8:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
1000066cd:	5d	popq	%rbp
1000066ce:	c3	retq
1000066cf:	55	pushq	%rbp
1000066d0:	48 89 e5	movq	%rsp, %rbp
1000066d3:	48 8b 05 ce c3 04 00	movq	312270(%rip), %rax
1000066da:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
1000066df:	5d	popq	%rbp
1000066e0:	c3	retq
1000066e1:	55	pushq	%rbp
1000066e2:	48 89 e5	movq	%rsp, %rbp
1000066e5:	48 8b 05 c4 c3 04 00	movq	312260(%rip), %rax
1000066ec:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
1000066f1:	5d	popq	%rbp
1000066f2:	c3	retq
1000066f3:	55	pushq	%rbp
1000066f4:	48 89 e5	movq	%rsp, %rbp
1000066f7:	48 8b 05 b2 c3 04 00	movq	312242(%rip), %rax
1000066fe:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
100006703:	5d	popq	%rbp
100006704:	c3	retq
100006705:	55	pushq	%rbp
100006706:	48 89 e5	movq	%rsp, %rbp
100006709:	48 8b 05 a8 c3 04 00	movq	312232(%rip), %rax
100006710:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
100006715:	5d	popq	%rbp
100006716:	c3	retq
100006717:	55	pushq	%rbp
100006718:	48 89 e5	movq	%rsp, %rbp
10000671b:	48 8b 05 96 c3 04 00	movq	312214(%rip), %rax
100006722:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
100006727:	5d	popq	%rbp
100006728:	c3	retq
100006729:	55	pushq	%rbp
10000672a:	48 89 e5	movq	%rsp, %rbp
10000672d:	48 8b 05 8c c3 04 00	movq	312204(%rip), %rax
100006734:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
100006739:	5d	popq	%rbp
10000673a:	c3	retq
10000673b:	55	pushq	%rbp
10000673c:	48 89 e5	movq	%rsp, %rbp
10000673f:	48 8b 05 7a c3 04 00	movq	312186(%rip), %rax
100006746:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
10000674b:	5d	popq	%rbp
10000674c:	c3	retq
10000674d:	55	pushq	%rbp
10000674e:	48 89 e5	movq	%rsp, %rbp
100006751:	48 8b 05 70 c3 04 00	movq	312176(%rip), %rax
100006758:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
10000675d:	5d	popq	%rbp
10000675e:	c3	retq
10000675f:	55	pushq	%rbp
100006760:	48 89 e5	movq	%rsp, %rbp
100006763:	48 8b 05 5e c3 04 00	movq	312158(%rip), %rax
10000676a:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
10000676f:	5d	popq	%rbp
100006770:	c3	retq
100006771:	55	pushq	%rbp
100006772:	48 89 e5	movq	%rsp, %rbp
100006775:	48 8b 05 54 c3 04 00	movq	312148(%rip), %rax
10000677c:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
100006781:	5d	popq	%rbp
100006782:	c3	retq
100006783:	55	pushq	%rbp
100006784:	48 89 e5	movq	%rsp, %rbp
100006787:	48 8b 05 42 c3 04 00	movq	312130(%rip), %rax
10000678e:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
100006793:	5d	popq	%rbp
100006794:	c3	retq
100006795:	55	pushq	%rbp
100006796:	48 89 e5	movq	%rsp, %rbp
100006799:	48 8b 05 38 c3 04 00	movq	312120(%rip), %rax
1000067a0:	f2 0f 10 04 07	movsd	(%rdi,%rax), %xmm0
1000067a5:	5d	popq	%rbp
1000067a6:	c3	retq
1000067a7:	55	pushq	%rbp
1000067a8:	48 89 e5	movq	%rsp, %rbp
1000067ab:	48 8b 05 26 c3 04 00	movq	312102(%rip), %rax
1000067b2:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
1000067b7:	5d	popq	%rbp
1000067b8:	c3	retq
1000067b9:	90	nop
1000067ba:	90	nop
1000067bb:	90	nop
1000067bc:	55	pushq	%rbp
1000067bd:	48 89 e5	movq	%rsp, %rbp
1000067c0:	48 83 ec 30	subq	$48, %rsp
1000067c4:	48 8d 45 f0	leaq	-16(%rbp), %rax
1000067c8:	48 89 38	movq	%rdi, (%rax)
1000067cb:	48 8b 0d f6 bf 04 00	movq	311286(%rip), %rcx ## Objc class ref: PlotViewBase
1000067d2:	48 89 48 08	movq	%rcx, 8(%rax)
1000067d6:	48 8b 35 73 ac 04 00	movq	306291(%rip), %rsi ## Objc selector ref: initWithFrame:
1000067dd:	0f 28 45 10	movaps	16(%rbp), %xmm0
1000067e1:	0f 28 4d 20	movaps	32(%rbp), %xmm1
1000067e5:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000067ea:	0f 11 04 24	movups	%xmm0, (%rsp)
1000067ee:	48 89 c7	movq	%rax, %rdi
1000067f1:	e8 e6 8c 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
1000067f6:	48 8b 0d eb c2 04 00	movq	312043(%rip), %rcx
1000067fd:	31 d2	xorl	%edx, %edx
1000067ff:	89 14 08	movl	%edx, (%rax,%rcx)
100006802:	48 8b 0d e7 c2 04 00	movq	312039(%rip), %rcx
100006809:	89 14 08	movl	%edx, (%rax,%rcx)
10000680c:	48 8b 0d e5 c2 04 00	movq	312037(%rip), %rcx
100006813:	ba 00 00 80 3f	movl	$1065353216, %edx
100006818:	89 14 08	movl	%edx, (%rax,%rcx)
10000681b:	48 8b 0d de c2 04 00	movq	312030(%rip), %rcx
100006822:	89 14 08	movl	%edx, (%rax,%rcx)
100006825:	48 83 c4 30	addq	$48, %rsp
100006829:	5d	popq	%rbp
10000682a:	c3	retq
10000682b:	55	pushq	%rbp
10000682c:	48 89 e5	movq	%rsp, %rbp
10000682f:	41 56	pushq	%r14
100006831:	53	pushq	%rbx
100006832:	48 83 ec 20	subq	$32, %rsp
100006836:	48 89 fb	movq	%rdi, %rbx
100006839:	48 85 ff	testq	%rdi, %rdi
10000683c:	74 1e	je	0x10000685c
10000683e:	48 8b 15 5b aa 04 00	movq	305755(%rip), %rdx ## Objc selector ref: frame
100006845:	4c 8d 75 d0	leaq	-48(%rbp), %r14
100006849:	4c 89 f7	movq	%r14, %rdi
10000684c:	48 89 de	movq	%rbx, %rsi
10000684f:	e8 8e 8c 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100006854:	66 41 0f 10 46 10	movupd	16(%r14), %xmm0
10000685a:	eb 0e	jmp	0x10000686a
10000685c:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100006860:	66 0f 29 45 e0	movapd	%xmm0, -32(%rbp)
100006865:	66 0f 29 45 d0	movapd	%xmm0, -48(%rbp)
10000686a:	48 8b 0d 8f c2 04 00	movq	311951(%rip), %rcx
100006871:	48 8b 15 78 c2 04 00	movq	311928(%rip), %rdx
100006878:	48 8b 05 79 c2 04 00	movq	311929(%rip), %rax
10000687f:	f3 0f 10 0c 0b	movss	(%rbx,%rcx), %xmm1
100006884:	66 0f 3a 21 0c 03 10	insertps	$16, (%rbx,%rax), %xmm1
10000688b:	48 8b 0d 56 c2 04 00	movq	311894(%rip), %rcx
100006892:	f3 0f 10 14 13	movss	(%rbx,%rdx), %xmm2
100006897:	66 0f 3a 21 14 0b 10	insertps	$16, (%rbx,%rcx), %xmm2
10000689e:	0f 5c ca	subps	%xmm2, %xmm1
1000068a1:	0f 5a c9	cvtps2pd	%xmm1, %xmm1
1000068a4:	66 0f 28 15 f4 16 03 00	movapd	202484(%rip), %xmm2
1000068ac:	66 0f 58 ca	addpd	%xmm2, %xmm1
1000068b0:	66 0f 58 ca	addpd	%xmm2, %xmm1
1000068b4:	66 0f 28 d0	movapd	%xmm0, %xmm2
1000068b8:	66 0f 5e d1	divpd	%xmm1, %xmm2
1000068bc:	66 0f 5a ca	cvtpd2ps	%xmm2, %xmm1
1000068c0:	48 8b 35 41 c2 04 00	movq	311873(%rip), %rsi
1000068c7:	f3 0f 16 d1	movshdup	%xmm1, %xmm2
1000068cb:	f3 0f 5d d1	minss	%xmm1, %xmm2
1000068cf:	f3 0f 11 14 33	movss	%xmm2, (%rbx,%rsi)
1000068d4:	0f 57 c9	xorps	%xmm1, %xmm1
1000068d7:	f3 0f 5a ca	cvtss2sd	%xmm2, %xmm1
1000068db:	0f 57 d2	xorps	%xmm2, %xmm2
1000068de:	f3 0f 5a 14 13	cvtss2sd	(%rbx,%rdx), %xmm2
1000068e3:	f2 0f 10 1d 8d 16 03 00	movsd	202381(%rip), %xmm3
1000068eb:	66 0f 28 e3	movapd	%xmm3, %xmm4
1000068ef:	f2 0f 5c e2	subsd	%xmm2, %xmm4
1000068f3:	f2 0f 59 e1	mulsd	%xmm1, %xmm4
1000068f7:	0f 57 c9	xorps	%xmm1, %xmm1
1000068fa:	66 0f 3a 0b cc 09	roundsd	$9, %xmm4, %xmm1
100006900:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100006904:	48 8b 15 05 c2 04 00	movq	311813(%rip), %rdx
10000690b:	f3 0f 11 0c 13	movss	%xmm1, (%rbx,%rdx)
100006910:	0f 57 c9	xorps	%xmm1, %xmm1
100006913:	f3 0f 5a 0c 33	cvtss2sd	(%rbx,%rsi), %xmm1
100006918:	0f 57 d2	xorps	%xmm2, %xmm2
10000691b:	f3 0f 5a 14 03	cvtss2sd	(%rbx,%rax), %xmm2
100006920:	0f 57 e4	xorps	%xmm4, %xmm4
100006923:	f3 0f 5a 24 0b	cvtss2sd	(%rbx,%rcx), %xmm4
100006928:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000692c:	f2 0f 5c d4	subsd	%xmm4, %xmm2
100006930:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100006934:	0f 57 c9	xorps	%xmm1, %xmm1
100006937:	66 0f 3a 0b ca 09	roundsd	$9, %xmm2, %xmm1
10000693d:	66 0f 15 c0	unpckhpd	%xmm0, %xmm0
100006941:	f2 0f 5c c1	subsd	%xmm1, %xmm0
100006945:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100006949:	48 8b 05 c8 c1 04 00	movq	311752(%rip), %rax
100006950:	f3 0f 11 04 03	movss	%xmm0, (%rbx,%rax)
100006955:	48 8b 35 e4 a7 04 00	movq	305124(%rip), %rsi ## Objc selector ref: drawBack
10000695c:	4c 8b 35 bd 62 03 00	movq	221885(%rip), %r14 ## Objc message: -[%rdi drawBack]
100006963:	48 89 df	movq	%rbx, %rdi
100006966:	41 ff d6	callq	*%r14
100006969:	48 8b 35 08 a8 04 00	movq	305160(%rip), %rsi ## Objc selector ref: drawGrid
100006970:	48 89 df	movq	%rbx, %rdi
100006973:	41 ff d6	callq	*%r14
100006976:	48 8b 35 eb a7 04 00	movq	305131(%rip), %rsi ## Objc selector ref: drawData
10000697d:	48 89 df	movq	%rbx, %rdi
100006980:	41 ff d6	callq	*%r14
100006983:	48 83 c4 20	addq	$32, %rsp
100006987:	5b	popq	%rbx
100006988:	41 5e	popq	%r14
10000698a:	5d	popq	%rbp
10000698b:	c3	retq
10000698c:	55	pushq	%rbp
10000698d:	48 89 e5	movq	%rsp, %rbp
100006990:	48 8b 05 79 c1 04 00	movq	311673(%rip), %rax
100006997:	48 8b 0d 6a c1 04 00	movq	311658(%rip), %rcx
10000699e:	48 8b 15 73 c1 04 00	movq	311667(%rip), %rdx
1000069a5:	f3 0f 10 14 0f	movss	(%rdi,%rcx), %xmm2
1000069aa:	f3 0f 12 d2	movsldup	%xmm2, %xmm2
1000069ae:	66 0f 3a 21 c1 10	insertps	$16, %xmm1, %xmm0
1000069b4:	0f 59 c2	mulps	%xmm2, %xmm0
1000069b7:	f3 0f 10 0c 07	movss	(%rdi,%rax), %xmm1
1000069bc:	66 0f 3a 21 0c 17 10	insertps	$16, (%rdi,%rdx), %xmm1
1000069c3:	0f 58 c8	addps	%xmm0, %xmm1
1000069c6:	0f 5a c1	cvtps2pd	%xmm1, %xmm0
1000069c9:	0f 28 c8	movaps	%xmm0, %xmm1
1000069cc:	66 0f 15 c8	unpckhpd	%xmm0, %xmm1
1000069d0:	5d	popq	%rbp
1000069d1:	c3	retq
1000069d2:	55	pushq	%rbp
1000069d3:	48 89 e5	movq	%rsp, %rbp
1000069d6:	48 8b 05 2b c1 04 00	movq	311595(%rip), %rax
1000069dd:	f3 0f 10 14 07	movss	(%rdi,%rax), %xmm2
1000069e2:	f3 0f 59 c2	mulss	%xmm2, %xmm0
1000069e6:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
1000069ea:	f3 0f 59 ca	mulss	%xmm2, %xmm1
1000069ee:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
1000069f2:	5d	popq	%rbp
1000069f3:	c3	retq
1000069f4:	55	pushq	%rbp
1000069f5:	48 89 e5	movq	%rsp, %rbp
1000069f8:	41 56	pushq	%r14
1000069fa:	53	pushq	%rbx
1000069fb:	48 89 d3	movq	%rdx, %rbx
1000069fe:	48 8b 35 1b ad 04 00	movq	306459(%rip), %rsi ## Objc selector ref: makePointX:Y:
100006a05:	4c 8b 35 14 62 03 00	movq	221716(%rip), %r14 ## Objc message: -[%rdi makePointX:Y:]
100006a0c:	41 ff d6	callq	*%r14
100006a0f:	48 8b 35 82 ad 04 00	movq	306562(%rip), %rsi ## Objc selector ref: moveToPoint:
100006a16:	48 89 df	movq	%rbx, %rdi
100006a19:	4c 89 f0	movq	%r14, %rax
100006a1c:	5b	popq	%rbx
100006a1d:	41 5e	popq	%r14
100006a1f:	5d	popq	%rbp
100006a20:	ff e0	jmpq	*%rax
100006a22:	55	pushq	%rbp
100006a23:	48 89 e5	movq	%rsp, %rbp
100006a26:	41 56	pushq	%r14
100006a28:	53	pushq	%rbx
100006a29:	48 89 d3	movq	%rdx, %rbx
100006a2c:	48 8b 35 ed ac 04 00	movq	306413(%rip), %rsi ## Objc selector ref: makePointX:Y:
100006a33:	4c 8b 35 e6 61 03 00	movq	221670(%rip), %r14 ## Objc message: -[%rdi makePointX:Y:]
100006a3a:	41 ff d6	callq	*%r14
100006a3d:	48 8b 35 cc ab 04 00	movq	306124(%rip), %rsi ## Objc selector ref: lineToPoint:
100006a44:	48 89 df	movq	%rbx, %rdi
100006a47:	4c 89 f0	movq	%r14, %rax
100006a4a:	5b	popq	%rbx
100006a4b:	41 5e	popq	%r14
100006a4d:	5d	popq	%rbp
100006a4e:	ff e0	jmpq	*%rax
100006a50:	55	pushq	%rbp
100006a51:	48 89 e5	movq	%rsp, %rbp
100006a54:	83 fa 05	cmpl	$5, %edx
100006a57:	77 22	ja	0x100006a7b
100006a59:	89 d0	movl	%edx, %eax
100006a5b:	48 8d 0d d6 00 00 00	leaq	214(%rip), %rcx
100006a62:	48 63 04 81	movslq	(%rcx,%rax,4), %rax
100006a66:	48 01 c8	addq	%rcx, %rax
100006a69:	ff e0	jmpq	*%rax
100006a6b:	48 8b 3d ae bb 04 00	movq	310190(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006a72:	48 8b 35 e7 af 04 00	movq	307175(%rip), %rsi ## Objc selector ref: redColor
100006a79:	eb 2e	jmp	0x100006aa9
100006a7b:	48 8b 3d 9e bb 04 00	movq	310174(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006a82:	48 8b 35 0f a3 04 00	movq	303887(%rip), %rsi ## Objc selector ref: blackColor
100006a89:	eb 1e	jmp	0x100006aa9
100006a8b:	48 8b 3d 8e bb 04 00	movq	310158(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006a92:	48 8b 35 5f a8 04 00	movq	305247(%rip), %rsi ## Objc selector ref: greenColor
100006a99:	eb 0e	jmp	0x100006aa9
100006a9b:	48 8b 3d 7e bb 04 00	movq	310142(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006aa2:	48 8b 35 07 a3 04 00	movq	303879(%rip), %rsi ## Objc selector ref: blueColor
100006aa9:	ff 15 71 61 03 00	callq	*221553(%rip) ## Objc message: +[NSColor blueColor]
100006aaf:	eb 76	jmp	0x100006b27
100006ab1:	48 8b 3d 68 bb 04 00	movq	310120(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006ab8:	48 8b 35 29 a4 04 00	movq	304169(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100006abf:	f2 0f 10 0d 39 15 03 00	movsd	202041(%rip), %xmm1
100006ac7:	f2 0f 10 1d 39 15 03 00	movsd	202041(%rip), %xmm3
100006acf:	0f 57 c0	xorps	%xmm0, %xmm0
100006ad2:	0f 28 d1	movaps	%xmm1, %xmm2
100006ad5:	eb 4a	jmp	0x100006b21
100006ad7:	48 8b 3d 42 bb 04 00	movq	310082(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006ade:	48 8b 35 03 a4 04 00	movq	304131(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100006ae5:	f2 0f 10 05 13 15 03 00	movsd	202003(%rip), %xmm0
100006aed:	f2 0f 10 1d 13 15 03 00	movsd	202003(%rip), %xmm3
100006af5:	0f 57 c9	xorps	%xmm1, %xmm1
100006af8:	0f 28 d0	movaps	%xmm0, %xmm2
100006afb:	eb 24	jmp	0x100006b21
100006afd:	48 8b 3d 1c bb 04 00	movq	310044(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006b04:	48 8b 35 dd a3 04 00	movq	304093(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100006b0b:	f2 0f 10 05 ed 14 03 00	movsd	201965(%rip), %xmm0
100006b13:	f2 0f 10 1d ed 14 03 00	movsd	201965(%rip), %xmm3
100006b1b:	0f 57 d2	xorps	%xmm2, %xmm2
100006b1e:	0f 28 c8	movaps	%xmm0, %xmm1
100006b21:	ff 15 f9 60 03 00	callq	*221433(%rip) ## Objc message: +[NSColor colorWithDeviceRed:green:blue:alpha:]
100006b27:	48 8b 35 42 b1 04 00	movq	307522(%rip), %rsi ## Objc selector ref: set
100006b2e:	48 89 c7	movq	%rax, %rdi
100006b31:	5d	popq	%rbp
100006b32:	ff 25 e8 60 03 00	jmpq	*221416(%rip) ## Objc message: -[%rdi set]
33 ff ff ff	.long 4294967091	@ KIND_JUMP_TABLE32
53 ff ff ff	.long 4294967123	@ KIND_JUMP_TABLE32
63 ff ff ff	.long 4294967139	@ KIND_JUMP_TABLE32
79 ff ff ff	.long 4294967161	@ KIND_JUMP_TABLE32
9f ff ff ff	.long 4294967199	@ KIND_JUMP_TABLE32
c5 ff ff ff	.long 4294967237	@ KIND_JUMP_TABLE32
100006b50:	55	pushq	%rbp
100006b51:	48 89 e5	movq	%rsp, %rbp
100006b54:	41 57	pushq	%r15
100006b56:	41 56	pushq	%r14
100006b58:	41 55	pushq	%r13
100006b5a:	41 54	pushq	%r12
100006b5c:	53	pushq	%rbx
100006b5d:	50	pushq	%rax
100006b5e:	48 89 fb	movq	%rdi, %rbx
100006b61:	48 8b 3d c0 ba 04 00	movq	309952(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100006b68:	48 8b 35 21 a2 04 00	movq	303649(%rip), %rsi ## Objc selector ref: bezierPath
100006b6f:	4c 8b 25 aa 60 03 00	movq	221354(%rip), %r12 ## Objc message: +[NSBezierPath bezierPath]
100006b76:	41 ff d4	callq	*%r12
100006b79:	49 89 c6	movq	%rax, %r14
100006b7c:	48 8b 3d 9d ba 04 00	movq	309917(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006b83:	48 8b 35 5e a3 04 00	movq	303966(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100006b8a:	f2 0f 10 05 76 14 03 00	movsd	201846(%rip), %xmm0
100006b92:	f2 0f 10 1d 76 14 03 00	movsd	201846(%rip), %xmm3
100006b9a:	0f 28 c8	movaps	%xmm0, %xmm1
100006b9d:	0f 28 d0	movaps	%xmm0, %xmm2
100006ba0:	41 ff d4	callq	*%r12
100006ba3:	48 8b 35 c6 b0 04 00	movq	307398(%rip), %rsi ## Objc selector ref: set
100006baa:	48 89 c7	movq	%rax, %rdi
100006bad:	41 ff d4	callq	*%r12
100006bb0:	48 8b 05 39 bf 04 00	movq	311097(%rip), %rax
100006bb7:	f3 0f 10 04 03	movss	(%rbx,%rax), %xmm0
100006bbc:	49 89 c7	movq	%rax, %r15
100006bbf:	48 8b 05 22 bf 04 00	movq	311074(%rip), %rax
100006bc6:	f3 0f 10 0c 03	movss	(%rbx,%rax), %xmm1
100006bcb:	48 8b 35 be ab 04 00	movq	306110(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100006bd2:	48 89 df	movq	%rbx, %rdi
100006bd5:	4c 89 f2	movq	%r14, %rdx
100006bd8:	41 ff d4	callq	*%r12
100006bdb:	f3 42 0f 10 04 3b	movss	(%rbx,%r15), %xmm0
100006be1:	48 8b 05 10 bf 04 00	movq	311056(%rip), %rax
100006be8:	f3 0f 10 0c 03	movss	(%rbx,%rax), %xmm1
100006bed:	4c 8b 3d 14 aa 04 00	movq	305684(%rip), %r15 ## Objc selector ref: lineTo:x:y:
100006bf4:	48 89 df	movq	%rbx, %rdi
100006bf7:	4c 89 fe	movq	%r15, %rsi
100006bfa:	4c 89 f2	movq	%r14, %rdx
100006bfd:	41 ff d4	callq	*%r12
100006c00:	4c 8b 2d f9 be 04 00	movq	311033(%rip), %r13
100006c07:	f3 42 0f 10 04 2b	movss	(%rbx,%r13), %xmm0
100006c0d:	48 8b 05 e4 be 04 00	movq	311012(%rip), %rax
100006c14:	f3 0f 10 0c 03	movss	(%rbx,%rax), %xmm1
100006c19:	48 89 df	movq	%rbx, %rdi
100006c1c:	4c 89 fe	movq	%r15, %rsi
100006c1f:	4c 89 f2	movq	%r14, %rdx
100006c22:	41 ff d4	callq	*%r12
100006c25:	f3 42 0f 10 04 2b	movss	(%rbx,%r13), %xmm0
100006c2b:	4c 8b 2d b6 be 04 00	movq	310966(%rip), %r13
100006c32:	f3 42 0f 10 0c 2b	movss	(%rbx,%r13), %xmm1
100006c38:	48 89 df	movq	%rbx, %rdi
100006c3b:	4c 89 fe	movq	%r15, %rsi
100006c3e:	4c 89 f2	movq	%r14, %rdx
100006c41:	41 ff d4	callq	*%r12
100006c44:	48 8b 05 a5 be 04 00	movq	310949(%rip), %rax
100006c4b:	f3 0f 10 04 03	movss	(%rbx,%rax), %xmm0
100006c50:	f3 42 0f 10 0c 2b	movss	(%rbx,%r13), %xmm1
100006c56:	48 89 df	movq	%rbx, %rdi
100006c59:	4c 89 fe	movq	%r15, %rsi
100006c5c:	4c 89 f2	movq	%r14, %rdx
100006c5f:	41 ff d4	callq	*%r12
100006c62:	48 8b 35 b7 a5 04 00	movq	304567(%rip), %rsi ## Objc selector ref: fill
100006c69:	4c 89 f7	movq	%r14, %rdi
100006c6c:	4c 89 e0	movq	%r12, %rax
100006c6f:	48 83 c4 08	addq	$8, %rsp
100006c73:	5b	popq	%rbx
100006c74:	41 5c	popq	%r12
100006c76:	41 5d	popq	%r13
100006c78:	41 5e	popq	%r14
100006c7a:	41 5f	popq	%r15
100006c7c:	5d	popq	%rbp
100006c7d:	ff e0	jmpq	*%rax
100006c7f:	55	pushq	%rbp
100006c80:	48 89 e5	movq	%rsp, %rbp
100006c83:	41 57	pushq	%r15
100006c85:	41 56	pushq	%r14
100006c87:	41 55	pushq	%r13
100006c89:	41 54	pushq	%r12
100006c8b:	53	pushq	%rbx
100006c8c:	48 83 ec 18	subq	$24, %rsp
100006c90:	49 89 fc	movq	%rdi, %r12
100006c93:	48 8b 3d 8e b9 04 00	movq	309646(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100006c9a:	48 8b 35 ef a0 04 00	movq	303343(%rip), %rsi ## Objc selector ref: bezierPath
100006ca1:	48 8b 1d 78 5f 03 00	movq	221048(%rip), %rbx ## Objc message: +[NSBezierPath bezierPath]
100006ca8:	ff d3	callq	*%rbx
100006caa:	49 89 c6	movq	%rax, %r14
100006cad:	48 8b 3d 6c b9 04 00	movq	309612(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100006cb4:	48 8b 35 2d a2 04 00	movq	303661(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100006cbb:	f2 0f 10 05 55 13 03 00	movsd	201557(%rip), %xmm0
100006cc3:	f2 0f 10 1d 55 13 03 00	movsd	201557(%rip), %xmm3
100006ccb:	0f 28 c8	movaps	%xmm0, %xmm1
100006cce:	0f 28 d0	movaps	%xmm0, %xmm2
100006cd1:	ff d3	callq	*%rbx
100006cd3:	48 8b 35 96 af 04 00	movq	307094(%rip), %rsi ## Objc selector ref: set
100006cda:	48 89 c7	movq	%rax, %rdi
100006cdd:	ff d3	callq	*%rbx
100006cdf:	4c 8b 2d 0a be 04 00	movq	310794(%rip), %r13
100006ce6:	0f 57 c0	xorps	%xmm0, %xmm0
100006ce9:	f3 43 0f 5a 04 2c	cvtss2sd	(%r12,%r13), %xmm0
100006cef:	f2 0f 10 1d 91 12 03 00	movsd	201361(%rip), %xmm3
100006cf7:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
100006cfb:	0f 57 c9	xorps	%xmm1, %xmm1
100006cfe:	66 0f 3a 0b c8 09	roundsd	$9, %xmm0, %xmm1
100006d04:	66 0f e6 c1	cvttpd2dq	%xmm1, %xmm0
100006d08:	f3 0f e6 c0	cvtdq2pd	%xmm0, %xmm0
100006d0c:	48 8b 05 ed bd 04 00	movq	310765(%rip), %rax
100006d13:	0f 57 d2	xorps	%xmm2, %xmm2
100006d16:	f3 41 0f 5a 14 04	cvtss2sd	(%r12,%rax), %xmm2
100006d1c:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100006d20:	66 0f 3a 0b d2 09	roundsd	$9, %xmm2, %xmm2
100006d26:	66 0f 2e d0	ucomisd	%xmm0, %xmm2
100006d2a:	4c 8b 3d b7 bd 04 00	movq	310711(%rip), %r15
100006d31:	73 0c	jae	0x100006d3f
100006d33:	48 8b 0d be bd 04 00	movq	310718(%rip), %rcx
100006d3a:	e9 a4 00 00 00	jmp	0x100006de3
100006d3f:	f2 44 0f 2c e9	cvttsd2si	%xmm1, %r13d
100006d44:	48 8b 0d ad bd 04 00	movq	310701(%rip), %rcx
100006d4b:	48 89 4d c8	movq	%rcx, -56(%rbp)
100006d4f:	48 8b 0d b2 a8 04 00	movq	305330(%rip), %rcx ## Objc selector ref: lineTo:x:y:
100006d56:	48 89 4d c0	movq	%rcx, -64(%rbp)
100006d5a:	41 ff c5	incl	%r13d
100006d5d:	48 8b 1d bc 5e 03 00	movq	220860(%rip), %rbx ## Objc message: +[NSColor lineTo:x:y:]
100006d64:	f2 0f 59 05 bc 12 03 00	mulsd	201404(%rip), %xmm0
100006d6c:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100006d70:	f3 0f 11 45 d4	movss	%xmm0, -44(%rbp)
100006d75:	f3 43 0f 10 0c 3c	movss	(%r12,%r15), %xmm1
100006d7b:	4c 89 e7	movq	%r12, %rdi
100006d7e:	48 8b 35 0b aa 04 00	movq	305675(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100006d85:	4c 89 f2	movq	%r14, %rdx
100006d88:	ff d3	callq	*%rbx
100006d8a:	48 8b 45 c8	movq	-56(%rbp), %rax
100006d8e:	f3 41 0f 10 0c 04	movss	(%r12,%rax), %xmm1
100006d94:	4c 89 e7	movq	%r12, %rdi
100006d97:	48 8b 75 c0	movq	-64(%rbp), %rsi
100006d9b:	4c 89 f2	movq	%r14, %rdx
100006d9e:	f3 0f 10 45 d4	movss	-44(%rbp), %xmm0
100006da3:	ff d3	callq	*%rbx
100006da5:	f2 0f 10 1d db 11 03 00	movsd	201179(%rip), %xmm3
100006dad:	0f 57 c0	xorps	%xmm0, %xmm0
100006db0:	f2 41 0f 2a c5	cvtsi2sd	%r13d, %xmm0
100006db5:	48 8b 05 44 bd 04 00	movq	310596(%rip), %rax
100006dbc:	0f 57 c9	xorps	%xmm1, %xmm1
100006dbf:	f3 41 0f 5a 0c 04	cvtss2sd	(%r12,%rax), %xmm1
100006dc5:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100006dc9:	66 0f 3a 0b c9 09	roundsd	$9, %xmm1, %xmm1
100006dcf:	41 ff c5	incl	%r13d
100006dd2:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
100006dd6:	73 8c	jae	0x100006d64
100006dd8:	4c 8b 2d 11 bd 04 00	movq	310545(%rip), %r13
100006ddf:	48 8b 4d c8	movq	-56(%rbp), %rcx
100006de3:	0f 57 c0	xorps	%xmm0, %xmm0
100006de6:	f3 43 0f 5a 04 3c	cvtss2sd	(%r12,%r15), %xmm0
100006dec:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
100006df0:	66 0f 3a 0b c0 09	roundsd	$9, %xmm0, %xmm0
100006df6:	66 0f e6 c8	cvttpd2dq	%xmm0, %xmm1
100006dfa:	f3 0f e6 c9	cvtdq2pd	%xmm1, %xmm1
100006dfe:	0f 57 d2	xorps	%xmm2, %xmm2
100006e01:	f3 41 0f 5a 14 0c	cvtss2sd	(%r12,%rcx), %xmm2
100006e07:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100006e0b:	66 0f 3a 0b d2 09	roundsd	$9, %xmm2, %xmm2
100006e11:	66 0f 2e d1	ucomisd	%xmm1, %xmm2
100006e15:	4c 8b 3d 04 5e 03 00	movq	220676(%rip), %r15 ## Objc message: -[%rdi moveTo:x:y:]
100006e1c:	0f 82 85 00 00 00	jb	0x100006ea7
100006e22:	f2 0f 2c d8	cvttsd2si	%xmm0, %ebx
100006e26:	48 8b 05 db a7 04 00	movq	305115(%rip), %rax ## Objc selector ref: lineTo:x:y:
100006e2d:	48 89 45 c0	movq	%rax, -64(%rbp)
100006e31:	ff c3	incl	%ebx
100006e33:	48 89 4d c8	movq	%rcx, -56(%rbp)
100006e37:	f3 43 0f 10 04 2c	movss	(%r12,%r13), %xmm0
100006e3d:	f2 0f 59 0d e3 11 03 00	mulsd	201187(%rip), %xmm1
100006e45:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100006e49:	f3 0f 11 4d d4	movss	%xmm1, -44(%rbp)
100006e4e:	4c 89 e7	movq	%r12, %rdi
100006e51:	48 8b 35 38 a9 04 00	movq	305464(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100006e58:	4c 89 f2	movq	%r14, %rdx
100006e5b:	41 ff d7	callq	*%r15
100006e5e:	48 8b 05 9b bc 04 00	movq	310427(%rip), %rax
100006e65:	f3 41 0f 10 04 04	movss	(%r12,%rax), %xmm0
100006e6b:	4c 89 e7	movq	%r12, %rdi
100006e6e:	48 8b 75 c0	movq	-64(%rbp), %rsi
100006e72:	4c 89 f2	movq	%r14, %rdx
100006e75:	f3 0f 10 4d d4	movss	-44(%rbp), %xmm1
100006e7a:	41 ff d7	callq	*%r15
100006e7d:	48 8b 4d c8	movq	-56(%rbp), %rcx
100006e81:	0f 57 c9	xorps	%xmm1, %xmm1
100006e84:	f2 0f 2a cb	cvtsi2sd	%ebx, %xmm1
100006e88:	0f 57 c0	xorps	%xmm0, %xmm0
100006e8b:	f3 41 0f 5a 04 0c	cvtss2sd	(%r12,%rcx), %xmm0
100006e91:	f2 0f 59 05 ef 10 03 00	mulsd	200943(%rip), %xmm0
100006e99:	66 0f 3a 0b c0 09	roundsd	$9, %xmm0, %xmm0
100006e9f:	ff c3	incl	%ebx
100006ea1:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
100006ea5:	73 90	jae	0x100006e37
100006ea7:	48 8b 35 8a b4 04 00	movq	308362(%rip), %rsi ## Objc selector ref: stroke
100006eae:	4c 89 f7	movq	%r14, %rdi
100006eb1:	48 83 c4 18	addq	$24, %rsp
100006eb5:	5b	popq	%rbx
100006eb6:	41 5c	popq	%r12
100006eb8:	41 5d	popq	%r13
100006eba:	41 5e	popq	%r14
100006ebc:	41 5f	popq	%r15
100006ebe:	5d	popq	%rbp
100006ebf:	ff 25 5b 5d 03 00	jmpq	*220507(%rip) ## Objc message: -[%rdi stroke]
100006ec5:	55	pushq	%rbp
100006ec6:	48 89 e5	movq	%rsp, %rbp
100006ec9:	5d	popq	%rbp
100006eca:	c3	retq
100006ecb:	55	pushq	%rbp
100006ecc:	48 89 e5	movq	%rsp, %rbp
100006ecf:	41 57	pushq	%r15
100006ed1:	41 56	pushq	%r14
100006ed3:	53	pushq	%rbx
100006ed4:	50	pushq	%rax
100006ed5:	49 89 d6	movq	%rdx, %r14
100006ed8:	48 89 fb	movq	%rdi, %rbx
100006edb:	4c 8b 3d 3e bc 04 00	movq	310334(%rip), %r15
100006ee2:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
100006ee6:	48 85 ff	testq	%rdi, %rdi
100006ee9:	74 05	je	0x100006ef0
100006eeb:	e8 e4 84 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100006ef0:	4e 89 34 3b	movq	%r14, (%rbx,%r15)
100006ef4:	48 83 c4 08	addq	$8, %rsp
100006ef8:	5b	popq	%rbx
100006ef9:	41 5e	popq	%r14
100006efb:	41 5f	popq	%r15
100006efd:	5d	popq	%rbp
100006efe:	c3	retq
100006eff:	55	pushq	%rbp
100006f00:	48 89 e5	movq	%rsp, %rbp
100006f03:	53	pushq	%rbx
100006f04:	48 83 ec 18	subq	$24, %rsp
100006f08:	48 89 fb	movq	%rdi, %rbx
100006f0b:	48 8b 35 46 ae 04 00	movq	306758(%rip), %rsi ## Objc selector ref: setData:
100006f12:	31 d2	xorl	%edx, %edx
100006f14:	ff 15 06 5d 03 00	callq	*220422(%rip) ## Objc message: -[%rdi setData:]
100006f1a:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100006f1e:	48 89 1f	movq	%rbx, (%rdi)
100006f21:	48 8b 05 a8 b8 04 00	movq	309416(%rip), %rax ## Objc class ref: PlotView
100006f28:	48 89 47 08	movq	%rax, 8(%rdi)
100006f2c:	48 8b 35 1d a1 04 00	movq	303389(%rip), %rsi ## Objc selector ref: dealloc
100006f33:	e8 a4 85 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100006f38:	48 83 c4 18	addq	$24, %rsp
100006f3c:	5b	popq	%rbx
100006f3d:	5d	popq	%rbp
100006f3e:	c3	retq
100006f3f:	55	pushq	%rbp
100006f40:	48 89 e5	movq	%rsp, %rbp
100006f43:	41 56	pushq	%r14
100006f45:	53	pushq	%rbx
100006f46:	48 8b 05 db bb 04 00	movq	310235(%rip), %rax
100006f4d:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
100006f51:	74 4a	je	0x100006f9d
100006f53:	48 89 fb	movq	%rdi, %rbx
100006f56:	48 8b 05 d3 bb 04 00	movq	310227(%rip), %rax
100006f5d:	8b 14 07	movl	(%rdi,%rax), %edx
100006f60:	48 8b 35 c1 ad 04 00	movq	306625(%rip), %rsi ## Objc selector ref: setColor:
100006f67:	4c 8b 35 b2 5c 03 00	movq	220338(%rip), %r14 ## Objc message: -[%rdi setColor:]
100006f6e:	41 ff d6	callq	*%r14
100006f71:	48 8b 05 c0 bb 04 00	movq	310208(%rip), %rax
100006f78:	83 3c 03 00	cmpl	$0, (%rbx,%rax)
100006f7c:	48 8d 05 ed a1 04 00	leaq	303597(%rip), %rax ## Objc selector ref: drawGamma
100006f83:	48 8d 0d 16 a2 04 00	leaq	303638(%rip), %rcx ## Objc selector ref: drawTable
100006f8a:	48 0f 44 c8	cmoveq	%rax, %rcx
100006f8e:	48 8b 31	movq	(%rcx), %rsi
100006f91:	48 89 df	movq	%rbx, %rdi
100006f94:	4c 89 f0	movq	%r14, %rax
100006f97:	5b	popq	%rbx
100006f98:	41 5e	popq	%r14
100006f9a:	5d	popq	%rbp
100006f9b:	ff e0	jmpq	*%rax
100006f9d:	5b	popq	%rbx
100006f9e:	41 5e	popq	%r14
100006fa0:	5d	popq	%rbp
100006fa1:	c3	retq
100006fa2:	55	pushq	%rbp
100006fa3:	48 89 e5	movq	%rsp, %rbp
100006fa6:	41 57	pushq	%r15
100006fa8:	41 56	pushq	%r14
100006faa:	41 55	pushq	%r13
100006fac:	41 54	pushq	%r12
100006fae:	53	pushq	%rbx
100006faf:	48 83 ec 48	subq	$72, %rsp
100006fb3:	48 89 fb	movq	%rdi, %rbx
100006fb6:	48 8b 3d 6b b6 04 00	movq	308843(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100006fbd:	48 8b 35 cc 9d 04 00	movq	302540(%rip), %rsi ## Objc selector ref: bezierPath
100006fc4:	ff 15 56 5c 03 00	callq	*220246(%rip) ## Objc message: +[NSBezierPath bezierPath]
100006fca:	48 89 45 d0	movq	%rax, -48(%rbp)
100006fce:	48 8b 05 6b bb 04 00	movq	310123(%rip), %rax
100006fd5:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
100006fda:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100006fde:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
100006fe2:	76 15	jbe	0x100006ff9
100006fe4:	48 8b 05 5d bb 04 00	movq	310109(%rip), %rax
100006feb:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
100006ff0:	48 8d 05 59 bb 04 00	leaq	310105(%rip), %rax
100006ff7:	eb 40	jmp	0x100007039
100006ff9:	48 8b 05 58 bb 04 00	movq	310104(%rip), %rax
100007000:	48 8b 0d 59 bb 04 00	movq	310105(%rip), %rcx
100007007:	f2 0f 59 04 03	mulsd	(%rbx,%rax), %xmm0
10000700c:	f2 0f 58 04 0b	addsd	(%rbx,%rcx), %xmm0
100007011:	48 8b 05 50 bb 04 00	movq	310096(%rip), %rax
100007018:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
10000701d:	e8 ea 84 02 00	callq	0x10002f50c ## symbol stub for: _pow
100007022:	66 0f 28 c8	movapd	%xmm0, %xmm1
100007026:	48 8b 05 43 bb 04 00	movq	310083(%rip), %rax
10000702d:	f2 0f 10 04 03	movsd	(%rbx,%rax), %xmm0
100007032:	48 8d 05 3f bb 04 00	leaq	310079(%rip), %rax
100007039:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000703d:	48 8b 00	movq	(%rax), %rax
100007040:	f2 0f 58 04 03	addsd	(%rbx,%rax), %xmm0
100007045:	0f 57 c9	xorps	%xmm1, %xmm1
100007048:	f2 0f 5a c8	cvtsd2ss	%xmm0, %xmm1
10000704c:	48 8b 35 3d a7 04 00	movq	304957(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100007053:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100007057:	48 89 df	movq	%rbx, %rdi
10000705a:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000705e:	ff 15 bc 5b 03 00	callq	*220092(%rip) ## Objc message: -[%rdi moveTo:x:y:]
100007064:	48 8b 05 ed ba 04 00	movq	309997(%rip), %rax
10000706b:	48 89 45 a0	movq	%rax, -96(%rbp)
10000706f:	48 8b 05 ea ba 04 00	movq	309994(%rip), %rax
100007076:	48 89 45 a8	movq	%rax, -88(%rbp)
10000707a:	48 8b 05 e7 ba 04 00	movq	309991(%rip), %rax
100007081:	48 89 45 b0	movq	%rax, -80(%rbp)
100007085:	48 8b 05 e4 ba 04 00	movq	309988(%rip), %rax
10000708c:	48 89 45 b8	movq	%rax, -72(%rbp)
100007090:	4c 8b 25 e1 ba 04 00	movq	309985(%rip), %r12
100007097:	48 8b 05 aa ba 04 00	movq	309930(%rip), %rax
10000709e:	48 89 45 c0	movq	%rax, -64(%rbp)
1000070a2:	4c 8b 2d a7 ba 04 00	movq	309927(%rip), %r13
1000070a9:	f2 0f 10 15 57 0f 03 00	movsd	200535(%rip), %xmm2
1000070b1:	66 41 be 32 00	movw	$50, %r14w
1000070b6:	4c 8b 3d 4b a5 04 00	movq	304459(%rip), %r15 ## Objc selector ref: lineTo:x:y:
1000070bd:	66 0f 28 da	movapd	%xmm2, %xmm3
1000070c1:	f2 0f 5e 1d 67 0f 03 00	divsd	200551(%rip), %xmm3
1000070c9:	48 8b 05 70 ba 04 00	movq	309872(%rip), %rax
1000070d0:	f2 0f 10 04 03	movsd	(%rbx,%rax), %xmm0
1000070d5:	66 0f 2e c3	ucomisd	%xmm3, %xmm0
1000070d9:	f2 0f 11 55 c8	movsd	%xmm2, -56(%rbp)
1000070de:	76 12	jbe	0x1000070f2
1000070e0:	48 8b 45 c0	movq	-64(%rbp), %rax
1000070e4:	f2 0f 10 04 03	movsd	(%rbx,%rax), %xmm0
1000070e9:	4c 89 e8	movq	%r13, %rax
1000070ec:	66 0f 28 cb	movapd	%xmm3, %xmm1
1000070f0:	eb 3f	jmp	0x100007131
1000070f2:	48 8b 45 a0	movq	-96(%rbp), %rax
1000070f6:	f2 0f 10 04 03	movsd	(%rbx,%rax), %xmm0
1000070fb:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
1000070ff:	48 8b 45 a8	movq	-88(%rbp), %rax
100007103:	f2 0f 58 04 03	addsd	(%rbx,%rax), %xmm0
100007108:	48 8b 45 b0	movq	-80(%rbp), %rax
10000710c:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
100007111:	f2 0f 11 5d 98	movsd	%xmm3, -104(%rbp)
100007116:	e8 f1 83 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000711b:	f2 0f 10 5d 98	movsd	-104(%rbp), %xmm3
100007120:	f2 0f 10 55 c8	movsd	-56(%rbp), %xmm2
100007125:	48 8b 45 b8	movq	-72(%rbp), %rax
100007129:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
10000712e:	4c 89 e0	movq	%r12, %rax
100007131:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100007135:	f2 0f 58 0c 03	addsd	(%rbx,%rax), %xmm1
10000713a:	66 0f 2e c9	ucomisd	%xmm1, %xmm1
10000713e:	7a 36	jp	0x100007176
100007140:	66 0f 28 c1	movapd	%xmm1, %xmm0
100007144:	66 0f 54 05 64 0e 03 00	andpd	200292(%rip), %xmm0
10000714c:	66 0f 2e 05 e4 0e 03 00	ucomisd	200420(%rip), %xmm0
100007154:	73 20	jae	0x100007176
100007156:	0f 57 c0	xorps	%xmm0, %xmm0
100007159:	f2 0f 5a c3	cvtsd2ss	%xmm3, %xmm0
10000715d:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100007161:	48 89 df	movq	%rbx, %rdi
100007164:	4c 89 fe	movq	%r15, %rsi
100007167:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000716b:	ff 15 af 5a 03 00	callq	*219823(%rip) ## Objc message: -[%rdi lineTo:x:y:]
100007171:	f2 0f 10 55 c8	movsd	-56(%rbp), %xmm2
100007176:	f2 0f 58 15 8a 0e 03 00	addsd	200330(%rip), %xmm2
10000717e:	66 41 ff ce	decw	%r14w
100007182:	0f 85 35 ff ff ff	jne	0x1000070bd
100007188:	48 8b 35 a9 b1 04 00	movq	307625(%rip), %rsi ## Objc selector ref: stroke
10000718f:	48 8b 7d d0	movq	-48(%rbp), %rdi
100007193:	48 83 c4 48	addq	$72, %rsp
100007197:	5b	popq	%rbx
100007198:	41 5c	popq	%r12
10000719a:	41 5d	popq	%r13
10000719c:	41 5e	popq	%r14
10000719e:	41 5f	popq	%r15
1000071a0:	5d	popq	%rbp
1000071a1:	ff 25 79 5a 03 00	jmpq	*219769(%rip) ## Objc message: -[%rdi stroke]
1000071a7:	55	pushq	%rbp
1000071a8:	48 89 e5	movq	%rsp, %rbp
1000071ab:	41 57	pushq	%r15
1000071ad:	41 56	pushq	%r14
1000071af:	41 55	pushq	%r13
1000071b1:	41 54	pushq	%r12
1000071b3:	53	pushq	%rbx
1000071b4:	48 83 ec 18	subq	$24, %rsp
1000071b8:	48 89 fb	movq	%rdi, %rbx
1000071bb:	48 8b 05 5e b9 04 00	movq	309598(%rip), %rax
1000071c2:	48 8b 04 07	movq	(%rdi,%rax), %rax
1000071c6:	48 89 45 d0	movq	%rax, -48(%rbp)
1000071ca:	48 8b 3d 57 b4 04 00	movq	308311(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
1000071d1:	48 8b 35 b8 9b 04 00	movq	302008(%rip), %rsi ## Objc selector ref: bezierPath
1000071d8:	ff 15 42 5a 03 00	callq	*219714(%rip) ## Objc message: +[NSBezierPath bezierPath]
1000071de:	49 89 c6	movq	%rax, %r14
1000071e1:	48 8b 05 50 b9 04 00	movq	309584(%rip), %rax
1000071e8:	8b 04 03	movl	(%rbx,%rax), %eax
1000071eb:	85 c0	testl	%eax, %eax
1000071ed:	0f 84 bd 00 00 00	je	0x1000072b0
1000071f3:	4c 8b 2d 0e a4 04 00	movq	304142(%rip), %r13 ## Objc selector ref: lineTo:x:y:
1000071fa:	0f 57 c0	xorps	%xmm0, %xmm0
1000071fd:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100007202:	4c 8b 25 87 a5 04 00	movq	304519(%rip), %r12 ## Objc selector ref: moveTo:x:y:
100007209:	31 c9	xorl	%ecx, %ecx
10000720b:	44 0f b7 f9	movzwl	%cx, %r15d
10000720f:	ff c8	decl	%eax
100007211:	48 8b 0d 68 b9 04 00	movq	309608(%rip), %rcx
100007218:	8b 0c 0b	movl	(%rbx,%rcx), %ecx
10000721b:	83 f9 02	cmpl	$2, %ecx
10000721e:	74 24	je	0x100007244
100007220:	83 f9 01	cmpl	$1, %ecx
100007223:	f2 0f 10 55 c8	movsd	-56(%rbp), %xmm2
100007228:	75 32	jne	0x10000725c
10000722a:	48 8b 4d d0	movq	-48(%rbp), %rcx
10000722e:	42 0f b6 0c 39	movzbl	(%rcx,%r15), %ecx
100007233:	0f 57 d2	xorps	%xmm2, %xmm2
100007236:	f2 0f 2a d1	cvtsi2sd	%ecx, %xmm2
10000723a:	f2 0f 5e 15 06 0e 03 00	divsd	200198(%rip), %xmm2
100007242:	eb 18	jmp	0x10000725c
100007244:	48 8b 4d d0	movq	-48(%rbp), %rcx
100007248:	42 0f b7 0c 79	movzwl	(%rcx,%r15,2), %ecx
10000724d:	0f 57 d2	xorps	%xmm2, %xmm2
100007250:	f2 0f 2a d1	cvtsi2sd	%ecx, %xmm2
100007254:	f2 0f 5e 15 e4 0d 03 00	divsd	200164(%rip), %xmm2
10000725c:	0f 57 c0	xorps	%xmm0, %xmm0
10000725f:	f2 41 0f 2a c7	cvtsi2sd	%r15d, %xmm0
100007264:	0f 57 c9	xorps	%xmm1, %xmm1
100007267:	f2 48 0f 2a c8	cvtsi2sd	%rax, %xmm1
10000726c:	f2 0f 5e c1	divsd	%xmm1, %xmm0
100007270:	66 45 85 ff	testw	%r15w, %r15w
100007274:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100007278:	f2 0f 11 55 c8	movsd	%xmm2, -56(%rbp)
10000727d:	0f 57 c9	xorps	%xmm1, %xmm1
100007280:	f2 0f 5a ca	cvtsd2ss	%xmm2, %xmm1
100007284:	4c 89 ee	movq	%r13, %rsi
100007287:	49 0f 44 f4	cmoveq	%r12, %rsi
10000728b:	48 89 df	movq	%rbx, %rdi
10000728e:	4c 89 f2	movq	%r14, %rdx
100007291:	ff 15 89 59 03 00	callq	*219529(%rip) ## Objc message: -[%rdi moveTo:x:y:]
100007297:	41 8d 4f 01	leal	1(%r15), %ecx
10000729b:	0f b7 d1	movzwl	%cx, %edx
10000729e:	48 8b 05 93 b8 04 00	movq	309395(%rip), %rax
1000072a5:	8b 04 03	movl	(%rbx,%rax), %eax
1000072a8:	39 d0	cmpl	%edx, %eax
1000072aa:	0f 87 5b ff ff ff	ja	0x10000720b
1000072b0:	48 8b 35 81 b0 04 00	movq	307329(%rip), %rsi ## Objc selector ref: stroke
1000072b7:	4c 89 f7	movq	%r14, %rdi
1000072ba:	48 83 c4 18	addq	$24, %rsp
1000072be:	5b	popq	%rbx
1000072bf:	41 5c	popq	%r12
1000072c1:	41 5d	popq	%r13
1000072c3:	41 5e	popq	%r14
1000072c5:	41 5f	popq	%r15
1000072c7:	5d	popq	%rbp
1000072c8:	ff 25 52 59 03 00	jmpq	*219474(%rip) ## Objc message: -[%rdi stroke]
1000072ce:	55	pushq	%rbp
1000072cf:	48 89 e5	movq	%rsp, %rbp
1000072d2:	48 8b 05 4f b8 04 00	movq	309327(%rip), %rax
1000072d9:	c6 04 07 00	movb	$0, (%rdi,%rax)
1000072dd:	5d	popq	%rbp
1000072de:	c3	retq
1000072df:	55	pushq	%rbp
1000072e0:	48 89 e5	movq	%rsp, %rbp
1000072e3:	41 57	pushq	%r15
1000072e5:	41 56	pushq	%r14
1000072e7:	41 55	pushq	%r13
1000072e9:	41 54	pushq	%r12
1000072eb:	53	pushq	%rbx
1000072ec:	50	pushq	%rax
1000072ed:	45 89 c7	movl	%r8d, %r15d
1000072f0:	89 cb	movl	%ecx, %ebx
1000072f2:	49 89 d6	movq	%rdx, %r14
1000072f5:	49 89 fd	movq	%rdi, %r13
1000072f8:	4c 8b 25 59 aa 04 00	movq	305753(%rip), %r12 ## Objc selector ref: setData:
1000072ff:	4c 89 e6	movq	%r12, %rsi
100007302:	31 d2	xorl	%edx, %edx
100007304:	ff 15 16 59 03 00	callq	*219414(%rip) ## Objc message: -[%rdi setData:]
10000730a:	48 8b 05 6f b8 04 00	movq	309359(%rip), %rax
100007311:	45 89 7c 05 00	movl	%r15d, (%r13,%rax)
100007316:	85 db	testl	%ebx, %ebx
100007318:	74 3b	je	0x100007355
10000731a:	83 fb 02	cmpl	$2, %ebx
10000731d:	0f 84 88 00 00 00	je	0x1000073ab
100007323:	83 fb 01	cmpl	$1, %ebx
100007326:	0f 85 b2 00 00 00	jne	0x1000073de
10000732c:	41 83 ff 02	cmpl	$2, %r15d
100007330:	0f 84 07 01 00 00	je	0x10000743d
100007336:	41 83 ff 01	cmpl	$1, %r15d
10000733a:	0f 85 22 01 00 00	jne	0x100007462
100007340:	41 0f b6 06	movzbl	(%r14), %eax
100007344:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
100007348:	f2 0f 59 05 08 0d 03 00	mulsd	199944(%rip), %xmm0
100007350:	e9 ff 00 00 00	jmp	0x100007454
100007355:	48 8b 05 dc b7 04 00	movq	309212(%rip), %rax
10000735c:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
100007365:	48 8b 05 d4 b7 04 00	movq	309204(%rip), %rax
10000736c:	48 b9 9a 99 99 99 99 99 f1 3f	movabsq	$4607632778762754458, %rcx
100007376:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
10000737b:	48 8b 05 c6 b7 04 00	movq	309190(%rip), %rax
100007382:	48 b9 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rcx
10000738c:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007391:	48 8b 05 b8 b7 04 00	movq	309176(%rip), %rax
100007398:	31 c9	xorl	%ecx, %ecx
10000739a:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
10000739f:	48 8b 05 ca b7 04 00	movq	309194(%rip), %rax
1000073a6:	e9 99 01 00 00	jmp	0x100007544
1000073ab:	41 83 ff 01	cmpl	$1, %r15d
1000073af:	0f 84 11 01 00 00	je	0x1000074c6
1000073b5:	41 83 ff 02	cmpl	$2, %r15d
1000073b9:	0f 85 22 01 00 00	jne	0x1000074e1
1000073bf:	66 41 0f 6e 06	movd	(%r14), %xmm0
1000073c4:	66 0f 38 00 05 f3 0b 03 00	pshufb	199667(%rip), %xmm0
1000073cd:	f3 0f e6 c0	cvtdq2pd	%xmm0, %xmm0
1000073d1:	66 0f 5e 05 f7 0b 03 00	divpd	199671(%rip), %xmm0
1000073d9:	e9 0f 01 00 00	jmp	0x1000074ed
1000073de:	4c 89 75 d0	movq	%r14, -48(%rbp)
1000073e2:	45 89 fe	movl	%r15d, %r14d
1000073e5:	44 0f af f3	imull	%ebx, %r14d
1000073e9:	48 8b 05 48 b7 04 00	movq	309064(%rip), %rax
1000073f0:	41 89 5c 05 00	movl	%ebx, (%r13,%rax)
1000073f5:	4c 89 f7	movq	%r14, %rdi
1000073f8:	e8 b5 80 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
1000073fd:	48 89 c3	movq	%rax, %rbx
100007400:	4c 89 ef	movq	%r13, %rdi
100007403:	4c 89 e6	movq	%r12, %rsi
100007406:	48 89 c2	movq	%rax, %rdx
100007409:	ff 15 11 58 03 00	callq	*219153(%rip) ## Objc message: -[%rdi setData:]
10000740f:	41 83 ff 02	cmpl	$2, %r15d
100007413:	75 14	jne	0x100007429
100007415:	48 8b 7d d0	movq	-48(%rbp), %rdi
100007419:	48 89 de	movq	%rbx, %rsi
10000741c:	4c 89 f2	movq	%r14, %rdx
10000741f:	e8 24 81 02 00	callq	0x10002f548 ## symbol stub for: _swab
100007424:	e9 44 01 00 00	jmp	0x10000756d
100007429:	48 89 df	movq	%rbx, %rdi
10000742c:	48 8b 75 d0	movq	-48(%rbp), %rsi
100007430:	4c 89 f2	movq	%r14, %rdx
100007433:	e8 80 80 02 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
100007438:	e9 30 01 00 00	jmp	0x10000756d
10000743d:	41 0f b7 06	movzwl	(%r14), %eax
100007441:	66 c1 c0 08	rolw	$8, %ax
100007445:	0f b7 c0	movzwl	%ax, %eax
100007448:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
10000744c:	f2 0f 59 05 fc 0b 03 00	mulsd	199676(%rip), %xmm0
100007454:	48 8b 05 0d b7 04 00	movq	309005(%rip), %rax
10000745b:	f2 41 0f 11 44 05 00	movsd	%xmm0, (%r13,%rax)
100007462:	48 8b 05 cf b6 04 00	movq	308943(%rip), %rax
100007469:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
100007472:	48 8b 05 d7 b6 04 00	movq	308951(%rip), %rax
100007479:	31 c9	xorl	%ecx, %ecx
10000747b:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007480:	48 8b 05 f1 b6 04 00	movq	308977(%rip), %rax
100007487:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
10000748c:	48 8b 05 ad b6 04 00	movq	308909(%rip), %rax
100007493:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007498:	48 8b 05 a9 b6 04 00	movq	308905(%rip), %rax
10000749f:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
1000074a4:	48 8b 05 b5 b6 04 00	movq	308917(%rip), %rax
1000074ab:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
1000074b0:	48 8b 05 b9 b6 04 00	movq	308921(%rip), %rax
1000074b7:	48 b9 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rcx
1000074c1:	e9 96 00 00 00	jmp	0x10000755c
1000074c6:	41 0f b7 06	movzwl	(%r14), %eax
1000074ca:	66 0f 6e c0	movd	%eax, %xmm0
1000074ce:	66 0f 38 31 c0	pmovzxbd	%xmm0, %xmm0
1000074d3:	f3 0f e6 c0	cvtdq2pd	%xmm0, %xmm0
1000074d7:	66 0f 5e 05 01 0b 03 00	divpd	199425(%rip), %xmm0
1000074df:	eb 0c	jmp	0x1000074ed
1000074e1:	66 0f 57 c0	xorpd	%xmm0, %xmm0
1000074e5:	66 0f 16 05 1b 0b 03 00	movhpd	199451(%rip), %xmm0
1000074ed:	48 8b 05 44 b6 04 00	movq	308804(%rip), %rax
1000074f4:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
1000074fd:	48 8b 05 3c b6 04 00	movq	308796(%rip), %rax
100007504:	48 b9 9a 99 99 99 99 99 f1 3f	movabsq	$4607632778762754458, %rcx
10000750e:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007513:	66 0f 28 c8	movapd	%xmm0, %xmm1
100007517:	66 0f 15 c8	unpckhpd	%xmm0, %xmm1
10000751b:	f2 0f 5c c8	subsd	%xmm0, %xmm1
10000751f:	48 8b 05 22 b6 04 00	movq	308770(%rip), %rax
100007526:	f2 41 0f 11 4c 05 00	movsd	%xmm1, (%r13,%rax)
10000752d:	48 8b 05 1c b6 04 00	movq	308764(%rip), %rax
100007534:	66 41 0f 13 44 05 00	movlpd	%xmm0, (%r13,%rax)
10000753b:	48 8b 05 2e b6 04 00	movq	308782(%rip), %rax
100007542:	31 c9	xorl	%ecx, %ecx
100007544:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007549:	48 8b 05 18 b6 04 00	movq	308760(%rip), %rax
100007550:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007555:	48 8b 05 04 b6 04 00	movq	308740(%rip), %rax
10000755c:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
100007561:	48 8b 05 f0 b5 04 00	movq	308720(%rip), %rax
100007568:	49 89 4c 05 00	movq	%rcx, (%r13,%rax)
10000756d:	48 8b 05 b4 b5 04 00	movq	308660(%rip), %rax
100007574:	41 c6 44 05 00 01	movb	$1, (%r13,%rax)
10000757a:	48 8b 35 47 aa 04 00	movq	305735(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100007581:	4c 89 ef	movq	%r13, %rdi
100007584:	ba 01 00 00 00	movl	$1, %edx
100007589:	48 83 c4 08	addq	$8, %rsp
10000758d:	5b	popq	%rbx
10000758e:	41 5c	popq	%r12
100007590:	41 5d	popq	%r13
100007592:	41 5e	popq	%r14
100007594:	41 5f	popq	%r15
100007596:	5d	popq	%rbp
100007597:	ff 25 83 56 03 00	jmpq	*218755(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
10000759d:	55	pushq	%rbp
10000759e:	48 89 e5	movq	%rsp, %rbp
1000075a1:	41 57	pushq	%r15
1000075a3:	41 56	pushq	%r14
1000075a5:	41 55	pushq	%r13
1000075a7:	41 54	pushq	%r12
1000075a9:	53	pushq	%rbx
1000075aa:	50	pushq	%rax
1000075ab:	45 89 c6	movl	%r8d, %r14d
1000075ae:	41 89 cf	movl	%ecx, %r15d
1000075b1:	41 89 d4	movl	%edx, %r12d
1000075b4:	48 89 fb	movq	%rdi, %rbx
1000075b7:	48 8b 35 9a a7 04 00	movq	305050(%rip), %rsi ## Objc selector ref: setData:
1000075be:	45 31 ed	xorl	%r13d, %r13d
1000075c1:	31 d2	xorl	%edx, %edx
1000075c3:	ff 15 57 56 03 00	callq	*218711(%rip) ## Objc message: -[%rdi setData:]
1000075c9:	48 8b 05 68 b5 04 00	movq	308584(%rip), %rax
1000075d0:	c7 04 03 00 00 00 00	movl	$0, (%rbx,%rax)
1000075d7:	f2 41 0f 2a c4	cvtsi2sd	%r12d, %xmm0
1000075dc:	f2 0f 10 0d 7c 0a 03 00	movsd	199292(%rip), %xmm1
1000075e4:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000075e8:	48 8b 05 79 b5 04 00	movq	308601(%rip), %rax
1000075ef:	f2 0f 11 04 03	movsd	%xmm0, (%rbx,%rax)
1000075f4:	48 8b 05 55 b5 04 00	movq	308565(%rip), %rax
1000075fb:	4c 89 2c 03	movq	%r13, (%rbx,%rax)
1000075ff:	48 8b 05 3a b5 04 00	movq	308538(%rip), %rax
100007606:	4c 89 2c 03	movq	%r13, (%rbx,%rax)
10000760a:	48 8b 05 37 b5 04 00	movq	308535(%rip), %rax
100007611:	4c 89 2c 03	movq	%r13, (%rbx,%rax)
100007615:	48 8b 05 44 b5 04 00	movq	308548(%rip), %rax
10000761c:	4c 89 2c 03	movq	%r13, (%rbx,%rax)
100007620:	48 8b 05 31 b5 04 00	movq	308529(%rip), %rax
100007627:	48 b9 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rcx
100007631:	48 89 0c 03	movq	%rcx, (%rbx,%rax)
100007635:	0f 57 c0	xorps	%xmm0, %xmm0
100007638:	f2 41 0f 2a c7	cvtsi2sd	%r15d, %xmm0
10000763d:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007641:	48 8b 05 30 b5 04 00	movq	308528(%rip), %rax
100007648:	f2 0f 11 04 03	movsd	%xmm0, (%rbx,%rax)
10000764d:	f2 41 0f 2a d6	cvtsi2sd	%r14d, %xmm2
100007652:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100007656:	f2 0f 5c d0	subsd	%xmm0, %xmm2
10000765a:	48 8b 05 0f b5 04 00	movq	308495(%rip), %rax
100007661:	f2 0f 11 14 03	movsd	%xmm2, (%rbx,%rax)
100007666:	48 8b 05 bb b4 04 00	movq	308411(%rip), %rax
10000766d:	c6 04 03 01	movb	$1, (%rbx,%rax)
100007671:	48 8b 35 50 a9 04 00	movq	305488(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100007678:	48 89 df	movq	%rbx, %rdi
10000767b:	ba 01 00 00 00	movl	$1, %edx
100007680:	48 8b 05 99 55 03 00	movq	218521(%rip), %rax ## Objc message: -[%rdi setNeedsDisplay:]
100007687:	48 83 c4 08	addq	$8, %rsp
10000768b:	5b	popq	%rbx
10000768c:	41 5c	popq	%r12
10000768e:	41 5d	popq	%r13
100007690:	41 5e	popq	%r14
100007692:	41 5f	popq	%r15
100007694:	5d	popq	%rbp
100007695:	ff e0	jmpq	*%rax
100007697:	55	pushq	%rbp
100007698:	48 89 e5	movq	%rsp, %rbp
10000769b:	41 57	pushq	%r15
10000769d:	41 56	pushq	%r14
10000769f:	53	pushq	%rbx
1000076a0:	f2 0f 2a 02	cvtsi2sdl	(%rdx), %xmm0
1000076a4:	f2 0f 59 05 b4 09 03 00	mulsd	199092(%rip), %xmm0
1000076ac:	48 8b 05 b5 b4 04 00	movq	308405(%rip), %rax
1000076b3:	f2 0f 11 04 07	movsd	%xmm0, (%rdi,%rax)
1000076b8:	48 8b 05 79 b4 04 00	movq	308345(%rip), %rax
1000076bf:	c7 04 07 00 00 00 00	movl	$0, (%rdi,%rax)
1000076c6:	4c 8b 0d 83 b4 04 00	movq	308355(%rip), %r9
1000076cd:	31 db	xorl	%ebx, %ebx
1000076cf:	4a 89 1c 0f	movq	%rbx, (%rdi,%r9)
1000076d3:	4c 8b 15 9e b4 04 00	movq	308382(%rip), %r10
1000076da:	4a 89 1c 17	movq	%rbx, (%rdi,%r10)
1000076de:	4c 8b 05 5b b4 04 00	movq	308315(%rip), %r8
1000076e5:	4a 89 1c 07	movq	%rbx, (%rdi,%r8)
1000076e9:	4c 8b 1d 58 b4 04 00	movq	308312(%rip), %r11
1000076f0:	4a 89 1c 1f	movq	%rbx, (%rdi,%r11)
1000076f4:	4c 8b 35 65 b4 04 00	movq	308325(%rip), %r14
1000076fb:	4a 89 1c 37	movq	%rbx, (%rdi,%r14)
1000076ff:	4c 8b 3d 52 b4 04 00	movq	308306(%rip), %r15
100007706:	4a 89 1c 3f	movq	%rbx, (%rdi,%r15)
10000770a:	48 8b 05 5f b4 04 00	movq	308319(%rip), %rax
100007711:	48 bb 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rbx
10000771b:	48 89 1c 07	movq	%rbx, (%rdi,%rax)
10000771f:	66 83 f9 04	cmpw	$4, %cx
100007723:	0f 87 7d 01 00 00	ja	0x1000078a6
100007729:	89 c8	movl	%ecx, %eax
10000772b:	48 8d 35 9e 01 00 00	leaq	414(%rip), %rsi
100007732:	48 63 04 86	movslq	(%rsi,%rax,4), %rax
100007736:	48 01 f0	addq	%rsi, %rax
100007739:	ff e0	jmpq	*%rax
10000773b:	4a 89 1c 3f	movq	%rbx, (%rdi,%r15)
10000773f:	e9 62 01 00 00	jmp	0x1000078a6
100007744:	0f 57 c0	xorps	%xmm0, %xmm0
100007747:	f2 0f 2a 42 04	cvtsi2sdl	4(%rdx), %xmm0
10000774c:	f2 0f 10 0d 0c 09 03 00	movsd	198924(%rip), %xmm1
100007754:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007758:	f2 42 0f 11 04 3f	movsd	%xmm0, (%rdi,%r15)
10000775e:	0f 57 c0	xorps	%xmm0, %xmm0
100007761:	f2 0f 2a 42 08	cvtsi2sdl	8(%rdx), %xmm0
100007766:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000776a:	f2 42 0f 11 04 37	movsd	%xmm0, (%rdi,%r14)
100007770:	66 0f 57 05 78 08 03 00	xorpd	198776(%rip), %xmm0
100007778:	f2 42 0f 5e 04 3f	divsd	(%rdi,%r15), %xmm0
10000777e:	e9 a7 00 00 00	jmp	0x10000782a
100007783:	0f 57 c0	xorps	%xmm0, %xmm0
100007786:	f2 0f 2a 42 04	cvtsi2sdl	4(%rdx), %xmm0
10000778b:	f2 0f 10 0d cd 08 03 00	movsd	198861(%rip), %xmm1
100007793:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007797:	f2 42 0f 11 04 3f	movsd	%xmm0, (%rdi,%r15)
10000779d:	0f 57 c0	xorps	%xmm0, %xmm0
1000077a0:	f2 0f 2a 42 08	cvtsi2sdl	8(%rdx), %xmm0
1000077a5:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000077a9:	f2 42 0f 11 04 37	movsd	%xmm0, (%rdi,%r14)
1000077af:	66 0f 57 05 39 08 03 00	xorpd	198713(%rip), %xmm0
1000077b7:	f2 42 0f 5e 04 3f	divsd	(%rdi,%r15), %xmm0
1000077bd:	f2 42 0f 11 04 07	movsd	%xmm0, (%rdi,%r8)
1000077c3:	0f 57 c0	xorps	%xmm0, %xmm0
1000077c6:	f2 0f 2a 42 0c	cvtsi2sdl	12(%rdx), %xmm0
1000077cb:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000077cf:	f2 42 0f 11 04 0f	movsd	%xmm0, (%rdi,%r9)
1000077d5:	f2 42 0f 11 04 17	movsd	%xmm0, (%rdi,%r10)
1000077db:	e9 c6 00 00 00	jmp	0x1000078a6
1000077e0:	0f 57 c0	xorps	%xmm0, %xmm0
1000077e3:	f2 0f 2a 42 04	cvtsi2sdl	4(%rdx), %xmm0
1000077e8:	f2 0f 10 0d 70 08 03 00	movsd	198768(%rip), %xmm1
1000077f0:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000077f4:	f2 42 0f 11 04 3f	movsd	%xmm0, (%rdi,%r15)
1000077fa:	0f 57 c0	xorps	%xmm0, %xmm0
1000077fd:	f2 0f 2a 42 08	cvtsi2sdl	8(%rdx), %xmm0
100007802:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007806:	f2 42 0f 11 04 37	movsd	%xmm0, (%rdi,%r14)
10000780c:	0f 57 c0	xorps	%xmm0, %xmm0
10000780f:	f2 0f 2a 42 0c	cvtsi2sdl	12(%rdx), %xmm0
100007814:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007818:	f2 42 0f 11 04 1f	movsd	%xmm0, (%rdi,%r11)
10000781e:	0f 57 c0	xorps	%xmm0, %xmm0
100007821:	f2 0f 2a 42 10	cvtsi2sdl	16(%rdx), %xmm0
100007826:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000782a:	f2 42 0f 11 04 07	movsd	%xmm0, (%rdi,%r8)
100007830:	eb 74	jmp	0x1000078a6
100007832:	0f 57 c0	xorps	%xmm0, %xmm0
100007835:	f2 0f 2a 42 04	cvtsi2sdl	4(%rdx), %xmm0
10000783a:	f2 0f 10 0d 1e 08 03 00	movsd	198686(%rip), %xmm1
100007842:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007846:	f2 42 0f 11 04 3f	movsd	%xmm0, (%rdi,%r15)
10000784c:	0f 57 c0	xorps	%xmm0, %xmm0
10000784f:	f2 0f 2a 42 08	cvtsi2sdl	8(%rdx), %xmm0
100007854:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100007858:	f2 42 0f 11 04 37	movsd	%xmm0, (%rdi,%r14)
10000785e:	0f 57 c0	xorps	%xmm0, %xmm0
100007861:	f2 0f 2a 42 0c	cvtsi2sdl	12(%rdx), %xmm0
100007866:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000786a:	f2 42 0f 11 04 1f	movsd	%xmm0, (%rdi,%r11)
100007870:	0f 57 c0	xorps	%xmm0, %xmm0
100007873:	f2 0f 2a 42 10	cvtsi2sdl	16(%rdx), %xmm0
100007878:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000787c:	f2 42 0f 11 04 07	movsd	%xmm0, (%rdi,%r8)
100007882:	0f 57 c0	xorps	%xmm0, %xmm0
100007885:	f2 0f 2a 42 14	cvtsi2sdl	20(%rdx), %xmm0
10000788a:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000788e:	f2 42 0f 11 04 17	movsd	%xmm0, (%rdi,%r10)
100007894:	0f 57 c0	xorps	%xmm0, %xmm0
100007897:	f2 0f 2a 42 18	cvtsi2sdl	24(%rdx), %xmm0
10000789c:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000078a0:	f2 42 0f 11 04 0f	movsd	%xmm0, (%rdi,%r9)
1000078a6:	66 83 f9 05	cmpw	$5, %cx
1000078aa:	48 8b 05 77 b2 04 00	movq	307831(%rip), %rax
1000078b1:	0f 92 04 07	setb	(%rdi,%rax)
1000078b5:	48 8b 35 0c a7 04 00	movq	304908(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
1000078bc:	ba 01 00 00 00	movl	$1, %edx
1000078c1:	5b	popq	%rbx
1000078c2:	41 5e	popq	%r14
1000078c4:	41 5f	popq	%r15
1000078c6:	5d	popq	%rbp
1000078c7:	ff 25 53 53 03 00	jmpq	*217939(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
1000078cd:	0f 1f 00	nopl	(%rax)
6b fe ff ff	.long 4294966891	@ KIND_JUMP_TABLE32
74 fe ff ff	.long 4294966900	@ KIND_JUMP_TABLE32
b3 fe ff ff	.long 4294966963	@ KIND_JUMP_TABLE32
10 ff ff ff	.long 4294967056	@ KIND_JUMP_TABLE32
62 ff ff ff	.long 4294967138	@ KIND_JUMP_TABLE32
1000078e4:	55	pushq	%rbp
1000078e5:	48 89 e5	movq	%rsp, %rbp
1000078e8:	48 8b 05 41 b2 04 00	movq	307777(%rip), %rax
1000078ef:	89 14 07	movl	%edx, (%rdi,%rax)
1000078f2:	5d	popq	%rbp
1000078f3:	c3	retq
1000078f4:	55	pushq	%rbp
1000078f5:	48 89 e5	movq	%rsp, %rbp
1000078f8:	53	pushq	%rbx
1000078f9:	48 83 ec 18	subq	$24, %rsp
1000078fd:	48 89 fb	movq	%rdi, %rbx
100007900:	48 8b 05 81 b2 04 00	movq	307841(%rip), %rax
100007907:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10000790b:	ff 15 47 53 03 00	callq	*217927(%rip) ## literal pool symbol address: _objc_release
100007911:	48 8b 05 78 b2 04 00	movq	307832(%rip), %rax
100007918:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000791c:	48 85 ff	testq	%rdi, %rdi
10000791f:	74 05	je	0x100007926
100007921:	e8 ae 7a 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100007926:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10000792a:	48 89 1f	movq	%rbx, (%rdi)
10000792d:	48 8b 05 a4 ae 04 00	movq	306852(%rip), %rax ## Objc class ref: PlotViewXY
100007934:	48 89 47 08	movq	%rax, 8(%rdi)
100007938:	48 8b 35 11 97 04 00	movq	300817(%rip), %rsi ## Objc selector ref: dealloc
10000793f:	e8 98 7b 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100007944:	48 83 c4 18	addq	$24, %rsp
100007948:	5b	popq	%rbx
100007949:	5d	popq	%rbp
10000794a:	c3	retq
10000794b:	55	pushq	%rbp
10000794c:	48 89 e5	movq	%rsp, %rbp
10000794f:	41 57	pushq	%r15
100007951:	41 56	pushq	%r14
100007953:	41 55	pushq	%r13
100007955:	41 54	pushq	%r12
100007957:	53	pushq	%rbx
100007958:	48 83 ec 68	subq	$104, %rsp
10000795c:	48 8d 85 70 ff ff ff	leaq	-144(%rbp), %rax
100007963:	48 89 38	movq	%rdi, (%rax)
100007966:	48 8b 0d 6b ae 04 00	movq	306795(%rip), %rcx ## Objc class ref: PlotViewXY
10000796d:	48 89 48 08	movq	%rcx, 8(%rax)
100007971:	48 8b 35 d8 9a 04 00	movq	301784(%rip), %rsi ## Objc selector ref: initWithFrame:
100007978:	48 83 ec 20	subq	$32, %rsp
10000797c:	0f 28 45 10	movaps	16(%rbp), %xmm0
100007980:	0f 28 4d 20	movaps	32(%rbp), %xmm1
100007984:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100007989:	0f 11 04 24	movups	%xmm0, (%rsp)
10000798d:	48 89 c7	movq	%rax, %rdi
100007990:	e8 47 7b 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
100007995:	48 83 c4 20	addq	$32, %rsp
100007999:	49 89 c7	movq	%rax, %r15
10000799c:	48 8d 05 5d b1 04 00	leaq	307549(%rip), %rax
1000079a3:	48 8b 00	movq	(%rax), %rax
1000079a6:	41 c7 04 07 00 00 40 3f	movl	$1061158912, (%r15,%rax)
1000079ae:	48 8d 05 43 b1 04 00	leaq	307523(%rip), %rax
1000079b5:	48 8b 00	movq	(%rax), %rax
1000079b8:	41 c7 04 07 9a 99 59 3f	movl	$1062836634, (%r15,%rax)
1000079c0:	bf b5 4a 00 00	movl	$19125, %edi
1000079c5:	e8 e8 7a 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
1000079ca:	49 89 c5	movq	%rax, %r13
1000079cd:	48 8b 05 bc b1 04 00	movq	307644(%rip), %rax
1000079d4:	4d 8d 34 07	leaq	(%r15,%rax), %r14
1000079d8:	4d 89 2c 07	movq	%r13, (%r15,%rax)
1000079dc:	41 bc 54 00 00 00	movl	$84, %r12d
1000079e2:	f2 0f 10 05 36 06 03 00	movsd	198198(%rip), %xmm0
1000079ea:	f2 0f 10 25 86 05 03 00	movsd	198022(%rip), %xmm4
1000079f2:	f2 0f 10 1d 76 05 03 00	movsd	198006(%rip), %xmm3
1000079fa:	f2 44 0f 10 25 7d 06 03 00	movsd	198269(%rip), %xmm12
100007a03:	f2 44 0f 10 35 7c 06 03 00	movsd	198268(%rip), %xmm14
100007a0c:	f2 0f 10 35 7c 06 03 00	movsd	198268(%rip), %xmm6
100007a14:	f2 0f 10 3d 7c 06 03 00	movsd	198268(%rip), %xmm7
100007a1c:	f2 44 0f 10 05 7b 06 03 00	movsd	198267(%rip), %xmm8
100007a25:	f2 44 0f 10 0d 7a 06 03 00	movsd	198266(%rip), %xmm9
100007a2e:	f2 44 0f 10 15 d1 05 03 00	movsd	198097(%rip), %xmm10
100007a37:	66 45 0f 57 db	xorpd	%xmm11, %xmm11
100007a3c:	f2 0f 10 0d 6c 06 03 00	movsd	198252(%rip), %xmm1
100007a44:	0f 57 d2	xorps	%xmm2, %xmm2
100007a47:	f2 41 0f 2a d4	cvtsi2sd	%r12d, %xmm2
100007a4c:	f2 0f 58 d0	addsd	%xmm0, %xmm2
100007a50:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
100007a54:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100007a58:	66 0f 28 ea	movapd	%xmm2, %xmm5
100007a5c:	f2 0f 59 2d 04 06 03 00	mulsd	198148(%rip), %xmm5
100007a64:	f2 0f 11 6d a8	movsd	%xmm5, -88(%rbp)
100007a69:	66 0f 28 ea	movapd	%xmm2, %xmm5
100007a6d:	f2 0f 59 2d fb 05 03 00	mulsd	198139(%rip), %xmm5
100007a75:	f2 0f 11 6d b0	movsd	%xmm5, -80(%rbp)
100007a7a:	f2 0f 11 55 a0	movsd	%xmm2, -96(%rbp)
100007a7f:	f2 0f 59 15 f1 05 03 00	mulsd	198129(%rip), %xmm2
100007a87:	f2 0f 11 55 b8	movsd	%xmm2, -72(%rbp)
100007a8c:	31 db	xorl	%ebx, %ebx
100007a8e:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100007a92:	f2 0f 11 55 d0	movsd	%xmm2, -48(%rbp)
100007a97:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100007a9c:	f2 0f 58 d0	addsd	%xmm0, %xmm2
100007aa0:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
100007aa4:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100007aa8:	f2 0f 10 45 a0	movsd	-96(%rbp), %xmm0
100007aad:	f2 0f 58 c2	addsd	%xmm2, %xmm0
100007ab1:	66 0f 28 e3	movapd	%xmm3, %xmm4
100007ab5:	f2 0f 5c e0	subsd	%xmm0, %xmm4
100007ab9:	66 0f 28 da	movapd	%xmm2, %xmm3
100007abd:	f2 41 0f 59 dc	mulsd	%xmm12, %xmm3
100007ac2:	f2 0f 58 5d a8	addsd	-88(%rbp), %xmm3
100007ac7:	66 0f 28 c4	movapd	%xmm4, %xmm0
100007acb:	f2 41 0f 59 c6	mulsd	%xmm14, %xmm0
100007ad0:	f2 0f 58 c3	addsd	%xmm3, %xmm0
100007ad4:	66 0f 28 da	movapd	%xmm2, %xmm3
100007ad8:	f2 0f 59 de	mulsd	%xmm6, %xmm3
100007adc:	f2 0f 58 5d b0	addsd	-80(%rbp), %xmm3
100007ae1:	66 0f 28 ec	movapd	%xmm4, %xmm5
100007ae5:	f2 0f 59 ef	mulsd	%xmm7, %xmm5
100007ae9:	f2 0f 58 eb	addsd	%xmm3, %xmm5
100007aed:	f2 41 0f 59 d0	mulsd	%xmm8, %xmm2
100007af2:	f2 0f 58 55 b8	addsd	-72(%rbp), %xmm2
100007af7:	f2 41 0f 59 e1	mulsd	%xmm9, %xmm4
100007afc:	f2 0f 58 e2	addsd	%xmm2, %xmm4
100007b00:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007b05:	f2 0f 5d d0	minsd	%xmm0, %xmm2
100007b09:	f2 41 0f c2 c3 01	cmpltsd	%xmm11, %xmm0
100007b0f:	66 0f 55 c2	andnpd	%xmm2, %xmm0
100007b13:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007b18:	f2 0f 5d d5	minsd	%xmm5, %xmm2
100007b1c:	f2 41 0f c2 eb 01	cmpltsd	%xmm11, %xmm5
100007b22:	66 0f 55 ea	andnpd	%xmm2, %xmm5
100007b26:	66 0f 29 6d c0	movapd	%xmm5, -64(%rbp)
100007b2b:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007b30:	f2 0f 5d d4	minsd	%xmm4, %xmm2
100007b34:	f2 41 0f c2 e3 01	cmpltsd	%xmm11, %xmm4
100007b3a:	66 0f 55 e2	andnpd	%xmm2, %xmm4
100007b3e:	66 0f 29 65 90	movapd	%xmm4, -112(%rbp)
100007b43:	e8 c4 79 02 00	callq	0x10002f50c ## symbol stub for: _pow
100007b48:	66 0f 29 45 80	movapd	%xmm0, -128(%rbp)
100007b4d:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
100007b51:	f2 0f 10 0d 57 05 03 00	movsd	197975(%rip), %xmm1
100007b59:	e8 ae 79 02 00	callq	0x10002f50c ## symbol stub for: _pow
100007b5e:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100007b62:	66 0f 28 45 90	movapd	-112(%rbp), %xmm0
100007b67:	f2 0f 10 0d 41 05 03 00	movsd	197953(%rip), %xmm1
100007b6f:	e8 98 79 02 00	callq	0x10002f50c ## symbol stub for: _pow
100007b74:	f2 44 0f 10 2d cb 04 03 00	movsd	197835(%rip), %xmm13
100007b7d:	f2 0f 10 0d 2b 05 03 00	movsd	197931(%rip), %xmm1
100007b85:	66 45 0f 57 db	xorpd	%xmm11, %xmm11
100007b8a:	f2 44 0f 10 15 75 04 03 00	movsd	197749(%rip), %xmm10
100007b93:	f2 44 0f 10 0d 0c 05 03 00	movsd	197900(%rip), %xmm9
100007b9c:	f2 44 0f 10 05 fb 04 03 00	movsd	197883(%rip), %xmm8
100007ba5:	f2 0f 10 3d eb 04 03 00	movsd	197867(%rip), %xmm7
100007bad:	f2 0f 10 35 db 04 03 00	movsd	197851(%rip), %xmm6
100007bb5:	f2 44 0f 10 35 ca 04 03 00	movsd	197834(%rip), %xmm14
100007bbe:	f2 44 0f 10 25 b9 04 03 00	movsd	197817(%rip), %xmm12
100007bc7:	66 0f 28 6d 80	movapd	-128(%rbp), %xmm5
100007bcc:	66 0f 28 e5	movapd	%xmm5, %xmm4
100007bd0:	f2 41 0f 59 e5	mulsd	%xmm13, %xmm4
100007bd5:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007bda:	f2 0f c2 d5 01	cmpltsd	%xmm5, %xmm2
100007bdf:	66 0f 28 da	movapd	%xmm2, %xmm3
100007be3:	66 0f 55 dc	andnpd	%xmm4, %xmm3
100007be7:	66 41 0f 54 d5	andpd	%xmm13, %xmm2
100007bec:	66 0f 56 d3	orpd	%xmm3, %xmm2
100007bf0:	f2 41 0f c2 eb 01	cmpltsd	%xmm11, %xmm5
100007bf6:	66 0f 55 ea	andnpd	%xmm2, %xmm5
100007bfa:	f2 0f 2c c5	cvttsd2si	%xmm5, %eax
100007bfe:	41 88 44 1d 00	movb	%al, (%r13,%rbx)
100007c03:	66 0f 28 6d c0	movapd	-64(%rbp), %xmm5
100007c08:	66 0f 28 e5	movapd	%xmm5, %xmm4
100007c0c:	f2 41 0f 59 e5	mulsd	%xmm13, %xmm4
100007c11:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007c16:	f2 0f c2 d5 01	cmpltsd	%xmm5, %xmm2
100007c1b:	66 0f 28 da	movapd	%xmm2, %xmm3
100007c1f:	66 0f 55 dc	andnpd	%xmm4, %xmm3
100007c23:	66 41 0f 54 d5	andpd	%xmm13, %xmm2
100007c28:	66 0f 56 d3	orpd	%xmm3, %xmm2
100007c2c:	f2 41 0f c2 eb 01	cmpltsd	%xmm11, %xmm5
100007c32:	66 0f 55 ea	andnpd	%xmm2, %xmm5
100007c36:	f2 0f 2c c5	cvttsd2si	%xmm5, %eax
100007c3a:	41 88 44 1d 01	movb	%al, 1(%r13,%rbx)
100007c3f:	66 0f 28 e0	movapd	%xmm0, %xmm4
100007c43:	f2 41 0f 59 e5	mulsd	%xmm13, %xmm4
100007c48:	66 41 0f 28 d2	movapd	%xmm10, %xmm2
100007c4d:	f2 0f c2 d0 01	cmpltsd	%xmm0, %xmm2
100007c52:	66 0f 28 da	movapd	%xmm2, %xmm3
100007c56:	66 0f 55 dc	andnpd	%xmm4, %xmm3
100007c5a:	66 41 0f 54 d5	andpd	%xmm13, %xmm2
100007c5f:	66 0f 56 d3	orpd	%xmm3, %xmm2
100007c63:	f2 0f 10 1d 05 03 03 00	movsd	197381(%rip), %xmm3
100007c6b:	f2 41 0f c2 c3 01	cmpltsd	%xmm11, %xmm0
100007c71:	66 0f 55 c2	andnpd	%xmm2, %xmm0
100007c75:	f2 0f 10 25 fb 02 03 00	movsd	197371(%rip), %xmm4
100007c7d:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100007c82:	f2 0f 2c c0	cvttsd2si	%xmm0, %eax
100007c86:	f2 0f 10 05 92 03 03 00	movsd	197522(%rip), %xmm0
100007c8e:	41 88 44 1d 02	movb	%al, 2(%r13,%rbx)
100007c93:	f2 41 0f 58 d2	addsd	%xmm10, %xmm2
100007c98:	48 83 c3 03	addq	$3, %rbx
100007c9c:	81 fb e1 00 00 00	cmpl	$225, %ebx
100007ca2:	0f 85 ea fd ff ff	jne	0x100007a92
100007ca8:	49 01 dd	addq	%rbx, %r13
100007cab:	41 83 ec 01	subl	$1, %r12d
100007caf:	0f 83 8f fd ff ff	jae	0x100007a44
100007cb5:	48 8b 3d 74 a9 04 00	movq	305524(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBitmapImageRep
100007cbc:	e8 fd 77 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100007cc1:	48 8b 35 58 97 04 00	movq	300888(%rip), %rsi ## Objc selector ref: initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:
100007cc8:	4c 8d 15 31 58 03 00	leaq	219185(%rip), %r10 ## Objc cfstring ref: @"NSDeviceRGBColorSpace"
100007ccf:	31 db	xorl	%ebx, %ebx
100007cd1:	b9 4b 00 00 00	movl	$75, %ecx
100007cd6:	41 b8 55 00 00 00	movl	$85, %r8d
100007cdc:	41 b9 08 00 00 00	movl	$8, %r9d
100007ce2:	48 89 c7	movq	%rax, %rdi
100007ce5:	4c 89 f2	movq	%r14, %rdx
100007ce8:	6a 18	pushq	$24
100007cea:	68 e1 00 00 00	pushq	$225
100007cef:	41 52	pushq	%r10
100007cf1:	53	pushq	%rbx
100007cf2:	53	pushq	%rbx
100007cf3:	6a 03	pushq	$3
100007cf5:	ff 15 25 4f 03 00	callq	*216869(%rip) ## Objc message: +[NSBitmapImageRep initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:]
100007cfb:	48 83 c4 30	addq	$48, %rsp
100007cff:	48 8b 0d 82 ae 04 00	movq	306818(%rip), %rcx
100007d06:	49 89 04 0f	movq	%rax, (%r15,%rcx)
100007d0a:	4c 89 f8	movq	%r15, %rax
100007d0d:	48 83 c4 68	addq	$104, %rsp
100007d11:	5b	popq	%rbx
100007d12:	41 5c	popq	%r12
100007d14:	41 5d	popq	%r13
100007d16:	41 5e	popq	%r14
100007d18:	41 5f	popq	%r15
100007d1a:	5d	popq	%rbp
100007d1b:	c3	retq
100007d1c:	55	pushq	%rbp
100007d1d:	48 89 e5	movq	%rsp, %rbp
100007d20:	41 57	pushq	%r15
100007d22:	41 56	pushq	%r14
100007d24:	41 55	pushq	%r13
100007d26:	41 54	pushq	%r12
100007d28:	53	pushq	%rbx
100007d29:	50	pushq	%rax
100007d2a:	49 89 ff	movq	%rdi, %r15
100007d2d:	48 8b 3d f4 a8 04 00	movq	305396(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100007d34:	48 8b 35 55 90 04 00	movq	299093(%rip), %rsi ## Objc selector ref: bezierPath
100007d3b:	ff 15 df 4e 03 00	callq	*216799(%rip) ## Objc message: +[NSBezierPath bezierPath]
100007d41:	49 89 c6	movq	%rax, %r14
100007d44:	48 8b 05 4d ae 04 00	movq	306765(%rip), %rax
100007d4b:	41 80 3c 07 00	cmpb	$0, (%r15,%rax)
100007d50:	0f 84 f9 00 00 00	je	0x100007e4f
100007d56:	41 80 7c 07 01 00	cmpb	$0, 1(%r15,%rax)
100007d5c:	0f 84 ed 00 00 00	je	0x100007e4f
100007d62:	41 80 7c 07 02 00	cmpb	$0, 2(%r15,%rax)
100007d68:	0f 84 e1 00 00 00	je	0x100007e4f
100007d6e:	48 8b 05 2b ae 04 00	movq	306731(%rip), %rax
100007d75:	f2 41 0f 5a 04 07	cvtsd2ss	(%r15,%rax), %xmm0
100007d7b:	49 89 c4	movq	%rax, %r12
100007d7e:	4c 8b 2d 23 ae 04 00	movq	306723(%rip), %r13
100007d85:	f2 43 0f 5a 0c 2f	cvtsd2ss	(%r15,%r13), %xmm1
100007d8b:	48 8b 35 fe 99 04 00	movq	301566(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100007d92:	48 8b 1d 87 4e 03 00	movq	216711(%rip), %rbx ## Objc message: -[%rdi moveTo:x:y:]
100007d99:	4c 89 ff	movq	%r15, %rdi
100007d9c:	4c 89 f2	movq	%r14, %rdx
100007d9f:	ff d3	callq	*%rbx
100007da1:	0f 57 c0	xorps	%xmm0, %xmm0
100007da4:	f2 43 0f 5a 44 27 08	cvtsd2ss	8(%r15,%r12), %xmm0
100007dab:	0f 57 c9	xorps	%xmm1, %xmm1
100007dae:	f2 43 0f 5a 4c 2f 08	cvtsd2ss	8(%r15,%r13), %xmm1
100007db5:	4c 8b 25 4c 98 04 00	movq	301132(%rip), %r12 ## Objc selector ref: lineTo:x:y:
100007dbc:	4c 89 ff	movq	%r15, %rdi
100007dbf:	4c 89 e6	movq	%r12, %rsi
100007dc2:	4c 89 f2	movq	%r14, %rdx
100007dc5:	ff d3	callq	*%rbx
100007dc7:	48 8b 05 d2 ad 04 00	movq	306642(%rip), %rax
100007dce:	0f 57 c0	xorps	%xmm0, %xmm0
100007dd1:	f2 41 0f 5a 44 07 10	cvtsd2ss	16(%r15,%rax), %xmm0
100007dd8:	0f 57 c9	xorps	%xmm1, %xmm1
100007ddb:	f2 43 0f 5a 4c 2f 10	cvtsd2ss	16(%r15,%r13), %xmm1
100007de2:	4c 89 ff	movq	%r15, %rdi
100007de5:	4c 89 e6	movq	%r12, %rsi
100007de8:	4c 89 f2	movq	%r14, %rdx
100007deb:	ff d3	callq	*%rbx
100007ded:	48 8b 05 ac ad 04 00	movq	306604(%rip), %rax
100007df4:	0f 57 c0	xorps	%xmm0, %xmm0
100007df7:	f2 41 0f 5a 04 07	cvtsd2ss	(%r15,%rax), %xmm0
100007dfd:	0f 57 c9	xorps	%xmm1, %xmm1
100007e00:	f2 43 0f 5a 0c 2f	cvtsd2ss	(%r15,%r13), %xmm1
100007e06:	4c 89 ff	movq	%r15, %rdi
100007e09:	4c 89 e6	movq	%r12, %rsi
100007e0c:	4c 89 f2	movq	%r14, %rdx
100007e0f:	ff d3	callq	*%rbx
100007e11:	48 8b 3d 08 a8 04 00	movq	305160(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100007e18:	48 8b 35 c9 90 04 00	movq	299209(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100007e1f:	f2 0f 10 05 91 02 03 00	movsd	197265(%rip), %xmm0
100007e27:	f2 0f 10 1d 91 02 03 00	movsd	197265(%rip), %xmm3
100007e2f:	0f 28 c8	movaps	%xmm0, %xmm1
100007e32:	0f 28 d0	movaps	%xmm0, %xmm2
100007e35:	ff d3	callq	*%rbx
100007e37:	48 8b 35 32 9e 04 00	movq	302642(%rip), %rsi ## Objc selector ref: set
100007e3e:	48 89 c7	movq	%rax, %rdi
100007e41:	ff d3	callq	*%rbx
100007e43:	48 8b 35 ee a4 04 00	movq	304366(%rip), %rsi ## Objc selector ref: stroke
100007e4a:	4c 89 f7	movq	%r14, %rdi
100007e4d:	ff d3	callq	*%rbx
100007e4f:	31 db	xorl	%ebx, %ebx
100007e51:	4c 8b 35 00 93 04 00	movq	299776(%rip), %r14 ## Objc selector ref: drawColor:
100007e58:	4c 8b 25 c1 4d 03 00	movq	216513(%rip), %r12 ## Objc message: +[NSColor drawColor:]
100007e5f:	4c 89 ff	movq	%r15, %rdi
100007e62:	4c 89 f6	movq	%r14, %rsi
100007e65:	89 da	movl	%ebx, %edx
100007e67:	41 ff d4	callq	*%r12
100007e6a:	ff c3	incl	%ebx
100007e6c:	83 fb 09	cmpl	$9, %ebx
100007e6f:	75 ee	jne	0x100007e5f
100007e71:	48 83 c4 08	addq	$8, %rsp
100007e75:	5b	popq	%rbx
100007e76:	41 5c	popq	%r12
100007e78:	41 5d	popq	%r13
100007e7a:	41 5e	popq	%r14
100007e7c:	41 5f	popq	%r15
100007e7e:	5d	popq	%rbp
100007e7f:	c3	retq
100007e80:	55	pushq	%rbp
100007e81:	48 89 e5	movq	%rsp, %rbp
100007e84:	41 57	pushq	%r15
100007e86:	41 56	pushq	%r14
100007e88:	41 55	pushq	%r13
100007e8a:	41 54	pushq	%r12
100007e8c:	53	pushq	%rbx
100007e8d:	48 83 ec 28	subq	$40, %rsp
100007e91:	41 89 d7	movl	%edx, %r15d
100007e94:	48 89 fb	movq	%rdi, %rbx
100007e97:	48 8b 3d 8a a7 04 00	movq	305034(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100007e9e:	48 8b 35 eb 8e 04 00	movq	298731(%rip), %rsi ## Objc selector ref: bezierPath
100007ea5:	ff 15 75 4d 03 00	callq	*216437(%rip) ## Objc message: +[NSBezierPath bezierPath]
100007eab:	49 89 c6	movq	%rax, %r14
100007eae:	48 8b 0d e3 ac 04 00	movq	306403(%rip), %rcx
100007eb5:	48 01 d9	addq	%rbx, %rcx
100007eb8:	49 63 c7	movslq	%r15d, %rax
100007ebb:	80 3c 08 00	cmpb	$0, (%rax,%rcx)
100007ebf:	0f 84 e7 01 00 00	je	0x1000080ac
100007ec5:	48 8b 0d d4 ac 04 00	movq	306388(%rip), %rcx
100007ecc:	48 01 d9	addq	%rbx, %rcx
100007ecf:	f2 0f 10 14 c1	movsd	(%rcx,%rax,8), %xmm2
100007ed4:	66 0f 2e d2	ucomisd	%xmm2, %xmm2
100007ed8:	0f 8a ce 01 00 00	jp	0x1000080ac
100007ede:	66 0f 28 05 ca 00 03 00	movapd	196810(%rip), %xmm0
100007ee6:	66 0f 28 ca	movapd	%xmm2, %xmm1
100007eea:	66 0f 54 c8	andpd	%xmm0, %xmm1
100007eee:	66 0f 2e 0d 42 01 03 00	ucomisd	196930(%rip), %xmm1
100007ef6:	0f 83 b0 01 00 00	jae	0x1000080ac
100007efc:	48 8b 0d a5 ac 04 00	movq	306341(%rip), %rcx
100007f03:	48 01 d9	addq	%rbx, %rcx
100007f06:	f2 0f 10 24 c1	movsd	(%rcx,%rax,8), %xmm4
100007f0b:	66 0f 2e e4	ucomisd	%xmm4, %xmm4
100007f0f:	0f 8a 97 01 00 00	jp	0x1000080ac
100007f15:	66 0f 54 c4	andpd	%xmm4, %xmm0
100007f19:	66 0f 2e 05 17 01 03 00	ucomisd	196887(%rip), %xmm0
100007f21:	0f 83 85 01 00 00	jae	0x1000080ac
100007f27:	f2 0f 10 1d 99 01 03 00	movsd	197017(%rip), %xmm3
100007f2f:	66 0f 28 ca	movapd	%xmm2, %xmm1
100007f33:	f2 0f 58 cb	addsd	%xmm3, %xmm1
100007f37:	0f 57 c0	xorps	%xmm0, %xmm0
100007f3a:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100007f3e:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
100007f43:	f2 0f 58 dc	addsd	%xmm4, %xmm3
100007f47:	0f 57 c9	xorps	%xmm1, %xmm1
100007f4a:	f2 0f 5a cb	cvtsd2ss	%xmm3, %xmm1
100007f4e:	f3 0f 11 4d d4	movss	%xmm1, -44(%rbp)
100007f53:	48 8b 35 36 98 04 00	movq	301110(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100007f5a:	4c 8b 2d bf 4c 03 00	movq	216255(%rip), %r13 ## Objc message: -[%rdi moveTo:x:y:]
100007f61:	48 89 df	movq	%rbx, %rdi
100007f64:	4c 89 f2	movq	%r14, %rdx
100007f67:	66 0f 29 55 c0	movapd	%xmm2, -64(%rbp)
100007f6c:	66 0f 29 65 b0	movapd	%xmm4, -80(%rbp)
100007f71:	41 ff d5	callq	*%r13
100007f74:	f2 0f 10 0d fc ff 02 00	movsd	196604(%rip), %xmm1
100007f7c:	66 0f 28 45 c0	movapd	-64(%rbp), %xmm0
100007f81:	f2 0f 58 c1	addsd	%xmm1, %xmm0
100007f85:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100007f89:	f3 0f 11 45 c0	movss	%xmm0, -64(%rbp)
100007f8e:	66 0f 28 55 b0	movapd	-80(%rbp), %xmm2
100007f93:	f2 0f 58 d1	addsd	%xmm1, %xmm2
100007f97:	0f 57 c9	xorps	%xmm1, %xmm1
100007f9a:	f2 0f 5a ca	cvtsd2ss	%xmm2, %xmm1
100007f9e:	f3 0f 11 4d b0	movss	%xmm1, -80(%rbp)
100007fa3:	4c 8b 25 5e 96 04 00	movq	300638(%rip), %r12 ## Objc selector ref: lineTo:x:y:
100007faa:	48 89 df	movq	%rbx, %rdi
100007fad:	4c 89 e6	movq	%r12, %rsi
100007fb0:	4c 89 f2	movq	%r14, %rdx
100007fb3:	41 ff d5	callq	*%r13
100007fb6:	48 89 df	movq	%rbx, %rdi
100007fb9:	48 8b 35 d0 97 04 00	movq	301008(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100007fc0:	4c 89 f2	movq	%r14, %rdx
100007fc3:	f3 0f 10 45 c0	movss	-64(%rbp), %xmm0
100007fc8:	f3 0f 10 4d d4	movss	-44(%rbp), %xmm1
100007fcd:	41 ff d5	callq	*%r13
100007fd0:	48 89 df	movq	%rbx, %rdi
100007fd3:	4c 89 e6	movq	%r12, %rsi
100007fd6:	4c 89 f2	movq	%r14, %rdx
100007fd9:	f3 0f 10 45 d0	movss	-48(%rbp), %xmm0
100007fde:	f3 0f 10 4d b0	movss	-80(%rbp), %xmm1
100007fe3:	41 ff d5	callq	*%r13
100007fe6:	48 8b 35 7b 9f 04 00	movq	302971(%rip), %rsi ## Objc selector ref: setLineCapStyle:
100007fed:	ba 01 00 00 00	movl	$1, %edx
100007ff2:	4c 89 f7	movq	%r14, %rdi
100007ff5:	41 ff d5	callq	*%r13
100007ff8:	48 8b 3d 21 a6 04 00	movq	304673(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
100007fff:	48 8b 35 e2 8e 04 00	movq	298722(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
100008006:	f2 0f 10 05 fa ff 02 00	movsd	196602(%rip), %xmm0
10000800e:	f2 0f 10 1d 0a 00 03 00	movsd	196618(%rip), %xmm3
100008016:	0f 28 c8	movaps	%xmm0, %xmm1
100008019:	0f 28 d0	movaps	%xmm0, %xmm2
10000801c:	41 ff d5	callq	*%r13
10000801f:	48 8b 35 4a 9c 04 00	movq	302154(%rip), %rsi ## Objc selector ref: set
100008026:	48 89 c7	movq	%rax, %rdi
100008029:	41 ff d5	callq	*%r13
10000802c:	48 8d 05 d5 aa 04 00	leaq	305877(%rip), %rax
100008033:	4c 8b 20	movq	(%rax), %r12
100008036:	0f 57 c0	xorps	%xmm0, %xmm0
100008039:	f3 42 0f 5a 04 23	cvtss2sd	(%rbx,%r12), %xmm0
10000803f:	f2 0f 59 05 89 00 03 00	mulsd	196745(%rip), %xmm0
100008047:	48 8b 35 22 9f 04 00	movq	302882(%rip), %rsi ## Objc selector ref: setLineWidth:
10000804e:	4c 89 f7	movq	%r14, %rdi
100008051:	41 ff d5	callq	*%r13
100008054:	48 8b 35 dd a2 04 00	movq	303837(%rip), %rsi ## Objc selector ref: stroke
10000805b:	4c 89 f7	movq	%r14, %rdi
10000805e:	41 ff d5	callq	*%r13
100008061:	48 8b 35 c0 9c 04 00	movq	302272(%rip), %rsi ## Objc selector ref: setColor:
100008068:	48 89 df	movq	%rbx, %rdi
10000806b:	44 89 fa	movl	%r15d, %edx
10000806e:	41 ff d5	callq	*%r13
100008071:	0f 57 c0	xorps	%xmm0, %xmm0
100008074:	f3 42 0f 5a 04 23	cvtss2sd	(%rbx,%r12), %xmm0
10000807a:	f2 0f 59 05 56 00 03 00	mulsd	196694(%rip), %xmm0
100008082:	4c 89 f7	movq	%r14, %rdi
100008085:	48 8b 35 e4 9e 04 00	movq	302820(%rip), %rsi ## Objc selector ref: setLineWidth:
10000808c:	41 ff d5	callq	*%r13
10000808f:	4c 89 f7	movq	%r14, %rdi
100008092:	48 8b 35 9f a2 04 00	movq	303775(%rip), %rsi ## Objc selector ref: stroke
100008099:	4c 89 e8	movq	%r13, %rax
10000809c:	48 83 c4 28	addq	$40, %rsp
1000080a0:	5b	popq	%rbx
1000080a1:	41 5c	popq	%r12
1000080a3:	41 5d	popq	%r13
1000080a5:	41 5e	popq	%r14
1000080a7:	41 5f	popq	%r15
1000080a9:	5d	popq	%rbp
1000080aa:	ff e0	jmpq	*%rax
1000080ac:	48 83 c4 28	addq	$40, %rsp
1000080b0:	5b	popq	%rbx
1000080b1:	41 5c	popq	%r12
1000080b3:	41 5d	popq	%r13
1000080b5:	41 5e	popq	%r14
1000080b7:	41 5f	popq	%r15
1000080b9:	5d	popq	%rbp
1000080ba:	c3	retq
1000080bb:	55	pushq	%rbp
1000080bc:	48 89 e5	movq	%rsp, %rbp
1000080bf:	41 57	pushq	%r15
1000080c1:	41 56	pushq	%r14
1000080c3:	41 55	pushq	%r13
1000080c5:	41 54	pushq	%r12
1000080c7:	53	pushq	%rbx
1000080c8:	48 83 ec 58	subq	$88, %rsp
1000080cc:	49 89 ff	movq	%rdi, %r15
1000080cf:	48 8b 3d 52 a5 04 00	movq	304466(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
1000080d6:	48 8b 35 b3 8c 04 00	movq	298163(%rip), %rsi ## Objc selector ref: bezierPath
1000080dd:	4c 8b 25 3c 4b 03 00	movq	215868(%rip), %r12 ## Objc message: +[NSBezierPath bezierPath]
1000080e4:	41 ff d4	callq	*%r12
1000080e7:	48 89 c3	movq	%rax, %rbx
1000080ea:	48 8d 7d a8	leaq	-88(%rbp), %rdi
1000080ee:	4c 89 3f	movq	%r15, (%rdi)
1000080f1:	48 8b 05 e0 a6 04 00	movq	304864(%rip), %rax ## Objc class ref: PlotViewXY
1000080f8:	48 89 47 08	movq	%rax, 8(%rdi)
1000080fc:	48 8b 35 3d 90 04 00	movq	299069(%rip), %rsi ## Objc selector ref: drawBack
100008103:	e8 d4 73 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] drawBack]
100008108:	48 8b 35 c1 99 04 00	movq	301505(%rip), %rsi ## Objc selector ref: removeAllPoints
10000810f:	48 89 df	movq	%rbx, %rdi
100008112:	41 ff d4	callq	*%r12
100008115:	48 8b 35 54 9e 04 00	movq	302676(%rip), %rsi ## Objc selector ref: setLineWidth:
10000811c:	f2 0f 10 05 e4 fe 02 00	movsd	196324(%rip), %xmm0
100008124:	48 89 df	movq	%rbx, %rdi
100008127:	41 ff d4	callq	*%r12
10000812a:	48 8b 35 5f 96 04 00	movq	300639(%rip), %rsi ## Objc selector ref: moveTo:x:y:
100008131:	f3 0f 10 05 a7 ff 02 00	movss	196519(%rip), %xmm0
100008139:	f3 0f 10 0d a3 ff 02 00	movss	196515(%rip), %xmm1
100008141:	4d 89 fe	movq	%r15, %r14
100008144:	4c 89 ff	movq	%r15, %rdi
100008147:	49 89 df	movq	%rbx, %r15
10000814a:	48 89 da	movq	%rbx, %rdx
10000814d:	41 ff d4	callq	*%r12
100008150:	bb 08 00 00 00	movl	$8, %ebx
100008155:	4c 8b 2d ac 94 04 00	movq	300204(%rip), %r13 ## Objc selector ref: lineTo:x:y:
10000815c:	4c 8d 25 8d ff 02 00	leaq	196493(%rip), %r12
100008163:	0f 57 c0	xorps	%xmm0, %xmm0
100008166:	f2 42 0f 5a 44 23 f8	cvtsd2ss	-8(%rbx,%r12), %xmm0
10000816d:	0f 57 c9	xorps	%xmm1, %xmm1
100008170:	f2 42 0f 5a 0c 23	cvtsd2ss	(%rbx,%r12), %xmm1
100008176:	4c 89 f7	movq	%r14, %rdi
100008179:	4c 89 ee	movq	%r13, %rsi
10000817c:	4c 89 fa	movq	%r15, %rdx
10000817f:	ff 15 9b 4a 03 00	callq	*215707(%rip) ## Objc message: -[%rdi lineTo:x:y:]
100008185:	48 83 c3 10	addq	$16, %rbx
100008189:	48 81 fb f8 01 00 00	cmpq	$504, %rbx
100008190:	75 d1	jne	0x100008163
100008192:	48 8b 35 ff 8c 04 00	movq	298239(%rip), %rsi ## Objc selector ref: closePath
100008199:	4c 89 ff	movq	%r15, %rdi
10000819c:	48 8b 1d 7d 4a 03 00	movq	215677(%rip), %rbx ## Objc message: -[%rdi closePath]
1000081a3:	ff d3	callq	*%rbx
1000081a5:	48 8b 35 74 95 04 00	movq	300404(%rip), %rsi ## Objc selector ref: makePointX:Y:
1000081ac:	0f 57 c0	xorps	%xmm0, %xmm0
1000081af:	0f 57 c9	xorps	%xmm1, %xmm1
1000081b2:	4c 89 f7	movq	%r14, %rdi
1000081b5:	ff d3	callq	*%rbx
1000081b7:	f2 0f 11 45 b8	movsd	%xmm0, -72(%rbp)
1000081bc:	f2 0f 11 4d c0	movsd	%xmm1, -64(%rbp)
1000081c1:	48 8b 35 60 95 04 00	movq	300384(%rip), %rsi ## Objc selector ref: makeSizeW:H:
1000081c8:	f3 0f 10 05 18 ff 02 00	movss	196376(%rip), %xmm0
1000081d0:	f3 0f 10 0d 14 ff 02 00	movss	196372(%rip), %xmm1
1000081d8:	4c 89 f7	movq	%r14, %rdi
1000081db:	ff d3	callq	*%rbx
1000081dd:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
1000081e2:	f2 0f 11 4d d0	movsd	%xmm1, -48(%rbp)
1000081e7:	48 8b 3d 4a a4 04 00	movq	304202(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
1000081ee:	48 8b 35 ab 99 04 00	movq	301483(%rip), %rsi ## Objc selector ref: saveGraphicsState
1000081f5:	ff d3	callq	*%rbx
1000081f7:	48 8b 35 42 8a 04 00	movq	297538(%rip), %rsi ## Objc selector ref: addClip
1000081fe:	4c 89 ff	movq	%r15, %rdi
100008201:	ff d3	callq	*%rbx
100008203:	48 8b 05 7e a9 04 00	movq	305534(%rip), %rax
10000820a:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10000820e:	48 8b 35 7b 8f 04 00	movq	298875(%rip), %rsi ## Objc selector ref: drawInRect:
100008215:	0f 10 45 b8	movups	-72(%rbp), %xmm0
100008219:	0f 10 4d c8	movups	-56(%rbp), %xmm1
10000821d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100008222:	0f 11 04 24	movups	%xmm0, (%rsp)
100008226:	ff d3	callq	*%rbx
100008228:	48 8b 3d 09 a4 04 00	movq	304137(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10000822f:	48 8b 35 0a 99 04 00	movq	301322(%rip), %rsi ## Objc selector ref: restoreGraphicsState
100008236:	ff d3	callq	*%rbx
100008238:	48 8b 3d e1 a3 04 00	movq	304097(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10000823f:	48 8b 35 52 8b 04 00	movq	297810(%rip), %rsi ## Objc selector ref: blackColor
100008246:	ff d3	callq	*%rbx
100008248:	48 8b 35 21 9a 04 00	movq	301601(%rip), %rsi ## Objc selector ref: set
10000824f:	48 89 c7	movq	%rax, %rdi
100008252:	ff d3	callq	*%rbx
100008254:	48 8b 35 dd a0 04 00	movq	303325(%rip), %rsi ## Objc selector ref: stroke
10000825b:	4c 89 ff	movq	%r15, %rdi
10000825e:	ff d3	callq	*%rbx
100008260:	48 83 c4 58	addq	$88, %rsp
100008264:	5b	popq	%rbx
100008265:	41 5c	popq	%r12
100008267:	41 5d	popq	%r13
100008269:	41 5e	popq	%r14
10000826b:	41 5f	popq	%r15
10000826d:	5d	popq	%rbp
10000826e:	c3	retq
10000826f:	55	pushq	%rbp
100008270:	48 89 e5	movq	%rsp, %rbp
100008273:	48 8b 05 1e a9 04 00	movq	305438(%rip), %rax
10000827a:	48 c7 04 07 00 00 00 00	movq	$0, (%rdi,%rax)
100008282:	c6 44 07 08 00	movb	$0, 8(%rdi,%rax)
100008287:	48 8b 35 3a 9d 04 00	movq	302394(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000828e:	ba 01 00 00 00	movl	$1, %edx
100008293:	5d	popq	%rbp
100008294:	ff 25 86 49 03 00	jmpq	*215430(%rip) ## Objc message: +[NSColor setNeedsDisplay:]
10000829a:	55	pushq	%rbp
10000829b:	48 89 e5	movq	%rsp, %rbp
10000829e:	48 8b 35 0b a9 04 00	movq	305419(%rip), %rsi
1000082a5:	48 01 fe	addq	%rdi, %rsi
1000082a8:	4c 63 c1	movslq	%ecx, %r8
1000082ab:	4a c7 04 c6 00 00 00 00	movq	$0, (%rsi,%r8,8)
1000082b3:	48 8b 0d fe a8 04 00	movq	305406(%rip), %rcx
1000082ba:	48 01 f9	addq	%rdi, %rcx
1000082bd:	4b 8d 34 40	leaq	(%r8,%r8,2), %rsi
1000082c1:	8b 42 08	movl	8(%rdx), %eax
1000082c4:	89 44 b1 08	movl	%eax, 8(%rcx,%rsi,4)
1000082c8:	48 8b 02	movq	(%rdx), %rax
1000082cb:	48 89 04 b1	movq	%rax, (%rcx,%rsi,4)
1000082cf:	f2 0f 2a 02	cvtsi2sdl	(%rdx), %xmm0
1000082d3:	f2 0f 10 0d 85 fd 02 00	movsd	195973(%rip), %xmm1
1000082db:	f2 0f 2a 52 04	cvtsi2sdl	4(%rdx), %xmm2
1000082e0:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000082e4:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
1000082e8:	f2 0f 2a 5a 08	cvtsi2sdl	8(%rdx), %xmm3
1000082ed:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
1000082f1:	66 0f 28 c8	movapd	%xmm0, %xmm1
1000082f5:	f2 0f 58 ca	addsd	%xmm2, %xmm1
1000082f9:	f2 0f 58 cb	addsd	%xmm3, %xmm1
1000082fd:	f2 0f 5e c1	divsd	%xmm1, %xmm0
100008301:	48 8b 05 98 a8 04 00	movq	305304(%rip), %rax
100008308:	48 01 f8	addq	%rdi, %rax
10000830b:	f2 42 0f 11 04 c0	movsd	%xmm0, (%rax,%r8,8)
100008311:	f2 0f 5e d1	divsd	%xmm1, %xmm2
100008315:	48 8b 05 8c a8 04 00	movq	305292(%rip), %rax
10000831c:	48 01 f8	addq	%rdi, %rax
10000831f:	f2 42 0f 11 14 c0	movsd	%xmm2, (%rax,%r8,8)
100008325:	48 8b 05 6c a8 04 00	movq	305260(%rip), %rax
10000832c:	48 01 f8	addq	%rdi, %rax
10000832f:	41 c6 04 00 01	movb	$1, (%r8,%rax)
100008334:	48 8b 35 8d 9c 04 00	movq	302221(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000833b:	ba 01 00 00 00	movl	$1, %edx
100008340:	5d	popq	%rbp
100008341:	ff 25 d9 48 03 00	jmpq	*215257(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
100008347:	55	pushq	%rbp
100008348:	48 89 e5	movq	%rsp, %rbp
10000834b:	48 8b 05 5e a8 04 00	movq	305246(%rip), %rax
100008352:	48 01 f8	addq	%rdi, %rax
100008355:	48 63 c9	movslq	%ecx, %rcx
100008358:	48 8b 32	movq	(%rdx), %rsi
10000835b:	48 89 34 c8	movq	%rsi, (%rax,%rcx,8)
10000835f:	48 8b 05 52 a8 04 00	movq	305234(%rip), %rax
100008366:	48 01 f8	addq	%rdi, %rax
100008369:	48 8d 34 49	leaq	(%rcx,%rcx,2), %rsi
10000836d:	48 c7 04 b0 00 00 00 00	movq	$0, (%rax,%rsi,4)
100008375:	c7 44 b0 08 00 00 00 00	movl	$0, 8(%rax,%rsi,4)
10000837d:	f2 0f 2a 02	cvtsi2sdl	(%rdx), %xmm0
100008381:	f2 0f 10 0d d7 fc 02 00	movsd	195799(%rip), %xmm1
100008389:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10000838d:	48 8b 05 0c a8 04 00	movq	305164(%rip), %rax
100008394:	48 01 f8	addq	%rdi, %rax
100008397:	f2 0f 11 04 c8	movsd	%xmm0, (%rax,%rcx,8)
10000839c:	0f 57 c0	xorps	%xmm0, %xmm0
10000839f:	f2 0f 2a 42 04	cvtsi2sdl	4(%rdx), %xmm0
1000083a4:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
1000083a8:	48 8b 05 f9 a7 04 00	movq	305145(%rip), %rax
1000083af:	48 01 f8	addq	%rdi, %rax
1000083b2:	f2 0f 11 04 c8	movsd	%xmm0, (%rax,%rcx,8)
1000083b7:	48 8b 05 da a7 04 00	movq	305114(%rip), %rax
1000083be:	48 01 f8	addq	%rdi, %rax
1000083c1:	c6 04 01 01	movb	$1, (%rcx,%rax)
1000083c5:	48 8b 35 fc 9b 04 00	movq	302076(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
1000083cc:	ba 01 00 00 00	movl	$1, %edx
1000083d1:	5d	popq	%rbp
1000083d2:	ff 25 48 48 03 00	jmpq	*215112(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
1000083d8:	55	pushq	%rbp
1000083d9:	48 89 e5	movq	%rsp, %rbp
1000083dc:	41 56	pushq	%r14
1000083de:	53	pushq	%rbx
1000083df:	48 89 fb	movq	%rdi, %rbx
1000083e2:	48 8b 3d c7 a1 04 00	movq	303559(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
1000083e9:	48 8b 05 70 42 03 00	movq	213616(%rip), %rax ## literal pool symbol address: _NSFilenamesPboardType
1000083f0:	48 8b 10	movq	(%rax), %rdx
1000083f3:	48 8b 35 3e 89 04 00	movq	297278(%rip), %rsi ## Objc selector ref: arrayWithObjects:
1000083fa:	4c 8b 35 1f 48 03 00	movq	215071(%rip), %r14 ## Objc message: +[NSArray arrayWithObjects:]
100008401:	31 c9	xorl	%ecx, %ecx
100008403:	31 c0	xorl	%eax, %eax
100008405:	41 ff d6	callq	*%r14
100008408:	48 8b 35 79 96 04 00	movq	300665(%rip), %rsi ## Objc selector ref: registerForDraggedTypes:
10000840f:	48 89 df	movq	%rbx, %rdi
100008412:	48 89 c2	movq	%rax, %rdx
100008415:	4c 89 f0	movq	%r14, %rax
100008418:	5b	popq	%rbx
100008419:	41 5e	popq	%r14
10000841b:	5d	popq	%rbp
10000841c:	ff e0	jmpq	*%rax
10000841e:	55	pushq	%rbp
10000841f:	48 89 e5	movq	%rsp, %rbp
100008422:	b8 01 00 00 00	movl	$1, %eax
100008427:	5d	popq	%rbp
100008428:	c3	retq
100008429:	55	pushq	%rbp
10000842a:	48 89 e5	movq	%rsp, %rbp
10000842d:	41 57	pushq	%r15
10000842f:	41 56	pushq	%r14
100008431:	41 55	pushq	%r13
100008433:	41 54	pushq	%r12
100008435:	53	pushq	%rbx
100008436:	50	pushq	%rax
100008437:	49 89 fe	movq	%rdi, %r14
10000843a:	48 8b 35 e7 8c 04 00	movq	298215(%rip), %rsi ## Objc selector ref: draggingPasteboard
100008441:	4c 8b 2d d8 47 03 00	movq	215000(%rip), %r13 ## Objc message: -[%rdi draggingPasteboard]
100008448:	48 89 d7	movq	%rdx, %rdi
10000844b:	41 ff d5	callq	*%r13
10000844e:	48 89 c3	movq	%rax, %rbx
100008451:	48 8b 3d 58 a1 04 00	movq	303448(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100008458:	4c 8b 25 01 42 03 00	movq	213505(%rip), %r12 ## literal pool symbol address: _NSFilenamesPboardType
10000845f:	49 8b 14 24	movq	(%r12), %rdx
100008463:	48 8b 05 86 42 03 00	movq	213638(%rip), %rax ## literal pool symbol address: _NSStringPboardType
10000846a:	48 8b 08	movq	(%rax), %rcx
10000846d:	48 8b 35 c4 88 04 00	movq	297156(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100008474:	45 31 ff	xorl	%r15d, %r15d
100008477:	45 31 c0	xorl	%r8d, %r8d
10000847a:	31 c0	xorl	%eax, %eax
10000847c:	41 ff d5	callq	*%r13
10000847f:	48 8b 35 ea 88 04 00	movq	297194(%rip), %rsi ## Objc selector ref: availableTypeFromArray:
100008486:	48 89 df	movq	%rbx, %rdi
100008489:	48 89 c2	movq	%rax, %rdx
10000848c:	41 ff d5	callq	*%r13
10000848f:	49 8b 14 24	movq	(%r12), %rdx
100008493:	4c 8b 25 ee 90 04 00	movq	299246(%rip), %r12 ## Objc selector ref: isEqualToString:
10000849a:	48 89 c7	movq	%rax, %rdi
10000849d:	4c 89 e6	movq	%r12, %rsi
1000084a0:	41 ff d5	callq	*%r13
1000084a3:	84 c0	testb	%al, %al
1000084a5:	0f 84 81 00 00 00	je	0x10000852c
1000084ab:	48 8b 35 76 95 04 00	movq	300406(%rip), %rsi ## Objc selector ref: propertyListForType:
1000084b2:	48 8d 15 67 50 03 00	leaq	217191(%rip), %rdx ## Objc cfstring ref: @"NSFilenamesPboardType"
1000084b9:	48 89 df	movq	%rbx, %rdi
1000084bc:	41 ff d5	callq	*%r13
1000084bf:	48 8b 35 9a 93 04 00	movq	299930(%rip), %rsi ## Objc selector ref: objectAtIndex:
1000084c6:	45 31 ff	xorl	%r15d, %r15d
1000084c9:	48 89 c7	movq	%rax, %rdi
1000084cc:	31 d2	xorl	%edx, %edx
1000084ce:	41 ff d5	callq	*%r13
1000084d1:	48 89 c3	movq	%rax, %rbx
1000084d4:	48 8b 35 75 94 04 00	movq	300149(%rip), %rsi ## Objc selector ref: pathExtension
1000084db:	48 89 c7	movq	%rax, %rdi
1000084de:	41 ff d5	callq	*%r13
1000084e1:	48 8d 15 58 50 03 00	leaq	217176(%rip), %rdx ## Objc cfstring ref: @"icc"
1000084e8:	48 89 c7	movq	%rax, %rdi
1000084eb:	4c 89 e6	movq	%r12, %rsi
1000084ee:	41 ff d5	callq	*%r13
1000084f1:	84 c0	testb	%al, %al
1000084f3:	74 37	je	0x10000852c
1000084f5:	48 8b 35 ac 9e 04 00	movq	302764(%rip), %rsi ## Objc selector ref: target
1000084fc:	4c 89 f7	movq	%r14, %rdi
1000084ff:	41 ff d5	callq	*%r13
100008502:	49 89 c6	movq	%rax, %r14
100008505:	48 8b 3d 34 a1 04 00	movq	303412(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSURL
10000850c:	48 8b 35 05 8d 04 00	movq	298245(%rip), %rsi ## Objc selector ref: fileURLWithPath:
100008513:	48 89 da	movq	%rbx, %rdx
100008516:	41 ff d5	callq	*%r13
100008519:	48 8b 35 10 92 04 00	movq	299536(%rip), %rsi ## Objc selector ref: manuallyInstallProfile:
100008520:	4c 89 f7	movq	%r14, %rdi
100008523:	48 89 c2	movq	%rax, %rdx
100008526:	41 ff d5	callq	*%r13
100008529:	49 89 c7	movq	%rax, %r15
10000852c:	41 0f be c7	movsbl	%r15b, %eax
100008530:	48 83 c4 08	addq	$8, %rsp
100008534:	5b	popq	%rbx
100008535:	41 5c	popq	%r12
100008537:	41 5d	popq	%r13
100008539:	41 5e	popq	%r14
10000853b:	41 5f	popq	%r15
10000853d:	5d	popq	%rbp
10000853e:	c3	retq
10000853f:	55	pushq	%rbp
100008540:	48 89 e5	movq	%rsp, %rbp
100008543:	41 57	pushq	%r15
100008545:	41 56	pushq	%r14
100008547:	53	pushq	%rbx
100008548:	48 83 ec 18	subq	$24, %rsp
10000854c:	66 0f 28 e9	movapd	%xmm1, %xmm5
100008550:	f2 0f 5c c8	subsd	%xmm0, %xmm1
100008554:	66 0f 28 d8	movapd	%xmm0, %xmm3
100008558:	f2 0f 5c dd	subsd	%xmm5, %xmm3
10000855c:	f2 0f 10 25 7c fd 02 00	movsd	195964(%rip), %xmm4
100008564:	66 0f c2 dc 01	cmpltpd	%xmm4, %xmm3
100008569:	66 0f c2 cc 01	cmpltpd	%xmm4, %xmm1
10000856e:	66 0f 54 cb	andpd	%xmm3, %xmm1
100008572:	66 0f 7e c8	movd	%xmm1, %eax
100008576:	66 0f 28 cd	movapd	%xmm5, %xmm1
10000857a:	f2 0f 5c ca	subsd	%xmm2, %xmm1
10000857e:	66 0f 2e e1	ucomisd	%xmm1, %xmm4
100008582:	0f 97 c1	seta	%cl
100008585:	20 c1	andb	%al, %cl
100008587:	66 0f 28 ca	movapd	%xmm2, %xmm1
10000858b:	f2 0f 5c cd	subsd	%xmm5, %xmm1
10000858f:	66 0f 2e e1	ucomisd	%xmm1, %xmm4
100008593:	49 89 d6	movq	%rdx, %r14
100008596:	49 89 f7	movq	%rsi, %r15
100008599:	48 89 fb	movq	%rdi, %rbx
10000859c:	0f 97 c0	seta	%al
10000859f:	66 0f 28 dd	movapd	%xmm5, %xmm3
1000085a3:	66 0f 28 e5	movapd	%xmm5, %xmm4
1000085a7:	84 c8	testb	%cl, %al
1000085a9:	75 08	jne	0x1000085b3
1000085ab:	66 0f 28 da	movapd	%xmm2, %xmm3
1000085af:	66 0f 28 e0	movapd	%xmm0, %xmm4
1000085b3:	f2 0f 5e 25 2d fd 02 00	divsd	195885(%rip), %xmm4
1000085bb:	66 0f 2e 25 35 fd 02 00	ucomisd	195893(%rip), %xmm4
1000085c3:	76 2b	jbe	0x1000085f0
1000085c5:	f2 0f 10 0d 43 fd 02 00	movsd	195907(%rip), %xmm1
1000085cd:	66 0f 28 c4	movapd	%xmm4, %xmm0
1000085d1:	f2 0f 11 6d d8	movsd	%xmm5, -40(%rbp)
1000085d6:	f2 0f 11 5d e0	movsd	%xmm3, -32(%rbp)
1000085db:	e8 2c 6f 02 00	callq	0x10002f50c ## symbol stub for: _pow
1000085e0:	f2 0f 10 5d e0	movsd	-32(%rbp), %xmm3
1000085e5:	f2 0f 10 6d d8	movsd	-40(%rbp), %xmm5
1000085ea:	66 0f 28 e0	movapd	%xmm0, %xmm4
1000085ee:	eb 10	jmp	0x100008600
1000085f0:	f2 0f 59 25 08 fd 02 00	mulsd	195848(%rip), %xmm4
1000085f8:	f2 0f 58 25 08 fd 02 00	addsd	195848(%rip), %xmm4
100008600:	f2 0f 5e 1d e8 fc 02 00	divsd	195816(%rip), %xmm3
100008608:	66 0f 2e 2d e8 fc 02 00	ucomisd	195816(%rip), %xmm5
100008610:	f2 0f 11 65 d0	movsd	%xmm4, -48(%rbp)
100008615:	76 21	jbe	0x100008638
100008617:	f2 0f 10 0d f1 fc 02 00	movsd	195825(%rip), %xmm1
10000861f:	66 0f 28 c5	movapd	%xmm5, %xmm0
100008623:	f2 0f 11 5d e0	movsd	%xmm3, -32(%rbp)
100008628:	e8 df 6e 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000862d:	f2 0f 10 5d e0	movsd	-32(%rbp), %xmm3
100008632:	66 0f 28 e8	movapd	%xmm0, %xmm5
100008636:	eb 10	jmp	0x100008648
100008638:	f2 0f 59 2d c0 fc 02 00	mulsd	195776(%rip), %xmm5
100008640:	f2 0f 58 2d c0 fc 02 00	addsd	195776(%rip), %xmm5
100008648:	66 0f 2e 1d a8 fc 02 00	ucomisd	195752(%rip), %xmm3
100008650:	76 21	jbe	0x100008673
100008652:	f2 0f 10 0d b6 fc 02 00	movsd	195766(%rip), %xmm1
10000865a:	66 0f 28 c3	movapd	%xmm3, %xmm0
10000865e:	f2 0f 11 6d d8	movsd	%xmm5, -40(%rbp)
100008663:	e8 a4 6e 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008668:	f2 0f 10 6d d8	movsd	-40(%rbp), %xmm5
10000866d:	66 0f 28 d8	movapd	%xmm0, %xmm3
100008671:	eb 10	jmp	0x100008683
100008673:	f2 0f 59 1d 85 fc 02 00	mulsd	195717(%rip), %xmm3
10000867b:	f2 0f 58 1d 85 fc 02 00	addsd	195717(%rip), %xmm3
100008683:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100008688:	48 85 db	testq	%rbx, %rbx
10000868b:	74 18	je	0x1000086a5
10000868d:	f2 0f 10 05 83 fc 02 00	movsd	195715(%rip), %xmm0
100008695:	f2 0f 59 c5	mulsd	%xmm5, %xmm0
100008699:	f2 0f 58 05 7f fc 02 00	addsd	195711(%rip), %xmm0
1000086a1:	f2 0f 11 03	movsd	%xmm0, (%rbx)
1000086a5:	4d 85 ff	testq	%r15, %r15
1000086a8:	74 11	je	0x1000086bb
1000086aa:	f2 0f 5c cd	subsd	%xmm5, %xmm1
1000086ae:	f2 0f 59 0d 8a f8 02 00	mulsd	194698(%rip), %xmm1
1000086b6:	f2 41 0f 11 0f	movsd	%xmm1, (%r15)
1000086bb:	4d 85 f6	testq	%r14, %r14
1000086be:	74 11	je	0x1000086d1
1000086c0:	f2 0f 5c eb	subsd	%xmm3, %xmm5
1000086c4:	f2 0f 59 2d 5c fc 02 00	mulsd	195676(%rip), %xmm5
1000086cc:	f2 41 0f 11 2e	movsd	%xmm5, (%r14)
1000086d1:	48 83 c4 18	addq	$24, %rsp
1000086d5:	5b	popq	%rbx
1000086d6:	41 5e	popq	%r14
1000086d8:	41 5f	popq	%r15
1000086da:	5d	popq	%rbp
1000086db:	c3	retq
1000086dc:	55	pushq	%rbp
1000086dd:	48 89 e5	movq	%rsp, %rbp
1000086e0:	41 57	pushq	%r15
1000086e2:	41 56	pushq	%r14
1000086e4:	53	pushq	%rbx
1000086e5:	48 83 ec 18	subq	$24, %rsp
1000086e9:	49 89 d6	movq	%rdx, %r14
1000086ec:	49 89 f7	movq	%rsi, %r15
1000086ef:	48 89 fb	movq	%rdi, %rbx
1000086f2:	66 0f 28 d9	movapd	%xmm1, %xmm3
1000086f6:	66 0f 28 e0	movapd	%xmm0, %xmm4
1000086fa:	66 0f 2e 0d 2e fc 02 00	ucomisd	195630(%rip), %xmm1
100008702:	76 41	jbe	0x100008745
100008704:	f2 0f 10 0d 3c fc 02 00	movsd	195644(%rip), %xmm1
10000870c:	66 0f 28 c3	movapd	%xmm3, %xmm0
100008710:	f2 0f 11 5d d0	movsd	%xmm3, -48(%rbp)
100008715:	f2 0f 11 55 d8	movsd	%xmm2, -40(%rbp)
10000871a:	f2 0f 11 65 e0	movsd	%xmm4, -32(%rbp)
10000871f:	e8 e8 6d 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008724:	f2 0f 10 65 e0	movsd	-32(%rbp), %xmm4
100008729:	f2 0f 10 55 d8	movsd	-40(%rbp), %xmm2
10000872e:	f2 0f 10 5d d0	movsd	-48(%rbp), %xmm3
100008733:	f2 0f 59 05 dd fb 02 00	mulsd	195549(%rip), %xmm0
10000873b:	f2 0f 58 05 dd fb 02 00	addsd	195549(%rip), %xmm0
100008743:	eb 14	jmp	0x100008759
100008745:	f2 0f 10 05 eb fb 02 00	movsd	195563(%rip), %xmm0
10000874d:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
100008751:	f2 0f 5e 05 e7 fb 02 00	divsd	195559(%rip), %xmm0
100008759:	48 85 db	testq	%rbx, %rbx
10000875c:	74 04	je	0x100008762
10000875e:	f2 0f 11 03	movsd	%xmm0, (%rbx)
100008762:	f2 0f 10 0d e6 fb 02 00	movsd	195558(%rip), %xmm1
10000876a:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
10000876e:	f2 0f 58 cc	addsd	%xmm4, %xmm1
100008772:	f2 0f 59 15 f6 f7 02 00	mulsd	194550(%rip), %xmm2
10000877a:	f2 0f 58 d1	addsd	%xmm1, %xmm2
10000877e:	f2 0f 10 0d d2 fb 02 00	movsd	195538(%rip), %xmm1
100008786:	66 0f 2e ca	ucomisd	%xmm2, %xmm1
10000878a:	76 17	jbe	0x1000087a3
10000878c:	4d 85 ff	testq	%r15, %r15
10000878f:	74 07	je	0x100008798
100008791:	49 c7 07 00 00 00 00	movq	$0, (%r15)
100008798:	66 0f 57 db	xorpd	%xmm3, %xmm3
10000879c:	4d 85 f6	testq	%r14, %r14
10000879f:	75 55	jne	0x1000087f6
1000087a1:	eb 58	jmp	0x1000087fb
1000087a3:	4d 85 ff	testq	%r15, %r15
1000087a6:	74 29	je	0x1000087d1
1000087a8:	f2 0f 59 25 b8 fb 02 00	mulsd	195512(%rip), %xmm4
1000087b0:	f2 0f 5e e2	divsd	%xmm2, %xmm4
1000087b4:	f2 0f 10 0d b4 fb 02 00	movsd	195508(%rip), %xmm1
1000087bc:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
1000087c0:	f2 0f 58 25 b0 fb 02 00	addsd	195504(%rip), %xmm4
1000087c8:	f2 0f 59 e1	mulsd	%xmm1, %xmm4
1000087cc:	f2 41 0f 11 27	movsd	%xmm4, (%r15)
1000087d1:	4d 85 f6	testq	%r14, %r14
1000087d4:	74 25	je	0x1000087fb
1000087d6:	f2 0f 59 1d 82 fb 02 00	mulsd	195458(%rip), %xmm3
1000087de:	f2 0f 59 05 8a fb 02 00	mulsd	195466(%rip), %xmm0
1000087e6:	f2 0f 5e da	divsd	%xmm2, %xmm3
1000087ea:	f2 0f 58 1d 8e fb 02 00	addsd	195470(%rip), %xmm3
1000087f2:	f2 0f 59 d8	mulsd	%xmm0, %xmm3
1000087f6:	f2 41 0f 11 1e	movsd	%xmm3, (%r14)
1000087fb:	48 83 c4 18	addq	$24, %rsp
1000087ff:	5b	popq	%rbx
100008800:	41 5e	popq	%r14
100008802:	41 5f	popq	%r15
100008804:	5d	popq	%rbp
100008805:	c3	retq
100008806:	55	pushq	%rbp
100008807:	48 89 e5	movq	%rsp, %rbp
10000880a:	66 0f 28 d8	movapd	%xmm0, %xmm3
10000880e:	f2 0f 58 d9	addsd	%xmm1, %xmm3
100008812:	f2 0f 58 da	addsd	%xmm2, %xmm3
100008816:	66 0f 2e 1d c2 fa 02 00	ucomisd	195266(%rip), %xmm3
10000881e:	76 0e	jbe	0x10000882e
100008820:	66 0f 14 c1	unpcklpd	%xmm1, %xmm0
100008824:	f2 0f 12 d3	movddup	%xmm3, %xmm2
100008828:	66 0f 5e c2	divpd	%xmm2, %xmm0
10000882c:	eb 08	jmp	0x100008836
10000882e:	66 0f 28 05 da fc 02 00	movapd	195802(%rip), %xmm0
100008836:	48 85 ff	testq	%rdi, %rdi
100008839:	74 04	je	0x10000883f
10000883b:	f2 0f 11 0f	movsd	%xmm1, (%rdi)
10000883f:	48 85 f6	testq	%rsi, %rsi
100008842:	74 04	je	0x100008848
100008844:	66 0f 13 06	movlpd	%xmm0, (%rsi)
100008848:	48 85 d2	testq	%rdx, %rdx
10000884b:	74 04	je	0x100008851
10000884d:	66 0f 17 02	movhpd	%xmm0, (%rdx)
100008851:	5d	popq	%rbp
100008852:	c3	retq
100008853:	55	pushq	%rbp
100008854:	48 89 e5	movq	%rsp, %rbp
100008857:	41 57	pushq	%r15
100008859:	41 56	pushq	%r14
10000885b:	53	pushq	%rbx
10000885c:	48 83 ec 38	subq	$56, %rsp
100008860:	f2 0f 58 05 20 fb 02 00	addsd	195360(%rip), %xmm0
100008868:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
10000886c:	66 0f 5e 0d ac fc 02 00	divpd	195756(%rip), %xmm1
100008874:	66 0f 28 d9	movapd	%xmm1, %xmm3
100008878:	66 0f 7c c9	haddpd	%xmm1, %xmm1
10000887c:	49 89 d6	movq	%rdx, %r14
10000887f:	49 89 f7	movq	%rsi, %r15
100008882:	48 89 fb	movq	%rdi, %rbx
100008885:	f2 0f 5e 15 03 fb 02 00	divsd	195331(%rip), %xmm2
10000888d:	66 0f 15 db	unpckhpd	%xmm3, %xmm3
100008891:	66 0f 28 e3	movapd	%xmm3, %xmm4
100008895:	66 0f 2e 0d fb fa 02 00	ucomisd	195323(%rip), %xmm1
10000889d:	76 35	jbe	0x1000088d4
10000889f:	f2 0f 11 55 c0	movsd	%xmm2, -64(%rbp)
1000088a4:	f2 0f 10 15 c4 f6 02 00	movsd	194244(%rip), %xmm2
1000088ac:	66 0f 28 c1	movapd	%xmm1, %xmm0
1000088b0:	66 0f 28 ca	movapd	%xmm2, %xmm1
1000088b4:	66 0f 29 5d d0	movapd	%xmm3, -48(%rbp)
1000088b9:	f2 0f 11 65 b8	movsd	%xmm4, -72(%rbp)
1000088be:	e8 49 6c 02 00	callq	0x10002f50c ## symbol stub for: _pow
1000088c3:	f2 0f 10 55 c0	movsd	-64(%rbp), %xmm2
1000088c8:	f2 0f 10 65 b8	movsd	-72(%rbp), %xmm4
1000088cd:	66 0f 28 5d d0	movapd	-48(%rbp), %xmm3
1000088d2:	eb 14	jmp	0x1000088e8
1000088d4:	f2 0f 10 05 c4 fa 02 00	movsd	195268(%rip), %xmm0
1000088dc:	f2 0f 58 c1	addsd	%xmm1, %xmm0
1000088e0:	f2 0f 5e 05 18 fa 02 00	divsd	195096(%rip), %xmm0
1000088e8:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
1000088ed:	f2 0f 58 da	addsd	%xmm2, %xmm3
1000088f1:	66 0f 2e 25 9f fa 02 00	ucomisd	195231(%rip), %xmm4
1000088f9:	76 21	jbe	0x10000891c
1000088fb:	f2 0f 10 0d 6d f6 02 00	movsd	194157(%rip), %xmm1
100008903:	66 0f 28 c4	movapd	%xmm4, %xmm0
100008907:	66 0f 29 5d d0	movapd	%xmm3, -48(%rbp)
10000890c:	e8 fb 6b 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008911:	66 0f 28 5d d0	movapd	-48(%rbp), %xmm3
100008916:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000891a:	eb 14	jmp	0x100008930
10000891c:	f2 0f 10 15 7c fa 02 00	movsd	195196(%rip), %xmm2
100008924:	f2 0f 58 d4	addsd	%xmm4, %xmm2
100008928:	f2 0f 5e 15 d0 f9 02 00	divsd	195024(%rip), %xmm2
100008930:	66 0f 2e 1d 60 fa 02 00	ucomisd	195168(%rip), %xmm3
100008938:	76 21	jbe	0x10000895b
10000893a:	f2 0f 10 0d 2e f6 02 00	movsd	194094(%rip), %xmm1
100008942:	66 0f 28 c3	movapd	%xmm3, %xmm0
100008946:	f2 0f 11 55 d0	movsd	%xmm2, -48(%rbp)
10000894b:	e8 bc 6b 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008950:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100008955:	66 0f 28 d8	movapd	%xmm0, %xmm3
100008959:	eb 10	jmp	0x10000896b
10000895b:	f2 0f 58 1d 3d fa 02 00	addsd	195133(%rip), %xmm3
100008963:	f2 0f 5e 1d 95 f9 02 00	divsd	194965(%rip), %xmm3
10000896b:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000896f:	48 85 db	testq	%rbx, %rbx
100008972:	74 15	je	0x100008989
100008974:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100008978:	f2 0f 5f 4d c8	maxsd	-56(%rbp), %xmm1
10000897d:	f2 0f 59 0d 63 f9 02 00	mulsd	194915(%rip), %xmm1
100008985:	f2 0f 11 0b	movsd	%xmm1, (%rbx)
100008989:	4d 85 ff	testq	%r15, %r15
10000898c:	74 0d	je	0x10000899b
10000898e:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100008992:	f2 0f 5f ca	maxsd	%xmm2, %xmm1
100008996:	f2 41 0f 11 0f	movsd	%xmm1, (%r15)
10000899b:	4d 85 f6	testq	%r14, %r14
10000899e:	74 11	je	0x1000089b1
1000089a0:	f2 0f 5f c3	maxsd	%xmm3, %xmm0
1000089a4:	f2 0f 59 05 44 f9 02 00	mulsd	194884(%rip), %xmm0
1000089ac:	f2 41 0f 11 06	movsd	%xmm0, (%r14)
1000089b1:	48 83 c4 38	addq	$56, %rsp
1000089b5:	5b	popq	%rbx
1000089b6:	41 5e	popq	%r14
1000089b8:	41 5f	popq	%r15
1000089ba:	5d	popq	%rbp
1000089bb:	c3	retq
1000089bc:	55	pushq	%rbp
1000089bd:	48 89 e5	movq	%rsp, %rbp
1000089c0:	41 57	pushq	%r15
1000089c2:	41 56	pushq	%r14
1000089c4:	53	pushq	%rbx
1000089c5:	48 83 ec 38	subq	$56, %rsp
1000089c9:	49 89 d6	movq	%rdx, %r14
1000089cc:	49 89 f7	movq	%rsi, %r15
1000089cf:	48 89 fb	movq	%rdi, %rbx
1000089d2:	66 0f 28 f1	movapd	%xmm1, %xmm6
1000089d6:	66 0f 28 c8	movapd	%xmm0, %xmm1
1000089da:	66 0f 2e 05 c6 f9 02 00	ucomisd	195014(%rip), %xmm0
1000089e2:	76 40	jbe	0x100008a24
1000089e4:	f2 0f 10 05 9c f9 02 00	movsd	194972(%rip), %xmm0
1000089ec:	f2 0f 58 c1	addsd	%xmm1, %xmm0
1000089f0:	f2 0f 5e 05 20 f9 02 00	divsd	194848(%rip), %xmm0
1000089f8:	66 0f 29 4d d0	movapd	%xmm1, -48(%rbp)
1000089fd:	f2 0f 10 0d 6b f5 02 00	movsd	193899(%rip), %xmm1
100008a05:	66 0f 29 75 b0	movapd	%xmm6, -80(%rbp)
100008a0a:	0f 29 55 c0	movaps	%xmm2, -64(%rbp)
100008a0e:	e8 f9 6a 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008a13:	66 0f 28 4d d0	movapd	-48(%rbp), %xmm1
100008a18:	66 0f 28 55 c0	movapd	-64(%rbp), %xmm2
100008a1d:	66 0f 28 75 b0	movapd	-80(%rbp), %xmm6
100008a22:	eb 14	jmp	0x100008a38
100008a24:	f2 0f 10 05 14 f9 02 00	movsd	194836(%rip), %xmm0
100008a2c:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100008a30:	f2 0f 5e 05 00 f9 02 00	divsd	194816(%rip), %xmm0
100008a38:	66 0f 2e 0d a0 f8 02 00	ucomisd	194720(%rip), %xmm1
100008a40:	76 1e	jbe	0x100008a60
100008a42:	f2 0f 59 0d 26 f9 02 00	mulsd	194854(%rip), %xmm1
100008a4a:	66 0f 14 f2	unpcklpd	%xmm2, %xmm6
100008a4e:	f2 0f 12 c9	movddup	%xmm1, %xmm1
100008a52:	66 0f 5e f1	divpd	%xmm1, %xmm6
100008a56:	66 0f 58 35 d2 fa 02 00	addpd	195282(%rip), %xmm6
100008a5e:	eb 08	jmp	0x100008a68
100008a60:	66 0f 28 35 c8 fa 02 00	movapd	195272(%rip), %xmm6
100008a68:	66 0f 28 de	movapd	%xmm6, %xmm3
100008a6c:	66 0f 15 de	unpckhpd	%xmm6, %xmm3
100008a70:	f2 0f 10 0d f0 f8 02 00	movsd	194800(%rip), %xmm1
100008a78:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100008a7c:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100008a80:	48 85 db	testq	%rbx, %rbx
100008a83:	74 20	je	0x100008aa5
100008a85:	f2 0f 10 25 d3 f8 02 00	movsd	194771(%rip), %xmm4
100008a8d:	f2 0f 59 e6	mulsd	%xmm6, %xmm4
100008a91:	f2 0f 59 e0	mulsd	%xmm0, %xmm4
100008a95:	f2 0f 5e e1	divsd	%xmm1, %xmm4
100008a99:	66 0f 57 ed	xorpd	%xmm5, %xmm5
100008a9d:	f2 0f 5f ec	maxsd	%xmm4, %xmm5
100008aa1:	f2 0f 11 2b	movsd	%xmm5, (%rbx)
100008aa5:	4d 85 ff	testq	%r15, %r15
100008aa8:	74 0d	je	0x100008ab7
100008aaa:	66 0f 57 e4	xorpd	%xmm4, %xmm4
100008aae:	f2 0f 5f e0	maxsd	%xmm0, %xmm4
100008ab2:	f2 41 0f 11 27	movsd	%xmm4, (%r15)
100008ab7:	4d 85 f6	testq	%r14, %r14
100008aba:	74 2d	je	0x100008ae9
100008abc:	f2 0f 59 35 ec f8 02 00	mulsd	194796(%rip), %xmm6
100008ac4:	f2 0f 58 35 ec f8 02 00	addsd	194796(%rip), %xmm6
100008acc:	f2 0f 59 1d ec f8 02 00	mulsd	194796(%rip), %xmm3
100008ad4:	f2 0f 58 de	addsd	%xmm6, %xmm3
100008ad8:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
100008adc:	f2 0f 5e c1	divsd	%xmm1, %xmm0
100008ae0:	f2 0f 5f d0	maxsd	%xmm0, %xmm2
100008ae4:	f2 41 0f 11 16	movsd	%xmm2, (%r14)
100008ae9:	48 83 c4 38	addq	$56, %rsp
100008aed:	5b	popq	%rbx
100008aee:	41 5e	popq	%r14
100008af0:	41 5f	popq	%r15
100008af2:	5d	popq	%rbp
100008af3:	c3	retq
100008af4:	55	pushq	%rbp
100008af5:	48 89 e5	movq	%rsp, %rbp
100008af8:	41 57	pushq	%r15
100008afa:	41 56	pushq	%r14
100008afc:	41 55	pushq	%r13
100008afe:	41 54	pushq	%r12
100008b00:	53	pushq	%rbx
100008b01:	48 83 ec 28	subq	$40, %rsp
100008b05:	48 89 55 d0	movq	%rdx, -48(%rbp)
100008b09:	49 89 f7	movq	%rsi, %r15
100008b0c:	48 89 fb	movq	%rdi, %rbx
100008b0f:	4c 8d 65 b8	leaq	-72(%rbp), %r12
100008b13:	4c 8d 6d c0	leaq	-64(%rbp), %r13
100008b17:	4c 8d 75 c8	leaq	-56(%rbp), %r14
100008b1b:	4c 89 e7	movq	%r12, %rdi
100008b1e:	4c 89 ee	movq	%r13, %rsi
100008b21:	4c 89 f2	movq	%r14, %rdx
100008b24:	e8 2a fd ff ff	callq	0x100008853
100008b29:	f2 41 0f 10 04 24	movsd	(%r12), %xmm0
100008b2f:	f2 41 0f 10 4d 00	movsd	(%r13), %xmm1
100008b35:	f2 41 0f 10 16	movsd	(%r14), %xmm2
100008b3a:	48 89 df	movq	%rbx, %rdi
100008b3d:	4c 89 fe	movq	%r15, %rsi
100008b40:	48 8b 55 d0	movq	-48(%rbp), %rdx
100008b44:	e8 93 fb ff ff	callq	0x1000086dc
100008b49:	48 83 c4 28	addq	$40, %rsp
100008b4d:	5b	popq	%rbx
100008b4e:	41 5c	popq	%r12
100008b50:	41 5d	popq	%r13
100008b52:	41 5e	popq	%r14
100008b54:	41 5f	popq	%r15
100008b56:	5d	popq	%rbp
100008b57:	c3	retq
100008b58:	55	pushq	%rbp
100008b59:	48 89 e5	movq	%rsp, %rbp
100008b5c:	41 57	pushq	%r15
100008b5e:	41 56	pushq	%r14
100008b60:	41 55	pushq	%r13
100008b62:	41 54	pushq	%r12
100008b64:	53	pushq	%rbx
100008b65:	48 83 ec 28	subq	$40, %rsp
100008b69:	48 89 55 d0	movq	%rdx, -48(%rbp)
100008b6d:	49 89 f7	movq	%rsi, %r15
100008b70:	48 89 fb	movq	%rdi, %rbx
100008b73:	4c 8d 65 b8	leaq	-72(%rbp), %r12
100008b77:	4c 8d 6d c0	leaq	-64(%rbp), %r13
100008b7b:	4c 8d 75 c8	leaq	-56(%rbp), %r14
100008b7f:	4c 89 e7	movq	%r12, %rdi
100008b82:	4c 89 ee	movq	%r13, %rsi
100008b85:	4c 89 f2	movq	%r14, %rdx
100008b88:	e8 2f fe ff ff	callq	0x1000089bc
100008b8d:	f2 41 0f 10 04 24	movsd	(%r12), %xmm0
100008b93:	f2 41 0f 10 4d 00	movsd	(%r13), %xmm1
100008b99:	f2 41 0f 10 16	movsd	(%r14), %xmm2
100008b9e:	48 89 df	movq	%rbx, %rdi
100008ba1:	4c 89 fe	movq	%r15, %rsi
100008ba4:	48 8b 55 d0	movq	-48(%rbp), %rdx
100008ba8:	e8 92 f9 ff ff	callq	0x10000853f
100008bad:	48 83 c4 28	addq	$40, %rsp
100008bb1:	5b	popq	%rbx
100008bb2:	41 5c	popq	%r12
100008bb4:	41 5d	popq	%r13
100008bb6:	41 5e	popq	%r14
100008bb8:	41 5f	popq	%r15
100008bba:	5d	popq	%rbp
100008bbb:	c3	retq
100008bbc:	55	pushq	%rbp
100008bbd:	48 89 e5	movq	%rsp, %rbp
100008bc0:	48 85 ff	testq	%rdi, %rdi
100008bc3:	74 34	je	0x100008bf9
100008bc5:	f2 0f 10 15 9b f7 02 00	movsd	194459(%rip), %xmm2
100008bcd:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
100008bd1:	f2 0f 10 1d df f7 02 00	movsd	194527(%rip), %xmm3
100008bd9:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
100008bdd:	66 0f 28 e0	movapd	%xmm0, %xmm4
100008be1:	f2 0f 58 e0	addsd	%xmm0, %xmm4
100008be5:	f2 0f 5c dc	subsd	%xmm4, %xmm3
100008be9:	f2 0f 58 1d 7f f3 02 00	addsd	193407(%rip), %xmm3
100008bf1:	f2 0f 5e d3	divsd	%xmm3, %xmm2
100008bf5:	f2 0f 11 17	movsd	%xmm2, (%rdi)
100008bf9:	48 85 f6	testq	%rsi, %rsi
100008bfc:	74 2c	je	0x100008c2a
100008bfe:	f2 0f 10 15 5a f7 02 00	movsd	194394(%rip), %xmm2
100008c06:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100008c0a:	f2 0f 59 0d a6 f7 02 00	mulsd	194470(%rip), %xmm1
100008c12:	f2 0f 58 c0	addsd	%xmm0, %xmm0
100008c16:	f2 0f 5c c8	subsd	%xmm0, %xmm1
100008c1a:	f2 0f 58 0d 4e f3 02 00	addsd	193358(%rip), %xmm1
100008c22:	f2 0f 5e d1	divsd	%xmm1, %xmm2
100008c26:	f2 0f 11 16	movsd	%xmm2, (%rsi)
100008c2a:	5d	popq	%rbp
100008c2b:	c3	retq
100008c2c:	55	pushq	%rbp
100008c2d:	48 89 e5	movq	%rsp, %rbp
100008c30:	41 57	pushq	%r15
100008c32:	41 56	pushq	%r14
100008c34:	53	pushq	%rbx
100008c35:	48 83 ec 18	subq	$24, %rsp
100008c39:	49 89 d6	movq	%rdx, %r14
100008c3c:	49 89 f7	movq	%rsi, %r15
100008c3f:	48 89 fb	movq	%rdi, %rbx
100008c42:	f2 0f 11 55 d8	movsd	%xmm2, -40(%rbp)
100008c47:	f2 0f 11 4d e0	movsd	%xmm1, -32(%rbp)
100008c4c:	f2 0f 10 0d 74 f7 02 00	movsd	194420(%rip), %xmm1
100008c54:	e8 b3 68 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008c59:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100008c5e:	f2 0f 10 45 e0	movsd	-32(%rbp), %xmm0
100008c63:	f2 0f 10 0d 5d f7 02 00	movsd	194397(%rip), %xmm1
100008c6b:	e8 9c 68 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008c70:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
100008c75:	f2 0f 10 45 d8	movsd	-40(%rbp), %xmm0
100008c7a:	f2 0f 10 0d 46 f7 02 00	movsd	194374(%rip), %xmm1
100008c82:	e8 85 68 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008c87:	f2 0f 10 0d 41 f7 02 00	movsd	194369(%rip), %xmm1
100008c8f:	f2 0f 10 65 e0	movsd	-32(%rbp), %xmm4
100008c94:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
100008c98:	f2 0f 10 15 38 f7 02 00	movsd	194360(%rip), %xmm2
100008ca0:	f2 0f 10 5d d0	movsd	-48(%rbp), %xmm3
100008ca5:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100008ca9:	f2 0f 58 d1	addsd	%xmm1, %xmm2
100008cad:	f2 0f 10 0d 2b f7 02 00	movsd	194347(%rip), %xmm1
100008cb5:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100008cb9:	f2 0f 58 ca	addsd	%xmm2, %xmm1
100008cbd:	f2 0f 11 0b	movsd	%xmm1, (%rbx)
100008cc1:	f2 0f 10 0d 1f f7 02 00	movsd	194335(%rip), %xmm1
100008cc9:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
100008ccd:	f2 0f 10 15 1b f7 02 00	movsd	194331(%rip), %xmm2
100008cd5:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100008cd9:	f2 0f 58 d1	addsd	%xmm1, %xmm2
100008cdd:	f2 0f 10 0d 13 f7 02 00	movsd	194323(%rip), %xmm1
100008ce5:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100008ce9:	f2 0f 58 ca	addsd	%xmm2, %xmm1
100008ced:	66 0f 28 d4	movapd	%xmm4, %xmm2
100008cf1:	f2 0f 59 15 07 f7 02 00	mulsd	194311(%rip), %xmm2
100008cf9:	f2 41 0f 11 0f	movsd	%xmm1, (%r15)
100008cfe:	66 0f 28 cb	movapd	%xmm3, %xmm1
100008d02:	f2 0f 59 0d fe f6 02 00	mulsd	194302(%rip), %xmm1
100008d0a:	f2 0f 58 ca	addsd	%xmm2, %xmm1
100008d0e:	f2 0f 59 05 fa f6 02 00	mulsd	194298(%rip), %xmm0
100008d16:	f2 0f 58 c1	addsd	%xmm1, %xmm0
100008d1a:	f2 41 0f 11 06	movsd	%xmm0, (%r14)
100008d1f:	48 83 c4 18	addq	$24, %rsp
100008d23:	5b	popq	%rbx
100008d24:	41 5e	popq	%r14
100008d26:	41 5f	popq	%r15
100008d28:	5d	popq	%rbp
100008d29:	c3	retq
100008d2a:	55	pushq	%rbp
100008d2b:	48 89 e5	movq	%rsp, %rbp
100008d2e:	41 57	pushq	%r15
100008d30:	41 56	pushq	%r14
100008d32:	53	pushq	%rbx
100008d33:	48 83 ec 18	subq	$24, %rsp
100008d37:	49 89 d6	movq	%rdx, %r14
100008d3a:	49 89 f7	movq	%rsi, %r15
100008d3d:	48 89 fb	movq	%rdi, %rbx
100008d40:	f2 0f 11 55 d8	movsd	%xmm2, -40(%rbp)
100008d45:	f2 0f 11 4d e0	movsd	%xmm1, -32(%rbp)
100008d4a:	f2 0f 10 0d 76 f6 02 00	movsd	194166(%rip), %xmm1
100008d52:	e8 b5 67 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008d57:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100008d5c:	f2 0f 10 45 e0	movsd	-32(%rbp), %xmm0
100008d61:	f2 0f 10 0d 5f f6 02 00	movsd	194143(%rip), %xmm1
100008d69:	e8 9e 67 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008d6e:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
100008d73:	f2 0f 10 45 d8	movsd	-40(%rbp), %xmm0
100008d78:	f2 0f 10 0d 48 f6 02 00	movsd	194120(%rip), %xmm1
100008d80:	e8 87 67 02 00	callq	0x10002f50c ## symbol stub for: _pow
100008d85:	f2 0f 10 0d 43 f6 02 00	movsd	194115(%rip), %xmm1
100008d8d:	f2 0f 10 6d e0	movsd	-32(%rbp), %xmm5
100008d92:	f2 0f 59 cd	mulsd	%xmm5, %xmm1
100008d96:	f2 0f 10 1d 3a f6 02 00	movsd	194106(%rip), %xmm3
100008d9e:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100008da3:	f2 0f 59 da	mulsd	%xmm2, %xmm3
100008da7:	f2 0f 58 d9	addsd	%xmm1, %xmm3
100008dab:	f2 0f 10 25 2d f6 02 00	movsd	194093(%rip), %xmm4
100008db3:	f2 0f 59 e0	mulsd	%xmm0, %xmm4
100008db7:	f2 0f 58 e3	addsd	%xmm3, %xmm4
100008dbb:	f2 0f 10 0d 25 f6 02 00	movsd	194085(%rip), %xmm1
100008dc3:	f2 0f 59 cd	mulsd	%xmm5, %xmm1
100008dc7:	f2 0f 10 1d 21 f6 02 00	movsd	194081(%rip), %xmm3
100008dcf:	f2 0f 59 da	mulsd	%xmm2, %xmm3
100008dd3:	f2 0f 58 d9	addsd	%xmm1, %xmm3
100008dd7:	f2 0f 10 0d 19 f6 02 00	movsd	194073(%rip), %xmm1
100008ddf:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100008de3:	f2 0f 58 cb	addsd	%xmm3, %xmm1
100008de7:	f2 0f 59 2d 11 f6 02 00	mulsd	194065(%rip), %xmm5
100008def:	f2 0f 59 15 11 f6 02 00	mulsd	194065(%rip), %xmm2
100008df7:	f2 0f 58 d5	addsd	%xmm5, %xmm2
100008dfb:	f2 0f 59 05 0d f6 02 00	mulsd	194061(%rip), %xmm0
100008e03:	f2 0f 58 d0	addsd	%xmm0, %xmm2
100008e07:	66 0f 28 c4	movapd	%xmm4, %xmm0
100008e0b:	48 89 df	movq	%rbx, %rdi
100008e0e:	4c 89 fe	movq	%r15, %rsi
100008e11:	4c 89 f2	movq	%r14, %rdx
100008e14:	48 83 c4 18	addq	$24, %rsp
100008e18:	5b	popq	%rbx
100008e19:	41 5e	popq	%r14
100008e1b:	41 5f	popq	%r15
100008e1d:	5d	popq	%rbp
100008e1e:	e9 1c f7 ff ff	jmp	0x10000853f
100008e23:	55	pushq	%rbp
100008e24:	48 89 e5	movq	%rsp, %rbp
100008e27:	41 56	pushq	%r14
100008e29:	53	pushq	%rbx
100008e2a:	48 89 fb	movq	%rdi, %rbx
100008e2d:	48 8b 35 74 8a 04 00	movq	297588(%rip), %rsi ## Objc selector ref: openGLContext
100008e34:	4c 8b 35 e5 3d 03 00	movq	212453(%rip), %r14 ## Objc message: +[NSURL openGLContext]
100008e3b:	41 ff d6	callq	*%r14
100008e3e:	48 8b 35 bb 88 04 00	movq	297147(%rip), %rsi ## Objc selector ref: makeCurrentContext
100008e45:	48 89 c7	movq	%rax, %rdi
100008e48:	41 ff d6	callq	*%r14
100008e4b:	48 8b 35 0e 93 04 00	movq	299790(%rip), %rsi ## Objc selector ref: setWantsBestResolutionOpenGLSurface:
100008e52:	48 89 df	movq	%rbx, %rdi
100008e55:	ba 01 00 00 00	movl	$1, %edx
100008e5a:	41 ff d6	callq	*%r14
100008e5d:	bf 01 1d 00 00	movl	$7425, %edi
100008e62:	e8 27 66 02 00	callq	0x10002f48e ## symbol stub for: _glShadeModel
100008e67:	bf 71 0b 00 00	movl	$2929, %edi
100008e6c:	e8 bd 65 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
100008e71:	bf 03 02 00 00	movl	$515, %edi
100008e76:	e8 9b 65 02 00	callq	0x10002f416 ## symbol stub for: _glDepthFunc
100008e7b:	f3 0f 10 05 fd f7 02 00	movss	194557(%rip), %xmm0
100008e83:	e8 dc 65 02 00	callq	0x10002f464 ## symbol stub for: _glPointSize
100008e88:	bf 20 0b 00 00	movl	$2848, %edi
100008e8d:	e8 9c 65 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
100008e92:	bf e2 0b 00 00	movl	$3042, %edi
100008e97:	e8 92 65 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
100008e9c:	bf 02 03 00 00	movl	$770, %edi
100008ea1:	be 03 03 00 00	movl	$771, %esi
100008ea6:	e8 3b 65 02 00	callq	0x10002f3e6 ## symbol stub for: _glBlendFunc
100008eab:	48 8b 05 0e 9d 04 00	movq	302350(%rip), %rax
100008eb2:	c7 04 03 20 62 61 4c	movl	$1281450528, (%rbx,%rax)
100008eb9:	48 8b 05 08 9d 04 00	movq	302344(%rip), %rax
100008ec0:	c7 04 03 66 66 e6 3f	movl	$1072064102, (%rbx,%rax)
100008ec7:	48 8b 05 02 9d 04 00	movq	302338(%rip), %rax
100008ece:	31 c9	xorl	%ecx, %ecx
100008ed0:	89 0c 03	movl	%ecx, (%rbx,%rax)
100008ed3:	48 8b 05 fe 9c 04 00	movq	302334(%rip), %rax
100008eda:	89 0c 03	movl	%ecx, (%rbx,%rax)
100008edd:	f3 0f 10 05 9f f7 02 00	movss	194463(%rip), %xmm0
100008ee5:	f3 0f 10 1d a7 f0 02 00	movss	192679(%rip), %xmm3
100008eed:	0f 28 c8	movaps	%xmm0, %xmm1
100008ef0:	0f 28 d0	movaps	%xmm0, %xmm2
100008ef3:	e8 fa 64 02 00	callq	0x10002f3f2 ## symbol stub for: _glClearColor
100008ef8:	bf 00 17 00 00	movl	$5888, %edi
100008efd:	e8 5c 65 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
100008f02:	e8 51 65 02 00	callq	0x10002f458 ## symbol stub for: _glLoadIdentity
100008f07:	48 8b 35 9a 7d 04 00	movq	294298(%rip), %rsi ## Objc selector ref: adjustProjectionMatrix
100008f0e:	48 89 df	movq	%rbx, %rdi
100008f11:	41 ff d6	callq	*%r14
100008f14:	48 83 3d 84 bd 04 00 00	cmpq	$0, 310660(%rip)
100008f1c:	75 31	jne	0x100008f4f
100008f1e:	48 8b 3d 23 97 04 00	movq	300835(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
100008f25:	48 8b 1d 84 89 04 00	movq	297348(%rip), %rbx ## Objc selector ref: openHandCursor
100008f2c:	48 89 de	movq	%rbx, %rsi
100008f2f:	e8 c0 65 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100008f34:	84 c0	testb	%al, %al
100008f36:	74 17	je	0x100008f4f
100008f38:	48 8b 3d 09 97 04 00	movq	300809(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
100008f3f:	48 89 de	movq	%rbx, %rsi
100008f42:	ff 15 d8 3c 03 00	callq	*212184(%rip) ## Objc message: +[NSCursor openHandCursor]
100008f48:	48 89 05 51 bd 04 00	movq	%rax, 310609(%rip)
100008f4f:	48 83 3d 51 bd 04 00 00	cmpq	$0, 310609(%rip)
100008f57:	75 31	jne	0x100008f8a
100008f59:	48 8b 3d e8 96 04 00	movq	300776(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
100008f60:	48 8b 1d 41 7f 04 00	movq	294721(%rip), %rbx ## Objc selector ref: closedHandCursor
100008f67:	48 89 de	movq	%rbx, %rsi
100008f6a:	e8 85 65 02 00	callq	0x10002f4f4 ## symbol stub for: _objc_opt_respondsToSelector
100008f6f:	84 c0	testb	%al, %al
100008f71:	74 17	je	0x100008f8a
100008f73:	48 8b 3d ce 96 04 00	movq	300750(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
100008f7a:	48 89 de	movq	%rbx, %rsi
100008f7d:	ff 15 9d 3c 03 00	callq	*212125(%rip) ## Objc message: +[NSCursor closedHandCursor]
100008f83:	48 89 05 1e bd 04 00	movq	%rax, 310558(%rip)
100008f8a:	5b	popq	%rbx
100008f8b:	41 5e	popq	%r14
100008f8d:	5d	popq	%rbp
100008f8e:	c3	retq
100008f8f:	55	pushq	%rbp
100008f90:	48 89 e5	movq	%rsp, %rbp
100008f93:	41 57	pushq	%r15
100008f95:	41 56	pushq	%r14
100008f97:	53	pushq	%rbx
100008f98:	50	pushq	%rax
100008f99:	48 89 fb	movq	%rdi, %rbx
100008f9c:	48 8b 05 3d 9c 04 00	movq	302141(%rip), %rax
100008fa3:	c7 04 07 00 00 00 00	movl	$0, (%rdi,%rax)
100008faa:	4c 8b 35 37 9c 04 00	movq	302135(%rip), %r14
100008fb1:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
100008fb5:	48 85 ff	testq	%rdi, %rdi
100008fb8:	74 05	je	0x100008fbf
100008fba:	e8 15 64 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100008fbf:	4c 8b 3d 2a 9c 04 00	movq	302122(%rip), %r15
100008fc6:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100008fca:	48 85 ff	testq	%rdi, %rdi
100008fcd:	74 05	je	0x100008fd4
100008fcf:	e8 00 64 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100008fd4:	31 c0	xorl	%eax, %eax
100008fd6:	4a 89 04 33	movq	%rax, (%rbx,%r14)
100008fda:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
100008fde:	48 83 c4 08	addq	$8, %rsp
100008fe2:	5b	popq	%rbx
100008fe3:	41 5e	popq	%r14
100008fe5:	41 5f	popq	%r15
100008fe7:	5d	popq	%rbp
100008fe8:	c3	retq
100008fe9:	55	pushq	%rbp
100008fea:	48 89 e5	movq	%rsp, %rbp
100008fed:	41 57	pushq	%r15
100008fef:	41 56	pushq	%r14
100008ff1:	41 55	pushq	%r13
100008ff3:	41 54	pushq	%r12
100008ff5:	53	pushq	%rbx
100008ff6:	50	pushq	%rax
100008ff7:	48 89 fb	movq	%rdi, %rbx
100008ffa:	48 8b 05 f7 9b 04 00	movq	302071(%rip), %rax
100009001:	31 c9	xorl	%ecx, %ecx
100009003:	89 0c 07	movl	%ecx, (%rdi,%rax)
100009006:	48 8b 05 f3 9b 04 00	movq	302067(%rip), %rax
10000900d:	89 0c 07	movl	%ecx, (%rdi,%rax)
100009010:	48 8b 05 f1 9b 04 00	movq	302065(%rip), %rax
100009017:	89 0c 07	movl	%ecx, (%rdi,%rax)
10000901a:	48 8b 05 ef 9b 04 00	movq	302063(%rip), %rax
100009021:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100009025:	48 85 ff	testq	%rdi, %rdi
100009028:	74 05	je	0x10000902f
10000902a:	e8 a5 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000902f:	48 8b 05 e2 9b 04 00	movq	302050(%rip), %rax
100009036:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000903a:	48 85 ff	testq	%rdi, %rdi
10000903d:	74 05	je	0x100009044
10000903f:	e8 90 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100009044:	48 8b 05 d5 9b 04 00	movq	302037(%rip), %rax
10000904b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000904f:	48 85 ff	testq	%rdi, %rdi
100009052:	74 05	je	0x100009059
100009054:	e8 7b 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100009059:	48 8b 05 c8 9b 04 00	movq	302024(%rip), %rax
100009060:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100009064:	48 85 ff	testq	%rdi, %rdi
100009067:	74 05	je	0x10000906e
100009069:	e8 66 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000906e:	4c 8b 35 bb 9b 04 00	movq	302011(%rip), %r14
100009075:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100009079:	48 85 ff	testq	%rdi, %rdi
10000907c:	74 05	je	0x100009083
10000907e:	e8 51 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100009083:	4c 8b 3d ae 9b 04 00	movq	301998(%rip), %r15
10000908a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10000908e:	48 85 ff	testq	%rdi, %rdi
100009091:	74 05	je	0x100009098
100009093:	e8 3c 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
100009098:	4c 8b 25 a1 9b 04 00	movq	301985(%rip), %r12
10000909f:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
1000090a3:	48 85 ff	testq	%rdi, %rdi
1000090a6:	74 05	je	0x1000090ad
1000090a8:	e8 27 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
1000090ad:	4c 8b 2d 94 9b 04 00	movq	301972(%rip), %r13
1000090b4:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000090b8:	48 85 ff	testq	%rdi, %rdi
1000090bb:	74 05	je	0x1000090c2
1000090bd:	e8 12 63 02 00	callq	0x10002f3d4 ## symbol stub for: _free
1000090c2:	31 c0	xorl	%eax, %eax
1000090c4:	48 8b 0d 4d 9b 04 00	movq	301901(%rip), %rcx
1000090cb:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000090cf:	48 8b 0d 3a 9b 04 00	movq	301882(%rip), %rcx
1000090d6:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000090da:	4a 89 04 33	movq	%rax, (%rbx,%r14)
1000090de:	48 8b 0d 43 9b 04 00	movq	301891(%rip), %rcx
1000090e5:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000090e9:	48 8b 0d 30 9b 04 00	movq	301872(%rip), %rcx
1000090f0:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000090f4:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
1000090f8:	4a 89 04 23	movq	%rax, (%rbx,%r12)
1000090fc:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
100009100:	48 83 c4 08	addq	$8, %rsp
100009104:	5b	popq	%rbx
100009105:	41 5c	popq	%r12
100009107:	41 5d	popq	%r13
100009109:	41 5e	popq	%r14
10000910b:	41 5f	popq	%r15
10000910d:	5d	popq	%rbp
10000910e:	c3	retq
10000910f:	55	pushq	%rbp
100009110:	48 89 e5	movq	%rsp, %rbp
100009113:	41 56	pushq	%r14
100009115:	53	pushq	%rbx
100009116:	48 83 ec 10	subq	$16, %rsp
10000911a:	48 89 fb	movq	%rdi, %rbx
10000911d:	48 8b 35 84 81 04 00	movq	295300(%rip), %rsi ## Objc selector ref: freeData
100009124:	4c 8b 35 f5 3a 03 00	movq	211701(%rip), %r14 ## Objc message: -[%rdi freeData]
10000912b:	41 ff d6	callq	*%r14
10000912e:	48 8b 35 7b 81 04 00	movq	295291(%rip), %rsi ## Objc selector ref: freeHoldData
100009135:	48 89 df	movq	%rbx, %rdi
100009138:	41 ff d6	callq	*%r14
10000913b:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10000913f:	48 89 1f	movq	%rbx, (%rdi)
100009142:	48 8b 05 97 96 04 00	movq	300695(%rip), %rax ## Objc class ref: ProfView3D
100009149:	48 89 47 08	movq	%rax, 8(%rdi)
10000914d:	48 8b 35 fc 7e 04 00	movq	294652(%rip), %rsi ## Objc selector ref: dealloc
100009154:	e8 83 63 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100009159:	48 83 c4 10	addq	$16, %rsp
10000915d:	5b	popq	%rbx
10000915e:	41 5e	popq	%r14
100009160:	5d	popq	%rbp
100009161:	c3	retq
100009162:	55	pushq	%rbp
100009163:	48 89 e5	movq	%rsp, %rbp
100009166:	41 57	pushq	%r15
100009168:	41 56	pushq	%r14
10000916a:	41 55	pushq	%r13
10000916c:	41 54	pushq	%r12
10000916e:	53	pushq	%rbx
10000916f:	48 83 ec 18	subq	$24, %rsp
100009173:	49 89 fc	movq	%rdi, %r12
100009176:	81 fa 1f 5a 59 58	cmpl	$1482250783, %edx
10000917c:	7e 30	jle	0x1000091ae
10000917e:	81 fa 20 5a 59 58	cmpl	$1482250784, %edx
100009184:	74 50	je	0x1000091d6
100009186:	81 fa 20 76 75 59	cmpl	$1500870176, %edx
10000918c:	74 5c	je	0x1000091ea
10000918e:	81 fa 20 79 78 59	cmpl	$1501067552, %edx
100009194:	0f 85 8c 04 00 00	jne	0x100009626
10000919a:	48 8d 05 8d 09 00 00	leaq	2445(%rip), %rax
1000091a1:	48 89 45 d0	movq	%rax, -48(%rbp)
1000091a5:	48 8d 0d a2 0a 00 00	leaq	2722(%rip), %rcx
1000091ac:	eb 62	jmp	0x100009210
1000091ae:	81 fa 20 62 61 4c	cmpl	$1281450528, %edx
1000091b4:	74 48	je	0x1000091fe
1000091b6:	81 fa 20 76 75 4c	cmpl	$1282766368, %edx
1000091bc:	0f 85 64 04 00 00	jne	0x100009626
1000091c2:	48 8d 05 6c 04 00 00	leaq	1132(%rip), %rax
1000091c9:	48 89 45 d0	movq	%rax, -48(%rbp)
1000091cd:	48 8d 0d 40 05 00 00	leaq	1344(%rip), %rcx
1000091d4:	eb 3a	jmp	0x100009210
1000091d6:	48 8d 05 f1 07 00 00	leaq	2033(%rip), %rax
1000091dd:	48 89 45 d0	movq	%rax, -48(%rbp)
1000091e1:	48 8d 0d c6 08 00 00	leaq	2246(%rip), %rcx
1000091e8:	eb 26	jmp	0x100009210
1000091ea:	48 8d 05 fd 0a 00 00	leaq	2813(%rip), %rax
1000091f1:	48 89 45 d0	movq	%rax, -48(%rbp)
1000091f5:	48 8d 0d 70 0c 00 00	leaq	3184(%rip), %rcx
1000091fc:	eb 12	jmp	0x100009210
1000091fe:	48 8d 05 69 06 00 00	leaq	1641(%rip), %rax
100009205:	48 89 45 d0	movq	%rax, -48(%rbp)
100009209:	48 8d 0d 02 07 00 00	leaq	1794(%rip), %rcx
100009210:	48 8b 05 39 9a 04 00	movq	301625(%rip), %rax
100009217:	41 8b 04 04	movl	(%r12,%rax), %eax
10000921b:	3d 20 62 61 4c	cmpl	$1281450528, %eax
100009220:	48 89 4d c8	movq	%rcx, -56(%rbp)
100009224:	89 55 c4	movl	%edx, -60(%rbp)
100009227:	0f 85 a3 01 00 00	jne	0x1000093d0
10000922d:	48 8b 05 c4 99 04 00	movq	301508(%rip), %rax
100009234:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
100009239:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000923d:	74 5b	je	0x10000929a
10000923f:	45 31 f6	xorl	%r14d, %r14d
100009242:	45 31 ed	xorl	%r13d, %r13d
100009245:	45 31 ff	xorl	%r15d, %r15d
100009248:	48 8b 05 e9 99 04 00	movq	301545(%rip), %rax
10000924f:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100009253:	4c 01 ef	addq	%r13, %rdi
100009256:	48 8b 05 c3 99 04 00	movq	301507(%rip), %rax
10000925d:	49 8b 04 04	movq	(%r12,%rax), %rax
100009261:	42 8b 0c 30	movl	(%rax,%r14), %ecx
100009265:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
10000926b:	48 c1 e6 20	shlq	$32, %rsi
10000926f:	48 09 ce	orq	%rcx, %rsi
100009272:	4c 89 e3	movq	%r12, %rbx
100009275:	49 89 d4	movq	%rdx, %r12
100009278:	ff d2	callq	*%rdx
10000927a:	4c 89 e2	movq	%r12, %rdx
10000927d:	49 89 dc	movq	%rbx, %r12
100009280:	48 8b 05 71 99 04 00	movq	301425(%rip), %rax
100009287:	49 ff c7	incq	%r15
10000928a:	8b 04 03	movl	(%rbx,%rax), %eax
10000928d:	49 83 c5 0c	addq	$12, %r13
100009291:	49 83 c6 06	addq	$6, %r14
100009295:	49 39 c7	cmpq	%rax, %r15
100009298:	72 ae	jb	0x100009248
10000929a:	48 8b 05 5f 99 04 00	movq	301407(%rip), %rax
1000092a1:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
1000092a6:	49 89 d7	movq	%rdx, %r15
1000092a9:	74 50	je	0x1000092fb
1000092ab:	45 31 f6	xorl	%r14d, %r14d
1000092ae:	45 31 ed	xorl	%r13d, %r13d
1000092b1:	31 db	xorl	%ebx, %ebx
1000092b3:	48 8b 05 86 99 04 00	movq	301446(%rip), %rax
1000092ba:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000092be:	4c 01 ef	addq	%r13, %rdi
1000092c1:	48 8b 05 60 99 04 00	movq	301408(%rip), %rax
1000092c8:	49 8b 04 04	movq	(%r12,%rax), %rax
1000092cc:	42 8b 0c 30	movl	(%rax,%r14), %ecx
1000092d0:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
1000092d6:	48 c1 e6 20	shlq	$32, %rsi
1000092da:	48 09 ce	orq	%rcx, %rsi
1000092dd:	41 ff d7	callq	*%r15
1000092e0:	48 8b 05 19 99 04 00	movq	301337(%rip), %rax
1000092e7:	48 ff c3	incq	%rbx
1000092ea:	41 8b 04 04	movl	(%r12,%rax), %eax
1000092ee:	49 83 c5 0c	addq	$12, %r13
1000092f2:	49 83 c6 06	addq	$6, %r14
1000092f6:	48 39 c3	cmpq	%rax, %rbx
1000092f9:	72 b8	jb	0x1000092b3
1000092fb:	48 8b 05 06 99 04 00	movq	301318(%rip), %rax
100009302:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
100009307:	74 50	je	0x100009359
100009309:	45 31 f6	xorl	%r14d, %r14d
10000930c:	45 31 ed	xorl	%r13d, %r13d
10000930f:	31 db	xorl	%ebx, %ebx
100009311:	48 8b 05 30 99 04 00	movq	301360(%rip), %rax
100009318:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10000931c:	4c 01 ef	addq	%r13, %rdi
10000931f:	48 8b 05 0a 99 04 00	movq	301322(%rip), %rax
100009326:	49 8b 04 04	movq	(%r12,%rax), %rax
10000932a:	42 8b 0c 30	movl	(%rax,%r14), %ecx
10000932e:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009334:	48 c1 e6 20	shlq	$32, %rsi
100009338:	48 09 ce	orq	%rcx, %rsi
10000933b:	41 ff d7	callq	*%r15
10000933e:	48 8b 05 c3 98 04 00	movq	301251(%rip), %rax
100009345:	48 ff c3	incq	%rbx
100009348:	41 8b 04 04	movl	(%r12,%rax), %eax
10000934c:	49 83 c5 0c	addq	$12, %r13
100009350:	49 83 c6 06	addq	$6, %r14
100009354:	48 39 c3	cmpq	%rax, %rbx
100009357:	72 b8	jb	0x100009311
100009359:	48 8b 05 80 98 04 00	movq	301184(%rip), %rax
100009360:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
100009365:	74 50	je	0x1000093b7
100009367:	45 31 f6	xorl	%r14d, %r14d
10000936a:	45 31 ed	xorl	%r13d, %r13d
10000936d:	31 db	xorl	%ebx, %ebx
10000936f:	48 8b 05 7a 98 04 00	movq	301178(%rip), %rax
100009376:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10000937a:	4c 01 ef	addq	%r13, %rdi
10000937d:	48 8b 05 64 98 04 00	movq	301156(%rip), %rax
100009384:	49 8b 04 04	movq	(%r12,%rax), %rax
100009388:	42 8b 0c 30	movl	(%rax,%r14), %ecx
10000938c:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009392:	48 c1 e6 20	shlq	$32, %rsi
100009396:	48 09 ce	orq	%rcx, %rsi
100009399:	41 ff d7	callq	*%r15
10000939c:	48 8b 05 3d 98 04 00	movq	301117(%rip), %rax
1000093a3:	48 ff c3	incq	%rbx
1000093a6:	41 8b 04 04	movl	(%r12,%rax), %eax
1000093aa:	49 83 c5 0c	addq	$12, %r13
1000093ae:	49 83 c6 06	addq	$6, %r14
1000093b2:	48 39 c3	cmpq	%rax, %rbx
1000093b5:	72 b8	jb	0x10000936f
1000093b7:	48 8b 05 02 98 04 00	movq	301058(%rip), %rax
1000093be:	8b 55 c4	movl	-60(%rbp), %edx
1000093c1:	41 89 14 04	movl	%edx, (%r12,%rax)
1000093c5:	48 8b 05 84 98 04 00	movq	301188(%rip), %rax
1000093cc:	41 8b 04 04	movl	(%r12,%rax), %eax
1000093d0:	3d 20 5a 59 58	cmpl	$1482250784, %eax
1000093d5:	0f 85 6a 01 00 00	jne	0x100009545
1000093db:	4c 8b 3d 16 98 04 00	movq	301078(%rip), %r15
1000093e2:	43 83 3c 3c 00	cmpl	$0, (%r12,%r15)
1000093e7:	74 49	je	0x100009432
1000093e9:	45 31 f6	xorl	%r14d, %r14d
1000093ec:	45 31 ed	xorl	%r13d, %r13d
1000093ef:	31 db	xorl	%ebx, %ebx
1000093f1:	48 8b 05 40 98 04 00	movq	301120(%rip), %rax
1000093f8:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000093fc:	4c 01 ef	addq	%r13, %rdi
1000093ff:	48 8b 05 1a 98 04 00	movq	301082(%rip), %rax
100009406:	49 8b 04 04	movq	(%r12,%rax), %rax
10000940a:	42 8b 0c 30	movl	(%rax,%r14), %ecx
10000940e:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009414:	48 c1 e6 20	shlq	$32, %rsi
100009418:	48 09 ce	orq	%rcx, %rsi
10000941b:	ff 55 c8	callq	*-56(%rbp)
10000941e:	48 ff c3	incq	%rbx
100009421:	43 8b 04 3c	movl	(%r12,%r15), %eax
100009425:	49 83 c5 0c	addq	$12, %r13
100009429:	49 83 c6 06	addq	$6, %r14
10000942d:	48 39 c3	cmpq	%rax, %rbx
100009430:	72 bf	jb	0x1000093f1
100009432:	4c 8b 3d c7 97 04 00	movq	300999(%rip), %r15
100009439:	43 83 3c 3c 00	cmpl	$0, (%r12,%r15)
10000943e:	74 49	je	0x100009489
100009440:	45 31 f6	xorl	%r14d, %r14d
100009443:	45 31 ed	xorl	%r13d, %r13d
100009446:	31 db	xorl	%ebx, %ebx
100009448:	48 8b 05 f1 97 04 00	movq	301041(%rip), %rax
10000944f:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100009453:	4c 01 ef	addq	%r13, %rdi
100009456:	48 8b 05 cb 97 04 00	movq	301003(%rip), %rax
10000945d:	49 8b 04 04	movq	(%r12,%rax), %rax
100009461:	42 8b 0c 30	movl	(%rax,%r14), %ecx
100009465:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
10000946b:	48 c1 e6 20	shlq	$32, %rsi
10000946f:	48 09 ce	orq	%rcx, %rsi
100009472:	ff 55 c8	callq	*-56(%rbp)
100009475:	48 ff c3	incq	%rbx
100009478:	43 8b 04 3c	movl	(%r12,%r15), %eax
10000947c:	49 83 c5 0c	addq	$12, %r13
100009480:	49 83 c6 06	addq	$6, %r14
100009484:	48 39 c3	cmpq	%rax, %rbx
100009487:	72 bf	jb	0x100009448
100009489:	4c 8b 3d 78 97 04 00	movq	300920(%rip), %r15
100009490:	43 83 3c 3c 00	cmpl	$0, (%r12,%r15)
100009495:	74 49	je	0x1000094e0
100009497:	45 31 f6	xorl	%r14d, %r14d
10000949a:	45 31 ed	xorl	%r13d, %r13d
10000949d:	31 db	xorl	%ebx, %ebx
10000949f:	48 8b 05 a2 97 04 00	movq	300962(%rip), %rax
1000094a6:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000094aa:	4c 01 ef	addq	%r13, %rdi
1000094ad:	48 8b 05 7c 97 04 00	movq	300924(%rip), %rax
1000094b4:	49 8b 04 04	movq	(%r12,%rax), %rax
1000094b8:	42 8b 0c 30	movl	(%rax,%r14), %ecx
1000094bc:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
1000094c2:	48 c1 e6 20	shlq	$32, %rsi
1000094c6:	48 09 ce	orq	%rcx, %rsi
1000094c9:	ff 55 c8	callq	*-56(%rbp)
1000094cc:	48 ff c3	incq	%rbx
1000094cf:	43 8b 04 3c	movl	(%r12,%r15), %eax
1000094d3:	49 83 c5 0c	addq	$12, %r13
1000094d7:	49 83 c6 06	addq	$6, %r14
1000094db:	48 39 c3	cmpq	%rax, %rbx
1000094de:	72 bf	jb	0x10000949f
1000094e0:	4c 8b 3d f9 96 04 00	movq	300793(%rip), %r15
1000094e7:	43 83 3c 3c 00	cmpl	$0, (%r12,%r15)
1000094ec:	74 49	je	0x100009537
1000094ee:	45 31 f6	xorl	%r14d, %r14d
1000094f1:	45 31 ed	xorl	%r13d, %r13d
1000094f4:	31 db	xorl	%ebx, %ebx
1000094f6:	48 8b 05 f3 96 04 00	movq	300787(%rip), %rax
1000094fd:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100009501:	4c 01 ef	addq	%r13, %rdi
100009504:	48 8b 05 dd 96 04 00	movq	300765(%rip), %rax
10000950b:	49 8b 04 04	movq	(%r12,%rax), %rax
10000950f:	42 8b 0c 30	movl	(%rax,%r14), %ecx
100009513:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009519:	48 c1 e6 20	shlq	$32, %rsi
10000951d:	48 09 ce	orq	%rcx, %rsi
100009520:	ff 55 c8	callq	*-56(%rbp)
100009523:	48 ff c3	incq	%rbx
100009526:	43 8b 04 3c	movl	(%r12,%r15), %eax
10000952a:	49 83 c5 0c	addq	$12, %r13
10000952e:	49 83 c6 06	addq	$6, %r14
100009532:	48 39 c3	cmpq	%rax, %rbx
100009535:	72 bf	jb	0x1000094f6
100009537:	48 8b 05 82 96 04 00	movq	300674(%rip), %rax
10000953e:	8b 55 c4	movl	-60(%rbp), %edx
100009541:	41 89 14 04	movl	%edx, (%r12,%rax)
100009545:	48 8b 05 0c 97 04 00	movq	300812(%rip), %rax
10000954c:	41 8b 04 04	movl	(%r12,%rax), %eax
100009550:	3d 20 62 61 4c	cmpl	$1281450528, %eax
100009555:	75 66	jne	0x1000095bd
100009557:	4c 8b 2d 82 96 04 00	movq	300674(%rip), %r13
10000955e:	43 83 3c 2c 00	cmpl	$0, (%r12,%r13)
100009563:	0f 84 bd 00 00 00	je	0x100009626
100009569:	45 31 f6	xorl	%r14d, %r14d
10000956c:	45 31 ff	xorl	%r15d, %r15d
10000956f:	31 db	xorl	%ebx, %ebx
100009571:	48 8b 05 78 96 04 00	movq	300664(%rip), %rax
100009578:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10000957c:	4c 01 ff	addq	%r15, %rdi
10000957f:	48 8b 05 62 96 04 00	movq	300642(%rip), %rax
100009586:	49 8b 04 04	movq	(%r12,%rax), %rax
10000958a:	42 8b 0c 30	movl	(%rax,%r14), %ecx
10000958e:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009594:	48 c1 e6 20	shlq	$32, %rsi
100009598:	48 09 ce	orq	%rcx, %rsi
10000959b:	ff 55 d0	callq	*-48(%rbp)
10000959e:	48 ff c3	incq	%rbx
1000095a1:	43 8b 04 2c	movl	(%r12,%r13), %eax
1000095a5:	49 83 c7 0c	addq	$12, %r15
1000095a9:	49 83 c6 06	addq	$6, %r14
1000095ad:	48 39 c3	cmpq	%rax, %rbx
1000095b0:	72 bf	jb	0x100009571
1000095b2:	48 8b 05 9f 96 04 00	movq	300703(%rip), %rax
1000095b9:	41 8b 04 04	movl	(%r12,%rax), %eax
1000095bd:	3d 20 5a 59 58	cmpl	$1482250784, %eax
1000095c2:	4c 8b 6d c8	movq	-56(%rbp), %r13
1000095c6:	75 5e	jne	0x100009626
1000095c8:	48 8b 05 11 96 04 00	movq	300561(%rip), %rax
1000095cf:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
1000095d4:	74 50	je	0x100009626
1000095d6:	45 31 f6	xorl	%r14d, %r14d
1000095d9:	31 db	xorl	%ebx, %ebx
1000095db:	45 31 ff	xorl	%r15d, %r15d
1000095de:	48 8b 05 0b 96 04 00	movq	300555(%rip), %rax
1000095e5:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000095e9:	48 01 df	addq	%rbx, %rdi
1000095ec:	48 8b 05 f5 95 04 00	movq	300533(%rip), %rax
1000095f3:	49 8b 04 04	movq	(%r12,%rax), %rax
1000095f7:	42 8b 0c 30	movl	(%rax,%r14), %ecx
1000095fb:	42 0f b7 74 30 04	movzwl	4(%rax,%r14), %esi
100009601:	48 c1 e6 20	shlq	$32, %rsi
100009605:	48 09 ce	orq	%rcx, %rsi
100009608:	41 ff d5	callq	*%r13
10000960b:	48 8b 05 ce 95 04 00	movq	300494(%rip), %rax
100009612:	49 ff c7	incq	%r15
100009615:	41 8b 04 04	movl	(%r12,%rax), %eax
100009619:	48 83 c3 0c	addq	$12, %rbx
10000961d:	49 83 c6 06	addq	$6, %r14
100009621:	49 39 c7	cmpq	%rax, %r15
100009624:	72 b8	jb	0x1000095de
100009626:	48 83 c4 18	addq	$24, %rsp
10000962a:	5b	popq	%rbx
10000962b:	41 5c	popq	%r12
10000962d:	41 5d	popq	%r13
10000962f:	41 5e	popq	%r14
100009631:	41 5f	popq	%r15
100009633:	5d	popq	%rbp
100009634:	c3	retq
100009635:	55	pushq	%rbp
100009636:	48 89 e5	movq	%rsp, %rbp
100009639:	41 57	pushq	%r15
10000963b:	41 56	pushq	%r14
10000963d:	53	pushq	%rbx
10000963e:	48 83 ec 18	subq	$24, %rsp
100009642:	48 89 fb	movq	%rdi, %rbx
100009645:	48 89 f0	movq	%rsi, %rax
100009648:	b9 ff ff 00 00	movl	$65535, %ecx
10000964d:	89 f2	movl	%esi, %edx
10000964f:	21 ca	andl	%ecx, %edx
100009651:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
100009655:	f2 0f 5e 05 bb ed 02 00	divsd	191931(%rip), %xmm0
10000965d:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
100009662:	48 c1 e8 20	shrq	$32, %rax
100009666:	c1 ee 10	shrl	$16, %esi
100009669:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
10000966d:	f2 0f 10 2d ab ed 02 00	movsd	191915(%rip), %xmm5
100009675:	f2 0f 59 cd	mulsd	%xmm5, %xmm1
100009679:	f2 0f 10 1d a7 ed 02 00	movsd	191911(%rip), %xmm3
100009681:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100009685:	f2 0f 10 25 a3 ed 02 00	movsd	191907(%rip), %xmm4
10000968d:	21 c8	andl	%ecx, %eax
10000968f:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
100009693:	f2 0f 58 cc	addsd	%xmm4, %xmm1
100009697:	f2 0f 59 d5	mulsd	%xmm5, %xmm2
10000969b:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
10000969f:	f2 0f 58 d4	addsd	%xmm4, %xmm2
1000096a3:	4c 8d 75 d0	leaq	-48(%rbp), %r14
1000096a7:	4c 8d 7d d8	leaq	-40(%rbp), %r15
1000096ab:	31 ff	xorl	%edi, %edi
1000096ad:	4c 89 f6	movq	%r14, %rsi
1000096b0:	4c 89 fa	movq	%r15, %rdx
1000096b3:	e8 3c f4 ff ff	callq	0x100008af4
1000096b8:	f2 0f 10 45 e0	movsd	-32(%rbp), %xmm0
1000096bd:	f2 0f 5e 05 73 ed 02 00	divsd	191859(%rip), %xmm0
1000096c5:	f2 0f 58 05 73 ed 02 00	addsd	191859(%rip), %xmm0
1000096cd:	f2 0f 59 05 4b e9 02 00	mulsd	190795(%rip), %xmm0
1000096d5:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000096d9:	f3 0f 11 43 08	movss	%xmm0, 8(%rbx)
1000096de:	f2 41 0f 10 06	movsd	(%r14), %xmm0
1000096e3:	f2 0f 10 0d 5d ed 02 00	movsd	191837(%rip), %xmm1
1000096eb:	f2 0f 5e c1	divsd	%xmm1, %xmm0
1000096ef:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000096f3:	f3 0f 11 03	movss	%xmm0, (%rbx)
1000096f7:	f2 41 0f 10 07	movsd	(%r15), %xmm0
1000096fc:	f2 0f 5e c1	divsd	%xmm1, %xmm0
100009700:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009704:	f3 0f 11 43 04	movss	%xmm0, 4(%rbx)
100009709:	48 83 c4 18	addq	$24, %rsp
10000970d:	5b	popq	%rbx
10000970e:	41 5e	popq	%r14
100009710:	41 5f	popq	%r15
100009712:	5d	popq	%rbp
100009713:	c3	retq
100009714:	55	pushq	%rbp
100009715:	48 89 e5	movq	%rsp, %rbp
100009718:	53	pushq	%rbx
100009719:	48 83 ec 38	subq	$56, %rsp
10000971d:	48 89 fb	movq	%rdi, %rbx
100009720:	48 89 f0	movq	%rsi, %rax
100009723:	66 0f 6e c6	movd	%esi, %xmm0
100009727:	c1 ee 10	shrl	$16, %esi
10000972a:	66 0f 3a 22 c6 01	pinsrd	$1, %esi, %xmm0
100009730:	66 0f ef c9	pxor	%xmm1, %xmm1
100009734:	66 0f 3a 0e c8 f5	pblendw	$245, %xmm0, %xmm1
10000973a:	f3 0f e6 d9	cvtdq2pd	%xmm1, %xmm3
10000973e:	48 c1 e8 20	shrq	$32, %rax
100009742:	66 0f 59 1d f6 ed 02 00	mulpd	191990(%rip), %xmm3
10000974a:	0f b7 c0	movzwl	%ax, %eax
10000974d:	f2 0f 2a e0	cvtsi2sd	%eax, %xmm4
100009751:	f2 0f 59 25 cf ec 02 00	mulsd	191695(%rip), %xmm4
100009759:	66 0f 28 d3	movapd	%xmm3, %xmm2
10000975d:	66 0f 15 d3	unpckhpd	%xmm3, %xmm2
100009761:	66 0f 2e 15 c7 eb 02 00	ucomisd	191431(%rip), %xmm2
100009769:	76 41	jbe	0x1000097ac
10000976b:	f3 0f 7e 0d d5 eb 02 00	movq	191445(%rip), %xmm1
100009773:	66 0f 28 c2	movapd	%xmm2, %xmm0
100009777:	66 0f 29 5d c0	movapd	%xmm3, -64(%rbp)
10000977c:	66 0f 29 65 d0	movapd	%xmm4, -48(%rbp)
100009781:	66 0f 29 55 e0	movapd	%xmm2, -32(%rbp)
100009786:	e8 81 5d 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000978b:	66 0f 28 55 e0	movapd	-32(%rbp), %xmm2
100009790:	66 0f 28 65 d0	movapd	-48(%rbp), %xmm4
100009795:	66 0f 28 5d c0	movapd	-64(%rbp), %xmm3
10000979a:	f2 0f 59 05 76 eb 02 00	mulsd	191350(%rip), %xmm0
1000097a2:	f2 0f 58 05 76 eb 02 00	addsd	191350(%rip), %xmm0
1000097aa:	eb 14	jmp	0x1000097c0
1000097ac:	f2 0f 10 05 84 eb 02 00	movsd	191364(%rip), %xmm0
1000097b4:	f2 0f 59 c2	mulsd	%xmm2, %xmm0
1000097b8:	f2 0f 5e 05 80 eb 02 00	divsd	191360(%rip), %xmm0
1000097c0:	f2 0f 10 0d 88 eb 02 00	movsd	191368(%rip), %xmm1
1000097c8:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
1000097cc:	f2 0f 58 cb	addsd	%xmm3, %xmm1
1000097d0:	f2 0f 59 25 98 e7 02 00	mulsd	190360(%rip), %xmm4
1000097d8:	f2 0f 58 e1	addsd	%xmm1, %xmm4
1000097dc:	66 0f 57 c9	xorpd	%xmm1, %xmm1
1000097e0:	f2 0f 10 15 70 eb 02 00	movsd	191344(%rip), %xmm2
1000097e8:	66 0f 2e d4	ucomisd	%xmm4, %xmm2
1000097ec:	77 2c	ja	0x10000981a
1000097ee:	66 0f 59 1d 5a ed 02 00	mulpd	191834(%rip), %xmm3
1000097f6:	f2 0f 10 0d 72 eb 02 00	movsd	191346(%rip), %xmm1
1000097fe:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100009802:	f2 0f 12 d4	movddup	%xmm4, %xmm2
100009806:	66 0f 5e da	divpd	%xmm2, %xmm3
10000980a:	66 0f 58 1d 4e ed 02 00	addpd	191822(%rip), %xmm3
100009812:	f2 0f 12 c9	movddup	%xmm1, %xmm1
100009816:	66 0f 59 cb	mulpd	%xmm3, %xmm1
10000981a:	f2 0f 5e 05 16 ec 02 00	divsd	191510(%rip), %xmm0
100009822:	f2 0f 58 05 16 ec 02 00	addsd	191510(%rip), %xmm0
10000982a:	f2 0f 59 05 ee e7 02 00	mulsd	190446(%rip), %xmm0
100009832:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009836:	f3 0f 11 43 08	movss	%xmm0, 8(%rbx)
10000983b:	f2 0f 10 05 05 ec 02 00	movsd	191493(%rip), %xmm0
100009843:	66 0f 28 d1	movapd	%xmm1, %xmm2
100009847:	f2 0f 5e d0	divsd	%xmm0, %xmm2
10000984b:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
10000984f:	f3 0f 11 13	movss	%xmm2, (%rbx)
100009853:	66 0f 15 c9	unpckhpd	%xmm1, %xmm1
100009857:	f2 0f 5e c8	divsd	%xmm0, %xmm1
10000985b:	0f 57 c0	xorps	%xmm0, %xmm0
10000985e:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100009862:	f3 0f 11 43 04	movss	%xmm0, 4(%rbx)
100009867:	48 83 c4 38	addq	$56, %rsp
10000986b:	5b	popq	%rbx
10000986c:	5d	popq	%rbp
10000986d:	c3	retq
10000986e:	55	pushq	%rbp
10000986f:	48 89 e5	movq	%rsp, %rbp
100009872:	48 89 f0	movq	%rsi, %rax
100009875:	b9 ff ff 00 00	movl	$65535, %ecx
10000987a:	89 f2	movl	%esi, %edx
10000987c:	21 ca	andl	%ecx, %edx
10000987e:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
100009882:	48 c1 e8 20	shrq	$32, %rax
100009886:	f2 0f 5e 05 8a eb 02 00	divsd	191370(%rip), %xmm0
10000988e:	c1 ee 10	shrl	$16, %esi
100009891:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
100009895:	f2 0f 10 15 83 eb 02 00	movsd	191363(%rip), %xmm2
10000989d:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
1000098a1:	f2 0f 10 1d 7f eb 02 00	movsd	191359(%rip), %xmm3
1000098a9:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
1000098ad:	f2 0f 10 25 7b eb 02 00	movsd	191355(%rip), %xmm4
1000098b5:	f2 0f 58 cc	addsd	%xmm4, %xmm1
1000098b9:	21 c8	andl	%ecx, %eax
1000098bb:	f2 0f 2a e8	cvtsi2sd	%eax, %xmm5
1000098bf:	f2 0f 59 ea	mulsd	%xmm2, %xmm5
1000098c3:	f2 0f 59 eb	mulsd	%xmm3, %xmm5
1000098c7:	f2 0f 58 ec	addsd	%xmm4, %xmm5
1000098cb:	f2 0f 5e 05 65 eb 02 00	divsd	191333(%rip), %xmm0
1000098d3:	f2 0f 58 05 65 eb 02 00	addsd	191333(%rip), %xmm0
1000098db:	f2 0f 59 05 3d e7 02 00	mulsd	190269(%rip), %xmm0
1000098e3:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000098e7:	f3 0f 11 47 08	movss	%xmm0, 8(%rdi)
1000098ec:	f2 0f 10 05 5c e7 02 00	movsd	190300(%rip), %xmm0
1000098f4:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
1000098f8:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
1000098fc:	f3 0f 11 0f	movss	%xmm1, (%rdi)
100009900:	f2 0f 59 e8	mulsd	%xmm0, %xmm5
100009904:	0f 57 c0	xorps	%xmm0, %xmm0
100009907:	f2 0f 5a c5	cvtsd2ss	%xmm5, %xmm0
10000990b:	f3 0f 11 47 04	movss	%xmm0, 4(%rdi)
100009910:	5d	popq	%rbp
100009911:	c3	retq
100009912:	55	pushq	%rbp
100009913:	48 89 e5	movq	%rsp, %rbp
100009916:	41 57	pushq	%r15
100009918:	41 56	pushq	%r14
10000991a:	41 54	pushq	%r12
10000991c:	53	pushq	%rbx
10000991d:	48 83 ec 20	subq	$32, %rsp
100009921:	48 89 fb	movq	%rdi, %rbx
100009924:	48 89 f0	movq	%rsi, %rax
100009927:	48 c1 e8 20	shrq	$32, %rax
10000992b:	b9 ff ff 00 00	movl	$65535, %ecx
100009930:	89 f2	movl	%esi, %edx
100009932:	21 ca	andl	%ecx, %edx
100009934:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
100009938:	f2 0f 10 1d e8 ea 02 00	movsd	191208(%rip), %xmm3
100009940:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
100009944:	c1 ee 10	shrl	$16, %esi
100009947:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
10000994b:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
10000994f:	21 c8	andl	%ecx, %eax
100009951:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
100009955:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100009959:	4c 8d 75 c8	leaq	-56(%rbp), %r14
10000995d:	4c 8d 7d d0	leaq	-48(%rbp), %r15
100009961:	4c 8d 65 d8	leaq	-40(%rbp), %r12
100009965:	4c 89 f7	movq	%r14, %rdi
100009968:	4c 89 fe	movq	%r15, %rsi
10000996b:	4c 89 e2	movq	%r12, %rdx
10000996e:	e8 cc eb ff ff	callq	0x10000853f
100009973:	f2 41 0f 10 06	movsd	(%r14), %xmm0
100009978:	f2 0f 5e 05 b8 ea 02 00	divsd	191160(%rip), %xmm0
100009980:	f2 0f 58 05 b8 ea 02 00	addsd	191160(%rip), %xmm0
100009988:	f2 0f 59 05 90 e6 02 00	mulsd	190096(%rip), %xmm0
100009990:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009994:	f3 0f 11 43 08	movss	%xmm0, 8(%rbx)
100009999:	f2 0f 10 05 af e6 02 00	movsd	190127(%rip), %xmm0
1000099a1:	f2 41 0f 10 0f	movsd	(%r15), %xmm1
1000099a6:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
1000099aa:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
1000099ae:	f3 0f 11 0b	movss	%xmm1, (%rbx)
1000099b2:	f2 41 0f 59 04 24	mulsd	(%r12), %xmm0
1000099b8:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000099bc:	f3 0f 11 43 04	movss	%xmm0, 4(%rbx)
1000099c1:	48 83 c4 20	addq	$32, %rsp
1000099c5:	5b	popq	%rbx
1000099c6:	41 5c	popq	%r12
1000099c8:	41 5e	popq	%r14
1000099ca:	41 5f	popq	%r15
1000099cc:	5d	popq	%rbp
1000099cd:	c3	retq
1000099ce:	55	pushq	%rbp
1000099cf:	48 89 e5	movq	%rsp, %rbp
1000099d2:	41 57	pushq	%r15
1000099d4:	41 56	pushq	%r14
1000099d6:	41 54	pushq	%r12
1000099d8:	53	pushq	%rbx
1000099d9:	48 83 ec 20	subq	$32, %rsp
1000099dd:	48 89 fb	movq	%rdi, %rbx
1000099e0:	48 89 f0	movq	%rsi, %rax
1000099e3:	b9 ff ff 00 00	movl	$65535, %ecx
1000099e8:	89 f2	movl	%esi, %edx
1000099ea:	21 ca	andl	%ecx, %edx
1000099ec:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
1000099f0:	f2 0f 5e 05 20 ea 02 00	divsd	191008(%rip), %xmm0
1000099f8:	48 c1 e8 20	shrq	$32, %rax
1000099fc:	c1 ee 10	shrl	$16, %esi
1000099ff:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
100009a03:	f2 0f 10 1d 15 ea 02 00	movsd	190997(%rip), %xmm3
100009a0b:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100009a0f:	f2 0f 10 25 11 ea 02 00	movsd	190993(%rip), %xmm4
100009a17:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
100009a1b:	f2 0f 10 2d 0d ea 02 00	movsd	190989(%rip), %xmm5
100009a23:	21 c8	andl	%ecx, %eax
100009a25:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
100009a29:	f2 0f 58 cd	addsd	%xmm5, %xmm1
100009a2d:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100009a31:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
100009a35:	f2 0f 58 d5	addsd	%xmm5, %xmm2
100009a39:	4c 8d 75 c8	leaq	-56(%rbp), %r14
100009a3d:	4c 8d 7d d0	leaq	-48(%rbp), %r15
100009a41:	4c 8d 65 d8	leaq	-40(%rbp), %r12
100009a45:	4c 89 f7	movq	%r14, %rdi
100009a48:	4c 89 fe	movq	%r15, %rsi
100009a4b:	4c 89 e2	movq	%r12, %rdx
100009a4e:	e8 00 ee ff ff	callq	0x100008853
100009a53:	f2 0f 10 05 e5 e9 02 00	movsd	190949(%rip), %xmm0
100009a5b:	f2 41 0f 10 0f	movsd	(%r15), %xmm1
100009a60:	f2 0f 58 c8	addsd	%xmm0, %xmm1
100009a64:	f2 0f 10 15 b4 e5 02 00	movsd	189876(%rip), %xmm2
100009a6c:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
100009a70:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100009a74:	f3 0f 11 4b 08	movss	%xmm1, 8(%rbx)
100009a79:	f2 41 0f 10 0c 24	movsd	(%r12), %xmm1
100009a7f:	f2 0f 58 c8	addsd	%xmm0, %xmm1
100009a83:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
100009a87:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100009a8b:	f3 0f 11 0b	movss	%xmm1, (%rbx)
100009a8f:	f2 41 0f 58 06	addsd	(%r14), %xmm0
100009a94:	f2 0f 59 c2	mulsd	%xmm2, %xmm0
100009a98:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009a9c:	f3 0f 11 43 04	movss	%xmm0, 4(%rbx)
100009aa1:	48 83 c4 20	addq	$32, %rsp
100009aa5:	5b	popq	%rbx
100009aa6:	41 5c	popq	%r12
100009aa8:	41 5e	popq	%r14
100009aaa:	41 5f	popq	%r15
100009aac:	5d	popq	%rbp
100009aad:	c3	retq
100009aae:	55	pushq	%rbp
100009aaf:	48 89 e5	movq	%rsp, %rbp
100009ab2:	48 89 f0	movq	%rsi, %rax
100009ab5:	b9 ff ff 00 00	movl	$65535, %ecx
100009aba:	89 f2	movl	%esi, %edx
100009abc:	21 ca	andl	%ecx, %edx
100009abe:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
100009ac2:	48 c1 e8 20	shrq	$32, %rax
100009ac6:	f2 0f 10 0d 5a e9 02 00	movsd	190810(%rip), %xmm1
100009ace:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100009ad2:	c1 ee 10	shrl	$16, %esi
100009ad5:	f2 0f 2a d6	cvtsi2sd	%esi, %xmm2
100009ad9:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100009add:	21 c8	andl	%ecx, %eax
100009adf:	f2 0f 2a d8	cvtsi2sd	%eax, %xmm3
100009ae3:	f2 0f 10 25 55 e9 02 00	movsd	190805(%rip), %xmm4
100009aeb:	f2 0f 58 d4	addsd	%xmm4, %xmm2
100009aef:	f2 0f 10 2d 29 e5 02 00	movsd	189737(%rip), %xmm5
100009af7:	f2 0f 59 d5	mulsd	%xmm5, %xmm2
100009afb:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
100009aff:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
100009b03:	f3 0f 11 57 08	movss	%xmm2, 8(%rdi)
100009b08:	f2 0f 58 dc	addsd	%xmm4, %xmm3
100009b0c:	f2 0f 59 dd	mulsd	%xmm5, %xmm3
100009b10:	0f 57 c9	xorps	%xmm1, %xmm1
100009b13:	f2 0f 5a cb	cvtsd2ss	%xmm3, %xmm1
100009b17:	f3 0f 11 0f	movss	%xmm1, (%rdi)
100009b1b:	f2 0f 58 c4	addsd	%xmm4, %xmm0
100009b1f:	f2 0f 59 c5	mulsd	%xmm5, %xmm0
100009b23:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009b27:	f3 0f 11 47 04	movss	%xmm0, 4(%rdi)
100009b2c:	5d	popq	%rbp
100009b2d:	c3	retq
100009b2e:	55	pushq	%rbp
100009b2f:	48 89 e5	movq	%rsp, %rbp
100009b32:	41 57	pushq	%r15
100009b34:	41 56	pushq	%r14
100009b36:	41 54	pushq	%r12
100009b38:	53	pushq	%rbx
100009b39:	48 83 ec 20	subq	$32, %rsp
100009b3d:	48 89 fb	movq	%rdi, %rbx
100009b40:	0f b7 c6	movzwl	%si, %eax
100009b43:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
100009b47:	f2 0f 5e 05 c9 e8 02 00	divsd	190665(%rip), %xmm0
100009b4f:	48 c7 45 d8 00 00 00 00	movq	$0, -40(%rbp)
100009b57:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100009b5b:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100009b5f:	66 0f 2e 05 e9 e8 02 00	ucomisd	190697(%rip), %xmm0
100009b67:	0f 82 ad 00 00 00	jb	0x100009c1a
100009b6d:	48 89 f0	movq	%rsi, %rax
100009b70:	48 c1 e8 20	shrq	$32, %rax
100009b74:	0f b7 c0	movzwl	%ax, %eax
100009b77:	0f 57 d2	xorps	%xmm2, %xmm2
100009b7a:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
100009b7e:	f2 0f 10 1d 9a e8 02 00	movsd	190618(%rip), %xmm3
100009b86:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100009b8a:	f2 0f 10 25 96 e8 02 00	movsd	190614(%rip), %xmm4
100009b92:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
100009b96:	f2 0f 10 2d 92 e8 02 00	movsd	190610(%rip), %xmm5
100009b9e:	c1 ee 10	shrl	$16, %esi
100009ba1:	0f 57 c9	xorps	%xmm1, %xmm1
100009ba4:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
100009ba8:	f2 0f 58 d5	addsd	%xmm5, %xmm2
100009bac:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100009bb0:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
100009bb4:	f2 0f 58 cd	addsd	%xmm5, %xmm1
100009bb8:	4c 8d 75 c8	leaq	-56(%rbp), %r14
100009bbc:	4c 8d 7d d8	leaq	-40(%rbp), %r15
100009bc0:	4c 8d 65 d0	leaq	-48(%rbp), %r12
100009bc4:	4c 89 f7	movq	%r14, %rdi
100009bc7:	4c 89 fe	movq	%r15, %rsi
100009bca:	4c 89 e2	movq	%r12, %rdx
100009bcd:	e8 81 ec ff ff	callq	0x100008853
100009bd2:	f2 41 0f 10 06	movsd	(%r14), %xmm0
100009bd7:	f2 41 0f 10 0f	movsd	(%r15), %xmm1
100009bdc:	66 0f 28 d0	movapd	%xmm0, %xmm2
100009be0:	f2 0f 58 d1	addsd	%xmm1, %xmm2
100009be4:	f2 41 0f 58 14 24	addsd	(%r12), %xmm2
100009bea:	66 0f 2e 15 ee e6 02 00	ucomisd	190190(%rip), %xmm2
100009bf2:	76 22	jbe	0x100009c16
100009bf4:	66 0f 14 c1	unpcklpd	%xmm1, %xmm0
100009bf8:	f2 0f 12 d2	movddup	%xmm2, %xmm2
100009bfc:	66 0f 5e c2	divpd	%xmm2, %xmm0
100009c00:	66 0f 58 05 68 e9 02 00	addpd	190824(%rip), %xmm0
100009c08:	66 0f 59 05 70 e9 02 00	mulpd	190832(%rip), %xmm0
100009c10:	66 0f 5a d0	cvtpd2ps	%xmm0, %xmm2
100009c14:	eb 04	jmp	0x100009c1a
100009c16:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100009c1a:	f2 0f 58 0d 1e e8 02 00	addsd	190494(%rip), %xmm1
100009c22:	f2 0f 59 0d f6 e3 02 00	mulsd	189430(%rip), %xmm1
100009c2a:	0f 57 c0	xorps	%xmm0, %xmm0
100009c2d:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100009c31:	f3 0f 11 43 08	movss	%xmm0, 8(%rbx)
100009c36:	f3 0f 11 13	movss	%xmm2, (%rbx)
100009c3a:	66 0f 3a 17 53 04 01	extractps	$1, %xmm2, 4(%rbx)
100009c41:	48 83 c4 20	addq	$32, %rsp
100009c45:	5b	popq	%rbx
100009c46:	41 5c	popq	%r12
100009c48:	41 5e	popq	%r14
100009c4a:	41 5f	popq	%r15
100009c4c:	5d	popq	%rbp
100009c4d:	c3	retq
100009c4e:	55	pushq	%rbp
100009c4f:	48 89 e5	movq	%rsp, %rbp
100009c52:	48 89 f0	movq	%rsi, %rax
100009c55:	66 0f 6e ce	movd	%esi, %xmm1
100009c59:	c1 ee 10	shrl	$16, %esi
100009c5c:	66 0f 3a 22 ce 01	pinsrd	$1, %esi, %xmm1
100009c62:	66 0f ef c0	pxor	%xmm0, %xmm0
100009c66:	66 0f 3a 0e c8 0a	pblendw	$10, %xmm0, %xmm1
100009c6c:	f3 0f e6 c9	cvtdq2pd	%xmm1, %xmm1
100009c70:	48 c1 e8 20	shrq	$32, %rax
100009c74:	66 0f 59 0d c4 e8 02 00	mulpd	190660(%rip), %xmm1
100009c7c:	0f b7 c0	movzwl	%ax, %eax
100009c7f:	f2 0f 2a e0	cvtsi2sd	%eax, %xmm4
100009c83:	f2 0f 59 25 9d e7 02 00	mulsd	190365(%rip), %xmm4
100009c8b:	66 0f 28 d1	movapd	%xmm1, %xmm2
100009c8f:	66 0f 15 d1	unpckhpd	%xmm1, %xmm2
100009c93:	66 0f 28 d9	movapd	%xmm1, %xmm3
100009c97:	66 0f 7c d9	haddpd	%xmm1, %xmm3
100009c9b:	f2 0f 58 dc	addsd	%xmm4, %xmm3
100009c9f:	66 0f 2e 1d 39 e6 02 00	ucomisd	190009(%rip), %xmm3
100009ca7:	76 1c	jbe	0x100009cc5
100009ca9:	f2 0f 12 c3	movddup	%xmm3, %xmm0
100009cad:	66 0f 5e c8	divpd	%xmm0, %xmm1
100009cb1:	66 0f 58 0d b7 e8 02 00	addpd	190647(%rip), %xmm1
100009cb9:	66 0f 59 0d bf e8 02 00	mulpd	190655(%rip), %xmm1
100009cc1:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
100009cc5:	f2 0f 58 15 73 e7 02 00	addsd	190323(%rip), %xmm2
100009ccd:	f2 0f 59 15 4b e3 02 00	mulsd	189259(%rip), %xmm2
100009cd5:	0f 57 c9	xorps	%xmm1, %xmm1
100009cd8:	f2 0f 5a ca	cvtsd2ss	%xmm2, %xmm1
100009cdc:	f3 0f 11 4f 08	movss	%xmm1, 8(%rdi)
100009ce1:	66 0f 7e 07	movd	%xmm0, (%rdi)
100009ce5:	66 0f 3a 16 47 04 01	pextrd	$1, %xmm0, 4(%rdi)
100009cec:	5d	popq	%rbp
100009ced:	c3	retq
100009cee:	55	pushq	%rbp
100009cef:	48 89 e5	movq	%rsp, %rbp
100009cf2:	41 57	pushq	%r15
100009cf4:	41 56	pushq	%r14
100009cf6:	41 54	pushq	%r12
100009cf8:	53	pushq	%rbx
100009cf9:	48 83 ec 20	subq	$32, %rsp
100009cfd:	48 89 fb	movq	%rdi, %rbx
100009d00:	0f b7 c6	movzwl	%si, %eax
100009d03:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
100009d07:	f2 0f 5e 05 09 e7 02 00	divsd	190217(%rip), %xmm0
100009d0f:	48 c7 45 d8 00 00 00 00	movq	$0, -40(%rbp)
100009d17:	66 0f 28 25 71 e8 02 00	movapd	190577(%rip), %xmm4
100009d1f:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100009d23:	66 0f 2e 05 25 e7 02 00	ucomisd	190245(%rip), %xmm0
100009d2b:	0f 82 9e 00 00 00	jb	0x100009dcf
100009d31:	48 89 f0	movq	%rsi, %rax
100009d34:	48 c1 e8 20	shrq	$32, %rax
100009d38:	0f b7 c0	movzwl	%ax, %eax
100009d3b:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
100009d3f:	f2 0f 10 1d d9 e6 02 00	movsd	190169(%rip), %xmm3
100009d47:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
100009d4b:	f2 0f 10 25 d5 e6 02 00	movsd	190165(%rip), %xmm4
100009d53:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
100009d57:	f2 0f 10 2d d1 e6 02 00	movsd	190161(%rip), %xmm5
100009d5f:	c1 ee 10	shrl	$16, %esi
100009d62:	0f 57 c9	xorps	%xmm1, %xmm1
100009d65:	f2 0f 2a ce	cvtsi2sd	%esi, %xmm1
100009d69:	f2 0f 58 d5	addsd	%xmm5, %xmm2
100009d6d:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
100009d71:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
100009d75:	f2 0f 58 cd	addsd	%xmm5, %xmm1
100009d79:	4c 8d 75 c8	leaq	-56(%rbp), %r14
100009d7d:	4c 8d 7d d8	leaq	-40(%rbp), %r15
100009d81:	4c 8d 65 d0	leaq	-48(%rbp), %r12
100009d85:	4c 89 f7	movq	%r14, %rdi
100009d88:	4c 89 fe	movq	%r15, %rsi
100009d8b:	4c 89 e2	movq	%r12, %rdx
100009d8e:	e8 c0 ea ff ff	callq	0x100008853
100009d93:	f2 41 0f 10 06	movsd	(%r14), %xmm0
100009d98:	f2 41 0f 10 0f	movsd	(%r15), %xmm1
100009d9d:	66 0f 28 d0	movapd	%xmm0, %xmm2
100009da1:	f2 0f 58 d1	addsd	%xmm1, %xmm2
100009da5:	f2 41 0f 58 14 24	addsd	(%r12), %xmm2
100009dab:	66 0f 2e 15 2d e5 02 00	ucomisd	189741(%rip), %xmm2
100009db3:	76 12	jbe	0x100009dc7
100009db5:	66 0f 28 e1	movapd	%xmm1, %xmm4
100009db9:	66 0f 14 e0	unpcklpd	%xmm0, %xmm4
100009dbd:	f2 0f 12 c2	movddup	%xmm2, %xmm0
100009dc1:	66 0f 5e e0	divpd	%xmm0, %xmm4
100009dc5:	eb 08	jmp	0x100009dcf
100009dc7:	66 0f 28 25 c1 e7 02 00	movapd	190401(%rip), %xmm4
100009dcf:	66 0f 28 c4	movapd	%xmm4, %xmm0
100009dd3:	66 0f 15 c4	unpckhpd	%xmm4, %xmm0
100009dd7:	f2 0f 10 15 89 e5 02 00	movsd	189833(%rip), %xmm2
100009ddf:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
100009de3:	f2 0f 10 1d cd e5 02 00	movsd	189901(%rip), %xmm3
100009deb:	f2 0f 59 dc	mulsd	%xmm4, %xmm3
100009def:	f2 0f 58 c0	addsd	%xmm0, %xmm0
100009df3:	f2 0f 5c d8	subsd	%xmm0, %xmm3
100009df7:	f2 0f 58 1d 71 e1 02 00	addsd	188785(%rip), %xmm3
100009dff:	f2 0f 5e d3	divsd	%xmm3, %xmm2
100009e03:	f2 0f 59 25 55 e5 02 00	mulsd	189781(%rip), %xmm4
100009e0b:	f2 0f 5e e3	divsd	%xmm3, %xmm4
100009e0f:	f2 0f 58 0d 29 e6 02 00	addsd	189993(%rip), %xmm1
100009e17:	f2 0f 59 0d 01 e2 02 00	mulsd	188929(%rip), %xmm1
100009e1f:	0f 57 c0	xorps	%xmm0, %xmm0
100009e22:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100009e26:	f2 0f 58 15 2a e6 02 00	addsd	189994(%rip), %xmm2
100009e2e:	f2 0f 10 0d 2a e6 02 00	movsd	189994(%rip), %xmm1
100009e36:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100009e3a:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
100009e3e:	f3 0f 11 43 08	movss	%xmm0, 8(%rbx)
100009e43:	f3 0f 11 13	movss	%xmm2, (%rbx)
100009e47:	f2 0f 58 25 31 e5 02 00	addsd	189745(%rip), %xmm4
100009e4f:	f2 0f 59 e1	mulsd	%xmm1, %xmm4
100009e53:	0f 57 c0	xorps	%xmm0, %xmm0
100009e56:	f2 0f 5a c4	cvtsd2ss	%xmm4, %xmm0
100009e5a:	f3 0f 11 43 04	movss	%xmm0, 4(%rbx)
100009e5f:	48 83 c4 20	addq	$32, %rsp
100009e63:	5b	popq	%rbx
100009e64:	41 5c	popq	%r12
100009e66:	41 5e	popq	%r14
100009e68:	41 5f	popq	%r15
100009e6a:	5d	popq	%rbp
100009e6b:	c3	retq
100009e6c:	55	pushq	%rbp
100009e6d:	48 89 e5	movq	%rsp, %rbp
100009e70:	48 89 f0	movq	%rsi, %rax
100009e73:	66 0f 6e c6	movd	%esi, %xmm0
100009e77:	c1 ee 10	shrl	$16, %esi
100009e7a:	66 0f 3a 22 c6 01	pinsrd	$1, %esi, %xmm0
100009e80:	66 0f ef c9	pxor	%xmm1, %xmm1
100009e84:	66 0f 3a 0e c8 f5	pblendw	$245, %xmm0, %xmm1
100009e8a:	f3 0f e6 c9	cvtdq2pd	%xmm1, %xmm1
100009e8e:	48 c1 e8 20	shrq	$32, %rax
100009e92:	66 0f 59 0d a6 e6 02 00	mulpd	190118(%rip), %xmm1
100009e9a:	0f b7 c0	movzwl	%ax, %eax
100009e9d:	f2 0f 2a d8	cvtsi2sd	%eax, %xmm3
100009ea1:	f2 0f 59 1d 7f e5 02 00	mulsd	189823(%rip), %xmm3
100009ea9:	66 0f 28 c1	movapd	%xmm1, %xmm0
100009ead:	66 0f 15 c1	unpckhpd	%xmm1, %xmm0
100009eb1:	66 0f 28 d1	movapd	%xmm1, %xmm2
100009eb5:	66 0f 7c d1	haddpd	%xmm1, %xmm2
100009eb9:	f2 0f 58 d3	addsd	%xmm3, %xmm2
100009ebd:	66 0f 2e 15 1b e4 02 00	ucomisd	189467(%rip), %xmm2
100009ec5:	76 0a	jbe	0x100009ed1
100009ec7:	f2 0f 12 d2	movddup	%xmm2, %xmm2
100009ecb:	66 0f 5e ca	divpd	%xmm2, %xmm1
100009ecf:	eb 08	jmp	0x100009ed9
100009ed1:	66 0f 28 0d 37 e6 02 00	movapd	190007(%rip), %xmm1
100009ed9:	f2 0f 10 1d 87 e4 02 00	movsd	189575(%rip), %xmm3
100009ee1:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
100009ee5:	66 0f 28 d1	movapd	%xmm1, %xmm2
100009ee9:	66 0f 15 d1	unpckhpd	%xmm1, %xmm2
100009eed:	f2 0f 10 25 c3 e4 02 00	movsd	189635(%rip), %xmm4
100009ef5:	f2 0f 59 e2	mulsd	%xmm2, %xmm4
100009ef9:	f2 0f 58 c9	addsd	%xmm1, %xmm1
100009efd:	f2 0f 5c e1	subsd	%xmm1, %xmm4
100009f01:	f2 0f 58 25 67 e0 02 00	addsd	188519(%rip), %xmm4
100009f09:	f2 0f 5e dc	divsd	%xmm4, %xmm3
100009f0d:	f2 0f 59 15 4b e4 02 00	mulsd	189515(%rip), %xmm2
100009f15:	f2 0f 5e d4	divsd	%xmm4, %xmm2
100009f19:	f2 0f 58 05 1f e5 02 00	addsd	189727(%rip), %xmm0
100009f21:	f2 0f 59 05 f7 e0 02 00	mulsd	188663(%rip), %xmm0
100009f29:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100009f2d:	f2 0f 58 1d 23 e5 02 00	addsd	189731(%rip), %xmm3
100009f35:	f2 0f 10 0d 23 e5 02 00	movsd	189731(%rip), %xmm1
100009f3d:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
100009f41:	f2 0f 5a db	cvtsd2ss	%xmm3, %xmm3
100009f45:	f3 0f 11 47 08	movss	%xmm0, 8(%rdi)
100009f4a:	f3 0f 11 1f	movss	%xmm3, (%rdi)
100009f4e:	f2 0f 58 15 2a e4 02 00	addsd	189482(%rip), %xmm2
100009f56:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
100009f5a:	0f 57 c0	xorps	%xmm0, %xmm0
100009f5d:	f2 0f 5a c2	cvtsd2ss	%xmm2, %xmm0
100009f61:	f3 0f 11 47 04	movss	%xmm0, 4(%rdi)
100009f66:	5d	popq	%rbp
100009f67:	c3	retq
100009f68:	55	pushq	%rbp
100009f69:	48 89 e5	movq	%rsp, %rbp
100009f6c:	41 57	pushq	%r15
100009f6e:	41 56	pushq	%r14
100009f70:	41 55	pushq	%r13
100009f72:	41 54	pushq	%r12
100009f74:	53	pushq	%rbx
100009f75:	48 81 ec 48 01 00 00	subq	$328, %rsp
100009f7c:	41 89 ce	movl	%ecx, %r14d
100009f7f:	49 89 d4	movq	%rdx, %r12
100009f82:	48 89 fb	movq	%rdi, %rbx
100009f85:	48 8b 05 8c 28 03 00	movq	206988(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100009f8c:	48 8b 00	movq	(%rax), %rax
100009f8f:	48 89 45 d0	movq	%rax, -48(%rbp)
100009f93:	48 8b 35 0e 73 04 00	movq	291598(%rip), %rsi ## Objc selector ref: freeData
100009f9a:	4c 8b 3d 7f 2c 03 00	movq	207999(%rip), %r15 ## Objc message: -[%rdi freeData]
100009fa1:	41 ff d7	callq	*%r15
100009fa4:	48 8b 35 1d 80 04 00	movq	294941(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100009fab:	48 89 df	movq	%rbx, %rdi
100009fae:	ba 01 00 00 00	movl	$1, %edx
100009fb3:	41 ff d7	callq	*%r15
100009fb6:	4d 85 e4	testq	%r12, %r12
100009fb9:	0f 84 df 01 00 00	je	0x10000a19e
100009fbf:	45 85 f6	testl	%r14d, %r14d
100009fc2:	41 bd 30 42 32 41	movl	$1093812784, %r13d
100009fc8:	45 0f 45 ee	cmovnel	%r14d, %r13d
100009fcc:	41 81 fd 74 6d 61 67	cmpl	$1734438260, %r13d
100009fd3:	75 38	jne	0x10000a00d
100009fd5:	48 8b 05 3c 28 03 00	movq	206908(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100009fdc:	48 8b 00	movq	(%rax), %rax
100009fdf:	48 3b 45 d0	cmpq	-48(%rbp), %rax
100009fe3:	0f 85 14 1b 00 00	jne	0x10000bafd
100009fe9:	48 8b 35 68 80 04 00	movq	295016(%rip), %rsi ## Objc selector ref: setProfileGamut:
100009ff0:	48 89 df	movq	%rbx, %rdi
100009ff3:	4c 89 e2	movq	%r12, %rdx
100009ff6:	48 81 c4 48 01 00 00	addq	$328, %rsp
100009ffd:	5b	popq	%rbx
100009ffe:	41 5c	popq	%r12
10000a000:	41 5d	popq	%r13
10000a002:	41 5e	popq	%r14
10000a004:	41 5f	popq	%r15
10000a006:	5d	popq	%rbp
10000a007:	ff 25 13 2c 03 00	jmpq	*207891(%rip) ## Objc message: -[%rdi setProfileGamut:]
10000a00d:	4c 89 e7	movq	%r12, %rdi
10000a010:	e8 5d 52 02 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
10000a015:	48 85 c0	testq	%rax, %rax
10000a018:	48 89 9d e0 fe ff ff	movq	%rbx, -288(%rbp)
10000a01f:	4c 89 a5 78 ff ff ff	movq	%r12, -136(%rbp)
10000a026:	74 1d	je	0x10000a045
10000a028:	49 89 c6	movq	%rax, %r14
10000a02b:	48 89 c7	movq	%rax, %rdi
10000a02e:	e8 6d 4e 02 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10000a033:	48 85 c0	testq	%rax, %rax
10000a036:	74 0f	je	0x10000a047
10000a038:	44 8b 78 0c	movl	12(%rax), %r15d
10000a03c:	44 8b 60 10	movl	16(%rax), %r12d
10000a040:	8b 58 14	movl	20(%rax), %ebx
10000a043:	eb 02	jmp	0x10000a047
10000a045:	eb 08	jmp	0x10000a04f
10000a047:	4c 89 f7	movq	%r14, %rdi
10000a04a:	e8 c3 4e 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a04f:	44 89 e8	movl	%r13d, %eax
10000a052:	25 00 ff ff ff	andl	$4294967040, %eax
10000a057:	41 81 ff 6c 63 6d 6e	cmpl	$1852662636, %r15d
10000a05e:	41 be 45 4d 41 4e	movl	$1312902469, %r14d
10000a064:	45 0f 45 f4	cmovnel	%r12d, %r14d
10000a068:	41 80 fd 32	cmpb	$50, %r13b
10000a06c:	74 27	je	0x10000a095
10000a06e:	41 80 fd 31	cmpb	$49, %r13b
10000a072:	74 2a	je	0x10000a09e
10000a074:	41 80 fd 30	cmpb	$48, %r13b
10000a078:	74 12	je	0x10000a08c
10000a07a:	41 0f b6 cd	movzbl	%r13b, %ecx
10000a07e:	83 f9 33	cmpl	$51, %ecx
10000a081:	75 09	jne	0x10000a08c
10000a083:	48 8b 0d fe 29 03 00	movq	207358(%rip), %rcx ## literal pool symbol address: _kColorSyncRenderingIntentAbsolute
10000a08a:	eb 19	jmp	0x10000a0a5
10000a08c:	48 8b 0d fd 29 03 00	movq	207357(%rip), %rcx ## literal pool symbol address: _kColorSyncRenderingIntentPerceptual
10000a093:	eb 10	jmp	0x10000a0a5
10000a095:	48 8b 0d 04 2a 03 00	movq	207364(%rip), %rcx ## literal pool symbol address: _kColorSyncRenderingIntentSaturation
10000a09c:	eb 07	jmp	0x10000a0a5
10000a09e:	48 8b 0d f3 29 03 00	movq	207347(%rip), %rcx ## literal pool symbol address: _kColorSyncRenderingIntentRelative
10000a0a5:	48 8b 09	movq	(%rcx), %rcx
10000a0a8:	48 89 4d 88	movq	%rcx, -120(%rbp)
10000a0ac:	3d 00 65 72 70	cmpl	$1886545152, %eax
10000a0b1:	74 24	je	0x10000a0d7
10000a0b3:	3d 00 41 32 42	cmpl	$1110589696, %eax
10000a0b8:	74 29	je	0x10000a0e3
10000a0ba:	3d 00 42 32 41	cmpl	$1093812736, %eax
10000a0bf:	0f 85 d9 00 00 00	jne	0x10000a19e
10000a0c5:	41 81 ff 74 73 62 61	cmpl	$1633842036, %r15d
10000a0cc:	75 24	jne	0x10000a0f2
10000a0ce:	48 8b 05 f3 29 03 00	movq	207347(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToPCS
10000a0d5:	eb 22	jmp	0x10000a0f9
10000a0d7:	48 8b 05 ea 29 03 00	movq	207338(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToPCS
10000a0de:	45 89 f5	movl	%r14d, %r13d
10000a0e1:	eb 19	jmp	0x10000a0fc
10000a0e3:	48 8b 05 d6 29 03 00	movq	207318(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToDevice
10000a0ea:	45 89 f5	movl	%r14d, %r13d
10000a0ed:	41 89 de	movl	%ebx, %r14d
10000a0f0:	eb 0a	jmp	0x10000a0fc
10000a0f2:	48 8b 05 b7 29 03 00	movq	207287(%rip), %rax ## literal pool symbol address: _kColorSyncTransformDeviceToPCS
10000a0f9:	41 89 dd	movl	%ebx, %r13d
10000a0fc:	48 8b 18	movq	(%rax), %rbx
10000a0ff:	41 81 ff 74 73 62 61	cmpl	$1633842036, %r15d
10000a106:	74 10	je	0x10000a118
10000a108:	41 81 ff 6b 6e 69 6c	cmpl	$1818848875, %r15d
10000a10f:	75 11	jne	0x10000a122
10000a111:	31 c0	xorl	%eax, %eax
10000a113:	45 31 e4	xorl	%r12d, %r12d
10000a116:	eb 3c	jmp	0x10000a154
10000a118:	41 bc 01 00 00 00	movl	$1, %r12d
10000a11e:	b0 01	movb	$1, %al
10000a120:	eb 32	jmp	0x10000a154
10000a122:	48 8b 05 87 29 03 00	movq	207239(%rip), %rax ## literal pool symbol address: _kColorSyncTransformDeviceToPCS
10000a129:	48 8b 30	movq	(%rax), %rsi
10000a12c:	48 89 df	movq	%rbx, %rdi
10000a12f:	e8 c0 4d 02 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
10000a134:	45 31 e4	xorl	%r12d, %r12d
10000a137:	84 c0	testb	%al, %al
10000a139:	41 0f 94 c4	sete	%r12b
10000a13d:	48 8b 05 7c 29 03 00	movq	207228(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToDevice
10000a144:	48 8b 30	movq	(%rax), %rsi
10000a147:	48 89 df	movq	%rbx, %rdi
10000a14a:	e8 a5 4d 02 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
10000a14f:	84 c0	testb	%al, %al
10000a151:	0f 94 c0	sete	%al
10000a154:	41 81 fd 20 5a 59 58	cmpl	$1482250784, %r13d
10000a15b:	74 09	je	0x10000a166
10000a15d:	41 81 fd 20 62 61 4c	cmpl	$1281450528, %r13d
10000a164:	75 38	jne	0x10000a19e
10000a166:	49 89 df	movq	%rbx, %r15
10000a169:	31 db	xorl	%ebx, %ebx
10000a16b:	41 81 fe 58 41 52 47	cmpl	$1196573016, %r14d
10000a172:	7e 55	jle	0x10000a1c9
10000a174:	41 81 fe 44 4d 41 4e	cmpl	$1312902468, %r14d
10000a17b:	7e 69	jle	0x10000a1e6
10000a17d:	41 81 fe 45 4d 41 4e	cmpl	$1312902469, %r14d
10000a184:	0f 84 82 00 00 00	je	0x10000a20c
10000a18a:	41 81 fe 20 5a 59 58	cmpl	$1482250784, %r14d
10000a191:	74 79	je	0x10000a20c
10000a193:	41 81 fe 20 42 47 52	cmpl	$1380401696, %r14d
10000a19a:	74 70	je	0x10000a20c
10000a19c:	eb 02	jmp	0x10000a1a0
10000a19e:	31 db	xorl	%ebx, %ebx
10000a1a0:	48 8b 05 71 26 03 00	movq	206449(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000a1a7:	48 8b 00	movq	(%rax), %rax
10000a1aa:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10000a1ae:	0f 85 49 19 00 00	jne	0x10000bafd
10000a1b4:	0f b6 c3	movzbl	%bl, %eax
10000a1b7:	48 81 c4 48 01 00 00	addq	$328, %rsp
10000a1be:	5b	popq	%rbx
10000a1bf:	41 5c	popq	%r12
10000a1c1:	41 5d	popq	%r13
10000a1c3:	41 5e	popq	%r14
10000a1c5:	41 5f	popq	%r15
10000a1c7:	5d	popq	%rbp
10000a1c8:	c3	retq
10000a1c9:	41 81 fe 1f 59 4d 43	cmpl	$1129142559, %r14d
10000a1d0:	7f 28	jg	0x10000a1fa
10000a1d2:	41 81 fe 52 4c 43 33	cmpl	$860048466, %r14d
10000a1d9:	74 31	je	0x10000a20c
10000a1db:	41 81 fe 52 4c 43 34	cmpl	$876825682, %r14d
10000a1e2:	74 28	je	0x10000a20c
10000a1e4:	eb ba	jmp	0x10000a1a0
10000a1e6:	41 81 fe 59 41 52 47	cmpl	$1196573017, %r14d
10000a1ed:	74 1d	je	0x10000a20c
10000a1ef:	41 81 fe 20 62 61 4c	cmpl	$1281450528, %r14d
10000a1f6:	74 14	je	0x10000a20c
10000a1f8:	eb a6	jmp	0x10000a1a0
10000a1fa:	41 81 fe 20 59 4d 43	cmpl	$1129142560, %r14d
10000a201:	74 09	je	0x10000a20c
10000a203:	41 81 fe 4b 59 4d 43	cmpl	$1129142603, %r14d
10000a20a:	75 94	jne	0x10000a1a0
10000a20c:	41 81 fe 45 4d 41 4e	cmpl	$1312902469, %r14d
10000a213:	44 89 b5 50 ff ff ff	movl	%r14d, -176(%rbp)
10000a21a:	44 89 ad 30 ff ff ff	movl	%r13d, -208(%rbp)
10000a221:	89 85 70 ff ff ff	movl	%eax, -144(%rbp)
10000a227:	75 46	jne	0x10000a26f
10000a229:	b0 01	movb	$1, %al
10000a22b:	89 85 48 ff ff ff	movl	%eax, -184(%rbp)
10000a231:	c7 85 68 ff ff ff 00 00 00 00	movl	$0, -152(%rbp)
10000a23b:	b8 04 00 00 00	movl	$4, %eax
10000a240:	48 89 85 18 ff ff ff	movq	%rax, -232(%rbp)
10000a247:	b8 06 00 00 00	movl	$6, %eax
10000a24c:	48 89 85 10 ff ff ff	movq	%rax, -240(%rbp)
10000a253:	c7 85 38 ff ff ff 00 00 00 00	movl	$0, -200(%rbp)
10000a25d:	c7 85 40 ff ff ff 00 00 00 00	movl	$0, -192(%rbp)
10000a267:	4c 89 fb	movq	%r15, %rbx
10000a26a:	e9 d0 00 00 00	jmp	0x10000a33f
10000a26f:	41 81 fe 52 4c 43 34	cmpl	$876825682, %r14d
10000a276:	4c 89 fb	movq	%r15, %rbx
10000a279:	74 1e	je	0x10000a299
10000a27b:	b8 03 00 00 00	movl	$3, %eax
10000a280:	48 89 85 10 ff ff ff	movq	%rax, -240(%rbp)
10000a287:	41 81 fe 59 41 52 47	cmpl	$1196573017, %r14d
10000a28e:	74 49	je	0x10000a2d9
10000a290:	41 81 fe 4b 59 4d 43	cmpl	$1129142603, %r14d
10000a297:	75 74	jne	0x10000a30d
10000a299:	b0 01	movb	$1, %al
10000a29b:	89 85 38 ff ff ff	movl	%eax, -200(%rbp)
10000a2a1:	b8 08 00 00 00	movl	$8, %eax
10000a2a6:	48 89 85 18 ff ff ff	movq	%rax, -232(%rbp)
10000a2ad:	b8 03 00 00 00	movl	$3, %eax
10000a2b2:	48 89 85 10 ff ff ff	movq	%rax, -240(%rbp)
10000a2b9:	c7 85 68 ff ff ff 00 00 00 00	movl	$0, -152(%rbp)
10000a2c3:	c7 85 48 ff ff ff 00 00 00 00	movl	$0, -184(%rbp)
10000a2cd:	c7 85 40 ff ff ff 03 00 00 00	movl	$3, -192(%rbp)
10000a2d7:	eb 66	jmp	0x10000a33f
10000a2d9:	b0 01	movb	$1, %al
10000a2db:	89 85 48 ff ff ff	movl	%eax, -184(%rbp)
10000a2e1:	c7 85 68 ff ff ff 00 00 00 00	movl	$0, -152(%rbp)
10000a2eb:	b8 02 00 00 00	movl	$2, %eax
10000a2f0:	48 89 85 18 ff ff ff	movq	%rax, -232(%rbp)
10000a2f7:	c7 85 38 ff ff ff 00 00 00 00	movl	$0, -200(%rbp)
10000a301:	c7 85 40 ff ff ff 00 00 00 00	movl	$0, -192(%rbp)
10000a30b:	eb 32	jmp	0x10000a33f
10000a30d:	c7 85 40 ff ff ff 02 00 00 00	movl	$2, -192(%rbp)
10000a317:	b0 01	movb	$1, %al
10000a319:	89 85 68 ff ff ff	movl	%eax, -152(%rbp)
10000a31f:	b8 06 00 00 00	movl	$6, %eax
10000a324:	48 89 85 18 ff ff ff	movq	%rax, -232(%rbp)
10000a32b:	c7 85 38 ff ff ff 00 00 00 00	movl	$0, -200(%rbp)
10000a335:	c7 85 48 ff ff ff 00 00 00 00	movl	$0, -184(%rbp)
10000a33f:	48 8b 05 2a 26 03 00	movq	206378(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
10000a346:	48 8b 38	movq	(%rax), %rdi
10000a349:	48 8b 15 38 26 03 00	movq	206392(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
10000a350:	31 c0	xorl	%eax, %eax
10000a352:	48 89 45 80	movq	%rax, -128(%rbp)
10000a356:	31 f6	xorl	%esi, %esi
10000a358:	e8 e9 4a 02 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
10000a35d:	48 85 c0	testq	%rax, %rax
10000a360:	0f 84 6f 17 00 00	je	0x10000bad5
10000a366:	49 89 c5	movq	%rax, %r13
10000a369:	48 8b 05 d8 26 03 00	movq	206552(%rip), %rax ## literal pool symbol address: _kColorSyncGenericLabProfile
10000a370:	48 8b 38	movq	(%rax), %rdi
10000a373:	e8 1e 4f 02 00	callq	0x10002f296 ## symbol stub for: _ColorSyncProfileCreateWithName
10000a378:	48 89 85 e8 fe ff ff	movq	%rax, -280(%rbp)
10000a37f:	48 8b 05 ca 26 03 00	movq	206538(%rip), %rax ## literal pool symbol address: _kColorSyncGenericXYZProfile
10000a386:	48 8b 38	movq	(%rax), %rdi
10000a389:	e8 08 4f 02 00	callq	0x10002f296 ## symbol stub for: _ColorSyncProfileCreateWithName
10000a38e:	49 89 c6	movq	%rax, %r14
10000a391:	48 8b 05 c0 26 03 00	movq	206528(%rip), %rax ## literal pool symbol address: _kColorSyncProfile
10000a398:	48 8b 00	movq	(%rax), %rax
10000a39b:	48 89 45 b0	movq	%rax, -80(%rbp)
10000a39f:	48 8b 05 da 26 03 00	movq	206554(%rip), %rax ## literal pool symbol address: _kColorSyncRenderingIntent
10000a3a6:	48 8b 00	movq	(%rax), %rax
10000a3a9:	48 89 45 b8	movq	%rax, -72(%rbp)
10000a3ad:	48 8b 05 1c 27 03 00	movq	206620(%rip), %rax ## literal pool symbol address: _kColorSyncTransformTag
10000a3b4:	48 8b 00	movq	(%rax), %rax
10000a3b7:	48 89 45 c0	movq	%rax, -64(%rbp)
10000a3bb:	45 85 e4	testl	%r12d, %r12d
10000a3be:	4c 8b a5 e0 fe ff ff	movq	-288(%rbp), %r12
10000a3c5:	74 6c	je	0x10000a433
10000a3c7:	81 bd 50 ff ff ff 20 62 61 4c	cmpl	$1281450528, -176(%rbp)
10000a3d1:	75 60	jne	0x10000a433
10000a3d3:	48 8d 55 90	leaq	-112(%rbp), %rdx
10000a3d7:	48 8b 85 e8 fe ff ff	movq	-280(%rbp), %rax
10000a3de:	48 89 02	movq	%rax, (%rdx)
10000a3e1:	48 8b 45 88	movq	-120(%rbp), %rax
10000a3e5:	48 89 42 08	movq	%rax, 8(%rdx)
10000a3e9:	48 8b 05 c0 26 03 00	movq	206528(%rip), %rax ## literal pool symbol address: _kColorSyncTransformDeviceToPCS
10000a3f0:	48 8b 00	movq	(%rax), %rax
10000a3f3:	48 89 42 10	movq	%rax, 16(%rdx)
10000a3f7:	4c 8b 05 92 25 03 00	movq	206226(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10000a3fe:	4c 8b 0d 93 25 03 00	movq	206227(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10000a405:	48 8d 75 b0	leaq	-80(%rbp), %rsi
10000a409:	b9 03 00 00 00	movl	$3, %ecx
10000a40e:	31 ff	xorl	%edi, %edi
10000a410:	e8 a9 4a 02 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
10000a415:	48 85 c0	testq	%rax, %rax
10000a418:	74 16	je	0x10000a430
10000a41a:	48 89 c3	movq	%rax, %rbx
10000a41d:	4c 89 ef	movq	%r13, %rdi
10000a420:	48 89 c6	movq	%rax, %rsi
10000a423:	e8 0c 4a 02 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
10000a428:	48 89 df	movq	%rbx, %rdi
10000a42b:	e8 e2 4a 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a430:	4c 89 fb	movq	%r15, %rbx
10000a433:	48 8d 55 90	leaq	-112(%rbp), %rdx
10000a437:	48 8b 85 78 ff ff ff	movq	-136(%rbp), %rax
10000a43e:	48 89 02	movq	%rax, (%rdx)
10000a441:	48 8b 45 88	movq	-120(%rbp), %rax
10000a445:	48 89 42 08	movq	%rax, 8(%rdx)
10000a449:	48 89 5a 10	movq	%rbx, 16(%rdx)
10000a44d:	4c 8b 05 3c 25 03 00	movq	206140(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10000a454:	4c 8b 0d 3d 25 03 00	movq	206141(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10000a45b:	48 8d 75 b0	leaq	-80(%rbp), %rsi
10000a45f:	b9 03 00 00 00	movl	$3, %ecx
10000a464:	31 ff	xorl	%edi, %edi
10000a466:	e8 53 4a 02 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
10000a46b:	48 85 c0	testq	%rax, %rax
10000a46e:	74 16	je	0x10000a486
10000a470:	48 89 c3	movq	%rax, %rbx
10000a473:	4c 89 ef	movq	%r13, %rdi
10000a476:	48 89 c6	movq	%rax, %rsi
10000a479:	e8 b6 49 02 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
10000a47e:	48 89 df	movq	%rbx, %rdi
10000a481:	e8 8c 4a 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a486:	48 8b 05 c3 87 04 00	movq	296899(%rip), %rax
10000a48d:	41 c7 04 04 20 62 61 4c	movl	$1281450528, (%r12,%rax)
10000a495:	80 bd 70 ff ff ff 00	cmpb	$0, -144(%rbp)
10000a49c:	0f 84 83 00 00 00	je	0x10000a525
10000a4a2:	4c 89 f1	movq	%r14, %rcx
10000a4a5:	44 8b b5 30 ff ff ff	movl	-208(%rbp), %r14d
10000a4ac:	41 81 fe 20 62 61 4c	cmpl	$1281450528, %r14d
10000a4b3:	48 8b 85 e8 fe ff ff	movq	-280(%rbp), %rax
10000a4ba:	49 89 cf	movq	%rcx, %r15
10000a4bd:	48 0f 45 c1	cmovneq	%rcx, %rax
10000a4c1:	48 8d 55 90	leaq	-112(%rbp), %rdx
10000a4c5:	48 89 02	movq	%rax, (%rdx)
10000a4c8:	48 8b 45 88	movq	-120(%rbp), %rax
10000a4cc:	48 89 42 08	movq	%rax, 8(%rdx)
10000a4d0:	48 8b 05 e9 25 03 00	movq	206313(%rip), %rax ## literal pool symbol address: _kColorSyncTransformPCSToDevice
10000a4d7:	48 8b 00	movq	(%rax), %rax
10000a4da:	48 89 42 10	movq	%rax, 16(%rdx)
10000a4de:	4c 8b 05 ab 24 03 00	movq	205995(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10000a4e5:	4c 8b 0d ac 24 03 00	movq	205996(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10000a4ec:	48 8d 75 b0	leaq	-80(%rbp), %rsi
10000a4f0:	b9 03 00 00 00	movl	$3, %ecx
10000a4f5:	31 ff	xorl	%edi, %edi
10000a4f7:	e8 c2 49 02 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
10000a4fc:	48 85 c0	testq	%rax, %rax
10000a4ff:	74 21	je	0x10000a522
10000a501:	48 89 c3	movq	%rax, %rbx
10000a504:	4c 89 ef	movq	%r13, %rdi
10000a507:	48 89 c6	movq	%rax, %rsi
10000a50a:	e8 25 49 02 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
10000a50f:	48 89 df	movq	%rbx, %rdi
10000a512:	e8 fb 49 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a517:	48 8b 05 32 87 04 00	movq	296754(%rip), %rax
10000a51e:	45 89 34 04	movl	%r14d, (%r12,%rax)
10000a522:	4d 89 fe	movq	%r15, %r14
10000a525:	31 c0	xorl	%eax, %eax
10000a527:	48 89 45 80	movq	%rax, -128(%rbp)
10000a52b:	4c 89 ef	movq	%r13, %rdi
10000a52e:	31 f6	xorl	%esi, %esi
10000a530:	e8 91 4d 02 00	callq	0x10002f2c6 ## symbol stub for: _ColorSyncTransformCreate
10000a535:	48 89 c3	movq	%rax, %rbx
10000a538:	4c 89 ef	movq	%r13, %rdi
10000a53b:	e8 d2 49 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a540:	48 89 d8	movq	%rbx, %rax
10000a543:	48 89 9d 00 ff ff ff	movq	%rbx, -256(%rbp)
10000a54a:	48 85 db	testq	%rbx, %rbx
10000a54d:	0f 84 8e 15 00 00	je	0x10000bae1
10000a553:	44 8b ad 50 ff ff ff	movl	-176(%rbp), %r13d
10000a55a:	41 81 fd 45 4d 41 4e	cmpl	$1312902469, %r13d
10000a561:	0f 85 83 00 00 00	jne	0x10000a5ea
10000a567:	48 8d 35 32 31 03 00	leaq	209202(%rip), %rsi ## Objc cfstring ref: @"ncl2"
10000a56e:	48 8b bd 78 ff ff ff	movq	-136(%rbp), %rdi
10000a575:	e8 04 4d 02 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10000a57a:	48 85 c0	testq	%rax, %rax
10000a57d:	0f 84 12 0c 00 00	je	0x10000b195
10000a583:	49 89 c7	movq	%rax, %r15
10000a586:	4d 89 f5	movq	%r14, %r13
10000a589:	48 89 c7	movq	%rax, %rdi
10000a58c:	e8 0f 49 02 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10000a591:	49 89 c6	movq	%rax, %r14
10000a594:	31 c0	xorl	%eax, %eax
10000a596:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10000a59d:	bb 00 00 00 00	movl	$0, %ebx
10000a5a2:	4d 85 f6	testq	%r14, %r14
10000a5a5:	74 19	je	0x10000a5c0
10000a5a7:	4c 89 ff	movq	%r15, %rdi
10000a5aa:	e8 f7 48 02 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10000a5af:	bb 00 00 00 00	movl	$0, %ebx
10000a5b4:	48 83 f8 57	cmpq	$87, %rax
10000a5b8:	72 06	jb	0x10000a5c0
10000a5ba:	41 8b 5e 0c	movl	12(%r14), %ebx
10000a5be:	0f cb	bswapl	%ebx
10000a5c0:	4c 89 ff	movq	%r15, %rdi
10000a5c3:	e8 4a 49 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000a5c8:	48 8b 05 29 86 04 00	movq	296489(%rip), %rax
10000a5cf:	41 89 1c 04	movl	%ebx, (%r12,%rax)
10000a5d3:	85 db	testl	%ebx, %ebx
10000a5d5:	0f 84 14 15 00 00	je	0x10000baef
10000a5db:	4d 89 ee	movq	%r13, %r14
10000a5de:	44 8b ad 50 ff ff ff	movl	-176(%rbp), %r13d
10000a5e5:	e9 a1 00 00 00	jmp	0x10000a68b
10000a5ea:	8b 8d 68 ff ff ff	movl	-152(%rbp), %ecx
10000a5f0:	89 c8	movl	%ecx, %eax
10000a5f2:	0a 85 38 ff ff ff	orb	-200(%rbp), %al
10000a5f8:	3c 01	cmpb	$1, %al
10000a5fa:	75 36	jne	0x10000a632
10000a5fc:	84 c9	testb	%cl, %cl
10000a5fe:	74 0f	je	0x10000a60f
10000a600:	48 8b 05 f9 85 04 00	movq	296441(%rip), %rax
10000a607:	41 c7 04 04 00 06 00 00	movl	$1536, (%r12,%rax)
10000a60f:	b8 09 00 00 00	movl	$9, %eax
10000a614:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10000a61b:	80 bd 38 ff ff ff 00	cmpb	$0, -200(%rbp)
10000a622:	74 67	je	0x10000a68b
10000a624:	b8 00 0c 00 00	movl	$3072, %eax
10000a629:	48 8d 0d d0 85 04 00	leaq	296400(%rip), %rcx
10000a630:	eb 46	jmp	0x10000a678
10000a632:	66 0f 6e 85 40 ff ff ff	movd	-192(%rbp), %xmm0
10000a63a:	66 0f 70 c8 00	pshufd	$0, %xmm0, %xmm1
10000a63f:	66 0f 6f 05 59 df 02 00	movdqa	188249(%rip), %xmm0
10000a647:	66 0f 66 c1	pcmpgtd	%xmm1, %xmm0
10000a64b:	0f 28 0d 6e df 02 00	movaps	188270(%rip), %xmm1
10000a652:	66 0f 38 14 0d 55 df 02 00	blendvps	%xmm0, 188245(%rip), %xmm1
10000a65b:	66 0f 70 c1 ee	pshufd	$238, %xmm1, %xmm0
10000a660:	66 0f f5 c1	pmaddwd	%xmm1, %xmm0
10000a664:	66 0f 70 c8 55	pshufd	$85, %xmm0, %xmm1
10000a669:	66 0f f5 c8	pmaddwd	%xmm0, %xmm1
10000a66d:	66 0f 7e c8	movd	%xmm1, %eax
10000a671:	48 8d 0d 80 85 04 00	leaq	296320(%rip), %rcx
10000a678:	48 8b 09	movq	(%rcx), %rcx
10000a67b:	41 89 04 0c	movl	%eax, (%r12,%rcx)
10000a67f:	b8 09 00 00 00	movl	$9, %eax
10000a684:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10000a68b:	48 8b 05 66 85 04 00	movq	296294(%rip), %rax
10000a692:	41 8b 1c 04	movl	(%r12,%rax), %ebx
10000a696:	48 85 db	testq	%rbx, %rbx
10000a699:	74 1a	je	0x10000a6b5
10000a69b:	48 8d 04 1b	leaq	(%rbx,%rbx), %rax
10000a69f:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000a6a3:	e8 0a 4e 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a6a8:	48 8b 0d 71 85 04 00	movq	296305(%rip), %rcx
10000a6af:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a6b3:	eb 0f	jmp	0x10000a6c4
10000a6b5:	48 8b 05 64 85 04 00	movq	296292(%rip), %rax
10000a6bc:	49 c7 04 04 00 00 00 00	movq	$0, (%r12,%rax)
10000a6c4:	48 8b 05 35 85 04 00	movq	296245(%rip), %rax
10000a6cb:	45 8b 3c 04	movl	(%r12,%rax), %r15d
10000a6cf:	4d 85 ff	testq	%r15, %r15
10000a6d2:	74 1a	je	0x10000a6ee
10000a6d4:	4b 8d 04 3f	leaq	(%r15,%r15), %rax
10000a6d8:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000a6dc:	e8 d1 4d 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a6e1:	48 8b 0d 40 85 04 00	movq	296256(%rip), %rcx
10000a6e8:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a6ec:	eb 0f	jmp	0x10000a6fd
10000a6ee:	48 8b 05 33 85 04 00	movq	296243(%rip), %rax
10000a6f5:	49 c7 04 04 00 00 00 00	movq	$0, (%r12,%rax)
10000a6fd:	48 85 db	testq	%rbx, %rbx
10000a700:	74 19	je	0x10000a71b
10000a702:	8d 3c 5b	leal	(%rbx,%rbx,2), %edi
10000a705:	48 c1 e7 02	shlq	$2, %rdi
10000a709:	e8 a4 4d 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a70e:	48 8b 0d 23 85 04 00	movq	296227(%rip), %rcx
10000a715:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a719:	eb 0f	jmp	0x10000a72a
10000a71b:	48 8b 05 16 85 04 00	movq	296214(%rip), %rax
10000a722:	49 c7 04 04 00 00 00 00	movq	$0, (%r12,%rax)
10000a72a:	4d 85 ff	testq	%r15, %r15
10000a72d:	74 1a	je	0x10000a749
10000a72f:	43 8d 3c 7f	leal	(%r15,%r15,2), %edi
10000a733:	48 c1 e7 02	shlq	$2, %rdi
10000a737:	e8 76 4d 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a73c:	48 8b 0d fd 84 04 00	movq	296189(%rip), %rcx
10000a743:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a747:	eb 0f	jmp	0x10000a758
10000a749:	48 8b 05 f0 84 04 00	movq	296176(%rip), %rax
10000a750:	49 c7 04 04 00 00 00 00	movq	$0, (%r12,%rax)
10000a758:	48 85 db	testq	%rbx, %rbx
10000a75b:	74 0a	je	0x10000a767
10000a75d:	8d 3c 5b	leal	(%rbx,%rbx,2), %edi
10000a760:	e8 4d 4d 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a765:	eb 02	jmp	0x10000a769
10000a767:	31 c0	xorl	%eax, %eax
10000a769:	48 8b 0d a0 84 04 00	movq	296096(%rip), %rcx
10000a770:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a774:	4d 85 ff	testq	%r15, %r15
10000a777:	74 0b	je	0x10000a784
10000a779:	43 8d 3c 7f	leal	(%r15,%r15,2), %edi
10000a77d:	e8 30 4d 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a782:	eb 02	jmp	0x10000a786
10000a784:	31 c0	xorl	%eax, %eax
10000a786:	48 8b 0d 8b 84 04 00	movq	296075(%rip), %rcx
10000a78d:	49 89 04 0c	movq	%rax, (%r12,%rcx)
10000a791:	41 81 fd 45 4d 41 4e	cmpl	$1312902469, %r13d
10000a798:	4c 89 b5 f0 fe ff ff	movq	%r14, -272(%rbp)
10000a79f:	48 89 9d a0 fe ff ff	movq	%rbx, -352(%rbp)
10000a7a6:	0f 85 3e 01 00 00	jne	0x10000a8ea
10000a7ac:	4c 89 bd 28 ff ff ff	movq	%r15, -216(%rbp)
10000a7b3:	48 8d 3c 9d 00 00 00 00	leaq	(,%rbx,4), %rdi
10000a7bb:	e8 f2 4c 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a7c0:	48 89 45 80	movq	%rax, -128(%rbp)
10000a7c4:	48 85 db	testq	%rbx, %rbx
10000a7c7:	0f 84 f4 09 00 00	je	0x10000b1c1
10000a7cd:	48 8d 43 ff	leaq	-1(%rbx), %rax
10000a7d1:	66 48 0f 6e c0	movq	%rax, %xmm0
10000a7d6:	66 0f 70 c0 44	pshufd	$68, %xmm0, %xmm0
10000a7db:	48 8d 04 9d 0c 00 00 00	leaq	12(,%rbx,4), %rax
10000a7e3:	48 83 e0 f0	andq	$-16, %rax
10000a7e7:	66 0f 6f 0d e1 dd 02 00	movdqa	187873(%rip), %xmm1
10000a7ef:	66 0f 6f 15 e9 dd 02 00	movdqa	187881(%rip), %xmm2
10000a7f7:	31 c9	xorl	%ecx, %ecx
10000a7f9:	66 44 0f 6f 05 ee dd 02 00	movdqa	187886(%rip), %xmm8
10000a802:	66 41 0f ef c0	pxor	%xmm8, %xmm0
10000a807:	66 0f 76 e4	pcmpeqd	%xmm4, %xmm4
10000a80b:	66 44 0f 6f 0d ec dd 02 00	movdqa	187884(%rip), %xmm9
10000a814:	66 0f 6f f2	movdqa	%xmm2, %xmm6
10000a818:	66 41 0f ef f0	pxor	%xmm8, %xmm6
10000a81d:	66 0f 6f fe	movdqa	%xmm6, %xmm7
10000a821:	66 0f 66 f8	pcmpgtd	%xmm0, %xmm7
10000a825:	66 0f 76 f0	pcmpeqd	%xmm0, %xmm6
10000a829:	66 0f 70 f6 f5	pshufd	$245, %xmm6, %xmm6
10000a82e:	66 0f db f7	pand	%xmm7, %xmm6
10000a832:	66 0f 70 ff f5	pshufd	$245, %xmm7, %xmm7
10000a837:	66 0f eb fe	por	%xmm6, %xmm7
10000a83b:	66 0f 6f f2	movdqa	%xmm2, %xmm6
10000a83f:	66 0f fb f4	psubq	%xmm4, %xmm6
10000a843:	66 0f 7e fa	movd	%xmm7, %edx
10000a847:	f7 d2	notl	%edx
10000a849:	f6 c2 01	testb	$1, %dl
10000a84c:	74 09	je	0x10000a857
10000a84e:	48 8b 55 80	movq	-128(%rbp), %rdx
10000a852:	66 0f 7e 34 0a	movd	%xmm6, (%rdx,%rcx)
10000a857:	66 0f ef fc	pxor	%xmm4, %xmm7
10000a85b:	66 0f 3a 14 fa 08	pextrb	$8, %xmm7, %edx
10000a861:	f6 c2 01	testb	$1, %dl
10000a864:	74 0c	je	0x10000a872
10000a866:	48 8b 55 80	movq	-128(%rbp), %rdx
10000a86a:	66 0f 3a 16 74 0a 04 02	pextrd	$2, %xmm6, 4(%rdx,%rcx)
10000a872:	66 0f 6f f1	movdqa	%xmm1, %xmm6
10000a876:	66 0f fb f4	psubq	%xmm4, %xmm6
10000a87a:	66 0f 6f f9	movdqa	%xmm1, %xmm7
10000a87e:	66 41 0f ef f8	pxor	%xmm8, %xmm7
10000a883:	66 0f 6f df	movdqa	%xmm7, %xmm3
10000a887:	66 0f 66 d8	pcmpgtd	%xmm0, %xmm3
10000a88b:	66 0f 76 f8	pcmpeqd	%xmm0, %xmm7
10000a88f:	66 0f 70 ef f5	pshufd	$245, %xmm7, %xmm5
10000a894:	66 0f db eb	pand	%xmm3, %xmm5
10000a898:	66 0f 70 fb f5	pshufd	$245, %xmm3, %xmm7
10000a89d:	66 0f eb fd	por	%xmm5, %xmm7
10000a8a1:	66 0f ef fc	pxor	%xmm4, %xmm7
10000a8a5:	66 0f 3a 14 fa 00	pextrb	$0, %xmm7, %edx
10000a8ab:	f6 c2 01	testb	$1, %dl
10000a8ae:	74 0a	je	0x10000a8ba
10000a8b0:	48 8b 55 80	movq	-128(%rbp), %rdx
10000a8b4:	66 0f 7e 74 0a 08	movd	%xmm6, 8(%rdx,%rcx)
10000a8ba:	66 0f 3a 14 fa 08	pextrb	$8, %xmm7, %edx
10000a8c0:	f6 c2 01	testb	$1, %dl
10000a8c3:	74 0c	je	0x10000a8d1
10000a8c5:	48 8b 55 80	movq	-128(%rbp), %rdx
10000a8c9:	66 0f 3a 16 74 0a 0c 02	pextrd	$2, %xmm6, 12(%rdx,%rcx)
10000a8d1:	66 41 0f d4 d1	paddq	%xmm9, %xmm2
10000a8d6:	66 41 0f d4 c9	paddq	%xmm9, %xmm1
10000a8db:	48 83 c1 10	addq	$16, %rcx
10000a8df:	48 39 c8	cmpq	%rcx, %rax
10000a8e2:	0f 85 2c ff ff ff	jne	0x10000a814
10000a8e8:	eb 61	jmp	0x10000a94b
10000a8ea:	80 bd 48 ff ff ff 00	cmpb	$0, -184(%rbp)
10000a8f1:	0f 84 8f 00 00 00	je	0x10000a986
10000a8f7:	4c 89 bd 28 ff ff ff	movq	%r15, -216(%rbp)
10000a8fe:	48 8d 3c 1b	leaq	(%rbx,%rbx), %rdi
10000a902:	e8 ab 4b 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a907:	48 89 c3	movq	%rax, %rbx
10000a90a:	48 8b 8d 70 ff ff ff	movq	-144(%rbp), %rcx
10000a911:	83 f9 02	cmpl	$2, %ecx
10000a914:	b8 01 00 00 00	movl	$1, %eax
10000a919:	0f 43 c1	cmovael	%ecx, %eax
10000a91c:	8d 71 ff	leal	-1(%rcx), %esi
10000a91f:	48 89 c7	movq	%rax, %rdi
10000a922:	48 c1 e7 10	shlq	$16, %rdi
10000a926:	48 29 c7	subq	%rax, %rdi
10000a929:	31 c9	xorl	%ecx, %ecx
10000a92b:	48 89 d8	movq	%rbx, %rax
10000a92e:	48 89 5d 80	movq	%rbx, -128(%rbp)
10000a932:	89 c8	movl	%ecx, %eax
10000a934:	31 d2	xorl	%edx, %edx
10000a936:	f7 f6	divl	%esi
10000a938:	66 89 03	movw	%ax, (%rbx)
10000a93b:	48 81 c1 ff ff 00 00	addq	$65535, %rcx
10000a942:	48 83 c3 02	addq	$2, %rbx
10000a946:	48 39 cf	cmpq	%rcx, %rdi
10000a949:	75 e7	jne	0x10000a932
10000a94b:	31 c0	xorl	%eax, %eax
10000a94d:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000a954:	80 bd 68 ff ff ff 00	cmpb	$0, -152(%rbp)
10000a95b:	0f 84 89 08 00 00	je	0x10000b1ea
10000a961:	48 8b 85 28 ff ff ff	movq	-216(%rbp), %rax
10000a968:	48 01 c0	addq	%rax, %rax
10000a96b:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000a96f:	e8 3e 4b 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a974:	48 89 45 80	movq	%rax, -128(%rbp)
10000a978:	41 81 fd 45 4d 41 4e	cmpl	$1312902469, %r13d
10000a97f:	75 2a	jne	0x10000a9ab
10000a981:	e9 64 08 00 00	jmp	0x10000b1ea
10000a986:	80 bd 68 ff ff ff 00	cmpb	$0, -152(%rbp)
10000a98d:	0f 84 86 08 00 00	je	0x10000b219
10000a993:	4c 89 bd 28 ff ff ff	movq	%r15, -216(%rbp)
10000a99a:	4b 8d 04 3f	leaq	(%r15,%r15), %rax
10000a99e:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000a9a2:	e8 0b 4b 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000a9a7:	48 89 45 80	movq	%rax, -128(%rbp)
10000a9ab:	48 8b 85 70 ff ff ff	movq	-144(%rbp), %rax
10000a9b2:	44 8d 70 ff	leal	-1(%rax), %r14d
10000a9b6:	83 f8 03	cmpl	$3, %eax
10000a9b9:	b9 02 00 00 00	movl	$2, %ecx
10000a9be:	0f 43 c8	cmovael	%eax, %ecx
10000a9c1:	48 89 8d d8 fe ff ff	movq	%rcx, -296(%rbp)
10000a9c8:	8d 04 49	leal	(%rcx,%rcx,2), %eax
10000a9cb:	8d 04 c5 e8 ff ff ff	leal	-24(,%rax,8), %eax
10000a9d2:	89 85 b0 fe ff ff	movl	%eax, -336(%rbp)
10000a9d8:	b9 01 00 00 00	movl	$1, %ecx
10000a9dd:	31 c0	xorl	%eax, %eax
10000a9df:	44 89 b5 48 ff ff ff	movl	%r14d, -184(%rbp)
10000a9e6:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000a9ed:	8d 41 ff	leal	-1(%rcx), %eax
10000a9f0:	89 ca	movl	%ecx, %edx
10000a9f2:	c1 e2 10	shll	$16, %edx
10000a9f5:	29 ca	subl	%ecx, %edx
10000a9f7:	48 89 95 b8 fe ff ff	movq	%rdx, -328(%rbp)
10000a9fe:	81 c2 01 00 ff ff	addl	$4294901761, %edx
10000aa04:	89 95 c0 fe ff ff	movl	%edx, -320(%rbp)
10000aa0a:	89 85 30 ff ff ff	movl	%eax, -208(%rbp)
10000aa10:	c1 e0 0f	shll	$15, %eax
10000aa13:	89 85 c8 fe ff ff	movl	%eax, -312(%rbp)
10000aa19:	48 89 8d 20 ff ff ff	movq	%rcx, -224(%rbp)
10000aa20:	89 c8	movl	%ecx, %eax
10000aa22:	c1 e0 0f	shll	$15, %eax
10000aa25:	89 85 d0 fe ff ff	movl	%eax, -304(%rbp)
10000aa2b:	45 31 db	xorl	%r11d, %r11d
10000aa2e:	31 f6	xorl	%esi, %esi
10000aa30:	31 c0	xorl	%eax, %eax
10000aa32:	48 89 45 88	movq	%rax, -120(%rbp)
10000aa36:	bb 01 00 00 00	movl	$1, %ebx
10000aa3b:	48 8b 4d 88	movq	-120(%rbp), %rcx
10000aa3f:	48 8b bd 78 ff ff ff	movq	-136(%rbp), %rdi
10000aa46:	8d 04 0f	leal	(%rdi,%rcx), %eax
10000aa49:	48 89 9d 40 ff ff ff	movq	%rbx, -192(%rbp)
10000aa50:	8d 53 ff	leal	-1(%rbx), %edx
10000aa53:	89 95 68 ff ff ff	movl	%edx, -152(%rbp)
10000aa59:	44 8d 54 0f 01	leal	1(%rdi,%rcx), %r10d
10000aa5e:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000aa62:	48 8b 4d 80	movq	-128(%rbp), %rcx
10000aa66:	48 8d 3c 41	leaq	(%rcx,%rax,2), %rdi
10000aa6a:	41 81 fd 20 5a 59 58	cmpl	$1482250784, %r13d
10000aa71:	48 89 b5 08 ff ff ff	movq	%rsi, -248(%rbp)
10000aa78:	4c 89 9d f8 fe ff ff	movq	%r11, -264(%rbp)
10000aa7f:	0f 85 34 01 00 00	jne	0x10000abb9
10000aa85:	8b 85 c8 fe ff ff	movl	-312(%rbp), %eax
10000aa8b:	31 d2	xorl	%edx, %edx
10000aa8d:	41 f7 f6	divl	%r14d
10000aa90:	41 89 c0	movl	%eax, %r8d
10000aa93:	89 f0	movl	%esi, %eax
10000aa95:	31 d2	xorl	%edx, %edx
10000aa97:	41 f7 f6	divl	%r14d
10000aa9a:	41 89 c1	movl	%eax, %r9d
10000aa9d:	48 89 f2	movq	%rsi, %rdx
10000aaa0:	89 c6	movl	%eax, %esi
10000aaa2:	c1 e6 10	shll	$16, %esi
10000aaa5:	44 89 c1	movl	%r8d, %ecx
10000aaa8:	b8 ff ff 00 00	movl	$65535, %eax
10000aaad:	21 c1	andl	%eax, %ecx
10000aaaf:	8d 04 0e	leal	(%rsi,%rcx), %eax
10000aab2:	31 db	xorl	%ebx, %ebx
10000aab4:	66 89 5f 04	movw	%bx, 4(%rdi)
10000aab8:	45 31 ed	xorl	%r13d, %r13d
10000aabb:	89 07	movl	%eax, (%rdi)
10000aabd:	4c 8b 7d 88	movq	-120(%rbp), %r15
10000aac1:	4c 8b a5 78 ff ff ff	movq	-136(%rbp), %r12
10000aac8:	43 8d 04 3c	leal	(%r12,%r15), %eax
10000aacc:	83 c0 02	addl	$2, %eax
10000aacf:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000aad6:	44 89 d0	movl	%r10d, %eax
10000aad9:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000aadd:	8d 82 00 80 00 00	leal	32768(%rdx), %eax
10000aae3:	31 d2	xorl	%edx, %edx
10000aae5:	41 f7 f6	divl	%r14d
10000aae8:	41 89 c3	movl	%eax, %r11d
10000aaeb:	41 89 c2	movl	%eax, %r10d
10000aaee:	41 c1 e2 10	shll	$16, %r10d
10000aaf2:	41 8d 04 0a	leal	(%r10,%rcx), %eax
10000aaf6:	48 8b 5d 80	movq	-128(%rbp), %rbx
10000aafa:	66 44 89 6c 7b 04	movw	%r13w, 4(%rbx,%rdi,2)
10000ab00:	89 04 7b	movl	%eax, (%rbx,%rdi,2)
10000ab03:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000ab0a:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000ab0e:	8b 85 d0 fe ff ff	movl	-304(%rbp), %eax
10000ab14:	31 d2	xorl	%edx, %edx
10000ab16:	41 f7 f6	divl	%r14d
10000ab19:	89 c2	movl	%eax, %edx
10000ab1b:	41 bd ff ff 00 00	movl	$65535, %r13d
10000ab21:	44 21 ea	andl	%r13d, %edx
10000ab24:	41 09 d2	orl	%edx, %r10d
10000ab27:	44 89 14 7b	movl	%r10d, (%rbx,%rdi,2)
10000ab2b:	45 31 d2	xorl	%r10d, %r10d
10000ab2e:	66 44 89 54 7b 04	movw	%r10w, 4(%rbx,%rdi,2)
10000ab34:	43 8d 3c 3c	leal	(%r12,%r15), %edi
10000ab38:	83 c7 03	addl	$3, %edi
10000ab3b:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000ab3f:	09 d6	orl	%edx, %esi
10000ab41:	89 34 7b	movl	%esi, (%rbx,%rdi,2)
10000ab44:	66 44 89 54 7b 04	movw	%r10w, 4(%rbx,%rdi,2)
10000ab4a:	43 8d 34 3c	leal	(%r12,%r15), %esi
10000ab4e:	83 c6 04	addl	$4, %esi
10000ab51:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000ab55:	66 44 89 4c 73 04	movw	%r9w, 4(%rbx,%rsi,2)
10000ab5b:	89 0c 73	movl	%ecx, (%rbx,%rsi,2)
10000ab5e:	43 8d 74 3c 05	leal	5(%r12,%r15), %esi
10000ab63:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000ab67:	66 44 89 4c 73 04	movw	%r9w, 4(%rbx,%rsi,2)
10000ab6d:	89 14 73	movl	%edx, (%rbx,%rsi,2)
10000ab70:	43 8d 74 3c 06	leal	6(%r12,%r15), %esi
10000ab75:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000ab79:	89 14 73	movl	%edx, (%rbx,%rsi,2)
10000ab7c:	66 44 89 5c 73 04	movw	%r11w, 4(%rbx,%rsi,2)
10000ab82:	43 8d 54 3c 07	leal	7(%r12,%r15), %edx
10000ab87:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000ab8b:	89 0c 53	movl	%ecx, (%rbx,%rdx,2)
10000ab8e:	66 44 89 5c 53 04	movw	%r11w, 4(%rbx,%rdx,2)
10000ab94:	43 8d 0c 3c	leal	(%r12,%r15), %ecx
10000ab98:	83 c1 08	addl	$8, %ecx
10000ab9b:	48 8d 0c 49	leaq	(%rcx,%rcx,2), %rcx
10000ab9f:	41 c1 e0 10	shll	$16, %r8d
10000aba3:	66 44 89 4c 4b 04	movw	%r9w, 4(%rbx,%rcx,2)
10000aba9:	44 89 04 4b	movl	%r8d, (%rbx,%rcx,2)
10000abad:	43 8d 0c 3c	leal	(%r12,%r15), %ecx
10000abb1:	83 c1 09	addl	$9, %ecx
10000abb4:	e9 31 01 00 00	jmp	0x10000acea
10000abb9:	8b 85 c0 fe ff ff	movl	-320(%rbp), %eax
10000abbf:	31 d2	xorl	%edx, %edx
10000abc1:	41 f7 f6	divl	%r14d
10000abc4:	41 89 c0	movl	%eax, %r8d
10000abc7:	44 89 d8	movl	%r11d, %eax
10000abca:	31 d2	xorl	%edx, %edx
10000abcc:	41 f7 f6	divl	%r14d
10000abcf:	41 89 c1	movl	%eax, %r9d
10000abd2:	89 c6	movl	%eax, %esi
10000abd4:	c1 e6 10	shll	$16, %esi
10000abd7:	44 89 c1	movl	%r8d, %ecx
10000abda:	b8 ff ff 00 00	movl	$65535, %eax
10000abdf:	21 c1	andl	%eax, %ecx
10000abe1:	ba ff ff 00 00	movl	$65535, %edx
10000abe6:	8d 04 0e	leal	(%rsi,%rcx), %eax
10000abe9:	31 db	xorl	%ebx, %ebx
10000abeb:	66 89 5f 04	movw	%bx, 4(%rdi)
10000abef:	45 31 ff	xorl	%r15d, %r15d
10000abf2:	89 07	movl	%eax, (%rdi)
10000abf4:	4c 8b 6d 88	movq	-120(%rbp), %r13
10000abf8:	4c 8b a5 78 ff ff ff	movq	-136(%rbp), %r12
10000abff:	43 8d 04 2c	leal	(%r12,%r13), %eax
10000ac03:	83 c0 02	addl	$2, %eax
10000ac06:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000ac0d:	44 89 d0	movl	%r10d, %eax
10000ac10:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000ac14:	41 8d 04 13	leal	(%r11,%rdx), %eax
10000ac18:	31 d2	xorl	%edx, %edx
10000ac1a:	41 f7 f6	divl	%r14d
10000ac1d:	41 89 c3	movl	%eax, %r11d
10000ac20:	41 89 c2	movl	%eax, %r10d
10000ac23:	41 c1 e2 10	shll	$16, %r10d
10000ac27:	41 8d 04 0a	leal	(%r10,%rcx), %eax
10000ac2b:	48 8b 5d 80	movq	-128(%rbp), %rbx
10000ac2f:	66 44 89 7c 7b 04	movw	%r15w, 4(%rbx,%rdi,2)
10000ac35:	89 04 7b	movl	%eax, (%rbx,%rdi,2)
10000ac38:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000ac3f:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000ac43:	48 8b 85 b8 fe ff ff	movq	-328(%rbp), %rax
10000ac4a:	31 d2	xorl	%edx, %edx
10000ac4c:	41 f7 f6	divl	%r14d
10000ac4f:	89 c2	movl	%eax, %edx
10000ac51:	41 bf ff ff 00 00	movl	$65535, %r15d
10000ac57:	44 21 fa	andl	%r15d, %edx
10000ac5a:	41 09 d2	orl	%edx, %r10d
10000ac5d:	44 89 14 7b	movl	%r10d, (%rbx,%rdi,2)
10000ac61:	45 31 d2	xorl	%r10d, %r10d
10000ac64:	66 44 89 54 7b 04	movw	%r10w, 4(%rbx,%rdi,2)
10000ac6a:	43 8d 3c 2c	leal	(%r12,%r13), %edi
10000ac6e:	83 c7 03	addl	$3, %edi
10000ac71:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000ac75:	09 d6	orl	%edx, %esi
10000ac77:	89 34 7b	movl	%esi, (%rbx,%rdi,2)
10000ac7a:	66 44 89 54 7b 04	movw	%r10w, 4(%rbx,%rdi,2)
10000ac80:	43 8d 34 2c	leal	(%r12,%r13), %esi
10000ac84:	83 c6 04	addl	$4, %esi
10000ac87:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000ac8b:	66 44 89 4c 73 04	movw	%r9w, 4(%rbx,%rsi,2)
10000ac91:	89 0c 73	movl	%ecx, (%rbx,%rsi,2)
10000ac94:	43 8d 74 2c 05	leal	5(%r12,%r13), %esi
10000ac99:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000ac9d:	66 44 89 4c 73 04	movw	%r9w, 4(%rbx,%rsi,2)
10000aca3:	89 14 73	movl	%edx, (%rbx,%rsi,2)
10000aca6:	43 8d 74 2c 06	leal	6(%r12,%r13), %esi
10000acab:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000acaf:	89 14 73	movl	%edx, (%rbx,%rsi,2)
10000acb2:	66 44 89 5c 73 04	movw	%r11w, 4(%rbx,%rsi,2)
10000acb8:	43 8d 54 2c 07	leal	7(%r12,%r13), %edx
10000acbd:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000acc1:	89 0c 53	movl	%ecx, (%rbx,%rdx,2)
10000acc4:	66 44 89 5c 53 04	movw	%r11w, 4(%rbx,%rdx,2)
10000acca:	43 8d 0c 2c	leal	(%r12,%r13), %ecx
10000acce:	83 c1 08	addl	$8, %ecx
10000acd1:	48 8d 0c 49	leaq	(%rcx,%rcx,2), %rcx
10000acd5:	41 c1 e0 10	shll	$16, %r8d
10000acd9:	66 44 89 4c 4b 04	movw	%r9w, 4(%rbx,%rcx,2)
10000acdf:	44 89 04 4b	movl	%r8d, (%rbx,%rcx,2)
10000ace3:	43 8d 0c 2c	leal	(%r12,%r13), %ecx
10000ace7:	83 c1 09	addl	$9, %ecx
10000acea:	48 8d 0c 49	leaq	(%rcx,%rcx,2), %rcx
10000acee:	44 89 04 4b	movl	%r8d, (%rbx,%rcx,2)
10000acf2:	66 44 89 5c 4b 04	movw	%r11w, 4(%rbx,%rcx,2)
10000acf8:	49 c1 e1 20	shlq	$32, %r9
10000acfc:	49 c1 e3 20	shlq	$32, %r11
10000ad00:	c1 e0 10	shll	$16, %eax
10000ad03:	49 09 c3	orq	%rax, %r11
10000ad06:	45 89 f0	movl	%r14d, %r8d
10000ad09:	48 8b 75 88	movq	-120(%rbp), %rsi
10000ad0d:	48 8b 9d 78 ff ff ff	movq	-136(%rbp), %rbx
10000ad14:	8d 0c 33	leal	(%rbx,%rsi), %ecx
10000ad17:	83 c1 0a	addl	$10, %ecx
10000ad1a:	48 8d 0c 49	leaq	(%rcx,%rcx,2), %rcx
10000ad1e:	4c 89 da	movq	%r11, %rdx
10000ad21:	48 c1 ea 20	shrq	$32, %rdx
10000ad25:	4c 8b 7d 80	movq	-128(%rbp), %r15
10000ad29:	66 41 89 54 4f 04	movw	%dx, 4(%r15,%rcx,2)
10000ad2f:	45 89 1c 4f	movl	%r11d, (%r15,%rcx,2)
10000ad33:	8d 0c 33	leal	(%rbx,%rsi), %ecx
10000ad36:	83 c1 0c	addl	$12, %ecx
10000ad39:	8d 14 33	leal	(%rbx,%rsi), %edx
10000ad3c:	83 c2 0b	addl	$11, %edx
10000ad3f:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000ad43:	4c 09 c8	orq	%r9, %rax
10000ad46:	49 c1 e9 20	shrq	$32, %r9
10000ad4a:	66 45 89 4c 57 04	movw	%r9w, 4(%r15,%rdx,2)
10000ad50:	41 89 04 57	movl	%eax, (%r15,%rdx,2)
10000ad54:	8d 04 33	leal	(%rbx,%rsi), %eax
10000ad57:	83 c0 0d	addl	$13, %eax
10000ad5a:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000ad61:	49 89 de	movq	%rbx, %r14
10000ad64:	48 89 f3	movq	%rsi, %rbx
10000ad67:	48 89 75 88	movq	%rsi, -120(%rbp)
10000ad6b:	4c 8d 2c 49	leaq	(%rcx,%rcx,2), %r13
10000ad6f:	44 8b a5 50 ff ff ff	movl	-176(%rbp), %r12d
10000ad76:	44 89 e7	movl	%r12d, %edi
10000ad79:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000ad80:	48 89 b5 70 ff ff ff	movq	%rsi, -144(%rbp)
10000ad87:	8b 95 30 ff ff ff	movl	-208(%rbp), %edx
10000ad8d:	8b 8d 68 ff ff ff	movl	-152(%rbp), %ecx
10000ad93:	e8 6a 0d 00 00	callq	0x10000bb02
10000ad98:	43 89 04 6f	movl	%eax, (%r15,%r13,2)
10000ad9c:	48 c1 e8 20	shrq	$32, %rax
10000ada0:	66 43 89 44 6f 04	movw	%ax, 4(%r15,%r13,2)
10000ada6:	41 8d 04 1e	leal	(%r14,%rbx), %eax
10000adaa:	83 c0 0e	addl	$14, %eax
10000adad:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000adb4:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000adbb:	4c 8d 34 40	leaq	(%rax,%rax,2), %r14
10000adbf:	44 89 e7	movl	%r12d, %edi
10000adc2:	48 8b 9d 70 ff ff ff	movq	-144(%rbp), %rbx
10000adc9:	89 de	movl	%ebx, %esi
10000adcb:	48 8b 95 20 ff ff ff	movq	-224(%rbp), %rdx
10000add2:	8b 8d 68 ff ff ff	movl	-152(%rbp), %ecx
10000add8:	44 8b ad 48 ff ff ff	movl	-184(%rbp), %r13d
10000addf:	45 89 e8	movl	%r13d, %r8d
10000ade2:	e8 1b 0d 00 00	callq	0x10000bb02
10000ade7:	43 89 04 77	movl	%eax, (%r15,%r14,2)
10000adeb:	48 c1 e8 20	shrq	$32, %rax
10000adef:	66 43 89 44 77 04	movw	%ax, 4(%r15,%r14,2)
10000adf5:	4c 8b a5 78 ff ff ff	movq	-136(%rbp), %r12
10000adfc:	48 8b 45 88	movq	-120(%rbp), %rax
10000ae00:	44 01 e0	addl	%r12d, %eax
10000ae03:	83 c0 0f	addl	$15, %eax
10000ae06:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000ae0d:	48 8b 85 58 ff ff ff	movq	-168(%rbp), %rax
10000ae14:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000ae18:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000ae1f:	44 8b b5 50 ff ff ff	movl	-176(%rbp), %r14d
10000ae26:	44 89 f7	movl	%r14d, %edi
10000ae29:	89 de	movl	%ebx, %esi
10000ae2b:	48 8b 95 20 ff ff ff	movq	-224(%rbp), %rdx
10000ae32:	48 8b 8d 40 ff ff ff	movq	-192(%rbp), %rcx
10000ae39:	45 89 e8	movl	%r13d, %r8d
10000ae3c:	e8 c1 0c 00 00	callq	0x10000bb02
10000ae41:	48 8b 8d 58 ff ff ff	movq	-168(%rbp), %rcx
10000ae48:	41 89 04 4f	movl	%eax, (%r15,%rcx,2)
10000ae4c:	48 c1 e8 20	shrq	$32, %rax
10000ae50:	66 41 89 44 4f 04	movw	%ax, 4(%r15,%rcx,2)
10000ae56:	48 8b 45 88	movq	-120(%rbp), %rax
10000ae5a:	44 01 e0	addl	%r12d, %eax
10000ae5d:	83 c0 10	addl	$16, %eax
10000ae60:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000ae67:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000ae6e:	4c 8d 2c 40	leaq	(%rax,%rax,2), %r13
10000ae72:	44 89 f7	movl	%r14d, %edi
10000ae75:	89 de	movl	%ebx, %esi
10000ae77:	44 8b b5 30 ff ff ff	movl	-208(%rbp), %r14d
10000ae7e:	44 89 f2	movl	%r14d, %edx
10000ae81:	48 8b 8d 40 ff ff ff	movq	-192(%rbp), %rcx
10000ae88:	44 8b 85 48 ff ff ff	movl	-184(%rbp), %r8d
10000ae8f:	e8 6e 0c 00 00	callq	0x10000bb02
10000ae94:	43 89 04 6f	movl	%eax, (%r15,%r13,2)
10000ae98:	48 c1 e8 20	shrq	$32, %rax
10000ae9c:	66 43 89 44 6f 04	movw	%ax, 4(%r15,%r13,2)
10000aea2:	48 8b 45 88	movq	-120(%rbp), %rax
10000aea6:	41 8d 14 04	leal	(%r12,%rax), %edx
10000aeaa:	83 c2 11	addl	$17, %edx
10000aead:	48 89 95 60 ff ff ff	movq	%rdx, -160(%rbp)
10000aeb4:	48 8b 85 58 ff ff ff	movq	-168(%rbp), %rax
10000aebb:	4c 8d 24 40	leaq	(%rax,%rax,2), %r12
10000aebf:	44 8b ad 50 ff ff ff	movl	-176(%rbp), %r13d
10000aec6:	44 89 ef	movl	%r13d, %edi
10000aec9:	89 de	movl	%ebx, %esi
10000aecb:	44 89 f2	movl	%r14d, %edx
10000aece:	8b 9d 48 ff ff ff	movl	-184(%rbp), %ebx
10000aed4:	89 d9	movl	%ebx, %ecx
10000aed6:	44 8b 85 68 ff ff ff	movl	-152(%rbp), %r8d
10000aedd:	e8 20 0c 00 00	callq	0x10000bb02
10000aee2:	43 89 04 67	movl	%eax, (%r15,%r12,2)
10000aee6:	48 c1 e8 20	shrq	$32, %rax
10000aeea:	66 43 89 44 67 04	movw	%ax, 4(%r15,%r12,2)
10000aef0:	4c 8b 65 88	movq	-120(%rbp), %r12
10000aef4:	4c 8b b5 78 ff ff ff	movq	-136(%rbp), %r14
10000aefb:	43 8d 04 26	leal	(%r14,%r12), %eax
10000aeff:	83 c0 12	addl	$18, %eax
10000af02:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000af09:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000af10:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000af14:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000af1b:	44 89 ef	movl	%r13d, %edi
10000af1e:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000af25:	8b 95 30 ff ff ff	movl	-208(%rbp), %edx
10000af2b:	89 d9	movl	%ebx, %ecx
10000af2d:	48 8b 9d 40 ff ff ff	movq	-192(%rbp), %rbx
10000af34:	41 89 d8	movl	%ebx, %r8d
10000af37:	e8 c6 0b 00 00	callq	0x10000bb02
10000af3c:	48 8b 8d 60 ff ff ff	movq	-160(%rbp), %rcx
10000af43:	41 89 04 4f	movl	%eax, (%r15,%rcx,2)
10000af47:	48 c1 e8 20	shrq	$32, %rax
10000af4b:	66 41 89 44 4f 04	movw	%ax, 4(%r15,%rcx,2)
10000af51:	43 8d 04 26	leal	(%r14,%r12), %eax
10000af55:	83 c0 13	addl	$19, %eax
10000af58:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000af5f:	48 8b 85 58 ff ff ff	movq	-168(%rbp), %rax
10000af66:	4c 8d 24 40	leaq	(%rax,%rax,2), %r12
10000af6a:	44 89 ef	movl	%r13d, %edi
10000af6d:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000af74:	4c 8b b5 20 ff ff ff	movq	-224(%rbp), %r14
10000af7b:	44 89 f2	movl	%r14d, %edx
10000af7e:	44 8b ad 48 ff ff ff	movl	-184(%rbp), %r13d
10000af85:	44 89 e9	movl	%r13d, %ecx
10000af88:	41 89 d8	movl	%ebx, %r8d
10000af8b:	e8 72 0b 00 00	callq	0x10000bb02
10000af90:	43 89 04 67	movl	%eax, (%r15,%r12,2)
10000af94:	48 c1 e8 20	shrq	$32, %rax
10000af98:	66 43 89 44 67 04	movw	%ax, 4(%r15,%r12,2)
10000af9e:	48 8b 5d 88	movq	-120(%rbp), %rbx
10000afa2:	48 8b 8d 78 ff ff ff	movq	-136(%rbp), %rcx
10000afa9:	8d 14 19	leal	(%rcx,%rbx), %edx
10000afac:	83 c2 14	addl	$20, %edx
10000afaf:	48 89 95 58 ff ff ff	movq	%rdx, -168(%rbp)
10000afb6:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000afbd:	4c 8d 24 40	leaq	(%rax,%rax,2), %r12
10000afc1:	8b bd 50 ff ff ff	movl	-176(%rbp), %edi
10000afc7:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000afce:	44 89 f2	movl	%r14d, %edx
10000afd1:	44 89 e9	movl	%r13d, %ecx
10000afd4:	44 8b b5 68 ff ff ff	movl	-152(%rbp), %r14d
10000afdb:	45 89 f0	movl	%r14d, %r8d
10000afde:	e8 1f 0b 00 00	callq	0x10000bb02
10000afe3:	43 89 04 67	movl	%eax, (%r15,%r12,2)
10000afe7:	48 c1 e8 20	shrq	$32, %rax
10000afeb:	66 43 89 44 67 04	movw	%ax, 4(%r15,%r12,2)
10000aff1:	4c 8b a5 78 ff ff ff	movq	-136(%rbp), %r12
10000aff8:	41 8d 04 1c	leal	(%r12,%rbx), %eax
10000affc:	83 c0 15	addl	$21, %eax
10000afff:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10000b006:	48 8b 85 58 ff ff ff	movq	-168(%rbp), %rax
10000b00d:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000b011:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000b018:	8b bd 50 ff ff ff	movl	-176(%rbp), %edi
10000b01e:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000b025:	44 89 ea	movl	%r13d, %edx
10000b028:	8b 8d 30 ff ff ff	movl	-208(%rbp), %ecx
10000b02e:	45 89 f0	movl	%r14d, %r8d
10000b031:	e8 cc 0a 00 00	callq	0x10000bb02
10000b036:	48 8b 8d 58 ff ff ff	movq	-168(%rbp), %rcx
10000b03d:	41 89 04 4f	movl	%eax, (%r15,%rcx,2)
10000b041:	48 c1 e8 20	shrq	$32, %rax
10000b045:	66 41 89 44 4f 04	movw	%ax, 4(%r15,%rcx,2)
10000b04b:	41 8d 04 1c	leal	(%r12,%rbx), %eax
10000b04f:	83 c0 16	addl	$22, %eax
10000b052:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
10000b059:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000b060:	4c 8d 34 40	leaq	(%rax,%rax,2), %r14
10000b064:	8b bd 50 ff ff ff	movl	-176(%rbp), %edi
10000b06a:	48 8b 9d 70 ff ff ff	movq	-144(%rbp), %rbx
10000b071:	89 de	movl	%ebx, %esi
10000b073:	44 89 ea	movl	%r13d, %edx
10000b076:	4c 8b a5 20 ff ff ff	movq	-224(%rbp), %r12
10000b07d:	44 89 e1	movl	%r12d, %ecx
10000b080:	44 8b 85 68 ff ff ff	movl	-152(%rbp), %r8d
10000b087:	e8 76 0a 00 00	callq	0x10000bb02
10000b08c:	43 89 04 77	movl	%eax, (%r15,%r14,2)
10000b090:	48 c1 e8 20	shrq	$32, %rax
10000b094:	66 43 89 44 77 04	movw	%ax, 4(%r15,%r14,2)
10000b09a:	48 8b 45 88	movq	-120(%rbp), %rax
10000b09e:	48 8b 8d 78 ff ff ff	movq	-136(%rbp), %rcx
10000b0a5:	01 c8	addl	%ecx, %eax
10000b0a7:	83 c0 17	addl	$23, %eax
10000b0aa:	48 89 85 68 ff ff ff	movq	%rax, -152(%rbp)
10000b0b1:	48 8b 85 58 ff ff ff	movq	-168(%rbp), %rax
10000b0b8:	4c 8d 34 40	leaq	(%rax,%rax,2), %r14
10000b0bc:	8b bd 50 ff ff ff	movl	-176(%rbp), %edi
10000b0c2:	89 de	movl	%ebx, %esi
10000b0c4:	44 89 ea	movl	%r13d, %edx
10000b0c7:	44 89 e1	movl	%r12d, %ecx
10000b0ca:	48 8b 9d 40 ff ff ff	movq	-192(%rbp), %rbx
10000b0d1:	41 89 d8	movl	%ebx, %r8d
10000b0d4:	e8 29 0a 00 00	callq	0x10000bb02
10000b0d9:	43 89 04 77	movl	%eax, (%r15,%r14,2)
10000b0dd:	48 c1 e8 20	shrq	$32, %rax
10000b0e1:	66 43 89 44 77 04	movw	%ax, 4(%r15,%r14,2)
10000b0e7:	48 8b 85 68 ff ff ff	movq	-152(%rbp), %rax
10000b0ee:	4c 8d 34 40	leaq	(%rax,%rax,2), %r14
10000b0f2:	44 8b ad 50 ff ff ff	movl	-176(%rbp), %r13d
10000b0f9:	44 89 ef	movl	%r13d, %edi
10000b0fc:	48 8b b5 70 ff ff ff	movq	-144(%rbp), %rsi
10000b103:	44 8b a5 48 ff ff ff	movl	-184(%rbp), %r12d
10000b10a:	44 89 e2	movl	%r12d, %edx
10000b10d:	8b 8d 30 ff ff ff	movl	-208(%rbp), %ecx
10000b113:	41 89 d8	movl	%ebx, %r8d
10000b116:	e8 e7 09 00 00	callq	0x10000bb02
10000b11b:	43 89 04 77	movl	%eax, (%r15,%r14,2)
10000b11f:	48 c1 e8 20	shrq	$32, %rax
10000b123:	66 43 89 44 77 04	movw	%ax, 4(%r15,%r14,2)
10000b129:	ff c3	incl	%ebx
10000b12b:	48 8b 45 88	movq	-120(%rbp), %rax
10000b12f:	83 c0 18	addl	$24, %eax
10000b132:	48 8b b5 08 ff ff ff	movq	-248(%rbp), %rsi
10000b139:	81 c6 00 80 00 00	addl	$32768, %esi
10000b13f:	4c 8b 9d f8 fe ff ff	movq	-264(%rbp), %r11
10000b146:	41 81 c3 ff ff 00 00	addl	$65535, %r11d
10000b14d:	48 89 45 88	movq	%rax, -120(%rbp)
10000b151:	39 85 b0 fe ff ff	cmpl	%eax, -336(%rbp)
10000b157:	45 89 e6	movl	%r12d, %r14d
10000b15a:	0f 85 db f8 ff ff	jne	0x10000aa3b
10000b160:	48 8b 8d 20 ff ff ff	movq	-224(%rbp), %rcx
10000b167:	ff c1	incl	%ecx
10000b169:	48 8b 45 88	movq	-120(%rbp), %rax
10000b16d:	48 8b 95 78 ff ff ff	movq	-136(%rbp), %rdx
10000b174:	01 d0	addl	%edx, %eax
10000b176:	3b 8d d8 fe ff ff	cmpl	-296(%rbp), %ecx
10000b17c:	0f 85 64 f8 ff ff	jne	0x10000a9e6
10000b182:	48 8b 85 78 ff ff ff	movq	-136(%rbp), %rax
10000b189:	03 45 88	addl	-120(%rbp), %eax
10000b18c:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000b193:	eb 55	jmp	0x10000b1ea
10000b195:	48 8b 05 5c 7a 04 00	movq	293468(%rip), %rax
10000b19c:	41 c7 04 04 00 00 00 00	movl	$0, (%r12,%rax)
10000b1a4:	31 c0	xorl	%eax, %eax
10000b1a6:	48 89 45 80	movq	%rax, -128(%rbp)
10000b1aa:	4c 89 e7	movq	%r12, %rdi
10000b1ad:	48 8b 35 f4 60 04 00	movq	286964(%rip), %rsi ## Objc selector ref: freeData
10000b1b4:	ff 15 66 1a 03 00	callq	*203366(%rip) ## Objc message: -[%rdi freeData]
10000b1ba:	31 db	xorl	%ebx, %ebx
10000b1bc:	e9 b2 08 00 00	jmp	0x10000ba73
10000b1c1:	31 c0	xorl	%eax, %eax
10000b1c3:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000b1ca:	80 bd 68 ff ff ff 00	cmpb	$0, -152(%rbp)
10000b1d1:	74 17	je	0x10000b1ea
10000b1d3:	48 8b 85 28 ff ff ff	movq	-216(%rbp), %rax
10000b1da:	48 01 c0	addq	%rax, %rax
10000b1dd:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000b1e1:	e8 cc 42 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000b1e6:	48 89 45 80	movq	%rax, -128(%rbp)
10000b1ea:	80 bd 38 ff ff ff 00	cmpb	$0, -200(%rbp)
10000b1f1:	0f 84 f1 05 00 00	je	0x10000b7e8
10000b1f7:	48 8b bd 28 ff ff ff	movq	-216(%rbp), %rdi
10000b1fe:	48 c1 e7 03	shlq	$3, %rdi
10000b202:	e8 ab 42 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000b207:	48 89 45 80	movq	%rax, -128(%rbp)
10000b20b:	41 81 fd 45 4d 41 4e	cmpl	$1312902469, %r13d
10000b212:	75 2b	jne	0x10000b23f
10000b214:	e9 cf 05 00 00	jmp	0x10000b7e8
10000b219:	31 c0	xorl	%eax, %eax
10000b21b:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10000b222:	80 bd 38 ff ff ff 00	cmpb	$0, -200(%rbp)
10000b229:	0f 84 8f 08 00 00	je	0x10000babe
10000b22f:	49 c1 e7 03	shlq	$3, %r15
10000b233:	4c 89 ff	movq	%r15, %rdi
10000b236:	e8 77 42 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000b23b:	48 89 45 80	movq	%rax, -128(%rbp)
10000b23f:	48 8b 8d 70 ff ff ff	movq	-144(%rbp), %rcx
10000b246:	8d 71 ff	leal	-1(%rcx), %esi
10000b249:	89 f0	movl	%esi, %eax
10000b24b:	c1 e0 10	shll	$16, %eax
10000b24e:	29 f0	subl	%esi, %eax
10000b250:	83 f9 03	cmpl	$3, %ecx
10000b253:	41 b9 02 00 00 00	movl	$2, %r9d
10000b259:	44 0f 43 c9	cmovael	%ecx, %r9d
10000b25d:	31 d2	xorl	%edx, %edx
10000b25f:	89 b5 f8 fe ff ff	movl	%esi, -264(%rbp)
10000b265:	f7 f6	divl	%esi
10000b267:	41 89 c0	movl	%eax, %r8d
10000b26a:	41 c1 e0 10	shll	$16, %r8d
10000b26e:	44 0f b7 d0	movzwl	%ax, %r10d
10000b272:	4c 89 d1	movq	%r10, %rcx
10000b275:	48 c1 e1 20	shlq	$32, %rcx
10000b279:	48 c1 e0 30	shlq	$48, %rax
10000b27d:	48 89 8d d8 fe ff ff	movq	%rcx, -296(%rbp)
10000b284:	49 89 c3	movq	%rax, %r11
10000b287:	48 01 c8	addq	%rcx, %rax
10000b28a:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
10000b291:	4c 89 8d 98 fe ff ff	movq	%r9, -360(%rbp)
10000b298:	43 8d 3c 49	leal	(%r9,%r9,2), %edi
10000b29c:	c1 e7 04	shll	$4, %edi
10000b29f:	83 c7 d0	addl	$-48, %edi
10000b2a2:	b8 01 00 00 00	movl	$1, %eax
10000b2a7:	41 be ff ff 00 00	movl	$65535, %r14d
10000b2ad:	4c 89 9d c8 fe ff ff	movq	%r11, -312(%rbp)
10000b2b4:	4c 89 85 d0 fe ff ff	movq	%r8, -304(%rbp)
10000b2bb:	89 bd 28 ff ff ff	movl	%edi, -216(%rbp)
10000b2c1:	4c 89 95 60 ff ff ff	movq	%r10, -160(%rbp)
10000b2c8:	4c 8b 7d 80	movq	-128(%rbp), %r15
10000b2cc:	89 c1	movl	%eax, %ecx
10000b2ce:	c1 e1 10	shll	$16, %ecx
10000b2d1:	89 85 ac fe ff ff	movl	%eax, -340(%rbp)
10000b2d7:	29 c1	subl	%eax, %ecx
10000b2d9:	8d 81 01 00 ff ff	leal	-65535(%rcx), %eax
10000b2df:	31 d2	xorl	%edx, %edx
10000b2e1:	44 8b 8d f8 fe ff ff	movl	-264(%rbp), %r9d
10000b2e8:	41 f7 f1	divl	%r9d
10000b2eb:	89 c6	movl	%eax, %esi
10000b2ed:	41 89 c5	movl	%eax, %r13d
10000b2f0:	45 21 f5	andl	%r14d, %r13d
10000b2f3:	89 c8	movl	%ecx, %eax
10000b2f5:	31 d2	xorl	%edx, %edx
10000b2f7:	41 f7 f1	divl	%r9d
10000b2fa:	89 c1	movl	%eax, %ecx
10000b2fc:	44 21 f1	andl	%r14d, %ecx
10000b2ff:	c1 e6 10	shll	$16, %esi
10000b302:	48 89 b5 58 ff ff ff	movq	%rsi, -168(%rbp)
10000b309:	44 09 d6	orl	%r10d, %esi
10000b30c:	48 89 b5 30 ff ff ff	movq	%rsi, -208(%rbp)
10000b313:	c1 e0 10	shll	$16, %eax
10000b316:	48 89 85 b0 fe ff ff	movq	%rax, -336(%rbp)
10000b31d:	44 09 d0	orl	%r10d, %eax
10000b320:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
10000b327:	4c 89 ad 68 ff ff ff	movq	%r13, -152(%rbp)
10000b32e:	49 c1 e5 20	shlq	$32, %r13
10000b332:	4c 89 ad b8 fe ff ff	movq	%r13, -328(%rbp)
10000b339:	48 89 8d 50 ff ff ff	movq	%rcx, -176(%rbp)
10000b340:	48 c1 e1 20	shlq	$32, %rcx
10000b344:	48 89 8d c0 fe ff ff	movq	%rcx, -320(%rbp)
10000b34b:	b8 ff ff 00 00	movl	$65535, %eax
10000b350:	45 31 f6	xorl	%r14d, %r14d
10000b353:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10000b35a:	4d 89 c2	movq	%r8, %r10
10000b35d:	8b bd f8 fe ff ff	movl	-264(%rbp), %edi
10000b363:	4c 8b a5 78 ff ff ff	movq	-136(%rbp), %r12
10000b36a:	47 8d 0c 34	leal	(%r12,%r14), %r9d
10000b36e:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b372:	ff c6	incl	%esi
10000b374:	48 8b 85 70 ff ff ff	movq	-144(%rbp), %rax
10000b37b:	05 01 00 ff ff	addl	$4294901761, %eax
10000b380:	31 d2	xorl	%edx, %edx
10000b382:	f7 f7	divl	%edi
10000b384:	41 89 c5	movl	%eax, %r13d
10000b387:	89 c2	movl	%eax, %edx
10000b389:	4c 89 6d 88	movq	%r13, -120(%rbp)
10000b38d:	c1 e2 10	shll	$16, %edx
10000b390:	48 89 95 40 ff ff ff	movq	%rdx, -192(%rbp)
10000b397:	4c 8b 85 68 ff ff ff	movq	-152(%rbp), %r8
10000b39e:	42 8d 04 02	leal	(%rdx,%r8), %eax
10000b3a2:	47 8d 1c 34	leal	(%r12,%r14), %r11d
10000b3a6:	41 83 c3 02	addl	$2, %r11d
10000b3aa:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
10000b3b1:	09 ca	orl	%ecx, %edx
10000b3b3:	4b 89 04 cf	movq	%rax, (%r15,%r9,8)
10000b3b7:	49 89 14 f7	movq	%rdx, (%r15,%rsi,8)
10000b3bb:	43 8d 1c 34	leal	(%r12,%r14), %ebx
10000b3bf:	83 c3 03	addl	$3, %ebx
10000b3c2:	48 8b 85 70 ff ff ff	movq	-144(%rbp), %rax
10000b3c9:	31 d2	xorl	%edx, %edx
10000b3cb:	f7 f7	divl	%edi
10000b3cd:	41 89 c1	movl	%eax, %r9d
10000b3d0:	89 c6	movl	%eax, %esi
10000b3d2:	c1 e6 10	shll	$16, %esi
10000b3d5:	48 89 b5 20 ff ff ff	movq	%rsi, -224(%rbp)
10000b3dc:	8d 04 0e	leal	(%rsi,%rcx), %eax
10000b3df:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b3e3:	83 c7 04	addl	$4, %edi
10000b3e6:	4b 89 04 df	movq	%rax, (%r15,%r11,8)
10000b3ea:	44 09 c6	orl	%r8d, %esi
10000b3ed:	47 8d 1c 34	leal	(%r12,%r14), %r11d
10000b3f1:	41 83 c3 05	addl	$5, %r11d
10000b3f5:	49 c1 e5 30	shlq	$48, %r13
10000b3f9:	49 89 34 df	movq	%rsi, (%r15,%rbx,8)
10000b3fd:	4b 8d 34 2a	leaq	(%r10,%r13), %rsi
10000b401:	48 89 f0	movq	%rsi, %rax
10000b404:	4c 09 c0	orq	%r8, %rax
10000b407:	43 8d 1c 34	leal	(%r12,%r14), %ebx
10000b40b:	83 c3 06	addl	$6, %ebx
10000b40e:	49 89 04 ff	movq	%rax, (%r15,%rdi,8)
10000b412:	48 09 ce	orq	%rcx, %rsi
10000b415:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b419:	83 c0 07	addl	$7, %eax
10000b41c:	4c 89 ca	movq	%r9, %rdx
10000b41f:	48 c1 e2 30	shlq	$48, %rdx
10000b423:	4b 89 34 df	movq	%rsi, (%r15,%r11,8)
10000b427:	4a 8d 3c 12	leaq	(%rdx,%r10), %rdi
10000b42b:	48 89 fe	movq	%rdi, %rsi
10000b42e:	48 09 ce	orq	%rcx, %rsi
10000b431:	47 8d 1c 34	leal	(%r12,%r14), %r11d
10000b435:	41 83 c3 08	addl	$8, %r11d
10000b439:	49 89 34 df	movq	%rsi, (%r15,%rbx,8)
10000b43d:	4c 09 c7	orq	%r8, %rdi
10000b440:	47 8d 14 34	leal	(%r12,%r14), %r10d
10000b444:	41 83 c2 09	addl	$9, %r10d
10000b448:	48 8b b5 30 ff ff ff	movq	-208(%rbp), %rsi
10000b44f:	49 8d 5c 35 00	leaq	(%r13,%rsi), %rbx
10000b454:	49 89 3c c7	movq	%rdi, (%r15,%rax,8)
10000b458:	4b 89 1c df	movq	%rbx, (%r15,%r11,8)
10000b45c:	43 8d 7c 34 0a	leal	10(%r12,%r14), %edi
10000b461:	48 8d 1c 32	leaq	(%rdx,%rsi), %rbx
10000b465:	4b 89 1c d7	movq	%rbx, (%r15,%r10,8)
10000b469:	47 8d 5c 34 0b	leal	11(%r12,%r14), %r11d
10000b46e:	48 8b b5 48 ff ff ff	movq	-184(%rbp), %rsi
10000b475:	48 8d 1c 32	leaq	(%rdx,%rsi), %rbx
10000b479:	43 8d 44 34 0c	leal	12(%r12,%r14), %eax
10000b47e:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b482:	49 8d 7c 35 00	leaq	(%r13,%rsi), %rdi
10000b487:	43 8d 1c 34	leal	(%r12,%r14), %ebx
10000b48b:	83 c3 0d	addl	$13, %ebx
10000b48e:	be ff ff 00 00	movl	$65535, %esi
10000b493:	4c 8b 55 88	movq	-120(%rbp), %r10
10000b497:	41 21 f2	andl	%esi, %r10d
10000b49a:	4b 89 3c df	movq	%rdi, (%r15,%r11,8)
10000b49e:	49 c1 e2 20	shlq	$32, %r10
10000b4a2:	4b 8d 34 02	leaq	(%r10,%r8), %rsi
10000b4a6:	4c 89 55 88	movq	%r10, -120(%rbp)
10000b4aa:	47 8d 1c 34	leal	(%r12,%r14), %r11d
10000b4ae:	41 83 c3 0e	addl	$14, %r11d
10000b4b2:	49 89 34 c7	movq	%rsi, (%r15,%rax,8)
10000b4b6:	b8 ff ff 00 00	movl	$65535, %eax
10000b4bb:	41 21 c1	andl	%eax, %r9d
10000b4be:	49 c1 e1 20	shlq	$32, %r9
10000b4c2:	4b 8d 34 01	leaq	(%r9,%r8), %rsi
10000b4c6:	49 89 34 df	movq	%rsi, (%r15,%rbx,8)
10000b4ca:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b4ce:	83 c7 0f	addl	$15, %edi
10000b4d1:	49 8d 34 09	leaq	(%r9,%rcx), %rsi
10000b4d5:	43 8d 44 34 10	leal	16(%r12,%r14), %eax
10000b4da:	48 89 85 08 ff ff ff	movq	%rax, -248(%rbp)
10000b4e1:	4b 89 34 df	movq	%rsi, (%r15,%r11,8)
10000b4e5:	49 8d 1c 0a	leaq	(%r10,%rcx), %rbx
10000b4e9:	47 8d 5c 34 11	leal	17(%r12,%r14), %r11d
10000b4ee:	48 8b 85 d8 fe ff ff	movq	-296(%rbp), %rax
10000b4f5:	4e 8d 14 28	leaq	(%rax,%r13), %r10
10000b4f9:	4c 89 d6	movq	%r10, %rsi
10000b4fc:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b500:	4c 89 c1	movq	%r8, %rcx
10000b503:	4c 09 c6	orq	%r8, %rsi
10000b506:	43 8d 1c 34	leal	(%r12,%r14), %ebx
10000b50a:	83 c3 12	addl	$18, %ebx
10000b50d:	4c 8d 04 10	leaq	(%rax,%rdx), %r8
10000b511:	48 8b 85 08 ff ff ff	movq	-248(%rbp), %rax
10000b518:	49 89 34 c7	movq	%rsi, (%r15,%rax,8)
10000b51c:	4c 89 c6	movq	%r8, %rsi
10000b51f:	48 09 ce	orq	%rcx, %rsi
10000b522:	4b 89 34 df	movq	%rsi, (%r15,%r11,8)
10000b526:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b52a:	83 c6 13	addl	$19, %esi
10000b52d:	4c 89 c7	movq	%r8, %rdi
10000b530:	48 8b 85 50 ff ff ff	movq	-176(%rbp), %rax
10000b537:	48 09 c7	orq	%rax, %rdi
10000b53a:	49 89 3c df	movq	%rdi, (%r15,%rbx,8)
10000b53e:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b542:	83 c7 14	addl	$20, %edi
10000b545:	4c 89 d3	movq	%r10, %rbx
10000b548:	48 09 c3	orq	%rax, %rbx
10000b54b:	49 89 1c f7	movq	%rbx, (%r15,%rsi,8)
10000b54f:	47 8d 1c 34	leal	(%r12,%r14), %r11d
10000b553:	41 83 c3 15	addl	$21, %r11d
10000b557:	48 8b b5 b8 fe ff ff	movq	-328(%rbp), %rsi
10000b55e:	4a 8d 1c 2e	leaq	(%rsi,%r13), %rbx
10000b562:	48 89 9d 08 ff ff ff	movq	%rbx, -248(%rbp)
10000b569:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
10000b570:	48 09 c3	orq	%rax, %rbx
10000b573:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b577:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b57b:	83 c7 16	addl	$22, %edi
10000b57e:	48 8b 8d c0 fe ff ff	movq	-320(%rbp), %rcx
10000b585:	49 09 cd	orq	%rcx, %r13
10000b588:	4c 89 eb	movq	%r13, %rbx
10000b58b:	48 09 c3	orq	%rax, %rbx
10000b58e:	4b 89 1c df	movq	%rbx, (%r15,%r11,8)
10000b592:	4c 8d 1c 0a	leaq	(%rdx,%rcx), %r11
10000b596:	4c 89 db	movq	%r11, %rbx
10000b599:	48 09 c3	orq	%rax, %rbx
10000b59c:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5a0:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b5a4:	83 c7 17	addl	$23, %edi
10000b5a7:	48 09 f2	orq	%rsi, %rdx
10000b5aa:	48 89 d3	movq	%rdx, %rbx
10000b5ad:	48 09 c3	orq	%rax, %rbx
10000b5b0:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5b4:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b5b8:	83 c7 18	addl	$24, %edi
10000b5bb:	48 8b 8d 58 ff ff ff	movq	-168(%rbp), %rcx
10000b5c2:	48 8b 75 88	movq	-120(%rbp), %rsi
10000b5c6:	48 8d 1c 0e	leaq	(%rsi,%rcx), %rbx
10000b5ca:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5ce:	43 8d 7c 34 19	leal	25(%r12,%r14), %edi
10000b5d3:	48 8b 85 b0 fe ff ff	movq	-336(%rbp), %rax
10000b5da:	48 8d 1c 06	leaq	(%rsi,%rax), %rbx
10000b5de:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5e2:	43 8d 7c 34 1a	leal	26(%r12,%r14), %edi
10000b5e7:	49 8d 1c 01	leaq	(%r9,%rax), %rbx
10000b5eb:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5ef:	43 8d 7c 34 1b	leal	27(%r12,%r14), %edi
10000b5f4:	49 8d 1c 09	leaq	(%r9,%rcx), %rbx
10000b5f8:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b5fc:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b600:	83 c7 1c	addl	$28, %edi
10000b603:	4c 89 d3	movq	%r10, %rbx
10000b606:	48 09 cb	orq	%rcx, %rbx
10000b609:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b60d:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b611:	83 c7 1d	addl	$29, %edi
10000b614:	49 09 c2	orq	%rax, %r10
10000b617:	4d 89 14 ff	movq	%r10, (%r15,%rdi,8)
10000b61b:	4c 8b 95 d0 fe ff ff	movq	-304(%rbp), %r10
10000b622:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b626:	83 c7 1e	addl	$30, %edi
10000b629:	4c 89 c3	movq	%r8, %rbx
10000b62c:	48 09 c3	orq	%rax, %rbx
10000b62f:	49 89 1c ff	movq	%rbx, (%r15,%rdi,8)
10000b633:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b637:	83 c7 1f	addl	$31, %edi
10000b63a:	49 09 c8	orq	%rcx, %r8
10000b63d:	4d 89 04 ff	movq	%r8, (%r15,%rdi,8)
10000b641:	4c 8b 85 c8 fe ff ff	movq	-312(%rbp), %r8
10000b648:	43 8d 3c 34	leal	(%r12,%r14), %edi
10000b64c:	83 c7 20	addl	$32, %edi
10000b64f:	48 8b 85 08 ff ff ff	movq	-248(%rbp), %rax
10000b656:	4c 09 d0	orq	%r10, %rax
10000b659:	49 89 04 ff	movq	%rax, (%r15,%rdi,8)
10000b65d:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b661:	83 c6 21	addl	$33, %esi
10000b664:	4c 09 d2	orq	%r10, %rdx
10000b667:	49 89 14 f7	movq	%rdx, (%r15,%rsi,8)
10000b66b:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b66f:	83 c0 22	addl	$34, %eax
10000b672:	4d 09 d3	orq	%r10, %r11
10000b675:	4d 89 1c c7	movq	%r11, (%r15,%rax,8)
10000b679:	48 8b bd 38 ff ff ff	movq	-200(%rbp), %rdi
10000b680:	48 89 f8	movq	%rdi, %rax
10000b683:	48 0b 85 40 ff ff ff	orq	-192(%rbp), %rax
10000b68a:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b68e:	83 c6 23	addl	$35, %esi
10000b691:	4d 09 d5	orq	%r10, %r13
10000b694:	4d 89 2c f7	movq	%r13, (%r15,%rsi,8)
10000b698:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b69c:	83 c1 24	addl	$36, %ecx
10000b69f:	48 89 c6	movq	%rax, %rsi
10000b6a2:	48 8b 95 68 ff ff ff	movq	-152(%rbp), %rdx
10000b6a9:	48 09 d6	orq	%rdx, %rsi
10000b6ac:	49 89 34 cf	movq	%rsi, (%r15,%rcx,8)
10000b6b0:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b6b4:	83 c1 25	addl	$37, %ecx
10000b6b7:	48 8b 9d 20 ff ff ff	movq	-224(%rbp), %rbx
10000b6be:	48 09 fb	orq	%rdi, %rbx
10000b6c1:	48 89 de	movq	%rbx, %rsi
10000b6c4:	48 09 d6	orq	%rdx, %rsi
10000b6c7:	49 89 34 cf	movq	%rsi, (%r15,%rcx,8)
10000b6cb:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b6cf:	83 c1 26	addl	$38, %ecx
10000b6d2:	48 8b bd 50 ff ff ff	movq	-176(%rbp), %rdi
10000b6d9:	48 09 fb	orq	%rdi, %rbx
10000b6dc:	49 89 1c cf	movq	%rbx, (%r15,%rcx,8)
10000b6e0:	44 8b ad 28 ff ff ff	movl	-216(%rbp), %r13d
10000b6e7:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b6eb:	83 c1 27	addl	$39, %ecx
10000b6ee:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b6f2:	83 c6 28	addl	$40, %esi
10000b6f5:	48 09 f8	orq	%rdi, %rax
10000b6f8:	48 89 fb	movq	%rdi, %rbx
10000b6fb:	49 89 04 cf	movq	%rax, (%r15,%rcx,8)
10000b6ff:	48 8b 7d 88	movq	-120(%rbp), %rdi
10000b703:	4c 09 c7	orq	%r8, %rdi
10000b706:	48 89 f8	movq	%rdi, %rax
10000b709:	4c 09 d0	orq	%r10, %rax
10000b70c:	48 89 c1	movq	%rax, %rcx
10000b70f:	48 09 d1	orq	%rdx, %rcx
10000b712:	49 89 0c f7	movq	%rcx, (%r15,%rsi,8)
10000b716:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b71a:	83 c1 29	addl	$41, %ecx
10000b71d:	43 8d 34 34	leal	(%r12,%r14), %esi
10000b721:	83 c6 2a	addl	$42, %esi
10000b724:	48 09 d8	orq	%rbx, %rax
10000b727:	49 89 04 cf	movq	%rax, (%r15,%rcx,8)
10000b72b:	4d 09 c1	orq	%r8, %r9
10000b72e:	4c 89 c8	movq	%r9, %rax
10000b731:	4d 89 d0	movq	%r10, %r8
10000b734:	4c 09 d0	orq	%r10, %rax
10000b737:	48 89 c1	movq	%rax, %rcx
10000b73a:	48 09 d9	orq	%rbx, %rcx
10000b73d:	49 89 0c f7	movq	%rcx, (%r15,%rsi,8)
10000b741:	43 8d 0c 34	leal	(%r12,%r14), %ecx
10000b745:	83 c1 2b	addl	$43, %ecx
10000b748:	48 09 d0	orq	%rdx, %rax
10000b74b:	49 89 04 cf	movq	%rax, (%r15,%rcx,8)
10000b74f:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b753:	83 c0 2c	addl	$44, %eax
10000b756:	48 89 f9	movq	%rdi, %rcx
10000b759:	48 8b 95 30 ff ff ff	movq	-208(%rbp), %rdx
10000b760:	48 09 d1	orq	%rdx, %rcx
10000b763:	49 89 0c c7	movq	%rcx, (%r15,%rax,8)
10000b767:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b76b:	83 c0 2d	addl	$45, %eax
10000b76e:	4c 89 c9	movq	%r9, %rcx
10000b771:	48 09 d1	orq	%rdx, %rcx
10000b774:	49 89 0c c7	movq	%rcx, (%r15,%rax,8)
10000b778:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b77c:	83 c0 2e	addl	$46, %eax
10000b77f:	48 8b 8d 48 ff ff ff	movq	-184(%rbp), %rcx
10000b786:	49 09 c9	orq	%rcx, %r9
10000b789:	4d 89 0c c7	movq	%r9, (%r15,%rax,8)
10000b78d:	43 8d 04 34	leal	(%r12,%r14), %eax
10000b791:	83 c0 2f	addl	$47, %eax
10000b794:	48 09 cf	orq	%rcx, %rdi
10000b797:	49 89 3c c7	movq	%rdi, (%r15,%rax,8)
10000b79b:	48 8b 85 70 ff ff ff	movq	-144(%rbp), %rax
10000b7a2:	41 83 c6 30	addl	$48, %r14d
10000b7a6:	b9 ff ff 00 00	movl	$65535, %ecx
10000b7ab:	01 c8	addl	%ecx, %eax
10000b7ad:	45 39 f5	cmpl	%r14d, %r13d
10000b7b0:	0f 85 9d fb ff ff	jne	0x10000b353
10000b7b6:	8b 85 ac fe ff ff	movl	-340(%rbp), %eax
10000b7bc:	ff c0	incl	%eax
10000b7be:	48 8b 8d 78 ff ff ff	movq	-136(%rbp), %rcx
10000b7c5:	44 01 f1	addl	%r14d, %ecx
10000b7c8:	48 89 8d 78 ff ff ff	movq	%rcx, -136(%rbp)
10000b7cf:	3b 85 98 fe ff ff	cmpl	-360(%rbp), %eax
10000b7d5:	4c 8b 95 60 ff ff ff	movq	-160(%rbp), %r10
10000b7dc:	41 be ff ff 00 00	movl	$65535, %r14d
10000b7e2:	0f 85 e4 fa ff ff	jne	0x10000b2cc
10000b7e8:	48 8b b5 a0 fe ff ff	movq	-352(%rbp), %rsi
10000b7ef:	48 85 f6	testq	%rsi, %rsi
10000b7f2:	4c 8b a5 e0 fe ff ff	movq	-288(%rbp), %r12
10000b7f9:	74 53	je	0x10000b84e
10000b7fb:	48 8b 05 1e 74 04 00	movq	291870(%rip), %rax
10000b802:	49 8b 0c 04	movq	(%r12,%rax), %rcx
10000b806:	48 8d 04 36	leaq	(%rsi,%rsi), %rax
10000b80a:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000b80e:	48 8b 9d 18 ff ff ff	movq	-232(%rbp), %rbx
10000b815:	48 0f af de	imulq	%rsi, %rbx
10000b819:	ba 01 00 00 00	movl	$1, %edx
10000b81e:	48 8b bd 00 ff ff ff	movq	-256(%rbp), %rdi
10000b825:	41 b8 03 00 00 00	movl	$3, %r8d
10000b82b:	45 31 c9	xorl	%r9d, %r9d
10000b82e:	6a 00	pushq	$0
10000b830:	53	pushq	%rbx
10000b831:	6a 00	pushq	$0
10000b833:	ff b5 10 ff ff ff	pushq	-240(%rbp)
10000b839:	ff 75 80	pushq	-128(%rbp)
10000b83c:	50	pushq	%rax
10000b83d:	e8 7e 3a 02 00	callq	0x10002f2c0 ## symbol stub for: _ColorSyncTransformConvert
10000b842:	48 83 c4 30	addq	$48, %rsp
10000b846:	84 c0	testb	%al, %al
10000b848:	0f 84 7b 02 00 00	je	0x10000bac9
10000b84e:	48 8b 05 ab 73 04 00	movq	291755(%rip), %rax
10000b855:	41 8b 34 04	movl	(%r12,%rax), %esi
10000b859:	48 85 f6	testq	%rsi, %rsi
10000b85c:	74 53	je	0x10000b8b1
10000b85e:	48 8b 05 c3 73 04 00	movq	291779(%rip), %rax
10000b865:	49 8b 0c 04	movq	(%r12,%rax), %rcx
10000b869:	48 8d 04 36	leaq	(%rsi,%rsi), %rax
10000b86d:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
10000b871:	48 8b 9d 18 ff ff ff	movq	-232(%rbp), %rbx
10000b878:	48 0f af de	imulq	%rsi, %rbx
10000b87c:	ba 01 00 00 00	movl	$1, %edx
10000b881:	48 8b bd 00 ff ff ff	movq	-256(%rbp), %rdi
10000b888:	41 b8 03 00 00 00	movl	$3, %r8d
10000b88e:	45 31 c9	xorl	%r9d, %r9d
10000b891:	6a 00	pushq	$0
10000b893:	53	pushq	%rbx
10000b894:	6a 00	pushq	$0
10000b896:	ff b5 10 ff ff ff	pushq	-240(%rbp)
10000b89c:	ff 75 80	pushq	-128(%rbp)
10000b89f:	50	pushq	%rax
10000b8a0:	e8 1b 3a 02 00	callq	0x10002f2c0 ## symbol stub for: _ColorSyncTransformConvert
10000b8a5:	48 83 c4 30	addq	$48, %rsp
10000b8a9:	84 c0	testb	%al, %al
10000b8ab:	0f 84 18 02 00 00	je	0x10000bac9
10000b8b1:	48 8b 05 98 73 04 00	movq	291736(%rip), %rax
10000b8b8:	41 81 3c 04 20 62 61 4c	cmpl	$1281450528, (%r12,%rax)
10000b8c0:	48 8b 05 31 73 04 00	movq	291633(%rip), %rax
10000b8c7:	41 8b 04 04	movl	(%r12,%rax), %eax
10000b8cb:	75 58	jne	0x10000b925
10000b8cd:	85 c0	testl	%eax, %eax
10000b8cf:	0f 84 bb 00 00 00	je	0x10000b990
10000b8d5:	4c 8b 3d 44 73 04 00	movq	291652(%rip), %r15
10000b8dc:	31 db	xorl	%ebx, %ebx
10000b8de:	4d 89 e5	movq	%r12, %r13
10000b8e1:	45 31 e4	xorl	%r12d, %r12d
10000b8e4:	4c 8b 35 25 73 04 00	movq	291621(%rip), %r14
10000b8eb:	4b 8b 44 3d 00	movq	(%r13,%r15), %rax
10000b8f0:	89 de	movl	%ebx, %esi
10000b8f2:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000b8f7:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000b8fa:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000b8ff:	48 c1 e7 20	shlq	$32, %rdi
10000b903:	48 09 cf	orq	%rcx, %rdi
10000b906:	e8 62 02 00 00	callq	0x10000bb6d
10000b90b:	49 ff c4	incq	%r12
10000b90e:	48 8b 05 e3 72 04 00	movq	291555(%rip), %rax
10000b915:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000b91a:	48 83 c3 03	addq	$3, %rbx
10000b91e:	49 39 c4	cmpq	%rax, %r12
10000b921:	72 c8	jb	0x10000b8eb
10000b923:	eb 56	jmp	0x10000b97b
10000b925:	85 c0	testl	%eax, %eax
10000b927:	0f 84 c5 00 00 00	je	0x10000b9f2
10000b92d:	4c 8b 3d ec 72 04 00	movq	291564(%rip), %r15
10000b934:	31 db	xorl	%ebx, %ebx
10000b936:	4d 89 e5	movq	%r12, %r13
10000b939:	45 31 e4	xorl	%r12d, %r12d
10000b93c:	4c 8b 35 cd 72 04 00	movq	291533(%rip), %r14
10000b943:	4b 8b 44 3d 00	movq	(%r13,%r15), %rax
10000b948:	89 de	movl	%ebx, %esi
10000b94a:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000b94f:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000b952:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000b957:	48 c1 e7 20	shlq	$32, %rdi
10000b95b:	48 09 cf	orq	%rcx, %rdi
10000b95e:	e8 78 03 00 00	callq	0x10000bcdb
10000b963:	49 ff c4	incq	%r12
10000b966:	48 8b 05 8b 72 04 00	movq	291467(%rip), %rax
10000b96d:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000b972:	48 83 c3 03	addq	$3, %rbx
10000b976:	49 39 c4	cmpq	%rax, %r12
10000b979:	72 c8	jb	0x10000b943
10000b97b:	48 8b 05 ce 72 04 00	movq	291534(%rip), %rax
10000b982:	41 81 7c 05 00 20 62 61 4c	cmpl	$1281450528, (%r13,%rax)
10000b98b:	4d 89 ec	movq	%r13, %r12
10000b98e:	75 62	jne	0x10000b9f2
10000b990:	48 8b 05 69 72 04 00	movq	291433(%rip), %rax
10000b997:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
10000b99c:	4d 89 e5	movq	%r12, %r13
10000b99f:	4c 8b 35 72 72 04 00	movq	291442(%rip), %r14
10000b9a6:	0f 84 a2 00 00 00	je	0x10000ba4e
10000b9ac:	4c 8b 3d 75 72 04 00	movq	291445(%rip), %r15
10000b9b3:	31 db	xorl	%ebx, %ebx
10000b9b5:	45 31 e4	xorl	%r12d, %r12d
10000b9b8:	4b 8b 44 3d 00	movq	(%r13,%r15), %rax
10000b9bd:	89 de	movl	%ebx, %esi
10000b9bf:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000b9c4:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000b9c7:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000b9cc:	48 c1 e7 20	shlq	$32, %rdi
10000b9d0:	48 09 cf	orq	%rcx, %rdi
10000b9d3:	e8 95 01 00 00	callq	0x10000bb6d
10000b9d8:	49 ff c4	incq	%r12
10000b9db:	48 8b 05 1e 72 04 00	movq	291358(%rip), %rax
10000b9e2:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000b9e7:	48 83 c3 03	addq	$3, %rbx
10000b9eb:	49 39 c4	cmpq	%rax, %r12
10000b9ee:	72 c8	jb	0x10000b9b8
10000b9f0:	eb 5c	jmp	0x10000ba4e
10000b9f2:	48 8b 05 07 72 04 00	movq	291335(%rip), %rax
10000b9f9:	41 83 3c 04 00	cmpl	$0, (%r12,%rax)
10000b9fe:	4d 89 e5	movq	%r12, %r13
10000ba01:	4c 8b 35 10 72 04 00	movq	291344(%rip), %r14
10000ba08:	74 44	je	0x10000ba4e
10000ba0a:	4c 8b 3d 17 72 04 00	movq	291351(%rip), %r15
10000ba11:	31 db	xorl	%ebx, %ebx
10000ba13:	45 31 e4	xorl	%r12d, %r12d
10000ba16:	4b 8b 44 3d 00	movq	(%r13,%r15), %rax
10000ba1b:	89 de	movl	%ebx, %esi
10000ba1d:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000ba22:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000ba25:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000ba2a:	48 c1 e7 20	shlq	$32, %rdi
10000ba2e:	48 09 cf	orq	%rcx, %rdi
10000ba31:	e8 a5 02 00 00	callq	0x10000bcdb
10000ba36:	49 ff c4	incq	%r12
10000ba39:	48 8b 05 c0 71 04 00	movq	291264(%rip), %rax
10000ba40:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000ba45:	48 83 c3 03	addq	$3, %rbx
10000ba49:	49 39 c4	cmpq	%rax, %r12
10000ba4c:	72 c8	jb	0x10000ba16
10000ba4e:	48 8b 05 6b 71 04 00	movq	291179(%rip), %rax
10000ba55:	41 8b 54 05 00	movl	(%r13,%rax), %edx
10000ba5a:	48 8b 35 b7 65 04 00	movq	288183(%rip), %rsi ## Objc selector ref: setPlotSpace:
10000ba61:	4c 89 ef	movq	%r13, %rdi
10000ba64:	ff 15 b6 11 03 00	callq	*201142(%rip) ## Objc message: -[%rdi setPlotSpace:]
10000ba6a:	b3 01	movb	$1, %bl
10000ba6c:	4c 8b b5 f0 fe ff ff	movq	-272(%rbp), %r14
10000ba73:	48 8b bd e8 fe ff ff	movq	-280(%rbp), %rdi
10000ba7a:	48 85 ff	testq	%rdi, %rdi
10000ba7d:	4c 8b a5 00 ff ff ff	movq	-256(%rbp), %r12
10000ba84:	74 05	je	0x10000ba8b
10000ba86:	e8 87 34 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000ba8b:	4d 85 f6	testq	%r14, %r14
10000ba8e:	74 08	je	0x10000ba98
10000ba90:	4c 89 f7	movq	%r14, %rdi
10000ba93:	e8 7a 34 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000ba98:	4d 85 e4	testq	%r12, %r12
10000ba9b:	74 08	je	0x10000baa5
10000ba9d:	4c 89 e7	movq	%r12, %rdi
10000baa0:	e8 6d 34 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000baa5:	48 83 7d 80 00	cmpq	$0, -128(%rbp)
10000baaa:	0f 84 f0 e6 ff ff	je	0x10000a1a0
10000bab0:	48 8b 7d 80	movq	-128(%rbp), %rdi
10000bab4:	e8 1b 39 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000bab9:	e9 e2 e6 ff ff	jmp	0x10000a1a0
10000babe:	31 c0	xorl	%eax, %eax
10000bac0:	48 89 45 80	movq	%rax, -128(%rbp)
10000bac4:	e9 1f fd ff ff	jmp	0x10000b7e8
10000bac9:	4c 8b b5 f0 fe ff ff	movq	-272(%rbp), %r14
10000bad0:	e9 d5 f6 ff ff	jmp	0x10000b1aa
10000bad5:	4c 8b a5 e0 fe ff ff	movq	-288(%rbp), %r12
10000badc:	e9 c9 f6 ff ff	jmp	0x10000b1aa
10000bae1:	31 c0	xorl	%eax, %eax
10000bae3:	48 89 85 00 ff ff ff	movq	%rax, -256(%rbp)
10000baea:	e9 bb f6 ff ff	jmp	0x10000b1aa
10000baef:	31 c0	xorl	%eax, %eax
10000baf1:	48 89 45 80	movq	%rax, -128(%rbp)
10000baf5:	4d 89 ee	movq	%r13, %r14
10000baf8:	e9 ad f6 ff ff	jmp	0x10000b1aa
10000bafd:	e8 ae 38 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10000bb02:	55	pushq	%rbp
10000bb03:	48 89 e5	movq	%rsp, %rbp
10000bb06:	81 ff 20 5a 59 58	cmpl	$1482250784, %edi
10000bb0c:	75 22	jne	0x10000bb30
10000bb0e:	c1 e2 0f	shll	$15, %edx
10000bb11:	ff ce	decl	%esi
10000bb13:	89 d0	movl	%edx, %eax
10000bb15:	31 d2	xorl	%edx, %edx
10000bb17:	f7 f6	divl	%esi
10000bb19:	41 89 c1	movl	%eax, %r9d
10000bb1c:	c1 e1 0f	shll	$15, %ecx
10000bb1f:	89 c8	movl	%ecx, %eax
10000bb21:	31 d2	xorl	%edx, %edx
10000bb23:	f7 f6	divl	%esi
10000bb25:	89 c7	movl	%eax, %edi
10000bb27:	41 c1 e0 0f	shll	$15, %r8d
10000bb2b:	44 89 c0	movl	%r8d, %eax
10000bb2e:	eb 26	jmp	0x10000bb56
10000bb30:	89 d0	movl	%edx, %eax
10000bb32:	c1 e0 10	shll	$16, %eax
10000bb35:	29 d0	subl	%edx, %eax
10000bb37:	ff ce	decl	%esi
10000bb39:	31 d2	xorl	%edx, %edx
10000bb3b:	f7 f6	divl	%esi
10000bb3d:	41 89 c1	movl	%eax, %r9d
10000bb40:	89 c8	movl	%ecx, %eax
10000bb42:	c1 e0 10	shll	$16, %eax
10000bb45:	29 c8	subl	%ecx, %eax
10000bb47:	31 d2	xorl	%edx, %edx
10000bb49:	f7 f6	divl	%esi
10000bb4b:	89 c7	movl	%eax, %edi
10000bb4d:	44 89 c0	movl	%r8d, %eax
10000bb50:	c1 e0 10	shll	$16, %eax
10000bb53:	44 29 c0	subl	%r8d, %eax
10000bb56:	31 d2	xorl	%edx, %edx
10000bb58:	f7 f6	divl	%esi
10000bb5a:	48 c1 e0 20	shlq	$32, %rax
10000bb5e:	c1 e7 10	shll	$16, %edi
10000bb61:	48 09 c7	orq	%rax, %rdi
10000bb64:	41 0f b7 c1	movzwl	%r9w, %eax
10000bb68:	48 09 f8	orq	%rdi, %rax
10000bb6b:	5d	popq	%rbp
10000bb6c:	c3	retq
10000bb6d:	55	pushq	%rbp
10000bb6e:	48 89 e5	movq	%rsp, %rbp
10000bb71:	41 56	pushq	%r14
10000bb73:	53	pushq	%rbx
10000bb74:	48 83 ec 20	subq	$32, %rsp
10000bb78:	49 89 f6	movq	%rsi, %r14
10000bb7b:	48 89 f8	movq	%rdi, %rax
10000bb7e:	b9 ff ff 00 00	movl	$65535, %ecx
10000bb83:	89 fa	movl	%edi, %edx
10000bb85:	21 ca	andl	%ecx, %edx
10000bb87:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
10000bb8b:	f2 0f 5e 05 85 c8 02 00	divsd	182405(%rip), %xmm0
10000bb93:	48 c1 e8 20	shrq	$32, %rax
10000bb97:	c1 ef 10	shrl	$16, %edi
10000bb9a:	f2 0f 2a cf	cvtsi2sd	%edi, %xmm1
10000bb9e:	f2 0f 10 1d 7a c8 02 00	movsd	182394(%rip), %xmm3
10000bba6:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
10000bbaa:	f2 0f 10 25 76 c8 02 00	movsd	182390(%rip), %xmm4
10000bbb2:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
10000bbb6:	f2 0f 10 2d 72 c8 02 00	movsd	182386(%rip), %xmm5
10000bbbe:	21 c8	andl	%ecx, %eax
10000bbc0:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
10000bbc4:	f2 0f 58 cd	addsd	%xmm5, %xmm1
10000bbc8:	f2 0f 59 d3	mulsd	%xmm3, %xmm2
10000bbcc:	f2 0f 59 d4	mulsd	%xmm4, %xmm2
10000bbd0:	f2 0f 58 d5	addsd	%xmm5, %xmm2
10000bbd4:	48 8d 5d d8	leaq	-40(%rbp), %rbx
10000bbd8:	48 8d 75 e0	leaq	-32(%rbp), %rsi
10000bbdc:	48 8d 55 e8	leaq	-24(%rbp), %rdx
10000bbe0:	48 89 df	movq	%rbx, %rdi
10000bbe3:	e8 be 2b 00 00	callq	0x10000e7a6
10000bbe8:	f2 0f 10 0b	movsd	(%rbx), %xmm1
10000bbec:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000bbf0:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10000bbf4:	73 3b	jae	0x10000bc31
10000bbf6:	f2 0f 10 15 4a c4 02 00	movsd	181322(%rip), %xmm2
10000bbfe:	66 0f 28 d9	movapd	%xmm1, %xmm3
10000bc02:	f2 0f 59 da	mulsd	%xmm2, %xmm3
10000bc06:	f2 0f 58 1d 12 c4 02 00	addsd	181266(%rip), %xmm3
10000bc0e:	f2 0f 10 25 f2 c3 02 00	movsd	181234(%rip), %xmm4
10000bc16:	f2 0f c2 e1 02	cmplesd	%xmm1, %xmm4
10000bc1b:	66 0f 28 cc	movapd	%xmm4, %xmm1
10000bc1f:	66 0f 55 cb	andnpd	%xmm3, %xmm1
10000bc23:	66 0f 54 e2	andpd	%xmm2, %xmm4
10000bc27:	66 0f 56 e1	orpd	%xmm1, %xmm4
10000bc2b:	f2 0f 2c c4	cvttsd2si	%xmm4, %eax
10000bc2f:	eb 02	jmp	0x10000bc33
10000bc31:	31 c0	xorl	%eax, %eax
10000bc33:	41 88 06	movb	%al, (%r14)
10000bc36:	f2 0f 10 4d e0	movsd	-32(%rbp), %xmm1
10000bc3b:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10000bc3f:	73 3b	jae	0x10000bc7c
10000bc41:	f2 0f 10 05 ff c3 02 00	movsd	181247(%rip), %xmm0
10000bc49:	66 0f 28 d1	movapd	%xmm1, %xmm2
10000bc4d:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
10000bc51:	f2 0f 58 15 c7 c3 02 00	addsd	181191(%rip), %xmm2
10000bc59:	f2 0f 10 1d a7 c3 02 00	movsd	181159(%rip), %xmm3
10000bc61:	f2 0f c2 d9 02	cmplesd	%xmm1, %xmm3
10000bc66:	66 0f 28 cb	movapd	%xmm3, %xmm1
10000bc6a:	66 0f 55 ca	andnpd	%xmm2, %xmm1
10000bc6e:	66 0f 54 d8	andpd	%xmm0, %xmm3
10000bc72:	66 0f 56 d9	orpd	%xmm1, %xmm3
10000bc76:	f2 0f 2c c3	cvttsd2si	%xmm3, %eax
10000bc7a:	eb 02	jmp	0x10000bc7e
10000bc7c:	31 c0	xorl	%eax, %eax
10000bc7e:	41 88 46 01	movb	%al, 1(%r14)
10000bc82:	f2 0f 10 45 e8	movsd	-24(%rbp), %xmm0
10000bc87:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000bc8b:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10000bc8f:	73 3b	jae	0x10000bccc
10000bc91:	f2 0f 10 0d af c3 02 00	movsd	181167(%rip), %xmm1
10000bc99:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000bc9d:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
10000bca1:	f2 0f 58 15 77 c3 02 00	addsd	181111(%rip), %xmm2
10000bca9:	f2 0f 10 1d 57 c3 02 00	movsd	181079(%rip), %xmm3
10000bcb1:	f2 0f c2 d8 02	cmplesd	%xmm0, %xmm3
10000bcb6:	66 0f 28 c3	movapd	%xmm3, %xmm0
10000bcba:	66 0f 55 c2	andnpd	%xmm2, %xmm0
10000bcbe:	66 0f 54 d9	andpd	%xmm1, %xmm3
10000bcc2:	66 0f 56 d8	orpd	%xmm0, %xmm3
10000bcc6:	f2 0f 2c c3	cvttsd2si	%xmm3, %eax
10000bcca:	eb 02	jmp	0x10000bcce
10000bccc:	31 c0	xorl	%eax, %eax
10000bcce:	41 88 46 02	movb	%al, 2(%r14)
10000bcd2:	48 83 c4 20	addq	$32, %rsp
10000bcd6:	5b	popq	%rbx
10000bcd7:	41 5e	popq	%r14
10000bcd9:	5d	popq	%rbp
10000bcda:	c3	retq
10000bcdb:	55	pushq	%rbp
10000bcdc:	48 89 e5	movq	%rsp, %rbp
10000bcdf:	41 56	pushq	%r14
10000bce1:	53	pushq	%rbx
10000bce2:	48 83 ec 20	subq	$32, %rsp
10000bce6:	49 89 f6	movq	%rsi, %r14
10000bce9:	48 89 f8	movq	%rdi, %rax
10000bcec:	48 c1 e8 20	shrq	$32, %rax
10000bcf0:	b9 ff ff 00 00	movl	$65535, %ecx
10000bcf5:	89 fa	movl	%edi, %edx
10000bcf7:	21 ca	andl	%ecx, %edx
10000bcf9:	f2 0f 2a da	cvtsi2sd	%edx, %xmm3
10000bcfd:	f2 0f 10 05 23 c7 02 00	movsd	182051(%rip), %xmm0
10000bd05:	f2 0f 59 d8	mulsd	%xmm0, %xmm3
10000bd09:	c1 ef 10	shrl	$16, %edi
10000bd0c:	f2 0f 2a e7	cvtsi2sd	%edi, %xmm4
10000bd10:	f2 0f 59 e0	mulsd	%xmm0, %xmm4
10000bd14:	21 c8	andl	%ecx, %eax
10000bd16:	f2 0f 2a d0	cvtsi2sd	%eax, %xmm2
10000bd1a:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
10000bd1e:	f2 0f 10 05 42 c7 02 00	movsd	182082(%rip), %xmm0
10000bd26:	f2 0f 59 c4	mulsd	%xmm4, %xmm0
10000bd2a:	f2 0f 10 0d 3e c7 02 00	movsd	182078(%rip), %xmm1
10000bd32:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
10000bd36:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10000bd3a:	f2 0f 10 05 36 c7 02 00	movsd	182070(%rip), %xmm0
10000bd42:	f2 0f 59 c2	mulsd	%xmm2, %xmm0
10000bd46:	f2 0f 58 c1	addsd	%xmm1, %xmm0
10000bd4a:	f2 0f 10 0d 2e c7 02 00	movsd	182062(%rip), %xmm1
10000bd52:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
10000bd56:	f2 0f 10 2d 2a c7 02 00	movsd	182058(%rip), %xmm5
10000bd5e:	f2 0f 59 eb	mulsd	%xmm3, %xmm5
10000bd62:	f2 0f 58 e9	addsd	%xmm1, %xmm5
10000bd66:	f2 0f 10 0d 22 c7 02 00	movsd	182050(%rip), %xmm1
10000bd6e:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
10000bd72:	f2 0f 58 cd	addsd	%xmm5, %xmm1
10000bd76:	f2 0f 59 25 1a c7 02 00	mulsd	182042(%rip), %xmm4
10000bd7e:	f2 0f 59 1d 1a c7 02 00	mulsd	182042(%rip), %xmm3
10000bd86:	f2 0f 58 dc	addsd	%xmm4, %xmm3
10000bd8a:	f2 0f 59 15 16 c7 02 00	mulsd	182038(%rip), %xmm2
10000bd92:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000bd96:	48 8d 5d d8	leaq	-40(%rbp), %rbx
10000bd9a:	48 8d 75 e0	leaq	-32(%rbp), %rsi
10000bd9e:	48 8d 55 e8	leaq	-24(%rbp), %rdx
10000bda2:	48 89 df	movq	%rbx, %rdi
10000bda5:	e8 d6 2a 00 00	callq	0x10000e880
10000bdaa:	f2 0f 10 0b	movsd	(%rbx), %xmm1
10000bdae:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000bdb2:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10000bdb6:	73 3b	jae	0x10000bdf3
10000bdb8:	f2 0f 10 15 88 c2 02 00	movsd	180872(%rip), %xmm2
10000bdc0:	66 0f 28 d9	movapd	%xmm1, %xmm3
10000bdc4:	f2 0f 59 da	mulsd	%xmm2, %xmm3
10000bdc8:	f2 0f 58 1d 50 c2 02 00	addsd	180816(%rip), %xmm3
10000bdd0:	f2 0f 10 25 30 c2 02 00	movsd	180784(%rip), %xmm4
10000bdd8:	f2 0f c2 e1 02	cmplesd	%xmm1, %xmm4
10000bddd:	66 0f 28 cc	movapd	%xmm4, %xmm1
10000bde1:	66 0f 55 cb	andnpd	%xmm3, %xmm1
10000bde5:	66 0f 54 e2	andpd	%xmm2, %xmm4
10000bde9:	66 0f 56 e1	orpd	%xmm1, %xmm4
10000bded:	f2 0f 2c c4	cvttsd2si	%xmm4, %eax
10000bdf1:	eb 02	jmp	0x10000bdf5
10000bdf3:	31 c0	xorl	%eax, %eax
10000bdf5:	41 88 06	movb	%al, (%r14)
10000bdf8:	f2 0f 10 4d e0	movsd	-32(%rbp), %xmm1
10000bdfd:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10000be01:	73 3b	jae	0x10000be3e
10000be03:	f2 0f 10 05 3d c2 02 00	movsd	180797(%rip), %xmm0
10000be0b:	66 0f 28 d1	movapd	%xmm1, %xmm2
10000be0f:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
10000be13:	f2 0f 58 15 05 c2 02 00	addsd	180741(%rip), %xmm2
10000be1b:	f2 0f 10 1d e5 c1 02 00	movsd	180709(%rip), %xmm3
10000be23:	f2 0f c2 d9 02	cmplesd	%xmm1, %xmm3
10000be28:	66 0f 28 cb	movapd	%xmm3, %xmm1
10000be2c:	66 0f 55 ca	andnpd	%xmm2, %xmm1
10000be30:	66 0f 54 d8	andpd	%xmm0, %xmm3
10000be34:	66 0f 56 d9	orpd	%xmm1, %xmm3
10000be38:	f2 0f 2c c3	cvttsd2si	%xmm3, %eax
10000be3c:	eb 02	jmp	0x10000be40
10000be3e:	31 c0	xorl	%eax, %eax
10000be40:	41 88 46 01	movb	%al, 1(%r14)
10000be44:	f2 0f 10 45 e8	movsd	-24(%rbp), %xmm0
10000be49:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000be4d:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10000be51:	73 3b	jae	0x10000be8e
10000be53:	f2 0f 10 0d ed c1 02 00	movsd	180717(%rip), %xmm1
10000be5b:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000be5f:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
10000be63:	f2 0f 58 15 b5 c1 02 00	addsd	180661(%rip), %xmm2
10000be6b:	f2 0f 10 1d 95 c1 02 00	movsd	180629(%rip), %xmm3
10000be73:	f2 0f c2 d8 02	cmplesd	%xmm0, %xmm3
10000be78:	66 0f 28 c3	movapd	%xmm3, %xmm0
10000be7c:	66 0f 55 c2	andnpd	%xmm2, %xmm0
10000be80:	66 0f 54 d9	andpd	%xmm1, %xmm3
10000be84:	66 0f 56 d8	orpd	%xmm0, %xmm3
10000be88:	f2 0f 2c c3	cvttsd2si	%xmm3, %eax
10000be8c:	eb 02	jmp	0x10000be90
10000be8e:	31 c0	xorl	%eax, %eax
10000be90:	41 88 46 02	movb	%al, 2(%r14)
10000be94:	48 83 c4 20	addq	$32, %rsp
10000be98:	5b	popq	%rbx
10000be99:	41 5e	popq	%r14
10000be9b:	5d	popq	%rbp
10000be9c:	c3	retq
10000be9d:	55	pushq	%rbp
10000be9e:	48 89 e5	movq	%rsp, %rbp
10000bea1:	41 57	pushq	%r15
10000bea3:	41 56	pushq	%r14
10000bea5:	41 55	pushq	%r13
10000bea7:	41 54	pushq	%r12
10000bea9:	53	pushq	%rbx
10000beaa:	48 81 ec 18 01 00 00	subq	$280, %rsp
10000beb1:	49 89 d6	movq	%rdx, %r14
10000beb4:	49 89 fd	movq	%rdi, %r13
10000beb7:	48 8b 05 5a 09 03 00	movq	199002(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000bebe:	48 8b 00	movq	(%rax), %rax
10000bec1:	48 89 45 d0	movq	%rax, -48(%rbp)
10000bec5:	48 8b 05 7c 0b 03 00	movq	199548(%rip), %rax ## literal pool symbol address: _kColorSyncGenericLabProfile
10000becc:	48 8b 38	movq	(%rax), %rdi
10000becf:	e8 c2 33 02 00	callq	0x10002f296 ## symbol stub for: _ColorSyncProfileCreateWithName
10000bed4:	48 8b 0d 75 6d 04 00	movq	290165(%rip), %rcx
10000bedb:	41 c7 44 0d 00 20 62 61 4c	movl	$1281450528, (%r13,%rcx)
10000bee4:	48 8b 0d 6d 0b 03 00	movq	199533(%rip), %rcx ## literal pool symbol address: _kColorSyncProfile
10000beeb:	4c 8b 01	movq	(%rcx), %r8
10000beee:	48 8d 75 b0	leaq	-80(%rbp), %rsi
10000bef2:	4c 89 06	movq	%r8, (%rsi)
10000bef5:	48 8b 0d 84 0b 03 00	movq	199556(%rip), %rcx ## literal pool symbol address: _kColorSyncRenderingIntent
10000befc:	48 8b 09	movq	(%rcx), %rcx
10000beff:	48 89 4e 08	movq	%rcx, 8(%rsi)
10000bf03:	48 8b 15 c6 0b 03 00	movq	199622(%rip), %rdx ## literal pool symbol address: _kColorSyncTransformTag
10000bf0a:	48 8b 3a	movq	(%rdx), %rdi
10000bf0d:	48 89 7e 10	movq	%rdi, 16(%rsi)
10000bf11:	48 8d 55 90	leaq	-112(%rbp), %rdx
10000bf15:	48 89 85 d8 fe ff ff	movq	%rax, -296(%rbp)
10000bf1c:	48 89 02	movq	%rax, (%rdx)
10000bf1f:	48 8b 1d 6a 0b 03 00	movq	199530(%rip), %rbx ## literal pool symbol address: _kColorSyncRenderingIntentPerceptual
10000bf26:	48 8b 1b	movq	(%rbx), %rbx
10000bf29:	48 89 5a 08	movq	%rbx, 8(%rdx)
10000bf2d:	48 8b 05 7c 0b 03 00	movq	199548(%rip), %rax ## literal pool symbol address: _kColorSyncTransformDeviceToPCS
10000bf34:	48 8b 00	movq	(%rax), %rax
10000bf37:	48 89 42 10	movq	%rax, 16(%rdx)
10000bf3b:	4c 8d bd 70 ff ff ff	leaq	-144(%rbp), %r15
10000bf42:	4d 89 07	movq	%r8, (%r15)
10000bf45:	49 89 4f 08	movq	%rcx, 8(%r15)
10000bf49:	49 89 7f 10	movq	%rdi, 16(%r15)
10000bf4d:	4c 8d a5 50 ff ff ff	leaq	-176(%rbp), %r12
10000bf54:	4d 89 34 24	movq	%r14, (%r12)
10000bf58:	49 89 5c 24 08	movq	%rbx, 8(%r12)
10000bf5d:	48 8b 05 54 0b 03 00	movq	199508(%rip), %rax ## literal pool symbol address: _kColorSyncTransformGamutCheck
10000bf64:	48 8b 00	movq	(%rax), %rax
10000bf67:	49 89 44 24 10	movq	%rax, 16(%r12)
10000bf6c:	4c 8b 05 1d 0a 03 00	movq	199197(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10000bf73:	4c 8b 0d 1e 0a 03 00	movq	199198(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10000bf7a:	31 db	xorl	%ebx, %ebx
10000bf7c:	b9 03 00 00 00	movl	$3, %ecx
10000bf81:	31 ff	xorl	%edi, %edi
10000bf83:	e8 36 2f 02 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
10000bf88:	49 89 c6	movq	%rax, %r14
10000bf8b:	b9 03 00 00 00	movl	$3, %ecx
10000bf90:	31 ff	xorl	%edi, %edi
10000bf92:	4c 89 fe	movq	%r15, %rsi
10000bf95:	4c 89 e2	movq	%r12, %rdx
10000bf98:	4c 8b 05 f1 09 03 00	movq	199153(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10000bf9f:	4c 8b 0d f2 09 03 00	movq	199154(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10000bfa6:	e8 13 2f 02 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
10000bfab:	48 8d b5 30 ff ff ff	leaq	-208(%rbp), %rsi
10000bfb2:	4c 89 36	movq	%r14, (%rsi)
10000bfb5:	48 89 46 08	movq	%rax, 8(%rsi)
10000bfb9:	48 c7 46 10 00 00 00 00	movq	$0, 16(%rsi)
10000bfc1:	48 8b 0d c0 09 03 00	movq	199104(%rip), %rcx ## literal pool symbol address: _kCFTypeArrayCallBacks
10000bfc8:	ba 02 00 00 00	movl	$2, %edx
10000bfcd:	31 ff	xorl	%edi, %edi
10000bfcf:	e8 6c 2e 02 00	callq	0x10002ee40 ## symbol stub for: _CFArrayCreate
10000bfd4:	49 89 c6	movq	%rax, %r14
10000bfd7:	48 89 c7	movq	%rax, %rdi
10000bfda:	31 f6	xorl	%esi, %esi
10000bfdc:	e8 e5 32 02 00	callq	0x10002f2c6 ## symbol stub for: _ColorSyncTransformCreate
10000bfe1:	49 89 c7	movq	%rax, %r15
10000bfe4:	4c 89 f7	movq	%r14, %rdi
10000bfe7:	e8 26 2f 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000bfec:	4d 85 ff	testq	%r15, %r15
10000bfef:	0f 84 f4 06 00 00	je	0x10000c6e9
10000bff5:	4c 89 bd e8 fe ff ff	movq	%r15, -280(%rbp)
10000bffc:	48 8b 05 fd 6b 04 00	movq	289789(%rip), %rax
10000c003:	41 c7 44 05 00 00 48 00 00	movl	$18432, (%r13,%rax)
10000c00c:	48 8b 0d f5 6b 04 00	movq	289781(%rip), %rcx
10000c013:	41 c7 44 0d 00 10 27 00 00	movl	$10000, (%r13,%rcx)
10000c01c:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000c021:	48 01 c0	addq	%rax, %rax
10000c024:	48 8d 3c 40	leaq	(%rax,%rax,2), %rdi
10000c028:	e8 85 34 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c02d:	48 8b 0d f4 6b 04 00	movq	289780(%rip), %rcx
10000c034:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10000c039:	bf 60 ea 00 00	movl	$60000, %edi
10000c03e:	e8 6f 34 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c043:	48 8b 0d e6 6b 04 00	movq	289766(%rip), %rcx
10000c04a:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10000c04f:	bf 66 c5 0a 00	movl	$705894, %edi
10000c054:	e8 59 34 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c059:	49 89 c4	movq	%rax, %r12
10000c05c:	bf 74 39 00 00	movl	$14708, %edi
10000c061:	e8 4c 34 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c066:	48 89 85 f0 fe ff ff	movq	%rax, -272(%rbp)
10000c06d:	41 bb ab aa aa aa	movl	$2863311531, %r11d
10000c073:	49 ba 00 00 00 00 ff ff ff 07	movabsq	$576460748008456192, %r10
10000c07d:	45 31 c0	xorl	%r8d, %r8d
10000c080:	44 89 c2	movl	%r8d, %edx
10000c083:	c1 e2 10	shll	$16, %edx
10000c086:	44 29 c2	subl	%r8d, %edx
10000c089:	49 0f af d3	imulq	%r11, %rdx
10000c08d:	48 c1 ea 25	shrq	$37, %rdx
10000c091:	44 0f b7 f2	movzwl	%dx, %r14d
10000c095:	45 31 c9	xorl	%r9d, %r9d
10000c098:	44 89 ca	movl	%r9d, %edx
10000c09b:	c1 e2 10	shll	$16, %edx
10000c09e:	44 29 ca	subl	%r9d, %edx
10000c0a1:	49 0f af d3	imulq	%r11, %rdx
10000c0a5:	48 c1 ea 20	shrq	$32, %rdx
10000c0a9:	83 e2 e0	andl	$-32, %edx
10000c0ac:	c1 e2 0b	shll	$11, %edx
10000c0af:	31 ff	xorl	%edi, %edi
10000c0b1:	89 d9	movl	%ebx, %ecx
10000c0b3:	ff c3	incl	%ebx
10000c0b5:	48 8d 0c 49	leaq	(%rcx,%rcx,2), %rcx
10000c0b9:	89 fe	movl	%edi, %esi
10000c0bb:	49 0f af f3	imulq	%r11, %rsi
10000c0bf:	48 89 f0	movq	%rsi, %rax
10000c0c2:	48 c1 e8 05	shrq	$5, %rax
10000c0c6:	4c 21 d0	andq	%r10, %rax
10000c0c9:	48 09 d0	orq	%rdx, %rax
10000c0cc:	4c 09 f0	orq	%r14, %rax
10000c0cf:	48 c1 ee 25	shrq	$37, %rsi
10000c0d3:	66 41 89 74 4c 04	movw	%si, 4(%r12,%rcx,2)
10000c0d9:	41 89 04 4c	movl	%eax, (%r12,%rcx,2)
10000c0dd:	81 c7 ff ff 00 00	addl	$65535, %edi
10000c0e3:	81 ff cf ff 30 00	cmpl	$3211215, %edi
10000c0e9:	75 c6	jne	0x10000c0b1
10000c0eb:	41 ff c1	incl	%r9d
10000c0ee:	41 83 f9 31	cmpl	$49, %r9d
10000c0f2:	75 a4	jne	0x10000c098
10000c0f4:	41 ff c0	incl	%r8d
10000c0f7:	41 83 f8 31	cmpl	$49, %r8d
10000c0fb:	75 83	jne	0x10000c080
10000c0fd:	45 31 ff	xorl	%r15d, %r15d
10000c100:	be 91 cb 01 00	movl	$117649, %esi
10000c105:	ba 01 00 00 00	movl	$1, %edx
10000c10a:	48 8b bd e8 fe ff ff	movq	-280(%rbp), %rdi
10000c111:	48 8b 8d f0 fe ff ff	movq	-272(%rbp), %rcx
10000c118:	41 b8 01 00 00 00	movl	$1, %r8d
10000c11e:	45 31 c9	xorl	%r9d, %r9d
10000c121:	6a 00	pushq	$0
10000c123:	68 66 c5 0a 00	pushq	$705894
10000c128:	6a 00	pushq	$0
10000c12a:	6a 03	pushq	$3
10000c12c:	41 54	pushq	%r12
10000c12e:	68 73 39 00 00	pushq	$14707
10000c133:	e8 88 31 02 00	callq	0x10002f2c0 ## symbol stub for: _ColorSyncTransformConvert
10000c138:	48 83 c4 30	addq	$48, %rsp
10000c13c:	84 c0	testb	%al, %al
10000c13e:	0f 84 b3 05 00 00	je	0x10000c6f7
10000c144:	45 31 d2	xorl	%r10d, %r10d
10000c147:	31 c0	xorl	%eax, %eax
10000c149:	48 89 85 08 ff ff ff	movq	%rax, -248(%rbp)
10000c150:	4c 89 ad d0 fe ff ff	movq	%r13, -304(%rbp)
10000c157:	48 8b 85 08 ff ff ff	movq	-248(%rbp), %rax
10000c15e:	ff c0	incl	%eax
10000c160:	89 85 04 ff ff ff	movl	%eax, -252(%rbp)
10000c166:	31 c0	xorl	%eax, %eax
10000c168:	4c 89 95 c8 fe ff ff	movq	%r10, -312(%rbp)
10000c16f:	41 89 c6	movl	%eax, %r14d
10000c172:	4c 89 b5 c0 fe ff ff	movq	%r14, -320(%rbp)
10000c179:	48 8b 9d f0 fe ff ff	movq	-272(%rbp), %rbx
10000c180:	48 89 df	movq	%rbx, %rdi
10000c183:	48 8b b5 08 ff ff ff	movq	-248(%rbp), %rsi
10000c18a:	89 c2	movl	%eax, %edx
10000c18c:	48 8d 8d 10 ff ff ff	leaq	-240(%rbp), %rcx
10000c193:	4c 8d 85 20 ff ff ff	leaq	-224(%rbp), %r8
10000c19a:	e8 83 05 00 00	callq	0x10000c722
10000c19f:	89 85 00 ff ff ff	movl	%eax, -256(%rbp)
10000c1a5:	41 ff c6	incl	%r14d
10000c1a8:	48 89 df	movq	%rbx, %rdi
10000c1ab:	48 8b b5 08 ff ff ff	movq	-248(%rbp), %rsi
10000c1b2:	44 89 f2	movl	%r14d, %edx
10000c1b5:	48 8d 8d 14 ff ff ff	leaq	-236(%rbp), %rcx
10000c1bc:	4c 8d 85 24 ff ff ff	leaq	-220(%rbp), %r8
10000c1c3:	e8 5a 05 00 00	callq	0x10000c722
10000c1c8:	89 85 fc fe ff ff	movl	%eax, -260(%rbp)
10000c1ce:	48 89 df	movq	%rbx, %rdi
10000c1d1:	44 8b ad 04 ff ff ff	movl	-252(%rbp), %r13d
10000c1d8:	44 89 ee	movl	%r13d, %esi
10000c1db:	44 89 b5 e0 fe ff ff	movl	%r14d, -288(%rbp)
10000c1e2:	44 89 f2	movl	%r14d, %edx
10000c1e5:	48 8d 8d 18 ff ff ff	leaq	-232(%rbp), %rcx
10000c1ec:	4c 8d 85 28 ff ff ff	leaq	-216(%rbp), %r8
10000c1f3:	e8 2a 05 00 00	callq	0x10000c722
10000c1f8:	89 85 e4 fe ff ff	movl	%eax, -284(%rbp)
10000c1fe:	48 89 df	movq	%rbx, %rdi
10000c201:	48 8b 9d c0 fe ff ff	movq	-320(%rbp), %rbx
10000c208:	44 89 ee	movl	%r13d, %esi
10000c20b:	89 da	movl	%ebx, %edx
10000c20d:	48 8d 8d 1c ff ff ff	leaq	-228(%rbp), %rcx
10000c214:	4c 8d 85 2c ff ff ff	leaq	-212(%rbp), %r8
10000c21b:	e8 02 05 00 00	callq	0x10000c722
10000c220:	f6 85 08 ff ff ff 01	testb	$1, -248(%rbp)
10000c227:	0f 85 50 02 00 00	jne	0x10000c47d
10000c22d:	44 8b b5 00 ff ff ff	movl	-256(%rbp), %r14d
10000c234:	45 85 f6	testl	%r14d, %r14d
10000c237:	4c 8b 95 c8 fe ff ff	movq	-312(%rbp), %r10
10000c23e:	4c 8b ad d0 fe ff ff	movq	-304(%rbp), %r13
10000c245:	0f 84 53 02 00 00	je	0x10000c49e
10000c24b:	83 bd fc fe ff ff 00	cmpl	$0, -260(%rbp)
10000c252:	4c 8b 05 cf 69 04 00	movq	289231(%rip), %r8
10000c259:	0f 84 b4 00 00 00	je	0x10000c313
10000c25f:	4c 8b 0d ca 69 04 00	movq	289226(%rip), %r9
10000c266:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c26b:	41 8d 52 01	leal	1(%r10), %edx
10000c26f:	44 89 d6	movl	%r10d, %esi
10000c272:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c276:	8b bd 10 ff ff ff	movl	-240(%rbp), %edi
10000c27c:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c280:	49 89 db	movq	%rbx, %r11
10000c283:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c289:	66 89 5c 71 04	movw	%bx, 4(%rcx,%rsi,2)
10000c28e:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c292:	89 3c 71	movl	%edi, (%rcx,%rsi,2)
10000c295:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c29a:	41 8d 72 02	leal	2(%r10), %esi
10000c29e:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c2a2:	8b bd 14 ff ff ff	movl	-236(%rbp), %edi
10000c2a8:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c2ac:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c2b2:	66 89 5c 51 04	movw	%bx, 4(%rcx,%rdx,2)
10000c2b7:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c2bb:	89 3c 51	movl	%edi, (%rcx,%rdx,2)
10000c2be:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c2c3:	41 8d 52 03	leal	3(%r10), %edx
10000c2c7:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c2cb:	8b bd 20 ff ff ff	movl	-224(%rbp), %edi
10000c2d1:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c2d5:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c2db:	66 89 5c 71 04	movw	%bx, 4(%rcx,%rsi,2)
10000c2e0:	4c 89 db	movq	%r11, %rbx
10000c2e3:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c2e7:	89 3c 71	movl	%edi, (%rcx,%rsi,2)
10000c2ea:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c2ef:	41 83 c2 04	addl	$4, %r10d
10000c2f3:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c2f7:	8b b5 24 ff ff ff	movl	-220(%rbp), %esi
10000c2fd:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c301:	41 0f b7 7c 74 04	movzwl	4(%r12,%rsi,2), %edi
10000c307:	66 89 7c 51 04	movw	%di, 4(%rcx,%rdx,2)
10000c30c:	41 8b 34 74	movl	(%r12,%rsi,2), %esi
10000c310:	89 34 51	movl	%esi, (%rcx,%rdx,2)
10000c313:	f6 c3 01	testb	$1, %bl
10000c316:	0f 85 bf 00 00 00	jne	0x10000c3db
10000c31c:	45 85 f6	testl	%r14d, %r14d
10000c31f:	0f 84 b6 00 00 00	je	0x10000c3db
10000c325:	85 c0	testl	%eax, %eax
10000c327:	0f 84 ae 00 00 00	je	0x10000c3db
10000c32d:	4c 8b 0d fc 68 04 00	movq	289020(%rip), %r9
10000c334:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c339:	41 8d 52 01	leal	1(%r10), %edx
10000c33d:	44 89 d6	movl	%r10d, %esi
10000c340:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c344:	8b bd 10 ff ff ff	movl	-240(%rbp), %edi
10000c34a:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c34e:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c354:	66 89 5c 71 04	movw	%bx, 4(%rcx,%rsi,2)
10000c359:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c35d:	89 3c 71	movl	%edi, (%rcx,%rsi,2)
10000c360:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c365:	41 8d 72 02	leal	2(%r10), %esi
10000c369:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c36d:	8b bd 1c ff ff ff	movl	-228(%rbp), %edi
10000c373:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c377:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c37d:	66 89 5c 51 04	movw	%bx, 4(%rcx,%rdx,2)
10000c382:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c386:	89 3c 51	movl	%edi, (%rcx,%rdx,2)
10000c389:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c38e:	41 8d 52 03	leal	3(%r10), %edx
10000c392:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c396:	8b bd 20 ff ff ff	movl	-224(%rbp), %edi
10000c39c:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c3a0:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c3a6:	66 89 5c 71 04	movw	%bx, 4(%rcx,%rsi,2)
10000c3ab:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c3af:	89 3c 71	movl	%edi, (%rcx,%rsi,2)
10000c3b2:	4b 8b 4c 0d 00	movq	(%r13,%r9), %rcx
10000c3b7:	41 83 c2 04	addl	$4, %r10d
10000c3bb:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c3bf:	8b b5 2c ff ff ff	movl	-212(%rbp), %esi
10000c3c5:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c3c9:	41 0f b7 7c 74 04	movzwl	4(%r12,%rsi,2), %edi
10000c3cf:	66 89 7c 51 04	movw	%di, 4(%rcx,%rdx,2)
10000c3d4:	41 8b 34 74	movl	(%r12,%rsi,2), %esi
10000c3d8:	89 34 51	movl	%esi, (%rcx,%rdx,2)
10000c3db:	45 85 f6	testl	%r14d, %r14d
10000c3de:	0f 84 88 00 00 00	je	0x10000c46c
10000c3e4:	83 bd fc fe ff ff 00	cmpl	$0, -260(%rbp)
10000c3eb:	74 7f	je	0x10000c46c
10000c3ed:	83 bd e4 fe ff ff 00	cmpl	$0, -284(%rbp)
10000c3f4:	74 76	je	0x10000c46c
10000c3f6:	85 c0	testl	%eax, %eax
10000c3f8:	74 72	je	0x10000c46c
10000c3fa:	44 89 f9	movl	%r15d, %ecx
10000c3fd:	31 c0	xorl	%eax, %eax
10000c3ff:	8d 14 01	leal	(%rcx,%rax), %edx
10000c402:	4b 8b 74 05 00	movq	(%r13,%r8), %rsi
10000c407:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c40b:	8b bc 85 10 ff ff ff	movl	-240(%rbp,%rax,4), %edi
10000c412:	48 8d 3c 7f	leaq	(%rdi,%rdi,2), %rdi
10000c416:	41 0f b7 5c 7c 04	movzwl	4(%r12,%rdi,2), %ebx
10000c41c:	66 89 5c 56 04	movw	%bx, 4(%rsi,%rdx,2)
10000c421:	41 8b 3c 7c	movl	(%r12,%rdi,2), %edi
10000c425:	89 3c 56	movl	%edi, (%rsi,%rdx,2)
10000c428:	48 ff c0	incq	%rax
10000c42b:	48 83 f8 04	cmpq	$4, %rax
10000c42f:	75 ce	jne	0x10000c3ff
10000c431:	41 01 c7	addl	%eax, %r15d
10000c434:	31 c0	xorl	%eax, %eax
10000c436:	4b 8b 4c 05 00	movq	(%r13,%r8), %rcx
10000c43b:	44 89 fa	movl	%r15d, %edx
10000c43e:	41 ff c7	incl	%r15d
10000c441:	48 8d 14 52	leaq	(%rdx,%rdx,2), %rdx
10000c445:	8b b4 05 20 ff ff ff	movl	-224(%rbp,%rax), %esi
10000c44c:	48 8d 34 76	leaq	(%rsi,%rsi,2), %rsi
10000c450:	41 0f b7 7c 74 04	movzwl	4(%r12,%rsi,2), %edi
10000c456:	66 89 7c 51 04	movw	%di, 4(%rcx,%rdx,2)
10000c45b:	41 8b 34 74	movl	(%r12,%rsi,2), %esi
10000c45f:	89 34 51	movl	%esi, (%rcx,%rdx,2)
10000c462:	48 83 c0 04	addq	$4, %rax
10000c466:	48 83 f8 10	cmpq	$16, %rax
10000c46a:	75 ca	jne	0x10000c436
10000c46c:	8b 85 e0 fe ff ff	movl	-288(%rbp), %eax
10000c472:	83 f8 30	cmpl	$48, %eax
10000c475:	0f 85 ed fc ff ff	jne	0x10000c168
10000c47b:	eb 2d	jmp	0x10000c4aa
10000c47d:	4c 8b 05 a4 67 04 00	movq	288676(%rip), %r8
10000c484:	4c 8b 95 c8 fe ff ff	movq	-312(%rbp), %r10
10000c48b:	4c 8b ad d0 fe ff ff	movq	-304(%rbp), %r13
10000c492:	44 8b b5 00 ff ff ff	movl	-256(%rbp), %r14d
10000c499:	e9 75 fe ff ff	jmp	0x10000c313
10000c49e:	4c 8b 05 83 67 04 00	movq	288643(%rip), %r8
10000c4a5:	e9 69 fe ff ff	jmp	0x10000c313
10000c4aa:	8b 85 04 ff ff ff	movl	-252(%rbp), %eax
10000c4b0:	89 c1	movl	%eax, %ecx
10000c4b2:	48 89 8d 08 ff ff ff	movq	%rcx, -248(%rbp)
10000c4b9:	83 f8 30	cmpl	$48, %eax
10000c4bc:	0f 85 95 fc ff ff	jne	0x10000c157
10000c4c2:	48 8b 05 37 67 04 00	movq	288567(%rip), %rax
10000c4c9:	45 89 7c 05 00	movl	%r15d, (%r13,%rax)
10000c4ce:	48 8b 0d 33 67 04 00	movq	288563(%rip), %rcx
10000c4d5:	45 89 54 0d 00	movl	%r10d, (%r13,%rcx)
10000c4da:	45 8b 7c 05 00	movl	(%r13,%rax), %r15d
10000c4df:	47 8d 34 7f	leal	(%r15,%r15,2), %r14d
10000c4e3:	4a 8d 3c b5 00 00 00 00	leaq	(,%r14,4), %rdi
10000c4eb:	4c 89 d3	movq	%r10, %rbx
10000c4ee:	e8 bf 2f 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c4f3:	48 8b 0d 46 67 04 00	movq	288582(%rip), %rcx
10000c4fa:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10000c4ff:	8d 3c 5b	leal	(%rbx,%rbx,2), %edi
10000c502:	48 c1 e7 02	shlq	$2, %rdi
10000c506:	e8 a7 2f 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c50b:	48 8b 0d 36 67 04 00	movq	288566(%rip), %rcx
10000c512:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10000c517:	4c 89 f7	movq	%r14, %rdi
10000c51a:	e8 93 2f 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000c51f:	4c 8b 35 f2 66 04 00	movq	288498(%rip), %r14
10000c526:	4b 89 44 35 00	movq	%rax, (%r13,%r14)
10000c52b:	48 8b 0d 1e 67 04 00	movq	288542(%rip), %rcx
10000c532:	41 81 7c 0d 00 20 62 61 4c	cmpl	$1281450528, (%r13,%rcx)
10000c53b:	0f 85 93 00 00 00	jne	0x10000c5d4
10000c541:	45 85 ff	testl	%r15d, %r15d
10000c544:	0f 84 14 01 00 00	je	0x10000c65e
10000c54a:	48 8b 0d d7 66 04 00	movq	288471(%rip), %rcx
10000c551:	49 8b 4c 0d 00	movq	(%r13,%rcx), %rcx
10000c556:	8b 11	movl	(%rcx), %edx
10000c558:	0f b7 79 04	movzwl	4(%rcx), %edi
10000c55c:	48 c1 e7 20	shlq	$32, %rdi
10000c560:	48 09 d7	orq	%rdx, %rdi
10000c563:	48 89 c6	movq	%rax, %rsi
10000c566:	e8 02 f6 ff ff	callq	0x10000bb6d
10000c56b:	48 8b 0d b6 66 04 00	movq	288438(%rip), %rcx
10000c572:	48 8b 05 87 66 04 00	movq	288391(%rip), %rax
10000c579:	41 83 7c 05 00 02	cmpl	$2, (%r13,%rax)
10000c57f:	0f 82 d9 00 00 00	jb	0x10000c65e
10000c585:	41 bf 01 00 00 00	movl	$1, %r15d
10000c58b:	bb 03 00 00 00	movl	$3, %ebx
10000c590:	49 8b 44 0d 00	movq	(%r13,%rcx), %rax
10000c595:	89 de	movl	%ebx, %esi
10000c597:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000c59c:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000c59f:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000c5a4:	48 c1 e7 20	shlq	$32, %rdi
10000c5a8:	48 09 cf	orq	%rcx, %rdi
10000c5ab:	e8 bd f5 ff ff	callq	0x10000bb6d
10000c5b0:	48 8b 0d 71 66 04 00	movq	288369(%rip), %rcx
10000c5b7:	49 ff c7	incq	%r15
10000c5ba:	48 8b 05 3f 66 04 00	movq	288319(%rip), %rax
10000c5c1:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000c5c6:	48 83 c3 03	addq	$3, %rbx
10000c5ca:	49 39 c7	cmpq	%rax, %r15
10000c5cd:	72 c1	jb	0x10000c590
10000c5cf:	e9 8a 00 00 00	jmp	0x10000c65e
10000c5d4:	45 85 ff	testl	%r15d, %r15d
10000c5d7:	0f 84 81 00 00 00	je	0x10000c65e
10000c5dd:	48 8b 0d 44 66 04 00	movq	288324(%rip), %rcx
10000c5e4:	49 8b 4c 0d 00	movq	(%r13,%rcx), %rcx
10000c5e9:	8b 11	movl	(%rcx), %edx
10000c5eb:	0f b7 79 04	movzwl	4(%rcx), %edi
10000c5ef:	48 c1 e7 20	shlq	$32, %rdi
10000c5f3:	48 09 d7	orq	%rdx, %rdi
10000c5f6:	48 89 c6	movq	%rax, %rsi
10000c5f9:	e8 dd f6 ff ff	callq	0x10000bcdb
10000c5fe:	48 8b 0d 23 66 04 00	movq	288291(%rip), %rcx
10000c605:	48 8b 05 f4 65 04 00	movq	288244(%rip), %rax
10000c60c:	41 83 7c 05 00 02	cmpl	$2, (%r13,%rax)
10000c612:	72 4a	jb	0x10000c65e
10000c614:	41 bf 01 00 00 00	movl	$1, %r15d
10000c61a:	bb 03 00 00 00	movl	$3, %ebx
10000c61f:	49 8b 44 0d 00	movq	(%r13,%rcx), %rax
10000c624:	89 de	movl	%ebx, %esi
10000c626:	4b 03 74 35 00	addq	(%r13,%r14), %rsi
10000c62b:	8b 0c 58	movl	(%rax,%rbx,2), %ecx
10000c62e:	0f b7 7c 58 04	movzwl	4(%rax,%rbx,2), %edi
10000c633:	48 c1 e7 20	shlq	$32, %rdi
10000c637:	48 09 cf	orq	%rcx, %rdi
10000c63a:	e8 9c f6 ff ff	callq	0x10000bcdb
10000c63f:	48 8b 0d e2 65 04 00	movq	288226(%rip), %rcx
10000c646:	49 ff c7	incq	%r15
10000c649:	48 8b 05 b0 65 04 00	movq	288176(%rip), %rax
10000c650:	41 8b 44 05 00	movl	(%r13,%rax), %eax
10000c655:	48 83 c3 03	addq	$3, %rbx
10000c659:	49 39 c7	cmpq	%rax, %r15
10000c65c:	72 c1	jb	0x10000c61f
10000c65e:	48 8b 05 5b 65 04 00	movq	288091(%rip), %rax
10000c665:	41 8b 54 05 00	movl	(%r13,%rax), %edx
10000c66a:	48 8b 35 a7 59 04 00	movq	285095(%rip), %rsi ## Objc selector ref: setPlotSpace:
10000c671:	4c 89 ef	movq	%r13, %rdi
10000c674:	ff 15 a6 05 03 00	callq	*198054(%rip) ## Objc message: -[%rdi setPlotSpace:]
10000c67a:	41 b6 01	movb	$1, %r14b
10000c67d:	48 8b 9d d8 fe ff ff	movq	-296(%rbp), %rbx
10000c684:	4c 8b bd e8 fe ff ff	movq	-280(%rbp), %r15
10000c68b:	4d 85 e4	testq	%r12, %r12
10000c68e:	74 08	je	0x10000c698
10000c690:	4c 89 e7	movq	%r12, %rdi
10000c693:	e8 3c 2d 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000c698:	48 8b bd f0 fe ff ff	movq	-272(%rbp), %rdi
10000c69f:	48 85 ff	testq	%rdi, %rdi
10000c6a2:	74 05	je	0x10000c6a9
10000c6a4:	e8 2b 2d 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000c6a9:	48 85 db	testq	%rbx, %rbx
10000c6ac:	74 08	je	0x10000c6b6
10000c6ae:	48 89 df	movq	%rbx, %rdi
10000c6b1:	e8 5c 28 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000c6b6:	4d 85 ff	testq	%r15, %r15
10000c6b9:	74 08	je	0x10000c6c3
10000c6bb:	4c 89 ff	movq	%r15, %rdi
10000c6be:	e8 4f 28 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000c6c3:	48 8b 05 4e 01 03 00	movq	196942(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000c6ca:	48 8b 00	movq	(%rax), %rax
10000c6cd:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10000c6d1:	75 4a	jne	0x10000c71d
10000c6d3:	41 0f b6 c6	movzbl	%r14b, %eax
10000c6d7:	48 81 c4 18 01 00 00	addq	$280, %rsp
10000c6de:	5b	popq	%rbx
10000c6df:	41 5c	popq	%r12
10000c6e1:	41 5d	popq	%r13
10000c6e3:	41 5e	popq	%r14
10000c6e5:	41 5f	popq	%r15
10000c6e7:	5d	popq	%rbp
10000c6e8:	c3	retq
10000c6e9:	31 c0	xorl	%eax, %eax
10000c6eb:	48 89 85 f0 fe ff ff	movq	%rax, -272(%rbp)
10000c6f2:	49 89 dc	movq	%rbx, %r12
10000c6f5:	eb 07	jmp	0x10000c6fe
10000c6f7:	4c 8b bd e8 fe ff ff	movq	-280(%rbp), %r15
10000c6fe:	48 8b 35 a3 4b 04 00	movq	281507(%rip), %rsi ## Objc selector ref: freeData
10000c705:	4c 89 ef	movq	%r13, %rdi
10000c708:	ff 15 12 05 03 00	callq	*197906(%rip) ## Objc message: -[%rdi freeData]
10000c70e:	45 31 f6	xorl	%r14d, %r14d
10000c711:	48 8b 9d d8 fe ff ff	movq	-296(%rbp), %rbx
10000c718:	e9 6e ff ff ff	jmp	0x10000c68b
10000c71d:	e8 8e 2c 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10000c722:	55	pushq	%rbp
10000c723:	48 89 e5	movq	%rsp, %rbp
10000c726:	53	pushq	%rbx
10000c727:	49 89 c9	movq	%rcx, %r9
10000c72a:	44 6b de 31	imull	$49, %esi, %r11d
10000c72e:	41 8d 1c 13	leal	(%r11,%rdx), %ebx
10000c732:	48 89 d9	movq	%rbx, %rcx
10000c735:	48 c1 e9 03	shrq	$3, %rcx
10000c739:	0f b6 34 0f	movzbl	(%rdi,%rcx), %esi
10000c73d:	89 d9	movl	%ebx, %ecx
10000c73f:	80 e1 07	andb	$7, %cl
10000c742:	d3 e6	shll	%cl, %esi
10000c744:	40 f6 c6 80	testb	$-128, %sil
10000c748:	74 30	je	0x10000c77a
10000c74a:	31 f6	xorl	%esi, %esi
10000c74c:	83 fe d0	cmpl	$-48, %esi
10000c74f:	74 31	je	0x10000c782
10000c751:	81 c3 61 09 00 00	addl	$2401, %ebx
10000c757:	48 89 d9	movq	%rbx, %rcx
10000c75a:	48 c1 e9 03	shrq	$3, %rcx
10000c75e:	0f b6 04 0f	movzbl	(%rdi,%rcx), %eax
10000c762:	89 d9	movl	%ebx, %ecx
10000c764:	80 e1 07	andb	$7, %cl
10000c767:	d3 e0	shll	%cl, %eax
10000c769:	ff ce	decl	%esi
10000c76b:	a8 80	testb	$-128, %al
10000c76d:	75 dd	jne	0x10000c74c
10000c76f:	f7 d6	notl	%esi
10000c771:	83 fe 30	cmpl	$48, %esi
10000c774:	41 0f 92 c2	setb	%r10b
10000c778:	eb 03	jmp	0x10000c77d
10000c77a:	41 b2 01	movb	$1, %r10b
10000c77d:	41 89 18	movl	%ebx, (%r8)
10000c780:	eb 09	jmp	0x10000c78b
10000c782:	f7 de	negl	%esi
10000c784:	83 fe 30	cmpl	$48, %esi
10000c787:	41 0f 92 c2	setb	%r10b
10000c78b:	41 01 d3	addl	%edx, %r11d
10000c78e:	b8 30 c2 01 00	movl	$115248, %eax
10000c793:	41 b8 9f f6 ff ff	movl	$4294964895, %r8d
10000c799:	41 8d 14 03	leal	(%r11,%rax), %edx
10000c79d:	48 89 d1	movq	%rdx, %rcx
10000c7a0:	48 c1 e9 03	shrq	$3, %rcx
10000c7a4:	0f b6 1c 0f	movzbl	(%rdi,%rcx), %ebx
10000c7a8:	89 d1	movl	%edx, %ecx
10000c7aa:	80 e1 07	andb	$7, %cl
10000c7ad:	be 80 00 00 00	movl	$128, %esi
10000c7b2:	d3 ee	shrl	%cl, %esi
10000c7b4:	21 de	andl	%ebx, %esi
10000c7b6:	74 0a	je	0x10000c7c2
10000c7b8:	44 01 c0	addl	%r8d, %eax
10000c7bb:	44 39 c0	cmpl	%r8d, %eax
10000c7be:	75 d9	jne	0x10000c799
10000c7c0:	eb 03	jmp	0x10000c7c5
10000c7c2:	41 89 11	movl	%edx, (%r9)
10000c7c5:	85 f6	testl	%esi, %esi
10000c7c7:	0f 94 c0	sete	%al
10000c7ca:	41 20 c2	andb	%al, %r10b
10000c7cd:	41 0f b6 c2	movzbl	%r10b, %eax
10000c7d1:	5b	popq	%rbx
10000c7d2:	5d	popq	%rbp
10000c7d3:	c3	retq
10000c7d4:	55	pushq	%rbp
10000c7d5:	48 89 e5	movq	%rsp, %rbp
10000c7d8:	41 57	pushq	%r15
10000c7da:	41 56	pushq	%r14
10000c7dc:	53	pushq	%rbx
10000c7dd:	48 81 ec a8 00 00 00	subq	$168, %rsp
10000c7e4:	48 89 fb	movq	%rdi, %rbx
10000c7e7:	48 85 ff	testq	%rdi, %rdi
10000c7ea:	74 49	je	0x10000c835
10000c7ec:	4c 8b 35 dd 45 04 00	movq	280029(%rip), %r14 ## Objc selector ref: bounds
10000c7f3:	4c 8d bd 60 ff ff ff	leaq	-160(%rbp), %r15
10000c7fa:	4c 89 ff	movq	%r15, %rdi
10000c7fd:	48 89 de	movq	%rbx, %rsi
10000c800:	4c 89 f2	movq	%r14, %rdx
10000c803:	e8 da 2c 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000c808:	f2 41 0f 5a 47 10	cvtsd2ss	16(%r15), %xmm0
10000c80e:	f3 0f 11 45 e4	movss	%xmm0, -28(%rbp)
10000c813:	4c 8d 7d 80	leaq	-128(%rbp), %r15
10000c817:	4c 89 ff	movq	%r15, %rdi
10000c81a:	48 89 de	movq	%rbx, %rsi
10000c81d:	4c 89 f2	movq	%r14, %rdx
10000c820:	e8 bd 2c 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000c825:	0f 57 c0	xorps	%xmm0, %xmm0
10000c828:	f2 41 0f 5a 47 18	cvtsd2ss	24(%r15), %xmm0
10000c82e:	f3 0f 11 45 e0	movss	%xmm0, -32(%rbp)
10000c833:	eb 29	jmp	0x10000c85e
10000c835:	0f 57 c0	xorps	%xmm0, %xmm0
10000c838:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10000c83f:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
10000c846:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000c84a:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10000c84e:	0f 57 c0	xorps	%xmm0, %xmm0
10000c851:	f3 0f 11 45 e0	movss	%xmm0, -32(%rbp)
10000c856:	0f 57 c0	xorps	%xmm0, %xmm0
10000c859:	f3 0f 11 45 e4	movss	%xmm0, -28(%rbp)
10000c85e:	48 8b 35 43 50 04 00	movq	282691(%rip), %rsi ## Objc selector ref: openGLContext
10000c865:	4c 8b 35 b4 03 03 00	movq	197556(%rip), %r14 ## Objc message: -[%rdi openGLContext]
10000c86c:	48 89 df	movq	%rbx, %rdi
10000c86f:	41 ff d6	callq	*%r14
10000c872:	48 8b 35 87 4e 04 00	movq	282247(%rip), %rsi ## Objc selector ref: makeCurrentContext
10000c879:	48 89 c7	movq	%rax, %rdi
10000c87c:	41 ff d6	callq	*%r14
10000c87f:	48 85 db	testq	%rbx, %rbx
10000c882:	74 4c	je	0x10000c8d0
10000c884:	48 8b 15 45 45 04 00	movq	279877(%rip), %rdx ## Objc selector ref: bounds
10000c88b:	4c 8d 75 c0	leaq	-64(%rbp), %r14
10000c88f:	4c 89 f7	movq	%r14, %rdi
10000c892:	48 89 de	movq	%rbx, %rsi
10000c895:	e8 48 2c 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000c89a:	48 8b 15 0f 47 04 00	movq	280335(%rip), %rdx ## Objc selector ref: convertRectToBacking:
10000c8a1:	41 0f 10 06	movups	(%r14), %xmm0
10000c8a5:	41 0f 10 4e 10	movups	16(%r14), %xmm1
10000c8aa:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000c8af:	0f 11 04 24	movups	%xmm0, (%rsp)
10000c8b3:	4c 8d 75 a0	leaq	-96(%rbp), %r14
10000c8b7:	4c 89 f7	movq	%r14, %rdi
10000c8ba:	48 89 de	movq	%rbx, %rsi
10000c8bd:	e8 20 2c 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000c8c2:	f2 45 0f 2c 7e 10	cvttsd2si	16(%r14), %r15d
10000c8c8:	f2 45 0f 2c 76 18	cvttsd2si	24(%r14), %r14d
10000c8ce:	eb 19	jmp	0x10000c8e9
10000c8d0:	0f 57 c0	xorps	%xmm0, %xmm0
10000c8d3:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000c8d7:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10000c8db:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10000c8df:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10000c8e3:	45 31 f6	xorl	%r14d, %r14d
10000c8e6:	45 31 ff	xorl	%r15d, %r15d
10000c8e9:	f3 0f 10 45 e4	movss	-28(%rbp), %xmm0
10000c8ee:	f3 0f 5e 45 e0	divss	-32(%rbp), %xmm0
10000c8f3:	f3 0f 11 45 e4	movss	%xmm0, -28(%rbp)
10000c8f8:	bf 01 17 00 00	movl	$5889, %edi
10000c8fd:	e8 5c 2b 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000c902:	e8 51 2b 02 00	callq	0x10002f458 ## symbol stub for: _glLoadIdentity
10000c907:	0f 57 c9	xorps	%xmm1, %xmm1
10000c90a:	f3 0f 5a 4d e4	cvtss2sd	-28(%rbp), %xmm1
10000c90f:	f2 0f 10 05 99 bb 02 00	movsd	179097(%rip), %xmm0
10000c917:	f2 0f 10 15 01 b7 02 00	movsd	177921(%rip), %xmm2
10000c91f:	f2 0f 10 1d 81 ba 02 00	movsd	178817(%rip), %xmm3
10000c927:	e8 80 2b 02 00	callq	0x10002f4ac ## symbol stub for: _gluPerspective
10000c92c:	31 ff	xorl	%edi, %edi
10000c92e:	31 f6	xorl	%esi, %esi
10000c930:	44 89 fa	movl	%r15d, %edx
10000c933:	44 89 f1	movl	%r14d, %ecx
10000c936:	e8 6b 2b 02 00	callq	0x10002f4a6 ## symbol stub for: _glViewport
10000c93b:	bf 00 17 00 00	movl	$5888, %edi
10000c940:	e8 19 2b 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000c945:	e8 0e 2b 02 00	callq	0x10002f458 ## symbol stub for: _glLoadIdentity
10000c94a:	48 8b 05 77 62 04 00	movq	287351(%rip), %rax
10000c951:	f3 0f 10 14 03	movss	(%rbx,%rax), %xmm2
10000c956:	0f 57 15 93 bc 02 00	xorps	179347(%rip), %xmm2
10000c95d:	0f 57 c0	xorps	%xmm0, %xmm0
10000c960:	0f 57 c9	xorps	%xmm1, %xmm1
10000c963:	e8 2c 2b 02 00	callq	0x10002f494 ## symbol stub for: _glTranslatef
10000c968:	48 8b 05 61 62 04 00	movq	287329(%rip), %rax
10000c96f:	f3 0f 10 04 03	movss	(%rbx,%rax), %xmm0
10000c974:	0f 57 05 75 bc 02 00	xorps	179317(%rip), %xmm0
10000c97b:	f3 0f 10 0d 11 b6 02 00	movss	177681(%rip), %xmm1
10000c983:	0f 57 d2	xorps	%xmm2, %xmm2
10000c986:	0f 57 db	xorps	%xmm3, %xmm3
10000c989:	e8 f4 2a 02 00	callq	0x10002f482 ## symbol stub for: _glRotatef
10000c98e:	48 8b 05 43 62 04 00	movq	287299(%rip), %rax
10000c995:	f3 0f 10 04 03	movss	(%rbx,%rax), %xmm0
10000c99a:	0f 57 c9	xorps	%xmm1, %xmm1
10000c99d:	0f 57 d2	xorps	%xmm2, %xmm2
10000c9a0:	f3 0f 10 1d ec b5 02 00	movss	177644(%rip), %xmm3
10000c9a8:	e8 d5 2a 02 00	callq	0x10002f482 ## symbol stub for: _glRotatef
10000c9ad:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10000c9b4:	5b	popq	%rbx
10000c9b5:	41 5e	popq	%r14
10000c9b7:	41 5f	popq	%r15
10000c9b9:	5d	popq	%rbp
10000c9ba:	c3	retq
10000c9bb:	55	pushq	%rbp
10000c9bc:	48 89 e5	movq	%rsp, %rbp
10000c9bf:	53	pushq	%rbx
10000c9c0:	48 83 ec 18	subq	$24, %rsp
10000c9c4:	48 89 fb	movq	%rdi, %rbx
10000c9c7:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10000c9cb:	48 89 1f	movq	%rbx, (%rdi)
10000c9ce:	48 8b 05 0b 5e 04 00	movq	286219(%rip), %rax ## Objc class ref: ProfView3D
10000c9d5:	48 89 47 08	movq	%rax, 8(%rdi)
10000c9d9:	48 8b 35 90 54 04 00	movq	283792(%rip), %rsi ## Objc selector ref: setFrameSize:
10000c9e0:	e8 f7 2a 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setFrameSize:]
10000c9e5:	48 8b 35 bc 42 04 00	movq	279228(%rip), %rsi ## Objc selector ref: adjustProjectionMatrix
10000c9ec:	48 89 df	movq	%rbx, %rdi
10000c9ef:	ff 15 2b 02 03 00	callq	*197163(%rip) ## Objc message: -[%rdi adjustProjectionMatrix]
10000c9f5:	48 83 c4 18	addq	$24, %rsp
10000c9f9:	5b	popq	%rbx
10000c9fa:	5d	popq	%rbp
10000c9fb:	c3	retq
10000c9fc:	55	pushq	%rbp
10000c9fd:	48 89 e5	movq	%rsp, %rbp
10000ca00:	41 57	pushq	%r15
10000ca02:	41 56	pushq	%r14
10000ca04:	41 55	pushq	%r13
10000ca06:	41 54	pushq	%r12
10000ca08:	53	pushq	%rbx
10000ca09:	48 83 ec 58	subq	$88, %rsp
10000ca0d:	48 89 fb	movq	%rdi, %rbx
10000ca10:	bf 71 0b 00 00	movl	$2929, %edi
10000ca15:	e8 32 2a 02 00	callq	0x10002f44c ## symbol stub for: _glIsEnabled
10000ca1a:	41 89 c7	movl	%eax, %r15d
10000ca1d:	bf 41 0b 00 00	movl	$2881, %edi
10000ca22:	e8 25 2a 02 00	callq	0x10002f44c ## symbol stub for: _glIsEnabled
10000ca27:	88 45 d7	movb	%al, -41(%rbp)
10000ca2a:	bf e2 0b 00 00	movl	$3042, %edi
10000ca2f:	e8 18 2a 02 00	callq	0x10002f44c ## symbol stub for: _glIsEnabled
10000ca34:	41 89 c4	movl	%eax, %r12d
10000ca37:	48 85 db	testq	%rbx, %rbx
10000ca3a:	74 46	je	0x10000ca82
10000ca3c:	4c 8b 2d 8d 43 04 00	movq	279437(%rip), %r13 ## Objc selector ref: bounds
10000ca43:	4c 8d 75 80	leaq	-128(%rbp), %r14
10000ca47:	4c 89 f7	movq	%r14, %rdi
10000ca4a:	48 89 de	movq	%rbx, %rsi
10000ca4d:	4c 89 ea	movq	%r13, %rdx
10000ca50:	e8 8d 2a 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000ca55:	f2 41 0f 5a 46 18	cvtsd2ss	24(%r14), %xmm0
10000ca5b:	f3 0f 11 45 cc	movss	%xmm0, -52(%rbp)
10000ca60:	4c 8d 75 a0	leaq	-96(%rbp), %r14
10000ca64:	4c 89 f7	movq	%r14, %rdi
10000ca67:	48 89 de	movq	%rbx, %rsi
10000ca6a:	4c 89 ea	movq	%r13, %rdx
10000ca6d:	e8 70 2a 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000ca72:	0f 57 c0	xorps	%xmm0, %xmm0
10000ca75:	f2 41 0f 5a 46 10	cvtsd2ss	16(%r14), %xmm0
10000ca7b:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
10000ca80:	eb 23	jmp	0x10000caa5
10000ca82:	0f 57 c0	xorps	%xmm0, %xmm0
10000ca85:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10000ca89:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000ca8d:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10000ca91:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10000ca95:	0f 57 c0	xorps	%xmm0, %xmm0
10000ca98:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
10000ca9d:	0f 57 c0	xorps	%xmm0, %xmm0
10000caa0:	f3 0f 11 45 cc	movss	%xmm0, -52(%rbp)
10000caa5:	bf 71 0b 00 00	movl	$2929, %edi
10000caaa:	e8 6d 29 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000caaf:	bf 41 0b 00 00	movl	$2881, %edi
10000cab4:	e8 75 29 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000cab9:	bf e2 0b 00 00	movl	$3042, %edi
10000cabe:	e8 6b 29 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000cac3:	48 8d 5d c8	leaq	-56(%rbp), %rbx
10000cac7:	bf a0 0b 00 00	movl	$2976, %edi
10000cacc:	48 89 de	movq	%rbx, %rsi
10000cacf:	e8 72 29 02 00	callq	0x10002f446 ## symbol stub for: _glGetIntegerv
10000cad4:	bf 01 17 00 00	movl	$5889, %edi
10000cad9:	e8 80 29 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000cade:	e8 99 29 02 00	callq	0x10002f47c ## symbol stub for: _glPushMatrix
10000cae3:	e8 70 29 02 00	callq	0x10002f458 ## symbol stub for: _glLoadIdentity
10000cae8:	bf 00 17 00 00	movl	$5888, %edi
10000caed:	e8 6c 29 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000caf2:	e8 85 29 02 00	callq	0x10002f47c ## symbol stub for: _glPushMatrix
10000caf7:	e8 5c 29 02 00	callq	0x10002f458 ## symbol stub for: _glLoadIdentity
10000cafc:	f3 0f 10 05 84 bb 02 00	movss	179076(%rip), %xmm0
10000cb04:	f3 0f 5e 45 d0	divss	-48(%rbp), %xmm0
10000cb09:	f3 0f 10 0d 7b bb 02 00	movss	179067(%rip), %xmm1
10000cb11:	f3 0f 5e 4d cc	divss	-52(%rbp), %xmm1
10000cb16:	f3 0f 10 15 76 b4 02 00	movss	177270(%rip), %xmm2
10000cb1e:	e8 65 29 02 00	callq	0x10002f488 ## symbol stub for: _glScalef
10000cb23:	f3 0f 10 15 65 bb 02 00	movss	179045(%rip), %xmm2
10000cb2b:	f3 0f 10 45 d0	movss	-48(%rbp), %xmm0
10000cb30:	f3 0f 59 c2	mulss	%xmm2, %xmm0
10000cb34:	f3 0f 10 4d cc	movss	-52(%rbp), %xmm1
10000cb39:	f3 0f 59 ca	mulss	%xmm2, %xmm1
10000cb3d:	0f 57 d2	xorps	%xmm2, %xmm2
10000cb40:	e8 4f 29 02 00	callq	0x10002f494 ## symbol stub for: _glTranslatef
10000cb45:	f3 0f 10 1d 37 bb 02 00	movss	178999(%rip), %xmm3
10000cb4d:	0f 57 c0	xorps	%xmm0, %xmm0
10000cb50:	0f 57 c9	xorps	%xmm1, %xmm1
10000cb53:	0f 57 d2	xorps	%xmm2, %xmm2
10000cb56:	e8 a9 28 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000cb5b:	bf 04 04 00 00	movl	$1028, %edi
10000cb60:	be 02 1b 00 00	movl	$6914, %esi
10000cb65:	e8 00 29 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cb6a:	bf 05 04 00 00	movl	$1029, %edi
10000cb6f:	be 02 1b 00 00	movl	$6914, %esi
10000cb74:	e8 f1 28 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cb79:	bf 04 00 00 00	movl	$4, %edi
10000cb7e:	e8 5d 28 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000cb83:	f3 0f 10 05 05 b4 02 00	movss	177157(%rip), %xmm0
10000cb8b:	f3 0f 10 0d ed ba 02 00	movss	178925(%rip), %xmm1
10000cb93:	0f 57 d2	xorps	%xmm2, %xmm2
10000cb96:	e8 ff 28 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000cb9b:	f3 0f 10 05 f1 ba 02 00	movss	178929(%rip), %xmm0
10000cba3:	f3 0f 10 0d ed ba 02 00	movss	178925(%rip), %xmm1
10000cbab:	0f 57 d2	xorps	%xmm2, %xmm2
10000cbae:	e8 e7 28 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000cbb3:	f3 0f 10 05 e1 ba 02 00	movss	178913(%rip), %xmm0
10000cbbb:	0f 57 d2	xorps	%xmm2, %xmm2
10000cbbe:	f3 0f 10 0d ba ba 02 00	movss	178874(%rip), %xmm1
10000cbc6:	e8 cf 28 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000cbcb:	e8 6a 28 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000cbd0:	e8 a1 28 02 00	callq	0x10002f476 ## symbol stub for: _glPopMatrix
10000cbd5:	bf 01 17 00 00	movl	$5889, %edi
10000cbda:	e8 7f 28 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000cbdf:	e8 92 28 02 00	callq	0x10002f476 ## symbol stub for: _glPopMatrix
10000cbe4:	8b 3b	movl	(%rbx), %edi
10000cbe6:	e8 73 28 02 00	callq	0x10002f45e ## symbol stub for: _glMatrixMode
10000cbeb:	bf 41 0b 00 00	movl	$2881, %edi
10000cbf0:	e8 27 28 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cbf5:	45 84 ff	testb	%r15b, %r15b
10000cbf8:	74 0a	je	0x10000cc04
10000cbfa:	bf 71 0b 00 00	movl	$2929, %edi
10000cbff:	e8 2a 28 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000cc04:	45 84 e4	testb	%r12b, %r12b
10000cc07:	75 0a	jne	0x10000cc13
10000cc09:	bf e2 0b 00 00	movl	$3042, %edi
10000cc0e:	e8 09 28 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cc13:	80 7d d7 00	cmpb	$0, -41(%rbp)
10000cc17:	75 0a	jne	0x10000cc23
10000cc19:	bf 41 0b 00 00	movl	$2881, %edi
10000cc1e:	e8 f9 27 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cc23:	48 83 c4 58	addq	$88, %rsp
10000cc27:	5b	popq	%rbx
10000cc28:	41 5c	popq	%r12
10000cc2a:	41 5d	popq	%r13
10000cc2c:	41 5e	popq	%r14
10000cc2e:	41 5f	popq	%r15
10000cc30:	5d	popq	%rbp
10000cc31:	c3	retq
10000cc32:	55	pushq	%rbp
10000cc33:	48 89 e5	movq	%rsp, %rbp
10000cc36:	41 57	pushq	%r15
10000cc38:	41 56	pushq	%r14
10000cc3a:	41 55	pushq	%r13
10000cc3c:	41 54	pushq	%r12
10000cc3e:	53	pushq	%rbx
10000cc3f:	48 81 ec c8 01 00 00	subq	$456, %rsp
10000cc46:	49 89 fe	movq	%rdi, %r14
10000cc49:	48 8b 35 58 40 04 00	movq	278616(%rip), %rsi ## Objc selector ref: adjustProjectionMatrix
10000cc50:	ff 15 ca ff 02 00	callq	*196554(%rip) ## Objc message: -[%rdi adjustProjectionMatrix]
10000cc56:	bf 00 41 00 00	movl	$16640, %edi
10000cc5b:	e8 8c 27 02 00	callq	0x10002f3ec ## symbol stub for: _glClear
10000cc60:	e8 17 28 02 00	callq	0x10002f47c ## symbol stub for: _glPushMatrix
10000cc65:	48 8b 05 94 5f 04 00	movq	286612(%rip), %rax
10000cc6c:	4d 8d 3c 06	leaq	(%r14,%rax), %r15
10000cc70:	41 83 3c 06 00	cmpl	$0, (%r14,%rax)
10000cc75:	0f 84 57 01 00 00	je	0x10000cdd2
10000cc7b:	48 8b 1d be 5f 04 00	movq	286654(%rip), %rbx
10000cc82:	49 83 3c 1e 00	cmpq	$0, (%r14,%rbx)
10000cc87:	0f 84 45 01 00 00	je	0x10000cdd2
10000cc8d:	4c 8b 25 84 5f 04 00	movq	286596(%rip), %r12
10000cc94:	4b 83 3c 26 00	cmpq	$0, (%r14,%r12)
10000cc99:	0f 84 33 01 00 00	je	0x10000cdd2
10000cc9f:	bf 37 80 00 00	movl	$32823, %edi
10000cca4:	e8 85 27 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000cca9:	f3 0f 10 05 e3 b2 02 00	movss	176867(%rip), %xmm0
10000ccb1:	0f 28 c8	movaps	%xmm0, %xmm1
10000ccb4:	e8 b7 27 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000ccb9:	bf 76 80 00 00	movl	$32886, %edi
10000ccbe:	e8 71 27 02 00	callq	0x10002f434 ## symbol stub for: _glEnableClientState
10000ccc3:	4b 8b 0c 26	movq	(%r14,%r12), %rcx
10000ccc7:	bf 03 00 00 00	movl	$3, %edi
10000cccc:	be 01 14 00 00	movl	$5121, %esi
10000ccd1:	31 d2	xorl	%edx, %edx
10000ccd3:	e8 32 27 02 00	callq	0x10002f40a ## symbol stub for: _glColorPointer
10000ccd8:	bf 74 80 00 00	movl	$32884, %edi
10000ccdd:	e8 52 27 02 00	callq	0x10002f434 ## symbol stub for: _glEnableClientState
10000cce2:	49 8b 0c 1e	movq	(%r14,%rbx), %rcx
10000cce6:	bf 03 00 00 00	movl	$3, %edi
10000cceb:	be 06 14 00 00	movl	$5126, %esi
10000ccf0:	31 d2	xorl	%edx, %edx
10000ccf2:	e8 a9 27 02 00	callq	0x10002f4a0 ## symbol stub for: _glVertexPointer
10000ccf7:	bf 04 04 00 00	movl	$1028, %edi
10000ccfc:	be 02 1b 00 00	movl	$6914, %esi
10000cd01:	e8 64 27 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cd06:	bf 05 04 00 00	movl	$1029, %edi
10000cd0b:	be 02 1b 00 00	movl	$6914, %esi
10000cd10:	e8 55 27 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cd15:	41 8b 17	movl	(%r15), %edx
10000cd18:	bb 07 00 00 00	movl	$7, %ebx
10000cd1d:	bf 07 00 00 00	movl	$7, %edi
10000cd22:	31 f6	xorl	%esi, %esi
10000cd24:	e8 ff 26 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000cd29:	bf 76 80 00 00	movl	$32886, %edi
10000cd2e:	e8 ef 26 02 00	callq	0x10002f422 ## symbol stub for: _glDisableClientState
10000cd33:	bf 37 80 00 00	movl	$32823, %edi
10000cd38:	e8 df 26 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cd3d:	0f 57 c0	xorps	%xmm0, %xmm0
10000cd40:	0f 57 c9	xorps	%xmm1, %xmm1
10000cd43:	e8 28 27 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000cd48:	f3 0f 10 05 50 b9 02 00	movss	178512(%rip), %xmm0
10000cd50:	66 0f 28 c8	movapd	%xmm0, %xmm1
10000cd54:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000cd58:	66 0f 28 d8	movapd	%xmm0, %xmm3
10000cd5c:	e8 a3 26 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000cd61:	4c 8b 25 a0 5e 04 00	movq	286368(%rip), %r12
10000cd68:	43 83 3c 26 00	cmpl	$0, (%r14,%r12)
10000cd6d:	74 2b	je	0x10000cd9a
10000cd6f:	48 8b 05 d2 5e 04 00	movq	286418(%rip), %rax
10000cd76:	49 8b 0c 06	movq	(%r14,%rax), %rcx
10000cd7a:	48 85 c9	testq	%rcx, %rcx
10000cd7d:	74 1b	je	0x10000cd9a
10000cd7f:	4d 01 f4	addq	%r14, %r12
10000cd82:	bf 03 00 00 00	movl	$3, %edi
10000cd87:	be 06 14 00 00	movl	$5126, %esi
10000cd8c:	31 d2	xorl	%edx, %edx
10000cd8e:	e8 0d 27 02 00	callq	0x10002f4a0 ## symbol stub for: _glVertexPointer
10000cd93:	bb 01 00 00 00	movl	$1, %ebx
10000cd98:	eb 21	jmp	0x10000cdbb
10000cd9a:	bf 04 04 00 00	movl	$1028, %edi
10000cd9f:	be 01 1b 00 00	movl	$6913, %esi
10000cda4:	e8 c1 26 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cda9:	bf 05 04 00 00	movl	$1029, %edi
10000cdae:	be 01 1b 00 00	movl	$6913, %esi
10000cdb3:	e8 b2 26 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cdb8:	4d 89 fc	movq	%r15, %r12
10000cdbb:	41 8b 14 24	movl	(%r12), %edx
10000cdbf:	89 df	movl	%ebx, %edi
10000cdc1:	31 f6	xorl	%esi, %esi
10000cdc3:	e8 60 26 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000cdc8:	bf 74 80 00 00	movl	$32884, %edi
10000cdcd:	e8 50 26 02 00	callq	0x10002f422 ## symbol stub for: _glDisableClientState
10000cdd2:	48 8b 1d 1f 5e 04 00	movq	286239(%rip), %rbx
10000cdd9:	41 83 3c 1e 00	cmpl	$0, (%r14,%rbx)
10000cdde:	0f 84 85 00 00 00	je	0x10000ce69
10000cde4:	4c 8b 25 4d 5e 04 00	movq	286285(%rip), %r12
10000cdeb:	4b 83 3c 26 00	cmpq	$0, (%r14,%r12)
10000cdf0:	74 77	je	0x10000ce69
10000cdf2:	4c 8b 2d 17 5e 04 00	movq	286231(%rip), %r13
10000cdf9:	4b 83 3c 2e 00	cmpq	$0, (%r14,%r13)
10000cdfe:	74 69	je	0x10000ce69
10000ce00:	bf 10 0b 00 00	movl	$2832, %edi
10000ce05:	e8 24 26 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000ce0a:	bf 76 80 00 00	movl	$32886, %edi
10000ce0f:	e8 20 26 02 00	callq	0x10002f434 ## symbol stub for: _glEnableClientState
10000ce14:	4b 8b 0c 2e	movq	(%r14,%r13), %rcx
10000ce18:	bf 03 00 00 00	movl	$3, %edi
10000ce1d:	be 01 14 00 00	movl	$5121, %esi
10000ce22:	31 d2	xorl	%edx, %edx
10000ce24:	e8 e1 25 02 00	callq	0x10002f40a ## symbol stub for: _glColorPointer
10000ce29:	bf 74 80 00 00	movl	$32884, %edi
10000ce2e:	e8 01 26 02 00	callq	0x10002f434 ## symbol stub for: _glEnableClientState
10000ce33:	4b 8b 0c 26	movq	(%r14,%r12), %rcx
10000ce37:	bf 03 00 00 00	movl	$3, %edi
10000ce3c:	be 06 14 00 00	movl	$5126, %esi
10000ce41:	31 d2	xorl	%edx, %edx
10000ce43:	e8 58 26 02 00	callq	0x10002f4a0 ## symbol stub for: _glVertexPointer
10000ce48:	41 8b 14 1e	movl	(%r14,%rbx), %edx
10000ce4c:	31 ff	xorl	%edi, %edi
10000ce4e:	31 f6	xorl	%esi, %esi
10000ce50:	e8 d3 25 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000ce55:	bf 76 80 00 00	movl	$32886, %edi
10000ce5a:	e8 c3 25 02 00	callq	0x10002f422 ## symbol stub for: _glDisableClientState
10000ce5f:	bf 74 80 00 00	movl	$32884, %edi
10000ce64:	e8 b9 25 02 00	callq	0x10002f422 ## symbol stub for: _glDisableClientState
10000ce69:	4c 8b 25 70 5d 04 00	movq	286064(%rip), %r12
10000ce70:	43 83 3c 26 00	cmpl	$0, (%r14,%r12)
10000ce75:	0f 84 e7 01 00 00	je	0x10000d062
10000ce7b:	4c 8b 2d 6e 5d 04 00	movq	286062(%rip), %r13
10000ce82:	4b 83 3c 2e 00	cmpq	$0, (%r14,%r13)
10000ce87:	0f 84 d5 01 00 00	je	0x10000d062
10000ce8d:	bf 74 80 00 00	movl	$32884, %edi
10000ce92:	e8 9d 25 02 00	callq	0x10002f434 ## symbol stub for: _glEnableClientState
10000ce97:	4b 8b 0c 2e	movq	(%r14,%r13), %rcx
10000ce9b:	bf 03 00 00 00	movl	$3, %edi
10000cea0:	be 06 14 00 00	movl	$5126, %esi
10000cea5:	31 d2	xorl	%edx, %edx
10000cea7:	e8 f4 25 02 00	callq	0x10002f4a0 ## symbol stub for: _glVertexPointer
10000ceac:	bf 37 80 00 00	movl	$32823, %edi
10000ceb1:	e8 78 25 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000ceb6:	f3 0f 10 05 d6 b0 02 00	movss	176342(%rip), %xmm0
10000cebe:	0f 28 c8	movaps	%xmm0, %xmm1
10000cec1:	e8 aa 25 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000cec6:	bf 44 0b 00 00	movl	$2884, %edi
10000cecb:	e8 5e 25 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000ced0:	bf 04 04 00 00	movl	$1028, %edi
10000ced5:	e8 36 25 02 00	callq	0x10002f410 ## symbol stub for: _glCullFace
10000ceda:	f3 0f 10 1d c2 b7 02 00	movss	178114(%rip), %xmm3
10000cee2:	f3 0f 10 05 aa b0 02 00	movss	176298(%rip), %xmm0
10000ceea:	0f 28 c8	movaps	%xmm0, %xmm1
10000ceed:	0f 28 d0	movaps	%xmm0, %xmm2
10000cef0:	e8 0f 25 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000cef5:	bf 04 04 00 00	movl	$1028, %edi
10000cefa:	be 02 1b 00 00	movl	$6914, %esi
10000ceff:	e8 66 25 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cf04:	bf 05 04 00 00	movl	$1029, %edi
10000cf09:	be 02 1b 00 00	movl	$6914, %esi
10000cf0e:	e8 57 25 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cf13:	43 8b 14 26	movl	(%r14,%r12), %edx
10000cf17:	bf 07 00 00 00	movl	$7, %edi
10000cf1c:	31 f6	xorl	%esi, %esi
10000cf1e:	e8 05 25 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000cf23:	bf 37 80 00 00	movl	$32823, %edi
10000cf28:	e8 ef 24 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cf2d:	0f 57 c0	xorps	%xmm0, %xmm0
10000cf30:	0f 57 c9	xorps	%xmm1, %xmm1
10000cf33:	e8 38 25 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000cf38:	f3 0f 10 1d 60 b7 02 00	movss	178016(%rip), %xmm3
10000cf40:	f3 0f 10 05 4c b0 02 00	movss	176204(%rip), %xmm0
10000cf48:	0f 28 c8	movaps	%xmm0, %xmm1
10000cf4b:	0f 28 d0	movaps	%xmm0, %xmm2
10000cf4e:	e8 b1 24 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000cf53:	bf 04 04 00 00	movl	$1028, %edi
10000cf58:	be 01 1b 00 00	movl	$6913, %esi
10000cf5d:	e8 08 25 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cf62:	bf 05 04 00 00	movl	$1029, %edi
10000cf67:	be 01 1b 00 00	movl	$6913, %esi
10000cf6c:	e8 f9 24 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cf71:	43 8b 14 26	movl	(%r14,%r12), %edx
10000cf75:	bf 07 00 00 00	movl	$7, %edi
10000cf7a:	31 f6	xorl	%esi, %esi
10000cf7c:	e8 a7 24 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000cf81:	bf 37 80 00 00	movl	$32823, %edi
10000cf86:	e8 a3 24 02 00	callq	0x10002f42e ## symbol stub for: _glEnable
10000cf8b:	f3 0f 10 05 01 b0 02 00	movss	176129(%rip), %xmm0
10000cf93:	0f 28 c8	movaps	%xmm0, %xmm1
10000cf96:	e8 d5 24 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000cf9b:	bf 05 04 00 00	movl	$1029, %edi
10000cfa0:	e8 6b 24 02 00	callq	0x10002f410 ## symbol stub for: _glCullFace
10000cfa5:	f3 0f 10 05 e7 af 02 00	movss	176103(%rip), %xmm0
10000cfad:	0f 28 c8	movaps	%xmm0, %xmm1
10000cfb0:	0f 28 d0	movaps	%xmm0, %xmm2
10000cfb3:	f3 0f 10 1d e9 b6 02 00	movss	177897(%rip), %xmm3
10000cfbb:	e8 44 24 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000cfc0:	bf 04 04 00 00	movl	$1028, %edi
10000cfc5:	be 02 1b 00 00	movl	$6914, %esi
10000cfca:	e8 9b 24 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cfcf:	bf 05 04 00 00	movl	$1029, %edi
10000cfd4:	be 02 1b 00 00	movl	$6914, %esi
10000cfd9:	e8 8c 24 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000cfde:	43 8b 14 26	movl	(%r14,%r12), %edx
10000cfe2:	bf 07 00 00 00	movl	$7, %edi
10000cfe7:	31 f6	xorl	%esi, %esi
10000cfe9:	e8 3a 24 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000cfee:	bf 37 80 00 00	movl	$32823, %edi
10000cff3:	e8 24 24 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000cff8:	0f 57 c0	xorps	%xmm0, %xmm0
10000cffb:	0f 57 c9	xorps	%xmm1, %xmm1
10000cffe:	e8 6d 24 02 00	callq	0x10002f470 ## symbol stub for: _glPolygonOffset
10000d003:	f3 0f 10 05 89 af 02 00	movss	176009(%rip), %xmm0
10000d00b:	66 0f 28 c8	movapd	%xmm0, %xmm1
10000d00f:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000d013:	f3 0f 10 1d 85 b6 02 00	movss	177797(%rip), %xmm3
10000d01b:	e8 e4 23 02 00	callq	0x10002f404 ## symbol stub for: _glColor4f
10000d020:	bf 04 04 00 00	movl	$1028, %edi
10000d025:	be 01 1b 00 00	movl	$6913, %esi
10000d02a:	e8 3b 24 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000d02f:	bf 05 04 00 00	movl	$1029, %edi
10000d034:	be 01 1b 00 00	movl	$6913, %esi
10000d039:	e8 2c 24 02 00	callq	0x10002f46a ## symbol stub for: _glPolygonMode
10000d03e:	43 8b 14 26	movl	(%r14,%r12), %edx
10000d042:	bf 07 00 00 00	movl	$7, %edi
10000d047:	31 f6	xorl	%esi, %esi
10000d049:	e8 da 23 02 00	callq	0x10002f428 ## symbol stub for: _glDrawArrays
10000d04e:	bf 74 80 00 00	movl	$32884, %edi
10000d053:	e8 ca 23 02 00	callq	0x10002f422 ## symbol stub for: _glDisableClientState
10000d058:	bf 44 0b 00 00	movl	$2884, %edi
10000d05d:	e8 ba 23 02 00	callq	0x10002f41c ## symbol stub for: _glDisable
10000d062:	41 83 3c 1e 00	cmpl	$0, (%r14,%rbx)
10000d067:	75 06	jne	0x10000d06f
10000d069:	41 83 3f 00	cmpl	$0, (%r15)
10000d06d:	74 1f	je	0x10000d08e
10000d06f:	48 8b 35 c2 40 04 00	movq	278722(%rip), %rsi ## Objc selector ref: drawAxis
10000d076:	48 8b 1d a3 fb 02 00	movq	195491(%rip), %rbx ## Objc message: -[%rdi drawAxis]
10000d07d:	4c 89 f7	movq	%r14, %rdi
10000d080:	ff d3	callq	*%rbx
10000d082:	48 8b 35 d7 40 04 00	movq	278743(%rip), %rsi ## Objc selector ref: drawControl
10000d089:	4c 89 f7	movq	%r14, %rdi
10000d08c:	ff d3	callq	*%rbx
10000d08e:	e8 e3 23 02 00	callq	0x10002f476 ## symbol stub for: _glPopMatrix
10000d093:	e8 a8 23 02 00	callq	0x10002f440 ## symbol stub for: _glFlush
10000d098:	48 8b 3d 99 55 04 00	movq	284057(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10000d09f:	48 8b 35 5a 3f 04 00	movq	278362(%rip), %rsi ## Objc selector ref: currentContext
10000d0a6:	4c 8b 2d 73 fb 02 00	movq	195443(%rip), %r13 ## Objc message: +[NSGraphicsContext currentContext]
10000d0ad:	41 ff d5	callq	*%r13
10000d0b0:	48 8b 35 a9 3a 04 00	movq	277161(%rip), %rsi ## Objc selector ref: CGContext
10000d0b7:	48 89 c7	movq	%rax, %rdi
10000d0ba:	41 ff d5	callq	*%r13
10000d0bd:	48 85 c0	testq	%rax, %rax
10000d0c0:	0f 84 46 03 00 00	je	0x10000d40c
10000d0c6:	48 89 c3	movq	%rax, %rbx
10000d0c9:	48 89 c7	movq	%rax, %rdi
10000d0cc:	e8 df 1f 02 00	callq	0x10002f0b0 ## symbol stub for: _CGContextGetType
10000d0d1:	83 f8 04	cmpl	$4, %eax
10000d0d4:	74 09	je	0x10000d0df
10000d0d6:	83 f8 01	cmpl	$1, %eax
10000d0d9:	0f 85 2d 03 00 00	jne	0x10000d40c
10000d0df:	48 8b 15 ea 3c 04 00	movq	277738(%rip), %rdx ## Objc selector ref: bounds
10000d0e6:	48 8d 7d b0	leaq	-80(%rbp), %rdi
10000d0ea:	4c 89 f6	movq	%r14, %rsi
10000d0ed:	e8 f0 23 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d0f2:	4c 8b 3d 17 54 04 00	movq	283671(%rip), %r15 ## Objc selector ref: window
10000d0f9:	4c 89 f7	movq	%r14, %rdi
10000d0fc:	4c 89 fe	movq	%r15, %rsi
10000d0ff:	41 ff d5	callq	*%r13
10000d102:	48 8b 35 3f 3e 04 00	movq	278079(%rip), %rsi ## Objc selector ref: contentView
10000d109:	48 89 c7	movq	%rax, %rdi
10000d10c:	41 ff d5	callq	*%r13
10000d10f:	48 85 c0	testq	%rax, %rax
10000d112:	74 2d	je	0x10000d141
10000d114:	48 8b 15 8d 3e 04 00	movq	278157(%rip), %rdx ## Objc selector ref: convertRect:fromView:
10000d11b:	66 0f 10 45 b0	movupd	-80(%rbp), %xmm0
10000d120:	66 0f 10 4d c0	movupd	-64(%rbp), %xmm1
10000d125:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10000d12b:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000d130:	48 8d 7d 80	leaq	-128(%rbp), %rdi
10000d134:	48 89 c6	movq	%rax, %rsi
10000d137:	4c 89 f1	movq	%r14, %rcx
10000d13a:	e8 a3 23 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d13f:	eb 0e	jmp	0x10000d14f
10000d141:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000d145:	66 0f 29 45 90	movapd	%xmm0, -112(%rbp)
10000d14a:	66 0f 29 45 80	movapd	%xmm0, -128(%rbp)
10000d14f:	0f 28 45 80	movaps	-128(%rbp), %xmm0
10000d153:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10000d157:	0f 29 4d c0	movaps	%xmm1, -64(%rbp)
10000d15b:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10000d15f:	4c 89 f7	movq	%r14, %rdi
10000d162:	4c 89 fe	movq	%r15, %rsi
10000d165:	41 ff d5	callq	*%r13
10000d168:	48 8b 35 01 3e 04 00	movq	278017(%rip), %rsi ## Objc selector ref: convertBaseToScreen:
10000d16f:	f2 0f 10 45 b0	movsd	-80(%rbp), %xmm0
10000d174:	f2 0f 10 4d b8	movsd	-72(%rbp), %xmm1
10000d179:	48 89 c7	movq	%rax, %rdi
10000d17c:	41 ff d5	callq	*%r13
10000d17f:	f2 0f 11 45 b0	movsd	%xmm0, -80(%rbp)
10000d184:	f2 0f 11 4d b8	movsd	%xmm1, -72(%rbp)
10000d189:	4c 89 f7	movq	%r14, %rdi
10000d18c:	4c 89 fe	movq	%r15, %rsi
10000d18f:	41 ff d5	callq	*%r13
10000d192:	48 8b 35 3f 4a 04 00	movq	281151(%rip), %rsi ## Objc selector ref: screen
10000d199:	48 89 c7	movq	%rax, %rdi
10000d19c:	41 ff d5	callq	*%r13
10000d19f:	48 85 c0	testq	%rax, %rax
10000d1a2:	74 22	je	0x10000d1c6
10000d1a4:	48 8b 15 f5 40 04 00	movq	278773(%rip), %rdx ## Objc selector ref: frame
10000d1ab:	4c 8d a5 10 ff ff ff	leaq	-240(%rbp), %r12
10000d1b2:	4c 89 e7	movq	%r12, %rdi
10000d1b5:	48 89 c6	movq	%rax, %rsi
10000d1b8:	e8 25 23 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d1bd:	f2 41 0f 10 44 24 18	movsd	24(%r12), %xmm0
10000d1c4:	eb 18	jmp	0x10000d1de
10000d1c6:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000d1ca:	66 0f 29 85 20 ff ff ff	movapd	%xmm0, -224(%rbp)
10000d1d2:	66 0f 29 85 10 ff ff ff	movapd	%xmm0, -240(%rbp)
10000d1da:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10000d1de:	f2 0f 5c 45 b8	subsd	-72(%rbp), %xmm0
10000d1e3:	f2 0f 5c 45 c8	subsd	-56(%rbp), %xmm0
10000d1e8:	f2 0f 11 45 b8	movsd	%xmm0, -72(%rbp)
10000d1ed:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10000d1f1:	0f 29 85 40 ff ff ff	movaps	%xmm0, -192(%rbp)
10000d1f8:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000d1fc:	0f 29 85 30 ff ff ff	movaps	%xmm0, -208(%rbp)
10000d203:	4c 89 f7	movq	%r14, %rdi
10000d206:	4c 89 fe	movq	%r15, %rsi
10000d209:	41 ff d5	callq	*%r13
10000d20c:	48 8b 35 1d 53 04 00	movq	283421(%rip), %rsi ## Objc selector ref: windowNumber
10000d213:	48 89 c7	movq	%rax, %rdi
10000d216:	41 ff d5	callq	*%r13
10000d219:	66 0f 28 85 30 ff ff ff	movapd	-208(%rbp), %xmm0
10000d221:	66 0f 28 8d 40 ff ff ff	movapd	-192(%rbp), %xmm1
10000d229:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10000d22f:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000d234:	bf 08 00 00 00	movl	$8, %edi
10000d239:	89 c6	movl	%eax, %esi
10000d23b:	ba 01 00 00 00	movl	$1, %edx
10000d240:	e8 09 20 02 00	callq	0x10002f24e ## symbol stub for: _CGWindowListCreateImage
10000d245:	48 85 c0	testq	%rax, %rax
10000d248:	0f 84 be 01 00 00	je	0x10000d40c
10000d24e:	49 89 c7	movq	%rax, %r15
10000d251:	48 89 df	movq	%rbx, %rdi
10000d254:	e8 69 1e 02 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10000d259:	48 8b 15 40 40 04 00	movq	278592(%rip), %rdx ## Objc selector ref: frame
10000d260:	4c 8d a5 f0 fe ff ff	leaq	-272(%rbp), %r12
10000d267:	4c 89 e7	movq	%r12, %rdi
10000d26a:	4c 89 f6	movq	%r14, %rsi
10000d26d:	e8 70 22 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d272:	41 0f 10 04 24	movups	(%r12), %xmm0
10000d277:	41 0f 10 4c 24 10	movups	16(%r12), %xmm1
10000d27d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d282:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d286:	49 89 de	movq	%rbx, %r14
10000d289:	48 8d 9d d0 fe ff ff	leaq	-304(%rbp), %rbx
10000d290:	48 89 df	movq	%rbx, %rdi
10000d293:	e8 5e 20 02 00	callq	0x10002f2f6 ## symbol stub for: _NSIntegralRect
10000d298:	0f 57 c0	xorps	%xmm0, %xmm0
10000d29b:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
10000d2a2:	4c 89 ff	movq	%r15, %rdi
10000d2a5:	e8 d2 1e 02 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
10000d2aa:	66 48 0f 6e c8	movq	%rax, %xmm1
10000d2af:	66 0f 62 0d 59 b3 02 00	punpckldq	176985(%rip), %xmm1
10000d2b7:	66 0f 5c 0d 61 b3 02 00	subpd	176993(%rip), %xmm1
10000d2bf:	66 0f 29 8d 50 ff ff ff	movapd	%xmm1, -176(%rbp)
10000d2c7:	66 0f 28 c1	movapd	%xmm1, %xmm0
10000d2cb:	66 0f 7c c1	haddpd	%xmm1, %xmm0
10000d2cf:	66 0f 13 85 70 ff ff ff	movlpd	%xmm0, -144(%rbp)
10000d2d7:	4c 89 ff	movq	%r15, %rdi
10000d2da:	e8 7f 1e 02 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10000d2df:	66 48 0f 6e c0	movq	%rax, %xmm0
10000d2e4:	66 0f 62 05 24 b3 02 00	punpckldq	176932(%rip), %xmm0
10000d2ec:	66 0f 5c 05 2c b3 02 00	subpd	176940(%rip), %xmm0
10000d2f4:	66 0f 28 9d 50 ff ff ff	movapd	-176(%rbp), %xmm3
10000d2fc:	66 0f 7c d8	haddpd	%xmm0, %xmm3
10000d300:	66 0f 7c c0	haddpd	%xmm0, %xmm0
10000d304:	66 0f 13 85 78 ff ff ff	movlpd	%xmm0, -136(%rbp)
10000d30c:	48 8b 05 a5 ee 02 00	movq	192165(%rip), %rax ## literal pool symbol address: _CGAffineTransformIdentity
10000d313:	0f 10 00	movups	(%rax), %xmm0
10000d316:	0f 10 48 10	movups	16(%rax), %xmm1
10000d31a:	0f 10 50 20	movups	32(%rax), %xmm2
10000d31e:	0f 29 55 a0	movaps	%xmm2, -96(%rbp)
10000d322:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
10000d326:	66 0f 10 4b 10	movupd	16(%rbx), %xmm1
10000d32b:	66 0f 5e cb	divpd	%xmm3, %xmm1
10000d32f:	66 0f 5a c9	cvtpd2ps	%xmm1, %xmm1
10000d333:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000d337:	f3 0f 16 c1	movshdup	%xmm1, %xmm0
10000d33b:	f3 0f 5d c8	minss	%xmm0, %xmm1
10000d33f:	0f 57 c0	xorps	%xmm0, %xmm0
10000d342:	f3 0f 5a c1	cvtss2sd	%xmm1, %xmm0
10000d346:	48 8d 9d a0 fe ff ff	leaq	-352(%rbp), %rbx
10000d34d:	48 89 df	movq	%rbx, %rdi
10000d350:	0f 28 c8	movaps	%xmm0, %xmm1
10000d353:	e8 2c 1c 02 00	callq	0x10002ef84 ## symbol stub for: _CGAffineTransformMakeScale
10000d358:	0f 10 03	movups	(%rbx), %xmm0
10000d35b:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000d35f:	0f 10 53 20	movups	32(%rbx), %xmm2
10000d363:	0f 11 54 24 50	movups	%xmm2, 80(%rsp)
10000d368:	0f 11 4c 24 40	movups	%xmm1, 64(%rsp)
10000d36d:	0f 11 44 24 30	movups	%xmm0, 48(%rsp)
10000d372:	0f 28 45 80	movaps	-128(%rbp), %xmm0
10000d376:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10000d37a:	0f 28 55 a0	movaps	-96(%rbp), %xmm2
10000d37e:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10000d383:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d388:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d38c:	48 8d 9d 70 fe ff ff	leaq	-400(%rbp), %rbx
10000d393:	48 89 df	movq	%rbx, %rdi
10000d396:	e8 dd 1b 02 00	callq	0x10002ef78 ## symbol stub for: _CGAffineTransformConcat
10000d39b:	0f 10 03	movups	(%rbx), %xmm0
10000d39e:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000d3a2:	0f 10 53 20	movups	32(%rbx), %xmm2
10000d3a6:	0f 29 55 a0	movaps	%xmm2, -96(%rbp)
10000d3aa:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
10000d3ae:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000d3b2:	0f 28 45 80	movaps	-128(%rbp), %xmm0
10000d3b6:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10000d3ba:	66 0f 28 55 a0	movapd	-96(%rbp), %xmm2
10000d3bf:	66 0f 11 54 24 20	movupd	%xmm2, 32(%rsp)
10000d3c5:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d3ca:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d3ce:	4c 89 f7	movq	%r14, %rdi
10000d3d1:	e8 a4 1c 02 00	callq	0x10002f07a ## symbol stub for: _CGContextConcatCTM
10000d3d6:	66 0f 28 85 60 ff ff ff	movapd	-160(%rbp), %xmm0
10000d3de:	66 0f 28 8d 70 ff ff ff	movapd	-144(%rbp), %xmm1
10000d3e6:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10000d3ec:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000d3f1:	4c 89 f7	movq	%r14, %rdi
10000d3f4:	4c 89 fe	movq	%r15, %rsi
10000d3f7:	e8 84 1c 02 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
10000d3fc:	4c 89 f7	movq	%r14, %rdi
10000d3ff:	e8 b8 1c 02 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10000d404:	4c 89 ff	movq	%r15, %rdi
10000d407:	e8 7c 1d 02 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10000d40c:	48 81 c4 c8 01 00 00	addq	$456, %rsp
10000d413:	5b	popq	%rbx
10000d414:	41 5c	popq	%r12
10000d416:	41 5d	popq	%r13
10000d418:	41 5e	popq	%r14
10000d41a:	41 5f	popq	%r15
10000d41c:	5d	popq	%rbp
10000d41d:	c3	retq
10000d41e:	55	pushq	%rbp
10000d41f:	48 89 e5	movq	%rsp, %rbp
10000d422:	53	pushq	%rbx
10000d423:	50	pushq	%rax
10000d424:	48 89 fb	movq	%rdi, %rbx
10000d427:	48 85 f6	testq	%rsi, %rsi
10000d42a:	74 1e	je	0x10000d44a
10000d42c:	48 8b 15 9d 39 04 00	movq	276893(%rip), %rdx ## Objc selector ref: bounds
10000d433:	48 89 df	movq	%rbx, %rdi
10000d436:	e8 a7 20 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d43b:	f2 0f 10 43 18	movsd	24(%rbx), %xmm0
10000d440:	f2 0f 58 05 70 b0 02 00	addsd	176240(%rip), %xmm0
10000d448:	eb 0f	jmp	0x10000d459
10000d44a:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
10000d451:	f2 0f 10 05 5f b0 02 00	movsd	176223(%rip), %xmm0
10000d459:	f2 0f 11 43 08	movsd	%xmm0, 8(%rbx)
10000d45e:	0f 28 05 cb b1 02 00	movaps	176587(%rip), %xmm0
10000d465:	0f 11 43 10	movups	%xmm0, 16(%rbx)
10000d469:	48 89 d8	movq	%rbx, %rax
10000d46c:	48 83 c4 08	addq	$8, %rsp
10000d470:	5b	popq	%rbx
10000d471:	5d	popq	%rbp
10000d472:	c3	retq
10000d473:	55	pushq	%rbp
10000d474:	48 89 e5	movq	%rsp, %rbp
10000d477:	41 56	pushq	%r14
10000d479:	53	pushq	%rbx
10000d47a:	48 83 ec 50	subq	$80, %rsp
10000d47e:	48 89 fb	movq	%rdi, %rbx
10000d481:	48 8b 35 f0 41 04 00	movq	279024(%rip), %rsi ## Objc selector ref: locationInWindow
10000d488:	4c 8b 35 91 f7 02 00	movq	194449(%rip), %r14 ## Objc message: -[%rdi locationInWindow]
10000d48f:	48 89 d7	movq	%rdx, %rdi
10000d492:	41 ff d6	callq	*%r14
10000d495:	48 8b 35 fc 3a 04 00	movq	277244(%rip), %rsi ## Objc selector ref: convertPoint:fromView:
10000d49c:	48 89 df	movq	%rbx, %rdi
10000d49f:	31 d2	xorl	%edx, %edx
10000d4a1:	41 ff d6	callq	*%r14
10000d4a4:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
10000d4a9:	f2 0f 11 4d e8	movsd	%xmm1, -24(%rbp)
10000d4ae:	48 85 db	testq	%rbx, %rbx
10000d4b1:	74 15	je	0x10000d4c8
10000d4b3:	48 8b 15 ce 44 04 00	movq	279758(%rip), %rdx ## Objc selector ref: popupRect
10000d4ba:	48 8d 7d c0	leaq	-64(%rbp), %rdi
10000d4be:	48 89 de	movq	%rbx, %rsi
10000d4c1:	e8 1c 20 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d4c6:	eb 0b	jmp	0x10000d4d3
10000d4c8:	0f 57 c0	xorps	%xmm0, %xmm0
10000d4cb:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000d4cf:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10000d4d3:	48 8b 35 b6 40 04 00	movq	278710(%rip), %rsi ## Objc selector ref: isFlipped
10000d4da:	48 89 df	movq	%rbx, %rdi
10000d4dd:	ff 15 3d f7 02 00	callq	*194365(%rip) ## Objc message: -[%rdi isFlipped]
10000d4e3:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10000d4e7:	0f 28 4d d0	movaps	-48(%rbp), %xmm1
10000d4eb:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d4f0:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d4f4:	0f be f8	movsbl	%al, %edi
10000d4f7:	f2 0f 10 45 e0	movsd	-32(%rbp), %xmm0
10000d4fc:	f2 0f 10 4d e8	movsd	-24(%rbp), %xmm1
10000d501:	e8 fc 1d 02 00	callq	0x10002f302 ## symbol stub for: _NSMouseInRect
10000d506:	0f be c0	movsbl	%al, %eax
10000d509:	48 83 c4 50	addq	$80, %rsp
10000d50d:	5b	popq	%rbx
10000d50e:	41 5e	popq	%r14
10000d510:	5d	popq	%rbp
10000d511:	c3	retq
10000d512:	55	pushq	%rbp
10000d513:	48 89 e5	movq	%rsp, %rbp
10000d516:	41 57	pushq	%r15
10000d518:	41 56	pushq	%r14
10000d51a:	41 54	pushq	%r12
10000d51c:	53	pushq	%rbx
10000d51d:	48 83 ec 70	subq	$112, %rsp
10000d521:	48 89 fb	movq	%rdi, %rbx
10000d524:	48 8b 05 cd 56 04 00	movq	284365(%rip), %rax
10000d52b:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000d52f:	75 11	jne	0x10000d542
10000d531:	48 8b 05 c8 56 04 00	movq	284360(%rip), %rax
10000d538:	83 3c 03 00	cmpl	$0, (%rbx,%rax)
10000d53c:	0f 84 c9 00 00 00	je	0x10000d60b
10000d542:	48 8b 15 3f 44 04 00	movq	279615(%rip), %rdx ## Objc selector ref: popupRect
10000d549:	4c 8d 7d 90	leaq	-112(%rbp), %r15
10000d54d:	4c 89 ff	movq	%r15, %rdi
10000d550:	48 89 de	movq	%rbx, %rsi
10000d553:	e8 8a 1f 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d558:	48 8b 3d e9 50 04 00	movq	282857(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
10000d55f:	48 8b 35 e2 37 04 00	movq	276450(%rip), %rsi ## Objc selector ref: arrowCursor
10000d566:	4c 8b 25 b3 f6 02 00	movq	194227(%rip), %r12 ## Objc message: +[NSCursor arrowCursor]
10000d56d:	41 ff d4	callq	*%r12
10000d570:	4c 8b 35 d9 36 04 00	movq	276185(%rip), %r14 ## Objc selector ref: addCursorRect:cursor:
10000d577:	41 0f 10 07	movups	(%r15), %xmm0
10000d57b:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000d580:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d585:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d589:	48 89 df	movq	%rbx, %rdi
10000d58c:	4c 89 f6	movq	%r14, %rsi
10000d58f:	48 89 c2	movq	%rax, %rdx
10000d592:	41 ff d4	callq	*%r12
10000d595:	48 83 3d 03 77 04 00 00	cmpq	$0, 292611(%rip)
10000d59d:	74 4e	je	0x10000d5ed
10000d59f:	48 8b 15 2a 38 04 00	movq	276522(%rip), %rdx ## Objc selector ref: bounds
10000d5a6:	4c 8d 7d b0	leaq	-80(%rbp), %r15
10000d5aa:	4c 89 ff	movq	%r15, %rdi
10000d5ad:	48 89 de	movq	%rbx, %rsi
10000d5b0:	e8 2d 1f 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d5b5:	48 8b 15 e4 76 04 00	movq	292580(%rip), %rdx
10000d5bc:	41 0f 10 07	movups	(%r15), %xmm0
10000d5c0:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000d5c5:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000d5ca:	0f 11 04 24	movups	%xmm0, (%rsp)
10000d5ce:	48 89 df	movq	%rbx, %rdi
10000d5d1:	4c 89 f6	movq	%r14, %rsi
10000d5d4:	41 ff d4	callq	*%r12
10000d5d7:	48 8b 3d c2 76 04 00	movq	292546(%rip), %rdi
10000d5de:	48 8b 35 0b 4a 04 00	movq	281099(%rip), %rsi ## Objc selector ref: setOnMouseEntered:
10000d5e5:	ba 01 00 00 00	movl	$1, %edx
10000d5ea:	41 ff d4	callq	*%r12
10000d5ed:	48 8d 7d d0	leaq	-48(%rbp), %rdi
10000d5f1:	48 89 1f	movq	%rbx, (%rdi)
10000d5f4:	48 8b 05 e5 51 04 00	movq	283109(%rip), %rax ## Objc class ref: ProfView3D
10000d5fb:	48 89 47 08	movq	%rax, 8(%rdi)
10000d5ff:	48 8b 35 22 45 04 00	movq	279842(%rip), %rsi ## Objc selector ref: resetCursorRects
10000d606:	e8 d1 1e 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] resetCursorRects]
10000d60b:	48 83 c4 70	addq	$112, %rsp
10000d60f:	5b	popq	%rbx
10000d610:	41 5c	popq	%r12
10000d612:	41 5e	popq	%r14
10000d614:	41 5f	popq	%r15
10000d616:	5d	popq	%rbp
10000d617:	c3	retq
10000d618:	55	pushq	%rbp
10000d619:	48 89 e5	movq	%rsp, %rbp
10000d61c:	41 57	pushq	%r15
10000d61e:	41 56	pushq	%r14
10000d620:	41 55	pushq	%r13
10000d622:	41 54	pushq	%r12
10000d624:	53	pushq	%rbx
10000d625:	48 83 ec 48	subq	$72, %rsp
10000d629:	49 89 d6	movq	%rdx, %r14
10000d62c:	48 89 fb	movq	%rdi, %rbx
10000d62f:	48 8b 05 c2 55 04 00	movq	284098(%rip), %rax
10000d636:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000d63a:	75 11	jne	0x10000d64d
10000d63c:	48 8b 05 bd 55 04 00	movq	284093(%rip), %rax
10000d643:	83 3c 03 00	cmpl	$0, (%rbx,%rax)
10000d647:	0f 84 42 01 00 00	je	0x10000d78f
10000d64d:	48 8b 35 7c 3d 04 00	movq	277884(%rip), %rsi ## Objc selector ref: inPopupRect:
10000d654:	48 89 df	movq	%rbx, %rdi
10000d657:	4c 89 f2	movq	%r14, %rdx
10000d65a:	ff 15 c0 f5 02 00	callq	*193984(%rip) ## Objc message: -[%rdi inPopupRect:]
10000d660:	84 c0	testb	%al, %al
10000d662:	0f 84 ee 00 00 00	je	0x10000d756
10000d668:	48 8b 15 61 37 04 00	movq	276321(%rip), %rdx ## Objc selector ref: bounds
10000d66f:	4c 8d 7d 98	leaq	-104(%rbp), %r15
10000d673:	4c 89 ff	movq	%r15, %rdi
10000d676:	48 89 de	movq	%rbx, %rsi
10000d679:	e8 64 1e 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000d67e:	f2 41 0f 10 4f 18	movsd	24(%r15), %xmm1
10000d684:	f2 0f 58 0d 34 ae 02 00	addsd	175668(%rip), %xmm1
10000d68c:	48 8b 35 0d 39 04 00	movq	276749(%rip), %rsi ## Objc selector ref: convertPoint:toView:
10000d693:	4c 8b 3d 86 f5 02 00	movq	193926(%rip), %r15 ## Objc message: -[%rdi convertPoint:toView:]
10000d69a:	f2 0f 10 05 26 ae 02 00	movsd	175654(%rip), %xmm0
10000d6a2:	48 89 df	movq	%rbx, %rdi
10000d6a5:	31 d2	xorl	%edx, %edx
10000d6a7:	41 ff d7	callq	*%r15
10000d6aa:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
10000d6af:	f2 0f 11 4d c8	movsd	%xmm1, -56(%rbp)
10000d6b4:	48 8b 05 7d ef 02 00	movq	192381(%rip), %rax ## literal pool symbol address: _NSApp
10000d6bb:	48 8b 00	movq	(%rax), %rax
10000d6be:	48 89 45 b8	movq	%rax, -72(%rbp)
10000d6c2:	4c 8b 25 87 4f 04 00	movq	282503(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSEvent
10000d6c9:	48 8b 35 f8 4c 04 00	movq	281848(%rip), %rsi ## Objc selector ref: timestamp
10000d6d0:	4c 89 f7	movq	%r14, %rdi
10000d6d3:	41 ff d7	callq	*%r15
10000d6d6:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
10000d6db:	48 8b 35 4e 4e 04 00	movq	282190(%rip), %rsi ## Objc selector ref: windowNumber
10000d6e2:	4c 89 f7	movq	%r14, %rdi
10000d6e5:	41 ff d7	callq	*%r15
10000d6e8:	49 89 c5	movq	%rax, %r13
10000d6eb:	48 8b 35 66 38 04 00	movq	276582(%rip), %rsi ## Objc selector ref: context
10000d6f2:	4c 89 f7	movq	%r14, %rdi
10000d6f5:	41 ff d7	callq	*%r15
10000d6f8:	48 89 c3	movq	%rax, %rbx
10000d6fb:	48 8b 35 d6 3a 04 00	movq	277206(%rip), %rsi ## Objc selector ref: eventNumber
10000d702:	4c 89 f7	movq	%r14, %rdi
10000d705:	41 ff d7	callq	*%r15
10000d708:	48 8b 35 79 40 04 00	movq	278649(%rip), %rsi ## Objc selector ref: mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:
10000d70f:	f3 0f 10 1d 7d a8 02 00	movss	174205(%rip), %xmm3
10000d717:	ba 01 00 00 00	movl	$1, %edx
10000d71c:	b9 00 00 04 00	movl	$262144, %ecx
10000d721:	4c 89 e7	movq	%r12, %rdi
10000d724:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
10000d729:	f2 0f 10 4d c8	movsd	-56(%rbp), %xmm1
10000d72e:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
10000d733:	4d 89 e8	movq	%r13, %r8
10000d736:	49 89 d9	movq	%rbx, %r9
10000d739:	6a 01	pushq	$1
10000d73b:	50	pushq	%rax
10000d73c:	41 ff d7	callq	*%r15
10000d73f:	48 83 c4 10	addq	$16, %rsp
10000d743:	48 8b 35 0e 45 04 00	movq	279822(%rip), %rsi ## Objc selector ref: sendEvent:
10000d74a:	48 8b 7d b8	movq	-72(%rbp), %rdi
10000d74e:	48 89 c2	movq	%rax, %rdx
10000d751:	41 ff d7	callq	*%r15
10000d754:	eb 39	jmp	0x10000d78f
10000d756:	48 8b 3d 4b 75 04 00	movq	292171(%rip), %rdi
10000d75d:	48 8b 35 cc 42 04 00	movq	279244(%rip), %rsi ## Objc selector ref: push
10000d764:	4c 8b 3d b5 f4 02 00	movq	193717(%rip), %r15 ## Objc message: +[NSEvent push]
10000d76b:	41 ff d7	callq	*%r15
10000d76e:	4c 8b 25 eb 54 04 00	movq	283883(%rip), %r12
10000d775:	48 8b 35 fc 3e 04 00	movq	278268(%rip), %rsi ## Objc selector ref: locationInWindow
10000d77c:	4c 89 f7	movq	%r14, %rdi
10000d77f:	41 ff d7	callq	*%r15
10000d782:	f2 42 0f 11 04 23	movsd	%xmm0, (%rbx,%r12)
10000d788:	f2 42 0f 11 4c 23 08	movsd	%xmm1, 8(%rbx,%r12)
10000d78f:	48 83 c4 48	addq	$72, %rsp
10000d793:	5b	popq	%rbx
10000d794:	41 5c	popq	%r12
10000d796:	41 5d	popq	%r13
10000d798:	41 5e	popq	%r14
10000d79a:	41 5f	popq	%r15
10000d79c:	5d	popq	%rbp
10000d79d:	c3	retq
10000d79e:	55	pushq	%rbp
10000d79f:	48 89 e5	movq	%rsp, %rbp
10000d7a2:	48 8b 05 4f 54 04 00	movq	283727(%rip), %rax
10000d7a9:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000d7ad:	75 0d	jne	0x10000d7bc
10000d7af:	48 8b 05 4a 54 04 00	movq	283722(%rip), %rax
10000d7b6:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000d7ba:	74 15	je	0x10000d7d1
10000d7bc:	48 8b 3d 85 4e 04 00	movq	282245(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCursor
10000d7c3:	48 8b 35 ae 41 04 00	movq	278958(%rip), %rsi ## Objc selector ref: pop
10000d7ca:	5d	popq	%rbp
10000d7cb:	ff 25 4f f4 02 00	jmpq	*193615(%rip) ## Objc message: +[NSCursor pop]
10000d7d1:	5d	popq	%rbp
10000d7d2:	c3	retq
10000d7d3:	55	pushq	%rbp
10000d7d4:	48 89 e5	movq	%rsp, %rbp
10000d7d7:	41 57	pushq	%r15
10000d7d9:	41 56	pushq	%r14
10000d7db:	41 54	pushq	%r12
10000d7dd:	53	pushq	%rbx
10000d7de:	49 89 d6	movq	%rdx, %r14
10000d7e1:	48 89 fb	movq	%rdi, %rbx
10000d7e4:	48 8b 05 0d 54 04 00	movq	283661(%rip), %rax
10000d7eb:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000d7ef:	75 11	jne	0x10000d802
10000d7f1:	48 8b 05 08 54 04 00	movq	283656(%rip), %rax
10000d7f8:	83 3c 03 00	cmpl	$0, (%rbx,%rax)
10000d7fc:	0f 84 26 01 00 00	je	0x10000d928
10000d802:	48 8b 35 6f 3f 04 00	movq	278383(%rip), %rsi ## Objc selector ref: modifierFlags
10000d809:	4c 8b 25 10 f4 02 00	movq	193552(%rip), %r12 ## Objc message: -[%rdi modifierFlags]
10000d810:	4c 89 f7	movq	%r14, %rdi
10000d813:	41 ff d4	callq	*%r12
10000d816:	49 89 c7	movq	%rax, %r15
10000d819:	48 8b 35 58 3e 04 00	movq	278104(%rip), %rsi ## Objc selector ref: locationInWindow
10000d820:	4c 89 f7	movq	%r14, %rdi
10000d823:	41 ff d4	callq	*%r12
10000d826:	41 0f ba e7 13	btl	$19, %r15d
10000d82b:	48 8b 05 2e 54 04 00	movq	283694(%rip), %rax
10000d832:	66 0f 28 d1	movapd	%xmm1, %xmm2
10000d836:	f2 0f 5c 54 03 08	subsd	8(%rbx,%rax), %xmm2
10000d83c:	72 23	jb	0x10000d861
10000d83e:	48 8b 0d 8b 53 04 00	movq	283531(%rip), %rcx
10000d845:	f3 0f 5a 1c 0b	cvtss2sd	(%rbx,%rcx), %xmm3
10000d84a:	f2 0f 59 15 6e a8 02 00	mulsd	174190(%rip), %xmm2
10000d852:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000d856:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
10000d85a:	f3 0f 11 14 0b	movss	%xmm2, (%rbx,%rcx)
10000d85f:	eb 28	jmp	0x10000d889
10000d861:	48 8b 0d 60 53 04 00	movq	283488(%rip), %rcx
10000d868:	f3 0f 5a 1c 0b	cvtss2sd	(%rbx,%rcx), %xmm3
10000d86d:	f2 0f 59 15 03 a7 02 00	mulsd	173827(%rip), %xmm2
10000d875:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000d879:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
10000d87d:	f3 0f 11 14 0b	movss	%xmm2, (%rbx,%rcx)
10000d882:	48 8b 0d 47 53 04 00	movq	283463(%rip), %rcx
10000d889:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000d88d:	f2 0f 5c 14 03	subsd	(%rbx,%rax), %xmm2
10000d892:	48 8b 15 3f 53 04 00	movq	283455(%rip), %rdx
10000d899:	0f 57 db	xorps	%xmm3, %xmm3
10000d89c:	f3 0f 5a 1c 13	cvtss2sd	(%rbx,%rdx), %xmm3
10000d8a1:	f2 0f 59 15 17 a8 02 00	mulsd	174103(%rip), %xmm2
10000d8a9:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000d8ad:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
10000d8b1:	f3 0f 11 14 13	movss	%xmm2, (%rbx,%rdx)
10000d8b6:	f3 0f 10 1c 0b	movss	(%rbx,%rcx), %xmm3
10000d8bb:	f3 0f 10 15 e5 ad 02 00	movss	175589(%rip), %xmm2
10000d8c3:	0f 2e da	ucomiss	%xmm2, %xmm3
10000d8c6:	77 08	ja	0x10000d8d0
10000d8c8:	0f 57 d2	xorps	%xmm2, %xmm2
10000d8cb:	0f 2e d3	ucomiss	%xmm3, %xmm2
10000d8ce:	76 05	jbe	0x10000d8d5
10000d8d0:	f3 0f 11 14 0b	movss	%xmm2, (%rbx,%rcx)
10000d8d5:	48 8b 0d ec 52 04 00	movq	283372(%rip), %rcx
10000d8dc:	f3 0f 10 1c 0b	movss	(%rbx,%rcx), %xmm3
10000d8e1:	f3 0f 10 15 c3 ad 02 00	movss	175555(%rip), %xmm2
10000d8e9:	0f 2e da	ucomiss	%xmm2, %xmm3
10000d8ec:	77 0d	ja	0x10000d8fb
10000d8ee:	f3 0f 10 15 aa ad 02 00	movss	175530(%rip), %xmm2
10000d8f6:	0f 2e d3	ucomiss	%xmm3, %xmm2
10000d8f9:	76 05	jbe	0x10000d900
10000d8fb:	f3 0f 11 14 0b	movss	%xmm2, (%rbx,%rcx)
10000d900:	f2 0f 11 04 03	movsd	%xmm0, (%rbx,%rax)
10000d905:	f2 0f 11 4c 03 08	movsd	%xmm1, 8(%rbx,%rax)
10000d90b:	48 8b 35 b6 46 04 00	movq	280246(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000d912:	48 89 df	movq	%rbx, %rdi
10000d915:	ba 01 00 00 00	movl	$1, %edx
10000d91a:	5b	popq	%rbx
10000d91b:	41 5c	popq	%r12
10000d91d:	41 5e	popq	%r14
10000d91f:	41 5f	popq	%r15
10000d921:	5d	popq	%rbp
10000d922:	ff 25 f8 f2 02 00	jmpq	*193272(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
10000d928:	5b	popq	%rbx
10000d929:	41 5c	popq	%r12
10000d92b:	41 5e	popq	%r14
10000d92d:	41 5f	popq	%r15
10000d92f:	5d	popq	%rbp
10000d930:	c3	retq
10000d931:	55	pushq	%rbp
10000d932:	48 89 e5	movq	%rsp, %rbp
10000d935:	41 57	pushq	%r15
10000d937:	41 56	pushq	%r14
10000d939:	41 55	pushq	%r13
10000d93b:	41 54	pushq	%r12
10000d93d:	53	pushq	%rbx
10000d93e:	48 83 ec 38	subq	$56, %rsp
10000d942:	49 89 fe	movq	%rdi, %r14
10000d945:	48 8b 05 cc ee 02 00	movq	192204(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000d94c:	48 8b 00	movq	(%rax), %rax
10000d94f:	48 89 45 d0	movq	%rax, -48(%rbp)
10000d953:	f3 0f 10 05 2d ad 02 00	movss	175405(%rip), %xmm0
10000d95b:	e8 f2 1a 02 00	callq	0x10002f452 ## symbol stub for: _glLineWidth
10000d960:	4c 8b 2d 59 52 04 00	movq	283225(%rip), %r13
10000d967:	43 8b 04 2e	movl	(%r14,%r13), %eax
10000d96b:	3d 20 79 78 59	cmpl	$1501067552, %eax
10000d970:	0f 84 bc 01 00 00	je	0x10000db32
10000d976:	3d 20 76 75 59	cmpl	$1500870176, %eax
10000d97b:	0f 84 b1 01 00 00	je	0x10000db32
10000d981:	bf 03 00 00 00	movl	$3, %edi
10000d986:	3d 20 5a 59 58	cmpl	$1482250784, %eax
10000d98b:	0f 85 67 02 00 00	jne	0x10000dbf8
10000d991:	e8 4a 1a 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000d996:	0f 57 c0	xorps	%xmm0, %xmm0
10000d999:	0f 57 c9	xorps	%xmm1, %xmm1
10000d99c:	0f 57 d2	xorps	%xmm2, %xmm2
10000d99f:	e8 54 1a 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000d9a4:	f3 0f 10 05 08 ad 02 00	movss	175368(%rip), %xmm0
10000d9ac:	0f 28 c8	movaps	%xmm0, %xmm1
10000d9af:	0f 28 d0	movaps	%xmm0, %xmm2
10000d9b2:	e8 e3 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000d9b7:	f3 0f 10 15 d5 a5 02 00	movss	173525(%rip), %xmm2
10000d9bf:	0f 57 c0	xorps	%xmm0, %xmm0
10000d9c2:	0f 57 c9	xorps	%xmm1, %xmm1
10000d9c5:	e8 2e 1a 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000d9ca:	f3 0f 10 05 e6 ac 02 00	movss	175334(%rip), %xmm0
10000d9d2:	f3 0f 10 0d da ac 02 00	movss	175322(%rip), %xmm1
10000d9da:	0f 28 d1	movaps	%xmm1, %xmm2
10000d9dd:	e8 b8 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000d9e2:	0f 57 c9	xorps	%xmm1, %xmm1
10000d9e5:	f3 0f 10 05 a7 a5 02 00	movss	173479(%rip), %xmm0
10000d9ed:	0f 28 d0	movaps	%xmm0, %xmm2
10000d9f0:	e8 03 1a 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000d9f5:	f3 0f 10 05 bb ac 02 00	movss	175291(%rip), %xmm0
10000d9fd:	0f 28 c8	movaps	%xmm0, %xmm1
10000da00:	f3 0f 10 15 ac ac 02 00	movss	175276(%rip), %xmm2
10000da08:	e8 8d 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000da0d:	0f 57 c9	xorps	%xmm1, %xmm1
10000da10:	0f 57 d2	xorps	%xmm2, %xmm2
10000da13:	f3 0f 10 05 79 a5 02 00	movss	173433(%rip), %xmm0
10000da1b:	e8 d8 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000da20:	f3 0f 10 05 8c ac 02 00	movss	175244(%rip), %xmm0
10000da28:	f3 0f 10 0d 88 ac 02 00	movss	175240(%rip), %xmm1
10000da30:	0f 28 d0	movaps	%xmm0, %xmm2
10000da33:	e8 62 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000da38:	0f 57 c0	xorps	%xmm0, %xmm0
10000da3b:	0f 57 c9	xorps	%xmm1, %xmm1
10000da3e:	0f 57 d2	xorps	%xmm2, %xmm2
10000da41:	e8 b2 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000da46:	f3 0f 10 05 66 ac 02 00	movss	175206(%rip), %xmm0
10000da4e:	0f 28 c8	movaps	%xmm0, %xmm1
10000da51:	0f 28 d0	movaps	%xmm0, %xmm2
10000da54:	e8 41 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000da59:	e8 dc 19 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000da5e:	bf 03 00 00 00	movl	$3, %edi
10000da63:	e8 78 19 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000da68:	0f 57 c0	xorps	%xmm0, %xmm0
10000da6b:	0f 57 d2	xorps	%xmm2, %xmm2
10000da6e:	f3 0f 10 0d 1e a5 02 00	movss	173342(%rip), %xmm1
10000da76:	e8 7d 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000da7b:	f3 0f 10 05 31 ac 02 00	movss	175153(%rip), %xmm0
10000da83:	0f 28 c8	movaps	%xmm0, %xmm1
10000da86:	f3 0f 10 15 2a ac 02 00	movss	175146(%rip), %xmm2
10000da8e:	e8 07 1a 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000da93:	0f 57 c0	xorps	%xmm0, %xmm0
10000da96:	f3 0f 10 0d f6 a4 02 00	movss	173302(%rip), %xmm1
10000da9e:	0f 28 d1	movaps	%xmm1, %xmm2
10000daa1:	e8 52 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000daa6:	f3 0f 10 05 0a ac 02 00	movss	175114(%rip), %xmm0
10000daae:	f3 0f 10 0d fe ab 02 00	movss	175102(%rip), %xmm1
10000dab6:	0f 28 d0	movaps	%xmm0, %xmm2
10000dab9:	e8 dc 19 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dabe:	f3 0f 10 05 ce a4 02 00	movss	173262(%rip), %xmm0
10000dac6:	0f 28 c8	movaps	%xmm0, %xmm1
10000dac9:	0f 28 d0	movaps	%xmm0, %xmm2
10000dacc:	e8 27 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dad1:	f3 0f 10 05 df ab 02 00	movss	175071(%rip), %xmm0
10000dad9:	0f 28 c8	movaps	%xmm0, %xmm1
10000dadc:	0f 28 d0	movaps	%xmm0, %xmm2
10000dadf:	e8 b6 19 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dae4:	0f 57 d2	xorps	%xmm2, %xmm2
10000dae7:	f3 0f 10 05 a5 a4 02 00	movss	173221(%rip), %xmm0
10000daef:	0f 28 c8	movaps	%xmm0, %xmm1
10000daf2:	e8 01 19 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000daf7:	f3 0f 10 05 b5 ab 02 00	movss	175029(%rip), %xmm0
10000daff:	f3 0f 10 0d b1 ab 02 00	movss	175025(%rip), %xmm1
10000db07:	0f 28 d1	movaps	%xmm1, %xmm2
10000db0a:	e8 8b 19 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000db0f:	0f 57 c0	xorps	%xmm0, %xmm0
10000db12:	0f 57 d2	xorps	%xmm2, %xmm2
10000db15:	f3 0f 10 0d 77 a4 02 00	movss	173175(%rip), %xmm1
10000db1d:	e8 d6 18 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000db22:	f3 0f 10 05 8a ab 02 00	movss	174986(%rip), %xmm0
10000db2a:	0f 28 c8	movaps	%xmm0, %xmm1
10000db2d:	e9 f4 03 00 00	jmp	0x10000df26
10000db32:	bf 03 00 00 00	movl	$3, %edi
10000db37:	e8 a4 18 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000db3c:	0f 57 c0	xorps	%xmm0, %xmm0
10000db3f:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000db43:	66 0f 57 d2	xorpd	%xmm2, %xmm2
10000db47:	e8 ac 18 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000db4c:	31 db	xorl	%ebx, %ebx
10000db4e:	4c 8d 3d 7b ab 02 00	leaq	174971(%rip), %r15
10000db55:	43 81 3c 2e 20 79 78 59	cmpl	$1501067552, (%r14,%r13)
10000db5d:	f2 42 0f 10 04 3b	movsd	(%rbx,%r15), %xmm0
10000db63:	75 11	jne	0x10000db76
10000db65:	66 42 0f 16 44 3b 08	movhpd	8(%rbx,%r15), %xmm0
10000db6c:	66 0f 58 05 fc a9 02 00	addpd	174588(%rip), %xmm0
10000db74:	eb 3f	jmp	0x10000dbb5
10000db76:	f2 42 0f 10 4c 3b 08	movsd	8(%rbx,%r15), %xmm1
10000db7d:	66 0f 28 d0	movapd	%xmm0, %xmm2
10000db81:	66 0f 14 c1	unpcklpd	%xmm1, %xmm0
10000db85:	f2 0f 59 0d 2b a8 02 00	mulsd	174123(%rip), %xmm1
10000db8d:	f2 0f 58 d2	addsd	%xmm2, %xmm2
10000db91:	f2 0f 5c ca	subsd	%xmm2, %xmm1
10000db95:	f2 0f 58 0d d3 a3 02 00	addsd	173011(%rip), %xmm1
10000db9d:	66 0f 59 05 ab a9 02 00	mulpd	174507(%rip), %xmm0
10000dba5:	f2 0f 12 c9	movddup	%xmm1, %xmm1
10000dba9:	66 0f 5e c1	divpd	%xmm1, %xmm0
10000dbad:	66 0f 58 05 8b aa 02 00	addpd	174731(%rip), %xmm0
10000dbb5:	66 0f 28 c8	movapd	%xmm0, %xmm1
10000dbb9:	66 0f 15 c8	unpckhpd	%xmm0, %xmm1
10000dbbd:	f2 0f 10 15 9b a8 02 00	movsd	174235(%rip), %xmm2
10000dbc5:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
10000dbc9:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
10000dbcd:	f2 0f 59 c2	mulsd	%xmm2, %xmm0
10000dbd1:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10000dbd5:	f3 0f 10 15 d3 aa 02 00	movss	174803(%rip), %xmm2
10000dbdd:	e8 b8 18 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dbe2:	48 83 c3 10	addq	$16, %rbx
10000dbe6:	48 81 fb 00 02 00 00	cmpq	$512, %rbx
10000dbed:	0f 85 62 ff ff ff	jne	0x10000db55
10000dbf3:	e9 3b 03 00 00	jmp	0x10000df33
10000dbf8:	e8 e3 17 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000dbfd:	f2 0f 10 05 33 a8 02 00	movsd	174131(%rip), %xmm0
10000dc05:	f2 0f 10 0d c3 a8 02 00	movsd	174275(%rip), %xmm1
10000dc0d:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10000dc11:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000dc15:	4c 8d 65 b0	leaq	-80(%rbp), %r12
10000dc19:	0f 57 d2	xorps	%xmm2, %xmm2
10000dc1c:	48 89 df	movq	%rbx, %rdi
10000dc1f:	4c 89 fe	movq	%r15, %rsi
10000dc22:	4c 89 e2	movq	%r12, %rdx
10000dc25:	e8 7c 0b 00 00	callq	0x10000e7a6
10000dc2a:	0f 57 c0	xorps	%xmm0, %xmm0
10000dc2d:	f2 0f 5a 03	cvtsd2ss	(%rbx), %xmm0
10000dc31:	0f 57 c9	xorps	%xmm1, %xmm1
10000dc34:	f2 41 0f 5a 0f	cvtsd2ss	(%r15), %xmm1
10000dc39:	0f 57 d2	xorps	%xmm2, %xmm2
10000dc3c:	f2 41 0f 5a 14 24	cvtsd2ss	(%r12), %xmm2
10000dc42:	e8 b1 17 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dc47:	f3 0f 10 05 6d aa 02 00	movss	174701(%rip), %xmm0
10000dc4f:	f3 0f 10 15 61 aa 02 00	movss	174689(%rip), %xmm2
10000dc57:	0f 57 c9	xorps	%xmm1, %xmm1
10000dc5a:	e8 3b 18 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dc5f:	f3 0f 10 05 2d a3 02 00	movss	172845(%rip), %xmm0
10000dc67:	0f 28 c8	movaps	%xmm0, %xmm1
10000dc6a:	0f 28 d0	movaps	%xmm0, %xmm2
10000dc6d:	e8 86 17 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dc72:	0f 57 c0	xorps	%xmm0, %xmm0
10000dc75:	0f 57 c9	xorps	%xmm1, %xmm1
10000dc78:	f3 0f 10 15 38 aa 02 00	movss	174648(%rip), %xmm2
10000dc80:	e8 15 18 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dc85:	f2 0f 10 0d 4b a8 02 00	movsd	174155(%rip), %xmm1
10000dc8d:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10000dc91:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000dc95:	4c 8d 65 b0	leaq	-80(%rbp), %r12
10000dc99:	0f 57 d2	xorps	%xmm2, %xmm2
10000dc9c:	f2 0f 10 05 94 a7 02 00	movsd	173972(%rip), %xmm0
10000dca4:	48 89 df	movq	%rbx, %rdi
10000dca7:	4c 89 fe	movq	%r15, %rsi
10000dcaa:	4c 89 e2	movq	%r12, %rdx
10000dcad:	e8 f4 0a 00 00	callq	0x10000e7a6
10000dcb2:	0f 57 c0	xorps	%xmm0, %xmm0
10000dcb5:	f2 0f 5a 03	cvtsd2ss	(%rbx), %xmm0
10000dcb9:	0f 57 c9	xorps	%xmm1, %xmm1
10000dcbc:	f2 41 0f 5a 0f	cvtsd2ss	(%r15), %xmm1
10000dcc1:	0f 57 d2	xorps	%xmm2, %xmm2
10000dcc4:	f2 41 0f 5a 14 24	cvtsd2ss	(%r12), %xmm2
10000dcca:	e8 29 17 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dccf:	f3 0f 10 05 e9 a9 02 00	movss	174569(%rip), %xmm0
10000dcd7:	0f 57 c9	xorps	%xmm1, %xmm1
10000dcda:	f3 0f 10 15 d6 a9 02 00	movss	174550(%rip), %xmm2
10000dce2:	e8 b3 17 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dce7:	e8 4e 17 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000dcec:	bf 03 00 00 00	movl	$3, %edi
10000dcf1:	e8 ea 16 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000dcf6:	f2 0f 10 15 e2 a7 02 00	movsd	174050(%rip), %xmm2
10000dcfe:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10000dd02:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000dd06:	4c 8d 65 b0	leaq	-80(%rbp), %r12
10000dd0a:	0f 57 c9	xorps	%xmm1, %xmm1
10000dd0d:	f2 0f 10 05 23 a7 02 00	movsd	173859(%rip), %xmm0
10000dd15:	48 89 df	movq	%rbx, %rdi
10000dd18:	4c 89 fe	movq	%r15, %rsi
10000dd1b:	4c 89 e2	movq	%r12, %rdx
10000dd1e:	e8 83 0a 00 00	callq	0x10000e7a6
10000dd23:	0f 57 c0	xorps	%xmm0, %xmm0
10000dd26:	f2 0f 5a 03	cvtsd2ss	(%rbx), %xmm0
10000dd2a:	0f 57 c9	xorps	%xmm1, %xmm1
10000dd2d:	f2 41 0f 5a 0f	cvtsd2ss	(%r15), %xmm1
10000dd32:	0f 57 d2	xorps	%xmm2, %xmm2
10000dd35:	f2 41 0f 5a 14 24	cvtsd2ss	(%r12), %xmm2
10000dd3b:	e8 b8 16 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dd40:	0f 57 c0	xorps	%xmm0, %xmm0
10000dd43:	f3 0f 10 0d 71 a9 02 00	movss	174449(%rip), %xmm1
10000dd4b:	f3 0f 10 15 65 a9 02 00	movss	174437(%rip), %xmm2
10000dd53:	e8 42 17 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dd58:	f3 0f 10 05 34 a2 02 00	movss	172596(%rip), %xmm0
10000dd60:	0f 28 c8	movaps	%xmm0, %xmm1
10000dd63:	0f 28 d0	movaps	%xmm0, %xmm2
10000dd66:	e8 8d 16 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dd6b:	0f 57 c0	xorps	%xmm0, %xmm0
10000dd6e:	0f 57 c9	xorps	%xmm1, %xmm1
10000dd71:	f3 0f 10 15 3f a9 02 00	movss	174399(%rip), %xmm2
10000dd79:	e8 1c 17 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dd7e:	f2 0f 10 15 62 a7 02 00	movsd	173922(%rip), %xmm2
10000dd86:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10000dd8a:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000dd8e:	4c 8d 65 b0	leaq	-80(%rbp), %r12
10000dd92:	0f 57 c9	xorps	%xmm1, %xmm1
10000dd95:	f2 0f 10 05 9b a6 02 00	movsd	173723(%rip), %xmm0
10000dd9d:	48 89 df	movq	%rbx, %rdi
10000dda0:	4c 89 fe	movq	%r15, %rsi
10000dda3:	4c 89 e2	movq	%r12, %rdx
10000dda6:	e8 fb 09 00 00	callq	0x10000e7a6
10000ddab:	0f 57 c0	xorps	%xmm0, %xmm0
10000ddae:	f2 0f 5a 03	cvtsd2ss	(%rbx), %xmm0
10000ddb2:	0f 57 c9	xorps	%xmm1, %xmm1
10000ddb5:	f2 41 0f 5a 0f	cvtsd2ss	(%r15), %xmm1
10000ddba:	0f 57 d2	xorps	%xmm2, %xmm2
10000ddbd:	f2 41 0f 5a 14 24	cvtsd2ss	(%r12), %xmm2
10000ddc3:	e8 30 16 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000ddc8:	0f 57 c0	xorps	%xmm0, %xmm0
10000ddcb:	f3 0f 10 0d ed a8 02 00	movss	174317(%rip), %xmm1
10000ddd3:	f3 0f 10 15 dd a8 02 00	movss	174301(%rip), %xmm2
10000dddb:	e8 ba 16 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000dde0:	e8 55 16 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000dde5:	0f 57 c0	xorps	%xmm0, %xmm0
10000dde8:	0f 57 c9	xorps	%xmm1, %xmm1
10000ddeb:	0f 57 d2	xorps	%xmm2, %xmm2
10000ddee:	e8 05 16 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000ddf3:	bf 03 00 00 00	movl	$3, %edi
10000ddf8:	e8 e3 15 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000ddfd:	f3 0f 10 15 af a8 02 00	movss	174255(%rip), %xmm2
10000de05:	0f 57 c9	xorps	%xmm1, %xmm1
10000de08:	f3 0f 10 05 ac a8 02 00	movss	174252(%rip), %xmm0
10000de10:	e8 85 16 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000de15:	0f 57 c9	xorps	%xmm1, %xmm1
10000de18:	f3 0f 10 05 a0 a8 02 00	movss	174240(%rip), %xmm0
10000de20:	f3 0f 10 15 8c a8 02 00	movss	174220(%rip), %xmm2
10000de28:	e8 6d 16 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000de2d:	e8 08 16 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000de32:	bf 03 00 00 00	movl	$3, %edi
10000de37:	e8 a4 15 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000de3c:	0f 57 c0	xorps	%xmm0, %xmm0
10000de3f:	f3 0f 10 0d 75 a8 02 00	movss	174197(%rip), %xmm1
10000de47:	f3 0f 10 15 65 a8 02 00	movss	174181(%rip), %xmm2
10000de4f:	e8 46 16 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000de54:	0f 57 c0	xorps	%xmm0, %xmm0
10000de57:	f3 0f 10 0d 61 a8 02 00	movss	174177(%rip), %xmm1
10000de5f:	f3 0f 10 15 4d a8 02 00	movss	174157(%rip), %xmm2
10000de67:	e8 2e 16 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000de6c:	e8 c9 15 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000de71:	bf 03 00 00 00	movl	$3, %edi
10000de76:	e8 65 15 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000de7b:	f2 0f 10 05 ad a1 02 00	movsd	172461(%rip), %xmm0
10000de83:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10000de87:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000de8b:	4c 8d 65 b0	leaq	-80(%rbp), %r12
10000de8f:	0f 57 c9	xorps	%xmm1, %xmm1
10000de92:	0f 57 d2	xorps	%xmm2, %xmm2
10000de95:	48 89 df	movq	%rbx, %rdi
10000de98:	4c 89 fe	movq	%r15, %rsi
10000de9b:	4c 89 e2	movq	%r12, %rdx
10000de9e:	e8 03 09 00 00	callq	0x10000e7a6
10000dea3:	0f 57 c0	xorps	%xmm0, %xmm0
10000dea6:	f2 0f 5a 03	cvtsd2ss	(%rbx), %xmm0
10000deaa:	f3 0f 11 45 a4	movss	%xmm0, -92(%rbp)
10000deaf:	0f 57 c0	xorps	%xmm0, %xmm0
10000deb2:	f2 41 0f 5a 07	cvtsd2ss	(%r15), %xmm0
10000deb7:	f3 0f 11 45 a8	movss	%xmm0, -88(%rbp)
10000debc:	0f 57 c0	xorps	%xmm0, %xmm0
10000debf:	f2 41 0f 5a 04 24	cvtsd2ss	(%r12), %xmm0
10000dec5:	f3 0f 11 45 ac	movss	%xmm0, -84(%rbp)
10000deca:	0f 57 c0	xorps	%xmm0, %xmm0
10000decd:	0f 57 c9	xorps	%xmm1, %xmm1
10000ded0:	0f 57 d2	xorps	%xmm2, %xmm2
10000ded3:	e8 20 15 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000ded8:	0f 57 c0	xorps	%xmm0, %xmm0
10000dedb:	0f 57 c9	xorps	%xmm1, %xmm1
10000dede:	f3 0f 10 15 ce a7 02 00	movss	174030(%rip), %xmm2
10000dee6:	e8 af 15 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000deeb:	f3 0f 10 45 a4	movss	-92(%rbp), %xmm0
10000def0:	f3 0f 10 4d a8	movss	-88(%rbp), %xmm1
10000def5:	f3 0f 10 55 ac	movss	-84(%rbp), %xmm2
10000defa:	e8 f9 14 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000deff:	0f 57 c0	xorps	%xmm0, %xmm0
10000df02:	0f 57 c9	xorps	%xmm1, %xmm1
10000df05:	0f 57 d2	xorps	%xmm2, %xmm2
10000df08:	e8 8d 15 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000df0d:	f3 0f 10 05 7f a0 02 00	movss	172159(%rip), %xmm0
10000df15:	0f 28 c8	movaps	%xmm0, %xmm1
10000df18:	0f 28 d0	movaps	%xmm0, %xmm2
10000df1b:	e8 d8 14 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000df20:	0f 57 c0	xorps	%xmm0, %xmm0
10000df23:	0f 57 c9	xorps	%xmm1, %xmm1
10000df26:	f3 0f 10 15 8a a7 02 00	movss	173962(%rip), %xmm2
10000df2e:	e8 67 15 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000df33:	e8 02 15 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000df38:	48 8b 05 29 4d 04 00	movq	281897(%rip), %rax
10000df3f:	41 80 3c 06 00	cmpb	$0, (%r14,%rax)
10000df44:	0f 84 34 01 00 00	je	0x10000e07e
10000df4a:	43 8b 04 2e	movl	(%r14,%r13), %eax
10000df4e:	3d 1f 5a 59 58	cmpl	$1482250783, %eax
10000df53:	7e 22	jle	0x10000df77
10000df55:	3d 20 5a 59 58	cmpl	$1482250784, %eax
10000df5a:	74 36	je	0x10000df92
10000df5c:	3d 20 76 75 59	cmpl	$1500870176, %eax
10000df61:	74 38	je	0x10000df9b
10000df63:	3d 20 79 78 59	cmpl	$1501067552, %eax
10000df68:	0f 85 10 01 00 00	jne	0x10000e07e
10000df6e:	4c 8d 25 d9 bc ff ff	leaq	-17191(%rip), %r12
10000df75:	eb 34	jmp	0x10000dfab
10000df77:	3d 20 62 61 4c	cmpl	$1281450528, %eax
10000df7c:	74 26	je	0x10000dfa4
10000df7e:	3d 20 76 75 4c	cmpl	$1282766368, %eax
10000df83:	0f 85 f5 00 00 00	jne	0x10000e07e
10000df89:	4c 8d 25 84 b7 ff ff	leaq	-18556(%rip), %r12
10000df90:	eb 19	jmp	0x10000dfab
10000df92:	4c 8d 25 15 bb ff ff	leaq	-17643(%rip), %r12
10000df99:	eb 10	jmp	0x10000dfab
10000df9b:	4c 8d 25 ca be ff ff	leaq	-16694(%rip), %r12
10000dfa2:	eb 07	jmp	0x10000dfab
10000dfa4:	4c 8d 25 67 b9 ff ff	leaq	-18073(%rip), %r12
10000dfab:	bf 03 00 00 00	movl	$3, %edi
10000dfb0:	e8 2b 14 02 00	callq	0x10002f3e0 ## symbol stub for: _glBegin
10000dfb5:	0f 57 c0	xorps	%xmm0, %xmm0
10000dfb8:	0f 57 c9	xorps	%xmm1, %xmm1
10000dfbb:	66 0f 57 d2	xorpd	%xmm2, %xmm2
10000dfbf:	e8 34 14 02 00	callq	0x10002f3f8 ## symbol stub for: _glColor3f
10000dfc4:	41 bd 10 00 00 00	movl	$16, %r13d
10000dfca:	4c 8d 35 ff a8 02 00	leaq	174335(%rip), %r14
10000dfd1:	4c 8d 7d b8	leaq	-72(%rbp), %r15
10000dfd5:	f2 43 0f 10 44 35 f8	movsd	-8(%r13,%r14), %xmm0
10000dfdc:	f2 0f 59 05 0c a5 02 00	mulsd	173324(%rip), %xmm0
10000dfe4:	f2 0f 58 05 34 a0 02 00	addsd	172084(%rip), %xmm0
10000dfec:	f2 0f 2c c0	cvttsd2si	%xmm0, %eax
10000dff0:	66 43 0f 28 44 35 00	movapd	(%r13,%r14), %xmm0
10000dff7:	66 0f 59 05 51 a6 02 00	mulpd	173649(%rip), %xmm0
10000dfff:	66 0f 58 05 59 a6 02 00	addpd	173657(%rip), %xmm0
10000e007:	66 0f e6 c0	cvttpd2dq	%xmm0, %xmm0
10000e00b:	66 0f 38 34 c8	pmovzxwq	%xmm0, %xmm1
10000e010:	66 0f 73 f1 10	psllq	$16, %xmm1
10000e015:	66 0f 3a 0e 05 51 a6 02 00 0b	pblendw	$11, 173649(%rip), %xmm0
10000e01f:	66 0f eb c1	por	%xmm1, %xmm0
10000e023:	66 48 0f 7e c1	movq	%xmm0, %rcx
10000e028:	0f b7 d8	movzwl	%ax, %ebx
10000e02b:	48 09 cb	orq	%rcx, %rbx
10000e02e:	48 8d 7d c0	leaq	-64(%rbp), %rdi
10000e032:	48 89 de	movq	%rbx, %rsi
10000e035:	41 ff d4	callq	*%r12
10000e038:	48 89 df	movq	%rbx, %rdi
10000e03b:	4c 89 fe	movq	%r15, %rsi
10000e03e:	e8 98 dc ff ff	callq	0x10000bcdb
10000e043:	0f b6 7d b8	movzbl	-72(%rbp), %edi
10000e047:	0f b6 75 b9	movzbl	-71(%rbp), %esi
10000e04b:	0f b6 55 ba	movzbl	-70(%rbp), %edx
10000e04f:	e8 aa 13 02 00	callq	0x10002f3fe ## symbol stub for: _glColor3ub
10000e054:	f3 0f 10 45 c0	movss	-64(%rbp), %xmm0
10000e059:	f3 0f 10 4d c4	movss	-60(%rbp), %xmm1
10000e05e:	f3 0f 10 55 c8	movss	-56(%rbp), %xmm2
10000e063:	e8 32 14 02 00	callq	0x10002f49a ## symbol stub for: _glVertex3f
10000e068:	49 83 c5 20	addq	$32, %r13
10000e06c:	49 81 fd 90 08 00 00	cmpq	$2192, %r13
10000e073:	0f 85 5c ff ff ff	jne	0x10000dfd5
10000e079:	e8 bc 13 02 00	callq	0x10002f43a ## symbol stub for: _glEnd
10000e07e:	f3 0f 10 05 0e 9f 02 00	movss	171790(%rip), %xmm0
10000e086:	e8 c7 13 02 00	callq	0x10002f452 ## symbol stub for: _glLineWidth
10000e08b:	48 8b 05 86 e7 02 00	movq	190342(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000e092:	48 8b 00	movq	(%rax), %rax
10000e095:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10000e099:	75 0f	jne	0x10000e0aa
10000e09b:	48 83 c4 38	addq	$56, %rsp
10000e09f:	5b	popq	%rbx
10000e0a0:	41 5c	popq	%r12
10000e0a2:	41 5d	popq	%r13
10000e0a4:	41 5e	popq	%r14
10000e0a6:	41 5f	popq	%r15
10000e0a8:	5d	popq	%rbp
10000e0a9:	c3	retq
10000e0aa:	e8 01 13 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10000e0af:	55	pushq	%rbp
10000e0b0:	48 89 e5	movq	%rsp, %rbp
10000e0b3:	41 56	pushq	%r14
10000e0b5:	53	pushq	%rbx
10000e0b6:	48 89 fb	movq	%rdi, %rbx
10000e0b9:	48 8b 35 d8 42 04 00	movq	279256(%rip), %rsi ## Objc selector ref: tag
10000e0c0:	48 89 d7	movq	%rdx, %rdi
10000e0c3:	ff 15 57 eb 02 00	callq	*191319(%rip) ## Objc message: -[%rdi tag]
10000e0c9:	48 8b 0d f0 4a 04 00	movq	281328(%rip), %rcx
10000e0d0:	39 04 0b	cmpl	%eax, (%rbx,%rcx)
10000e0d3:	75 05	jne	0x10000e0da
10000e0d5:	5b	popq	%rbx
10000e0d6:	41 5e	popq	%r14
10000e0d8:	5d	popq	%rbp
10000e0d9:	c3	retq
10000e0da:	48 8b 35 37 3f 04 00	movq	278327(%rip), %rsi ## Objc selector ref: setPlotSpace:
10000e0e1:	4c 8b 35 38 eb 02 00	movq	191288(%rip), %r14 ## Objc message: -[%rdi setPlotSpace:]
10000e0e8:	48 89 df	movq	%rbx, %rdi
10000e0eb:	89 c2	movl	%eax, %edx
10000e0ed:	41 ff d6	callq	*%r14
10000e0f0:	48 8b 35 d1 3e 04 00	movq	278225(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000e0f7:	48 89 df	movq	%rbx, %rdi
10000e0fa:	ba 01 00 00 00	movl	$1, %edx
10000e0ff:	4c 89 f0	movq	%r14, %rax
10000e102:	5b	popq	%rbx
10000e103:	41 5e	popq	%r14
10000e105:	5d	popq	%rbp
10000e106:	ff e0	jmpq	*%rax
10000e108:	55	pushq	%rbp
10000e109:	48 89 e5	movq	%rsp, %rbp
10000e10c:	41 57	pushq	%r15
10000e10e:	41 56	pushq	%r14
10000e110:	53	pushq	%rbx
10000e111:	50	pushq	%rax
10000e112:	4c 8b 35 e7 4a 04 00	movq	281319(%rip), %r14
10000e119:	42 83 3c 37 00	cmpl	$0, (%rdi,%r14)
10000e11e:	0f 84 b7 00 00 00	je	0x10000e1db
10000e124:	48 89 fb	movq	%rdi, %rbx
10000e127:	48 8b 35 82 31 04 00	movq	274818(%rip), %rsi ## Objc selector ref: freeHoldData
10000e12e:	4c 8b 3d eb ea 02 00	movq	191211(%rip), %r15 ## Objc message: -[%rdi freeHoldData]
10000e135:	41 ff d7	callq	*%r15
10000e138:	48 8b 35 89 3e 04 00	movq	278153(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000e13f:	48 89 df	movq	%rbx, %rdi
10000e142:	ba 01 00 00 00	movl	$1, %edx
10000e147:	41 ff d7	callq	*%r15
10000e14a:	48 8b 05 ff 4a 04 00	movq	281343(%rip), %rax
10000e151:	8b 04 03	movl	(%rbx,%rax), %eax
10000e154:	48 8b 0d fd 4a 04 00	movq	281341(%rip), %rcx
10000e15b:	89 04 0b	movl	%eax, (%rbx,%rcx)
10000e15e:	46 8b 3c 33	movl	(%rbx,%r14), %r15d
10000e162:	48 8b 05 77 4a 04 00	movq	281207(%rip), %rax
10000e169:	44 89 3c 03	movl	%r15d, (%rbx,%rax)
10000e16d:	4c 89 f8	movq	%r15, %rax
10000e170:	4c 01 f8	addq	%r15, %rax
10000e173:	4c 8d 34 40	leaq	(%rax,%rax,2), %r14
10000e177:	4c 89 f7	movq	%r14, %rdi
10000e17a:	e8 33 13 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000e17f:	48 8b 0d 62 4a 04 00	movq	281186(%rip), %rcx
10000e186:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10000e18a:	48 8b 0d 97 4a 04 00	movq	281239(%rip), %rcx
10000e191:	48 8b 34 0b	movq	(%rbx,%rcx), %rsi
10000e195:	48 89 c7	movq	%rax, %rdi
10000e198:	4c 89 f2	movq	%r14, %rdx
10000e19b:	e8 18 13 02 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
10000e1a0:	47 8d 34 7f	leal	(%r15,%r15,2), %r14d
10000e1a4:	49 c1 e6 02	shlq	$2, %r14
10000e1a8:	4c 89 f7	movq	%r14, %rdi
10000e1ab:	e8 02 13 02 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10000e1b0:	48 8b 0d 39 4a 04 00	movq	281145(%rip), %rcx
10000e1b7:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10000e1bb:	48 8b 0d 7e 4a 04 00	movq	281214(%rip), %rcx
10000e1c2:	48 8b 34 0b	movq	(%rbx,%rcx), %rsi
10000e1c6:	48 89 c7	movq	%rax, %rdi
10000e1c9:	4c 89 f2	movq	%r14, %rdx
10000e1cc:	48 83 c4 08	addq	$8, %rsp
10000e1d0:	5b	popq	%rbx
10000e1d1:	41 5e	popq	%r14
10000e1d3:	41 5f	popq	%r15
10000e1d5:	5d	popq	%rbp
10000e1d6:	e9 dd 12 02 00	jmp	0x10002f4b8 ## symbol stub for: _memcpy
10000e1db:	48 83 c4 08	addq	$8, %rsp
10000e1df:	5b	popq	%rbx
10000e1e0:	41 5e	popq	%r14
10000e1e2:	41 5f	popq	%r15
10000e1e4:	5d	popq	%rbp
10000e1e5:	c3	retq
10000e1e6:	55	pushq	%rbp
10000e1e7:	48 89 e5	movq	%rsp, %rbp
10000e1ea:	41 56	pushq	%r14
10000e1ec:	53	pushq	%rbx
10000e1ed:	48 8b 05 ec 49 04 00	movq	281068(%rip), %rax
10000e1f4:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000e1f8:	74 2c	je	0x10000e226
10000e1fa:	48 89 fb	movq	%rdi, %rbx
10000e1fd:	48 8b 35 ac 30 04 00	movq	274604(%rip), %rsi ## Objc selector ref: freeHoldData
10000e204:	4c 8b 35 15 ea 02 00	movq	190997(%rip), %r14 ## Objc message: -[%rdi freeHoldData]
10000e20b:	41 ff d6	callq	*%r14
10000e20e:	48 8b 35 b3 3d 04 00	movq	277939(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000e215:	48 89 df	movq	%rbx, %rdi
10000e218:	ba 01 00 00 00	movl	$1, %edx
10000e21d:	4c 89 f0	movq	%r14, %rax
10000e220:	5b	popq	%rbx
10000e221:	41 5e	popq	%r14
10000e223:	5d	popq	%rbp
10000e224:	ff e0	jmpq	*%rax
10000e226:	5b	popq	%rbx
10000e227:	41 5e	popq	%r14
10000e229:	5d	popq	%rbp
10000e22a:	c3	retq
10000e22b:	55	pushq	%rbp
10000e22c:	48 89 e5	movq	%rsp, %rbp
10000e22f:	48 8b 05 32 4a 04 00	movq	281138(%rip), %rax
10000e236:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
10000e23a:	0f 94 04 07	sete	(%rdi,%rax)
10000e23e:	48 8b 35 83 3d 04 00	movq	277891(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000e245:	ba 01 00 00 00	movl	$1, %edx
10000e24a:	5d	popq	%rbp
10000e24b:	ff 25 cf e9 02 00	jmpq	*190927(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
10000e251:	55	pushq	%rbp
10000e252:	48 89 e5	movq	%rsp, %rbp
10000e255:	41 57	pushq	%r15
10000e257:	41 56	pushq	%r14
10000e259:	41 55	pushq	%r13
10000e25b:	41 54	pushq	%r12
10000e25d:	53	pushq	%rbx
10000e25e:	50	pushq	%rax
10000e25f:	49 89 ff	movq	%rdi, %r15
10000e262:	48 8b 05 8f 49 04 00	movq	280975(%rip), %rax
10000e269:	83 3c 07 00	cmpl	$0, (%rdi,%rax)
10000e26d:	48 8b 05 8c 49 04 00	movq	280972(%rip), %rax
10000e274:	75 0b	jne	0x10000e281
10000e276:	41 83 3c 07 00	cmpl	$0, (%r15,%rax)
10000e27b:	0f 84 20 05 00 00	je	0x10000e7a1
10000e281:	48 8b 3d d0 43 04 00	movq	279504(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMenu
10000e288:	e8 31 12 02 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10000e28d:	48 8b 35 1c 32 04 00	movq	274972(%rip), %rsi ## Objc selector ref: initWithTitle:
10000e294:	48 8d 15 c5 f2 02 00	leaq	193221(%rip), %rdx ## Objc cfstring ref: @"pop"
10000e29b:	4c 8b 2d 7e e9 02 00	movq	190846(%rip), %r13 ## Objc message: +[NSMenu initWithTitle:]
10000e2a2:	48 89 c7	movq	%rax, %rdi
10000e2a5:	41 ff d5	callq	*%r13
10000e2a8:	48 89 c7	movq	%rax, %rdi
10000e2ab:	e8 1a 12 02 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10000e2b0:	49 89 c6	movq	%rax, %r14
10000e2b3:	48 8b 1d e6 42 04 00	movq	279270(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e2ba:	4c 89 ff	movq	%r15, %rdi
10000e2bd:	e8 26 12 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e2c2:	48 8b 35 27 2b 04 00	movq	273191(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e2c9:	48 89 df	movq	%rbx, %rdi
10000e2cc:	48 89 c2	movq	%rax, %rdx
10000e2cf:	41 ff d5	callq	*%r13
10000e2d2:	48 8b 35 87 33 04 00	movq	275335(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e2d9:	48 8d 15 a0 f2 02 00	leaq	193184(%rip), %rdx ## Objc cfstring ref: @"Lab"
10000e2e0:	4c 8d 25 b9 eb 02 00	leaq	191417(%rip), %r12 ## Objc cfstring ref: @""
10000e2e7:	48 89 c7	movq	%rax, %rdi
10000e2ea:	4c 89 e1	movq	%r12, %rcx
10000e2ed:	45 31 c0	xorl	%r8d, %r8d
10000e2f0:	41 ff d5	callq	*%r13
10000e2f3:	48 8b 0d 66 2b 04 00	movq	273254(%rip), %rcx ## Objc selector ref: changePlotSpace:
10000e2fa:	48 8b 35 67 29 04 00	movq	272743(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e301:	4c 89 f7	movq	%r14, %rdi
10000e304:	48 89 c2	movq	%rax, %rdx
10000e307:	4d 89 e0	movq	%r12, %r8
10000e30a:	41 ff d5	callq	*%r13
10000e30d:	48 89 c3	movq	%rax, %rbx
10000e310:	48 8b 35 e9 3d 04 00	movq	277993(%rip), %rsi ## Objc selector ref: setTarget:
10000e317:	48 89 c7	movq	%rax, %rdi
10000e31a:	4c 89 fa	movq	%r15, %rdx
10000e31d:	41 ff d5	callq	*%r13
10000e320:	48 8b 35 d1 3d 04 00	movq	277969(%rip), %rsi ## Objc selector ref: setTag:
10000e327:	ba 20 62 61 4c	movl	$1281450528, %edx
10000e32c:	48 89 df	movq	%rbx, %rdi
10000e32f:	41 ff d5	callq	*%r13
10000e332:	48 8b 05 87 48 04 00	movq	280711(%rip), %rax
10000e339:	31 d2	xorl	%edx, %edx
10000e33b:	41 81 3c 07 20 62 61 4c	cmpl	$1281450528, (%r15,%rax)
10000e343:	0f 94 c2	sete	%dl
10000e346:	48 8b 35 93 3d 04 00	movq	277907(%rip), %rsi ## Objc selector ref: setState:
10000e34d:	48 89 df	movq	%rbx, %rdi
10000e350:	41 ff d5	callq	*%r13
10000e353:	48 8b 1d 46 42 04 00	movq	279110(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e35a:	4c 89 ff	movq	%r15, %rdi
10000e35d:	e8 86 11 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e362:	48 89 df	movq	%rbx, %rdi
10000e365:	48 8b 35 84 2a 04 00	movq	273028(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e36c:	48 89 c2	movq	%rax, %rdx
10000e36f:	41 ff d5	callq	*%r13
10000e372:	48 8d 15 27 f2 02 00	leaq	193063(%rip), %rdx ## Objc cfstring ref: @"Luv"
10000e379:	48 89 c7	movq	%rax, %rdi
10000e37c:	48 8b 35 dd 32 04 00	movq	275165(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e383:	4c 89 e1	movq	%r12, %rcx
10000e386:	45 31 c0	xorl	%r8d, %r8d
10000e389:	41 ff d5	callq	*%r13
10000e38c:	4c 89 f7	movq	%r14, %rdi
10000e38f:	48 8b 35 d2 28 04 00	movq	272594(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e396:	48 89 c2	movq	%rax, %rdx
10000e399:	48 8b 0d c0 2a 04 00	movq	273088(%rip), %rcx ## Objc selector ref: changePlotSpace:
10000e3a0:	4d 89 e0	movq	%r12, %r8
10000e3a3:	41 ff d5	callq	*%r13
10000e3a6:	48 89 c3	movq	%rax, %rbx
10000e3a9:	48 89 c7	movq	%rax, %rdi
10000e3ac:	48 8b 35 4d 3d 04 00	movq	277837(%rip), %rsi ## Objc selector ref: setTarget:
10000e3b3:	4c 89 fa	movq	%r15, %rdx
10000e3b6:	41 ff d5	callq	*%r13
10000e3b9:	ba 20 76 75 4c	movl	$1282766368, %edx
10000e3be:	48 89 df	movq	%rbx, %rdi
10000e3c1:	48 8b 35 30 3d 04 00	movq	277808(%rip), %rsi ## Objc selector ref: setTag:
10000e3c8:	41 ff d5	callq	*%r13
10000e3cb:	31 d2	xorl	%edx, %edx
10000e3cd:	48 8b 05 ec 47 04 00	movq	280556(%rip), %rax
10000e3d4:	41 81 3c 07 20 76 75 4c	cmpl	$1282766368, (%r15,%rax)
10000e3dc:	0f 94 c2	sete	%dl
10000e3df:	48 89 df	movq	%rbx, %rdi
10000e3e2:	48 8b 35 f7 3c 04 00	movq	277751(%rip), %rsi ## Objc selector ref: setState:
10000e3e9:	41 ff d5	callq	*%r13
10000e3ec:	48 8b 1d ad 41 04 00	movq	278957(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e3f3:	4c 89 ff	movq	%r15, %rdi
10000e3f6:	e8 ed 10 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e3fb:	48 89 df	movq	%rbx, %rdi
10000e3fe:	48 8b 35 eb 29 04 00	movq	272875(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e405:	48 89 c2	movq	%rax, %rdx
10000e408:	41 ff d5	callq	*%r13
10000e40b:	48 8d 15 ae f1 02 00	leaq	192942(%rip), %rdx ## Objc cfstring ref: @"Yxy"
10000e412:	48 89 c7	movq	%rax, %rdi
10000e415:	48 8b 35 44 32 04 00	movq	275012(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e41c:	4c 89 e1	movq	%r12, %rcx
10000e41f:	45 31 c0	xorl	%r8d, %r8d
10000e422:	41 ff d5	callq	*%r13
10000e425:	4c 89 f7	movq	%r14, %rdi
10000e428:	48 8b 35 39 28 04 00	movq	272441(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e42f:	48 89 c2	movq	%rax, %rdx
10000e432:	48 8b 0d 27 2a 04 00	movq	272935(%rip), %rcx ## Objc selector ref: changePlotSpace:
10000e439:	4d 89 e0	movq	%r12, %r8
10000e43c:	41 ff d5	callq	*%r13
10000e43f:	48 89 c3	movq	%rax, %rbx
10000e442:	48 89 c7	movq	%rax, %rdi
10000e445:	48 8b 35 b4 3c 04 00	movq	277684(%rip), %rsi ## Objc selector ref: setTarget:
10000e44c:	4c 89 fa	movq	%r15, %rdx
10000e44f:	41 ff d5	callq	*%r13
10000e452:	ba 20 79 78 59	movl	$1501067552, %edx
10000e457:	48 89 df	movq	%rbx, %rdi
10000e45a:	48 8b 35 97 3c 04 00	movq	277655(%rip), %rsi ## Objc selector ref: setTag:
10000e461:	41 ff d5	callq	*%r13
10000e464:	31 d2	xorl	%edx, %edx
10000e466:	48 8b 05 53 47 04 00	movq	280403(%rip), %rax
10000e46d:	41 81 3c 07 20 79 78 59	cmpl	$1501067552, (%r15,%rax)
10000e475:	0f 94 c2	sete	%dl
10000e478:	48 89 df	movq	%rbx, %rdi
10000e47b:	48 8b 35 5e 3c 04 00	movq	277598(%rip), %rsi ## Objc selector ref: setState:
10000e482:	41 ff d5	callq	*%r13
10000e485:	48 8b 1d 14 41 04 00	movq	278804(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e48c:	4c 89 ff	movq	%r15, %rdi
10000e48f:	e8 54 10 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e494:	48 89 df	movq	%rbx, %rdi
10000e497:	48 8b 35 52 29 04 00	movq	272722(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e49e:	48 89 c2	movq	%rax, %rdx
10000e4a1:	41 ff d5	callq	*%r13
10000e4a4:	48 8d 15 35 f1 02 00	leaq	192821(%rip), %rdx ## Objc cfstring ref: @"Yuv"
10000e4ab:	48 89 c7	movq	%rax, %rdi
10000e4ae:	48 8b 35 ab 31 04 00	movq	274859(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e4b5:	4c 89 e1	movq	%r12, %rcx
10000e4b8:	45 31 c0	xorl	%r8d, %r8d
10000e4bb:	41 ff d5	callq	*%r13
10000e4be:	4c 89 f7	movq	%r14, %rdi
10000e4c1:	48 8b 35 a0 27 04 00	movq	272288(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e4c8:	48 89 c2	movq	%rax, %rdx
10000e4cb:	48 8b 0d 8e 29 04 00	movq	272782(%rip), %rcx ## Objc selector ref: changePlotSpace:
10000e4d2:	4d 89 e0	movq	%r12, %r8
10000e4d5:	41 ff d5	callq	*%r13
10000e4d8:	48 89 c3	movq	%rax, %rbx
10000e4db:	48 89 c7	movq	%rax, %rdi
10000e4de:	48 8b 35 1b 3c 04 00	movq	277531(%rip), %rsi ## Objc selector ref: setTarget:
10000e4e5:	4c 89 fa	movq	%r15, %rdx
10000e4e8:	41 ff d5	callq	*%r13
10000e4eb:	ba 20 76 75 59	movl	$1500870176, %edx
10000e4f0:	48 89 df	movq	%rbx, %rdi
10000e4f3:	48 8b 35 fe 3b 04 00	movq	277502(%rip), %rsi ## Objc selector ref: setTag:
10000e4fa:	41 ff d5	callq	*%r13
10000e4fd:	31 d2	xorl	%edx, %edx
10000e4ff:	48 8b 05 ba 46 04 00	movq	280250(%rip), %rax
10000e506:	41 81 3c 07 20 76 75 59	cmpl	$1500870176, (%r15,%rax)
10000e50e:	0f 94 c2	sete	%dl
10000e511:	48 89 df	movq	%rbx, %rdi
10000e514:	48 8b 35 c5 3b 04 00	movq	277445(%rip), %rsi ## Objc selector ref: setState:
10000e51b:	41 ff d5	callq	*%r13
10000e51e:	48 8b 1d 7b 40 04 00	movq	278651(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e525:	4c 89 ff	movq	%r15, %rdi
10000e528:	e8 bb 0f 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e52d:	48 89 df	movq	%rbx, %rdi
10000e530:	48 8b 35 b9 28 04 00	movq	272569(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e537:	48 89 c2	movq	%rax, %rdx
10000e53a:	41 ff d5	callq	*%r13
10000e53d:	48 8d 15 bc f0 02 00	leaq	192700(%rip), %rdx ## Objc cfstring ref: @"XYZ"
10000e544:	48 89 c7	movq	%rax, %rdi
10000e547:	48 8b 35 12 31 04 00	movq	274706(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e54e:	4c 89 e1	movq	%r12, %rcx
10000e551:	45 31 c0	xorl	%r8d, %r8d
10000e554:	41 ff d5	callq	*%r13
10000e557:	4c 89 f7	movq	%r14, %rdi
10000e55a:	48 8b 35 07 27 04 00	movq	272135(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e561:	48 89 c2	movq	%rax, %rdx
10000e564:	48 8b 0d f5 28 04 00	movq	272629(%rip), %rcx ## Objc selector ref: changePlotSpace:
10000e56b:	4d 89 e0	movq	%r12, %r8
10000e56e:	41 ff d5	callq	*%r13
10000e571:	48 89 c3	movq	%rax, %rbx
10000e574:	48 89 c7	movq	%rax, %rdi
10000e577:	48 8b 35 82 3b 04 00	movq	277378(%rip), %rsi ## Objc selector ref: setTarget:
10000e57e:	4c 89 fa	movq	%r15, %rdx
10000e581:	41 ff d5	callq	*%r13
10000e584:	ba 20 5a 59 58	movl	$1482250784, %edx
10000e589:	48 89 df	movq	%rbx, %rdi
10000e58c:	48 8b 35 65 3b 04 00	movq	277349(%rip), %rsi ## Objc selector ref: setTag:
10000e593:	41 ff d5	callq	*%r13
10000e596:	31 d2	xorl	%edx, %edx
10000e598:	48 8b 05 21 46 04 00	movq	280097(%rip), %rax
10000e59f:	41 81 3c 07 20 5a 59 58	cmpl	$1482250784, (%r15,%rax)
10000e5a7:	0f 94 c2	sete	%dl
10000e5aa:	48 89 df	movq	%rbx, %rdi
10000e5ad:	48 8b 35 2c 3b 04 00	movq	277292(%rip), %rsi ## Objc selector ref: setState:
10000e5b4:	41 ff d5	callq	*%r13
10000e5b7:	48 8b 3d a2 40 04 00	movq	278690(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMenuItem
10000e5be:	48 8b 35 9b 36 04 00	movq	276123(%rip), %rsi ## Objc selector ref: separatorItem
10000e5c5:	41 ff d5	callq	*%r13
10000e5c8:	48 8b 35 89 26 04 00	movq	272009(%rip), %rsi ## Objc selector ref: addItem:
10000e5cf:	4c 89 f7	movq	%r14, %rdi
10000e5d2:	48 89 c2	movq	%rax, %rdx
10000e5d5:	41 ff d5	callq	*%r13
10000e5d8:	48 8b 1d c1 3f 04 00	movq	278465(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e5df:	4c 89 ff	movq	%r15, %rdi
10000e5e2:	e8 01 0f 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e5e7:	48 89 df	movq	%rbx, %rdi
10000e5ea:	48 8b 35 ff 27 04 00	movq	272383(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e5f1:	48 89 c2	movq	%rax, %rdx
10000e5f4:	41 ff d5	callq	*%r13
10000e5f7:	48 8d 15 22 f0 02 00	leaq	192546(%rip), %rdx ## Objc cfstring ref: @"Hold for Comparison"
10000e5fe:	48 89 c7	movq	%rax, %rdi
10000e601:	48 8b 35 58 30 04 00	movq	274520(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e608:	4c 89 e1	movq	%r12, %rcx
10000e60b:	45 31 c0	xorl	%r8d, %r8d
10000e60e:	41 ff d5	callq	*%r13
10000e611:	48 8b 0d f8 28 04 00	movq	272632(%rip), %rcx ## Objc selector ref: compareHold:
10000e618:	4c 89 f7	movq	%r14, %rdi
10000e61b:	48 8b 35 46 26 04 00	movq	271942(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e622:	48 89 c2	movq	%rax, %rdx
10000e625:	4d 89 e0	movq	%r12, %r8
10000e628:	4c 8b 25 d1 3a 04 00	movq	277201(%rip), %r12 ## Objc selector ref: setTarget:
10000e62f:	41 ff d5	callq	*%r13
10000e632:	48 89 c3	movq	%rax, %rbx
10000e635:	48 89 c7	movq	%rax, %rdi
10000e638:	4c 89 e6	movq	%r12, %rsi
10000e63b:	4c 89 fa	movq	%r15, %rdx
10000e63e:	41 ff d5	callq	*%r13
10000e641:	48 8b 05 b8 45 04 00	movq	279992(%rip), %rax
10000e648:	41 83 3c 07 00	cmpl	$0, (%r15,%rax)
10000e64d:	75 12	jne	0x10000e661
10000e64f:	48 8b 35 22 36 04 00	movq	276002(%rip), %rsi ## Objc selector ref: setAction:
10000e656:	48 89 df	movq	%rbx, %rdi
10000e659:	31 d2	xorl	%edx, %edx
10000e65b:	ff 15 bf e5 02 00	callq	*189887(%rip) ## Objc message: +[NSBundle setAction:]
10000e661:	48 8b 1d 38 3f 04 00	movq	278328(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e668:	4c 89 ff	movq	%r15, %rdi
10000e66b:	e8 78 0e 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e670:	48 89 df	movq	%rbx, %rdi
10000e673:	48 8b 35 76 27 04 00	movq	272246(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e67a:	48 89 c2	movq	%rax, %rdx
10000e67d:	41 ff d5	callq	*%r13
10000e680:	48 8d 15 b9 ef 02 00	leaq	192441(%rip), %rdx ## Objc cfstring ref: @"Clear Comparison"
10000e687:	48 8d 1d 12 e8 02 00	leaq	190482(%rip), %rbx ## Objc cfstring ref: @""
10000e68e:	48 89 c7	movq	%rax, %rdi
10000e691:	48 8b 35 c8 2f 04 00	movq	274376(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e698:	48 89 d9	movq	%rbx, %rcx
10000e69b:	45 31 c0	xorl	%r8d, %r8d
10000e69e:	41 ff d5	callq	*%r13
10000e6a1:	48 8b 0d 60 28 04 00	movq	272480(%rip), %rcx ## Objc selector ref: compareClear:
10000e6a8:	4c 89 f7	movq	%r14, %rdi
10000e6ab:	48 8b 35 b6 25 04 00	movq	271798(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e6b2:	48 89 c2	movq	%rax, %rdx
10000e6b5:	49 89 d8	movq	%rbx, %r8
10000e6b8:	41 ff d5	callq	*%r13
10000e6bb:	48 89 c3	movq	%rax, %rbx
10000e6be:	48 89 c7	movq	%rax, %rdi
10000e6c1:	4c 89 e6	movq	%r12, %rsi
10000e6c4:	4c 89 fa	movq	%r15, %rdx
10000e6c7:	41 ff d5	callq	*%r13
10000e6ca:	48 8b 05 0f 45 04 00	movq	279823(%rip), %rax
10000e6d1:	41 83 3c 07 00	cmpl	$0, (%r15,%rax)
10000e6d6:	75 12	jne	0x10000e6ea
10000e6d8:	48 8b 35 99 35 04 00	movq	275865(%rip), %rsi ## Objc selector ref: setAction:
10000e6df:	48 89 df	movq	%rbx, %rdi
10000e6e2:	31 d2	xorl	%edx, %edx
10000e6e4:	ff 15 36 e5 02 00	callq	*189750(%rip) ## Objc message: +[NSBundle setAction:]
10000e6ea:	48 8b 3d 6f 3f 04 00	movq	278383(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMenuItem
10000e6f1:	48 8b 35 68 35 04 00	movq	275816(%rip), %rsi ## Objc selector ref: separatorItem
10000e6f8:	41 ff d5	callq	*%r13
10000e6fb:	4c 89 f7	movq	%r14, %rdi
10000e6fe:	48 8b 35 53 25 04 00	movq	271699(%rip), %rsi ## Objc selector ref: addItem:
10000e705:	48 89 c2	movq	%rax, %rdx
10000e708:	41 ff d5	callq	*%r13
10000e70b:	48 8b 05 56 45 04 00	movq	279894(%rip), %rax
10000e712:	41 80 3c 07 00	cmpb	$0, (%r15,%rax)
10000e717:	4c 8b 25 82 3e 04 00	movq	278146(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSBundle
10000e71e:	48 8d 05 5b ef 02 00	leaq	192347(%rip), %rax ## Objc cfstring ref: @"Show Spectrum"
10000e725:	48 8d 1d 34 ef 02 00	leaq	192308(%rip), %rbx ## Objc cfstring ref: @"Hide spectrum"
10000e72c:	48 0f 44 d8	cmoveq	%rax, %rbx
10000e730:	4c 89 ff	movq	%r15, %rdi
10000e733:	e8 b0 0d 02 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10000e738:	4c 89 e7	movq	%r12, %rdi
10000e73b:	48 8b 35 ae 26 04 00	movq	272046(%rip), %rsi ## Objc selector ref: bundleForClass:
10000e742:	48 89 c2	movq	%rax, %rdx
10000e745:	41 ff d5	callq	*%r13
10000e748:	4c 8d 25 51 e7 02 00	leaq	190289(%rip), %r12 ## Objc cfstring ref: @""
10000e74f:	48 89 c7	movq	%rax, %rdi
10000e752:	48 8b 35 07 2f 04 00	movq	274183(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10000e759:	48 89 da	movq	%rbx, %rdx
10000e75c:	4c 89 e1	movq	%r12, %rcx
10000e75f:	45 31 c0	xorl	%r8d, %r8d
10000e762:	41 ff d5	callq	*%r13
10000e765:	48 8b 0d 3c 3b 04 00	movq	277308(%rip), %rcx ## Objc selector ref: spectrumShowHide:
10000e76c:	4c 89 f7	movq	%r14, %rdi
10000e76f:	48 8b 35 f2 24 04 00	movq	271602(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
10000e776:	48 89 c2	movq	%rax, %rdx
10000e779:	4d 89 e0	movq	%r12, %r8
10000e77c:	41 ff d5	callq	*%r13
10000e77f:	48 89 c7	movq	%rax, %rdi
10000e782:	48 8b 35 77 39 04 00	movq	276855(%rip), %rsi ## Objc selector ref: setTarget:
10000e789:	4c 89 fa	movq	%r15, %rdx
10000e78c:	41 ff d5	callq	*%r13
10000e78f:	4c 89 f0	movq	%r14, %rax
10000e792:	48 83 c4 08	addq	$8, %rsp
10000e796:	5b	popq	%rbx
10000e797:	41 5c	popq	%r12
10000e799:	41 5d	popq	%r13
10000e79b:	41 5e	popq	%r14
10000e79d:	41 5f	popq	%r15
10000e79f:	5d	popq	%rbp
10000e7a0:	c3	retq
10000e7a1:	45 31 f6	xorl	%r14d, %r14d
10000e7a4:	eb e9	jmp	0x10000e78f
10000e7a6:	55	pushq	%rbp
10000e7a7:	48 89 e5	movq	%rsp, %rbp
10000e7aa:	41 57	pushq	%r15
10000e7ac:	41 56	pushq	%r14
10000e7ae:	41 55	pushq	%r13
10000e7b0:	41 54	pushq	%r12
10000e7b2:	53	pushq	%rbx
10000e7b3:	48 83 ec 28	subq	$40, %rsp
10000e7b7:	48 89 55 d0	movq	%rdx, -48(%rbp)
10000e7bb:	49 89 f7	movq	%rsi, %r15
10000e7be:	49 89 fc	movq	%rdi, %r12
10000e7c1:	48 8d 5d b8	leaq	-72(%rbp), %rbx
10000e7c5:	4c 8d 6d c0	leaq	-64(%rbp), %r13
10000e7c9:	4c 8d 75 c8	leaq	-56(%rbp), %r14
10000e7cd:	48 89 df	movq	%rbx, %rdi
10000e7d0:	4c 89 ee	movq	%r13, %rsi
10000e7d3:	4c 89 f2	movq	%r14, %rdx
10000e7d6:	e8 78 a0 ff ff	callq	0x100008853
10000e7db:	f2 0f 10 1b	movsd	(%rbx), %xmm3
10000e7df:	f2 41 0f 10 65 00	movsd	(%r13), %xmm4
10000e7e5:	f2 41 0f 10 16	movsd	(%r14), %xmm2
10000e7ea:	f2 0f 10 05 76 9c 02 00	movsd	171126(%rip), %xmm0
10000e7f2:	f2 0f 59 c4	mulsd	%xmm4, %xmm0
10000e7f6:	f2 0f 10 0d 72 9c 02 00	movsd	171122(%rip), %xmm1
10000e7fe:	f2 0f 59 cb	mulsd	%xmm3, %xmm1
10000e802:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10000e806:	f2 0f 10 05 6a 9c 02 00	movsd	171114(%rip), %xmm0
10000e80e:	f2 0f 59 c2	mulsd	%xmm2, %xmm0
10000e812:	f2 0f 58 c1	addsd	%xmm1, %xmm0
10000e816:	f2 0f 10 0d 62 9c 02 00	movsd	171106(%rip), %xmm1
10000e81e:	f2 0f 59 cc	mulsd	%xmm4, %xmm1
10000e822:	f2 0f 10 2d 5e 9c 02 00	movsd	171102(%rip), %xmm5
10000e82a:	f2 0f 59 eb	mulsd	%xmm3, %xmm5
10000e82e:	f2 0f 58 e9	addsd	%xmm1, %xmm5
10000e832:	f2 0f 10 0d 56 9c 02 00	movsd	171094(%rip), %xmm1
10000e83a:	f2 0f 59 ca	mulsd	%xmm2, %xmm1
10000e83e:	f2 0f 58 cd	addsd	%xmm5, %xmm1
10000e842:	f2 0f 59 25 4e 9c 02 00	mulsd	171086(%rip), %xmm4
10000e84a:	f2 0f 59 1d 4e 9c 02 00	mulsd	171086(%rip), %xmm3
10000e852:	f2 0f 58 dc	addsd	%xmm4, %xmm3
10000e856:	f2 0f 59 15 4a 9c 02 00	mulsd	171082(%rip), %xmm2
10000e85e:	f2 0f 58 d3	addsd	%xmm3, %xmm2
10000e862:	4c 89 e7	movq	%r12, %rdi
10000e865:	4c 89 fe	movq	%r15, %rsi
10000e868:	48 8b 55 d0	movq	-48(%rbp), %rdx
10000e86c:	e8 0f 00 00 00	callq	0x10000e880
10000e871:	48 83 c4 28	addq	$40, %rsp
10000e875:	5b	popq	%rbx
10000e876:	41 5c	popq	%r12
10000e878:	41 5d	popq	%r13
10000e87a:	41 5e	popq	%r14
10000e87c:	41 5f	popq	%r15
10000e87e:	5d	popq	%rbp
10000e87f:	c3	retq
10000e880:	55	pushq	%rbp
10000e881:	48 89 e5	movq	%rsp, %rbp
10000e884:	41 57	pushq	%r15
10000e886:	41 56	pushq	%r14
10000e888:	41 54	pushq	%r12
10000e88a:	53	pushq	%rbx
10000e88b:	48 83 ec 20	subq	$32, %rsp
10000e88f:	49 89 d6	movq	%rdx, %r14
10000e892:	49 89 f7	movq	%rsi, %r15
10000e895:	49 89 fc	movq	%rdi, %r12
10000e898:	f2 0f 10 1d 78 97 02 00	movsd	169848(%rip), %xmm3
10000e8a0:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
10000e8a4:	f2 0f 10 25 0c 98 02 00	movsd	169996(%rip), %xmm4
10000e8ac:	f2 0f 59 e0	mulsd	%xmm0, %xmm4
10000e8b0:	f2 0f 58 e3	addsd	%xmm3, %xmm4
10000e8b4:	f2 44 0f 10 0d 6b 97 02 00	movsd	169835(%rip), %xmm9
10000e8bd:	f2 44 0f 59 ca	mulsd	%xmm2, %xmm9
10000e8c2:	f2 44 0f 58 cc	addsd	%xmm4, %xmm9
10000e8c7:	f2 44 0f 59 0d 28 9c 02 00	mulsd	171048(%rip), %xmm9
10000e8d0:	f2 44 0f 58 0d 27 9c 02 00	addsd	171047(%rip), %xmm9
10000e8d9:	f2 44 0f 10 1d 26 97 02 00	movsd	169766(%rip), %xmm11
10000e8e2:	31 c9	xorl	%ecx, %ecx
10000e8e4:	66 45 0f 57 d2	xorpd	%xmm10, %xmm10
10000e8e9:	66 44 0f 28 05 fe 96 02 00	movapd	169726(%rip), %xmm8
10000e8f2:	66 41 0f 28 db	movapd	%xmm11, %xmm3
10000e8f7:	66 41 0f 28 eb	movapd	%xmm11, %xmm5
10000e8fc:	f2 0f 5c eb	subsd	%xmm3, %xmm5
10000e900:	f2 41 0f 59 e9	mulsd	%xmm9, %xmm5
10000e905:	66 0f 28 f3	movapd	%xmm3, %xmm6
10000e909:	f2 0f 59 f0	mulsd	%xmm0, %xmm6
10000e90d:	f2 0f 58 f5	addsd	%xmm5, %xmm6
10000e911:	66 0f 28 e3	movapd	%xmm3, %xmm4
10000e915:	f2 0f 59 e1	mulsd	%xmm1, %xmm4
10000e919:	f2 0f 58 e5	addsd	%xmm5, %xmm4
10000e91d:	66 44 0f 28 e3	movapd	%xmm3, %xmm12
10000e922:	f2 44 0f 59 e2	mulsd	%xmm2, %xmm12
10000e927:	f2 44 0f 58 e5	addsd	%xmm5, %xmm12
10000e92c:	66 41 0f 28 eb	movapd	%xmm11, %xmm5
10000e931:	66 0f c2 ee 01	cmpltpd	%xmm6, %xmm5
10000e936:	66 0f 28 fe	movapd	%xmm6, %xmm7
10000e93a:	66 41 0f c2 fa 01	cmpltpd	%xmm10, %xmm7
10000e940:	66 0f 56 fd	orpd	%xmm5, %xmm7
10000e944:	66 44 0f 2e d4	ucomisd	%xmm4, %xmm10
10000e949:	0f 97 c0	seta	%al
10000e94c:	66 41 0f 2e e3	ucomisd	%xmm11, %xmm4
10000e951:	0f 97 c2	seta	%dl
10000e954:	66 0f 7e fe	movd	%xmm7, %esi
10000e958:	08 c2	orb	%al, %dl
10000e95a:	66 45 0f 2e d4	ucomisd	%xmm12, %xmm10
10000e95f:	0f 97 c3	seta	%bl
10000e962:	08 d3	orb	%dl, %bl
10000e964:	40 08 f3	orb	%sil, %bl
10000e967:	66 45 0f 2e e3	ucomisd	%xmm11, %xmm12
10000e96c:	0f 97 c0	seta	%al
10000e96f:	ba 02 00 00 00	movl	$2, %edx
10000e974:	d3 e2	shll	%cl, %edx
10000e976:	0f 57 ed	xorps	%xmm5, %xmm5
10000e979:	f3 0f 2a ea	cvtsi2ss	%edx, %xmm5
10000e97d:	08 d8	orb	%bl, %al
10000e97f:	0f 57 ff	xorps	%xmm7, %xmm7
10000e982:	f3 0f 5a fd	cvtss2sd	%xmm5, %xmm7
10000e986:	66 41 0f 28 eb	movapd	%xmm11, %xmm5
10000e98b:	f2 0f 5e ef	divsd	%xmm7, %xmm5
10000e98f:	a8 01	testb	$1, %al
10000e991:	74 05	je	0x10000e998
10000e993:	66 41 0f 57 e8	xorpd	%xmm8, %xmm5
10000e998:	85 c9	testl	%ecx, %ecx
10000e99a:	0f 95 c2	setne	%dl
10000e99d:	83 f9 0d	cmpl	$13, %ecx
10000e9a0:	77 11	ja	0x10000e9b3
10000e9a2:	ff c1	incl	%ecx
10000e9a4:	f2 0f 58 dd	addsd	%xmm5, %xmm3
10000e9a8:	08 c2	orb	%al, %dl
10000e9aa:	f6 c2 01	testb	$1, %dl
10000e9ad:	0f 85 44 ff ff ff	jne	0x10000e8f7
10000e9b3:	f2 0f 10 05 4d 96 02 00	movsd	169549(%rip), %xmm0
10000e9bb:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000e9bf:	4d 85 e4	testq	%r12, %r12
10000e9c2:	66 44 0f 29 65 d0	movapd	%xmm12, -48(%rbp)
10000e9c8:	74 48	je	0x10000ea12
10000e9ca:	f2 0f 10 05 36 96 02 00	movsd	169526(%rip), %xmm0
10000e9d2:	f2 0f 5d c6	minsd	%xmm6, %xmm0
10000e9d6:	f2 0f c2 f1 01	cmpltsd	%xmm1, %xmm6
10000e9db:	66 0f 55 f0	andnpd	%xmm0, %xmm6
10000e9df:	f2 0f 10 0d c9 96 02 00	movsd	169673(%rip), %xmm1
10000e9e7:	66 0f 28 c6	movapd	%xmm6, %xmm0
10000e9eb:	66 0f 29 65 c0	movapd	%xmm4, -64(%rbp)
10000e9f0:	e8 17 0b 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000e9f5:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000e9f9:	66 0f 28 65 c0	movapd	-64(%rbp), %xmm4
10000e9fe:	66 44 0f 28 65 d0	movapd	-48(%rbp), %xmm12
10000ea04:	f2 41 0f 11 04 24	movsd	%xmm0, (%r12)
10000ea0a:	f2 0f 10 05 f6 95 02 00	movsd	169462(%rip), %xmm0
10000ea12:	4d 85 ff	testq	%r15, %r15
10000ea15:	74 3d	je	0x10000ea54
10000ea17:	f2 0f 10 05 e9 95 02 00	movsd	169449(%rip), %xmm0
10000ea1f:	f2 0f 5d c4	minsd	%xmm4, %xmm0
10000ea23:	f2 0f c2 e1 01	cmpltsd	%xmm1, %xmm4
10000ea28:	66 0f 55 e0	andnpd	%xmm0, %xmm4
10000ea2c:	f2 0f 10 0d 7c 96 02 00	movsd	169596(%rip), %xmm1
10000ea34:	66 0f 28 c4	movapd	%xmm4, %xmm0
10000ea38:	e8 cf 0a 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000ea3d:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000ea41:	66 44 0f 28 65 d0	movapd	-48(%rbp), %xmm12
10000ea47:	f2 41 0f 11 07	movsd	%xmm0, (%r15)
10000ea4c:	f2 0f 10 05 b4 95 02 00	movsd	169396(%rip), %xmm0
10000ea54:	4d 85 f6	testq	%r14, %r14
10000ea57:	74 27	je	0x10000ea80
10000ea59:	f2 41 0f 5d c4	minsd	%xmm12, %xmm0
10000ea5e:	f2 44 0f c2 e1 01	cmpltsd	%xmm1, %xmm12
10000ea64:	66 44 0f 55 e0	andnpd	%xmm0, %xmm12
10000ea69:	f2 0f 10 0d 3f 96 02 00	movsd	169535(%rip), %xmm1
10000ea71:	66 41 0f 28 c4	movapd	%xmm12, %xmm0
10000ea76:	e8 91 0a 02 00	callq	0x10002f50c ## symbol stub for: _pow
10000ea7b:	f2 41 0f 11 06	movsd	%xmm0, (%r14)
10000ea80:	48 83 c4 20	addq	$32, %rsp
10000ea84:	5b	popq	%rbx
10000ea85:	41 5c	popq	%r12
10000ea87:	41 5e	popq	%r14
10000ea89:	41 5f	popq	%r15
10000ea8b:	5d	popq	%rbp
10000ea8c:	c3	retq
10000ea8d:	90	nop
10000ea8e:	90	nop
10000ea8f:	90	nop
10000ea90:	55	pushq	%rbp
10000ea91:	48 89 e5	movq	%rsp, %rbp
10000ea94:	41 56	pushq	%r14
10000ea96:	53	pushq	%rbx
10000ea97:	48 83 ec 10	subq	$16, %rsp
10000ea9b:	48 89 fb	movq	%rdi, %rbx
10000ea9e:	48 8b 3d 6b 3b 04 00	movq	277355(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
10000eaa5:	48 8b 35 ac 25 04 00	movq	271788(%rip), %rsi ## Objc selector ref: defaultCenter
10000eaac:	4c 8b 35 6d e1 02 00	movq	188781(%rip), %r14 ## Objc message: +[NSNotificationCenter defaultCenter]
10000eab3:	41 ff d6	callq	*%r14
10000eab6:	48 8b 35 43 30 04 00	movq	274499(%rip), %rsi ## Objc selector ref: removeObserver:
10000eabd:	48 89 c7	movq	%rax, %rdi
10000eac0:	48 89 da	movq	%rbx, %rdx
10000eac3:	41 ff d6	callq	*%r14
10000eac6:	48 8b 05 a3 41 04 00	movq	278947(%rip), %rax
10000eacd:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000ead1:	48 85 ff	testq	%rdi, %rdi
10000ead4:	74 05	je	0x10000eadb
10000ead6:	e8 37 04 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000eadb:	48 8b 05 96 41 04 00	movq	278934(%rip), %rax
10000eae2:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eae6:	ff 15 6c e1 02 00	callq	*188780(%rip) ## literal pool symbol address: _objc_release
10000eaec:	48 8b 05 8d 41 04 00	movq	278925(%rip), %rax
10000eaf3:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eaf7:	48 85 ff	testq	%rdi, %rdi
10000eafa:	74 05	je	0x10000eb01
10000eafc:	e8 d3 08 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000eb01:	48 8b 05 80 41 04 00	movq	278912(%rip), %rax
10000eb08:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eb0c:	48 85 ff	testq	%rdi, %rdi
10000eb0f:	74 05	je	0x10000eb16
10000eb11:	e8 72 06 02 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10000eb16:	48 8b 05 73 41 04 00	movq	278899(%rip), %rax
10000eb1d:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eb21:	48 85 ff	testq	%rdi, %rdi
10000eb24:	74 05	je	0x10000eb2b
10000eb26:	e8 f3 03 02 00	callq	0x10002ef1e ## symbol stub for: _CFRunLoopTimerInvalidate
10000eb2b:	48 8b 05 66 41 04 00	movq	278886(%rip), %rax
10000eb32:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eb36:	48 85 ff	testq	%rdi, %rdi
10000eb39:	74 05	je	0x10000eb40
10000eb3b:	e8 f2 04 02 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10000eb40:	48 8b 05 59 41 04 00	movq	278873(%rip), %rax
10000eb47:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000eb4b:	48 85 ff	testq	%rdi, %rdi
10000eb4e:	74 05	je	0x10000eb55
10000eb50:	e8 65 04 02 00	callq	0x10002efba ## symbol stub for: _CGColorCodeFragmentRelease
10000eb55:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10000eb59:	48 89 1f	movq	%rbx, (%rdi)
10000eb5c:	48 8b 05 85 3c 04 00	movq	277637(%rip), %rax ## Objc class ref: FilterPageView
10000eb63:	48 89 47 08	movq	%rax, 8(%rdi)
10000eb67:	48 8b 35 e2 24 04 00	movq	271586(%rip), %rsi ## Objc selector ref: dealloc
10000eb6e:	e8 69 09 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10000eb73:	48 83 c4 10	addq	$16, %rsp
10000eb77:	5b	popq	%rbx
10000eb78:	41 5e	popq	%r14
10000eb7a:	5d	popq	%rbp
10000eb7b:	c3	retq
10000eb7c:	55	pushq	%rbp
10000eb7d:	48 89 e5	movq	%rsp, %rbp
10000eb80:	41 57	pushq	%r15
10000eb82:	41 56	pushq	%r14
10000eb84:	41 55	pushq	%r13
10000eb86:	41 54	pushq	%r12
10000eb88:	53	pushq	%rbx
10000eb89:	48 83 ec 58	subq	$88, %rsp
10000eb8d:	48 89 fb	movq	%rdi, %rbx
10000eb90:	48 8d 7d c8	leaq	-56(%rbp), %rdi
10000eb94:	48 89 1f	movq	%rbx, (%rdi)
10000eb97:	48 8b 05 4a 3c 04 00	movq	277578(%rip), %rax ## Objc class ref: FilterPageView
10000eb9e:	48 89 47 08	movq	%rax, 8(%rdi)
10000eba2:	48 8b 35 a7 28 04 00	movq	272551(%rip), %rsi ## Objc selector ref: initWithFrame:
10000eba9:	0f 28 45 10	movaps	16(%rbp), %xmm0
10000ebad:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10000ebb1:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000ebb6:	0f 11 04 24	movups	%xmm0, (%rsp)
10000ebba:	e8 1d 09 02 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10000ebbf:	48 8b 3d a2 3a 04 00	movq	277154(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableDictionary
10000ebc6:	e8 f9 08 02 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10000ebcb:	49 89 c6	movq	%rax, %r14
10000ebce:	4c 8b 2d d3 40 04 00	movq	278739(%rip), %r13
10000ebd5:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
10000ebd9:	48 8b 3d 90 3a 04 00	movq	277136(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFont
10000ebe0:	48 8b 35 b1 26 04 00	movq	272049(%rip), %rsi ## Objc selector ref: fontWithName:size:
10000ebe7:	48 8d 15 d2 ea 02 00	leaq	191186(%rip), %rdx ## Objc cfstring ref: @"Helvetica"
10000ebee:	4c 8b 25 2b e0 02 00	movq	188459(%rip), %r12 ## Objc message: +[NSFont fontWithName:size:]
10000ebf5:	f2 0f 10 05 b3 98 02 00	movsd	170163(%rip), %xmm0
10000ebfd:	41 ff d4	callq	*%r12
10000ec00:	48 8b 0d 61 da 02 00	movq	186977(%rip), %rcx ## literal pool symbol address: _NSFontAttributeName
10000ec07:	48 8b 09	movq	(%rcx), %rcx
10000ec0a:	4c 8b 3d cf 33 04 00	movq	275407(%rip), %r15 ## Objc selector ref: setObject:forKey:
10000ec11:	4c 89 f7	movq	%r14, %rdi
10000ec14:	4c 89 fe	movq	%r15, %rsi
10000ec17:	48 89 c2	movq	%rax, %rdx
10000ec1a:	41 ff d4	callq	*%r12
10000ec1d:	4e 8b 34 2b	movq	(%rbx,%r13), %r14
10000ec21:	48 8b 3d f8 39 04 00	movq	276984(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10000ec28:	48 8b 35 d1 29 04 00	movq	272849(%rip), %rsi ## Objc selector ref: lightGrayColor
10000ec2f:	41 ff d4	callq	*%r12
10000ec32:	48 8b 0d 37 da 02 00	movq	186935(%rip), %rcx ## literal pool symbol address: _NSForegroundColorAttributeName
10000ec39:	48 8b 09	movq	(%rcx), %rcx
10000ec3c:	4c 89 f7	movq	%r14, %rdi
10000ec3f:	4c 89 fe	movq	%r15, %rsi
10000ec42:	48 89 c2	movq	%rax, %rdx
10000ec45:	41 ff d4	callq	*%r12
10000ec48:	48 8b 15 81 21 04 00	movq	270721(%rip), %rdx ## Objc selector ref: bounds
10000ec4f:	4c 8d 75 a8	leaq	-88(%rbp), %r14
10000ec53:	4c 89 f7	movq	%r14, %rdi
10000ec56:	48 89 de	movq	%rbx, %rsi
10000ec59:	e8 84 08 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000ec5e:	41 0f 10 46 10	movups	16(%r14), %xmm0
10000ec63:	48 8b 05 46 40 04 00	movq	278598(%rip), %rax
10000ec6a:	0f 11 04 03	movups	%xmm0, (%rbx,%rax)
10000ec6e:	48 8b 05 43 40 04 00	movq	278595(%rip), %rax
10000ec75:	48 8b 0d 9c da 02 00	movq	187036(%rip), %rcx ## literal pool symbol address: _NSZeroSize
10000ec7c:	0f 10 01	movups	(%rcx), %xmm0
10000ec7f:	0f 11 04 03	movups	%xmm0, (%rbx,%rax)
10000ec83:	48 8b 05 36 40 04 00	movq	278582(%rip), %rax
10000ec8a:	c6 04 03 00	movb	$0, (%rbx,%rax)
10000ec8e:	48 8b 3d 7b 39 04 00	movq	276859(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
10000ec95:	48 8b 35 bc 23 04 00	movq	271292(%rip), %rsi ## Objc selector ref: defaultCenter
10000ec9c:	41 ff d4	callq	*%r12
10000ec9f:	48 8b 0d 12 2b 04 00	movq	273170(%rip), %rcx ## Objc selector ref: newScreenProfile:
10000eca6:	48 8b 15 5b da 02 00	movq	186971(%rip), %rdx ## literal pool symbol address: _NSWindowDidChangeScreenProfileNotification
10000ecad:	4c 8b 02	movq	(%rdx), %r8
10000ecb0:	48 8b 35 c9 1f 04 00	movq	270281(%rip), %rsi ## Objc selector ref: addObserver:selector:name:object:
10000ecb7:	48 89 c7	movq	%rax, %rdi
10000ecba:	48 89 da	movq	%rbx, %rdx
10000ecbd:	45 31 c9	xorl	%r9d, %r9d
10000ecc0:	41 ff d4	callq	*%r12
10000ecc3:	48 89 d8	movq	%rbx, %rax
10000ecc6:	48 83 c4 58	addq	$88, %rsp
10000ecca:	5b	popq	%rbx
10000eccb:	41 5c	popq	%r12
10000eccd:	41 5d	popq	%r13
10000eccf:	41 5e	popq	%r14
10000ecd1:	41 5f	popq	%r15
10000ecd3:	5d	popq	%rbp
10000ecd4:	c3	retq
10000ecd5:	55	pushq	%rbp
10000ecd6:	48 89 e5	movq	%rsp, %rbp
10000ecd9:	48 8b 05 e8 3f 04 00	movq	278504(%rip), %rax
10000ece0:	48 8b 04 07	movq	(%rdi,%rax), %rax
10000ece4:	48 85 c0	testq	%rax, %rax
10000ece7:	78 07	js	0x10000ecf0
10000ece9:	f3 48 0f 2a c0	cvtsi2ss	%rax, %xmm0
10000ecee:	eb 15	jmp	0x10000ed05
10000ecf0:	48 89 c1	movq	%rax, %rcx
10000ecf3:	48 d1 e9	shrq	%rcx
10000ecf6:	83 e0 01	andl	$1, %eax
10000ecf9:	48 09 c8	orq	%rcx, %rax
10000ecfc:	f3 48 0f 2a c0	cvtsi2ss	%rax, %xmm0
10000ed01:	f3 0f 58 c0	addss	%xmm0, %xmm0
10000ed05:	48 8b 05 c4 3f 04 00	movq	278468(%rip), %rax
10000ed0c:	48 8b 04 07	movq	(%rdi,%rax), %rax
10000ed10:	48 85 c0	testq	%rax, %rax
10000ed13:	78 07	js	0x10000ed1c
10000ed15:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
10000ed1a:	eb 15	jmp	0x10000ed31
10000ed1c:	48 89 c1	movq	%rax, %rcx
10000ed1f:	48 d1 e9	shrq	%rcx
10000ed22:	83 e0 01	andl	$1, %eax
10000ed25:	48 09 c8	orq	%rcx, %rax
10000ed28:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
10000ed2d:	f3 0f 58 c9	addss	%xmm1, %xmm1
10000ed31:	f3 0f 5e c1	divss	%xmm1, %xmm0
10000ed35:	5d	popq	%rbp
10000ed36:	c3	retq
10000ed37:	55	pushq	%rbp
10000ed38:	48 89 e5	movq	%rsp, %rbp
10000ed3b:	48 8b 05 96 3f 04 00	movq	278422(%rip), %rax
10000ed42:	48 89 14 07	movq	%rdx, (%rdi,%rax)
10000ed46:	5d	popq	%rbp
10000ed47:	c3	retq
10000ed48:	55	pushq	%rbp
10000ed49:	48 89 e5	movq	%rsp, %rbp
10000ed4c:	48 8b 05 85 3f 04 00	movq	278405(%rip), %rax
10000ed53:	48 8b 04 07	movq	(%rdi,%rax), %rax
10000ed57:	5d	popq	%rbp
10000ed58:	c3	retq
10000ed59:	55	pushq	%rbp
10000ed5a:	48 89 e5	movq	%rsp, %rbp
10000ed5d:	41 57	pushq	%r15
10000ed5f:	41 56	pushq	%r14
10000ed61:	41 55	pushq	%r13
10000ed63:	41 54	pushq	%r12
10000ed65:	53	pushq	%rbx
10000ed66:	48 81 ec 38 04 00 00	subq	$1080, %rsp
10000ed6d:	48 89 cb	movq	%rcx, %rbx
10000ed70:	41 89 d6	movl	%edx, %r14d
10000ed73:	49 89 ff	movq	%rdi, %r15
10000ed76:	48 8b 05 9b da 02 00	movq	187035(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000ed7d:	48 8b 00	movq	(%rax), %rax
10000ed80:	48 89 45 d0	movq	%rax, -48(%rbp)
10000ed84:	48 85 c9	testq	%rcx, %rcx
10000ed87:	75 26	jne	0x10000edaf
10000ed89:	48 8b 3d a8 38 04 00	movq	276648(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10000ed90:	48 8b 35 69 22 04 00	movq	270953(%rip), %rsi ## Objc selector ref: currentContext
10000ed97:	48 8b 1d 82 de 02 00	movq	188034(%rip), %rbx ## Objc message: +[NSGraphicsContext currentContext]
10000ed9e:	ff d3	callq	*%rbx
10000eda0:	48 8b 35 b9 1d 04 00	movq	269753(%rip), %rsi ## Objc selector ref: CGContext
10000eda7:	48 89 c7	movq	%rax, %rdi
10000edaa:	ff d3	callq	*%rbx
10000edac:	48 89 c3	movq	%rax, %rbx
10000edaf:	48 8d 3d 2a e9 02 00	leaq	190762(%rip), %rdi ## Objc cfstring ref: @"winContext: %@"
10000edb6:	48 89 de	movq	%rbx, %rsi
10000edb9:	31 c0	xorl	%eax, %eax
10000edbb:	e8 3c 05 02 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10000edc0:	48 89 df	movq	%rbx, %rdi
10000edc3:	e8 e8 02 02 00	callq	0x10002f0b0 ## symbol stub for: _CGContextGetType
10000edc8:	48 8d 3d 31 e9 02 00	leaq	190769(%rip), %rdi ## Objc cfstring ref: @"      type: %d"
10000edcf:	89 c6	movl	%eax, %esi
10000edd1:	31 c0	xorl	%eax, %eax
10000edd3:	e8 24 05 02 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10000edd8:	48 85 db	testq	%rbx, %rbx
10000eddb:	0f 84 35 01 00 00	je	0x10000ef16
10000ede1:	48 8b 35 28 37 04 00	movq	276264(%rip), %rsi ## Objc selector ref: window
10000ede8:	48 8b 1d 31 de 02 00	movq	187953(%rip), %rbx ## Objc message: -[%rdi window]
10000edef:	4c 89 ff	movq	%r15, %rdi
10000edf2:	ff d3	callq	*%rbx
10000edf4:	48 8b 35 dd 2d 04 00	movq	273885(%rip), %rsi ## Objc selector ref: screen
10000edfb:	48 89 c7	movq	%rax, %rdi
10000edfe:	ff d3	callq	*%rbx
10000ee00:	48 8b 35 c1 20 04 00	movq	270529(%rip), %rsi ## Objc selector ref: colorSpace
10000ee07:	48 89 c7	movq	%rax, %rdi
10000ee0a:	ff d3	callq	*%rbx
10000ee0c:	48 8b 35 45 1d 04 00	movq	269637(%rip), %rsi ## Objc selector ref: CGColorSpace
10000ee13:	48 89 c7	movq	%rax, %rdi
10000ee16:	ff d3	callq	*%rbx
10000ee18:	49 89 c4	movq	%rax, %r12
10000ee1b:	48 8d 3d fe e8 02 00	leaq	190718(%rip), %rdi ## Objc cfstring ref: @"colorspace: %@"
10000ee22:	48 89 c6	movq	%rax, %rsi
10000ee25:	31 c0	xorl	%eax, %eax
10000ee27:	e8 d0 04 02 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10000ee2c:	4d 85 e4	testq	%r12, %r12
10000ee2f:	0f 84 03 01 00 00	je	0x10000ef38
10000ee35:	44 89 b5 cc fb ff ff	movl	%r14d, -1076(%rbp)
10000ee3c:	48 8d 45 10	leaq	16(%rbp), %rax
10000ee40:	f2 0f 10 40 10	movsd	16(%rax), %xmm0
10000ee45:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
10000ee4a:	f2 0f 10 0d de a2 02 00	movsd	172766(%rip), %xmm1
10000ee52:	f2 0f 5c c1	subsd	%xmm1, %xmm0
10000ee56:	f2 48 0f 2c d0	cvttsd2si	%xmm0, %rdx
10000ee5b:	48 89 ce	movq	%rcx, %rsi
10000ee5e:	48 c1 fe 3f	sarq	$63, %rsi
10000ee62:	48 21 d6	andq	%rdx, %rsi
10000ee65:	48 09 ce	orq	%rcx, %rsi
10000ee68:	4c 8b 2d 61 3e 04 00	movq	278113(%rip), %r13
10000ee6f:	4b 89 34 2f	movq	%rsi, (%r15,%r13)
10000ee73:	f2 0f 10 40 18	movsd	24(%rax), %xmm0
10000ee78:	f2 48 0f 2c c0	cvttsd2si	%xmm0, %rax
10000ee7d:	f2 0f 5c c1	subsd	%xmm1, %xmm0
10000ee81:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
10000ee86:	48 89 c6	movq	%rax, %rsi
10000ee89:	48 c1 fe 3f	sarq	$63, %rsi
10000ee8d:	48 21 ce	andq	%rcx, %rsi
10000ee90:	48 09 c6	orq	%rax, %rsi
10000ee93:	48 8b 1d 2e 3e 04 00	movq	278062(%rip), %rbx
10000ee9a:	49 89 34 1f	movq	%rsi, (%r15,%rbx)
10000ee9e:	4c 8b 35 db 3d 04 00	movq	277979(%rip), %r14
10000eea5:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
10000eea9:	48 85 ff	testq	%rdi, %rdi
10000eeac:	74 09	je	0x10000eeb7
10000eeae:	e8 21 05 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000eeb3:	49 8b 34 1f	movq	(%r15,%rbx), %rsi
10000eeb7:	4b 0f af 34 2f	imulq	(%r15,%r13), %rsi
10000eebc:	48 c1 e6 02	shlq	$2, %rsi
10000eec0:	bf 01 00 00 00	movl	$1, %edi
10000eec5:	e8 f2 04 02 00	callq	0x10002f3bc ## symbol stub for: _calloc
10000eeca:	4b 89 04 37	movq	%rax, (%r15,%r14)
10000eece:	4b 8b 34 2f	movq	(%r15,%r13), %rsi
10000eed2:	49 8b 14 1f	movq	(%r15,%rbx), %rdx
10000eed6:	4c 8d 04 b5 00 00 00 00	leaq	(,%rsi,4), %r8
10000eede:	31 c9	xorl	%ecx, %ecx
10000eee0:	80 bd cc fb ff ff 00	cmpb	$0, -1076(%rbp)
10000eee7:	0f 94 c1	sete	%cl
10000eeea:	8d 0c 8d 01 00 00 00	leal	1(,%rcx,4), %ecx
10000eef1:	89 0c 24	movl	%ecx, (%rsp)
10000eef4:	b9 08 00 00 00	movl	$8, %ecx
10000eef9:	48 89 c7	movq	%rax, %rdi
10000eefc:	4d 89 e1	movq	%r12, %r9
10000eeff:	e8 8c 00 02 00	callq	0x10002ef90 ## symbol stub for: _CGBitmapContextCreate
10000ef04:	48 89 c3	movq	%rax, %rbx
10000ef07:	4c 89 e7	movq	%r12, %rdi
10000ef0a:	e8 03 00 02 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000ef0f:	b0 01	movb	$1, %al
10000ef11:	e9 b4 00 00 00	jmp	0x10000efca
10000ef16:	48 8b 1d 63 3d 04 00	movq	277859(%rip), %rbx
10000ef1d:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10000ef21:	48 85 ff	testq	%rdi, %rdi
10000ef24:	74 05	je	0x10000ef2b
10000ef26:	e8 a9 04 02 00	callq	0x10002f3d4 ## symbol stub for: _free
10000ef2b:	49 c7 04 1f 00 00 00 00	movq	$0, (%r15,%rbx)
10000ef33:	e9 8e 00 00 00	jmp	0x10000efc6
10000ef38:	48 8d bd d0 fb ff ff	leaq	-1072(%rbp), %rdi
10000ef3f:	be 80 00 00 00	movl	$128, %esi
10000ef44:	e8 6d 04 02 00	callq	0x10002f3b6 ## symbol stub for: _backtrace
10000ef49:	83 f8 02	cmpl	$2, %eax
10000ef4c:	7c 78	jl	0x10000efc6
10000ef4e:	41 89 c4	movl	%eax, %r12d
10000ef51:	bb 01 00 00 00	movl	$1, %ebx
10000ef56:	4c 8d b5 a8 fb ff ff	leaq	-1112(%rbp), %r14
10000ef5d:	4c 8d 2d 2c a2 02 00	leaq	172588(%rip), %r13
10000ef64:	48 8b bc dd d0 fb ff ff	movq	-1072(%rbp,%rbx,8), %rdi
10000ef6c:	4c 89 f6	movq	%r14, %rsi
10000ef6f:	e8 4e 04 02 00	callq	0x10002f3c2 ## symbol stub for: _dladdr
10000ef74:	85 c0	testl	%eax, %eax
10000ef76:	74 2b	je	0x10000efa3
10000ef78:	48 8b 8d b8 fb ff ff	movq	-1096(%rbp), %rcx
10000ef7f:	4c 8b 84 dd d0 fb ff ff	movq	-1072(%rbp,%rbx,8), %r8
10000ef87:	4c 2b 85 c0 fb ff ff	subq	-1088(%rbp), %r8
10000ef8e:	48 8d 3d 7d a9 02 00	leaq	174461(%rip), %rdi ## literal pool for: "%1.*s<%s+%ld>\n"
10000ef95:	89 de	movl	%ebx, %esi
10000ef97:	4c 89 ea	movq	%r13, %rdx
10000ef9a:	31 c0	xorl	%eax, %eax
10000ef9c:	e8 71 05 02 00	callq	0x10002f512 ## symbol stub for: _printf
10000efa1:	eb 1b	jmp	0x10000efbe
10000efa3:	48 8b 8c dd d0 fb ff ff	movq	-1072(%rbp,%rbx,8), %rcx
10000efab:	48 8d 3d 6f a9 02 00	leaq	174447(%rip), %rdi ## literal pool for: "%1.*s%08lx\n"
10000efb2:	89 de	movl	%ebx, %esi
10000efb4:	4c 89 ea	movq	%r13, %rdx
10000efb7:	31 c0	xorl	%eax, %eax
10000efb9:	e8 54 05 02 00	callq	0x10002f512 ## symbol stub for: _printf
10000efbe:	48 ff c3	incq	%rbx
10000efc1:	49 39 dc	cmpq	%rbx, %r12
10000efc4:	75 9e	jne	0x10000ef64
10000efc6:	31 c0	xorl	%eax, %eax
10000efc8:	31 db	xorl	%ebx, %ebx
10000efca:	48 8b 0d ef 3c 04 00	movq	277743(%rip), %rcx
10000efd1:	41 88 04 0f	movb	%al, (%r15,%rcx)
10000efd5:	48 8b 05 3c d8 02 00	movq	186428(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000efdc:	48 8b 00	movq	(%rax), %rax
10000efdf:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10000efe3:	75 15	jne	0x10000effa
10000efe5:	48 89 d8	movq	%rbx, %rax
10000efe8:	48 81 c4 38 04 00 00	addq	$1080, %rsp
10000efef:	5b	popq	%rbx
10000eff0:	41 5c	popq	%r12
10000eff2:	41 5d	popq	%r13
10000eff4:	41 5e	popq	%r14
10000eff6:	41 5f	popq	%r15
10000eff8:	5d	popq	%rbp
10000eff9:	c3	retq
10000effa:	e8 b1 03 02 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10000efff:	55	pushq	%rbp
10000f000:	48 89 e5	movq	%rsp, %rbp
10000f003:	41 57	pushq	%r15
10000f005:	41 56	pushq	%r14
10000f007:	41 55	pushq	%r13
10000f009:	41 54	pushq	%r12
10000f00b:	53	pushq	%rbx
10000f00c:	48 81 ec b8 00 00 00	subq	$184, %rsp
10000f013:	48 89 fb	movq	%rdi, %rbx
10000f016:	48 8b 05 9b d1 02 00	movq	184731(%rip), %rax ## literal pool symbol address: _CGAffineTransformIdentity
10000f01d:	0f 10 00	movups	(%rax), %xmm0
10000f020:	0f 10 48 10	movups	16(%rax), %xmm1
10000f024:	0f 10 50 20	movups	32(%rax), %xmm2
10000f028:	0f 29 55 a0	movaps	%xmm2, -96(%rbp)
10000f02c:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
10000f030:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000f034:	4c 8b 25 a5 3c 04 00	movq	277669(%rip), %r12
10000f03b:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10000f03f:	48 85 ff	testq	%rdi, %rdi
10000f042:	74 7b	je	0x10000f0bf
10000f044:	48 8b 35 f5 21 04 00	movq	270837(%rip), %rsi ## Objc selector ref: filterDocument
10000f04b:	4c 8b 2d ce db 02 00	movq	187342(%rip), %r13 ## Objc message: -[%rdi filterDocument]
10000f052:	41 ff d5	callq	*%r13
10000f055:	49 89 c7	movq	%rax, %r15
10000f058:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10000f05c:	48 8b 35 ed 21 04 00	movq	270829(%rip), %rsi ## Objc selector ref: filterPage
10000f063:	41 ff d5	callq	*%r13
10000f066:	48 89 45 c8	movq	%rax, -56(%rbp)
10000f06a:	48 8b 3d c7 35 04 00	movq	275911(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10000f071:	48 8b 35 88 1f 04 00	movq	270216(%rip), %rsi ## Objc selector ref: currentContext
10000f078:	41 ff d5	callq	*%r13
10000f07b:	48 8b 35 de 1a 04 00	movq	269022(%rip), %rsi ## Objc selector ref: CGContext
10000f082:	48 89 c7	movq	%rax, %rdi
10000f085:	41 ff d5	callq	*%r13
10000f088:	48 89 45 b8	movq	%rax, -72(%rbp)
10000f08c:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10000f090:	48 8b 35 b9 2a 04 00	movq	273081(%rip), %rsi ## Objc selector ref: retainCurrentFilter
10000f097:	41 ff d5	callq	*%r13
10000f09a:	49 89 c6	movq	%rax, %r14
10000f09d:	4a 8b 34 23	movq	(%rbx,%r12), %rsi
10000f0a1:	48 85 f6	testq	%rsi, %rsi
10000f0a4:	74 21	je	0x10000f0c7
10000f0a6:	48 8b 15 03 1c 04 00	movq	269315(%rip), %rdx ## Objc selector ref: affineTransform
10000f0ad:	48 8d bd 50 ff ff ff	leaq	-176(%rbp), %rdi
10000f0b4:	e8 29 04 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000f0b9:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10000f0bd:	eb 22	jmp	0x10000f0e1
10000f0bf:	45 31 f6	xorl	%r14d, %r14d
10000f0c2:	e9 06 01 00 00	jmp	0x10000f1cd
10000f0c7:	0f 57 c0	xorps	%xmm0, %xmm0
10000f0ca:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10000f0d1:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
10000f0d8:	0f 29 85 50 ff ff ff	movaps	%xmm0, -176(%rbp)
10000f0df:	31 ff	xorl	%edi, %edi
10000f0e1:	0f 28 85 50 ff ff ff	movaps	-176(%rbp), %xmm0
10000f0e8:	0f 28 8d 60 ff ff ff	movaps	-160(%rbp), %xmm1
10000f0ef:	0f 28 95 70 ff ff ff	movaps	-144(%rbp), %xmm2
10000f0f6:	0f 29 55 a0	movaps	%xmm2, -96(%rbp)
10000f0fa:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
10000f0fe:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000f102:	48 8b 35 7f 31 04 00	movq	274815(%rip), %rsi ## Objc selector ref: softProof
10000f109:	ff 15 11 db 02 00	callq	*187153(%rip) ## Objc message: +[NSGraphicsContext softProof]
10000f10f:	4d 85 ff	testq	%r15, %r15
10000f112:	0f 84 b5 00 00 00	je	0x10000f1cd
10000f118:	89 c1	movl	%eax, %ecx
10000f11a:	48 8b 05 4f 3b 04 00	movq	277327(%rip), %rax
10000f121:	48 8b 15 c0 3b 04 00	movq	277440(%rip), %rdx
10000f128:	4c 3b 3c 03	cmpq	(%rbx,%rax), %r15
10000f12c:	88 4d d7	movb	%cl, -41(%rbp)
10000f12f:	0f 85 ad 00 00 00	jne	0x10000f1e2
10000f135:	48 8b 45 c8	movq	-56(%rbp), %rax
10000f139:	48 3b 04 13	cmpq	(%rbx,%rdx), %rax
10000f13d:	0f 85 9f 00 00 00	jne	0x10000f1e2
10000f143:	48 8b 05 76 3b 04 00	movq	277366(%rip), %rax
10000f14a:	80 3c 03 00	cmpb	$0, (%rbx,%rax)
10000f14e:	0f 84 8e 00 00 00	je	0x10000f1e2
10000f154:	48 8b 05 95 3b 04 00	movq	277397(%rip), %rax
10000f15b:	38 0c 03	cmpb	%cl, (%rbx,%rax)
10000f15e:	88 0c 03	movb	%cl, (%rbx,%rax)
10000f161:	0f 85 85 00 00 00	jne	0x10000f1ec
10000f167:	48 8b 05 0a 3b 04 00	movq	277258(%rip), %rax
10000f16e:	48 8b 04 03	movq	(%rbx,%rax), %rax
10000f172:	49 39 c6	cmpq	%rax, %r14
10000f175:	0f 84 69 01 00 00	je	0x10000f2e4
10000f17b:	4d 85 f6	testq	%r14, %r14
10000f17e:	74 6c	je	0x10000f1ec
10000f180:	48 85 c0	testq	%rax, %rax
10000f183:	74 67	je	0x10000f1ec
10000f185:	48 8b 35 94 28 04 00	movq	272532(%rip), %rsi ## Objc selector ref: properties
10000f18c:	4c 89 f7	movq	%r14, %rdi
10000f18f:	41 ff d5	callq	*%r13
10000f192:	48 89 45 c0	movq	%rax, -64(%rbp)
10000f196:	48 8b 05 db 3a 04 00	movq	277211(%rip), %rax
10000f19d:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10000f1a1:	48 8b 35 78 28 04 00	movq	272504(%rip), %rsi ## Objc selector ref: properties
10000f1a8:	41 ff d5	callq	*%r13
10000f1ab:	48 8b 35 ce 23 04 00	movq	271310(%rip), %rsi ## Objc selector ref: isEqualToDictionary:
10000f1b2:	48 8b 7d c0	movq	-64(%rbp), %rdi
10000f1b6:	48 89 c2	movq	%rax, %rdx
10000f1b9:	41 ff d5	callq	*%r13
10000f1bc:	48 8b 15 25 3b 04 00	movq	277285(%rip), %rdx
10000f1c3:	84 c0	testb	%al, %al
10000f1c5:	0f 85 19 01 00 00	jne	0x10000f2e4
10000f1cb:	eb 1f	jmp	0x10000f1ec
10000f1cd:	48 8b 35 74 1f 04 00	movq	270196(%rip), %rsi ## Objc selector ref: drawBackground
10000f1d4:	48 89 df	movq	%rbx, %rdi
10000f1d7:	ff 15 43 da 02 00	callq	*186947(%rip) ## Objc message: -[%rdi drawBackground]
10000f1dd:	e9 1e 01 00 00	jmp	0x10000f300
10000f1e2:	48 8b 05 07 3b 04 00	movq	277255(%rip), %rax
10000f1e9:	88 0c 03	movb	%cl, (%rbx,%rax)
10000f1ec:	48 8b 45 c8	movq	-56(%rbp), %rax
10000f1f0:	48 89 04 13	movq	%rax, (%rbx,%rdx)
10000f1f4:	4c 89 ff	movq	%r15, %rdi
10000f1f7:	e8 1c fd 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10000f1fc:	4c 8b 2d 6d 3a 04 00	movq	277101(%rip), %r13
10000f203:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10000f207:	48 85 ff	testq	%rdi, %rdi
10000f20a:	74 05	je	0x10000f211
10000f20c:	e8 01 fd 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000f211:	4e 89 3c 2b	movq	%r15, (%rbx,%r13)
10000f215:	4c 89 f7	movq	%r14, %rdi
10000f218:	ff 15 42 da 02 00	callq	*186946(%rip) ## literal pool symbol address: _objc_retain
10000f21e:	4c 8b 2d 53 3a 04 00	movq	277075(%rip), %r13
10000f225:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10000f229:	ff 15 29 da 02 00	callq	*186921(%rip) ## literal pool symbol address: _objc_release
10000f22f:	4e 89 34 2b	movq	%r14, (%rbx,%r13)
10000f233:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10000f237:	48 8b 35 0a 20 04 00	movq	270346(%rip), %rsi ## Objc selector ref: filterDocumentType
10000f23e:	ff 15 dc d9 02 00	callq	*186844(%rip) ## Objc message: -[%rdi filterDocumentType]
10000f244:	8d 48 fe	leal	-2(%rax), %ecx
10000f247:	83 f9 02	cmpl	$2, %ecx
10000f24a:	73 5b	jae	0x10000f2a7
10000f24c:	4c 8b 25 a5 3a 04 00	movq	277157(%rip), %r12
10000f253:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10000f257:	48 85 ff	testq	%rdi, %rdi
10000f25a:	4c 8b 2d bf d9 02 00	movq	186815(%rip), %r13 ## Objc message: -[%rdi filterDocumentType]
10000f261:	74 0e	je	0x10000f271
10000f263:	ff 15 ef d9 02 00	callq	*186863(%rip) ## literal pool symbol address: _objc_release
10000f269:	4a c7 04 23 00 00 00 00	movq	$0, (%rbx,%r12)
10000f271:	48 8b 35 10 1f 04 00	movq	270096(%rip), %rsi ## Objc selector ref: drawImageToCache:filter:affineTR:context:
10000f278:	0f 28 45 80	movaps	-128(%rbp), %xmm0
10000f27c:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10000f280:	0f 28 55 a0	movaps	-96(%rbp), %xmm2
10000f284:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10000f289:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f28e:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f292:	48 89 df	movq	%rbx, %rdi
10000f295:	4c 89 fa	movq	%r15, %rdx
10000f298:	4c 89 f1	movq	%r14, %rcx
10000f29b:	4c 8b 45 b8	movq	-72(%rbp), %r8
10000f29f:	ff 15 7b d9 02 00	callq	*186747(%rip) ## Objc message: -[%rdi drawImageToCache:filter:affineTR:context:]
10000f2a5:	eb 3d	jmp	0x10000f2e4
10000f2a7:	83 f8 01	cmpl	$1, %eax
10000f2aa:	4c 8b 2d 6f d9 02 00	movq	186735(%rip), %r13 ## Objc message: -[%rdi drawImageToCache:filter:affineTR:context:]
10000f2b1:	75 21	jne	0x10000f2d4
10000f2b3:	48 8b 35 de 1e 04 00	movq	270046(%rip), %rsi ## Objc selector ref: drawPDFPageToCache:page:filter:softProof:
10000f2ba:	44 0f be 4d d7	movsbl	-41(%rbp), %r9d
10000f2bf:	48 89 df	movq	%rbx, %rdi
10000f2c2:	4c 89 fa	movq	%r15, %rdx
10000f2c5:	48 8b 4d c8	movq	-56(%rbp), %rcx
10000f2c9:	4d 89 f0	movq	%r14, %r8
10000f2cc:	ff 15 4e d9 02 00	callq	*186702(%rip) ## Objc message: -[%rdi drawPDFPageToCache:page:filter:softProof:]
10000f2d2:	eb 10	jmp	0x10000f2e4
10000f2d4:	48 8b 35 6d 1e 04 00	movq	269933(%rip), %rsi ## Objc selector ref: drawBackground
10000f2db:	48 89 df	movq	%rbx, %rdi
10000f2de:	ff 15 3c d9 02 00	callq	*186684(%rip) ## Objc message: -[%rdi drawBackground]
10000f2e4:	48 8b 35 bd 1e 04 00	movq	270013(%rip), %rsi ## Objc selector ref: drawingQuality
10000f2eb:	48 89 df	movq	%rbx, %rdi
10000f2ee:	41 ff d5	callq	*%r13
10000f2f1:	48 8b 35 58 1e 04 00	movq	269912(%rip), %rsi ## Objc selector ref: drawCache:
10000f2f8:	48 89 df	movq	%rbx, %rdi
10000f2fb:	89 c2	movl	%eax, %edx
10000f2fd:	41 ff d5	callq	*%r13
10000f300:	4c 89 f7	movq	%r14, %rdi
10000f303:	ff 15 4f d9 02 00	callq	*186703(%rip) ## literal pool symbol address: _objc_release
10000f309:	48 8b 35 b8 2c 04 00	movq	273592(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10000f310:	48 89 df	movq	%rbx, %rdi
10000f313:	ba 01 00 00 00	movl	$1, %edx
10000f318:	ff 15 02 d9 02 00	callq	*186626(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
10000f31e:	48 81 c4 b8 00 00 00	addq	$184, %rsp
10000f325:	5b	popq	%rbx
10000f326:	41 5c	popq	%r12
10000f328:	41 5d	popq	%r13
10000f32a:	41 5e	popq	%r14
10000f32c:	41 5f	popq	%r15
10000f32e:	5d	popq	%rbp
10000f32f:	c3	retq
10000f330:	55	pushq	%rbp
10000f331:	48 89 e5	movq	%rsp, %rbp
10000f334:	41 57	pushq	%r15
10000f336:	41 56	pushq	%r14
10000f338:	41 54	pushq	%r12
10000f33a:	53	pushq	%rbx
10000f33b:	48 83 ec 40	subq	$64, %rsp
10000f33f:	48 89 fb	movq	%rdi, %rbx
10000f342:	48 85 ff	testq	%rdi, %rdi
10000f345:	74 15	je	0x10000f35c
10000f347:	48 8b 15 82 1a 04 00	movq	268930(%rip), %rdx ## Objc selector ref: bounds
10000f34e:	48 8d 7d c0	leaq	-64(%rbp), %rdi
10000f352:	48 89 de	movq	%rbx, %rsi
10000f355:	e8 88 01 02 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000f35a:	eb 0b	jmp	0x10000f367
10000f35c:	0f 57 c0	xorps	%xmm0, %xmm0
10000f35f:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000f363:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10000f367:	48 8b 3d b2 32 04 00	movq	275122(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10000f36e:	48 8b 35 73 1b 04 00	movq	269171(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
10000f375:	4c 8b 3d a4 d8 02 00	movq	186532(%rip), %r15 ## Objc message: +[NSColor colorWithDeviceRed:green:blue:alpha:]
10000f37c:	f2 0f 10 05 3c 8d 02 00	movsd	167228(%rip), %xmm0
10000f384:	f2 0f 10 1d 84 8c 02 00	movsd	167044(%rip), %xmm3
10000f38c:	0f 28 c8	movaps	%xmm0, %xmm1
10000f38f:	0f 28 d0	movaps	%xmm0, %xmm2
10000f392:	41 ff d7	callq	*%r15
10000f395:	48 8b 35 d4 28 04 00	movq	272596(%rip), %rsi ## Objc selector ref: set
10000f39c:	48 89 c7	movq	%rax, %rdi
10000f39f:	41 ff d7	callq	*%r15
10000f3a2:	48 8b 3d 7f 32 04 00	movq	275071(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
10000f3a9:	48 8b 35 80 1e 04 00	movq	269952(%rip), %rsi ## Objc selector ref: fillRect:
10000f3b0:	66 0f 28 45 c0	movapd	-64(%rbp), %xmm0
10000f3b5:	66 0f 28 4d d0	movapd	-48(%rbp), %xmm1
10000f3ba:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10000f3c0:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000f3c5:	41 ff d7	callq	*%r15
10000f3c8:	4c 8b 25 d9 38 04 00	movq	276697(%rip), %r12
10000f3cf:	4a 8b 14 23	movq	(%rbx,%r12), %rdx
10000f3d3:	48 8b 35 9e 2e 04 00	movq	274078(%rip), %rsi ## Objc selector ref: sizeWithAttributes:
10000f3da:	4c 8d 35 5f e3 02 00	leaq	189279(%rip), %r14 ## Objc cfstring ref: @"Document not loaded"
10000f3e1:	4c 89 f7	movq	%r14, %rdi
10000f3e4:	41 ff d7	callq	*%r15
10000f3e7:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
10000f3ec:	f2 0f 10 5d d8	movsd	-40(%rbp), %xmm3
10000f3f1:	f2 0f 5c d0	subsd	%xmm0, %xmm2
10000f3f5:	f2 0f 10 05 23 8c 02 00	movsd	166947(%rip), %xmm0
10000f3fd:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
10000f401:	f2 0f 58 55 c0	addsd	-64(%rbp), %xmm2
10000f406:	f2 0f 5c d9	subsd	%xmm1, %xmm3
10000f40a:	f2 0f 59 d8	mulsd	%xmm0, %xmm3
10000f40e:	f2 0f 58 5d c8	addsd	-56(%rbp), %xmm3
10000f413:	4a 8b 14 23	movq	(%rbx,%r12), %rdx
10000f417:	48 8b 35 12 1d 04 00	movq	269586(%rip), %rsi ## Objc selector ref: drawAtPoint:withAttributes:
10000f41e:	4c 89 f7	movq	%r14, %rdi
10000f421:	66 0f 28 c2	movapd	%xmm2, %xmm0
10000f425:	66 0f 28 cb	movapd	%xmm3, %xmm1
10000f429:	41 ff d7	callq	*%r15
10000f42c:	48 83 c4 40	addq	$64, %rsp
10000f430:	5b	popq	%rbx
10000f431:	41 5c	popq	%r12
10000f433:	41 5e	popq	%r14
10000f435:	41 5f	popq	%r15
10000f437:	5d	popq	%rbp
10000f438:	c3	retq
10000f439:	55	pushq	%rbp
10000f43a:	48 89 e5	movq	%rsp, %rbp
10000f43d:	41 57	pushq	%r15
10000f43f:	41 56	pushq	%r14
10000f441:	41 55	pushq	%r13
10000f443:	41 54	pushq	%r12
10000f445:	53	pushq	%rbx
10000f446:	48 81 ec 98 00 00 00	subq	$152, %rsp
10000f44d:	44 89 4d cc	movl	%r9d, -52(%rbp)
10000f451:	4c 89 45 d0	movq	%r8, -48(%rbp)
10000f455:	48 85 c9	testq	%rcx, %rcx
10000f458:	0f 84 a7 02 00 00	je	0x10000f705
10000f45e:	49 89 d5	movq	%rdx, %r13
10000f461:	48 89 fb	movq	%rdi, %rbx
10000f464:	48 89 d7	movq	%rdx, %rdi
10000f467:	48 89 ce	movq	%rcx, %rsi
10000f46a:	e8 7f fd 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
10000f46f:	48 85 c0	testq	%rax, %rax
10000f472:	0f 84 8d 02 00 00	je	0x10000f705
10000f478:	49 89 c4	movq	%rax, %r12
10000f47b:	4c 8d b5 60 ff ff ff	leaq	-160(%rbp), %r14
10000f482:	4c 89 f7	movq	%r14, %rdi
10000f485:	48 89 c6	movq	%rax, %rsi
10000f488:	ba 01 00 00 00	movl	$1, %edx
10000f48d:	e8 74 fd 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
10000f492:	48 8b 35 47 1b 04 00	movq	269127(%rip), %rsi ## Objc selector ref: createCacheContext:withAlpha:context:
10000f499:	41 0f 10 06	movups	(%r14), %xmm0
10000f49d:	41 0f 10 4e 10	movups	16(%r14), %xmm1
10000f4a2:	49 89 de	movq	%rbx, %r14
10000f4a5:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f4aa:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f4ae:	48 89 df	movq	%rbx, %rdi
10000f4b1:	31 d2	xorl	%edx, %edx
10000f4b3:	31 c9	xorl	%ecx, %ecx
10000f4b5:	ff 15 65 d7 02 00	callq	*186213(%rip) ## Objc message: +[NSBezierPath createCacheContext:withAlpha:context:]
10000f4bb:	48 85 c0	testq	%rax, %rax
10000f4be:	0f 84 41 02 00 00	je	0x10000f705
10000f4c4:	49 89 c7	movq	%rax, %r15
10000f4c7:	48 89 c7	movq	%rax, %rdi
10000f4ca:	e8 f3 fb 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10000f4cf:	4c 89 ff	movq	%r15, %rdi
10000f4d2:	be 01 00 00 00	movl	$1, %esi
10000f4d7:	e8 ec fb 01 00	callq	0x10002f0c8 ## symbol stub for: _CGContextSetAllowsAntialiasing
10000f4dc:	48 8b 05 ed 37 04 00	movq	276461(%rip), %rax
10000f4e3:	48 8b 0d de 37 04 00	movq	276446(%rip), %rcx
10000f4ea:	f3 41 0f 7e 04 06	movq	(%r14,%rax), %xmm0
10000f4f0:	f3 41 0f 7e 14 0e	movq	(%r14,%rcx), %xmm2
10000f4f6:	66 0f 6c d0	punpcklqdq	%xmm0, %xmm2
10000f4fa:	66 0f ef c0	pxor	%xmm0, %xmm0
10000f4fe:	66 0f 6f ca	movdqa	%xmm2, %xmm1
10000f502:	66 0f 3a 0e c8 cc	pblendw	$204, %xmm0, %xmm1
10000f508:	66 0f eb 0d 30 9c 02 00	por	171056(%rip), %xmm1
10000f510:	66 0f 73 d2 20	psrlq	$32, %xmm2
10000f515:	66 0f eb 15 33 9c 02 00	por	171059(%rip), %xmm2
10000f51d:	66 0f 5c 15 3b 9c 02 00	subpd	171067(%rip), %xmm2
10000f525:	66 0f 58 d1	addpd	%xmm1, %xmm2
10000f529:	66 0f 29 55 80	movapd	%xmm2, -128(%rbp)
10000f52e:	66 0f 7f 45 a0	movdqa	%xmm0, -96(%rbp)
10000f533:	4c 89 65 98	movq	%r12, -104(%rbp)
10000f537:	4c 89 e7	movq	%r12, %rdi
10000f53a:	e8 cd fc 01 00	callq	0x10002f20c ## symbol stub for: _CGPDFPageGetRotationAngle
10000f53f:	0f 28 4d 80	movaps	-128(%rbp), %xmm1
10000f543:	48 98	cltq
10000f545:	48 69 c8 b7 60 0b b6	imulq	$-1240768329, %rax, %rcx
10000f54c:	48 c1 e9 20	shrq	$32, %rcx
10000f550:	01 c1	addl	%eax, %ecx
10000f552:	89 ca	movl	%ecx, %edx
10000f554:	c1 ea 1f	shrl	$31, %edx
10000f557:	c1 f9 08	sarl	$8, %ecx
10000f55a:	01 d1	addl	%edx, %ecx
10000f55c:	69 c9 68 01 00 00	imull	$360, %ecx, %ecx
10000f562:	29 c8	subl	%ecx, %eax
10000f564:	41 be 68 01 00 00	movl	$360, %r14d
10000f56a:	41 01 c6	addl	%eax, %r14d
10000f56d:	85 c0	testl	%eax, %eax
10000f56f:	44 0f 49 f0	cmovnsl	%eax, %r14d
10000f573:	0f 28 c1	movaps	%xmm1, %xmm0
10000f576:	0f c6 c1 4e	shufps	$78, %xmm1, %xmm0
10000f57a:	41 81 fe b3 00 00 00	cmpl	$179, %r14d
10000f581:	7f 0b	jg	0x10000f58e
10000f583:	45 85 f6	testl	%r14d, %r14d
10000f586:	74 21	je	0x10000f5a9
10000f588:	41 83 fe 5a	cmpl	$90, %r14d
10000f58c:	eb 10	jmp	0x10000f59e
10000f58e:	41 81 fe b4 00 00 00	cmpl	$180, %r14d
10000f595:	74 12	je	0x10000f5a9
10000f597:	41 81 fe 0e 01 00 00	cmpl	$270, %r14d
10000f59e:	4c 8b 65 d0	movq	-48(%rbp), %r12
10000f5a2:	75 0b	jne	0x10000f5af
10000f5a4:	0f 28 c1	movaps	%xmm1, %xmm0
10000f5a7:	eb 09	jmp	0x10000f5b2
10000f5a9:	4c 8b 65 d0	movq	-48(%rbp), %r12
10000f5ad:	eb 03	jmp	0x10000f5b2
10000f5af:	45 31 f6	xorl	%r14d, %r14d
10000f5b2:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10000f5b6:	48 8b 05 43 37 04 00	movq	276291(%rip), %rax
10000f5bd:	0f 28 45 a0	movaps	-96(%rbp), %xmm0
10000f5c1:	0f 11 04 03	movups	%xmm0, (%rbx,%rax)
10000f5c5:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000f5c9:	0f 11 44 03 10	movups	%xmm0, 16(%rbx,%rax)
10000f5ce:	4c 89 ff	movq	%r15, %rdi
10000f5d1:	e8 ec fa 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10000f5d6:	f2 0f 10 05 2a 8a 02 00	movsd	166442(%rip), %xmm0
10000f5de:	4c 89 ff	movq	%r15, %rdi
10000f5e1:	0f 28 c8	movaps	%xmm0, %xmm1
10000f5e4:	e8 eb fa 01 00	callq	0x10002f0d4 ## symbol stub for: _CGContextSetGrayFillColor
10000f5e9:	0f 28 45 a0	movaps	-96(%rbp), %xmm0
10000f5ed:	0f 28 4d b0	movaps	-80(%rbp), %xmm1
10000f5f1:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f5f6:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f5fa:	4c 89 ff	movq	%r15, %rdi
10000f5fd:	e8 96 fa 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
10000f602:	4c 89 ff	movq	%r15, %rdi
10000f605:	e8 b2 fa 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10000f60a:	80 7d cc 00	cmpb	$0, -52(%rbp)
10000f60e:	74 3d	je	0x10000f64d
10000f610:	4c 89 ef	movq	%r13, %rdi
10000f613:	e8 b8 fb 01 00	callq	0x10002f1d0 ## symbol stub for: _CGPDFDocumentCopyOutputIntents
10000f618:	48 85 c0	testq	%rax, %rax
10000f61b:	74 35	je	0x10000f652
10000f61d:	49 89 c4	movq	%rax, %r12
10000f620:	48 89 c7	movq	%rax, %rdi
10000f623:	e8 4c fd 01 00	callq	0x10002f374 ## symbol stub for: _QuartzFilterCreateWithOutputIntents
10000f628:	49 89 c5	movq	%rax, %r13
10000f62b:	48 85 c0	testq	%rax, %rax
10000f62e:	74 13	je	0x10000f643
10000f630:	48 8b 35 c9 16 04 00	movq	267977(%rip), %rsi ## Objc selector ref: applyToContext:
10000f637:	4c 89 ef	movq	%r13, %rdi
10000f63a:	4c 89 fa	movq	%r15, %rdx
10000f63d:	ff 15 dd d5 02 00	callq	*185821(%rip) ## Objc message: -[%rdi applyToContext:]
10000f643:	4c 89 e7	movq	%r12, %rdi
10000f646:	e8 c7 f8 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10000f64b:	eb 08	jmp	0x10000f655
10000f64d:	45 31 ed	xorl	%r13d, %r13d
10000f650:	eb 07	jmp	0x10000f659
10000f652:	45 31 ed	xorl	%r13d, %r13d
10000f655:	4c 8b 65 d0	movq	-48(%rbp), %r12
10000f659:	4d 85 e4	testq	%r12, %r12
10000f65c:	74 13	je	0x10000f671
10000f65e:	48 8b 35 9b 16 04 00	movq	267931(%rip), %rsi ## Objc selector ref: applyToContext:
10000f665:	4c 89 e7	movq	%r12, %rdi
10000f668:	4c 89 fa	movq	%r15, %rdx
10000f66b:	ff 15 af d5 02 00	callq	*185775(%rip) ## Objc message: -[%rdi applyToContext:]
10000f671:	0f 28 45 a0	movaps	-96(%rbp), %xmm0
10000f675:	0f 28 4d b0	movaps	-80(%rbp), %xmm1
10000f679:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f67e:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f682:	4c 89 ff	movq	%r15, %rdi
10000f685:	48 8b 75 98	movq	-104(%rbp), %rsi
10000f689:	ba 01 00 00 00	movl	$1, %edx
10000f68e:	44 89 f1	movl	%r14d, %ecx
10000f691:	41 b8 01 00 00 00	movl	$1, %r8d
10000f697:	e8 f0 f9 01 00	callq	0x10002f08c ## symbol stub for: _CGContextDrawPDFPageInRect2
10000f69c:	4d 85 ed	testq	%r13, %r13
10000f69f:	74 13	je	0x10000f6b4
10000f6a1:	48 8b 35 38 24 04 00	movq	271416(%rip), %rsi ## Objc selector ref: removeFromContext:
10000f6a8:	4c 89 ef	movq	%r13, %rdi
10000f6ab:	4c 89 fa	movq	%r15, %rdx
10000f6ae:	ff 15 6c d5 02 00	callq	*185708(%rip) ## Objc message: -[%rdi removeFromContext:]
10000f6b4:	4d 85 e4	testq	%r12, %r12
10000f6b7:	74 13	je	0x10000f6cc
10000f6b9:	48 8b 35 20 24 04 00	movq	271392(%rip), %rsi ## Objc selector ref: removeFromContext:
10000f6c0:	4c 89 e7	movq	%r12, %rdi
10000f6c3:	4c 89 fa	movq	%r15, %rdx
10000f6c6:	ff 15 54 d5 02 00	callq	*185684(%rip) ## Objc message: -[%rdi removeFromContext:]
10000f6cc:	4c 89 ff	movq	%r15, %rdi
10000f6cf:	e8 ca f9 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
10000f6d4:	4c 89 ff	movq	%r15, %rdi
10000f6d7:	e8 e0 f9 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10000f6dc:	4c 8b 35 a5 35 04 00	movq	275877(%rip), %r14
10000f6e3:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10000f6e7:	48 85 ff	testq	%rdi, %rdi
10000f6ea:	74 05	je	0x10000f6f1
10000f6ec:	e8 97 fa 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10000f6f1:	4c 89 ff	movq	%r15, %rdi
10000f6f4:	e8 9d f8 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
10000f6f9:	4a 89 04 33	movq	%rax, (%rbx,%r14)
10000f6fd:	4c 89 ff	movq	%r15, %rdi
10000f700:	e8 b1 f9 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
10000f705:	48 81 c4 98 00 00 00	addq	$152, %rsp
10000f70c:	5b	popq	%rbx
10000f70d:	41 5c	popq	%r12
10000f70f:	41 5d	popq	%r13
10000f711:	41 5e	popq	%r14
10000f713:	41 5f	popq	%r15
10000f715:	5d	popq	%rbp
10000f716:	c3	retq
10000f717:	55	pushq	%rbp
10000f718:	48 89 e5	movq	%rsp, %rbp
10000f71b:	48 81 ec 90 00 00 00	subq	$144, %rsp
10000f722:	48 8b 05 ef d0 02 00	movq	184559(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000f729:	48 8b 00	movq	(%rax), %rax
10000f72c:	48 89 45 f8	movq	%rax, -8(%rbp)
10000f730:	48 8b 05 99 35 04 00	movq	275865(%rip), %rax
10000f737:	48 8b 04 07	movq	(%rdi,%rax), %rax
10000f73b:	48 85 c0	testq	%rax, %rax
10000f73e:	78 07	js	0x10000f747
10000f740:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
10000f745:	eb 15	jmp	0x10000f75c
10000f747:	48 89 c1	movq	%rax, %rcx
10000f74a:	48 d1 e9	shrq	%rcx
10000f74d:	83 e0 01	andl	$1, %eax
10000f750:	48 09 c8	orq	%rcx, %rax
10000f753:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
10000f758:	f3 0f 58 c9	addss	%xmm1, %xmm1
10000f75c:	f2 0f 5a 55 20	cvtsd2ss	32(%rbp), %xmm2
10000f761:	f2 0f 5a 45 28	cvtsd2ss	40(%rbp), %xmm0
10000f766:	48 8b 05 5b 35 04 00	movq	275803(%rip), %rax
10000f76d:	48 8b 04 07	movq	(%rdi,%rax), %rax
10000f771:	48 85 c0	testq	%rax, %rax
10000f774:	78 07	js	0x10000f77d
10000f776:	f3 48 0f 2a d8	cvtsi2ss	%rax, %xmm3
10000f77b:	eb 15	jmp	0x10000f792
10000f77d:	48 89 c1	movq	%rax, %rcx
10000f780:	48 d1 e9	shrq	%rcx
10000f783:	83 e0 01	andl	$1, %eax
10000f786:	48 09 c8	orq	%rcx, %rax
10000f789:	f3 48 0f 2a d8	cvtsi2ss	%rax, %xmm3
10000f78e:	f3 0f 58 db	addss	%xmm3, %xmm3
10000f792:	f3 0f 5c ca	subss	%xmm2, %xmm1
10000f796:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
10000f79a:	0f 57 d2	xorps	%xmm2, %xmm2
10000f79d:	0f 29 95 70 ff ff ff	movaps	%xmm2, -144(%rbp)
10000f7a4:	f2 0f 11 4d 80	movsd	%xmm1, -128(%rbp)
10000f7a9:	31 c0	xorl	%eax, %eax
10000f7ab:	48 89 45 88	movq	%rax, -120(%rbp)
10000f7af:	f2 0f 11 4d 90	movsd	%xmm1, -112(%rbp)
10000f7b4:	48 89 45 a0	movq	%rax, -96(%rbp)
10000f7b8:	0f 28 e3	movaps	%xmm3, %xmm4
10000f7bb:	66 0f 3a 21 e0 10	insertps	$16, %xmm0, %xmm4
10000f7c1:	66 0f 3a 21 c3 10	insertps	$16, %xmm3, %xmm0
10000f7c7:	0f 5c e0	subps	%xmm0, %xmm4
10000f7ca:	0f 5a c4	cvtps2pd	%xmm4, %xmm0
10000f7cd:	f2 0f 11 4d b0	movsd	%xmm1, -80(%rbp)
10000f7d2:	0f 13 45 98	movlps	%xmm0, -104(%rbp)
10000f7d6:	0f 13 45 a8	movlps	%xmm0, -88(%rbp)
10000f7da:	0f 11 45 b8	movups	%xmm0, -72(%rbp)
10000f7de:	0f 11 55 c8	movups	%xmm2, -56(%rbp)
10000f7e2:	48 89 45 d8	movq	%rax, -40(%rbp)
10000f7e6:	f2 0f 11 4d e0	movsd	%xmm1, -32(%rbp)
10000f7eb:	48 89 45 e8	movq	%rax, -24(%rbp)
10000f7ef:	48 63 c2	movslq	%edx, %rax
10000f7f2:	48 c1 e0 04	shlq	$4, %rax
10000f7f6:	48 8d 8d 70 ff ff ff	leaq	-144(%rbp), %rcx
10000f7fd:	f2 0f 10 44 08 f0	movsd	-16(%rax,%rcx), %xmm0
10000f803:	f2 0f 10 4c 08 f8	movsd	-8(%rax,%rcx), %xmm1
10000f809:	48 8b 05 08 d0 02 00	movq	184328(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10000f810:	48 8b 00	movq	(%rax), %rax
10000f813:	48 3b 45 f8	cmpq	-8(%rbp), %rax
10000f817:	75 09	jne	0x10000f822
10000f819:	48 81 c4 90 00 00 00	addq	$144, %rsp
10000f820:	5d	popq	%rbp
10000f821:	c3	retq
10000f822:	e8 89 fb 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10000f827:	55	pushq	%rbp
10000f828:	48 89 e5	movq	%rsp, %rbp
10000f82b:	41 57	pushq	%r15
10000f82d:	41 56	pushq	%r14
10000f82f:	41 55	pushq	%r13
10000f831:	41 54	pushq	%r12
10000f833:	53	pushq	%rbx
10000f834:	48 81 ec e8 00 00 00	subq	$232, %rsp
10000f83b:	48 89 4d a0	movq	%rcx, -96(%rbp)
10000f83f:	48 85 d2	testq	%rdx, %rdx
10000f842:	0f 84 9e 03 00 00	je	0x10000fbe6
10000f848:	4d 89 c5	movq	%r8, %r13
10000f84b:	49 89 d6	movq	%rdx, %r14
10000f84e:	49 89 fc	movq	%rdi, %r12
10000f851:	4c 8d 7d 10	leaq	16(%rbp), %r15
10000f855:	48 89 d7	movq	%rdx, %rdi
10000f858:	e8 25 f9 01 00	callq	0x10002f182 ## symbol stub for: _CGImageHasAlpha
10000f85d:	c6 45 d7 01	movb	$1, -41(%rbp)
10000f861:	84 c0	testb	%al, %al
10000f863:	75 0f	jne	0x10000f874
10000f865:	4c 89 f7	movq	%r14, %rdi
10000f868:	e8 f7 f8 01 00	callq	0x10002f164 ## symbol stub for: _CGImageGetMask
10000f86d:	48 85 c0	testq	%rax, %rax
10000f870:	0f 95 45 d7	setne	-41(%rbp)
10000f874:	4c 89 f7	movq	%r14, %rdi
10000f877:	e8 00 f9 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
10000f87c:	48 89 c3	movq	%rax, %rbx
10000f87f:	4c 89 f7	movq	%r14, %rdi
10000f882:	e8 d7 f8 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10000f887:	66 48 0f 6e c3	movq	%rbx, %xmm0
10000f88c:	66 48 0f 6e c8	movq	%rax, %xmm1
10000f891:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
10000f895:	66 0f ef d2	pxor	%xmm2, %xmm2
10000f899:	66 0f 6f c8	movdqa	%xmm0, %xmm1
10000f89d:	66 0f 3a 0e ca cc	pblendw	$204, %xmm2, %xmm1
10000f8a3:	66 0f eb 0d 95 98 02 00	por	170133(%rip), %xmm1
10000f8ab:	66 0f 73 d0 20	psrlq	$32, %xmm0
10000f8b0:	66 0f eb 05 98 98 02 00	por	170136(%rip), %xmm0
10000f8b8:	66 0f 5c 05 a0 98 02 00	subpd	170144(%rip), %xmm0
10000f8c0:	66 0f 58 c1	addpd	%xmm1, %xmm0
10000f8c4:	66 0f 7f 55 b0	movdqa	%xmm2, -80(%rbp)
10000f8c9:	66 0f 29 45 c0	movapd	%xmm0, -64(%rbp)
10000f8ce:	41 0f 10 07	movups	(%r15), %xmm0
10000f8d2:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000f8d7:	41 0f 10 57 20	movups	32(%r15), %xmm2
10000f8dc:	0f 11 54 24 40	movups	%xmm2, 64(%rsp)
10000f8e1:	0f 11 4c 24 30	movups	%xmm1, 48(%rsp)
10000f8e6:	0f 11 44 24 20	movups	%xmm0, 32(%rsp)
10000f8eb:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000f8ef:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000f8f3:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f8f8:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f8fc:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10000f903:	48 89 df	movq	%rbx, %rdi
10000f906:	e8 1f f9 01 00	callq	0x10002f22a ## symbol stub for: _CGRectApplyAffineTransform
10000f90b:	0f 10 03	movups	(%rbx), %xmm0
10000f90e:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000f912:	0f 29 4d c0	movaps	%xmm1, -64(%rbp)
10000f916:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10000f91a:	48 8b 35 bf 16 04 00	movq	267967(%rip), %rsi ## Objc selector ref: createCacheContext:withAlpha:context:
10000f921:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000f925:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000f929:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f92e:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f932:	0f b6 55 d7	movzbl	-41(%rbp), %edx
10000f936:	4c 89 e7	movq	%r12, %rdi
10000f939:	4c 89 e9	movq	%r13, %rcx
10000f93c:	ff 15 de d2 02 00	callq	*185054(%rip) ## Objc message: -[%rdi createCacheContext:withAlpha:context:]
10000f942:	48 85 c0	testq	%rax, %rax
10000f945:	0f 84 9b 02 00 00	je	0x10000fbe6
10000f94b:	49 89 c5	movq	%rax, %r13
10000f94e:	4c 89 75 a8	movq	%r14, -88(%rbp)
10000f952:	48 8b 05 87 33 04 00	movq	275335(%rip), %rax
10000f959:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10000f95d:	48 8b 35 94 1f 04 00	movq	270228(%rip), %rsi ## Objc selector ref: orientation
10000f964:	48 8b 1d b5 d2 02 00	movq	185013(%rip), %rbx ## Objc message: -[%rdi orientation]
10000f96b:	ff d3	callq	*%rbx
10000f96d:	48 8b 35 9c 2a 04 00	movq	273052(%rip), %rsi ## Objc selector ref: translationForDrawingToCache:orientation:
10000f974:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000f978:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000f97c:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f981:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f985:	4c 89 e7	movq	%r12, %rdi
10000f988:	89 c2	movl	%eax, %edx
10000f98a:	ff d3	callq	*%rbx
10000f98c:	41 0f 10 17	movups	(%r15), %xmm2
10000f990:	41 0f 10 5f 10	movups	16(%r15), %xmm3
10000f995:	41 0f 10 67 20	movups	32(%r15), %xmm4
10000f99a:	0f 11 64 24 20	movups	%xmm4, 32(%rsp)
10000f99f:	0f 11 5c 24 10	movups	%xmm3, 16(%rsp)
10000f9a4:	0f 11 14 24	movups	%xmm2, (%rsp)
10000f9a8:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10000f9af:	48 89 df	movq	%rbx, %rdi
10000f9b2:	e8 d3 f5 01 00	callq	0x10002ef8a ## symbol stub for: _CGAffineTransformTranslate
10000f9b7:	0f 10 03	movups	(%rbx), %xmm0
10000f9ba:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000f9be:	0f 10 53 20	movups	32(%rbx), %xmm2
10000f9c2:	41 0f 11 57 20	movups	%xmm2, 32(%r15)
10000f9c7:	41 0f 11 4f 10	movups	%xmm1, 16(%r15)
10000f9cc:	41 0f 11 07	movups	%xmm0, (%r15)
10000f9d0:	4c 89 ef	movq	%r13, %rdi
10000f9d3:	e8 ea f6 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10000f9d8:	41 0f 10 07	movups	(%r15), %xmm0
10000f9dc:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000f9e1:	f3 41 0f 6f 57 20	movdqu	32(%r15), %xmm2
10000f9e7:	f3 0f 7f 54 24 20	movdqu	%xmm2, 32(%rsp)
10000f9ed:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000f9f2:	0f 11 04 24	movups	%xmm0, (%rsp)
10000f9f6:	4c 89 ef	movq	%r13, %rdi
10000f9f9:	e8 7c f6 01 00	callq	0x10002f07a ## symbol stub for: _CGContextConcatCTM
10000f9fe:	48 8b 05 cb 32 04 00	movq	275147(%rip), %rax
10000fa05:	48 8b 0d bc 32 04 00	movq	275132(%rip), %rcx
10000fa0c:	f3 41 0f 7e 04 0c	movq	(%r12,%rcx), %xmm0
10000fa12:	f3 41 0f 7e 0c 04	movq	(%r12,%rax), %xmm1
10000fa18:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
10000fa1c:	66 0f 6f c1	movdqa	%xmm1, %xmm0
10000fa20:	66 0f ef d2	pxor	%xmm2, %xmm2
10000fa24:	66 0f 3a 0e c2 cc	pblendw	$204, %xmm2, %xmm0
10000fa2a:	66 0f eb 05 0e 97 02 00	por	169742(%rip), %xmm0
10000fa32:	66 0f 73 d1 20	psrlq	$32, %xmm1
10000fa37:	66 0f eb 0d 11 97 02 00	por	169745(%rip), %xmm1
10000fa3f:	66 0f 5c 0d 19 97 02 00	subpd	169753(%rip), %xmm1
10000fa47:	4c 8b 35 b2 32 04 00	movq	275122(%rip), %r14
10000fa4e:	66 0f 58 c8	addpd	%xmm0, %xmm1
10000fa52:	f3 43 0f 7f 14 34	movdqu	%xmm2, (%r12,%r14)
10000fa58:	66 43 0f 11 4c 34 10	movupd	%xmm1, 16(%r12,%r14)
10000fa5f:	41 0f 10 07	movups	(%r15), %xmm0
10000fa63:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000fa68:	41 0f 10 57 20	movups	32(%r15), %xmm2
10000fa6d:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10000fa72:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fa77:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fa7b:	48 8d 9d 40 ff ff ff	leaq	-192(%rbp), %rbx
10000fa82:	48 89 df	movq	%rbx, %rdi
10000fa85:	e8 f4 f4 01 00	callq	0x10002ef7e ## symbol stub for: _CGAffineTransformInvert
10000fa8a:	0f 10 03	movups	(%rbx), %xmm0
10000fa8d:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000fa91:	0f 10 53 20	movups	32(%rbx), %xmm2
10000fa95:	0f 11 54 24 40	movups	%xmm2, 64(%rsp)
10000fa9a:	0f 11 4c 24 30	movups	%xmm1, 48(%rsp)
10000fa9f:	0f 11 44 24 20	movups	%xmm0, 32(%rsp)
10000faa4:	43 0f 10 04 34	movups	(%r12,%r14), %xmm0
10000faa9:	43 0f 10 4c 34 10	movups	16(%r12,%r14), %xmm1
10000faaf:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fab4:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fab8:	48 8d bd 70 ff ff ff	leaq	-144(%rbp), %rdi
10000fabf:	e8 66 f7 01 00	callq	0x10002f22a ## symbol stub for: _CGRectApplyAffineTransform
10000fac4:	80 7d d7 00	cmpb	$0, -41(%rbp)
10000fac8:	75 3f	jne	0x10000fb09
10000faca:	4c 89 ef	movq	%r13, %rdi
10000facd:	e8 f0 f5 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10000fad2:	f2 0f 10 05 2e 85 02 00	movsd	165166(%rip), %xmm0
10000fada:	4c 89 ef	movq	%r13, %rdi
10000fadd:	0f 28 c8	movaps	%xmm0, %xmm1
10000fae0:	e8 ef f5 01 00	callq	0x10002f0d4 ## symbol stub for: _CGContextSetGrayFillColor
10000fae5:	0f 10 85 70 ff ff ff	movups	-144(%rbp), %xmm0
10000faec:	0f 10 4d 80	movups	-128(%rbp), %xmm1
10000faf0:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000faf5:	0f 11 04 24	movups	%xmm0, (%rsp)
10000faf9:	4c 89 ef	movq	%r13, %rdi
10000fafc:	e8 97 f5 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
10000fb01:	4c 89 ef	movq	%r13, %rdi
10000fb04:	e8 b3 f5 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10000fb09:	48 8b 5d a0	movq	-96(%rbp), %rbx
10000fb0d:	48 85 db	testq	%rbx, %rbx
10000fb10:	4c 8b 75 a8	movq	-88(%rbp), %r14
10000fb14:	74 62	je	0x10000fb78
10000fb16:	48 8b 35 e3 11 04 00	movq	266723(%rip), %rsi ## Objc selector ref: applyToContext:
10000fb1d:	48 89 df	movq	%rbx, %rdi
10000fb20:	4c 89 ea	movq	%r13, %rdx
10000fb23:	48 8b 05 f6 d0 02 00	movq	184566(%rip), %rax ## Objc message: -[%rdi applyToContext:]
10000fb2a:	ff d0	callq	*%rax
10000fb2c:	4c 8d bd 70 ff ff ff	leaq	-144(%rbp), %r15
10000fb33:	4c 89 ef	movq	%r13, %rdi
10000fb36:	4c 89 fe	movq	%r15, %rsi
10000fb39:	e8 2a f5 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10000fb3e:	41 0f 10 07	movups	(%r15), %xmm0
10000fb42:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10000fb47:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fb4c:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fb50:	4c 89 ef	movq	%r13, %rdi
10000fb53:	4c 89 f6	movq	%r14, %rsi
10000fb56:	e8 25 f5 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
10000fb5b:	4c 89 ef	movq	%r13, %rdi
10000fb5e:	e8 2f f5 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10000fb63:	48 8b 35 76 1f 04 00	movq	270198(%rip), %rsi ## Objc selector ref: removeFromContext:
10000fb6a:	48 89 df	movq	%rbx, %rdi
10000fb6d:	4c 89 ea	movq	%r13, %rdx
10000fb70:	ff 15 aa d0 02 00	callq	*184490(%rip) ## Objc message: -[%rdi removeFromContext:]
10000fb76:	eb 35	jmp	0x10000fbad
10000fb78:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10000fb7f:	4c 89 ef	movq	%r13, %rdi
10000fb82:	48 89 de	movq	%rbx, %rsi
10000fb85:	e8 de f4 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10000fb8a:	0f 10 03	movups	(%rbx), %xmm0
10000fb8d:	0f 10 4b 10	movups	16(%rbx), %xmm1
10000fb91:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fb96:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fb9a:	4c 89 ef	movq	%r13, %rdi
10000fb9d:	4c 89 f6	movq	%r14, %rsi
10000fba0:	e8 db f4 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
10000fba5:	4c 89 ef	movq	%r13, %rdi
10000fba8:	e8 e5 f4 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10000fbad:	4c 89 ef	movq	%r13, %rdi
10000fbb0:	e8 e9 f4 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
10000fbb5:	4c 89 ef	movq	%r13, %rdi
10000fbb8:	e8 ff f4 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10000fbbd:	48 8b 1d c4 30 04 00	movq	274628(%rip), %rbx
10000fbc4:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
10000fbc8:	48 85 ff	testq	%rdi, %rdi
10000fbcb:	74 05	je	0x10000fbd2
10000fbcd:	e8 b6 f5 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10000fbd2:	4c 89 ef	movq	%r13, %rdi
10000fbd5:	e8 bc f3 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
10000fbda:	49 89 04 1c	movq	%rax, (%r12,%rbx)
10000fbde:	4c 89 ef	movq	%r13, %rdi
10000fbe1:	e8 d0 f4 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
10000fbe6:	48 81 c4 e8 00 00 00	addq	$232, %rsp
10000fbed:	5b	popq	%rbx
10000fbee:	41 5c	popq	%r12
10000fbf0:	41 5d	popq	%r13
10000fbf2:	41 5e	popq	%r14
10000fbf4:	41 5f	popq	%r15
10000fbf6:	5d	popq	%rbp
10000fbf7:	c3	retq
10000fbf8:	55	pushq	%rbp
10000fbf9:	48 89 e5	movq	%rsp, %rbp
10000fbfc:	41 57	pushq	%r15
10000fbfe:	41 56	pushq	%r14
10000fc00:	53	pushq	%rbx
10000fc01:	48 83 ec 48	subq	$72, %rsp
10000fc05:	48 89 fb	movq	%rdi, %rbx
10000fc08:	4c 8b 35 a9 30 04 00	movq	274601(%rip), %r14
10000fc0f:	49 01 fe	addq	%rdi, %r14
10000fc12:	48 85 ff	testq	%rdi, %rdi
10000fc15:	74 15	je	0x10000fc2c
10000fc17:	48 8b 15 b2 11 04 00	movq	266674(%rip), %rdx ## Objc selector ref: bounds
10000fc1e:	48 8d 7d c0	leaq	-64(%rbp), %rdi
10000fc22:	48 89 de	movq	%rbx, %rsi
10000fc25:	e8 b8 f8 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000fc2a:	eb 0b	jmp	0x10000fc37
10000fc2c:	0f 57 c0	xorps	%xmm0, %xmm0
10000fc2f:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000fc33:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10000fc37:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
10000fc3b:	41 0f 11 06	movups	%xmm0, (%r14)
10000fc3f:	4c 8b 3d ba 30 04 00	movq	274618(%rip), %r15
10000fc46:	42 0f 10 04 3b	movups	(%rbx,%r15), %xmm0
10000fc4b:	42 0f 10 4c 3b 10	movups	16(%rbx,%r15), %xmm1
10000fc51:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fc56:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fc5a:	e8 e3 f5 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
10000fc5f:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10000fc63:	f3 0f 11 45 e4	movss	%xmm0, -28(%rbp)
10000fc68:	42 0f 10 04 3b	movups	(%rbx,%r15), %xmm0
10000fc6d:	42 0f 10 4c 3b 10	movups	16(%rbx,%r15), %xmm1
10000fc73:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fc78:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fc7c:	e8 af f5 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
10000fc81:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10000fc85:	0f 57 c9	xorps	%xmm1, %xmm1
10000fc88:	f3 0f 5a 4d e4	cvtss2sd	-28(%rbp), %xmm1
10000fc8d:	66 41 0f 2e 0e	ucomisd	(%r14), %xmm1
10000fc92:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10000fc96:	73 0c	jae	0x10000fca4
10000fc98:	66 41 0f 2e 46 08	ucomisd	8(%r14), %xmm0
10000fc9e:	73 04	jae	0x10000fca4
10000fca0:	31 c0	xorl	%eax, %eax
10000fca2:	eb 23	jmp	0x10000fcc7
10000fca4:	48 8b 0d 05 30 04 00	movq	274437(%rip), %rcx
10000fcab:	66 0f 2e 0c 0b	ucomisd	(%rbx,%rcx), %xmm1
10000fcb0:	76 05	jbe	0x10000fcb7
10000fcb2:	f2 41 0f 11 0e	movsd	%xmm1, (%r14)
10000fcb7:	b0 01	movb	$1, %al
10000fcb9:	66 0f 2e 44 0b 08	ucomisd	8(%rbx,%rcx), %xmm0
10000fcbf:	76 06	jbe	0x10000fcc7
10000fcc1:	f2 41 0f 11 46 08	movsd	%xmm0, 8(%r14)
10000fcc7:	0f b6 c0	movzbl	%al, %eax
10000fcca:	48 83 c4 48	addq	$72, %rsp
10000fcce:	5b	popq	%rbx
10000fccf:	41 5e	popq	%r14
10000fcd1:	41 5f	popq	%r15
10000fcd3:	5d	popq	%rbp
10000fcd4:	c3	retq
10000fcd5:	55	pushq	%rbp
10000fcd6:	48 89 e5	movq	%rsp, %rbp
10000fcd9:	41 57	pushq	%r15
10000fcdb:	41 56	pushq	%r14
10000fcdd:	41 54	pushq	%r12
10000fcdf:	53	pushq	%rbx
10000fce0:	48 81 ec 80 00 00 00	subq	$128, %rsp
10000fce7:	48 89 f3	movq	%rsi, %rbx
10000fcea:	49 89 fe	movq	%rdi, %r14
10000fced:	4c 8b 3d 0c 30 04 00	movq	274444(%rip), %r15
10000fcf4:	4e 8d 24 3e	leaq	(%rsi,%r15), %r12
10000fcf8:	42 0f 10 04 3e	movups	(%rsi,%r15), %xmm0
10000fcfd:	42 0f 10 4c 3e 10	movups	16(%rsi,%r15), %xmm1
10000fd03:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fd08:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fd0c:	e8 25 f5 01 00	callq	0x10002f236 ## symbol stub for: _CGRectGetMinX
10000fd11:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10000fd15:	42 0f 10 04 3b	movups	(%rbx,%r15), %xmm0
10000fd1a:	42 0f 10 4c 3b 10	movups	16(%rbx,%r15), %xmm1
10000fd20:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fd25:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fd29:	e8 0e f5 01 00	callq	0x10002f23c ## symbol stub for: _CGRectGetMinY
10000fd2e:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000fd32:	42 0f 10 04 3b	movups	(%rbx,%r15), %xmm0
10000fd37:	42 0f 10 4c 3b 10	movups	16(%rbx,%r15), %xmm1
10000fd3d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fd42:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fd46:	e8 f7 f4 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
10000fd4b:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10000fd4f:	66 42 0f 10 04 3b	movupd	(%rbx,%r15), %xmm0
10000fd55:	42 0f 10 4c 3b 10	movups	16(%rbx,%r15), %xmm1
10000fd5b:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fd60:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000fd65:	e8 c6 f4 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
10000fd6a:	0f 57 d2	xorps	%xmm2, %xmm2
10000fd6d:	48 85 db	testq	%rbx, %rbx
10000fd70:	74 25	je	0x10000fd97
10000fd72:	48 8b 15 57 10 04 00	movq	266327(%rip), %rdx ## Objc selector ref: bounds
10000fd79:	4c 8d 7d b0	leaq	-80(%rbp), %r15
10000fd7d:	4c 89 ff	movq	%r15, %rdi
10000fd80:	48 89 de	movq	%rbx, %rsi
10000fd83:	66 0f 29 45 a0	movapd	%xmm0, -96(%rbp)
10000fd88:	e8 55 f7 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000fd8d:	66 0f 28 45 a0	movapd	-96(%rbp), %xmm0
10000fd92:	41 0f 10 57 10	movups	16(%r15), %xmm2
10000fd97:	66 0f 28 4d 90	movapd	-112(%rbp), %xmm1
10000fd9c:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
10000fda0:	66 0f 5a c9	cvtpd2ps	%xmm1, %xmm1
10000fda4:	66 0f 29 4d 90	movapd	%xmm1, -112(%rbp)
10000fda9:	66 0f 28 4d 80	movapd	-128(%rbp), %xmm1
10000fdae:	66 0f 14 4d d0	unpcklpd	-48(%rbp), %xmm1
10000fdb3:	66 0f 5a c9	cvtpd2ps	%xmm1, %xmm1
10000fdb7:	66 0f 29 4d 80	movapd	%xmm1, -128(%rbp)
10000fdbc:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10000fdc0:	66 0f 29 4d b0	movapd	%xmm1, -80(%rbp)
10000fdc5:	0f 29 55 c0	movaps	%xmm2, -64(%rbp)
10000fdc9:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000fdcd:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000fdd1:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fdd6:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fdda:	e8 57 f4 01 00	callq	0x10002f236 ## symbol stub for: _CGRectGetMinX
10000fddf:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10000fde3:	66 0f 28 45 b0	movapd	-80(%rbp), %xmm0
10000fde8:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000fdec:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fdf1:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000fdf6:	e8 41 f4 01 00	callq	0x10002f23c ## symbol stub for: _CGRectGetMinY
10000fdfb:	66 0f 28 4d d0	movapd	-48(%rbp), %xmm1
10000fe00:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
10000fe04:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
10000fe08:	66 0f 29 45 d0	movapd	%xmm0, -48(%rbp)
10000fe0d:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10000fe11:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000fe15:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fe1a:	0f 11 04 24	movups	%xmm0, (%rsp)
10000fe1e:	e8 1f f4 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
10000fe23:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10000fe27:	66 0f 28 45 b0	movapd	-80(%rbp), %xmm0
10000fe2c:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10000fe30:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000fe35:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10000fe3a:	e8 f1 f3 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
10000fe3f:	66 0f 28 4d a0	movapd	-96(%rbp), %xmm1
10000fe44:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
10000fe48:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
10000fe4c:	66 0f 28 c8	movapd	%xmm0, %xmm1
10000fe50:	0f 28 5d 90	movaps	-112(%rbp), %xmm3
10000fe54:	0f 5e cb	divps	%xmm3, %xmm1
10000fe57:	f3 0f 16 d1	movshdup	%xmm1, %xmm2
10000fe5b:	f3 0f 5d ca	minss	%xmm2, %xmm1
10000fe5f:	f3 0f 12 d1	movsldup	%xmm1, %xmm2
10000fe63:	0f 59 da	mulps	%xmm2, %xmm3
10000fe66:	0f 5c c3	subps	%xmm3, %xmm0
10000fe69:	0f 59 05 00 93 02 00	mulps	168704(%rip), %xmm0
10000fe70:	0f 28 5d 80	movaps	-128(%rbp), %xmm3
10000fe74:	0f 59 da	mulps	%xmm2, %xmm3
10000fe77:	0f 5c c3	subps	%xmm3, %xmm0
10000fe7a:	0f 58 45 d0	addps	-48(%rbp), %xmm0
10000fe7e:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
10000fe82:	0f 5a c0	cvtps2pd	%xmm0, %xmm0
10000fe85:	f2 41 0f 12 54 24 08	movddup	8(%r12), %xmm2
10000fe8c:	0f 57 db	xorps	%xmm3, %xmm3
10000fe8f:	0f 16 d9	movlhps	%xmm1, %xmm3
10000fe92:	66 0f 59 d3	mulpd	%xmm3, %xmm2
10000fe96:	66 0f 28 eb	movapd	%xmm3, %xmm5
10000fe9a:	0f 28 d9	movaps	%xmm1, %xmm3
10000fe9d:	41 0f 16 1c 24	movhps	(%r12), %xmm3
10000fea2:	f2 41 0f 10 24 24	movsd	(%r12), %xmm4
10000fea8:	66 0f 59 e3	mulpd	%xmm3, %xmm4
10000feac:	66 0f 58 e2	addpd	%xmm2, %xmm4
10000feb0:	66 0f 58 e0	addpd	%xmm0, %xmm4
10000feb4:	66 41 0f 11 26	movupd	%xmm4, (%r14)
10000feb9:	f2 41 0f 12 44 24 18	movddup	24(%r12), %xmm0
10000fec0:	66 0f 59 c5	mulpd	%xmm5, %xmm0
10000fec4:	41 0f 16 4c 24 10	movhps	16(%r12), %xmm1
10000feca:	f2 41 0f 10 54 24 10	movsd	16(%r12), %xmm2
10000fed1:	66 0f 59 d1	mulpd	%xmm1, %xmm2
10000fed5:	66 0f 58 d0	addpd	%xmm0, %xmm2
10000fed9:	66 41 0f 11 56 10	movupd	%xmm2, 16(%r14)
10000fedf:	4c 89 f0	movq	%r14, %rax
10000fee2:	48 81 c4 80 00 00 00	addq	$128, %rsp
10000fee9:	5b	popq	%rbx
10000feea:	41 5c	popq	%r12
10000feec:	41 5e	popq	%r14
10000feee:	41 5f	popq	%r15
10000fef0:	5d	popq	%rbp
10000fef1:	c3	retq
10000fef2:	55	pushq	%rbp
10000fef3:	48 89 e5	movq	%rsp, %rbp
10000fef6:	41 57	pushq	%r15
10000fef8:	41 56	pushq	%r14
10000fefa:	41 55	pushq	%r13
10000fefc:	41 54	pushq	%r12
10000fefe:	53	pushq	%rbx
10000feff:	48 81 ec a8 00 00 00	subq	$168, %rsp
10000ff06:	41 89 d7	movl	%edx, %r15d
10000ff09:	49 89 fd	movq	%rdi, %r13
10000ff0c:	48 8b 3d 25 27 04 00	movq	272165(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10000ff13:	48 8b 35 e6 10 04 00	movq	266470(%rip), %rsi ## Objc selector ref: currentContext
10000ff1a:	48 8b 1d ff cc 02 00	movq	183551(%rip), %rbx ## Objc message: +[NSGraphicsContext currentContext]
10000ff21:	ff d3	callq	*%rbx
10000ff23:	48 8b 35 36 0c 04 00	movq	265270(%rip), %rsi ## Objc selector ref: CGContext
10000ff2a:	48 89 c7	movq	%rax, %rdi
10000ff2d:	ff d3	callq	*%rbx
10000ff2f:	48 89 c3	movq	%rax, %rbx
10000ff32:	48 8b 05 4f 2d 04 00	movq	273743(%rip), %rax
10000ff39:	49 83 7c 05 00 00	cmpq	$0, (%r13,%rax)
10000ff3f:	0f 84 f1 06 00 00	je	0x100010636
10000ff45:	48 85 db	testq	%rbx, %rbx
10000ff48:	0f 84 e8 06 00 00	je	0x100010636
10000ff4e:	48 8b 15 83 0e 04 00	movq	265859(%rip), %rdx ## Objc selector ref: boundsRectWithPreservedAspectRatio
10000ff55:	4c 8d b5 70 ff ff ff	leaq	-144(%rbp), %r14
10000ff5c:	4c 89 f7	movq	%r14, %rdi
10000ff5f:	4c 89 ee	movq	%r13, %rsi
10000ff62:	e8 7b f5 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10000ff67:	41 0f 28 06	movaps	(%r14), %xmm0
10000ff6b:	41 0f 28 4e 10	movaps	16(%r14), %xmm1
10000ff70:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10000ff75:	0f 11 04 24	movups	%xmm0, (%rsp)
10000ff79:	48 89 5d b0	movq	%rbx, -80(%rbp)
10000ff7d:	4c 8d 65 90	leaq	-112(%rbp), %r12
10000ff81:	4c 89 e7	movq	%r12, %rdi
10000ff84:	e8 bf f2 01 00	callq	0x10002f248 ## symbol stub for: _CGRectIntegral
10000ff89:	41 0f 10 04 24	movups	(%r12), %xmm0
10000ff8e:	41 0f 10 4c 24 10	movups	16(%r12), %xmm1
10000ff94:	4c 8b 65 b0	movq	-80(%rbp), %r12
10000ff98:	41 0f 29 4e 10	movaps	%xmm1, 16(%r14)
10000ff9d:	41 0f 29 06	movaps	%xmm0, (%r14)
10000ffa1:	4c 89 e7	movq	%r12, %rdi
10000ffa4:	4c 89 f6	movq	%r14, %rsi
10000ffa7:	e8 bc f0 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10000ffac:	48 8d 75 b8	leaq	-72(%rbp), %rsi
10000ffb0:	48 8d 55 bc	leaq	-68(%rbp), %rdx
10000ffb4:	4c 89 e7	movq	%r12, %rdi
10000ffb7:	e8 ee f0 01 00	callq	0x10002f0aa ## symbol stub for: _CGContextGetInterpolationQualityRange
10000ffbc:	4c 89 e7	movq	%r12, %rdi
10000ffbf:	44 89 fe	movl	%r15d, %esi
10000ffc2:	44 89 fa	movl	%r15d, %edx
10000ffc5:	e8 10 f1 01 00	callq	0x10002f0da ## symbol stub for: _CGContextSetInterpolationQualityRange
10000ffca:	48 8b 05 07 2d 04 00	movq	273671(%rip), %rax
10000ffd1:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10000ffd6:	48 8b 35 7b 13 04 00	movq	267131(%rip), %rsi ## Objc selector ref: imageCorrection
10000ffdd:	ff 15 3d cc 02 00	callq	*183357(%rip) ## Objc message: -[%rdi imageCorrection]
10000ffe3:	48 85 c0	testq	%rax, %rax
10000ffe6:	0f 84 b4 05 00 00	je	0x1000105a0
10000ffec:	49 89 c7	movq	%rax, %r15
10000ffef:	48 8b 35 2a 0c 04 00	movq	265258(%rip), %rsi ## Objc selector ref: active
10000fff6:	48 89 c7	movq	%rax, %rdi
10000fff9:	ff 15 21 cc 02 00	callq	*183329(%rip) ## Objc message: -[%rdi active]
10000ffff:	84 c0	testb	%al, %al
100010001:	0f 84 99 05 00 00	je	0x1000105a0
100010007:	48 8b 1d ea 2c 04 00	movq	273642(%rip), %rbx
10001000e:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
100010014:	75 2d	jne	0x100010043
100010016:	48 8b 3d 5b 26 04 00	movq	271963(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIImage
10001001d:	e8 9c f4 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100010022:	48 8b 0d 5f 2c 04 00	movq	273503(%rip), %rcx
100010029:	49 8b 54 0d 00	movq	(%r13,%rcx), %rdx
10001002e:	48 8b 35 fb 13 04 00	movq	267259(%rip), %rsi ## Objc selector ref: initWithCGImage:
100010035:	48 89 c7	movq	%rax, %rdi
100010038:	ff 15 e2 cb 02 00	callq	*183266(%rip) ## Objc message: +[CIImage initWithCGImage:]
10001003e:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
100010043:	48 8b 1d be 2c 04 00	movq	273598(%rip), %rbx
10001004a:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
100010050:	4c 8b 25 c9 cb 02 00	movq	183241(%rip), %r12 ## Objc message: -[%rdi initWithCGImage:]
100010057:	75 29	jne	0x100010082
100010059:	48 8b 3d 20 26 04 00	movq	271904(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
100010060:	48 8b 35 09 12 04 00	movq	266761(%rip), %rsi ## Objc selector ref: filterWithName:
100010067:	48 8d 15 f2 d6 02 00	leaq	186098(%rip), %rdx ## Objc cfstring ref: @"CIExposureAdjust"
10001006e:	ff 15 ac cb 02 00	callq	*183212(%rip) ## Objc message: +[CIFilter filterWithName:]
100010074:	48 89 c7	movq	%rax, %rdi
100010077:	ff 15 e3 cb 02 00	callq	*183267(%rip) ## literal pool symbol address: _objc_retain
10001007d:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
100010082:	49 89 de	movq	%rbx, %r14
100010085:	48 8b 1d 84 2c 04 00	movq	273540(%rip), %rbx
10001008c:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
100010092:	75 29	jne	0x1000100bd
100010094:	48 8b 3d e5 25 04 00	movq	271845(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10001009b:	48 8b 35 ce 11 04 00	movq	266702(%rip), %rsi ## Objc selector ref: filterWithName:
1000100a2:	48 8d 15 d7 d6 02 00	leaq	186071(%rip), %rdx ## Objc cfstring ref: @"CIWhitePoint"
1000100a9:	ff 15 71 cb 02 00	callq	*183153(%rip) ## Objc message: +[CIFilter filterWithName:]
1000100af:	48 89 c7	movq	%rax, %rdi
1000100b2:	ff 15 a8 cb 02 00	callq	*183208(%rip) ## literal pool symbol address: _objc_retain
1000100b8:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
1000100bd:	48 8b 1d 54 2c 04 00	movq	273492(%rip), %rbx
1000100c4:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
1000100ca:	75 29	jne	0x1000100f5
1000100cc:	48 8b 3d ad 25 04 00	movq	271789(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
1000100d3:	48 8b 35 96 11 04 00	movq	266646(%rip), %rsi ## Objc selector ref: filterWithName:
1000100da:	48 8d 15 bf d6 02 00	leaq	186047(%rip), %rdx ## Objc cfstring ref: @"CIGammaAdjust"
1000100e1:	ff 15 39 cb 02 00	callq	*183097(%rip) ## Objc message: +[CIFilter filterWithName:]
1000100e7:	48 89 c7	movq	%rax, %rdi
1000100ea:	ff 15 70 cb 02 00	callq	*183152(%rip) ## literal pool symbol address: _objc_retain
1000100f0:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
1000100f5:	48 8b 1d 24 2c 04 00	movq	273444(%rip), %rbx
1000100fc:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
100010102:	75 29	jne	0x10001012d
100010104:	48 8b 3d 75 25 04 00	movq	271733(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10001010b:	48 8b 35 5e 11 04 00	movq	266590(%rip), %rsi ## Objc selector ref: filterWithName:
100010112:	48 8d 15 a7 d6 02 00	leaq	186023(%rip), %rdx ## Objc cfstring ref: @"CIColorControls"
100010119:	ff 15 01 cb 02 00	callq	*183041(%rip) ## Objc message: +[CIFilter filterWithName:]
10001011f:	48 89 c7	movq	%rax, %rdi
100010122:	ff 15 38 cb 02 00	callq	*183096(%rip) ## literal pool symbol address: _objc_retain
100010128:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
10001012d:	48 8b 1d f4 2b 04 00	movq	273396(%rip), %rbx
100010134:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
10001013a:	75 29	jne	0x100010165
10001013c:	48 8b 3d 3d 25 04 00	movq	271677(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
100010143:	48 8b 35 26 11 04 00	movq	266534(%rip), %rsi ## Objc selector ref: filterWithName:
10001014a:	48 8d 15 8f d6 02 00	leaq	185999(%rip), %rdx ## Objc cfstring ref: @"CISharpenLuminance"
100010151:	ff 15 c9 ca 02 00	callq	*182985(%rip) ## Objc message: +[CIFilter filterWithName:]
100010157:	48 89 c7	movq	%rax, %rdi
10001015a:	ff 15 00 cb 02 00	callq	*183040(%rip) ## literal pool symbol address: _objc_retain
100010160:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
100010165:	48 8b 1d c4 2b 04 00	movq	273348(%rip), %rbx
10001016c:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
100010172:	75 29	jne	0x10001019d
100010174:	48 8b 3d 05 25 04 00	movq	271621(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10001017b:	48 8b 35 ee 10 04 00	movq	266478(%rip), %rsi ## Objc selector ref: filterWithName:
100010182:	48 8d 15 77 d6 02 00	leaq	185975(%rip), %rdx ## Objc cfstring ref: @"CISepiaTone"
100010189:	ff 15 91 ca 02 00	callq	*182929(%rip) ## Objc message: +[CIFilter filterWithName:]
10001018f:	48 89 c7	movq	%rax, %rdi
100010192:	ff 15 c8 ca 02 00	callq	*182984(%rip) ## literal pool symbol address: _objc_retain
100010198:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
10001019d:	48 8b 1d 94 2b 04 00	movq	273300(%rip), %rbx
1000101a4:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
1000101aa:	75 29	jne	0x1000101d5
1000101ac:	48 8b 3d cd 24 04 00	movq	271565(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
1000101b3:	48 8b 35 b6 10 04 00	movq	266422(%rip), %rsi ## Objc selector ref: filterWithName:
1000101ba:	48 8d 15 5f d6 02 00	leaq	185951(%rip), %rdx ## Objc cfstring ref: @"CIColorCube"
1000101c1:	ff 15 59 ca 02 00	callq	*182873(%rip) ## Objc message: +[CIFilter filterWithName:]
1000101c7:	48 89 c7	movq	%rax, %rdi
1000101ca:	ff 15 90 ca 02 00	callq	*182928(%rip) ## literal pool symbol address: _objc_retain
1000101d0:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
1000101d5:	4b 8b 5c 35 00	movq	(%r13,%r14), %rbx
1000101da:	48 8b 35 0f 10 04 00	movq	266255(%rip), %rsi ## Objc selector ref: exposure
1000101e1:	4c 89 ff	movq	%r15, %rdi
1000101e4:	41 ff d4	callq	*%r12
1000101e7:	4c 8b 35 5a 1f 04 00	movq	270170(%rip), %r14 ## Objc selector ref: setValue:forKey:
1000101ee:	48 8d 0d 4b d6 02 00	leaq	185931(%rip), %rcx ## Objc cfstring ref: @"inputEV"
1000101f5:	48 89 df	movq	%rbx, %rdi
1000101f8:	4c 89 f6	movq	%r14, %rsi
1000101fb:	48 89 c2	movq	%rax, %rdx
1000101fe:	41 ff d4	callq	*%r12
100010201:	48 8b 35 d0 22 04 00	movq	271056(%rip), %rsi ## Objc selector ref: whitepoint
100010208:	4c 89 ff	movq	%r15, %rdi
10001020b:	41 ff d4	callq	*%r12
10001020e:	48 8b 0d 3b c4 02 00	movq	181307(%rip), %rcx ## literal pool symbol address: _NSCalibratedRGBColorSpace
100010215:	48 8b 11	movq	(%rcx), %rdx
100010218:	48 8b 35 b9 0c 04 00	movq	265401(%rip), %rsi ## Objc selector ref: colorUsingColorSpaceName:
10001021f:	48 89 c7	movq	%rax, %rdi
100010222:	ff 15 f8 c9 02 00	callq	*182776(%rip) ## Objc message: -[%rdi colorUsingColorSpaceName:]
100010228:	49 89 c4	movq	%rax, %r12
10001022b:	48 8b 05 de 2a 04 00	movq	273118(%rip), %rax
100010232:	49 8b 44 05 00	movq	(%r13,%rax), %rax
100010237:	48 89 45 c0	movq	%rax, -64(%rbp)
10001023b:	48 8b 1d 46 24 04 00	movq	271430(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_CIColor
100010242:	48 8b 35 1f 18 04 00	movq	268319(%rip), %rsi ## Objc selector ref: redComponent
100010249:	4c 89 e7	movq	%r12, %rdi
10001024c:	ff 15 ce c9 02 00	callq	*182734(%rip) ## Objc message: +[CIColor redComponent]
100010252:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100010257:	48 8b 35 a2 10 04 00	movq	266402(%rip), %rsi ## Objc selector ref: greenComponent
10001025e:	4c 89 e7	movq	%r12, %rdi
100010261:	ff 15 b9 c9 02 00	callq	*182713(%rip) ## Objc message: -[%rdi greenComponent]
100010267:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
10001026c:	48 8b 35 45 0b 04 00	movq	265029(%rip), %rsi ## Objc selector ref: blueComponent
100010273:	4c 89 e7	movq	%r12, %rdi
100010276:	ff 15 a4 c9 02 00	callq	*182692(%rip) ## Objc message: -[%rdi blueComponent]
10001027c:	0f 28 d0	movaps	%xmm0, %xmm2
10001027f:	48 8b 35 72 0c 04 00	movq	265330(%rip), %rsi ## Objc selector ref: colorWithRed:green:blue:alpha:
100010286:	f2 0f 10 1d 7a 7d 02 00	movsd	163194(%rip), %xmm3
10001028e:	48 89 df	movq	%rbx, %rdi
100010291:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
100010296:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10001029b:	ff 15 7f c9 02 00	callq	*182655(%rip) ## Objc message: -[%rdi colorWithRed:green:blue:alpha:]
1000102a1:	48 8d 0d b8 d5 02 00	leaq	185784(%rip), %rcx ## Objc cfstring ref: @"inputWhitePoint"
1000102a8:	48 8b 7d c0	movq	-64(%rbp), %rdi
1000102ac:	4c 89 f6	movq	%r14, %rsi
1000102af:	48 89 c2	movq	%rax, %rdx
1000102b2:	ff 15 68 c9 02 00	callq	*182632(%rip) ## Objc message: -[%rdi colorWithRed:green:blue:alpha:]
1000102b8:	48 8b 35 e1 0a 04 00	movq	264929(%rip), %rsi ## Objc selector ref: blackpoint
1000102bf:	4c 89 ff	movq	%r15, %rdi
1000102c2:	ff 15 58 c9 02 00	callq	*182616(%rip) ## Objc message: -[%rdi blackpoint]
1000102c8:	48 8b 0d 81 c3 02 00	movq	181121(%rip), %rcx ## literal pool symbol address: _NSCalibratedRGBColorSpace
1000102cf:	48 8b 11	movq	(%rcx), %rdx
1000102d2:	4c 8b 35 47 c9 02 00	movq	182599(%rip), %r14 ## Objc message: -[%rdi blackpoint]
1000102d9:	48 89 c7	movq	%rax, %rdi
1000102dc:	48 8b 35 f5 0b 04 00	movq	265205(%rip), %rsi ## Objc selector ref: colorUsingColorSpaceName:
1000102e3:	41 ff d6	callq	*%r14
1000102e6:	48 89 c3	movq	%rax, %rbx
1000102e9:	48 8b 05 20 2a 04 00	movq	272928(%rip), %rax
1000102f0:	49 8b 44 05 00	movq	(%r13,%rax), %rax
1000102f5:	48 89 45 c0	movq	%rax, -64(%rbp)
1000102f9:	4c 8b 25 88 23 04 00	movq	271240(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_CIColor
100010300:	48 89 df	movq	%rbx, %rdi
100010303:	48 8b 35 5e 17 04 00	movq	268126(%rip), %rsi ## Objc selector ref: redComponent
10001030a:	41 ff d6	callq	*%r14
10001030d:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100010312:	48 89 df	movq	%rbx, %rdi
100010315:	48 8b 35 e4 0f 04 00	movq	266212(%rip), %rsi ## Objc selector ref: greenComponent
10001031c:	41 ff d6	callq	*%r14
10001031f:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100010324:	48 89 df	movq	%rbx, %rdi
100010327:	48 8b 35 8a 0a 04 00	movq	264842(%rip), %rsi ## Objc selector ref: blueComponent
10001032e:	41 ff d6	callq	*%r14
100010331:	0f 28 d0	movaps	%xmm0, %xmm2
100010334:	4c 89 e7	movq	%r12, %rdi
100010337:	48 8b 35 ba 0b 04 00	movq	265146(%rip), %rsi ## Objc selector ref: colorWithRed:green:blue:alpha:
10001033e:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
100010343:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100010348:	f2 0f 10 1d b8 7c 02 00	movsd	163000(%rip), %xmm3
100010350:	41 ff d6	callq	*%r14
100010353:	48 8d 0d 26 d5 02 00	leaq	185638(%rip), %rcx ## Objc cfstring ref: @"inputBlackPoint"
10001035a:	48 8b 7d c0	movq	-64(%rbp), %rdi
10001035e:	4c 8b 25 e3 1d 04 00	movq	269795(%rip), %r12 ## Objc selector ref: setValue:forKey:
100010365:	4c 89 e6	movq	%r12, %rsi
100010368:	48 89 c2	movq	%rax, %rdx
10001036b:	41 ff d6	callq	*%r14
10001036e:	48 8b 05 9b 29 04 00	movq	272795(%rip), %rax
100010375:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001037a:	48 8b 35 6f 11 04 00	movq	266607(%rip), %rsi ## Objc selector ref: inputintensity
100010381:	4c 89 ff	movq	%r15, %rdi
100010384:	41 ff d6	callq	*%r14
100010387:	48 8d 0d 12 d5 02 00	leaq	185618(%rip), %rcx ## Objc cfstring ref: @"inputIntensity"
10001038e:	48 89 df	movq	%rbx, %rdi
100010391:	4c 89 e6	movq	%r12, %rsi
100010394:	48 89 c2	movq	%rax, %rdx
100010397:	41 ff d6	callq	*%r14
10001039a:	48 8b 05 77 29 04 00	movq	272759(%rip), %rax
1000103a1:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
1000103a6:	48 8b 35 0b 0f 04 00	movq	265995(%rip), %rsi ## Objc selector ref: gamma
1000103ad:	4c 89 ff	movq	%r15, %rdi
1000103b0:	41 ff d6	callq	*%r14
1000103b3:	48 8d 0d 06 d5 02 00	leaq	185606(%rip), %rcx ## Objc cfstring ref: @"inputPower"
1000103ba:	48 89 df	movq	%rbx, %rdi
1000103bd:	4c 89 e6	movq	%r12, %rsi
1000103c0:	48 89 c2	movq	%rax, %rdx
1000103c3:	41 ff d6	callq	*%r14
1000103c6:	4c 8b 25 53 29 04 00	movq	272723(%rip), %r12
1000103cd:	4b 8b 5c 25 00	movq	(%r13,%r12), %rbx
1000103d2:	48 8b 35 07 0a 04 00	movq	264711(%rip), %rsi ## Objc selector ref: brightness
1000103d9:	4c 89 ff	movq	%r15, %rdi
1000103dc:	41 ff d6	callq	*%r14
1000103df:	48 8d 0d fa d4 02 00	leaq	185594(%rip), %rcx ## Objc cfstring ref: @"inputBrightness"
1000103e6:	48 89 df	movq	%rbx, %rdi
1000103e9:	4c 8b 25 58 1d 04 00	movq	269656(%rip), %r12 ## Objc selector ref: setValue:forKey:
1000103f0:	4c 89 e6	movq	%r12, %rsi
1000103f3:	48 89 c2	movq	%rax, %rdx
1000103f6:	41 ff d6	callq	*%r14
1000103f9:	48 8b 05 20 29 04 00	movq	272672(%rip), %rax
100010400:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
100010405:	48 8b 35 5c 0b 04 00	movq	265052(%rip), %rsi ## Objc selector ref: contrast
10001040c:	4c 89 ff	movq	%r15, %rdi
10001040f:	41 ff d6	callq	*%r14
100010412:	48 8d 0d e7 d4 02 00	leaq	185575(%rip), %rcx ## Objc cfstring ref: @"inputContrast"
100010419:	48 89 df	movq	%rbx, %rdi
10001041c:	4c 89 e6	movq	%r12, %rsi
10001041f:	48 89 c2	movq	%rax, %rdx
100010422:	41 ff d6	callq	*%r14
100010425:	48 8b 05 f4 28 04 00	movq	272628(%rip), %rax
10001042c:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
100010431:	48 8b 35 40 17 04 00	movq	268096(%rip), %rsi ## Objc selector ref: saturation
100010438:	4c 89 ff	movq	%r15, %rdi
10001043b:	41 ff d6	callq	*%r14
10001043e:	48 8d 0d db d4 02 00	leaq	185563(%rip), %rcx ## Objc cfstring ref: @"inputSaturation"
100010445:	48 89 df	movq	%rbx, %rdi
100010448:	4c 89 e6	movq	%r12, %rsi
10001044b:	48 89 c2	movq	%rax, %rdx
10001044e:	41 ff d6	callq	*%r14
100010451:	48 8b 05 d0 28 04 00	movq	272592(%rip), %rax
100010458:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001045d:	48 8b 35 cc 1d 04 00	movq	269772(%rip), %rsi ## Objc selector ref: sharpness
100010464:	4c 89 ff	movq	%r15, %rdi
100010467:	41 ff d6	callq	*%r14
10001046a:	48 8d 0d cf d4 02 00	leaq	185551(%rip), %rcx ## Objc cfstring ref: @"inputSharpness"
100010471:	48 89 df	movq	%rbx, %rdi
100010474:	4c 89 e6	movq	%r12, %rsi
100010477:	48 89 c2	movq	%rax, %rdx
10001047a:	41 ff d6	callq	*%r14
10001047d:	48 8b 05 ac 28 04 00	movq	272556(%rip), %rax
100010484:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
100010489:	48 8b 35 d8 17 04 00	movq	268248(%rip), %rsi ## Objc selector ref: sepiaintensity
100010490:	4c 89 ff	movq	%r15, %rdi
100010493:	41 ff d6	callq	*%r14
100010496:	48 89 df	movq	%rbx, %rdi
100010499:	4c 89 e6	movq	%r12, %rsi
10001049c:	48 89 c2	movq	%rax, %rdx
10001049f:	48 8d 0d fa d3 02 00	leaq	185338(%rip), %rcx ## Objc cfstring ref: @"inputIntensity"
1000104a6:	41 ff d6	callq	*%r14
1000104a9:	48 8b 35 40 1d 04 00	movq	269632(%rip), %rsi ## Objc selector ref: setupSoftproofData
1000104b0:	4c 89 ef	movq	%r13, %rdi
1000104b3:	41 ff d6	callq	*%r14
1000104b6:	48 85 c0	testq	%rax, %rax
1000104b9:	74 4a	je	0x100010505
1000104bb:	48 8b 1d 76 28 04 00	movq	272502(%rip), %rbx
1000104c2:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
1000104c7:	48 8d 0d 92 d4 02 00	leaq	185490(%rip), %rcx ## Objc cfstring ref: @"inputCubeData"
1000104ce:	4c 89 e6	movq	%r12, %rsi
1000104d1:	48 89 c2	movq	%rax, %rdx
1000104d4:	41 ff d6	callq	*%r14
1000104d7:	49 8b 5c 1d 00	movq	(%r13,%rbx), %rbx
1000104dc:	48 8b 3d 0d 21 04 00	movq	270605(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
1000104e3:	48 8b 35 36 13 04 00	movq	267062(%rip), %rsi ## Objc selector ref: numberWithInt:
1000104ea:	ba 20 00 00 00	movl	$32, %edx
1000104ef:	41 ff d6	callq	*%r14
1000104f2:	48 8d 0d 87 d4 02 00	leaq	185479(%rip), %rcx ## Objc cfstring ref: @"inputCubeDimension"
1000104f9:	48 89 df	movq	%rbx, %rdi
1000104fc:	4c 89 e6	movq	%r12, %rsi
1000104ff:	48 89 c2	movq	%rax, %rdx
100010502:	41 ff d6	callq	*%r14
100010505:	4c 8b 65 b0	movq	-80(%rbp), %r12
100010509:	4c 89 e7	movq	%r12, %rdi
10001050c:	e8 b1 eb 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100010511:	4c 8b 35 28 28 04 00	movq	272424(%rip), %r14
100010518:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001051d:	48 8b 1d 24 28 04 00	movq	272420(%rip), %rbx
100010524:	48 85 ff	testq	%rdi, %rdi
100010527:	74 07	je	0x100010530
100010529:	4d 39 64 1d 00	cmpq	%r12, (%r13,%rbx)
10001052e:	74 32	je	0x100010562
100010530:	ff 15 22 c7 02 00	callq	*182050(%rip) ## literal pool symbol address: _objc_release
100010536:	48 8b 3d 53 21 04 00	movq	270675(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIContext
10001053d:	48 8b 35 1c 0a 04 00	movq	264732(%rip), %rsi ## Objc selector ref: contextWithCGContext:options:
100010544:	4c 89 e2	movq	%r12, %rdx
100010547:	31 c9	xorl	%ecx, %ecx
100010549:	ff 15 d1 c6 02 00	callq	*181969(%rip) ## Objc message: +[CIContext contextWithCGContext:options:]
10001054f:	4b 89 44 35 00	movq	%rax, (%r13,%r14)
100010554:	48 89 c7	movq	%rax, %rdi
100010557:	ff 15 03 c7 02 00	callq	*182019(%rip) ## literal pool symbol address: _objc_retain
10001055d:	4d 89 64 1d 00	movq	%r12, (%r13,%rbx)
100010562:	48 8b 05 8f 27 04 00	movq	272271(%rip), %rax
100010569:	49 8b 54 05 00	movq	(%r13,%rax), %rdx
10001056e:	48 8b 35 6b 07 04 00	movq	264043(%rip), %rsi ## Objc selector ref: applyCIFilter:proof:
100010575:	4c 89 ef	movq	%r13, %rdi
100010578:	b9 01 00 00 00	movl	$1, %ecx
10001057d:	ff 15 9d c6 02 00	callq	*181917(%rip) ## Objc message: -[%rdi applyCIFilter:proof:]
100010583:	48 89 c3	movq	%rax, %rbx
100010586:	48 85 c0	testq	%rax, %rax
100010589:	74 3f	je	0x1000105ca
10001058b:	48 8b 15 66 0c 04 00	movq	265318(%rip), %rdx ## Objc selector ref: extent
100010592:	48 8d 7d 90	leaq	-112(%rbp), %rdi
100010596:	48 89 de	movq	%rbx, %rsi
100010599:	e8 44 ef 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001059e:	eb 35	jmp	0x1000105d5
1000105a0:	48 8b 05 e1 26 04 00	movq	272097(%rip), %rax
1000105a7:	49 8b 74 05 00	movq	(%r13,%rax), %rsi
1000105ac:	0f 28 85 70 ff ff ff	movaps	-144(%rbp), %xmm0
1000105b3:	0f 28 4d 80	movaps	-128(%rbp), %xmm1
1000105b7:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000105bc:	0f 11 04 24	movups	%xmm0, (%rsp)
1000105c0:	4c 89 e7	movq	%r12, %rdi
1000105c3:	e8 b8 ea 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
1000105c8:	eb 4e	jmp	0x100010618
1000105ca:	0f 57 c0	xorps	%xmm0, %xmm0
1000105cd:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
1000105d1:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
1000105d5:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000105da:	48 8b 35 9f 0b 04 00	movq	265119(%rip), %rsi ## Objc selector ref: drawImage:inRect:fromRect:
1000105e1:	0f 28 45 90	movaps	-112(%rbp), %xmm0
1000105e5:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
1000105e9:	0f 11 4c 24 30	movups	%xmm1, 48(%rsp)
1000105ee:	0f 11 44 24 20	movups	%xmm0, 32(%rsp)
1000105f3:	0f 28 85 70 ff ff ff	movaps	-144(%rbp), %xmm0
1000105fa:	0f 28 4d 80	movaps	-128(%rbp), %xmm1
1000105fe:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100010603:	0f 11 04 24	movups	%xmm0, (%rsp)
100010607:	48 89 da	movq	%rbx, %rdx
10001060a:	ff 15 10 c6 02 00	callq	*181776(%rip) ## Objc message: -[%rdi drawImage:inRect:fromRect:]
100010610:	4c 89 e7	movq	%r12, %rdi
100010613:	e8 a4 ea 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100010618:	8b 75 b8	movl	-72(%rbp), %esi
10001061b:	8b 55 bc	movl	-68(%rbp), %edx
10001061e:	4c 89 e7	movq	%r12, %rdi
100010621:	e8 b4 ea 01 00	callq	0x10002f0da ## symbol stub for: _CGContextSetInterpolationQualityRange
100010626:	4c 89 e7	movq	%r12, %rdi
100010629:	e8 64 ea 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10001062e:	4c 89 e7	movq	%r12, %rdi
100010631:	e8 68 ea 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
100010636:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10001063d:	5b	popq	%rbx
10001063e:	41 5c	popq	%r12
100010640:	41 5d	popq	%r13
100010642:	41 5e	popq	%r14
100010644:	41 5f	popq	%r15
100010646:	5d	popq	%rbp
100010647:	c3	retq
100010648:	55	pushq	%rbp
100010649:	48 89 e5	movq	%rsp, %rbp
10001064c:	b8 03 00 00 00	movl	$3, %eax
100010651:	5d	popq	%rbp
100010652:	c3	retq
100010653:	55	pushq	%rbp
100010654:	48 89 e5	movq	%rsp, %rbp
100010657:	48 8b 05 f2 26 04 00	movq	272114(%rip), %rax
10001065e:	c7 04 07 03 00 00 00	movl	$3, (%rdi,%rax)
100010665:	48 8b 35 5c 19 04 00	movq	268636(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10001066c:	ba 01 00 00 00	movl	$1, %edx
100010671:	5d	popq	%rbp
100010672:	ff 25 a8 c5 02 00	jmpq	*181672(%rip) ## Objc message: -[%rdi setNeedsDisplay:]
100010678:	55	pushq	%rbp
100010679:	48 89 e5	movq	%rsp, %rbp
10001067c:	48 8b 05 0d 26 04 00	movq	271885(%rip), %rax
100010683:	48 c7 04 07 00 00 00 00	movq	$0, (%rdi,%rax)
10001068b:	5d	popq	%rbp
10001068c:	c3	retq
10001068d:	55	pushq	%rbp
10001068e:	48 89 e5	movq	%rsp, %rbp
100010691:	41 56	pushq	%r14
100010693:	53	pushq	%rbx
100010694:	48 89 fb	movq	%rdi, %rbx
100010697:	4c 8b 35 1a 26 04 00	movq	271898(%rip), %r14
10001069e:	f2 42 0f 10 04 37	movsd	(%rdi,%r14), %xmm0
1000106a4:	66 0f 57 d2	xorpd	%xmm2, %xmm2
1000106a8:	66 0f 2e c2	ucomisd	%xmm2, %xmm0
1000106ac:	75 02	jne	0x1000106b0
1000106ae:	7b 0f	jnp	0x1000106bf
1000106b0:	f2 42 0f 10 4c 33 08	movsd	8(%rbx,%r14), %xmm1
1000106b7:	66 0f 2e ca	ucomisd	%xmm2, %xmm1
1000106bb:	75 60	jne	0x10001071d
1000106bd:	7a 5e	jp	0x10001071d
1000106bf:	48 8b 05 12 26 04 00	movq	271890(%rip), %rax
1000106c6:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000106ca:	48 8b 35 3f 12 04 00	movq	266815(%rip), %rsi ## Objc selector ref: originalSize
1000106d1:	ff 15 49 c5 02 00	callq	*181577(%rip) ## Objc message: -[%rdi originalSize]
1000106d7:	66 0f 28 d1	movapd	%xmm1, %xmm2
1000106db:	f2 42 0f 11 04 33	movsd	%xmm0, (%rbx,%r14)
1000106e1:	f2 42 0f 11 4c 33 08	movsd	%xmm1, 8(%rbx,%r14)
1000106e8:	48 8b 05 c1 25 04 00	movq	271809(%rip), %rax
1000106ef:	f2 0f 10 0c 03	movsd	(%rbx,%rax), %xmm1
1000106f4:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
1000106f8:	76 0a	jbe	0x100010704
1000106fa:	f2 42 0f 11 0c 33	movsd	%xmm1, (%rbx,%r14)
100010700:	66 0f 28 c1	movapd	%xmm1, %xmm0
100010704:	f2 0f 10 4c 03 08	movsd	8(%rbx,%rax), %xmm1
10001070a:	66 0f 2e ca	ucomisd	%xmm2, %xmm1
10001070e:	76 09	jbe	0x100010719
100010710:	f2 42 0f 11 4c 33 08	movsd	%xmm1, 8(%rbx,%r14)
100010717:	eb 04	jmp	0x10001071d
100010719:	66 0f 28 ca	movapd	%xmm2, %xmm1
10001071d:	5b	popq	%rbx
10001071e:	41 5e	popq	%r14
100010720:	5d	popq	%rbp
100010721:	c3	retq
100010722:	55	pushq	%rbp
100010723:	48 89 e5	movq	%rsp, %rbp
100010726:	41 57	pushq	%r15
100010728:	41 56	pushq	%r14
10001072a:	41 54	pushq	%r12
10001072c:	53	pushq	%rbx
10001072d:	41 89 ce	movl	%ecx, %r14d
100010730:	48 89 fb	movq	%rdi, %rbx
100010733:	4c 8b 3d ce 25 04 00	movq	271822(%rip), %r15
10001073a:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
10001073e:	48 85 ff	testq	%rdi, %rdi
100010741:	74 30	je	0x100010773
100010743:	48 8b 35 fe 19 04 00	movq	268798(%rip), %rsi ## Objc selector ref: setValue:forKey:
10001074a:	48 8d 0d 4f d2 02 00	leaq	184911(%rip), %rcx ## Objc cfstring ref: @"inputImage"
100010751:	4c 8b 25 c8 c4 02 00	movq	181448(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
100010758:	41 ff d4	callq	*%r12
10001075b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001075f:	48 8b 35 4a 1d 04 00	movq	269642(%rip), %rsi ## Objc selector ref: valueForKey:
100010766:	48 8d 15 53 d2 02 00	leaq	184915(%rip), %rdx ## Objc cfstring ref: @"outputImage"
10001076d:	41 ff d4	callq	*%r12
100010770:	48 89 c2	movq	%rax, %rdx
100010773:	4c 8b 3d 96 25 04 00	movq	271766(%rip), %r15
10001077a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001077e:	48 85 ff	testq	%rdi, %rdi
100010781:	74 30	je	0x1000107b3
100010783:	48 8b 35 be 19 04 00	movq	268734(%rip), %rsi ## Objc selector ref: setValue:forKey:
10001078a:	48 8d 0d 0f d2 02 00	leaq	184847(%rip), %rcx ## Objc cfstring ref: @"inputImage"
100010791:	4c 8b 25 88 c4 02 00	movq	181384(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
100010798:	41 ff d4	callq	*%r12
10001079b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001079f:	48 8b 35 0a 1d 04 00	movq	269578(%rip), %rsi ## Objc selector ref: valueForKey:
1000107a6:	48 8d 15 13 d2 02 00	leaq	184851(%rip), %rdx ## Objc cfstring ref: @"outputImage"
1000107ad:	41 ff d4	callq	*%r12
1000107b0:	48 89 c2	movq	%rax, %rdx
1000107b3:	4c 8b 3d 5e 25 04 00	movq	271710(%rip), %r15
1000107ba:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000107be:	48 85 ff	testq	%rdi, %rdi
1000107c1:	74 30	je	0x1000107f3
1000107c3:	48 8b 35 7e 19 04 00	movq	268670(%rip), %rsi ## Objc selector ref: setValue:forKey:
1000107ca:	48 8d 0d cf d1 02 00	leaq	184783(%rip), %rcx ## Objc cfstring ref: @"inputImage"
1000107d1:	4c 8b 25 48 c4 02 00	movq	181320(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
1000107d8:	41 ff d4	callq	*%r12
1000107db:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000107df:	48 8b 35 ca 1c 04 00	movq	269514(%rip), %rsi ## Objc selector ref: valueForKey:
1000107e6:	48 8d 15 d3 d1 02 00	leaq	184787(%rip), %rdx ## Objc cfstring ref: @"outputImage"
1000107ed:	41 ff d4	callq	*%r12
1000107f0:	48 89 c2	movq	%rax, %rdx
1000107f3:	4c 8b 3d 26 25 04 00	movq	271654(%rip), %r15
1000107fa:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000107fe:	48 85 ff	testq	%rdi, %rdi
100010801:	74 30	je	0x100010833
100010803:	48 8b 35 3e 19 04 00	movq	268606(%rip), %rsi ## Objc selector ref: setValue:forKey:
10001080a:	48 8d 0d 8f d1 02 00	leaq	184719(%rip), %rcx ## Objc cfstring ref: @"inputImage"
100010811:	4c 8b 25 08 c4 02 00	movq	181256(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
100010818:	41 ff d4	callq	*%r12
10001081b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001081f:	48 8b 35 8a 1c 04 00	movq	269450(%rip), %rsi ## Objc selector ref: valueForKey:
100010826:	48 8d 15 93 d1 02 00	leaq	184723(%rip), %rdx ## Objc cfstring ref: @"outputImage"
10001082d:	41 ff d4	callq	*%r12
100010830:	48 89 c2	movq	%rax, %rdx
100010833:	4c 8b 3d ee 24 04 00	movq	271598(%rip), %r15
10001083a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001083e:	48 85 ff	testq	%rdi, %rdi
100010841:	74 30	je	0x100010873
100010843:	48 8b 35 fe 18 04 00	movq	268542(%rip), %rsi ## Objc selector ref: setValue:forKey:
10001084a:	48 8d 0d 4f d1 02 00	leaq	184655(%rip), %rcx ## Objc cfstring ref: @"inputImage"
100010851:	4c 8b 25 c8 c3 02 00	movq	181192(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
100010858:	41 ff d4	callq	*%r12
10001085b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001085f:	48 8b 35 4a 1c 04 00	movq	269386(%rip), %rsi ## Objc selector ref: valueForKey:
100010866:	48 8d 15 53 d1 02 00	leaq	184659(%rip), %rdx ## Objc cfstring ref: @"outputImage"
10001086d:	41 ff d4	callq	*%r12
100010870:	48 89 c2	movq	%rax, %rdx
100010873:	4c 8b 3d b6 24 04 00	movq	271542(%rip), %r15
10001087a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001087e:	48 85 ff	testq	%rdi, %rdi
100010881:	74 30	je	0x1000108b3
100010883:	48 8b 35 be 18 04 00	movq	268478(%rip), %rsi ## Objc selector ref: setValue:forKey:
10001088a:	48 8d 0d 0f d1 02 00	leaq	184591(%rip), %rcx ## Objc cfstring ref: @"inputImage"
100010891:	4c 8b 25 88 c3 02 00	movq	181128(%rip), %r12 ## Objc message: -[%rdi setValue:forKey:]
100010898:	41 ff d4	callq	*%r12
10001089b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001089f:	48 8b 35 0a 1c 04 00	movq	269322(%rip), %rsi ## Objc selector ref: valueForKey:
1000108a6:	48 8d 15 13 d1 02 00	leaq	184595(%rip), %rdx ## Objc cfstring ref: @"outputImage"
1000108ad:	41 ff d4	callq	*%r12
1000108b0:	48 89 c2	movq	%rax, %rdx
1000108b3:	45 84 f6	testb	%r14b, %r14b
1000108b6:	74 47	je	0x1000108ff
1000108b8:	4c 8b 35 79 24 04 00	movq	271481(%rip), %r14
1000108bf:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000108c3:	48 85 ff	testq	%rdi, %rdi
1000108c6:	74 37	je	0x1000108ff
1000108c8:	48 8b 35 79 18 04 00	movq	268409(%rip), %rsi ## Objc selector ref: setValue:forKey:
1000108cf:	48 8d 0d ca d0 02 00	leaq	184522(%rip), %rcx ## Objc cfstring ref: @"inputImage"
1000108d6:	4c 8b 3d 43 c3 02 00	movq	181059(%rip), %r15 ## Objc message: -[%rdi setValue:forKey:]
1000108dd:	41 ff d7	callq	*%r15
1000108e0:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000108e4:	48 8b 35 c5 1b 04 00	movq	269253(%rip), %rsi ## Objc selector ref: valueForKey:
1000108eb:	48 8d 15 ce d0 02 00	leaq	184526(%rip), %rdx ## Objc cfstring ref: @"outputImage"
1000108f2:	4c 89 f8	movq	%r15, %rax
1000108f5:	5b	popq	%rbx
1000108f6:	41 5c	popq	%r12
1000108f8:	41 5e	popq	%r14
1000108fa:	41 5f	popq	%r15
1000108fc:	5d	popq	%rbp
1000108fd:	ff e0	jmpq	*%rax
1000108ff:	48 89 d0	movq	%rdx, %rax
100010902:	5b	popq	%rbx
100010903:	41 5c	popq	%r12
100010905:	41 5e	popq	%r14
100010907:	41 5f	popq	%r15
100010909:	5d	popq	%rbp
10001090a:	c3	retq
10001090b:	55	pushq	%rbp
10001090c:	48 89 e5	movq	%rsp, %rbp
10001090f:	41 57	pushq	%r15
100010911:	41 56	pushq	%r14
100010913:	41 55	pushq	%r13
100010915:	41 54	pushq	%r12
100010917:	53	pushq	%rbx
100010918:	48 81 ec a8 01 00 00	subq	$424, %rsp
10001091f:	48 8b 05 f2 be 02 00	movq	179954(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100010926:	48 8b 00	movq	(%rax), %rax
100010929:	48 89 45 d0	movq	%rax, -48(%rbp)
10001092d:	48 85 d2	testq	%rdx, %rdx
100010930:	0f 84 2d 01 00 00	je	0x100010a63
100010936:	49 89 d6	movq	%rdx, %r14
100010939:	48 89 fb	movq	%rdi, %rbx
10001093c:	48 89 d7	movq	%rdx, %rdi
10001093f:	e8 08 e8 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100010944:	49 89 c5	movq	%rax, %r13
100010947:	48 89 c7	movq	%rax, %rdi
10001094a:	e8 d7 e6 01 00	callq	0x10002f026 ## symbol stub for: _CGColorSpaceGetType
10001094f:	83 f8 07	cmpl	$7, %eax
100010952:	48 89 9d 50 fe ff ff	movq	%rbx, -432(%rbp)
100010959:	74 2f	je	0x10001098a
10001095b:	83 f8 01	cmpl	$1, %eax
10001095e:	75 35	jne	0x100010995
100010960:	48 8b 05 51 c0 02 00	movq	180305(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
100010967:	48 8b 38	movq	(%rax), %rdi
10001096a:	e8 87 e6 01 00	callq	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
10001096f:	48 89 c3	movq	%rax, %rbx
100010972:	4c 89 f7	movq	%r14, %rdi
100010975:	48 89 c6	movq	%rax, %rsi
100010978:	e8 8d e7 01 00	callq	0x10002f10a ## symbol stub for: _CGImageCreateCopyWithColorSpace
10001097d:	49 89 c7	movq	%rax, %r15
100010980:	48 89 df	movq	%rbx, %rdi
100010983:	e8 aa e6 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100010988:	eb 0e	jmp	0x100010998
10001098a:	4c 89 ef	movq	%r13, %rdi
10001098d:	e8 70 e6 01 00	callq	0x10002f002 ## symbol stub for: _CGColorSpaceGetBaseColorSpace
100010992:	49 89 c5	movq	%rax, %r13
100010995:	45 31 ff	xorl	%r15d, %r15d
100010998:	4c 89 ef	movq	%r13, %rdi
10001099b:	e8 9e e6 01 00	callq	0x10002f03e ## symbol stub for: _CGColorSpaceSupportsOutput
1000109a0:	84 c0	testb	%al, %al
1000109a2:	74 05	je	0x1000109a9
1000109a4:	45 31 e4	xorl	%r12d, %r12d
1000109a7:	eb 0e	jmp	0x1000109b7
1000109a9:	4c 89 ef	movq	%r13, %rdi
1000109ac:	e8 51 0c 00 00	callq	0x100011602
1000109b1:	49 89 c5	movq	%rax, %r13
1000109b4:	49 89 c4	movq	%rax, %r12
1000109b7:	4c 89 ef	movq	%r13, %rdi
1000109ba:	e8 7f e6 01 00	callq	0x10002f03e ## symbol stub for: _CGColorSpaceSupportsOutput
1000109bf:	84 c0	testb	%al, %al
1000109c1:	0f 84 9c 00 00 00	je	0x100010a63
1000109c7:	4c 89 f7	movq	%r14, %rdi
1000109ca:	e8 b3 e7 01 00	callq	0x10002f182 ## symbol stub for: _CGImageHasAlpha
1000109cf:	b1 01	movb	$1, %cl
1000109d1:	84 c0	testb	%al, %al
1000109d3:	75 0e	jne	0x1000109e3
1000109d5:	4c 89 f7	movq	%r14, %rdi
1000109d8:	e8 87 e7 01 00	callq	0x10002f164 ## symbol stub for: _CGImageGetMask
1000109dd:	48 85 c0	testq	%rax, %rax
1000109e0:	0f 95 c1	setne	%cl
1000109e3:	88 8d ff fe ff ff	movb	%cl, -257(%rbp)
1000109e9:	4c 89 f7	movq	%r14, %rdi
1000109ec:	e8 79 e7 01 00	callq	0x10002f16a ## symbol stub for: _CGImageGetRenderingIntent
1000109f1:	89 c3	movl	%eax, %ebx
1000109f3:	4c 89 f7	movq	%r14, %rdi
1000109f6:	e8 63 e7 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000109fb:	48 89 85 68 fe ff ff	movq	%rax, -408(%rbp)
100010a02:	4c 89 f7	movq	%r14, %rdi
100010a05:	e8 72 e7 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100010a0a:	48 89 85 c8 fe ff ff	movq	%rax, -312(%rbp)
100010a11:	4c 89 f7	movq	%r14, %rdi
100010a14:	e8 15 e7 01 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
100010a19:	89 85 f8 fe ff ff	movl	%eax, -264(%rbp)
100010a1f:	4c 89 ef	movq	%r13, %rdi
100010a22:	e8 f3 e5 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
100010a27:	48 83 f8 04	cmpq	$4, %rax
100010a2b:	74 3d	je	0x100010a6a
100010a2d:	48 83 f8 03	cmpq	$3, %rax
100010a31:	74 65	je	0x100010a98
100010a33:	48 83 f8 01	cmpq	$1, %rax
100010a37:	0f 85 89 00 00 00	jne	0x100010ac6
100010a3d:	b8 08 00 00 00	movl	$8, %eax
100010a42:	48 89 85 b0 fe ff ff	movq	%rax, -336(%rbp)
100010a49:	c7 85 f8 fe ff ff 00 00 00 00	movl	$0, -264(%rbp)
100010a53:	48 8b 85 c8 fe ff ff	movq	-312(%rbp), %rax
100010a5a:	48 89 85 a8 fe ff ff	movq	%rax, -344(%rbp)
100010a61:	eb 63	jmp	0x100010ac6
100010a63:	31 db	xorl	%ebx, %ebx
100010a65:	e9 d2 0a 00 00	jmp	0x10001153c
100010a6a:	48 8b 85 c8 fe ff ff	movq	-312(%rbp), %rax
100010a71:	48 8d 04 85 00 00 00 00	leaq	(,%rax,4), %rax
100010a79:	48 89 85 a8 fe ff ff	movq	%rax, -344(%rbp)
100010a80:	b8 20 00 00 00	movl	$32, %eax
100010a85:	48 89 85 b0 fe ff ff	movq	%rax, -336(%rbp)
100010a8c:	c7 85 f8 fe ff ff 00 00 00 00	movl	$0, -264(%rbp)
100010a96:	eb 2e	jmp	0x100010ac6
100010a98:	48 8b 85 c8 fe ff ff	movq	-312(%rbp), %rax
100010a9f:	48 8d 04 85 00 00 00 00	leaq	(,%rax,4), %rax
100010aa7:	48 89 85 a8 fe ff ff	movq	%rax, -344(%rbp)
100010aae:	b8 20 00 00 00	movl	$32, %eax
100010ab3:	48 89 85 b0 fe ff ff	movq	%rax, -336(%rbp)
100010aba:	c7 85 f8 fe ff ff 05 00 00 00	movl	$5, -264(%rbp)
100010ac4:	eb 00	jmp	0x100010ac6
100010ac6:	4c 89 bd a0 fe ff ff	movq	%r15, -352(%rbp)
100010acd:	4c 89 ef	movq	%r13, %rdi
100010ad0:	e8 4b e5 01 00	callq	0x10002f020 ## symbol stub for: _CGColorSpaceGetProcessColorModel
100010ad5:	b1 01	movb	$1, %cl
100010ad7:	89 8d 98 fe ff ff	movl	%ecx, -360(%rbp)
100010add:	83 f8 01	cmpl	$1, %eax
100010ae0:	89 9d dc fe ff ff	movl	%ebx, -292(%rbp)
100010ae6:	4c 89 a5 60 fe ff ff	movq	%r12, -416(%rbp)
100010aed:	4c 89 ad 58 fe ff ff	movq	%r13, -424(%rbp)
100010af4:	0f 84 f7 01 00 00	je	0x100010cf1
100010afa:	48 8b 05 b7 be 02 00	movq	179895(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
100010b01:	48 8b 38	movq	(%rax), %rdi
100010b04:	e8 ed e4 01 00	callq	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
100010b09:	48 85 c0	testq	%rax, %rax
100010b0c:	0f 84 df 01 00 00	je	0x100010cf1
100010b12:	49 89 c7	movq	%rax, %r15
100010b15:	48 89 c7	movq	%rax, %rdi
100010b18:	31 f6	xorl	%esi, %esi
100010b1a:	e8 31 e5 01 00	callq	0x10002f050 ## symbol stub for: _CGColorTransformCreate
100010b1f:	48 89 c3	movq	%rax, %rbx
100010b22:	4c 89 f7	movq	%r14, %rdi
100010b25:	e8 58 e6 01 00	callq	0x10002f182 ## symbol stub for: _CGImageHasAlpha
100010b2a:	b1 01	movb	$1, %cl
100010b2c:	84 c0	testb	%al, %al
100010b2e:	75 0e	jne	0x100010b3e
100010b30:	4c 89 f7	movq	%r14, %rdi
100010b33:	e8 2c e6 01 00	callq	0x10002f164 ## symbol stub for: _CGImageGetMask
100010b38:	48 85 c0	testq	%rax, %rax
100010b3b:	0f 95 c1	setne	%cl
100010b3e:	48 85 db	testq	%rbx, %rbx
100010b41:	48 89 9d 98 fe ff ff	movq	%rbx, -360(%rbp)
100010b48:	0f 84 bd 01 00 00	je	0x100010d0b
100010b4e:	88 8d e0 fe ff ff	movb	%cl, -288(%rbp)
100010b54:	48 89 df	movq	%rbx, %rdi
100010b57:	e8 00 e5 01 00	callq	0x10002f05c ## symbol stub for: _CGColorTransformGetColorSpace
100010b5c:	48 89 c7	movq	%rax, %rdi
100010b5f:	e8 bc e4 01 00	callq	0x10002f020 ## symbol stub for: _CGColorSpaceGetProcessColorModel
100010b64:	83 f8 01	cmpl	$1, %eax
100010b67:	0f 85 9e 01 00 00	jne	0x100010d0b
100010b6d:	48 89 df	movq	%rbx, %rdi
100010b70:	e8 e7 e4 01 00	callq	0x10002f05c ## symbol stub for: _CGColorTransformGetColorSpace
100010b75:	48 89 85 b8 fe ff ff	movq	%rax, -328(%rbp)
100010b7c:	4c 89 f7	movq	%r14, %rdi
100010b7f:	e8 f8 e5 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100010b84:	49 89 c5	movq	%rax, %r13
100010b87:	4c 89 f7	movq	%r14, %rdi
100010b8a:	e8 cf e5 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100010b8f:	48 89 85 f0 fe ff ff	movq	%rax, -272(%rbp)
100010b96:	4c 89 ad d0 fe ff ff	movq	%r13, -304(%rbp)
100010b9d:	4a 8d 04 ad 00 00 00 00	leaq	(,%r13,4), %rax
100010ba5:	48 89 85 e8 fe ff ff	movq	%rax, -280(%rbp)
100010bac:	4c 89 f7	movq	%r14, %rdi
100010baf:	e8 7a e5 01 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
100010bb4:	41 89 c5	movl	%eax, %r13d
100010bb7:	83 f8 06	cmpl	$6, %eax
100010bba:	77 26	ja	0x100010be2
100010bbc:	b8 79 00 00 00	movl	$121, %eax
100010bc1:	44 0f a3 e8	btl	%r13d, %eax
100010bc5:	73 1b	jae	0x100010be2
100010bc7:	49 63 c5	movslq	%r13d, %rax
100010bca:	48 8d 0d 5f 86 02 00	leaq	165471(%rip), %rcx
100010bd1:	44 8b 2c 81	movl	(%rcx,%rax,4), %r13d
100010bd5:	80 bd e0 fe ff ff 00	cmpb	$0, -288(%rbp)
100010bdc:	0f 84 83 09 00 00	je	0x100011565
100010be2:	31 c0	xorl	%eax, %eax
100010be4:	48 89 85 c0 fe ff ff	movq	%rax, -320(%rbp)
100010beb:	4c 8b a5 e8 fe ff ff	movq	-280(%rbp), %r12
100010bf2:	4c 89 f7	movq	%r14, %rdi
100010bf5:	e8 76 e5 01 00	callq	0x10002f170 ## symbol stub for: _CGImageGetShouldInterpolate
100010bfa:	88 85 e8 fe ff ff	movb	%al, -280(%rbp)
100010c00:	44 89 6c 24 08	movl	%r13d, 8(%rsp)
100010c05:	48 8b 85 b8 fe ff ff	movq	-328(%rbp), %rax
100010c0c:	48 89 04 24	movq	%rax, (%rsp)
100010c10:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
100010c19:	31 db	xorl	%ebx, %ebx
100010c1b:	f2 0f 10 05 15 85 02 00	movsd	165141(%rip), %xmm0
100010c23:	b9 08 00 00 00	movl	$8, %ecx
100010c28:	41 b8 20 00 00 00	movl	$32, %r8d
100010c2e:	31 ff	xorl	%edi, %edi
100010c30:	48 8b b5 d0 fe ff ff	movq	-304(%rbp), %rsi
100010c37:	48 8b 95 f0 fe ff ff	movq	-272(%rbp), %rdx
100010c3e:	4d 89 e1	movq	%r12, %r9
100010c41:	0f 28 c8	movaps	%xmm0, %xmm1
100010c44:	e8 59 e3 01 00	callq	0x10002efa2 ## symbol stub for: _CGBitmapContextCreateWithDictionary
100010c49:	48 85 c0	testq	%rax, %rax
100010c4c:	0f 84 23 03 00 00	je	0x100010f75
100010c52:	49 89 c4	movq	%rax, %r12
100010c55:	44 0f b6 ad e8 fe ff ff	movzbl	-280(%rbp), %r13d
100010c5d:	48 89 c7	movq	%rax, %rdi
100010c60:	e8 49 e3 01 00	callq	0x10002efae ## symbol stub for: _CGBitmapContextGetWidth
100010c65:	48 89 c3	movq	%rax, %rbx
100010c68:	4c 89 e7	movq	%r12, %rdi
100010c6b:	e8 38 e3 01 00	callq	0x10002efa8 ## symbol stub for: _CGBitmapContextGetHeight
100010c70:	66 48 0f 6e cb	movq	%rbx, %xmm1
100010c75:	66 48 0f 6e c0	movq	%rax, %xmm0
100010c7a:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
100010c7e:	66 0f ef c0	pxor	%xmm0, %xmm0
100010c82:	66 0f 6f d1	movdqa	%xmm1, %xmm2
100010c86:	66 0f 3a 0e d0 cc	pblendw	$204, %xmm0, %xmm2
100010c8c:	66 0f eb 15 ac 84 02 00	por	165036(%rip), %xmm2
100010c94:	66 0f 73 d1 20	psrlq	$32, %xmm1
100010c99:	66 0f eb 0d af 84 02 00	por	165039(%rip), %xmm1
100010ca1:	66 0f 5c 0d b7 84 02 00	subpd	165047(%rip), %xmm1
100010ca9:	66 0f 58 ca	addpd	%xmm2, %xmm1
100010cad:	66 0f 7f 85 70 fe ff ff	movdqa	%xmm0, -400(%rbp)
100010cb5:	66 0f 29 8d 80 fe ff ff	movapd	%xmm1, -384(%rbp)
100010cbd:	80 bd e0 fe ff ff 00	cmpb	$0, -288(%rbp)
100010cc4:	4c 89 a5 e0 fe ff ff	movq	%r12, -288(%rbp)
100010ccb:	74 45	je	0x100010d12
100010ccd:	0f 28 85 70 fe ff ff	movaps	-400(%rbp), %xmm0
100010cd4:	0f 28 8d 80 fe ff ff	movaps	-384(%rbp), %xmm1
100010cdb:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100010ce0:	0f 11 04 24	movups	%xmm0, (%rsp)
100010ce4:	4c 89 e7	movq	%r12, %rdi
100010ce7:	e8 82 e3 01 00	callq	0x10002f06e ## symbol stub for: _CGContextClearRect
100010cec:	e9 fb 00 00 00	jmp	0x100010dec
100010cf1:	31 c0	xorl	%eax, %eax
100010cf3:	48 89 85 f0 fe ff ff	movq	%rax, -272(%rbp)
100010cfa:	4d 89 ef	movq	%r13, %r15
100010cfd:	31 c0	xorl	%eax, %eax
100010cff:	48 89 85 e0 fe ff ff	movq	%rax, -288(%rbp)
100010d06:	e9 98 02 00 00	jmp	0x100010fa3
100010d0b:	31 db	xorl	%ebx, %ebx
100010d0d:	e9 63 02 00 00	jmp	0x100010f75
100010d12:	0f 28 0d 67 84 02 00	movaps	164967(%rip), %xmm1
100010d19:	48 8d 85 00 ff ff ff	leaq	-256(%rbp), %rax
100010d20:	0f 29 08	movaps	%xmm1, (%rax)
100010d23:	0f 28 0d f6 84 02 00	movaps	165110(%rip), %xmm1
100010d2a:	4c 8d a5 30 ff ff ff	leaq	-208(%rbp), %r12
100010d31:	41 0f 29 4c 24 10	movaps	%xmm1, 16(%r12)
100010d37:	0f 28 0d d2 84 02 00	movaps	165074(%rip), %xmm1
100010d3e:	41 0f 29 0c 24	movaps	%xmm1, (%r12)
100010d43:	48 8d 9d 50 ff ff ff	leaq	-176(%rbp), %rbx
100010d4a:	66 0f 7f 43 10	movdqa	%xmm0, 16(%rbx)
100010d4f:	66 0f 7f 03	movdqa	%xmm0, (%rbx)
100010d53:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
100010d5d:	48 89 43 20	movq	%rax, 32(%rbx)
100010d61:	4c 89 ad e8 fe ff ff	movq	%r13, -280(%rbp)
100010d68:	4c 8b ad b8 fe ff ff	movq	-328(%rbp), %r13
100010d6f:	4c 89 ef	movq	%r13, %rdi
100010d72:	e8 a3 e2 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
100010d77:	48 83 f8 03	cmpq	$3, %rax
100010d7b:	49 0f 44 dc	cmoveq	%r12, %rbx
100010d7f:	4c 8b a5 e0 fe ff ff	movq	-288(%rbp), %r12
100010d86:	48 83 f8 01	cmpq	$1, %rax
100010d8a:	48 8d 85 00 ff ff ff	leaq	-256(%rbp), %rax
100010d91:	48 0f 44 d8	cmoveq	%rax, %rbx
100010d95:	4c 89 ef	movq	%r13, %rdi
100010d98:	4c 8b ad e8 fe ff ff	movq	-280(%rbp), %r13
100010d9f:	48 89 de	movq	%rbx, %rsi
100010da2:	e8 19 e2 01 00	callq	0x10002efc0 ## symbol stub for: _CGColorCreate
100010da7:	48 89 c3	movq	%rax, %rbx
100010daa:	4c 89 e7	movq	%r12, %rdi
100010dad:	e8 10 e3 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100010db2:	4c 89 e7	movq	%r12, %rdi
100010db5:	48 89 de	movq	%rbx, %rsi
100010db8:	e8 11 e3 01 00	callq	0x10002f0ce ## symbol stub for: _CGContextSetFillColorWithColor
100010dbd:	0f 28 85 70 fe ff ff	movaps	-400(%rbp), %xmm0
100010dc4:	0f 28 8d 80 fe ff ff	movaps	-384(%rbp), %xmm1
100010dcb:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100010dd0:	0f 11 04 24	movups	%xmm0, (%rsp)
100010dd4:	4c 89 e7	movq	%r12, %rdi
100010dd7:	e8 bc e2 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
100010ddc:	4c 89 e7	movq	%r12, %rdi
100010ddf:	e8 d8 e2 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100010de4:	48 89 df	movq	%rbx, %rdi
100010de7:	e8 da e1 01 00	callq	0x10002efc6 ## symbol stub for: _CGColorRelease
100010dec:	f3 0f 7e 85 f0 fe ff ff	movq	-272(%rbp), %xmm0
100010df4:	f3 0f 7e 8d d0 fe ff ff	movq	-304(%rbp), %xmm1
100010dfc:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
100010e00:	66 0f ef c0	pxor	%xmm0, %xmm0
100010e04:	66 0f 6f d1	movdqa	%xmm1, %xmm2
100010e08:	66 0f 3a 0e d0 cc	pblendw	$204, %xmm0, %xmm2
100010e0e:	66 0f eb 15 2a 83 02 00	por	164650(%rip), %xmm2
100010e16:	66 0f 73 d1 20	psrlq	$32, %xmm1
100010e1b:	66 0f eb 0d 2d 83 02 00	por	164653(%rip), %xmm1
100010e23:	66 0f 5c 0d 35 83 02 00	subpd	164661(%rip), %xmm1
100010e2b:	66 0f 58 ca	addpd	%xmm2, %xmm1
100010e2f:	66 0f 7f 85 50 ff ff ff	movdqa	%xmm0, -176(%rbp)
100010e37:	66 0f 29 8d 60 ff ff ff	movapd	%xmm1, -160(%rbp)
100010e3f:	48 8b 9d c0 fe ff ff	movq	-320(%rbp), %rbx
100010e46:	48 85 db	testq	%rbx, %rbx
100010e49:	74 46	je	0x100010e91
100010e4b:	4c 89 e7	movq	%r12, %rdi
100010e4e:	e8 6f e2 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100010e53:	4c 89 e7	movq	%r12, %rdi
100010e56:	48 89 de	movq	%rbx, %rsi
100010e59:	e8 70 e2 01 00	callq	0x10002f0ce ## symbol stub for: _CGContextSetFillColorWithColor
100010e5e:	66 0f 6f 85 50 ff ff ff	movdqa	-176(%rbp), %xmm0
100010e66:	66 0f 28 8d 60 ff ff ff	movapd	-160(%rbp), %xmm1
100010e6e:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
100010e74:	f3 0f 7f 04 24	movdqu	%xmm0, (%rsp)
100010e79:	4c 89 e7	movq	%r12, %rdi
100010e7c:	e8 17 e2 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
100010e81:	4c 89 e7	movq	%r12, %rdi
100010e84:	e8 33 e2 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100010e89:	48 89 df	movq	%rbx, %rdi
100010e8c:	e8 35 e1 01 00	callq	0x10002efc6 ## symbol stub for: _CGColorRelease
100010e91:	47 8d 64 2d 01	leal	1(%r13,%r13), %r12d
100010e96:	8b 9d dc fe ff ff	movl	-292(%rbp), %ebx
100010e9c:	85 db	testl	%ebx, %ebx
100010e9e:	74 0c	je	0x100010eac
100010ea0:	4c 89 f7	movq	%r14, %rdi
100010ea3:	e8 c2 e2 01 00	callq	0x10002f16a ## symbol stub for: _CGImageGetRenderingIntent
100010ea8:	39 d8	cmpl	%ebx, %eax
100010eaa:	75 12	jne	0x100010ebe
100010eac:	31 c0	xorl	%eax, %eax
100010eae:	48 89 85 d0 fe ff ff	movq	%rax, -304(%rbp)
100010eb5:	4c 89 b5 f0 fe ff ff	movq	%r14, -272(%rbp)
100010ebc:	eb 1b	jmp	0x100010ed9
100010ebe:	4c 89 f7	movq	%r14, %rdi
100010ec1:	89 de	movl	%ebx, %esi
100010ec3:	e8 48 e2 01 00	callq	0x10002f110 ## symbol stub for: _CGImageCreateCopyWithRenderingIntent
100010ec8:	48 89 c1	movq	%rax, %rcx
100010ecb:	48 89 85 d0 fe ff ff	movq	%rax, -304(%rbp)
100010ed2:	48 89 85 f0 fe ff ff	movq	%rax, -272(%rbp)
100010ed9:	4c 8b ad e0 fe ff ff	movq	-288(%rbp), %r13
100010ee0:	4c 89 ef	movq	%r13, %rdi
100010ee3:	44 89 e6	movl	%r12d, %esi
100010ee6:	44 89 e2	movl	%r12d, %edx
100010ee9:	e8 ec e1 01 00	callq	0x10002f0da ## symbol stub for: _CGContextSetInterpolationQualityRange
100010eee:	48 8d 9d 50 ff ff ff	leaq	-176(%rbp), %rbx
100010ef5:	4c 89 ef	movq	%r13, %rdi
100010ef8:	48 89 de	movq	%rbx, %rsi
100010efb:	e8 68 e1 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
100010f00:	0f 28 03	movaps	(%rbx), %xmm0
100010f03:	0f 28 4b 10	movaps	16(%rbx), %xmm1
100010f07:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100010f0c:	0f 11 04 24	movups	%xmm0, (%rsp)
100010f10:	4c 89 ef	movq	%r13, %rdi
100010f13:	48 8b b5 f0 fe ff ff	movq	-272(%rbp), %rsi
100010f1a:	e8 61 e1 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
100010f1f:	4c 89 ef	movq	%r13, %rdi
100010f22:	e8 6b e1 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
100010f27:	4c 89 ef	movq	%r13, %rdi
100010f2a:	e8 67 e0 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
100010f2f:	48 89 c3	movq	%rax, %rbx
100010f32:	4c 89 ef	movq	%r13, %rdi
100010f35:	e8 7c e1 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
100010f3a:	44 8b a5 dc fe ff ff	movl	-292(%rbp), %r12d
100010f41:	45 85 e4	testl	%r12d, %r12d
100010f44:	74 23	je	0x100010f69
100010f46:	48 89 df	movq	%rbx, %rdi
100010f49:	e8 1c e2 01 00	callq	0x10002f16a ## symbol stub for: _CGImageGetRenderingIntent
100010f4e:	44 39 e0	cmpl	%r12d, %eax
100010f51:	74 16	je	0x100010f69
100010f53:	48 89 df	movq	%rbx, %rdi
100010f56:	44 89 e6	movl	%r12d, %esi
100010f59:	e8 b2 e1 01 00	callq	0x10002f110 ## symbol stub for: _CGImageCreateCopyWithRenderingIntent
100010f5e:	48 89 df	movq	%rbx, %rdi
100010f61:	48 89 c3	movq	%rax, %rbx
100010f64:	e8 1f e2 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100010f69:	48 8b bd d0 fe ff ff	movq	-304(%rbp), %rdi
100010f70:	e8 13 e2 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100010f75:	48 85 db	testq	%rbx, %rbx
100010f78:	48 89 9d e0 fe ff ff	movq	%rbx, -288(%rbp)
100010f7f:	4c 0f 45 f3	cmovneq	%rbx, %r14
100010f83:	48 8b bd 98 fe ff ff	movq	-360(%rbp), %rdi
100010f8a:	e8 d3 e0 01 00	callq	0x10002f062 ## symbol stub for: _CGColorTransformRelease
100010f8f:	c7 85 98 fe ff ff 00 00 00 00	movl	$0, -360(%rbp)
100010f99:	4c 89 f8	movq	%r15, %rax
100010f9c:	4c 89 bd f0 fe ff ff	movq	%r15, -272(%rbp)
100010fa3:	48 8b 3d ce 16 04 00	movq	267982(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIImage
100010faa:	e8 0f e5 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100010faf:	48 8b 35 7a 04 04 00	movq	263290(%rip), %rsi ## Objc selector ref: initWithCGImage:
100010fb6:	48 89 c7	movq	%rax, %rdi
100010fb9:	4c 89 f2	movq	%r14, %rdx
100010fbc:	ff 15 5e bc 02 00	callq	*179294(%rip) ## Objc message: +[CIImage initWithCGImage:]
100010fc2:	48 89 85 d0 fe ff ff	movq	%rax, -304(%rbp)
100010fc9:	4c 89 f7	movq	%r14, %rdi
100010fcc:	e8 8d e1 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100010fd1:	49 89 c4	movq	%rax, %r12
100010fd4:	4c 89 f7	movq	%r14, %rdi
100010fd7:	e8 a0 e1 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100010fdc:	48 89 c3	movq	%rax, %rbx
100010fdf:	4c 89 f7	movq	%r14, %rdi
100010fe2:	e8 47 e1 01 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
100010fe7:	49 89 d9	movq	%rbx, %r9
100010fea:	49 c1 e1 02	shlq	$2, %r9
100010fee:	83 f8 06	cmpl	$6, %eax
100010ff1:	77 16	ja	0x100011009
100010ff3:	b9 79 00 00 00	movl	$121, %ecx
100010ff8:	0f a3 c1	btl	%eax, %ecx
100010ffb:	73 0c	jae	0x100011009
100010ffd:	48 98	cltq
100010fff:	48 8d 0d 2a 82 02 00	leaq	164394(%rip), %rcx
100011006:	8b 04 81	movl	(%rcx,%rax,4), %eax
100011009:	89 44 24 08	movl	%eax, 8(%rsp)
10001100d:	4c 89 3c 24	movq	%r15, (%rsp)
100011011:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
10001101a:	f2 0f 10 05 16 81 02 00	movsd	164118(%rip), %xmm0
100011022:	b9 08 00 00 00	movl	$8, %ecx
100011027:	41 b8 20 00 00 00	movl	$32, %r8d
10001102d:	31 ff	xorl	%edi, %edi
10001102f:	48 89 de	movq	%rbx, %rsi
100011032:	4c 89 e2	movq	%r12, %rdx
100011035:	0f 28 c8	movaps	%xmm0, %xmm1
100011038:	e8 65 df 01 00	callq	0x10002efa2 ## symbol stub for: _CGBitmapContextCreateWithDictionary
10001103d:	49 89 c5	movq	%rax, %r13
100011040:	48 8b 05 31 1c 04 00	movq	269361(%rip), %rax
100011047:	48 8b 8d 50 fe ff ff	movq	-432(%rbp), %rcx
10001104e:	48 8b 3c 01	movq	(%rcx,%rax), %rdi
100011052:	48 85 ff	testq	%rdi, %rdi
100011055:	74 10	je	0x100011067
100011057:	48 8b 35 a2 fc 03 00	movq	261282(%rip), %rsi ## Objc selector ref: applyToContext:
10001105e:	4c 89 ea	movq	%r13, %rdx
100011061:	ff 15 b9 bb 02 00	callq	*179129(%rip) ## Objc message: -[%rdi applyToContext:]
100011067:	4c 89 ef	movq	%r13, %rdi
10001106a:	e8 53 e0 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10001106f:	48 8b 3d 1a 16 04 00	movq	267802(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIContext
100011076:	48 8b 35 e3 fe 03 00	movq	261859(%rip), %rsi ## Objc selector ref: contextWithCGContext:options:
10001107d:	4c 89 ea	movq	%r13, %rdx
100011080:	31 c9	xorl	%ecx, %ecx
100011082:	ff 15 98 bb 02 00	callq	*179096(%rip) ## Objc message: +[CIContext contextWithCGContext:options:]
100011088:	49 89 c4	movq	%rax, %r12
10001108b:	4c 89 f7	movq	%r14, %rdi
10001108e:	e8 e9 e0 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100011093:	48 89 c3	movq	%rax, %rbx
100011096:	4c 89 f7	movq	%r14, %rdi
100011099:	e8 c0 e0 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10001109e:	66 48 0f 6e c3	movq	%rbx, %xmm0
1000110a3:	66 48 0f 6e c8	movq	%rax, %xmm1
1000110a8:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
1000110ac:	66 0f ef c9	pxor	%xmm1, %xmm1
1000110b0:	66 0f 6f d0	movdqa	%xmm0, %xmm2
1000110b4:	66 0f 3a 0e d1 cc	pblendw	$204, %xmm1, %xmm2
1000110ba:	66 0f eb 15 7e 80 02 00	por	163966(%rip), %xmm2
1000110c2:	66 0f 73 d0 20	psrlq	$32, %xmm0
1000110c7:	66 0f eb 05 81 80 02 00	por	163969(%rip), %xmm0
1000110cf:	66 0f 5c 05 89 80 02 00	subpd	163977(%rip), %xmm0
1000110d7:	66 0f 58 c2	addpd	%xmm2, %xmm0
1000110db:	66 0f 7f 8d 70 fe ff ff	movdqa	%xmm1, -400(%rbp)
1000110e3:	66 0f 29 85 80 fe ff ff	movapd	%xmm0, -384(%rbp)
1000110eb:	0f 28 85 70 fe ff ff	movaps	-400(%rbp), %xmm0
1000110f2:	0f 28 8d 80 fe ff ff	movaps	-384(%rbp), %xmm1
1000110f9:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000110fe:	0f 11 04 24	movups	%xmm0, (%rsp)
100011102:	4c 8d bd 50 ff ff ff	leaq	-176(%rbp), %r15
100011109:	4c 89 ff	movq	%r15, %rdi
10001110c:	e8 37 e1 01 00	callq	0x10002f248 ## symbol stub for: _CGRectIntegral
100011111:	41 0f 10 07	movups	(%r15), %xmm0
100011115:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10001111a:	0f 29 8d 80 fe ff ff	movaps	%xmm1, -384(%rbp)
100011121:	0f 29 85 70 fe ff ff	movaps	%xmm0, -400(%rbp)
100011128:	48 8b 35 c9 0b 04 00	movq	265161(%rip), %rsi ## Objc selector ref: setBounds:
10001112f:	0f 28 85 70 fe ff ff	movaps	-400(%rbp), %xmm0
100011136:	0f 28 8d 80 fe ff ff	movaps	-384(%rbp), %xmm1
10001113d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100011142:	0f 11 04 24	movups	%xmm0, (%rsp)
100011146:	4c 89 e7	movq	%r12, %rdi
100011149:	4c 8b 35 d0 ba 02 00	movq	178896(%rip), %r14 ## Objc message: -[%rdi setBounds:]
100011150:	41 ff d6	callq	*%r14
100011153:	4c 89 ef	movq	%r13, %rdi
100011156:	e8 61 df 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10001115b:	48 8b 35 7e fb 03 00	movq	260990(%rip), %rsi ## Objc selector ref: applyCIFilter:proof:
100011162:	48 8b bd 50 fe ff ff	movq	-432(%rbp), %rdi
100011169:	48 8b 9d d0 fe ff ff	movq	-304(%rbp), %rbx
100011170:	48 89 da	movq	%rbx, %rdx
100011173:	31 c9	xorl	%ecx, %ecx
100011175:	41 ff d6	callq	*%r14
100011178:	48 8b 35 51 fe 03 00	movq	261713(%rip), %rsi ## Objc selector ref: createCGImage:fromRect:
10001117f:	0f 28 85 70 fe ff ff	movaps	-400(%rbp), %xmm0
100011186:	0f 28 8d 80 fe ff ff	movaps	-384(%rbp), %xmm1
10001118d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100011192:	0f 11 04 24	movups	%xmm0, (%rsp)
100011196:	4c 89 e7	movq	%r12, %rdi
100011199:	48 89 c2	movq	%rax, %rdx
10001119c:	41 ff d6	callq	*%r14
10001119f:	49 89 c6	movq	%rax, %r14
1000111a2:	4c 89 ef	movq	%r13, %rdi
1000111a5:	e8 0c df 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
1000111aa:	48 89 df	movq	%rbx, %rdi
1000111ad:	ff 15 a5 ba 02 00	callq	*178853(%rip) ## literal pool symbol address: _objc_release
1000111b3:	80 bd 98 fe ff ff 00	cmpb	$0, -360(%rbp)
1000111ba:	74 13	je	0x1000111cf
1000111bc:	4c 8b bd a0 fe ff ff	movq	-352(%rbp), %r15
1000111c3:	4c 8b a5 60 fe ff ff	movq	-416(%rbp), %r12
1000111ca:	e9 38 03 00 00	jmp	0x100011507
1000111cf:	80 bd ff fe ff ff 00	cmpb	$0, -257(%rbp)
1000111d6:	4c 8b a5 60 fe ff ff	movq	-416(%rbp), %r12
1000111dd:	0f 84 e4 00 00 00	je	0x1000112c7
1000111e3:	8b 85 f8 fe ff ff	movl	-264(%rbp), %eax
1000111e9:	89 44 24 08	movl	%eax, 8(%rsp)
1000111ed:	48 8b 85 58 fe ff ff	movq	-424(%rbp), %rax
1000111f4:	48 89 04 24	movq	%rax, (%rsp)
1000111f8:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
100011201:	f2 0f 10 05 2f 7f 02 00	movsd	163631(%rip), %xmm0
100011209:	b9 08 00 00 00	movl	$8, %ecx
10001120e:	31 ff	xorl	%edi, %edi
100011210:	48 8b b5 c8 fe ff ff	movq	-312(%rbp), %rsi
100011217:	48 8b 9d 68 fe ff ff	movq	-408(%rbp), %rbx
10001121e:	48 89 da	movq	%rbx, %rdx
100011221:	4c 8b 85 b0 fe ff ff	movq	-336(%rbp), %r8
100011228:	4c 8b 8d a8 fe ff ff	movq	-344(%rbp), %r9
10001122f:	0f 28 c8	movaps	%xmm0, %xmm1
100011232:	e8 65 dd 01 00	callq	0x10002ef9c ## symbol stub for: _CGBitmapContextCreateWithAlpha
100011237:	48 85 c0	testq	%rax, %rax
10001123a:	0f 84 b4 02 00 00	je	0x1000114f4
100011240:	49 89 c5	movq	%rax, %r13
100011243:	48 89 c7	movq	%rax, %rdi
100011246:	e8 63 dd 01 00	callq	0x10002efae ## symbol stub for: _CGBitmapContextGetWidth
10001124b:	49 89 c7	movq	%rax, %r15
10001124e:	4c 89 ef	movq	%r13, %rdi
100011251:	e8 52 dd 01 00	callq	0x10002efa8 ## symbol stub for: _CGBitmapContextGetHeight
100011256:	66 49 0f 6e c7	movq	%r15, %xmm0
10001125b:	66 48 0f 6e c8	movq	%rax, %xmm1
100011260:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
100011264:	66 0f ef c9	pxor	%xmm1, %xmm1
100011268:	66 0f 6f d0	movdqa	%xmm0, %xmm2
10001126c:	66 0f 3a 0e d1 cc	pblendw	$204, %xmm1, %xmm2
100011272:	66 0f eb 15 c6 7e 02 00	por	163526(%rip), %xmm2
10001127a:	66 0f 73 d0 20	psrlq	$32, %xmm0
10001127f:	66 0f eb 05 c9 7e 02 00	por	163529(%rip), %xmm0
100011287:	66 0f 5c 05 d1 7e 02 00	subpd	163537(%rip), %xmm0
10001128f:	66 0f 58 c2	addpd	%xmm2, %xmm0
100011293:	66 0f 7f 8d 50 ff ff ff	movdqa	%xmm1, -176(%rbp)
10001129b:	66 0f 29 85 60 ff ff ff	movapd	%xmm0, -160(%rbp)
1000112a3:	0f 28 85 50 ff ff ff	movaps	-176(%rbp), %xmm0
1000112aa:	0f 28 8d 60 ff ff ff	movaps	-160(%rbp), %xmm1
1000112b1:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000112b6:	0f 11 04 24	movups	%xmm0, (%rsp)
1000112ba:	4c 89 ef	movq	%r13, %rdi
1000112bd:	e8 ac dd 01 00	callq	0x10002f06e ## symbol stub for: _CGContextClearRect
1000112c2:	e9 8c 01 00 00	jmp	0x100011453
1000112c7:	8b 85 f8 fe ff ff	movl	-264(%rbp), %eax
1000112cd:	89 44 24 08	movl	%eax, 8(%rsp)
1000112d1:	48 8b 9d 58 fe ff ff	movq	-424(%rbp), %rbx
1000112d8:	48 89 1c 24	movq	%rbx, (%rsp)
1000112dc:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
1000112e5:	f2 0f 10 05 4b 7e 02 00	movsd	163403(%rip), %xmm0
1000112ed:	b9 08 00 00 00	movl	$8, %ecx
1000112f2:	31 ff	xorl	%edi, %edi
1000112f4:	48 8b b5 c8 fe ff ff	movq	-312(%rbp), %rsi
1000112fb:	48 8b 95 68 fe ff ff	movq	-408(%rbp), %rdx
100011302:	4c 8b 85 b0 fe ff ff	movq	-336(%rbp), %r8
100011309:	4c 8b 8d a8 fe ff ff	movq	-344(%rbp), %r9
100011310:	0f 28 c8	movaps	%xmm0, %xmm1
100011313:	e8 8a dc 01 00	callq	0x10002efa2 ## symbol stub for: _CGBitmapContextCreateWithDictionary
100011318:	48 85 c0	testq	%rax, %rax
10001131b:	0f 84 d3 01 00 00	je	0x1000114f4
100011321:	49 89 c5	movq	%rax, %r13
100011324:	48 89 c7	movq	%rax, %rdi
100011327:	e8 82 dc 01 00	callq	0x10002efae ## symbol stub for: _CGBitmapContextGetWidth
10001132c:	49 89 c4	movq	%rax, %r12
10001132f:	4c 89 ef	movq	%r13, %rdi
100011332:	e8 71 dc 01 00	callq	0x10002efa8 ## symbol stub for: _CGBitmapContextGetHeight
100011337:	66 49 0f 6e c4	movq	%r12, %xmm0
10001133c:	66 48 0f 6e c8	movq	%rax, %xmm1
100011341:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
100011345:	66 0f ef c9	pxor	%xmm1, %xmm1
100011349:	66 0f 6f d0	movdqa	%xmm0, %xmm2
10001134d:	66 0f 3a 0e d1 cc	pblendw	$204, %xmm1, %xmm2
100011353:	66 0f eb 15 e5 7d 02 00	por	163301(%rip), %xmm2
10001135b:	66 0f 73 d0 20	psrlq	$32, %xmm0
100011360:	66 0f eb 05 e8 7d 02 00	por	163304(%rip), %xmm0
100011368:	66 0f 5c 05 f0 7d 02 00	subpd	163312(%rip), %xmm0
100011370:	66 0f 58 c2	addpd	%xmm2, %xmm0
100011374:	66 0f 7f 8d 30 ff ff ff	movdqa	%xmm1, -208(%rbp)
10001137c:	66 0f 29 85 40 ff ff ff	movapd	%xmm0, -192(%rbp)
100011384:	0f 28 05 f5 7d 02 00	movaps	163317(%rip), %xmm0
10001138b:	48 8d 85 20 ff ff ff	leaq	-224(%rbp), %rax
100011392:	0f 29 00	movaps	%xmm0, (%rax)
100011395:	0f 28 05 84 7e 02 00	movaps	163460(%rip), %xmm0
10001139c:	4c 8d a5 00 ff ff ff	leaq	-256(%rbp), %r12
1000113a3:	41 0f 29 44 24 10	movaps	%xmm0, 16(%r12)
1000113a9:	0f 28 05 60 7e 02 00	movaps	163424(%rip), %xmm0
1000113b0:	41 0f 29 04 24	movaps	%xmm0, (%r12)
1000113b5:	66 0f 7f 8d 60 ff ff ff	movdqa	%xmm1, -160(%rbp)
1000113bd:	66 0f 7f 8d 50 ff ff ff	movdqa	%xmm1, -176(%rbp)
1000113c5:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
1000113cf:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
1000113d6:	48 89 df	movq	%rbx, %rdi
1000113d9:	e8 3c dc 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
1000113de:	48 83 f8 03	cmpq	$3, %rax
1000113e2:	4d 0f 44 fc	cmoveq	%r12, %r15
1000113e6:	48 83 f8 01	cmpq	$1, %rax
1000113ea:	48 8d 85 20 ff ff ff	leaq	-224(%rbp), %rax
1000113f1:	4c 0f 44 f8	cmoveq	%rax, %r15
1000113f5:	4c 8b a5 60 fe ff ff	movq	-416(%rbp), %r12
1000113fc:	48 89 df	movq	%rbx, %rdi
1000113ff:	4c 89 fe	movq	%r15, %rsi
100011402:	e8 b9 db 01 00	callq	0x10002efc0 ## symbol stub for: _CGColorCreate
100011407:	49 89 c7	movq	%rax, %r15
10001140a:	4c 89 ef	movq	%r13, %rdi
10001140d:	e8 b0 dc 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100011412:	4c 89 ef	movq	%r13, %rdi
100011415:	4c 89 fe	movq	%r15, %rsi
100011418:	e8 b1 dc 01 00	callq	0x10002f0ce ## symbol stub for: _CGContextSetFillColorWithColor
10001141d:	0f 28 85 30 ff ff ff	movaps	-208(%rbp), %xmm0
100011424:	0f 28 8d 40 ff ff ff	movaps	-192(%rbp), %xmm1
10001142b:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100011430:	0f 11 04 24	movups	%xmm0, (%rsp)
100011434:	4c 89 ef	movq	%r13, %rdi
100011437:	e8 5c dc 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
10001143c:	4c 89 ef	movq	%r13, %rdi
10001143f:	e8 78 dc 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100011444:	4c 89 ff	movq	%r15, %rdi
100011447:	e8 7a db 01 00	callq	0x10002efc6 ## symbol stub for: _CGColorRelease
10001144c:	48 8b 9d 68 fe ff ff	movq	-408(%rbp), %rbx
100011453:	66 48 0f 6e c3	movq	%rbx, %xmm0
100011458:	f3 0f 7e 8d c8 fe ff ff	movq	-312(%rbp), %xmm1
100011460:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
100011464:	66 0f ef c0	pxor	%xmm0, %xmm0
100011468:	66 0f 6f d1	movdqa	%xmm1, %xmm2
10001146c:	66 0f 3a 0e d0 cc	pblendw	$204, %xmm0, %xmm2
100011472:	66 0f eb 15 c6 7c 02 00	por	163014(%rip), %xmm2
10001147a:	66 0f 73 d1 20	psrlq	$32, %xmm1
10001147f:	66 0f eb 0d c9 7c 02 00	por	163017(%rip), %xmm1
100011487:	66 0f 5c 0d d1 7c 02 00	subpd	163025(%rip), %xmm1
10001148f:	66 0f 58 ca	addpd	%xmm2, %xmm1
100011493:	48 8d 9d 70 fe ff ff	leaq	-400(%rbp), %rbx
10001149a:	66 0f 7f 03	movdqa	%xmm0, (%rbx)
10001149e:	66 0f 29 4b 10	movapd	%xmm1, 16(%rbx)
1000114a3:	4c 89 ef	movq	%r13, %rdi
1000114a6:	48 89 de	movq	%rbx, %rsi
1000114a9:	e8 ba db 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
1000114ae:	0f 28 03	movaps	(%rbx), %xmm0
1000114b1:	0f 28 4b 10	movaps	16(%rbx), %xmm1
1000114b5:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000114ba:	0f 11 04 24	movups	%xmm0, (%rsp)
1000114be:	4c 89 ef	movq	%r13, %rdi
1000114c1:	4c 89 f6	movq	%r14, %rsi
1000114c4:	e8 b7 db 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
1000114c9:	4c 89 ef	movq	%r13, %rdi
1000114cc:	e8 c1 db 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
1000114d1:	4c 89 ef	movq	%r13, %rdi
1000114d4:	e8 c5 db 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
1000114d9:	4c 89 f7	movq	%r14, %rdi
1000114dc:	e8 a7 dc 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
1000114e1:	4c 89 ef	movq	%r13, %rdi
1000114e4:	e8 ad da 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
1000114e9:	49 89 c6	movq	%rax, %r14
1000114ec:	4c 89 ef	movq	%r13, %rdi
1000114ef:	e8 c2 db 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
1000114f4:	4c 8b bd a0 fe ff ff	movq	-352(%rbp), %r15
1000114fb:	48 8b bd f0 fe ff ff	movq	-272(%rbp), %rdi
100011502:	e8 2b db 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100011507:	8b b5 dc fe ff ff	movl	-292(%rbp), %esi
10001150d:	4c 89 f7	movq	%r14, %rdi
100011510:	e8 fb db 01 00	callq	0x10002f110 ## symbol stub for: _CGImageCreateCopyWithRenderingIntent
100011515:	48 89 c3	movq	%rax, %rbx
100011518:	4c 89 f7	movq	%r14, %rdi
10001151b:	e8 68 dc 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100011520:	48 8b bd e0 fe ff ff	movq	-288(%rbp), %rdi
100011527:	e8 5c dc 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10001152c:	4c 89 ff	movq	%r15, %rdi
10001152f:	e8 54 dc 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100011534:	4c 89 e7	movq	%r12, %rdi
100011537:	e8 f6 da 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10001153c:	48 8b 05 d5 b2 02 00	movq	176853(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100011543:	48 8b 00	movq	(%rax), %rax
100011546:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001154a:	0f 85 ad 00 00 00	jne	0x1000115fd
100011550:	48 89 d8	movq	%rbx, %rax
100011553:	48 81 c4 a8 01 00 00	addq	$424, %rsp
10001155a:	5b	popq	%rbx
10001155b:	41 5c	popq	%r12
10001155d:	41 5d	popq	%r13
10001155f:	41 5e	popq	%r14
100011561:	41 5f	popq	%r15
100011563:	5d	popq	%rbp
100011564:	c3	retq
100011565:	48 8b bd b8 fe ff ff	movq	-328(%rbp), %rdi
10001156c:	e8 a3 da 01 00	callq	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
100011571:	83 f8 02	cmpl	$2, %eax
100011574:	74 20	je	0x100011596
100011576:	83 f8 01	cmpl	$1, %eax
100011579:	74 2e	je	0x1000115a9
10001157b:	85 c0	testl	%eax, %eax
10001157d:	0f 85 5f f6 ff ff	jne	0x100010be2
100011583:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
10001158d:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
100011594:	eb 32	jmp	0x1000115c8
100011596:	0f 57 c0	xorps	%xmm0, %xmm0
100011599:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
1000115a0:	0f 29 85 50 ff ff ff	movaps	%xmm0, -176(%rbp)
1000115a7:	eb 1f	jmp	0x1000115c8
1000115a9:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
1000115b3:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
1000115ba:	0f 28 05 bf 7b 02 00	movaps	162751(%rip), %xmm0
1000115c1:	0f 29 85 50 ff ff ff	movaps	%xmm0, -176(%rbp)
1000115c8:	48 8b 9d b8 fe ff ff	movq	-328(%rbp), %rbx
1000115cf:	48 89 df	movq	%rbx, %rdi
1000115d2:	e8 43 da 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
1000115d7:	48 b9 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rcx
1000115e1:	48 89 8c c5 50 ff ff ff	movq	%rcx, -176(%rbp,%rax,8)
1000115e9:	48 8d b5 50 ff ff ff	leaq	-176(%rbp), %rsi
1000115f0:	48 89 df	movq	%rbx, %rdi
1000115f3:	e8 c8 d9 01 00	callq	0x10002efc0 ## symbol stub for: _CGColorCreate
1000115f8:	e9 e7 f5 ff ff	jmp	0x100010be4
1000115fd:	e8 ae dd 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100011602:	55	pushq	%rbp
100011603:	48 89 e5	movq	%rsp, %rbp
100011606:	48 83 ec 40	subq	$64, %rsp
10001160a:	48 8b 05 07 b2 02 00	movq	176647(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100011611:	48 8b 00	movq	(%rax), %rax
100011614:	48 89 45 f8	movq	%rax, -8(%rbp)
100011618:	e8 f7 d9 01 00	callq	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
10001161d:	83 f8 03	cmpl	$3, %eax
100011620:	77 2b	ja	0x10001164d
100011622:	89 c0	movl	%eax, %eax
100011624:	48 8d 0d 95 00 00 00	leaq	149(%rip), %rcx
10001162b:	48 63 04 81	movslq	(%rcx,%rax,4), %rax
10001162f:	48 01 c8	addq	%rcx, %rax
100011632:	ff e0	jmpq	*%rax
100011634:	48 8b 05 dd b1 02 00	movq	176605(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001163b:	48 8b 00	movq	(%rax), %rax
10001163e:	48 3b 45 f8	cmpq	-8(%rbp), %rax
100011642:	75 74	jne	0x1000116b8
100011644:	48 8b 05 5d b3 02 00	movq	176989(%rip), %rax ## literal pool symbol address: _kCGColorSpaceGenericGrayGamma2_2
10001164b:	eb 34	jmp	0x100011681
10001164d:	31 c0	xorl	%eax, %eax
10001164f:	eb 51	jmp	0x1000116a2
100011651:	48 8b 05 c0 b1 02 00	movq	176576(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100011658:	48 8b 00	movq	(%rax), %rax
10001165b:	48 3b 45 f8	cmpq	-8(%rbp), %rax
10001165f:	75 57	jne	0x1000116b8
100011661:	48 8b 05 50 b3 02 00	movq	176976(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
100011668:	eb 17	jmp	0x100011681
10001166a:	48 8b 05 a7 b1 02 00	movq	176551(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100011671:	48 8b 00	movq	(%rax), %rax
100011674:	48 3b 45 f8	cmpq	-8(%rbp), %rax
100011678:	75 3e	jne	0x1000116b8
10001167a:	48 8b 05 1f b3 02 00	movq	176927(%rip), %rax ## literal pool symbol address: _kCGColorSpaceGenericCMYK
100011681:	48 8b 38	movq	(%rax), %rdi
100011684:	48 83 c4 40	addq	$64, %rsp
100011688:	5d	popq	%rbp
100011689:	e9 68 d9 01 00	jmp	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
10001168e:	48 8d 15 5b 7b 02 00	leaq	162651(%rip), %rdx
100011695:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100011699:	48 8d 75 c0	leaq	-64(%rbp), %rsi
10001169d:	e8 42 d9 01 00	callq	0x10002efe4 ## symbol stub for: _CGColorSpaceCreateLab
1000116a2:	48 8b 0d 6f b1 02 00	movq	176495(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
1000116a9:	48 8b 09	movq	(%rcx), %rcx
1000116ac:	48 3b 4d f8	cmpq	-8(%rbp), %rcx
1000116b0:	75 06	jne	0x1000116b8
1000116b2:	48 83 c4 40	addq	$64, %rsp
1000116b6:	5d	popq	%rbp
1000116b7:	c3	retq
1000116b8:	e8 f3 dc 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
1000116bd:	0f 1f 00	nopl	(%rax)
74 ff ff ff	.long 4294967156	@ KIND_JUMP_TABLE32
91 ff ff ff	.long 4294967185	@ KIND_JUMP_TABLE32
aa ff ff ff	.long 4294967210	@ KIND_JUMP_TABLE32
ce ff ff ff	.long 4294967246	@ KIND_JUMP_TABLE32
1000116d0:	55	pushq	%rbp
1000116d1:	48 89 e5	movq	%rsp, %rbp
1000116d4:	41 57	pushq	%r15
1000116d6:	41 56	pushq	%r14
1000116d8:	41 55	pushq	%r13
1000116da:	41 54	pushq	%r12
1000116dc:	53	pushq	%rbx
1000116dd:	50	pushq	%rax
1000116de:	48 89 fb	movq	%rdi, %rbx
1000116e1:	48 8b 05 f8 15 04 00	movq	267768(%rip), %rax
1000116e8:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000116ec:	48 8b 35 9d 0b 04 00	movq	265117(%rip), %rsi ## Objc selector ref: softproofSpaceCopy
1000116f3:	ff 15 27 b5 02 00	callq	*177447(%rip) ## Objc message: -[%rdi softproofSpaceCopy]
1000116f9:	49 89 c6	movq	%rax, %r14
1000116fc:	4c 8b 3d 95 15 04 00	movq	267669(%rip), %r15
100011703:	4a 8b 34 3b	movq	(%rbx,%r15), %rsi
100011707:	48 89 c7	movq	%rax, %rdi
10001170a:	e8 ed d8 01 00	callq	0x10002effc ## symbol stub for: _CGColorSpaceEqualToColorSpace
10001170f:	84 c0	testb	%al, %al
100011711:	74 0f	je	0x100011722
100011713:	4c 89 f7	movq	%r14, %rdi
100011716:	e8 17 d9 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10001171b:	31 ff	xorl	%edi, %edi
10001171d:	e9 f9 00 00 00	jmp	0x10001181b
100011722:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100011726:	e8 07 d9 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10001172b:	4c 8b 25 6e 15 04 00	movq	267630(%rip), %r12
100011732:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100011736:	e8 7f d8 01 00	callq	0x10002efba ## symbol stub for: _CGColorCodeFragmentRelease
10001173b:	31 ff	xorl	%edi, %edi
10001173d:	4a 89 3c 3b	movq	%rdi, (%rbx,%r15)
100011741:	4a 89 3c 23	movq	%rdi, (%rbx,%r12)
100011745:	4d 85 f6	testq	%r14, %r14
100011748:	0f 84 cd 00 00 00	je	0x10001181b
10001174e:	48 8b 05 5b b2 02 00	movq	176731(%rip), %rax ## literal pool symbol address: _kCGColorSpaceGenericRGBLinear
100011755:	48 8b 38	movq	(%rax), %rdi
100011758:	e8 99 d8 01 00	callq	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
10001175d:	49 89 c7	movq	%rax, %r15
100011760:	48 89 c7	movq	%rax, %rdi
100011763:	4c 89 f6	movq	%r14, %rsi
100011766:	e8 c3 00 00 00	callq	0x10001182e
10001176b:	49 89 c4	movq	%rax, %r12
10001176e:	48 85 c0	testq	%rax, %rax
100011771:	75 21	jne	0x100011794
100011773:	4c 89 f7	movq	%r14, %rdi
100011776:	e8 87 fe ff ff	callq	0x100011602
10001177b:	49 89 c5	movq	%rax, %r13
10001177e:	4c 89 ff	movq	%r15, %rdi
100011781:	48 89 c6	movq	%rax, %rsi
100011784:	e8 a5 00 00 00	callq	0x10001182e
100011789:	49 89 c4	movq	%rax, %r12
10001178c:	4c 89 ef	movq	%r13, %rdi
10001178f:	e8 9e d8 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100011794:	41 b9 20 00 00 00	movl	$32, %r9d
10001179a:	4c 89 e7	movq	%r12, %rdi
10001179d:	4c 89 fe	movq	%r15, %rsi
1000117a0:	31 d2	xorl	%edx, %edx
1000117a2:	31 c9	xorl	%ecx, %ecx
1000117a4:	41 b8 02 00 00 00	movl	$2, %r8d
1000117aa:	e8 a7 d8 01 00	callq	0x10002f056 ## symbol stub for: _CGColorTransformCreateCodeFragment
1000117af:	49 89 c5	movq	%rax, %r13
1000117b2:	4c 89 e7	movq	%r12, %rdi
1000117b5:	e8 a8 d8 01 00	callq	0x10002f062 ## symbol stub for: _CGColorTransformRelease
1000117ba:	4c 89 ff	movq	%r15, %rdi
1000117bd:	e8 70 d8 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
1000117c2:	4d 85 ed	testq	%r13, %r13
1000117c5:	4c 8b 3d d4 14 04 00	movq	267476(%rip), %r15
1000117cc:	74 04	je	0x1000117d2
1000117ce:	4e 89 2c 3b	movq	%r13, (%rbx,%r15)
1000117d2:	48 8b 05 bf 14 04 00	movq	267455(%rip), %rax
1000117d9:	4c 89 34 03	movq	%r14, (%rbx,%rax)
1000117dd:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
1000117e2:	0f 84 33 ff ff ff	je	0x10001171b
1000117e8:	48 8b 3d a9 0e 04 00	movq	265897(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSData
1000117ef:	e8 ca dc 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000117f4:	49 89 c6	movq	%rax, %r14
1000117f7:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000117fb:	e8 b4 d7 01 00	callq	0x10002efb4 ## symbol stub for: _CGColorCodeFragmentGetTextureData
100011800:	48 8b 35 21 fc 03 00	movq	261153(%rip), %rsi ## Objc selector ref: initWithBytes:length:
100011807:	b9 00 00 08 00	movl	$524288, %ecx
10001180c:	4c 89 f7	movq	%r14, %rdi
10001180f:	48 89 c2	movq	%rax, %rdx
100011812:	ff 15 08 b4 02 00	callq	*177160(%rip) ## Objc message: +[NSData initWithBytes:length:]
100011818:	48 89 c7	movq	%rax, %rdi
10001181b:	48 83 c4 08	addq	$8, %rsp
10001181f:	5b	popq	%rbx
100011820:	41 5c	popq	%r12
100011822:	41 5d	popq	%r13
100011824:	41 5e	popq	%r14
100011826:	41 5f	popq	%r15
100011828:	5d	popq	%rbp
100011829:	e9 9c dc 01 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
10001182e:	55	pushq	%rbp
10001182f:	48 89 e5	movq	%rsp, %rbp
100011832:	41 56	pushq	%r14
100011834:	53	pushq	%rbx
100011835:	49 89 f6	movq	%rsi, %r14
100011838:	48 89 fb	movq	%rdi, %rbx
10001183b:	48 85 ff	testq	%rdi, %rdi
10001183e:	74 17	je	0x100011857
100011840:	4d 85 f6	testq	%r14, %r14
100011843:	74 12	je	0x100011857
100011845:	48 89 df	movq	%rbx, %rdi
100011848:	31 f6	xorl	%esi, %esi
10001184a:	4c 89 f2	movq	%r14, %rdx
10001184d:	e8 7a d7 01 00	callq	0x10002efcc ## symbol stub for: _CGColorSpaceConcatenate
100011852:	48 89 c3	movq	%rax, %rbx
100011855:	eb 1a	jmp	0x100011871
100011857:	48 85 db	testq	%rbx, %rbx
10001185a:	74 0a	je	0x100011866
10001185c:	48 89 df	movq	%rbx, %rdi
10001185f:	e8 d4 d7 01 00	callq	0x10002f038 ## symbol stub for: _CGColorSpaceRetain
100011864:	eb 0b	jmp	0x100011871
100011866:	4c 89 f7	movq	%r14, %rdi
100011869:	e8 ca d7 01 00	callq	0x10002f038 ## symbol stub for: _CGColorSpaceRetain
10001186e:	4c 89 f3	movq	%r14, %rbx
100011871:	48 89 df	movq	%rbx, %rdi
100011874:	31 f6	xorl	%esi, %esi
100011876:	e8 d5 d7 01 00	callq	0x10002f050 ## symbol stub for: _CGColorTransformCreate
10001187b:	49 89 c6	movq	%rax, %r14
10001187e:	48 89 df	movq	%rbx, %rdi
100011881:	e8 ac d7 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100011886:	4c 89 f0	movq	%r14, %rax
100011889:	5b	popq	%rbx
10001188a:	41 5e	popq	%r14
10001188c:	5d	popq	%rbp
10001188d:	c3	retq
10001188e:	55	pushq	%rbp
10001188f:	48 89 e5	movq	%rsp, %rbp
100011892:	48 8b 05 27 14 04 00	movq	267303(%rip), %rax
100011899:	c6 04 07 00	movb	$0, (%rdi,%rax)
10001189d:	5d	popq	%rbp
10001189e:	c3	retq
10001189f:	55	pushq	%rbp
1000118a0:	48 89 e5	movq	%rsp, %rbp
1000118a3:	48 8b 05 36 14 04 00	movq	267318(%rip), %rax
1000118aa:	48 c7 04 07 00 00 00 00	movq	$0, (%rdi,%rax)
1000118b2:	5d	popq	%rbp
1000118b3:	c3	retq
1000118b4:	55	pushq	%rbp
1000118b5:	48 89 e5	movq	%rsp, %rbp
1000118b8:	53	pushq	%rbx
1000118b9:	48 83 ec 18	subq	$24, %rsp
1000118bd:	48 89 fb	movq	%rdi, %rbx
1000118c0:	48 8b 05 91 14 04 00	movq	267409(%rip), %rax
1000118c7:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000118cb:	e8 2a d9 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
1000118d0:	48 8b 05 89 14 04 00	movq	267401(%rip), %rax
1000118d7:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000118db:	48 85 ff	testq	%rdi, %rdi
1000118de:	74 05	je	0x1000118e5
1000118e0:	e8 2d d6 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000118e5:	48 8d 7d e8	leaq	-24(%rbp), %rdi
1000118e9:	48 89 1f	movq	%rbx, (%rdi)
1000118ec:	48 8b 05 fd 0e 04 00	movq	265981(%rip), %rax ## Objc class ref: FilterPDFDoc
1000118f3:	48 89 47 08	movq	%rax, 8(%rdi)
1000118f7:	48 8b 35 52 f7 03 00	movq	259922(%rip), %rsi ## Objc selector ref: dealloc
1000118fe:	e8 d9 db 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100011903:	48 83 c4 18	addq	$24, %rsp
100011907:	5b	popq	%rbx
100011908:	5d	popq	%rbp
100011909:	c3	retq
10001190a:	55	pushq	%rbp
10001190b:	48 89 e5	movq	%rsp, %rbp
10001190e:	53	pushq	%rbx
10001190f:	48 83 ec 18	subq	$24, %rsp
100011913:	48 89 fb	movq	%rdi, %rbx
100011916:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001191a:	48 89 1f	movq	%rbx, (%rdi)
10001191d:	48 8b 05 cc 0e 04 00	movq	265932(%rip), %rax ## Objc class ref: FilterPDFDoc
100011924:	48 89 47 08	movq	%rax, 8(%rdi)
100011928:	48 8b 35 e9 0b 04 00	movq	265193(%rip), %rsi ## Objc selector ref: windowControllerDidLoadNib:
10001192f:	e8 a8 db 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] windowControllerDidLoadNib:]
100011934:	48 8b 05 25 14 04 00	movq	267301(%rip), %rax
10001193b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001193f:	48 85 ff	testq	%rdi, %rdi
100011942:	74 16	je	0x10001195a
100011944:	48 8b 05 ad b0 02 00	movq	176301(%rip), %rax ## literal pool symbol address: _kCGPDFContextOutputIntents
10001194b:	48 8b 30	movq	(%rax), %rsi
10001194e:	e8 8f d5 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100011953:	b1 01	movb	$1, %cl
100011955:	48 85 c0	testq	%rax, %rax
100011958:	75 02	jne	0x10001195c
10001195a:	31 c9	xorl	%ecx, %ecx
10001195c:	48 8d 05 ed 14 04 00	leaq	267501(%rip), %rax
100011963:	48 8b 00	movq	(%rax), %rax
100011966:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001196a:	48 8b 35 7f 04 04 00	movq	263295(%rip), %rsi ## Objc selector ref: setEnabled:
100011971:	0f b6 d1	movzbl	%cl, %edx
100011974:	ff 15 a6 b2 02 00	callq	*176806(%rip) ## Objc message: -[%rdi setEnabled:]
10001197a:	48 83 c4 18	addq	$24, %rsp
10001197e:	5b	popq	%rbx
10001197f:	5d	popq	%rbp
100011980:	c3	retq
100011981:	55	pushq	%rbp
100011982:	48 89 e5	movq	%rsp, %rbp
100011985:	41 57	pushq	%r15
100011987:	41 56	pushq	%r14
100011989:	41 55	pushq	%r13
10001198b:	41 54	pushq	%r12
10001198d:	53	pushq	%rbx
10001198e:	48 83 ec 18	subq	$24, %rsp
100011992:	48 89 cb	movq	%rcx, %rbx
100011995:	49 89 d7	movq	%rdx, %r15
100011998:	49 89 fe	movq	%rdi, %r14
10001199b:	4c 8b 25 e6 fb 03 00	movq	261094(%rip), %r12 ## Objc selector ref: isEqualToString:
1000119a2:	48 8d 15 37 c0 02 00	leaq	180279(%rip), %rdx ## Objc cfstring ref: @"PDF Document"
1000119a9:	48 89 cf	movq	%rcx, %rdi
1000119ac:	4c 89 e6	movq	%r12, %rsi
1000119af:	ff 15 6b b2 02 00	callq	*176747(%rip) ## Objc message: -[%rdi isEqualToString:]
1000119b5:	84 c0	testb	%al, %al
1000119b7:	74 0a	je	0x1000119c3
1000119b9:	4d 85 ff	testq	%r15, %r15
1000119bc:	75 2b	jne	0x1000119e9
1000119be:	e9 83 02 00 00	jmp	0x100011c46
1000119c3:	48 8d 15 36 c0 02 00	leaq	180278(%rip), %rdx ## Objc cfstring ref: @"com.adobe.pdf"
1000119ca:	48 89 df	movq	%rbx, %rdi
1000119cd:	4c 89 e6	movq	%r12, %rsi
1000119d0:	ff 15 4a b2 02 00	callq	*176714(%rip) ## Objc message: -[%rdi isEqualToString:]
1000119d6:	31 c9	xorl	%ecx, %ecx
1000119d8:	4d 85 ff	testq	%r15, %r15
1000119db:	0f 84 67 02 00 00	je	0x100011c48
1000119e1:	84 c0	testb	%al, %al
1000119e3:	0f 84 5f 02 00 00	je	0x100011c48
1000119e9:	4c 89 ff	movq	%r15, %rdi
1000119ec:	e8 eb d7 01 00	callq	0x10002f1dc ## symbol stub for: _CGPDFDocumentCreateWithURL
1000119f1:	48 85 c0	testq	%rax, %rax
1000119f4:	0f 84 4c 02 00 00	je	0x100011c46
1000119fa:	48 89 c3	movq	%rax, %rbx
1000119fd:	48 8b 35 04 06 04 00	movq	263684(%rip), %rsi ## Objc selector ref: setPDFDocument:
100011a04:	4c 89 f7	movq	%r14, %rdi
100011a07:	48 89 c2	movq	%rax, %rdx
100011a0a:	ff 15 10 b2 02 00	callq	*176656(%rip) ## Objc message: -[%rdi setPDFDocument:]
100011a10:	48 8b 05 59 af 02 00	movq	175961(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100011a17:	48 8b 38	movq	(%rax), %rdi
100011a1a:	48 8b 15 6f af 02 00	movq	175983(%rip), %rdx ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
100011a21:	48 8b 0d 70 af 02 00	movq	175984(%rip), %rcx ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
100011a28:	45 31 ff	xorl	%r15d, %r15d
100011a2b:	31 f6	xorl	%esi, %esi
100011a2d:	e8 92 d4 01 00	callq	0x10002eec4 ## symbol stub for: _CFDictionaryCreateMutable
100011a32:	48 85 c0	testq	%rax, %rax
100011a35:	0f 84 f4 01 00 00	je	0x100011c2f
100011a3b:	49 89 c5	movq	%rax, %r13
100011a3e:	48 89 df	movq	%rbx, %rdi
100011a41:	e8 8a d7 01 00	callq	0x10002f1d0 ## symbol stub for: _CGPDFDocumentCopyOutputIntents
100011a46:	49 89 c4	movq	%rax, %r12
100011a49:	48 89 df	movq	%rbx, %rdi
100011a4c:	e8 91 d7 01 00	callq	0x10002f1e2 ## symbol stub for: _CGPDFDocumentGetInfo
100011a51:	49 89 c7	movq	%rax, %r15
100011a54:	4d 85 e4	testq	%r12, %r12
100011a57:	74 1d	je	0x100011a76
100011a59:	48 8b 05 98 af 02 00	movq	176024(%rip), %rax ## literal pool symbol address: _kCGPDFContextOutputIntents
100011a60:	48 8b 30	movq	(%rax), %rsi
100011a63:	4c 89 ef	movq	%r13, %rdi
100011a66:	4c 89 e2	movq	%r12, %rdx
100011a69:	e8 80 d4 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011a6e:	4c 89 e7	movq	%r12, %rdi
100011a71:	e8 9c d4 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011a76:	48 8d 35 1b 7f 02 00	leaq	163611(%rip), %rsi ## literal pool for: "Title"
100011a7d:	48 8d 55 d0	leaq	-48(%rbp), %rdx
100011a81:	4c 89 ff	movq	%r15, %rdi
100011a84:	e8 3b d7 01 00	callq	0x10002f1c4 ## symbol stub for: _CGPDFDictionaryGetString
100011a89:	84 c0	testb	%al, %al
100011a8b:	74 3b	je	0x100011ac8
100011a8d:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011a91:	e8 7c d7 01 00	callq	0x10002f212 ## symbol stub for: _CGPDFStringCopyTextString
100011a96:	48 85 c0	testq	%rax, %rax
100011a99:	74 2d	je	0x100011ac8
100011a9b:	48 89 c3	movq	%rax, %rbx
100011a9e:	48 89 c7	movq	%rax, %rdi
100011aa1:	e8 a8 d4 01 00	callq	0x10002ef4e ## symbol stub for: _CFStringGetLength
100011aa6:	48 85 c0	testq	%rax, %rax
100011aa9:	7e 15	jle	0x100011ac0
100011aab:	48 8b 05 56 af 02 00	movq	175958(%rip), %rax ## literal pool symbol address: _kCGPDFContextTitle
100011ab2:	48 8b 30	movq	(%rax), %rsi
100011ab5:	4c 89 ef	movq	%r13, %rdi
100011ab8:	48 89 da	movq	%rbx, %rdx
100011abb:	e8 2e d4 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011ac0:	48 89 df	movq	%rbx, %rdi
100011ac3:	e8 4a d4 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011ac8:	48 8d 35 cf 7e 02 00	leaq	163535(%rip), %rsi ## literal pool for: "Author"
100011acf:	48 8d 55 d0	leaq	-48(%rbp), %rdx
100011ad3:	4c 89 ff	movq	%r15, %rdi
100011ad6:	e8 e9 d6 01 00	callq	0x10002f1c4 ## symbol stub for: _CGPDFDictionaryGetString
100011adb:	84 c0	testb	%al, %al
100011add:	74 3b	je	0x100011b1a
100011adf:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011ae3:	e8 2a d7 01 00	callq	0x10002f212 ## symbol stub for: _CGPDFStringCopyTextString
100011ae8:	48 85 c0	testq	%rax, %rax
100011aeb:	74 2d	je	0x100011b1a
100011aed:	48 89 c3	movq	%rax, %rbx
100011af0:	48 89 c7	movq	%rax, %rdi
100011af3:	e8 56 d4 01 00	callq	0x10002ef4e ## symbol stub for: _CFStringGetLength
100011af8:	48 85 c0	testq	%rax, %rax
100011afb:	7e 15	jle	0x100011b12
100011afd:	48 8b 05 dc ae 02 00	movq	175836(%rip), %rax ## literal pool symbol address: _kCGPDFContextAuthor
100011b04:	48 8b 30	movq	(%rax), %rsi
100011b07:	4c 89 ef	movq	%r13, %rdi
100011b0a:	48 89 da	movq	%rbx, %rdx
100011b0d:	e8 dc d3 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011b12:	48 89 df	movq	%rbx, %rdi
100011b15:	e8 f8 d3 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011b1a:	48 8d 35 84 7e 02 00	leaq	163460(%rip), %rsi ## literal pool for: "Creator"
100011b21:	48 8d 55 d0	leaq	-48(%rbp), %rdx
100011b25:	4c 89 ff	movq	%r15, %rdi
100011b28:	e8 97 d6 01 00	callq	0x10002f1c4 ## symbol stub for: _CGPDFDictionaryGetString
100011b2d:	84 c0	testb	%al, %al
100011b2f:	74 3b	je	0x100011b6c
100011b31:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011b35:	e8 d8 d6 01 00	callq	0x10002f212 ## symbol stub for: _CGPDFStringCopyTextString
100011b3a:	48 85 c0	testq	%rax, %rax
100011b3d:	74 2d	je	0x100011b6c
100011b3f:	48 89 c3	movq	%rax, %rbx
100011b42:	48 89 c7	movq	%rax, %rdi
100011b45:	e8 04 d4 01 00	callq	0x10002ef4e ## symbol stub for: _CFStringGetLength
100011b4a:	48 85 c0	testq	%rax, %rax
100011b4d:	7e 15	jle	0x100011b64
100011b4f:	48 8b 05 92 ae 02 00	movq	175762(%rip), %rax ## literal pool symbol address: _kCGPDFContextCreator
100011b56:	48 8b 30	movq	(%rax), %rsi
100011b59:	4c 89 ef	movq	%r13, %rdi
100011b5c:	48 89 da	movq	%rbx, %rdx
100011b5f:	e8 8a d3 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011b64:	48 89 df	movq	%rbx, %rdi
100011b67:	e8 a6 d3 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011b6c:	4d 85 e4	testq	%r12, %r12
100011b6f:	0f 84 9f 00 00 00	je	0x100011c14
100011b75:	48 8d 35 31 7e 02 00	leaq	163377(%rip), %rsi ## literal pool for: "GTS_PDFXVersion"
100011b7c:	48 8d 55 d0	leaq	-48(%rbp), %rdx
100011b80:	4c 89 ff	movq	%r15, %rdi
100011b83:	e8 3c d6 01 00	callq	0x10002f1c4 ## symbol stub for: _CGPDFDictionaryGetString
100011b88:	84 c0	testb	%al, %al
100011b8a:	74 3b	je	0x100011bc7
100011b8c:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011b90:	e8 7d d6 01 00	callq	0x10002f212 ## symbol stub for: _CGPDFStringCopyTextString
100011b95:	48 85 c0	testq	%rax, %rax
100011b98:	74 2d	je	0x100011bc7
100011b9a:	48 89 c3	movq	%rax, %rbx
100011b9d:	48 89 c7	movq	%rax, %rdi
100011ba0:	e8 a9 d3 01 00	callq	0x10002ef4e ## symbol stub for: _CFStringGetLength
100011ba5:	48 85 c0	testq	%rax, %rax
100011ba8:	7e 15	jle	0x100011bbf
100011baa:	48 8b 05 6f ae 02 00	movq	175727(%rip), %rax ## literal pool symbol address: _kCGPDFXVersion
100011bb1:	48 8b 30	movq	(%rax), %rsi
100011bb4:	4c 89 ef	movq	%r13, %rdi
100011bb7:	48 89 da	movq	%rbx, %rdx
100011bba:	e8 2f d3 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011bbf:	48 89 df	movq	%rbx, %rdi
100011bc2:	e8 4b d3 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011bc7:	48 8d 35 ef 7d 02 00	leaq	163311(%rip), %rsi ## literal pool for: "Trapped"
100011bce:	48 8d 55 c8	leaq	-56(%rbp), %rdx
100011bd2:	4c 89 ff	movq	%r15, %rdi
100011bd5:	e8 e4 d5 01 00	callq	0x10002f1be ## symbol stub for: _CGPDFDictionaryGetName
100011bda:	84 c0	testb	%al, %al
100011bdc:	74 36	je	0x100011c14
100011bde:	48 8b 7d c8	movq	-56(%rbp), %rdi
100011be2:	48 8d 35 dc 7d 02 00	leaq	163292(%rip), %rsi ## literal pool for: "True"
100011be9:	e8 48 d9 01 00	callq	0x10002f536 ## symbol stub for: _strcmp
100011bee:	85 c0	testl	%eax, %eax
100011bf0:	48 8b 05 21 ae 02 00	movq	175649(%rip), %rax ## literal pool symbol address: _kCGPDFXTrapped
100011bf7:	48 8b 30	movq	(%rax), %rsi
100011bfa:	48 8d 05 bf be 02 00	leaq	179903(%rip), %rax ## Objc cfstring ref: @"True"
100011c01:	48 8d 15 d8 be 02 00	leaq	179928(%rip), %rdx ## Objc cfstring ref: @"False"
100011c08:	48 0f 44 d0	cmoveq	%rax, %rdx
100011c0c:	4c 89 ef	movq	%r13, %rdi
100011c0f:	e8 da d2 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011c14:	4c 89 ef	movq	%r13, %rdi
100011c17:	e8 b4 d2 01 00	callq	0x10002eed0 ## symbol stub for: _CFDictionaryGetCount
100011c1c:	48 85 c0	testq	%rax, %rax
100011c1f:	75 0b	jne	0x100011c2c
100011c21:	4c 89 ef	movq	%r13, %rdi
100011c24:	e8 e9 d2 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100011c29:	45 31 ed	xorl	%r13d, %r13d
100011c2c:	4d 89 ef	movq	%r13, %r15
100011c2f:	48 8b 35 ca 03 04 00	movq	263114(%rip), %rsi ## Objc selector ref: setOrigInfo:
100011c36:	4c 89 f7	movq	%r14, %rdi
100011c39:	4c 89 fa	movq	%r15, %rdx
100011c3c:	ff 15 de af 02 00	callq	*176094(%rip) ## Objc message: -[%rdi setOrigInfo:]
100011c42:	b1 01	movb	$1, %cl
100011c44:	eb 02	jmp	0x100011c48
100011c46:	31 c9	xorl	%ecx, %ecx
100011c48:	0f b6 c1	movzbl	%cl, %eax
100011c4b:	48 83 c4 18	addq	$24, %rsp
100011c4f:	5b	popq	%rbx
100011c50:	41 5c	popq	%r12
100011c52:	41 5d	popq	%r13
100011c54:	41 5e	popq	%r14
100011c56:	41 5f	popq	%r15
100011c58:	5d	popq	%rbp
100011c59:	c3	retq
100011c5a:	55	pushq	%rbp
100011c5b:	48 89 e5	movq	%rsp, %rbp
100011c5e:	41 57	pushq	%r15
100011c60:	41 56	pushq	%r14
100011c62:	41 55	pushq	%r13
100011c64:	41 54	pushq	%r12
100011c66:	53	pushq	%rbx
100011c67:	48 81 ec 88 00 00 00	subq	$136, %rsp
100011c6e:	48 85 c9	testq	%rcx, %rcx
100011c71:	0f 84 27 01 00 00	je	0x100011d9e
100011c77:	4d 89 ce	movq	%r9, %r14
100011c7a:	4d 89 c4	movq	%r8, %r12
100011c7d:	48 89 cb	movq	%rcx, %rbx
100011c80:	49 89 d5	movq	%rdx, %r13
100011c83:	49 89 ff	movq	%rdi, %r15
100011c86:	48 89 cf	movq	%rcx, %rdi
100011c89:	e8 5a d5 01 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
100011c8e:	48 85 c0	testq	%rax, %rax
100011c91:	0f 84 07 01 00 00	je	0x100011d9e
100011c97:	4c 89 75 a8	movq	%r14, -88(%rbp)
100011c9b:	48 89 45 b0	movq	%rax, -80(%rbp)
100011c9f:	48 89 5d a0	movq	%rbx, -96(%rbp)
100011ca3:	48 8d 05 34 02 00 00	leaq	564(%rip), %rax
100011caa:	48 89 45 90	movq	%rax, -112(%rbp)
100011cae:	48 8d 05 41 02 00 00	leaq	577(%rip), %rax
100011cb5:	48 89 45 98	movq	%rax, -104(%rbp)
100011cb9:	48 8b 05 b0 ac 02 00	movq	175280(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100011cc0:	48 8b 38	movq	(%rax), %rdi
100011cc3:	45 31 f6	xorl	%r14d, %r14d
100011cc6:	31 f6	xorl	%esi, %esi
100011cc8:	e8 c1 d1 01 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
100011ccd:	48 85 c0	testq	%rax, %rax
100011cd0:	0f 84 cb 00 00 00	je	0x100011da1
100011cd6:	4c 89 65 c8	movq	%r12, -56(%rbp)
100011cda:	48 89 45 c0	movq	%rax, -64(%rbp)
100011cde:	48 89 c7	movq	%rax, %rdi
100011ce1:	e8 32 d2 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100011ce6:	48 8d 75 90	leaq	-112(%rbp), %rsi
100011cea:	48 89 c7	movq	%rax, %rdi
100011ced:	e8 ee d3 01 00	callq	0x10002f0e0 ## symbol stub for: _CGDataConsumerCreate
100011cf2:	48 89 45 d0	movq	%rax, -48(%rbp)
100011cf6:	48 8b 35 03 fc 03 00	movq	261123(%rip), %rsi ## Objc selector ref: origInfo
100011cfd:	4c 89 ff	movq	%r15, %rdi
100011d00:	ff 15 1a af 02 00	callq	*175898(%rip) ## Objc message: -[%rdi origInfo]
100011d06:	49 89 c4	movq	%rax, %r12
100011d09:	48 8b 5d a8	movq	-88(%rbp), %rbx
100011d0d:	48 85 db	testq	%rbx, %rbx
100011d10:	4c 89 6d b8	movq	%r13, -72(%rbp)
100011d14:	0f 84 9d 00 00 00	je	0x100011db7
100011d1a:	4d 85 e4	testq	%r12, %r12
100011d1d:	0f 84 94 00 00 00	je	0x100011db7
100011d23:	31 ff	xorl	%edi, %edi
100011d25:	31 f6	xorl	%esi, %esi
100011d27:	4c 89 e2	movq	%r12, %rdx
100011d2a:	e8 9b d1 01 00	callq	0x10002eeca ## symbol stub for: _CFDictionaryCreateMutableCopy
100011d2f:	49 89 c4	movq	%rax, %r12
100011d32:	48 89 df	movq	%rbx, %rdi
100011d35:	e8 96 d1 01 00	callq	0x10002eed0 ## symbol stub for: _CFDictionaryGetCount
100011d3a:	48 85 c0	testq	%rax, %rax
100011d3d:	7e 7f	jle	0x100011dbe
100011d3f:	49 89 c6	movq	%rax, %r14
100011d42:	4c 8d 3c c5 00 00 00 00	leaq	(,%rax,8), %r15
100011d4a:	49 89 dd	movq	%rbx, %r13
100011d4d:	4c 89 ff	movq	%r15, %rdi
100011d50:	e8 5d d7 01 00	callq	0x10002f4b2 ## symbol stub for: _malloc
100011d55:	48 89 c3	movq	%rax, %rbx
100011d58:	4c 89 ff	movq	%r15, %rdi
100011d5b:	e8 52 d7 01 00	callq	0x10002f4b2 ## symbol stub for: _malloc
100011d60:	49 89 c7	movq	%rax, %r15
100011d63:	4c 89 ef	movq	%r13, %rdi
100011d66:	48 89 de	movq	%rbx, %rsi
100011d69:	48 89 c2	movq	%rax, %rdx
100011d6c:	e8 65 d1 01 00	callq	0x10002eed6 ## symbol stub for: _CFDictionaryGetKeysAndValues
100011d71:	45 31 ed	xorl	%r13d, %r13d
100011d74:	4a 8b 34 eb	movq	(%rbx,%r13,8), %rsi
100011d78:	4b 8b 14 ef	movq	(%r15,%r13,8), %rdx
100011d7c:	4c 89 e7	movq	%r12, %rdi
100011d7f:	e8 6a d1 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100011d84:	49 ff c5	incq	%r13
100011d87:	4d 39 ee	cmpq	%r13, %r14
100011d8a:	75 e8	jne	0x100011d74
100011d8c:	48 89 df	movq	%rbx, %rdi
100011d8f:	e8 40 d6 01 00	callq	0x10002f3d4 ## symbol stub for: _free
100011d94:	4c 89 ff	movq	%r15, %rdi
100011d97:	e8 38 d6 01 00	callq	0x10002f3d4 ## symbol stub for: _free
100011d9c:	eb 20	jmp	0x100011dbe
100011d9e:	45 31 f6	xorl	%r14d, %r14d
100011da1:	41 0f be c6	movsbl	%r14b, %eax
100011da5:	48 81 c4 88 00 00 00	addq	$136, %rsp
100011dac:	5b	popq	%rbx
100011dad:	41 5c	popq	%r12
100011daf:	41 5d	popq	%r13
100011db1:	41 5e	popq	%r14
100011db3:	41 5f	popq	%r15
100011db5:	5d	popq	%rbp
100011db6:	c3	retq
100011db7:	48 85 db	testq	%rbx, %rbx
100011dba:	4c 0f 45 e3	cmovneq	%rbx, %r12
100011dbe:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011dc2:	45 31 f6	xorl	%r14d, %r14d
100011dc5:	31 f6	xorl	%esi, %esi
100011dc7:	4c 89 e2	movq	%r12, %rdx
100011dca:	e8 e9 d3 01 00	callq	0x10002f1b8 ## symbol stub for: _CGPDFContextCreate
100011dcf:	48 85 c0	testq	%rax, %rax
100011dd2:	74 cd	je	0x100011da1
100011dd4:	49 89 c7	movq	%rax, %r15
100011dd7:	48 8b 7d c8	movq	-56(%rbp), %rdi
100011ddb:	48 85 ff	testq	%rdi, %rdi
100011dde:	74 10	je	0x100011df0
100011de0:	48 8b 35 19 ef 03 00	movq	257817(%rip), %rsi ## Objc selector ref: applyToContext:
100011de7:	4c 89 fa	movq	%r15, %rdx
100011dea:	ff 15 30 ae 02 00	callq	*175664(%rip) ## Objc message: -[%rdi applyToContext:]
100011df0:	4c 8b 6d b0	movq	-80(%rbp), %r13
100011df4:	4d 85 ed	testq	%r13, %r13
100011df7:	0f 8e 80 00 00 00	jle	0x100011e7d
100011dfd:	49 f7 dd	negq	%r13
100011e00:	bb 01 00 00 00	movl	$1, %ebx
100011e05:	45 31 f6	xorl	%r14d, %r14d
100011e08:	48 8b 7d a0	movq	-96(%rbp), %rdi
100011e0c:	48 89 de	movq	%rbx, %rsi
100011e0f:	e8 da d3 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
100011e14:	48 85 c0	testq	%rax, %rax
100011e17:	74 52	je	0x100011e6b
100011e19:	49 89 c4	movq	%rax, %r12
100011e1c:	48 8d bd 50 ff ff ff	leaq	-176(%rbp), %rdi
100011e23:	48 89 c6	movq	%rax, %rsi
100011e26:	31 d2	xorl	%edx, %edx
100011e28:	e8 d9 d3 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
100011e2d:	0f 10 85 50 ff ff ff	movups	-176(%rbp), %xmm0
100011e34:	0f 10 8d 60 ff ff ff	movups	-160(%rbp), %xmm1
100011e3b:	0f 29 4d 80	movaps	%xmm1, -128(%rbp)
100011e3f:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
100011e46:	4c 89 ff	movq	%r15, %rdi
100011e49:	48 8d b5 70 ff ff ff	leaq	-144(%rbp), %rsi
100011e50:	e8 13 d2 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
100011e55:	4c 89 ff	movq	%r15, %rdi
100011e58:	4c 89 e6	movq	%r12, %rsi
100011e5b:	e8 26 d2 01 00	callq	0x10002f086 ## symbol stub for: _CGContextDrawPDFPage
100011e60:	4c 89 ff	movq	%r15, %rdi
100011e63:	e8 2a d2 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
100011e68:	41 b6 01	movb	$1, %r14b
100011e6b:	4a 8d 04 2b	leaq	(%rbx,%r13), %rax
100011e6f:	48 ff c0	incq	%rax
100011e72:	48 ff c3	incq	%rbx
100011e75:	48 83 f8 01	cmpq	$1, %rax
100011e79:	75 8d	jne	0x100011e08
100011e7b:	eb 03	jmp	0x100011e80
100011e7d:	45 31 f6	xorl	%r14d, %r14d
100011e80:	48 8b 7d c8	movq	-56(%rbp), %rdi
100011e84:	48 85 ff	testq	%rdi, %rdi
100011e87:	74 10	je	0x100011e99
100011e89:	48 8b 35 50 fc 03 00	movq	261200(%rip), %rsi ## Objc selector ref: removeFromContext:
100011e90:	4c 89 fa	movq	%r15, %rdx
100011e93:	ff 15 87 ad 02 00	callq	*175495(%rip) ## Objc message: -[%rdi removeFromContext:]
100011e99:	4c 89 ff	movq	%r15, %rdi
100011e9c:	e8 11 d3 01 00	callq	0x10002f1b2 ## symbol stub for: _CGPDFContextClose
100011ea1:	4c 89 ff	movq	%r15, %rdi
100011ea4:	e8 0d d2 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
100011ea9:	48 8b 7d d0	movq	-48(%rbp), %rdi
100011ead:	e8 34 d2 01 00	callq	0x10002f0e6 ## symbol stub for: _CGDataConsumerRelease
100011eb2:	41 80 fe 01	cmpb	$1, %r14b
100011eb6:	48 8b 55 b8	movq	-72(%rbp), %rdx
100011eba:	0f 85 e1 fe ff ff	jne	0x100011da1
100011ec0:	48 8b 35 91 06 04 00	movq	263825(%rip), %rsi ## Objc selector ref: writeToURL:atomically:
100011ec7:	48 8b 7d c0	movq	-64(%rbp), %rdi
100011ecb:	b9 01 00 00 00	movl	$1, %ecx
100011ed0:	ff 15 4a ad 02 00	callq	*175434(%rip) ## Objc message: -[%rdi writeToURL:atomically:]
100011ed6:	41 89 c6	movl	%eax, %r14d
100011ed9:	e9 c3 fe ff ff	jmp	0x100011da1
100011ede:	55	pushq	%rbp
100011edf:	48 89 e5	movq	%rsp, %rbp
100011ee2:	53	pushq	%rbx
100011ee3:	50	pushq	%rax
100011ee4:	48 89 d3	movq	%rdx, %rbx
100011ee7:	e8 9c cf 01 00	callq	0x10002ee88 ## symbol stub for: _CFDataAppendBytes
100011eec:	48 89 d8	movq	%rbx, %rax
100011eef:	48 83 c4 08	addq	$8, %rsp
100011ef3:	5b	popq	%rbx
100011ef4:	5d	popq	%rbp
100011ef5:	c3	retq
100011ef6:	55	pushq	%rbp
100011ef7:	48 89 e5	movq	%rsp, %rbp
100011efa:	5d	popq	%rbp
100011efb:	e9 12 d0 01 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100011f00:	55	pushq	%rbp
100011f01:	48 89 e5	movq	%rsp, %rbp
100011f04:	48 8b 05 4d 0e 04 00	movq	265805(%rip), %rax
100011f0b:	48 8b 0c 07	movq	(%rdi,%rax), %rcx
100011f0f:	48 8b 05 52 0e 04 00	movq	265810(%rip), %rax
100011f16:	4c 8b 04 07	movq	(%rdi,%rax), %r8
100011f1a:	48 8b 35 27 06 04 00	movq	263719(%rip), %rsi ## Objc selector ref: writePDFToURL:doc:filter:encryptOptions:
100011f21:	45 31 c9	xorl	%r9d, %r9d
100011f24:	5d	popq	%rbp
100011f25:	ff 25 f5 ac 02 00	jmpq	*175349(%rip) ## Objc message: -[%rdi writePDFToURL:doc:filter:encryptOptions:]
100011f2b:	55	pushq	%rbp
100011f2c:	48 89 e5	movq	%rsp, %rbp
100011f2f:	48 8d 05 1a 0f 04 00	leaq	266010(%rip), %rax
100011f36:	48 8b 00	movq	(%rax), %rax
100011f39:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100011f3d:	48 8b 35 7c 03 04 00	movq	263036(%rip), %rsi ## Objc selector ref: state
100011f44:	ff 15 d6 ac 02 00	callq	*175318(%rip) ## Objc message: -[%rdi state]
100011f4a:	0f be c0	movsbl	%al, %eax
100011f4d:	5d	popq	%rbp
100011f4e:	c3	retq
100011f4f:	55	pushq	%rbp
100011f50:	48 89 e5	movq	%rsp, %rbp
100011f53:	b8 01 00 00 00	movl	$1, %eax
100011f58:	5d	popq	%rbp
100011f59:	c3	retq
100011f5a:	55	pushq	%rbp
100011f5b:	48 89 e5	movq	%rsp, %rbp
100011f5e:	48 8b 05 f3 0d 04 00	movq	265715(%rip), %rax
100011f65:	48 8b 04 07	movq	(%rdi,%rax), %rax
100011f69:	5d	popq	%rbp
100011f6a:	c3	retq
100011f6b:	55	pushq	%rbp
100011f6c:	48 89 e5	movq	%rsp, %rbp
100011f6f:	48 8b 05 fa 0d 04 00	movq	265722(%rip), %rax
100011f76:	48 8b 04 07	movq	(%rdi,%rax), %rax
100011f7a:	5d	popq	%rbp
100011f7b:	c3	retq
100011f7c:	55	pushq	%rbp
100011f7d:	48 89 e5	movq	%rsp, %rbp
100011f80:	48 8b 05 e9 0d 04 00	movq	265705(%rip), %rax
100011f87:	48 89 14 07	movq	%rdx, (%rdi,%rax)
100011f8b:	5d	popq	%rbp
100011f8c:	c3	retq
100011f8d:	55	pushq	%rbp
100011f8e:	48 89 e5	movq	%rsp, %rbp
100011f91:	48 8b 05 e0 0d 04 00	movq	265696(%rip), %rax
100011f98:	48 8b 04 07	movq	(%rdi,%rax), %rax
100011f9c:	5d	popq	%rbp
100011f9d:	c3	retq
100011f9e:	55	pushq	%rbp
100011f9f:	48 89 e5	movq	%rsp, %rbp
100011fa2:	41 57	pushq	%r15
100011fa4:	41 56	pushq	%r14
100011fa6:	41 55	pushq	%r13
100011fa8:	41 54	pushq	%r12
100011faa:	53	pushq	%rbx
100011fab:	50	pushq	%rax
100011fac:	49 89 d7	movq	%rdx, %r15
100011faf:	48 89 fb	movq	%rdi, %rbx
100011fb2:	48 89 d7	movq	%rdx, %rdi
100011fb5:	e8 46 d2 01 00	callq	0x10002f200 ## symbol stub for: _CGPDFDocumentRetain
100011fba:	4c 8b 25 97 0d 04 00	movq	265623(%rip), %r12
100011fc1:	4e 8b 34 23	movq	(%rbx,%r12), %r14
100011fc5:	4d 85 f6	testq	%r14, %r14
100011fc8:	74 08	je	0x100011fd2
100011fca:	4c 89 f7	movq	%r14, %rdi
100011fcd:	e8 28 d2 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
100011fd2:	4e 89 3c 23	movq	%r15, (%rbx,%r12)
100011fd6:	4c 8b 2d 9b 0d 04 00	movq	265627(%rip), %r13
100011fdd:	31 c0	xorl	%eax, %eax
100011fdf:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
100011fe3:	4c 8b 25 86 0d 04 00	movq	265606(%rip), %r12
100011fea:	4a 89 04 23	movq	%rax, (%rbx,%r12)
100011fee:	4d 85 ff	testq	%r15, %r15
100011ff1:	74 19	je	0x10001200c
100011ff3:	4c 89 ff	movq	%r15, %rdi
100011ff6:	e8 ed d1 01 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
100011ffb:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
100011fff:	48 85 c0	testq	%rax, %rax
100012002:	7e 08	jle	0x10001200c
100012004:	4a c7 04 23 01 00 00 00	movq	$1, (%rbx,%r12)
10001200c:	4d 85 f6	testq	%r14, %r14
10001200f:	74 1e	je	0x10001202f
100012011:	48 8b 35 40 04 04 00	movq	263232(%rip), %rsi ## Objc selector ref: updatePreview
100012018:	48 89 df	movq	%rbx, %rdi
10001201b:	48 83 c4 08	addq	$8, %rsp
10001201f:	5b	popq	%rbx
100012020:	41 5c	popq	%r12
100012022:	41 5d	popq	%r13
100012024:	41 5e	popq	%r14
100012026:	41 5f	popq	%r15
100012028:	5d	popq	%rbp
100012029:	ff 25 f1 ab 02 00	jmpq	*175089(%rip) ## Objc message: -[%rdi updatePreview]
10001202f:	48 83 c4 08	addq	$8, %rsp
100012033:	5b	popq	%rbx
100012034:	41 5c	popq	%r12
100012036:	41 5d	popq	%r13
100012038:	41 5e	popq	%r14
10001203a:	41 5f	popq	%r15
10001203c:	5d	popq	%rbp
10001203d:	c3	retq
10001203e:	55	pushq	%rbp
10001203f:	48 89 e5	movq	%rsp, %rbp
100012042:	41 57	pushq	%r15
100012044:	41 56	pushq	%r14
100012046:	53	pushq	%rbx
100012047:	50	pushq	%rax
100012048:	49 89 d6	movq	%rdx, %r14
10001204b:	48 89 fb	movq	%rdi, %rbx
10001204e:	4c 8b 3d 0b 0d 04 00	movq	265483(%rip), %r15
100012055:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
100012059:	48 85 ff	testq	%rdi, %rdi
10001205c:	74 05	je	0x100012063
10001205e:	e8 af ce 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100012063:	4e 89 34 3b	movq	%r14, (%rbx,%r15)
100012067:	48 83 c4 08	addq	$8, %rsp
10001206b:	5b	popq	%rbx
10001206c:	41 5e	popq	%r14
10001206e:	41 5f	popq	%r15
100012070:	5d	popq	%rbp
100012071:	c3	retq
100012072:	55	pushq	%rbp
100012073:	48 89 e5	movq	%rsp, %rbp
100012076:	48 8b 05 e3 0c 04 00	movq	265443(%rip), %rax
10001207d:	48 8b 04 07	movq	(%rdi,%rax), %rax
100012081:	5d	popq	%rbp
100012082:	c3	retq
100012083:	55	pushq	%rbp
100012084:	48 89 e5	movq	%rsp, %rbp
100012087:	41 57	pushq	%r15
100012089:	41 56	pushq	%r14
10001208b:	41 55	pushq	%r13
10001208d:	41 54	pushq	%r12
10001208f:	53	pushq	%rbx
100012090:	48 83 ec 28	subq	$40, %rsp
100012094:	48 89 fb	movq	%rdi, %rbx
100012097:	48 8b 35 b2 fa 03 00	movq	260786(%rip), %rsi ## Objc selector ref: retainCurrentFilter
10001209e:	4c 8b 3d 7b ab 02 00	movq	174971(%rip), %r15 ## Objc message: -[%rdi retainCurrentFilter]
1000120a5:	41 ff d7	callq	*%r15
1000120a8:	49 89 c4	movq	%rax, %r12
1000120ab:	48 8b 35 6e f9 03 00	movq	260462(%rip), %rsi ## Objc selector ref: properties
1000120b2:	48 89 c7	movq	%rax, %rdi
1000120b5:	41 ff d7	callq	*%r15
1000120b8:	48 85 c0	testq	%rax, %rax
1000120bb:	0f 84 24 02 00 00	je	0x1000122e5
1000120c1:	49 89 c6	movq	%rax, %r14
1000120c4:	48 89 5d d0	movq	%rbx, -48(%rbp)
1000120c8:	4c 8b 3d 41 aa 02 00	movq	174657(%rip), %r15 ## literal pool symbol address: _kQFilterData
1000120cf:	49 8b 17	movq	(%r15), %rdx
1000120d2:	4c 8b 2d 9f f7 03 00	movq	259999(%rip), %r13 ## Objc selector ref: objectForKey:
1000120d9:	48 89 c7	movq	%rax, %rdi
1000120dc:	4c 89 ee	movq	%r13, %rsi
1000120df:	ff 15 3b ab 02 00	callq	*174907(%rip) ## Objc message: -[%rdi objectForKey:]
1000120e5:	48 8b 0d 8c aa 02 00	movq	174732(%rip), %rcx ## literal pool symbol address: _kQFilterPDFX3Settings
1000120ec:	48 8b 11	movq	(%rcx), %rdx
1000120ef:	48 89 c7	movq	%rax, %rdi
1000120f2:	4c 89 ee	movq	%r13, %rsi
1000120f5:	ff 15 25 ab 02 00	callq	*174885(%rip) ## Objc message: -[%rdi objectForKey:]
1000120fb:	48 89 c3	movq	%rax, %rbx
1000120fe:	49 8b 17	movq	(%r15), %rdx
100012101:	4c 8b 3d 18 ab 02 00	movq	174872(%rip), %r15 ## Objc message: -[%rdi objectForKey:]
100012108:	4c 89 f7	movq	%r14, %rdi
10001210b:	4c 89 ee	movq	%r13, %rsi
10001210e:	41 ff d7	callq	*%r15
100012111:	48 8b 0d 70 aa 02 00	movq	174704(%rip), %rcx ## literal pool symbol address: _kQFilterProfileData
100012118:	48 8b 11	movq	(%rcx), %rdx
10001211b:	48 89 c7	movq	%rax, %rdi
10001211e:	4c 89 ee	movq	%r13, %rsi
100012121:	41 ff d7	callq	*%r15
100012124:	48 89 5d b8	movq	%rbx, -72(%rbp)
100012128:	48 85 db	testq	%rbx, %rbx
10001212b:	0f 84 b8 01 00 00	je	0x1000122e9
100012131:	49 89 c5	movq	%rax, %r13
100012134:	4c 89 65 c0	movq	%r12, -64(%rbp)
100012138:	48 8b 1d 71 04 04 00	movq	263281(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
10001213f:	48 8b 3d aa 04 04 00	movq	263338(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100012146:	4c 8b 35 bb f6 03 00	movq	259771(%rip), %r14 ## Objc selector ref: numberWithBool:
10001214d:	4c 89 f6	movq	%r14, %rsi
100012150:	ba 01 00 00 00	movl	$1, %edx
100012155:	41 ff d7	callq	*%r15
100012158:	49 89 c4	movq	%rax, %r12
10001215b:	48 8b 3d 8e 04 04 00	movq	263310(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100012162:	4c 89 f6	movq	%r14, %rsi
100012165:	ba 01 00 00 00	movl	$1, %edx
10001216a:	41 ff d7	callq	*%r15
10001216d:	4c 8b 35 c4 eb 03 00	movq	256964(%rip), %r14 ## Objc selector ref: arrayWithObjects:
100012174:	48 89 df	movq	%rbx, %rdi
100012177:	4c 89 f6	movq	%r14, %rsi
10001217a:	4c 89 e2	movq	%r12, %rdx
10001217d:	48 89 c1	movq	%rax, %rcx
100012180:	45 31 c0	xorl	%r8d, %r8d
100012183:	31 c0	xorl	%eax, %eax
100012185:	41 ff d7	callq	*%r15
100012188:	48 89 c3	movq	%rax, %rbx
10001218b:	48 8b 3d 1e 04 04 00	movq	263198(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100012192:	48 8b 05 47 a9 02 00	movq	174407(%rip), %rax ## literal pool symbol address: _kQFilterAppLicationDomain
100012199:	48 8b 10	movq	(%rax), %rdx
10001219c:	48 8b 05 dd a9 02 00	movq	174557(%rip), %rax ## literal pool symbol address: _kQFilterPrintingDomain
1000121a3:	48 8b 08	movq	(%rax), %rcx
1000121a6:	4c 89 f6	movq	%r14, %rsi
1000121a9:	45 31 c0	xorl	%r8d, %r8d
1000121ac:	31 c0	xorl	%eax, %eax
1000121ae:	41 ff d7	callq	*%r15
1000121b1:	48 8b 3d 60 04 04 00	movq	263264(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
1000121b8:	4c 8b 25 e9 ee 03 00	movq	257769(%rip), %r12 ## Objc selector ref: dictionaryWithObjects:forKeys:
1000121bf:	4c 89 e6	movq	%r12, %rsi
1000121c2:	48 89 da	movq	%rbx, %rdx
1000121c5:	48 89 c1	movq	%rax, %rcx
1000121c8:	41 ff d7	callq	*%r15
1000121cb:	48 89 45 c8	movq	%rax, -56(%rbp)
1000121cf:	48 8b 3d da 03 04 00	movq	263130(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
1000121d6:	4c 89 f6	movq	%r14, %rsi
1000121d9:	48 8b 55 b8	movq	-72(%rbp), %rdx
1000121dd:	4c 89 e9	movq	%r13, %rcx
1000121e0:	45 31 c0	xorl	%r8d, %r8d
1000121e3:	31 c0	xorl	%eax, %eax
1000121e5:	41 ff d7	callq	*%r15
1000121e8:	48 89 c3	movq	%rax, %rbx
1000121eb:	48 8b 3d be 03 04 00	movq	263102(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
1000121f2:	48 8b 05 7f a9 02 00	movq	174463(%rip), %rax ## literal pool symbol address: _kQFilterPDFX3Settings
1000121f9:	48 8b 10	movq	(%rax), %rdx
1000121fc:	4d 85 ed	testq	%r13, %r13
1000121ff:	74 0a	je	0x10001220b
100012201:	48 8b 05 80 a9 02 00	movq	174464(%rip), %rax ## literal pool symbol address: _kQFilterProfileData
100012208:	4c 8b 28	movq	(%rax), %r13
10001220b:	4c 8b 35 26 eb 03 00	movq	256806(%rip), %r14 ## Objc selector ref: arrayWithObjects:
100012212:	4c 89 f6	movq	%r14, %rsi
100012215:	4c 89 e9	movq	%r13, %rcx
100012218:	45 31 c0	xorl	%r8d, %r8d
10001221b:	31 c0	xorl	%eax, %eax
10001221d:	41 ff d7	callq	*%r15
100012220:	48 8b 3d f1 03 04 00	movq	263153(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100012227:	4c 89 e6	movq	%r12, %rsi
10001222a:	48 89 da	movq	%rbx, %rdx
10001222d:	48 89 c1	movq	%rax, %rcx
100012230:	41 ff d7	callq	*%r15
100012233:	49 89 c4	movq	%rax, %r12
100012236:	48 8b 1d 73 03 04 00	movq	263027(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
10001223d:	48 8b 3d ac 03 04 00	movq	263084(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100012244:	48 8b 35 d5 f5 03 00	movq	259541(%rip), %rsi ## Objc selector ref: numberWithInt:
10001224b:	ba 01 00 00 00	movl	$1, %edx
100012250:	41 ff d7	callq	*%r15
100012253:	45 31 ed	xorl	%r13d, %r13d
100012256:	4c 89 2c 24	movq	%r13, (%rsp)
10001225a:	48 8d 15 3f b8 02 00	leaq	178239(%rip), %rdx ## Objc cfstring ref: @"PDF/X filter"
100012261:	48 89 df	movq	%rbx, %rdi
100012264:	4c 89 f6	movq	%r14, %rsi
100012267:	48 89 c1	movq	%rax, %rcx
10001226a:	4c 8b 45 c8	movq	-56(%rbp), %r8
10001226e:	4d 89 e1	movq	%r12, %r9
100012271:	31 c0	xorl	%eax, %eax
100012273:	41 ff d7	callq	*%r15
100012276:	48 89 c3	movq	%rax, %rbx
100012279:	48 8b 3d 30 03 04 00	movq	262960(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100012280:	48 8b 05 e9 a8 02 00	movq	174313(%rip), %rax ## literal pool symbol address: _kQFilterName
100012287:	48 8b 10	movq	(%rax), %rdx
10001228a:	48 8b 05 17 a9 02 00	movq	174359(%rip), %rax ## literal pool symbol address: _kQFilterType
100012291:	48 8b 08	movq	(%rax), %rcx
100012294:	48 8b 05 9d a8 02 00	movq	174237(%rip), %rax ## literal pool symbol address: _kQFilterDomains
10001229b:	4c 8b 00	movq	(%rax), %r8
10001229e:	48 8b 05 6b a8 02 00	movq	174187(%rip), %rax ## literal pool symbol address: _kQFilterData
1000122a5:	4c 8b 08	movq	(%rax), %r9
1000122a8:	4c 89 2c 24	movq	%r13, (%rsp)
1000122ac:	4c 89 f6	movq	%r14, %rsi
1000122af:	31 c0	xorl	%eax, %eax
1000122b1:	41 ff d7	callq	*%r15
1000122b4:	48 8b 3d 5d 03 04 00	movq	263005(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
1000122bb:	48 8b 35 e6 ed 03 00	movq	257510(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
1000122c2:	48 89 da	movq	%rbx, %rdx
1000122c5:	48 89 c1	movq	%rax, %rcx
1000122c8:	41 ff d7	callq	*%r15
1000122cb:	48 8b 3d de 03 04 00	movq	263134(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_QuartzFilter
1000122d2:	48 8b 35 5f f7 03 00	movq	259935(%rip), %rsi ## Objc selector ref: quartzFilterWithProperties:
1000122d9:	48 89 c2	movq	%rax, %rdx
1000122dc:	41 ff d7	callq	*%r15
1000122df:	4c 8b 65 c0	movq	-64(%rbp), %r12
1000122e3:	eb 06	jmp	0x1000122eb
1000122e5:	31 c0	xorl	%eax, %eax
1000122e7:	eb 06	jmp	0x1000122ef
1000122e9:	31 c0	xorl	%eax, %eax
1000122eb:	48 8b 5d d0	movq	-48(%rbp), %rbx
1000122ef:	48 8b 0d 72 0a 04 00	movq	264818(%rip), %rcx
1000122f6:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000122fa:	48 8b 05 57 0a 04 00	movq	264791(%rip), %rax
100012301:	48 8b 14 03	movq	(%rbx,%rax), %rdx
100012305:	48 8b 35 ec e9 03 00	movq	256492(%rip), %rsi ## Objc selector ref: applyFilterToPDFDoc:filter:
10001230c:	48 89 df	movq	%rbx, %rdi
10001230f:	4c 89 e1	movq	%r12, %rcx
100012312:	41 ff d7	callq	*%r15
100012315:	49 89 c6	movq	%rax, %r14
100012318:	48 8b 35 e9 fc 03 00	movq	261353(%rip), %rsi ## Objc selector ref: setPDFDocument:
10001231f:	48 89 df	movq	%rbx, %rdi
100012322:	48 89 c2	movq	%rax, %rdx
100012325:	41 ff d7	callq	*%r15
100012328:	4c 89 f7	movq	%r14, %rdi
10001232b:	e8 ca ce 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
100012330:	4c 89 e7	movq	%r12, %rdi
100012333:	48 83 c4 28	addq	$40, %rsp
100012337:	5b	popq	%rbx
100012338:	41 5c	popq	%r12
10001233a:	41 5d	popq	%r13
10001233c:	41 5e	popq	%r14
10001233e:	41 5f	popq	%r15
100012340:	5d	popq	%rbp
100012341:	ff 25 11 a9 02 00	jmpq	*174353(%rip) ## literal pool symbol address: _objc_release
100012347:	55	pushq	%rbp
100012348:	48 89 e5	movq	%rsp, %rbp
10001234b:	b8 01 00 00 00	movl	$1, %eax
100012350:	5d	popq	%rbp
100012351:	c3	retq
100012352:	55	pushq	%rbp
100012353:	48 89 e5	movq	%rsp, %rbp
100012356:	41 57	pushq	%r15
100012358:	41 56	pushq	%r14
10001235a:	41 55	pushq	%r13
10001235c:	41 54	pushq	%r12
10001235e:	53	pushq	%rbx
10001235f:	48 83 ec 78	subq	$120, %rsp
100012363:	49 89 cc	movq	%rcx, %r12
100012366:	49 89 d6	movq	%rdx, %r14
100012369:	48 89 fb	movq	%rdi, %rbx
10001236c:	48 85 c9	testq	%rcx, %rcx
10001236f:	75 12	jne	0x100012383
100012371:	48 8b 05 40 a6 02 00	movq	173632(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
100012378:	48 8b 38	movq	(%rax), %rdi
10001237b:	e8 76 cc 01 00	callq	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
100012380:	49 89 c4	movq	%rax, %r12
100012383:	48 8b 05 ce 09 04 00	movq	264654(%rip), %rax
10001238a:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001238e:	4c 89 f6	movq	%r14, %rsi
100012391:	e8 58 ce 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
100012396:	48 85 c0	testq	%rax, %rax
100012399:	0f 84 69 01 00 00	je	0x100012508
10001239f:	48 89 c3	movq	%rax, %rbx
1000123a2:	4c 8d 75 80	leaq	-128(%rbp), %r14
1000123a6:	4c 89 f7	movq	%r14, %rdi
1000123a9:	48 89 c6	movq	%rax, %rsi
1000123ac:	ba 01 00 00 00	movl	$1, %edx
1000123b1:	e8 50 ce 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
1000123b6:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
1000123bc:	f2 48 0f 2c c0	cvttsd2si	%xmm0, %rax
1000123c1:	f2 0f 10 0d 67 6d 02 00	movsd	159079(%rip), %xmm1
1000123c9:	f2 0f 5c c1	subsd	%xmm1, %xmm0
1000123cd:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
1000123d2:	f2 41 0f 10 46 18	movsd	24(%r14), %xmm0
1000123d8:	48 89 5d a8	movq	%rbx, -88(%rbp)
1000123dc:	49 89 c6	movq	%rax, %r14
1000123df:	49 c1 fe 3f	sarq	$63, %r14
1000123e3:	f2 48 0f 2c d0	cvttsd2si	%xmm0, %rdx
1000123e8:	49 21 ce	andq	%rcx, %r14
1000123eb:	f2 0f 5c c1	subsd	%xmm1, %xmm0
1000123ef:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
1000123f4:	49 09 c6	orq	%rax, %r14
1000123f7:	49 89 d7	movq	%rdx, %r15
1000123fa:	49 c1 ff 3f	sarq	$63, %r15
1000123fe:	49 21 cf	andq	%rcx, %r15
100012401:	49 09 d7	orq	%rdx, %r15
100012404:	4c 89 e7	movq	%r12, %rdi
100012407:	e8 0e cc 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
10001240c:	48 83 f8 03	cmpq	$3, %rax
100012410:	bb 04 00 00 00	movl	$4, %ebx
100012415:	48 0f 45 d8	cmovneq	%rax, %rbx
100012419:	49 0f af de	imulq	%r14, %rbx
10001241d:	48 89 de	movq	%rbx, %rsi
100012420:	49 0f af f7	imulq	%r15, %rsi
100012424:	bf 01 00 00 00	movl	$1, %edi
100012429:	e8 8e cf 01 00	callq	0x10002f3bc ## symbol stub for: _calloc
10001242e:	c7 04 24 05 00 00 00	movl	$5, (%rsp)
100012435:	b9 08 00 00 00	movl	$8, %ecx
10001243a:	48 89 45 a0	movq	%rax, -96(%rbp)
10001243e:	48 89 c7	movq	%rax, %rdi
100012441:	4c 89 f6	movq	%r14, %rsi
100012444:	4c 89 fa	movq	%r15, %rdx
100012447:	49 89 d8	movq	%rbx, %r8
10001244a:	4d 89 e1	movq	%r12, %r9
10001244d:	e8 3e cb 01 00	callq	0x10002ef90 ## symbol stub for: _CGBitmapContextCreate
100012452:	48 85 c0	testq	%rax, %rax
100012455:	0f 84 ad 00 00 00	je	0x100012508
10001245b:	49 89 c5	movq	%rax, %r13
10001245e:	48 89 c7	movq	%rax, %rdi
100012461:	e8 5c cc 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100012466:	4c 89 ef	movq	%r13, %rdi
100012469:	be 01 00 00 00	movl	$1, %esi
10001246e:	e8 55 cc 01 00	callq	0x10002f0c8 ## symbol stub for: _CGContextSetAllowsAntialiasing
100012473:	66 49 0f 6e d6	movq	%r14, %xmm2
100012478:	66 0f 6f 05 90 61 02 00	movdqa	156048(%rip), %xmm0
100012480:	66 0f 62 d0	punpckldq	%xmm0, %xmm2
100012484:	66 0f 28 0d 94 61 02 00	movapd	156052(%rip), %xmm1
10001248c:	66 0f 5c d1	subpd	%xmm1, %xmm2
100012490:	66 0f 7c d2	haddpd	%xmm2, %xmm2
100012494:	66 0f 29 55 b0	movapd	%xmm2, -80(%rbp)
100012499:	66 49 0f 6e d7	movq	%r15, %xmm2
10001249e:	66 0f 62 d0	punpckldq	%xmm0, %xmm2
1000124a2:	66 0f 5c d1	subpd	%xmm1, %xmm2
1000124a6:	66 0f 7c d2	haddpd	%xmm2, %xmm2
1000124aa:	66 0f 29 55 c0	movapd	%xmm2, -64(%rbp)
1000124af:	66 0f ef c0	pxor	%xmm0, %xmm0
1000124b3:	66 0f 7f 45 80	movdqa	%xmm0, -128(%rbp)
1000124b8:	4c 8b 75 a8	movq	-88(%rbp), %r14
1000124bc:	4c 89 f7	movq	%r14, %rdi
1000124bf:	e8 48 cd 01 00	callq	0x10002f20c ## symbol stub for: _CGPDFPageGetRotationAngle
1000124c4:	48 98	cltq
1000124c6:	48 69 c8 b7 60 0b b6	imulq	$-1240768329, %rax, %rcx
1000124cd:	48 c1 e9 20	shrq	$32, %rcx
1000124d1:	01 c1	addl	%eax, %ecx
1000124d3:	89 ca	movl	%ecx, %edx
1000124d5:	c1 ea 1f	shrl	$31, %edx
1000124d8:	c1 f9 08	sarl	$8, %ecx
1000124db:	01 d1	addl	%edx, %ecx
1000124dd:	69 c9 68 01 00 00	imull	$360, %ecx, %ecx
1000124e3:	29 c8	subl	%ecx, %eax
1000124e5:	41 bc 68 01 00 00	movl	$360, %r12d
1000124eb:	41 01 c4	addl	%eax, %r12d
1000124ee:	85 c0	testl	%eax, %eax
1000124f0:	44 0f 49 e0	cmovnsl	%eax, %r12d
1000124f4:	41 81 fc b3 00 00 00	cmpl	$179, %r12d
1000124fb:	7f 12	jg	0x10001250f
1000124fd:	45 85 e4	testl	%r12d, %r12d
100012500:	74 2c	je	0x10001252e
100012502:	41 83 fc 5a	cmpl	$90, %r12d
100012506:	eb 17	jmp	0x10001251f
100012508:	31 db	xorl	%ebx, %ebx
10001250a:	e9 e5 00 00 00	jmp	0x1000125f4
10001250f:	41 81 fc b4 00 00 00	cmpl	$180, %r12d
100012516:	74 16	je	0x10001252e
100012518:	41 81 fc 0e 01 00 00	cmpl	$270, %r12d
10001251f:	0f 28 4d b0	movaps	-80(%rbp), %xmm1
100012523:	75 13	jne	0x100012538
100012525:	0f 28 c1	movaps	%xmm1, %xmm0
100012528:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10001252c:	eb 11	jmp	0x10001253f
10001252e:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
100012532:	0f 28 4d b0	movaps	-80(%rbp), %xmm1
100012536:	eb 07	jmp	0x10001253f
100012538:	45 31 e4	xorl	%r12d, %r12d
10001253b:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10001253f:	48 8d 5d 80	leaq	-128(%rbp), %rbx
100012543:	f2 0f 11 4b 10	movsd	%xmm1, 16(%rbx)
100012548:	f2 0f 11 43 18	movsd	%xmm0, 24(%rbx)
10001254d:	4c 89 ef	movq	%r13, %rdi
100012550:	e8 6d cb 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
100012555:	f2 0f 10 05 ab 5a 02 00	movsd	154283(%rip), %xmm0
10001255d:	4c 89 ef	movq	%r13, %rdi
100012560:	0f 28 c8	movaps	%xmm0, %xmm1
100012563:	e8 6c cb 01 00	callq	0x10002f0d4 ## symbol stub for: _CGContextSetGrayFillColor
100012568:	0f 28 03	movaps	(%rbx), %xmm0
10001256b:	0f 28 4b 10	movaps	16(%rbx), %xmm1
10001256f:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100012574:	0f 11 04 24	movups	%xmm0, (%rsp)
100012578:	4c 89 ef	movq	%r13, %rdi
10001257b:	e8 18 cb 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
100012580:	4c 89 ef	movq	%r13, %rdi
100012583:	e8 34 cb 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100012588:	4c 89 ef	movq	%r13, %rdi
10001258b:	48 89 de	movq	%rbx, %rsi
10001258e:	e8 d5 ca 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
100012593:	66 0f 28 03	movapd	(%rbx), %xmm0
100012597:	66 0f 28 4b 10	movapd	16(%rbx), %xmm1
10001259c:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
1000125a2:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
1000125a7:	4c 89 ef	movq	%r13, %rdi
1000125aa:	4c 89 f6	movq	%r14, %rsi
1000125ad:	ba 01 00 00 00	movl	$1, %edx
1000125b2:	44 89 e1	movl	%r12d, %ecx
1000125b5:	41 b8 01 00 00 00	movl	$1, %r8d
1000125bb:	e8 cc ca 01 00	callq	0x10002f08c ## symbol stub for: _CGContextDrawPDFPageInRect2
1000125c0:	4c 89 ef	movq	%r13, %rdi
1000125c3:	e8 ca ca 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
1000125c8:	4c 89 ef	movq	%r13, %rdi
1000125cb:	e8 ce ca 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
1000125d0:	4c 89 ef	movq	%r13, %rdi
1000125d3:	e8 e4 ca 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
1000125d8:	4c 89 ef	movq	%r13, %rdi
1000125db:	e8 b6 c9 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
1000125e0:	48 89 c3	movq	%rax, %rbx
1000125e3:	4c 89 ef	movq	%r13, %rdi
1000125e6:	e8 cb ca 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
1000125eb:	48 8b 7d a0	movq	-96(%rbp), %rdi
1000125ef:	e8 e0 cd 01 00	callq	0x10002f3d4 ## symbol stub for: _free
1000125f4:	48 89 d8	movq	%rbx, %rax
1000125f7:	48 83 c4 78	addq	$120, %rsp
1000125fb:	5b	popq	%rbx
1000125fc:	41 5c	popq	%r12
1000125fe:	41 5d	popq	%r13
100012600:	41 5e	popq	%r14
100012602:	41 5f	popq	%r15
100012604:	5d	popq	%rbp
100012605:	c3	retq
100012606:	55	pushq	%rbp
100012607:	48 89 e5	movq	%rsp, %rbp
10001260a:	41 57	pushq	%r15
10001260c:	41 56	pushq	%r14
10001260e:	41 55	pushq	%r13
100012610:	41 54	pushq	%r12
100012612:	53	pushq	%rbx
100012613:	50	pushq	%rax
100012614:	48 89 cb	movq	%rcx, %rbx
100012617:	49 89 d6	movq	%rdx, %r14
10001261a:	49 89 ff	movq	%rdi, %r15
10001261d:	48 8b 05 4c a3 02 00	movq	172876(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100012624:	48 8b 38	movq	(%rax), %rdi
100012627:	48 8b 15 5a a3 02 00	movq	172890(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
10001262e:	45 31 ed	xorl	%r13d, %r13d
100012631:	31 f6	xorl	%esi, %esi
100012633:	e8 0e c8 01 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
100012638:	48 85 c0	testq	%rax, %rax
10001263b:	74 70	je	0x1000126ad
10001263d:	48 89 45 d0	movq	%rax, -48(%rbp)
100012641:	48 85 db	testq	%rbx, %rbx
100012644:	7e 4b	jle	0x100012691
100012646:	48 f7 db	negq	%rbx
100012649:	41 bd 01 00 00 00	movl	$1, %r13d
10001264f:	4c 89 ff	movq	%r15, %rdi
100012652:	48 8b 35 37 e9 03 00	movq	256311(%rip), %rsi ## Objc selector ref: convertPageToImage:colorSpace:
100012659:	4c 89 ea	movq	%r13, %rdx
10001265c:	4c 89 f1	movq	%r14, %rcx
10001265f:	ff 15 bb a5 02 00	callq	*173499(%rip) ## Objc message: +[QuartzFilter convertPageToImage:colorSpace:]
100012665:	48 85 c0	testq	%rax, %rax
100012668:	74 17	je	0x100012681
10001266a:	49 89 c4	movq	%rax, %r12
10001266d:	48 8b 7d d0	movq	-48(%rbp), %rdi
100012671:	48 89 c6	movq	%rax, %rsi
100012674:	e8 bb c7 01 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
100012679:	4c 89 e7	movq	%r12, %rdi
10001267c:	e8 07 cb 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100012681:	4a 8d 04 2b	leaq	(%rbx,%r13), %rax
100012685:	48 ff c0	incq	%rax
100012688:	49 ff c5	incq	%r13
10001268b:	48 83 f8 01	cmpq	$1, %rax
10001268f:	75 be	jne	0x10001264f
100012691:	4c 8b 6d d0	movq	-48(%rbp), %r13
100012695:	4c 89 ef	movq	%r13, %rdi
100012698:	e8 b5 c7 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10001269d:	48 85 c0	testq	%rax, %rax
1000126a0:	75 0b	jne	0x1000126ad
1000126a2:	4c 89 ef	movq	%r13, %rdi
1000126a5:	e8 68 c8 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000126aa:	45 31 ed	xorl	%r13d, %r13d
1000126ad:	4c 89 e8	movq	%r13, %rax
1000126b0:	48 83 c4 08	addq	$8, %rsp
1000126b4:	5b	popq	%rbx
1000126b5:	41 5c	popq	%r12
1000126b7:	41 5d	popq	%r13
1000126b9:	41 5e	popq	%r14
1000126bb:	41 5f	popq	%r15
1000126bd:	5d	popq	%rbp
1000126be:	c3	retq
1000126bf:	55	pushq	%rbp
1000126c0:	48 89 e5	movq	%rsp, %rbp
1000126c3:	83 fa 03	cmpl	$3, %edx
1000126c6:	74 1b	je	0x1000126e3
1000126c8:	83 fa 02	cmpl	$2, %edx
1000126cb:	74 2a	je	0x1000126f7
1000126cd:	83 fa 01	cmpl	$1, %edx
1000126d0:	75 3a	jne	0x10001270c
1000126d2:	48 8b 05 7f 06 04 00	movq	263807(%rip), %rax
1000126d9:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000126dd:	5d	popq	%rbp
1000126de:	e9 1d cb 01 00	jmp	0x10002f200 ## symbol stub for: _CGPDFDocumentRetain
1000126e3:	48 8b 05 8e 06 04 00	movq	263822(%rip), %rax
1000126ea:	48 8b 0c 07	movq	(%rdi,%rax), %rcx
1000126ee:	48 8b 35 93 e8 03 00	movq	256147(%rip), %rsi ## Objc selector ref: convertPDFDocumentToImageArray:count:
1000126f5:	eb 0c	jmp	0x100012703
1000126f7:	48 8b 35 8a e8 03 00	movq	256138(%rip), %rsi ## Objc selector ref: convertPDFDocumentToImageArray:count:
1000126fe:	b9 01 00 00 00	movl	$1, %ecx
100012703:	31 d2	xorl	%edx, %edx
100012705:	5d	popq	%rbp
100012706:	ff 25 14 a5 02 00	jmpq	*173332(%rip) ## Objc message: -[%rdi convertPDFDocumentToImageArray:count:]
10001270c:	31 c0	xorl	%eax, %eax
10001270e:	5d	popq	%rbp
10001270f:	c3	retq
100012710:	55	pushq	%rbp
100012711:	48 89 e5	movq	%rsp, %rbp
100012714:	41 57	pushq	%r15
100012716:	41 56	pushq	%r14
100012718:	41 55	pushq	%r13
10001271a:	41 54	pushq	%r12
10001271c:	53	pushq	%rbx
10001271d:	50	pushq	%rax
10001271e:	49 89 ce	movq	%rcx, %r14
100012721:	49 89 d7	movq	%rdx, %r15
100012724:	49 89 fc	movq	%rdi, %r12
100012727:	4d 85 c0	testq	%r8, %r8
10001272a:	74 29	je	0x100012755
10001272c:	4c 89 c3	movq	%r8, %rbx
10001272f:	48 8d 35 ea b2 02 00	leaq	176874(%rip), %rsi ## Objc cfstring ref: @"QuartzFilter"
100012736:	4c 89 c7	movq	%r8, %rdi
100012739:	e8 a4 c7 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10001273e:	49 89 c5	movq	%rax, %r13
100012741:	48 8d 35 f8 b2 02 00	leaq	176888(%rip), %rsi ## Objc cfstring ref: @"PDF Encryption"
100012748:	48 89 df	movq	%rbx, %rdi
10001274b:	e8 92 c7 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100012750:	49 89 c1	movq	%rax, %r9
100012753:	eb 06	jmp	0x10001275b
100012755:	45 31 c9	xorl	%r9d, %r9d
100012758:	45 31 ed	xorl	%r13d, %r13d
10001275b:	48 8b 35 e6 fd 03 00	movq	261606(%rip), %rsi ## Objc selector ref: writePDFToURL:doc:filter:encryptOptions:
100012762:	4c 89 e7	movq	%r12, %rdi
100012765:	4c 89 fa	movq	%r15, %rdx
100012768:	4c 89 f1	movq	%r14, %rcx
10001276b:	4d 89 e8	movq	%r13, %r8
10001276e:	48 83 c4 08	addq	$8, %rsp
100012772:	5b	popq	%rbx
100012773:	41 5c	popq	%r12
100012775:	41 5d	popq	%r13
100012777:	41 5e	popq	%r14
100012779:	41 5f	popq	%r15
10001277b:	5d	popq	%rbp
10001277c:	ff 25 9e a4 02 00	jmpq	*173214(%rip) ## Objc message: -[%rdi writePDFToURL:doc:filter:encryptOptions:]
100012782:	55	pushq	%rbp
100012783:	48 89 e5	movq	%rsp, %rbp
100012786:	53	pushq	%rbx
100012787:	48 83 ec 28	subq	$40, %rsp
10001278b:	48 8b 05 c6 05 04 00	movq	263622(%rip), %rax
100012792:	48 8b 04 07	movq	(%rdi,%rax), %rax
100012796:	48 8b 0d d3 05 04 00	movq	263635(%rip), %rcx
10001279d:	48 8b 34 0f	movq	(%rdi,%rcx), %rsi
1000127a1:	48 89 c7	movq	%rax, %rdi
1000127a4:	e8 45 ca 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
1000127a9:	48 85 c0	testq	%rax, %rax
1000127ac:	74 1a	je	0x1000127c8
1000127ae:	48 8d 5d d8	leaq	-40(%rbp), %rbx
1000127b2:	48 89 df	movq	%rbx, %rdi
1000127b5:	48 89 c6	movq	%rax, %rsi
1000127b8:	ba 01 00 00 00	movl	$1, %edx
1000127bd:	e8 44 ca 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
1000127c2:	0f 10 43 10	movups	16(%rbx), %xmm0
1000127c6:	eb 0a	jmp	0x1000127d2
1000127c8:	48 8b 05 49 9f 02 00	movq	171849(%rip), %rax ## literal pool symbol address: _NSZeroSize
1000127cf:	0f 10 00	movups	(%rax), %xmm0
1000127d2:	0f 28 c8	movaps	%xmm0, %xmm1
1000127d5:	66 0f 15 c8	unpckhpd	%xmm0, %xmm1
1000127d9:	48 83 c4 28	addq	$40, %rsp
1000127dd:	5b	popq	%rbx
1000127de:	5d	popq	%rbp
1000127df:	c3	retq
1000127e0:	55	pushq	%rbp
1000127e1:	48 89 e5	movq	%rsp, %rbp
1000127e4:	48 8b 05 ed a3 02 00	movq	173037(%rip), %rax ## literal pool symbol address: _kUTTypePDF
1000127eb:	48 8b 00	movq	(%rax), %rax
1000127ee:	5d	popq	%rbp
1000127ef:	c3	retq
1000127f0:	55	pushq	%rbp
1000127f1:	48 89 e5	movq	%rsp, %rbp
1000127f4:	41 57	pushq	%r15
1000127f6:	41 56	pushq	%r14
1000127f8:	41 54	pushq	%r12
1000127fa:	53	pushq	%rbx
1000127fb:	48 83 ec 20	subq	$32, %rsp
1000127ff:	48 89 fb	movq	%rdi, %rbx
100012802:	4c 8b 3d 5f 05 04 00	movq	263519(%rip), %r15
100012809:	4a 83 3c 3f 00	cmpq	$0, (%rdi,%r15)
10001280e:	74 56	je	0x100012866
100012810:	48 8d 7d c0	leaq	-64(%rbp), %rdi
100012814:	48 89 1f	movq	%rbx, (%rdi)
100012817:	48 8b 05 d2 ff 03 00	movq	262098(%rip), %rax ## Objc class ref: FilterPDFDoc
10001281e:	48 89 47 08	movq	%rax, 8(%rdi)
100012822:	48 8b 35 c7 fc 03 00	movq	261319(%rip), %rsi ## Objc selector ref: wholeDocumentAndSettings
100012829:	e8 ae cc 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] wholeDocumentAndSettings]
10001282e:	48 8b 3d 33 fe 03 00	movq	261683(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableDictionary
100012835:	48 8b 35 5c e8 03 00	movq	256092(%rip), %rsi ## Objc selector ref: dictionaryWithDictionary:
10001283c:	4c 8b 25 dd a3 02 00	movq	173021(%rip), %r12 ## Objc message: +[NSMutableDictionary dictionaryWithDictionary:]
100012843:	48 89 c2	movq	%rax, %rdx
100012846:	41 ff d4	callq	*%r12
100012849:	49 89 c6	movq	%rax, %r14
10001284c:	4a 8b 14 3b	movq	(%rbx,%r15), %rdx
100012850:	48 8b 35 89 f7 03 00	movq	259977(%rip), %rsi ## Objc selector ref: setObject:forKey:
100012857:	48 8d 0d 02 b2 02 00	leaq	176642(%rip), %rcx ## Objc cfstring ref: @"PDFXFilter"
10001285e:	48 89 c7	movq	%rax, %rdi
100012861:	41 ff d4	callq	*%r12
100012864:	eb 21	jmp	0x100012887
100012866:	48 8d 7d d0	leaq	-48(%rbp), %rdi
10001286a:	48 89 1f	movq	%rbx, (%rdi)
10001286d:	48 8b 05 7c ff 03 00	movq	262012(%rip), %rax ## Objc class ref: FilterPDFDoc
100012874:	48 89 47 08	movq	%rax, 8(%rdi)
100012878:	48 8b 35 71 fc 03 00	movq	261233(%rip), %rsi ## Objc selector ref: wholeDocumentAndSettings
10001287f:	e8 58 cc 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] wholeDocumentAndSettings]
100012884:	49 89 c6	movq	%rax, %r14
100012887:	4c 89 f0	movq	%r14, %rax
10001288a:	48 83 c4 20	addq	$32, %rsp
10001288e:	5b	popq	%rbx
10001288f:	41 5c	popq	%r12
100012891:	41 5e	popq	%r14
100012893:	41 5f	popq	%r15
100012895:	5d	popq	%rbp
100012896:	c3	retq
100012897:	55	pushq	%rbp
100012898:	48 89 e5	movq	%rsp, %rbp
10001289b:	48 8b 35 66 f7 03 00	movq	259942(%rip), %rsi ## Objc selector ref: setPDFDocument:
1000128a2:	5d	popq	%rbp
1000128a3:	ff 25 77 a3 02 00	jmpq	*172919(%rip) ## Objc message: -[%rdi setPDFDocument:]
1000128a9:	55	pushq	%rbp
1000128aa:	48 89 e5	movq	%rsp, %rbp
1000128ad:	41 57	pushq	%r15
1000128af:	41 56	pushq	%r14
1000128b1:	41 54	pushq	%r12
1000128b3:	53	pushq	%rbx
1000128b4:	48 83 ec 10	subq	$16, %rsp
1000128b8:	49 89 d6	movq	%rdx, %r14
1000128bb:	48 89 fb	movq	%rdi, %rbx
1000128be:	4c 8b 25 a3 04 04 00	movq	263331(%rip), %r12
1000128c5:	4a c7 04 27 00 00 00 00	movq	$0, (%rdi,%r12)
1000128cd:	4c 8b 3d a4 ef 03 00	movq	257956(%rip), %r15 ## Objc selector ref: objectForKey:
1000128d4:	48 8d 15 85 b1 02 00	leaq	176517(%rip), %rdx ## Objc cfstring ref: @"PDFXFilter"
1000128db:	4c 89 f7	movq	%r14, %rdi
1000128de:	4c 89 fe	movq	%r15, %rsi
1000128e1:	ff 15 39 a3 02 00	callq	*172857(%rip) ## Objc message: -[%rdi objectForKey:]
1000128e7:	48 85 c0	testq	%rax, %rax
1000128ea:	74 17	je	0x100012903
1000128ec:	48 8d 15 6d b1 02 00	leaq	176493(%rip), %rdx ## Objc cfstring ref: @"PDFXFilter"
1000128f3:	4c 89 f7	movq	%r14, %rdi
1000128f6:	4c 89 fe	movq	%r15, %rsi
1000128f9:	ff 15 21 a3 02 00	callq	*172833(%rip) ## Objc message: -[%rdi objectForKey:]
1000128ff:	4a 89 04 23	movq	%rax, (%rbx,%r12)
100012903:	48 8d 7d d0	leaq	-48(%rbp), %rdi
100012907:	48 89 1f	movq	%rbx, (%rdi)
10001290a:	48 8b 05 df fe 03 00	movq	261855(%rip), %rax ## Objc class ref: FilterPDFDoc
100012911:	48 89 47 08	movq	%rax, 8(%rdi)
100012915:	48 8b 35 5c f8 03 00	movq	260188(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001291c:	4c 89 f2	movq	%r14, %rdx
10001291f:	e8 b8 cb 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setWholeDocumentAndSettings:]
100012924:	48 83 c4 10	addq	$16, %rsp
100012928:	5b	popq	%rbx
100012929:	41 5c	popq	%r12
10001292b:	41 5e	popq	%r14
10001292d:	41 5f	popq	%r15
10001292f:	5d	popq	%rbp
100012930:	c3	retq
100012931:	55	pushq	%rbp
100012932:	48 89 e5	movq	%rsp, %rbp
100012935:	41 57	pushq	%r15
100012937:	41 56	pushq	%r14
100012939:	41 55	pushq	%r13
10001293b:	41 54	pushq	%r12
10001293d:	53	pushq	%rbx
10001293e:	48 83 ec 78	subq	$120, %rsp
100012942:	48 89 4d b8	movq	%rcx, -72(%rbp)
100012946:	49 89 fd	movq	%rdi, %r13
100012949:	48 8b 1d 50 f0 03 00	movq	258128(%rip), %rbx ## Objc selector ref: printInfo
100012950:	4c 8b 3d c9 a2 02 00	movq	172745(%rip), %r15 ## Objc message: -[%rdi printInfo]
100012957:	48 89 de	movq	%rbx, %rsi
10001295a:	41 ff d7	callq	*%r15
10001295d:	49 89 c4	movq	%rax, %r12
100012960:	4c 89 ef	movq	%r13, %rdi
100012963:	48 89 de	movq	%rbx, %rsi
100012966:	41 ff d7	callq	*%r15
100012969:	48 8b 35 10 e2 03 00	movq	254480(%rip), %rsi ## Objc selector ref: PMPrintSession
100012970:	48 89 c7	movq	%rax, %rdi
100012973:	41 ff d7	callq	*%r15
100012976:	48 8d 5d 88	leaq	-120(%rbp), %rbx
10001297a:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
100012981:	48 89 c7	movq	%rax, %rdi
100012984:	48 89 de	movq	%rbx, %rsi
100012987:	e8 c4 c9 01 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
10001298c:	48 8b 3b	movq	(%rbx), %rdi
10001298f:	48 8d 35 ea b0 02 00	leaq	176362(%rip), %rsi ## Objc cfstring ref: @"AP_ApplicationColorMatching"
100012996:	4c 8d 75 d7	leaq	-41(%rbp), %r14
10001299a:	4c 89 f2	movq	%r14, %rdx
10001299d:	e8 90 c9 01 00	callq	0x10002f332 ## symbol stub for: _PMPrinterSupportsMatchingMode
1000129a2:	48 83 3b 00	cmpq	$0, (%rbx)
1000129a6:	0f 95 c0	setne	%al
1000129a9:	41 80 3e 00	cmpb	$0, (%r14)
1000129ad:	0f 95 c3	setne	%bl
1000129b0:	20 c3	andb	%al, %bl
1000129b2:	48 8b 3d e7 fc 03 00	movq	261351(%rip), %rdi ## Objc class ref: FilterDocPDEController
1000129b9:	e8 00 cb 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000129be:	48 8b 35 83 ea 03 00	movq	256643(%rip), %rsi ## Objc selector ref: initWithFilterDoc:enableColorMatching:enablePrintTarget:
1000129c5:	0f b6 cb	movzbl	%bl, %ecx
1000129c8:	89 4d d0	movl	%ecx, -48(%rbp)
1000129cb:	48 89 c7	movq	%rax, %rdi
1000129ce:	4c 89 ea	movq	%r13, %rdx
1000129d1:	45 31 c0	xorl	%r8d, %r8d
1000129d4:	41 ff d7	callq	*%r15
1000129d7:	48 8d 0d f2 03 04 00	leaq	263154(%rip), %rcx
1000129de:	48 8b 09	movq	(%rcx), %rcx
1000129e1:	48 89 4d c8	movq	%rcx, -56(%rbp)
1000129e5:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
1000129ea:	48 8b 35 4f ef 03 00	movq	257871(%rip), %rsi ## Objc selector ref: paperSize
1000129f1:	4c 89 e7	movq	%r12, %rdi
1000129f4:	41 ff d7	callq	*%r15
1000129f7:	0f 57 d2	xorps	%xmm2, %xmm2
1000129fa:	0f 29 55 90	movaps	%xmm2, -112(%rbp)
1000129fe:	f2 0f 11 45 a0	movsd	%xmm0, -96(%rbp)
100012a03:	f2 0f 11 4d a8	movsd	%xmm1, -88(%rbp)
100012a08:	48 8b 3d 99 fc 03 00	movq	261273(%rip), %rdi ## Objc class ref: FilterPDFPrintView
100012a0f:	e8 aa ca 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100012a14:	48 8d 0d a5 03 04 00	leaq	263077(%rip), %rcx
100012a1b:	48 8b 09	movq	(%rcx), %rcx
100012a1e:	49 8b 4c 0d 00	movq	(%r13,%rcx), %rcx
100012a23:	48 8b 35 36 ea 03 00	movq	256566(%rip), %rsi ## Objc selector ref: initWithFrame:document:qfilter:
100012a2a:	0f 28 45 90	movaps	-112(%rbp), %xmm0
100012a2e:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
100012a32:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100012a37:	0f 11 04 24	movups	%xmm0, (%rsp)
100012a3b:	48 89 c7	movq	%rax, %rdi
100012a3e:	4c 89 ea	movq	%r13, %rdx
100012a41:	41 ff d7	callq	*%r15
100012a44:	48 8b 3d bd fb 03 00	movq	261053(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
100012a4b:	48 8b 35 5e ef 03 00	movq	257886(%rip), %rsi ## Objc selector ref: printOperationWithView:printInfo:
100012a52:	48 89 45 c0	movq	%rax, -64(%rbp)
100012a56:	48 89 c2	movq	%rax, %rdx
100012a59:	4c 89 e1	movq	%r12, %rcx
100012a5c:	41 ff d7	callq	*%r15
100012a5f:	49 89 c6	movq	%rax, %r14
100012a62:	48 8b 1d 4f ef 03 00	movq	257871(%rip), %rbx ## Objc selector ref: printPanel
100012a69:	48 89 c7	movq	%rax, %rdi
100012a6c:	48 89 de	movq	%rbx, %rsi
100012a6f:	41 ff d7	callq	*%r15
100012a72:	48 8b 35 6f ee 03 00	movq	257647(%rip), %rsi ## Objc selector ref: options
100012a79:	48 89 c7	movq	%rax, %rdi
100012a7c:	41 ff d7	callq	*%r15
100012a7f:	49 89 c4	movq	%rax, %r12
100012a82:	49 83 cc 0c	orq	$12, %r12
100012a86:	4c 89 f7	movq	%r14, %rdi
100012a89:	48 89 de	movq	%rbx, %rsi
100012a8c:	41 ff d7	callq	*%r15
100012a8f:	48 8b 0d 22 9c 02 00	movq	171042(%rip), %rcx ## literal pool symbol address: _NSPrintPhotoJobStyleHint
100012a96:	48 8b 11	movq	(%rcx), %rdx
100012a99:	48 8b 35 70 f4 03 00	movq	259184(%rip), %rsi ## Objc selector ref: setJobStyleHint:
100012aa0:	48 89 c7	movq	%rax, %rdi
100012aa3:	41 ff d7	callq	*%r15
100012aa6:	4c 89 f7	movq	%r14, %rdi
100012aa9:	48 89 de	movq	%rbx, %rsi
100012aac:	41 ff d7	callq	*%r15
100012aaf:	48 8b 35 42 f5 03 00	movq	259394(%rip), %rsi ## Objc selector ref: setOptions:
100012ab6:	48 89 c7	movq	%rax, %rdi
100012ab9:	4c 89 e2	movq	%r12, %rdx
100012abc:	4c 8b 65 c8	movq	-56(%rbp), %r12
100012ac0:	41 ff d7	callq	*%r15
100012ac3:	4b 8b 5c 25 00	movq	(%r13,%r12), %rbx
100012ac8:	4c 89 f7	movq	%r14, %rdi
100012acb:	48 8b 35 ce ee 03 00	movq	257742(%rip), %rsi ## Objc selector ref: printInfo
100012ad2:	41 ff d7	callq	*%r15
100012ad5:	48 8b 35 9c f5 03 00	movq	259484(%rip), %rsi ## Objc selector ref: setRepresentedObject:
100012adc:	48 89 df	movq	%rbx, %rdi
100012adf:	48 89 c2	movq	%rax, %rdx
100012ae2:	41 ff d7	callq	*%r15
100012ae5:	80 7d d0 01	cmpb	$1, -48(%rbp)
100012ae9:	75 39	jne	0x100012b24
100012aeb:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100012af0:	48 8b 35 39 f5 03 00	movq	259385(%rip), %rsi ## Objc selector ref: setPrintMode:
100012af7:	31 d2	xorl	%edx, %edx
100012af9:	41 ff d7	callq	*%r15
100012afc:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100012b01:	48 8b 35 00 f4 03 00	movq	259072(%rip), %rsi ## Objc selector ref: setIntent:
100012b08:	ba 01 00 00 00	movl	$1, %edx
100012b0d:	41 ff d7	callq	*%r15
100012b10:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100012b15:	48 8b 35 ac f1 03 00	movq	258476(%rip), %rsi ## Objc selector ref: setBPC:
100012b1c:	ba 01 00 00 00	movl	$1, %edx
100012b21:	41 ff d7	callq	*%r15
100012b24:	4c 89 f7	movq	%r14, %rdi
100012b27:	48 8b 35 8a ee 03 00	movq	257674(%rip), %rsi ## Objc selector ref: printPanel
100012b2e:	41 ff d7	callq	*%r15
100012b31:	4b 8b 54 25 00	movq	(%r13,%r12), %rdx
100012b36:	48 8b 35 eb e0 03 00	movq	254187(%rip), %rsi ## Objc selector ref: addAccessoryController:
100012b3d:	48 89 c7	movq	%rax, %rdi
100012b40:	41 ff d7	callq	*%r15
100012b43:	48 8b 45 b8	movq	-72(%rbp), %rax
100012b47:	48 85 c0	testq	%rax, %rax
100012b4a:	74 07	je	0x100012b53
100012b4c:	48 c7 00 00 00 00 00	movq	$0, (%rax)
100012b53:	48 8b 7d c0	movq	-64(%rbp), %rdi
100012b57:	ff 15 fb a0 02 00	callq	*172283(%rip) ## literal pool symbol address: _objc_release
100012b5d:	4c 89 f0	movq	%r14, %rax
100012b60:	48 83 c4 78	addq	$120, %rsp
100012b64:	5b	popq	%rbx
100012b65:	41 5c	popq	%r12
100012b67:	41 5d	popq	%r13
100012b69:	41 5e	popq	%r14
100012b6b:	41 5f	popq	%r15
100012b6d:	5d	popq	%rbp
100012b6e:	c3	retq
100012b6f:	55	pushq	%rbp
100012b70:	48 89 e5	movq	%rsp, %rbp
100012b73:	48 8b 05 06 02 04 00	movq	262662(%rip), %rax
100012b7a:	48 89 14 07	movq	%rdx, (%rdi,%rax)
100012b7e:	5d	popq	%rbp
100012b7f:	c3	retq
100012b80:	55	pushq	%rbp
100012b81:	48 89 e5	movq	%rsp, %rbp
100012b84:	48 8b 05 fd 01 04 00	movq	262653(%rip), %rax
100012b8b:	88 14 07	movb	%dl, (%rdi,%rax)
100012b8e:	5d	popq	%rbp
100012b8f:	c3	retq
100012b90:	55	pushq	%rbp
100012b91:	48 89 e5	movq	%rsp, %rbp
100012b94:	48 8b 05 ed 01 04 00	movq	262637(%rip), %rax
100012b9b:	0f be 04 07	movsbl	(%rdi,%rax), %eax
100012b9f:	5d	popq	%rbp
100012ba0:	c3	retq
100012ba1:	55	pushq	%rbp
100012ba2:	48 89 e5	movq	%rsp, %rbp
100012ba5:	41 57	pushq	%r15
100012ba7:	41 56	pushq	%r14
100012ba9:	41 54	pushq	%r12
100012bab:	53	pushq	%rbx
100012bac:	4d 89 c6	movq	%r8, %r14
100012baf:	49 89 ff	movq	%rdi, %r15
100012bb2:	48 8b 35 8f e7 03 00	movq	255887(%rip), %rsi ## Objc selector ref: identifier
100012bb9:	48 8b 1d 60 a0 02 00	movq	172128(%rip), %rbx ## Objc message: +[NSPrintOperation identifier]
100012bc0:	48 89 cf	movq	%rcx, %rdi
100012bc3:	ff d3	callq	*%rbx
100012bc5:	48 8b 35 bc e9 03 00	movq	256444(%rip), %rsi ## Objc selector ref: isEqualToString:
100012bcc:	48 8d 15 2d af 02 00	leaq	175917(%rip), %rdx ## Objc cfstring ref: @"Name"
100012bd3:	48 89 c7	movq	%rax, %rdi
100012bd6:	ff d3	callq	*%rbx
100012bd8:	84 c0	testb	%al, %al
100012bda:	74 5a	je	0x100012c36
100012bdc:	4c 8b 25 9d 01 04 00	movq	262557(%rip), %r12
100012be3:	4b 8b 04 27	movq	(%r15,%r12), %rax
100012be7:	b3 01	movb	$1, %bl
100012be9:	48 85 c0	testq	%rax, %rax
100012bec:	74 4a	je	0x100012c38
100012bee:	48 8b 38	movq	(%rax), %rdi
100012bf1:	48 85 ff	testq	%rdi, %rdi
100012bf4:	74 42	je	0x100012c38
100012bf6:	e8 57 c2 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100012bfb:	4c 39 f0	cmpq	%r14, %rax
100012bfe:	7e 38	jle	0x100012c38
100012c00:	4b 8b 04 27	movq	(%r15,%r12), %rax
100012c04:	48 8b 38	movq	(%rax), %rdi
100012c07:	4c 89 f6	movq	%r14, %rsi
100012c0a:	e8 4f c2 01 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100012c0f:	48 85 c0	testq	%rax, %rax
100012c12:	74 24	je	0x100012c38
100012c14:	48 8b 0d 75 9f 02 00	movq	171893(%rip), %rcx ## literal pool symbol address: _kQFilterReadOnly
100012c1b:	48 8b 11	movq	(%rcx), %rdx
100012c1e:	48 8b 35 53 ec 03 00	movq	257107(%rip), %rsi ## Objc selector ref: objectForKey:
100012c25:	48 89 c7	movq	%rax, %rdi
100012c28:	ff 15 f2 9f 02 00	callq	*172018(%rip) ## Objc message: -[%rdi objectForKey:]
100012c2e:	48 85 c0	testq	%rax, %rax
100012c31:	0f 94 c3	sete	%bl
100012c34:	eb 02	jmp	0x100012c38
100012c36:	31 db	xorl	%ebx, %ebx
100012c38:	0f b6 c3	movzbl	%bl, %eax
100012c3b:	5b	popq	%rbx
100012c3c:	41 5c	popq	%r12
100012c3e:	41 5e	popq	%r14
100012c40:	41 5f	popq	%r15
100012c42:	5d	popq	%rbp
100012c43:	c3	retq
100012c44:	55	pushq	%rbp
100012c45:	48 89 e5	movq	%rsp, %rbp
100012c48:	41 57	pushq	%r15
100012c4a:	41 56	pushq	%r14
100012c4c:	41 54	pushq	%r12
100012c4e:	53	pushq	%rbx
100012c4f:	48 83 ec 10	subq	$16, %rsp
100012c53:	49 89 d6	movq	%rdx, %r14
100012c56:	48 89 fb	movq	%rdi, %rbx
100012c59:	4c 8b 3d 08 e2 03 00	movq	254472(%rip), %r15 ## Objc selector ref: changeSelectionEnabled:
100012c60:	4c 8b 25 b9 9f 02 00	movq	171961(%rip), %r12 ## Objc message: -[%rdi changeSelectionEnabled:]
100012c67:	4c 89 fe	movq	%r15, %rsi
100012c6a:	31 d2	xorl	%edx, %edx
100012c6c:	41 ff d4	callq	*%r12
100012c6f:	48 8d 7d d0	leaq	-48(%rbp), %rdi
100012c73:	48 89 1f	movq	%rbx, (%rdi)
100012c76:	48 8b 05 7b fb 03 00	movq	260987(%rip), %rax ## Objc class ref: FilterTableView
100012c7d:	48 89 47 08	movq	%rax, 8(%rdi)
100012c81:	48 8b 35 30 f7 03 00	movq	259888(%rip), %rsi ## Objc selector ref: textDidEndEditing:
100012c88:	4c 89 f2	movq	%r14, %rdx
100012c8b:	e8 4c c8 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] textDidEndEditing:]
100012c90:	48 89 df	movq	%rbx, %rdi
100012c93:	4c 89 fe	movq	%r15, %rsi
100012c96:	ba 01 00 00 00	movl	$1, %edx
100012c9b:	41 ff d4	callq	*%r12
100012c9e:	48 83 c4 10	addq	$16, %rsp
100012ca2:	5b	popq	%rbx
100012ca3:	41 5c	popq	%r12
100012ca5:	41 5e	popq	%r14
100012ca7:	41 5f	popq	%r15
100012ca9:	5d	popq	%rbp
100012caa:	c3	retq
100012cab:	55	pushq	%rbp
100012cac:	48 89 e5	movq	%rsp, %rbp
100012caf:	41 57	pushq	%r15
100012cb1:	41 56	pushq	%r14
100012cb3:	41 54	pushq	%r12
100012cb5:	53	pushq	%rbx
100012cb6:	48 83 ec 10	subq	$16, %rsp
100012cba:	49 89 d7	movq	%rdx, %r15
100012cbd:	49 89 fe	movq	%rdi, %r14
100012cc0:	48 8b 35 b1 e1 03 00	movq	254385(%rip), %rsi ## Objc selector ref: charactersIgnoringModifiers
100012cc7:	4c 8b 25 52 9f 02 00	movq	171858(%rip), %r12 ## Objc message: -[%rdi charactersIgnoringModifiers]
100012cce:	48 89 d7	movq	%rdx, %rdi
100012cd1:	41 ff d4	callq	*%r12
100012cd4:	48 89 c3	movq	%rax, %rbx
100012cd7:	48 8b 35 1a e9 03 00	movq	256282(%rip), %rsi ## Objc selector ref: length
100012cde:	48 89 c7	movq	%rax, %rdi
100012ce1:	41 ff d4	callq	*%r12
100012ce4:	48 85 c0	testq	%rax, %rax
100012ce7:	74 1e	je	0x100012d07
100012ce9:	48 8b 35 80 e1 03 00	movq	254336(%rip), %rsi ## Objc selector ref: characterAtIndex:
100012cf0:	48 89 df	movq	%rbx, %rdi
100012cf3:	31 d2	xorl	%edx, %edx
100012cf5:	ff 15 25 9f 02 00	callq	*171813(%rip) ## Objc message: -[%rdi characterAtIndex:]
100012cfb:	25 fe ff 00 00	andl	$65534, %eax
100012d00:	3d 00 f7 00 00	cmpl	$63232, %eax
100012d05:	74 21	je	0x100012d28
100012d07:	48 8d 7d d0	leaq	-48(%rbp), %rdi
100012d0b:	4c 89 37	movq	%r14, (%rdi)
100012d0e:	48 8b 05 e3 fa 03 00	movq	260835(%rip), %rax ## Objc class ref: FilterTableView
100012d15:	48 89 47 08	movq	%rax, 8(%rdi)
100012d19:	48 8b 35 a8 e8 03 00	movq	256168(%rip), %rsi ## Objc selector ref: keyDown:
100012d20:	4c 89 fa	movq	%r15, %rdx
100012d23:	e8 b4 c7 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] keyDown:]
100012d28:	48 83 c4 10	addq	$16, %rsp
100012d2c:	5b	popq	%rbx
100012d2d:	41 5c	popq	%r12
100012d2f:	41 5e	popq	%r14
100012d31:	41 5f	popq	%r15
100012d33:	5d	popq	%rbp
100012d34:	c3	retq
100012d35:	90	nop
100012d36:	90	nop
100012d37:	90	nop
100012d38:	55	pushq	%rbp
100012d39:	48 89 e5	movq	%rsp, %rbp
100012d3c:	41 56	pushq	%r14
100012d3e:	53	pushq	%rbx
100012d3f:	48 89 d3	movq	%rdx, %rbx
100012d42:	49 89 fe	movq	%rdi, %r14
100012d45:	48 8b 35 3c e8 03 00	movq	256060(%rip), %rsi ## Objc selector ref: isEqualToString:
100012d4c:	48 8d 15 cd ad 02 00	leaq	175565(%rip), %rdx ## Objc cfstring ref: @"imageSizeScaleValue"
100012d53:	48 89 df	movq	%rbx, %rdi
100012d56:	ff 15 c4 9e 02 00	callq	*171716(%rip) ## Objc message: -[%rdi isEqualToString:]
100012d5c:	84 c0	testb	%al, %al
100012d5e:	74 1c	je	0x100012d7c
100012d60:	48 8b 35 79 f1 03 00	movq	258425(%rip), %rsi ## Objc selector ref: setImageSizeScaleValue:
100012d67:	f3 0f 10 05 dd 64 02 00	movss	156893(%rip), %xmm0
100012d6f:	4c 89 f7	movq	%r14, %rdi
100012d72:	5b	popq	%rbx
100012d73:	41 5e	popq	%r14
100012d75:	5d	popq	%rbp
100012d76:	ff 25 a4 9e 02 00	jmpq	*171684(%rip) ## Objc message: -[%rdi setImageSizeScaleValue:]
100012d7c:	48 8d 3d bd ad 02 00	leaq	175549(%rip), %rdi ## Objc cfstring ref: @"key: %@"
100012d83:	48 89 de	movq	%rbx, %rsi
100012d86:	31 c0	xorl	%eax, %eax
100012d88:	e8 6f c5 01 00	callq	0x10002f2fc ## symbol stub for: _NSLog
100012d8d:	5b	popq	%rbx
100012d8e:	41 5e	popq	%r14
100012d90:	5d	popq	%rbp
100012d91:	c3	retq
100012d92:	55	pushq	%rbp
100012d93:	48 89 e5	movq	%rsp, %rbp
100012d96:	41 57	pushq	%r15
100012d98:	41 56	pushq	%r14
100012d9a:	41 54	pushq	%r12
100012d9c:	53	pushq	%rbx
100012d9d:	48 83 ec 10	subq	$16, %rsp
100012da1:	f3 0f 11 45 dc	movss	%xmm0, -36(%rbp)
100012da6:	49 89 fe	movq	%rdi, %r14
100012da9:	48 8b 35 90 e4 03 00	movq	255120(%rip), %rsi ## Objc selector ref: filterDocument
100012db0:	48 8b 05 69 9e 02 00	movq	171625(%rip), %rax ## Objc message: -[%rdi filterDocument]
100012db7:	49 89 c4	movq	%rax, %r12
100012dba:	ff d0	callq	*%rax
100012dbc:	49 89 c7	movq	%rax, %r15
100012dbf:	48 89 c7	movq	%rax, %rdi
100012dc2:	e8 b5 c3 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100012dc7:	48 89 c3	movq	%rax, %rbx
100012dca:	4c 89 ff	movq	%r15, %rdi
100012dcd:	e8 8c c3 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100012dd2:	f3 0f 10 55 dc	movss	-36(%rbp), %xmm2
100012dd7:	48 8b 0d b2 ff 03 00	movq	262066(%rip), %rcx
100012dde:	f3 41 0f 11 14 0e	movss	%xmm2, (%r14,%rcx)
100012de4:	48 85 db	testq	%rbx, %rbx
100012de7:	78 0a	js	0x100012df3
100012de9:	0f 57 c0	xorps	%xmm0, %xmm0
100012dec:	f3 48 0f 2a c3	cvtsi2ss	%rbx, %xmm0
100012df1:	eb 18	jmp	0x100012e0b
100012df3:	48 89 d9	movq	%rbx, %rcx
100012df6:	48 d1 e9	shrq	%rcx
100012df9:	83 e3 01	andl	$1, %ebx
100012dfc:	48 09 cb	orq	%rcx, %rbx
100012dff:	0f 57 c0	xorps	%xmm0, %xmm0
100012e02:	f3 48 0f 2a c3	cvtsi2ss	%rbx, %xmm0
100012e07:	f3 0f 58 c0	addss	%xmm0, %xmm0
100012e0b:	f3 0f 59 c2	mulss	%xmm2, %xmm0
100012e0f:	f3 0f 5a c8	cvtss2sd	%xmm0, %xmm1
100012e13:	f2 0f 10 05 1d 56 02 00	movsd	153117(%rip), %xmm0
100012e1b:	f2 0f 5e c8	divsd	%xmm0, %xmm1
100012e1f:	f2 0f 2c d1	cvttsd2si	%xmm1, %edx
100012e23:	48 8b 0d 6e ff 03 00	movq	261998(%rip), %rcx
100012e2a:	41 89 14 0e	movl	%edx, (%r14,%rcx)
100012e2e:	48 85 c0	testq	%rax, %rax
100012e31:	78 0a	js	0x100012e3d
100012e33:	0f 57 c9	xorps	%xmm1, %xmm1
100012e36:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
100012e3b:	eb 18	jmp	0x100012e55
100012e3d:	48 89 c2	movq	%rax, %rdx
100012e40:	48 d1 ea	shrq	%rdx
100012e43:	83 e0 01	andl	$1, %eax
100012e46:	48 09 d0	orq	%rdx, %rax
100012e49:	0f 57 c9	xorps	%xmm1, %xmm1
100012e4c:	f3 48 0f 2a c8	cvtsi2ss	%rax, %xmm1
100012e51:	f3 0f 58 c9	addss	%xmm1, %xmm1
100012e55:	f3 0f 59 ca	mulss	%xmm2, %xmm1
100012e59:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
100012e5d:	f2 0f 5e c8	divsd	%xmm0, %xmm1
100012e61:	f2 44 0f 2c c1	cvttsd2si	%xmm1, %r8d
100012e66:	48 8b 05 33 ff 03 00	movq	261939(%rip), %rax
100012e6d:	45 89 04 06	movl	%r8d, (%r14,%rax)
100012e71:	48 8b 3d 50 f7 03 00	movq	259920(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100012e78:	41 8b 0c 0e	movl	(%r14,%rcx), %ecx
100012e7c:	48 8b 35 a5 f4 03 00	movq	259237(%rip), %rsi ## Objc selector ref: stringWithFormat:
100012e83:	48 8d 15 d6 ac 02 00	leaq	175318(%rip), %rdx ## Objc cfstring ref: @"%d x %d"
100012e8a:	31 c0	xorl	%eax, %eax
100012e8c:	41 ff d4	callq	*%r12
100012e8f:	48 8b 35 2a f0 03 00	movq	258090(%rip), %rsi ## Objc selector ref: setImageSizeDimension:
100012e96:	4c 89 f7	movq	%r14, %rdi
100012e99:	48 89 c2	movq	%rax, %rdx
100012e9c:	4c 89 e0	movq	%r12, %rax
100012e9f:	48 83 c4 10	addq	$16, %rsp
100012ea3:	5b	popq	%rbx
100012ea4:	41 5c	popq	%r12
100012ea6:	41 5e	popq	%r14
100012ea8:	41 5f	popq	%r15
100012eaa:	5d	popq	%rbp
100012eab:	ff e0	jmpq	*%rax
100012ead:	55	pushq	%rbp
100012eae:	48 89 e5	movq	%rsp, %rbp
100012eb1:	41 57	pushq	%r15
100012eb3:	41 56	pushq	%r14
100012eb5:	41 55	pushq	%r13
100012eb7:	41 54	pushq	%r12
100012eb9:	53	pushq	%rbx
100012eba:	50	pushq	%rax
100012ebb:	41 89 d7	movl	%edx, %r15d
100012ebe:	49 89 fe	movq	%rdi, %r14
100012ec1:	48 8b 35 78 e3 03 00	movq	254840(%rip), %rsi ## Objc selector ref: filterDocument
100012ec8:	48 8b 05 51 9d 02 00	movq	171345(%rip), %rax ## Objc message: +[NSString filterDocument]
100012ecf:	49 89 c5	movq	%rax, %r13
100012ed2:	ff d0	callq	*%rax
100012ed4:	49 89 c4	movq	%rax, %r12
100012ed7:	48 89 c7	movq	%rax, %rdi
100012eda:	e8 9d c2 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100012edf:	48 89 c3	movq	%rax, %rbx
100012ee2:	4c 89 e7	movq	%r12, %rdi
100012ee5:	e8 74 c2 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100012eea:	48 8b 0d a7 fe 03 00	movq	261799(%rip), %rcx
100012ef1:	45 89 3c 0e	movl	%r15d, (%r14,%rcx)
100012ef5:	f3 41 0f 2a c7	cvtsi2ss	%r15d, %xmm0
100012efa:	f3 0f 5a c8	cvtss2sd	%xmm0, %xmm1
100012efe:	f2 0f 10 05 32 55 02 00	movsd	152882(%rip), %xmm0
100012f06:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100012f0a:	48 85 db	testq	%rbx, %rbx
100012f0d:	78 07	js	0x100012f16
100012f0f:	f3 48 0f 2a d3	cvtsi2ss	%rbx, %xmm2
100012f14:	eb 15	jmp	0x100012f2b
100012f16:	48 89 da	movq	%rbx, %rdx
100012f19:	48 d1 ea	shrq	%rdx
100012f1c:	83 e3 01	andl	$1, %ebx
100012f1f:	48 09 d3	orq	%rdx, %rbx
100012f22:	f3 48 0f 2a d3	cvtsi2ss	%rbx, %xmm2
100012f27:	f3 0f 58 d2	addss	%xmm2, %xmm2
100012f2b:	f3 0f 5a d2	cvtss2sd	%xmm2, %xmm2
100012f2f:	f2 0f 5e ca	divsd	%xmm2, %xmm1
100012f33:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100012f37:	48 8b 15 52 fe 03 00	movq	261714(%rip), %rdx
100012f3e:	f3 41 0f 11 0c 16	movss	%xmm1, (%r14,%rdx)
100012f44:	48 85 c0	testq	%rax, %rax
100012f47:	78 0a	js	0x100012f53
100012f49:	0f 57 d2	xorps	%xmm2, %xmm2
100012f4c:	f3 48 0f 2a d0	cvtsi2ss	%rax, %xmm2
100012f51:	eb 18	jmp	0x100012f6b
100012f53:	48 89 c2	movq	%rax, %rdx
100012f56:	48 d1 ea	shrq	%rdx
100012f59:	83 e0 01	andl	$1, %eax
100012f5c:	48 09 d0	orq	%rdx, %rax
100012f5f:	0f 57 d2	xorps	%xmm2, %xmm2
100012f62:	f3 48 0f 2a d0	cvtsi2ss	%rax, %xmm2
100012f67:	f3 0f 58 d2	addss	%xmm2, %xmm2
100012f6b:	f3 0f 59 d1	mulss	%xmm1, %xmm2
100012f6f:	0f 57 c9	xorps	%xmm1, %xmm1
100012f72:	f3 0f 5a ca	cvtss2sd	%xmm2, %xmm1
100012f76:	f2 0f 5e c8	divsd	%xmm0, %xmm1
100012f7a:	f2 44 0f 2c c1	cvttsd2si	%xmm1, %r8d
100012f7f:	48 8b 05 1a fe 03 00	movq	261658(%rip), %rax
100012f86:	45 89 04 06	movl	%r8d, (%r14,%rax)
100012f8a:	48 8b 3d 37 f6 03 00	movq	259639(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100012f91:	41 8b 0c 0e	movl	(%r14,%rcx), %ecx
100012f95:	48 8b 35 8c f3 03 00	movq	258956(%rip), %rsi ## Objc selector ref: stringWithFormat:
100012f9c:	48 8d 15 bd ab 02 00	leaq	175037(%rip), %rdx ## Objc cfstring ref: @"%d x %d"
100012fa3:	31 c0	xorl	%eax, %eax
100012fa5:	41 ff d5	callq	*%r13
100012fa8:	48 8b 35 11 ef 03 00	movq	257809(%rip), %rsi ## Objc selector ref: setImageSizeDimension:
100012faf:	4c 89 f7	movq	%r14, %rdi
100012fb2:	48 89 c2	movq	%rax, %rdx
100012fb5:	4c 89 e8	movq	%r13, %rax
100012fb8:	48 83 c4 08	addq	$8, %rsp
100012fbc:	5b	popq	%rbx
100012fbd:	41 5c	popq	%r12
100012fbf:	41 5d	popq	%r13
100012fc1:	41 5e	popq	%r14
100012fc3:	41 5f	popq	%r15
100012fc5:	5d	popq	%rbp
100012fc6:	ff e0	jmpq	*%rax
100012fc8:	55	pushq	%rbp
100012fc9:	48 89 e5	movq	%rsp, %rbp
100012fcc:	41 57	pushq	%r15
100012fce:	41 56	pushq	%r14
100012fd0:	41 55	pushq	%r13
100012fd2:	41 54	pushq	%r12
100012fd4:	53	pushq	%rbx
100012fd5:	50	pushq	%rax
100012fd6:	41 89 d7	movl	%edx, %r15d
100012fd9:	49 89 fe	movq	%rdi, %r14
100012fdc:	48 8b 35 5d e2 03 00	movq	254557(%rip), %rsi ## Objc selector ref: filterDocument
100012fe3:	48 8b 05 36 9c 02 00	movq	171062(%rip), %rax ## Objc message: +[NSString filterDocument]
100012fea:	49 89 c5	movq	%rax, %r13
100012fed:	ff d0	callq	*%rax
100012fef:	48 89 c3	movq	%rax, %rbx
100012ff2:	48 89 c7	movq	%rax, %rdi
100012ff5:	e8 82 c1 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100012ffa:	49 89 c4	movq	%rax, %r12
100012ffd:	48 89 df	movq	%rbx, %rdi
100013000:	e8 59 c1 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100013005:	48 8b 15 94 fd 03 00	movq	261524(%rip), %rdx
10001300c:	45 89 3c 16	movl	%r15d, (%r14,%rdx)
100013010:	f3 41 0f 2a c7	cvtsi2ss	%r15d, %xmm0
100013015:	f3 0f 5a c8	cvtss2sd	%xmm0, %xmm1
100013019:	f2 0f 10 05 17 54 02 00	movsd	152599(%rip), %xmm0
100013021:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100013025:	48 85 c0	testq	%rax, %rax
100013028:	78 07	js	0x100013031
10001302a:	f3 48 0f 2a d0	cvtsi2ss	%rax, %xmm2
10001302f:	eb 15	jmp	0x100013046
100013031:	48 89 c1	movq	%rax, %rcx
100013034:	48 d1 e9	shrq	%rcx
100013037:	83 e0 01	andl	$1, %eax
10001303a:	48 09 c8	orq	%rcx, %rax
10001303d:	f3 48 0f 2a d0	cvtsi2ss	%rax, %xmm2
100013042:	f3 0f 58 d2	addss	%xmm2, %xmm2
100013046:	f3 0f 5a d2	cvtss2sd	%xmm2, %xmm2
10001304a:	f2 0f 5e ca	divsd	%xmm2, %xmm1
10001304e:	f2 0f 5a c9	cvtsd2ss	%xmm1, %xmm1
100013052:	48 8b 05 37 fd 03 00	movq	261431(%rip), %rax
100013059:	f3 41 0f 11 0c 06	movss	%xmm1, (%r14,%rax)
10001305f:	4d 85 e4	testq	%r12, %r12
100013062:	78 0a	js	0x10001306e
100013064:	0f 57 d2	xorps	%xmm2, %xmm2
100013067:	f3 49 0f 2a d4	cvtsi2ss	%r12, %xmm2
10001306c:	eb 19	jmp	0x100013087
10001306e:	4c 89 e0	movq	%r12, %rax
100013071:	48 d1 e8	shrq	%rax
100013074:	41 83 e4 01	andl	$1, %r12d
100013078:	49 09 c4	orq	%rax, %r12
10001307b:	0f 57 d2	xorps	%xmm2, %xmm2
10001307e:	f3 49 0f 2a d4	cvtsi2ss	%r12, %xmm2
100013083:	f3 0f 58 d2	addss	%xmm2, %xmm2
100013087:	f3 0f 59 d1	mulss	%xmm1, %xmm2
10001308b:	0f 57 c9	xorps	%xmm1, %xmm1
10001308e:	f3 0f 5a ca	cvtss2sd	%xmm2, %xmm1
100013092:	f2 0f 5e c8	divsd	%xmm0, %xmm1
100013096:	f2 0f 2c c9	cvttsd2si	%xmm1, %ecx
10001309a:	48 8b 05 f7 fc 03 00	movq	261367(%rip), %rax
1000130a1:	41 89 0c 06	movl	%ecx, (%r14,%rax)
1000130a5:	48 8b 3d 1c f5 03 00	movq	259356(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000130ac:	45 8b 04 16	movl	(%r14,%rdx), %r8d
1000130b0:	48 8b 35 71 f2 03 00	movq	258673(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000130b7:	48 8d 15 a2 aa 02 00	leaq	174754(%rip), %rdx ## Objc cfstring ref: @"%d x %d"
1000130be:	31 c0	xorl	%eax, %eax
1000130c0:	41 ff d5	callq	*%r13
1000130c3:	48 8b 35 f6 ed 03 00	movq	257526(%rip), %rsi ## Objc selector ref: setImageSizeDimension:
1000130ca:	4c 89 f7	movq	%r14, %rdi
1000130cd:	48 89 c2	movq	%rax, %rdx
1000130d0:	4c 89 e8	movq	%r13, %rax
1000130d3:	48 83 c4 08	addq	$8, %rsp
1000130d7:	5b	popq	%rbx
1000130d8:	41 5c	popq	%r12
1000130da:	41 5d	popq	%r13
1000130dc:	41 5e	popq	%r14
1000130de:	41 5f	popq	%r15
1000130e0:	5d	popq	%rbp
1000130e1:	ff e0	jmpq	*%rax
1000130e3:	55	pushq	%rbp
1000130e4:	48 89 e5	movq	%rsp, %rbp
1000130e7:	48 83 ec 10	subq	$16, %rsp
1000130eb:	48 8d 45 f0	leaq	-16(%rbp), %rax
1000130ef:	48 89 38	movq	%rdi, (%rax)
1000130f2:	48 8b 0d 07 f7 03 00	movq	259847(%rip), %rcx ## Objc class ref: FilterDoc
1000130f9:	48 89 48 08	movq	%rcx, 8(%rax)
1000130fd:	48 8b 35 94 e9 03 00	movq	256404(%rip), %rsi ## Objc selector ref: release
100013104:	48 89 c7	movq	%rax, %rdi
100013107:	e8 d0 c3 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] release]
10001310c:	48 83 c4 10	addq	$16, %rsp
100013110:	5d	popq	%rbp
100013111:	c3	retq
100013112:	55	pushq	%rbp
100013113:	48 89 e5	movq	%rsp, %rbp
100013116:	48 83 ec 10	subq	$16, %rsp
10001311a:	48 8d 45 f0	leaq	-16(%rbp), %rax
10001311e:	48 89 38	movq	%rdi, (%rax)
100013121:	48 8b 0d d8 f6 03 00	movq	259800(%rip), %rcx ## Objc class ref: FilterDoc
100013128:	48 89 48 08	movq	%rcx, 8(%rax)
10001312c:	48 8b 35 15 ea 03 00	movq	256533(%rip), %rsi ## Objc selector ref: retain
100013133:	48 89 c7	movq	%rax, %rdi
100013136:	e8 a1 c3 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] retain]
10001313b:	48 83 c4 10	addq	$16, %rsp
10001313f:	5d	popq	%rbp
100013140:	c3	retq
100013141:	55	pushq	%rbp
100013142:	48 89 e5	movq	%rsp, %rbp
100013145:	41 56	pushq	%r14
100013147:	53	pushq	%rbx
100013148:	48 83 ec 10	subq	$16, %rsp
10001314c:	48 89 fb	movq	%rdi, %rbx
10001314f:	48 8b 3d ba f4 03 00	movq	259258(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100013156:	48 8b 35 fb de 03 00	movq	253691(%rip), %rsi ## Objc selector ref: defaultCenter
10001315d:	4c 8b 35 bc 9a 02 00	movq	170684(%rip), %r14 ## Objc message: +[NSNotificationCenter defaultCenter]
100013164:	41 ff d6	callq	*%r14
100013167:	48 8b 35 92 e9 03 00	movq	256402(%rip), %rsi ## Objc selector ref: removeObserver:
10001316e:	48 89 c7	movq	%rax, %rdi
100013171:	48 89 da	movq	%rbx, %rdx
100013174:	41 ff d6	callq	*%r14
100013177:	48 8b 35 aa f2 03 00	movq	258730(%rip), %rsi ## Objc selector ref: undoManager
10001317e:	48 89 df	movq	%rbx, %rdi
100013181:	41 ff d6	callq	*%r14
100013184:	48 8b 35 35 e9 03 00	movq	256309(%rip), %rsi ## Objc selector ref: removeAllActionsWithTarget:
10001318b:	48 89 c7	movq	%rax, %rdi
10001318e:	48 89 da	movq	%rbx, %rdx
100013191:	41 ff d6	callq	*%r14
100013194:	48 8b 05 0d fc 03 00	movq	261133(%rip), %rax
10001319b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001319f:	4c 8b 35 b2 9a 02 00	movq	170674(%rip), %r14 ## literal pool symbol address: _objc_release
1000131a6:	41 ff d6	callq	*%r14
1000131a9:	48 8b 05 00 fc 03 00	movq	261120(%rip), %rax
1000131b0:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000131b4:	41 ff d6	callq	*%r14
1000131b7:	48 8b 05 fa fb 03 00	movq	261114(%rip), %rax
1000131be:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000131c2:	48 85 ff	testq	%rdi, %rdi
1000131c5:	74 05	je	0x1000131cc
1000131c7:	e8 46 bd 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000131cc:	48 8b 05 ed fb 03 00	movq	261101(%rip), %rax
1000131d3:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000131d7:	ff 15 7b 9a 02 00	callq	*170619(%rip) ## literal pool symbol address: _objc_release
1000131dd:	48 8b 05 e4 fb 03 00	movq	261092(%rip), %rax
1000131e4:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000131e8:	48 85 ff	testq	%rdi, %rdi
1000131eb:	74 05	je	0x1000131f2
1000131ed:	e8 20 bd 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000131f2:	48 8b 05 d7 fb 03 00	movq	261079(%rip), %rax
1000131f9:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000131fd:	48 85 ff	testq	%rdi, %rdi
100013200:	74 06	je	0x100013208
100013202:	ff 15 50 9a 02 00	callq	*170576(%rip) ## literal pool symbol address: _objc_release
100013208:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10001320c:	48 89 1f	movq	%rbx, (%rdi)
10001320f:	48 8b 05 ea f5 03 00	movq	259562(%rip), %rax ## Objc class ref: FilterDoc
100013216:	48 89 47 08	movq	%rax, 8(%rdi)
10001321a:	48 8b 35 2f de 03 00	movq	253487(%rip), %rsi ## Objc selector ref: dealloc
100013221:	e8 b6 c2 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100013226:	48 83 c4 10	addq	$16, %rsp
10001322a:	5b	popq	%rbx
10001322b:	41 5e	popq	%r14
10001322d:	5d	popq	%rbp
10001322e:	c3	retq
10001322f:	55	pushq	%rbp
100013230:	48 89 e5	movq	%rsp, %rbp
100013233:	48 8d 05 46 a9 02 00	leaq	174406(%rip), %rax ## Objc cfstring ref: @"FilterDoc"
10001323a:	5d	popq	%rbp
10001323b:	c3	retq
10001323c:	55	pushq	%rbp
10001323d:	48 89 e5	movq	%rsp, %rbp
100013240:	41 57	pushq	%r15
100013242:	41 56	pushq	%r14
100013244:	41 55	pushq	%r13
100013246:	41 54	pushq	%r12
100013248:	53	pushq	%rbx
100013249:	48 83 ec 18	subq	$24, %rsp
10001324d:	49 89 d6	movq	%rdx, %r14
100013250:	48 89 fb	movq	%rdi, %rbx
100013253:	48 8b 35 be d9 03 00	movq	252350(%rip), %rsi ## Objc selector ref: action
10001325a:	48 89 d7	movq	%rdx, %rdi
10001325d:	ff 15 bd 99 02 00	callq	*170429(%rip) ## Objc message: -[%rdi action]
100013263:	48 3b 05 26 e9 03 00	cmpq	256294(%rip), %rax ## Objc selector ref: saveDocument:
10001326a:	0f 84 b6 00 00 00	je	0x100013326
100013270:	48 8b 05 61 fb 03 00	movq	260961(%rip), %rax
100013277:	49 89 dd	movq	%rbx, %r13
10001327a:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001327e:	48 8b 35 7b e5 03 00	movq	255355(%rip), %rsi ## Objc selector ref: numberOfItems
100013285:	ff 15 95 99 02 00	callq	*170389(%rip) ## Objc message: -[%rdi numberOfItems]
10001328b:	48 85 c0	testq	%rax, %rax
10001328e:	74 37	je	0x1000132c7
100013290:	48 89 c3	movq	%rax, %rbx
100013293:	45 31 ff	xorl	%r15d, %r15d
100013296:	4c 8b 25 83 99 02 00	movq	170371(%rip), %r12 ## Objc message: -[%rdi numberOfItems]
10001329d:	48 8b 05 34 fb 03 00	movq	260916(%rip), %rax
1000132a4:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000132a9:	48 8b 35 08 e3 03 00	movq	254728(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000132b0:	4c 89 fa	movq	%r15, %rdx
1000132b3:	41 ff d4	callq	*%r12
1000132b6:	4c 39 f0	cmpq	%r14, %rax
1000132b9:	0f 84 c3 00 00 00	je	0x100013382
1000132bf:	49 ff c7	incq	%r15
1000132c2:	4c 39 fb	cmpq	%r15, %rbx
1000132c5:	75 d6	jne	0x10001329d
1000132c7:	48 8b 05 12 fb 03 00	movq	260882(%rip), %rax
1000132ce:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000132d3:	48 8b 35 0e e3 03 00	movq	254734(%rip), %rsi ## Objc selector ref: lastItem
1000132da:	ff 15 40 99 02 00	callq	*170304(%rip) ## Objc message: -[%rdi lastItem]
1000132e0:	4c 89 f3	movq	%r14, %rbx
1000132e3:	4c 39 f0	cmpq	%r14, %rax
1000132e6:	74 32	je	0x10001331a
1000132e8:	48 8b 35 29 e8 03 00	movq	256041(%rip), %rsi ## Objc selector ref: representedObject
1000132ef:	48 89 df	movq	%rbx, %rdi
1000132f2:	ff 15 28 99 02 00	callq	*170280(%rip) ## Objc message: -[%rdi representedObject]
1000132f8:	49 89 c6	movq	%rax, %r14
1000132fb:	48 8b 3d b6 f3 03 00	movq	258998(%rip), %rdi ## Objc class ref: FilterDocProfile
100013302:	e8 e1 c1 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100013307:	4c 89 f7	movq	%r14, %rdi
10001330a:	48 89 c6	movq	%rax, %rsi
10001330d:	e8 dc c1 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
100013312:	84 c0	testb	%al, %al
100013314:	0f 84 8f 00 00 00	je	0x1000133a9
10001331a:	48 8b 35 47 e2 03 00	movq	254535(%rip), %rsi ## Objc selector ref: isEnabled
100013321:	48 89 df	movq	%rbx, %rdi
100013324:	eb 66	jmp	0x10001338c
100013326:	4c 8b 3d 1b df 03 00	movq	253723(%rip), %r15 ## Objc selector ref: filterDocumentType
10001332d:	48 89 df	movq	%rbx, %rdi
100013330:	4c 89 fe	movq	%r15, %rsi
100013333:	ff 15 e7 98 02 00	callq	*170215(%rip) ## Objc message: +[FilterDocProfile filterDocumentType]
100013339:	83 f8 02	cmpl	$2, %eax
10001333c:	74 15	je	0x100013353
10001333e:	48 89 df	movq	%rbx, %rdi
100013341:	4c 89 fe	movq	%r15, %rsi
100013344:	ff 15 d6 98 02 00	callq	*170198(%rip) ## Objc message: -[%rdi filterDocumentType]
10001334a:	83 f8 03	cmpl	$3, %eax
10001334d:	0f 85 1d ff ff ff	jne	0x100013270
100013353:	48 8b 35 ae de 03 00	movq	253614(%rip), %rsi ## Objc selector ref: fileType
10001335a:	4c 8b 35 bf 98 02 00	movq	170175(%rip), %r14 ## Objc message: -[%rdi fileType]
100013361:	48 89 df	movq	%rbx, %rdi
100013364:	41 ff d6	callq	*%r14
100013367:	48 8b 35 1a e2 03 00	movq	254490(%rip), %rsi ## Objc selector ref: isEqualToString:
10001336e:	48 8d 15 2b a8 02 00	leaq	174123(%rip), %rdx ## Objc cfstring ref: @"com.ilm.openexr-image"
100013375:	48 89 c7	movq	%rax, %rdi
100013378:	41 ff d6	callq	*%r14
10001337b:	84 c0	testb	%al, %al
10001337d:	0f 94 c0	sete	%al
100013380:	eb 15	jmp	0x100013397
100013382:	48 8b 35 df e1 03 00	movq	254431(%rip), %rsi ## Objc selector ref: isEnabled
100013389:	4c 89 f7	movq	%r14, %rdi
10001338c:	ff 15 8e 98 02 00	callq	*170126(%rip) ## Objc message: -[%rdi isEnabled]
100013392:	84 c0	testb	%al, %al
100013394:	0f 95 c0	setne	%al
100013397:	0f be c0	movsbl	%al, %eax
10001339a:	48 83 c4 18	addq	$24, %rsp
10001339e:	5b	popq	%rbx
10001339f:	41 5c	popq	%r12
1000133a1:	41 5d	popq	%r13
1000133a3:	41 5e	popq	%r14
1000133a5:	41 5f	popq	%r15
1000133a7:	5d	popq	%rbp
1000133a8:	c3	retq
1000133a9:	48 8b 05 38 fa 03 00	movq	260664(%rip), %rax
1000133b0:	41 80 7c 05 00 01	cmpb	$1, (%r13,%rax)
1000133b6:	75 46	jne	0x1000133fe
1000133b8:	48 89 df	movq	%rbx, %rdi
1000133bb:	4c 8b 35 56 d8 03 00	movq	251990(%rip), %r14 ## Objc selector ref: action
1000133c2:	4c 89 f6	movq	%r14, %rsi
1000133c5:	ff 15 55 98 02 00	callq	*170069(%rip) ## Objc message: -[%rdi action]
1000133cb:	48 3b 05 be e7 03 00	cmpq	255934(%rip), %rax ## Objc selector ref: saveDocument:
1000133d2:	74 50	je	0x100013424
1000133d4:	48 89 df	movq	%rbx, %rdi
1000133d7:	4c 89 f6	movq	%r14, %rsi
1000133da:	ff 15 40 98 02 00	callq	*170048(%rip) ## Objc message: -[%rdi saveDocument:]
1000133e0:	48 3b 05 b1 e7 03 00	cmpq	255921(%rip), %rax ## Objc selector ref: saveDocumentAs:
1000133e7:	74 3b	je	0x100013424
1000133e9:	48 89 df	movq	%rbx, %rdi
1000133ec:	4c 89 f6	movq	%r14, %rsi
1000133ef:	ff 15 2b 98 02 00	callq	*170027(%rip) ## Objc message: -[%rdi saveDocumentAs:]
1000133f5:	48 3b 05 ec dd 03 00	cmpq	253420(%rip), %rax ## Objc selector ref: exportFilterDocument:
1000133fc:	74 26	je	0x100013424
1000133fe:	48 8d 7d c8	leaq	-56(%rbp), %rdi
100013402:	4c 89 2f	movq	%r13, (%rdi)
100013405:	48 8b 05 f4 f3 03 00	movq	259060(%rip), %rax ## Objc class ref: FilterDoc
10001340c:	48 89 47 08	movq	%rax, 8(%rdi)
100013410:	48 8b 35 91 f0 03 00	movq	258193(%rip), %rsi ## Objc selector ref: validateMenuItem:
100013417:	48 89 da	movq	%rbx, %rdx
10001341a:	e8 bd c0 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] validateMenuItem:]
10001341f:	e9 73 ff ff ff	jmp	0x100013397
100013424:	31 c0	xorl	%eax, %eax
100013426:	e9 6c ff ff ff	jmp	0x100013397
10001342b:	55	pushq	%rbp
10001342c:	48 89 e5	movq	%rsp, %rbp
10001342f:	41 57	pushq	%r15
100013431:	41 56	pushq	%r14
100013433:	41 55	pushq	%r13
100013435:	41 54	pushq	%r12
100013437:	53	pushq	%rbx
100013438:	50	pushq	%rax
100013439:	48 89 d3	movq	%rdx, %rbx
10001343c:	49 89 fe	movq	%rdi, %r14
10001343f:	4c 8b 3d 7a e1 03 00	movq	254330(%rip), %r15 ## Objc selector ref: itemIdentifier
100013446:	4c 8b 2d d3 97 02 00	movq	169939(%rip), %r13 ## Objc message: -[%rdi itemIdentifier]
10001344d:	48 89 d7	movq	%rdx, %rdi
100013450:	4c 89 fe	movq	%r15, %rsi
100013453:	41 ff d5	callq	*%r13
100013456:	4c 8b 25 13 e1 03 00	movq	254227(%rip), %r12 ## Objc selector ref: isEqual:
10001345d:	48 8d 15 3c ae 02 00	leaq	175676(%rip), %rdx ## Objc cfstring ref: @"Tone Mapping Item Identifier"
100013464:	48 89 c7	movq	%rax, %rdi
100013467:	4c 89 e6	movq	%r12, %rsi
10001346a:	41 ff d5	callq	*%r13
10001346d:	84 c0	testb	%al, %al
10001346f:	74 49	je	0x1000134ba
100013471:	48 8b 05 78 f9 03 00	movq	260472(%rip), %rax
100013478:	49 83 3c 06 00	cmpq	$0, (%r14,%rax)
10001347d:	75 37	jne	0x1000134b6
10001347f:	48 8b 35 82 e4 03 00	movq	255106(%rip), %rsi ## Objc selector ref: originalImage
100013486:	4c 89 f7	movq	%r14, %rdi
100013489:	ff 15 91 97 02 00	callq	*169873(%rip) ## Objc message: -[%rdi originalImage]
10001348f:	48 89 c3	movq	%rax, %rbx
100013492:	48 89 c7	movq	%rax, %rdi
100013495:	e8 9a bc 01 00	callq	0x10002f134 ## symbol stub for: _CGImageGetBitmapInfo
10001349a:	0f ba e0 08	btl	$8, %eax
10001349e:	73 16	jae	0x1000134b6
1000134a0:	48 89 df	movq	%rbx, %rdi
1000134a3:	e8 a4 bc 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
1000134a8:	48 89 c7	movq	%rax, %rdi
1000134ab:	e8 94 bb 01 00	callq	0x10002f044 ## symbol stub for: _CGColorSpaceUsesExtendedRange
1000134b0:	b1 01	movb	$1, %cl
1000134b2:	84 c0	testb	%al, %al
1000134b4:	75 34	jne	0x1000134ea
1000134b6:	31 c9	xorl	%ecx, %ecx
1000134b8:	eb 30	jmp	0x1000134ea
1000134ba:	48 89 df	movq	%rbx, %rdi
1000134bd:	4c 89 fe	movq	%r15, %rsi
1000134c0:	41 ff d5	callq	*%r13
1000134c3:	48 8d 15 f6 ad 02 00	leaq	175606(%rip), %rdx ## Objc cfstring ref: @"Image Correction Item Identifier"
1000134ca:	48 89 c7	movq	%rax, %rdi
1000134cd:	4c 89 e6	movq	%r12, %rsi
1000134d0:	41 ff d5	callq	*%r13
1000134d3:	84 c0	testb	%al, %al
1000134d5:	74 11	je	0x1000134e8
1000134d7:	48 8b 05 1a f9 03 00	movq	260378(%rip), %rax
1000134de:	49 83 3c 06 00	cmpq	$0, (%r14,%rax)
1000134e3:	0f 94 c1	sete	%cl
1000134e6:	eb 02	jmp	0x1000134ea
1000134e8:	b1 01	movb	$1, %cl
1000134ea:	0f b6 c1	movzbl	%cl, %eax
1000134ed:	48 83 c4 08	addq	$8, %rsp
1000134f1:	5b	popq	%rbx
1000134f2:	41 5c	popq	%r12
1000134f4:	41 5d	popq	%r13
1000134f6:	41 5e	popq	%r14
1000134f8:	41 5f	popq	%r15
1000134fa:	5d	popq	%rbp
1000134fb:	c3	retq
1000134fc:	55	pushq	%rbp
1000134fd:	48 89 e5	movq	%rsp, %rbp
100013500:	41 57	pushq	%r15
100013502:	41 56	pushq	%r14
100013504:	41 55	pushq	%r13
100013506:	41 54	pushq	%r12
100013508:	53	pushq	%rbx
100013509:	48 83 ec 78	subq	$120, %rsp
10001350d:	49 89 d6	movq	%rdx, %r14
100013510:	49 89 fd	movq	%rdi, %r13
100013513:	48 8b 3d e6 f8 03 00	movq	260326(%rip), %rdi
10001351a:	4c 01 ef	addq	%r13, %rdi
10001351d:	31 f6	xorl	%esi, %esi
10001351f:	e8 f4 bf 01 00	callq	0x10002f518 ## symbol stub for: _pthread_mutex_init
100013524:	48 8d 7d 80	leaq	-128(%rbp), %rdi
100013528:	4c 89 2f	movq	%r13, (%rdi)
10001352b:	48 8b 05 ce f2 03 00	movq	258766(%rip), %rax ## Objc class ref: FilterDoc
100013532:	48 89 47 08	movq	%rax, 8(%rdi)
100013536:	48 8b 35 db ef 03 00	movq	258011(%rip), %rsi ## Objc selector ref: windowControllerDidLoadNib:
10001353d:	4c 89 f2	movq	%r14, %rdx
100013540:	e8 97 bf 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] windowControllerDidLoadNib:]
100013545:	48 8b 35 dc ef 03 00	movq	258012(%rip), %rsi ## Objc selector ref: windowForSheet
10001354c:	4c 89 ef	movq	%r13, %rdi
10001354f:	ff 15 cb 96 02 00	callq	*169675(%rip) ## Objc message: -[%rdi windowForSheet]
100013555:	48 8b 0d ac f8 03 00	movq	260268(%rip), %rcx
10001355c:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100013561:	48 8b 1d a8 f8 03 00	movq	260264(%rip), %rbx
100013568:	4c 01 eb	addq	%r13, %rbx
10001356b:	4c 8b 35 a6 f8 03 00	movq	260262(%rip), %r14
100013572:	4b 8b 74 35 00	movq	(%r13,%r14), %rsi
100013577:	48 85 f6	testq	%rsi, %rsi
10001357a:	74 12	je	0x10001358e
10001357c:	48 8b 15 4d d8 03 00	movq	251981(%rip), %rdx ## Objc selector ref: bounds
100013583:	48 8d 7d 90	leaq	-112(%rbp), %rdi
100013587:	e8 56 bf 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001358c:	eb 0b	jmp	0x100013599
10001358e:	0f 57 c0	xorps	%xmm0, %xmm0
100013591:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
100013595:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
100013599:	0f 28 45 a0	movaps	-96(%rbp), %xmm0
10001359d:	0f 11 03	movups	%xmm0, (%rbx)
1000135a0:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000135a5:	48 8b 35 7c e8 03 00	movq	256124(%rip), %rsi ## Objc selector ref: setFilterDocObject:
1000135ac:	4c 8b 25 6d 96 02 00	movq	169581(%rip), %r12 ## Objc message: -[%rdi setFilterDocObject:]
1000135b3:	4c 89 ea	movq	%r13, %rdx
1000135b6:	41 ff d4	callq	*%r12
1000135b9:	48 8b 05 60 f8 03 00	movq	260192(%rip), %rax
1000135c0:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000135c5:	48 8b 35 ec db 03 00	movq	252908(%rip), %rsi ## Objc selector ref: enclosingScrollView
1000135cc:	41 ff d4	callq	*%r12
1000135cf:	48 8b 0d 52 f8 03 00	movq	260178(%rip), %rcx
1000135d6:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
1000135db:	48 8b 05 4e f8 03 00	movq	260174(%rip), %rax
1000135e2:	41 c7 44 05 00 00 00 80 3f	movl	$1065353216, (%r13,%rax)
1000135eb:	4c 8b 3d f6 f7 03 00	movq	260086(%rip), %r15
1000135f2:	43 c6 44 3d 00 00	movb	$0, (%r13,%r15)
1000135f8:	48 8b 3d c1 f0 03 00	movq	258241(%rip), %rdi ## Objc class ref: FilterDocExport
1000135ff:	e8 c0 be 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
100013604:	48 8b 0d 2d f8 03 00	movq	260141(%rip), %rcx
10001360b:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100013610:	4c 8b 35 31 dc 03 00	movq	252977(%rip), %r14 ## Objc selector ref: filterDocumentType
100013617:	4c 89 ef	movq	%r13, %rdi
10001361a:	4c 89 f6	movq	%r14, %rsi
10001361d:	41 ff d4	callq	*%r12
100013620:	83 f8 01	cmpl	$1, %eax
100013623:	0f 85 09 01 00 00	jne	0x100013732
100013629:	48 8b 35 10 dc 03 00	movq	252944(%rip), %rsi ## Objc selector ref: filterDocument
100013630:	4c 89 ef	movq	%r13, %rdi
100013633:	ff 15 e7 95 02 00	callq	*169447(%rip) ## Objc message: +[FilterDocExport filterDocument]
100013639:	49 89 c6	movq	%rax, %r14
10001363c:	48 89 c7	movq	%rax, %rdi
10001363f:	e8 86 bb 01 00	callq	0x10002f1ca ## symbol stub for: _CGPDFDocumentAllowsCopying
100013644:	84 c0	testb	%al, %al
100013646:	74 0c	je	0x100013654
100013648:	4c 89 f7	movq	%r14, %rdi
10001364b:	e8 a4 bb 01 00	callq	0x10002f1f4 ## symbol stub for: _CGPDFDocumentIsEncrypted
100013650:	84 c0	testb	%al, %al
100013652:	74 06	je	0x10001365a
100013654:	43 c6 44 3d 00 01	movb	$1, (%r13,%r15)
10001365a:	48 8b 05 df f7 03 00	movq	260063(%rip), %rax
100013661:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013666:	4c 8b 35 33 e8 03 00	movq	256051(%rip), %r14 ## Objc selector ref: setHidden:
10001366d:	4c 89 f6	movq	%r14, %rsi
100013670:	31 d2	xorl	%edx, %edx
100013672:	41 ff d4	callq	*%r12
100013675:	4c 8b 3d cc f7 03 00	movq	260044(%rip), %r15
10001367c:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100013681:	4c 89 f6	movq	%r14, %rsi
100013684:	31 d2	xorl	%edx, %edx
100013686:	41 ff d4	callq	*%r12
100013689:	48 8b 05 c0 f7 03 00	movq	260032(%rip), %rax
100013690:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013695:	4c 89 f6	movq	%r14, %rsi
100013698:	31 d2	xorl	%edx, %edx
10001369a:	41 ff d4	callq	*%r12
10001369d:	48 8b 05 b4 f7 03 00	movq	260020(%rip), %rax
1000136a4:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000136a9:	4c 89 f6	movq	%r14, %rsi
1000136ac:	ba 01 00 00 00	movl	$1, %edx
1000136b1:	41 ff d4	callq	*%r12
1000136b4:	48 8b 05 a5 f7 03 00	movq	260005(%rip), %rax
1000136bb:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000136c0:	4c 89 f6	movq	%r14, %rsi
1000136c3:	ba 01 00 00 00	movl	$1, %edx
1000136c8:	41 ff d4	callq	*%r12
1000136cb:	48 8b 05 96 f7 03 00	movq	259990(%rip), %rax
1000136d2:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000136d7:	4c 89 f6	movq	%r14, %rsi
1000136da:	ba 01 00 00 00	movl	$1, %edx
1000136df:	41 ff d4	callq	*%r12
1000136e2:	48 8b 05 f7 f6 03 00	movq	259831(%rip), %rax
1000136e9:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000136ee:	4c 89 f6	movq	%r14, %rsi
1000136f1:	ba 01 00 00 00	movl	$1, %edx
1000136f6:	41 ff d4	callq	*%r12
1000136f9:	4b 8b 74 3d 00	movq	(%r13,%r15), %rsi
1000136fe:	48 85 f6	testq	%rsi, %rsi
100013701:	0f 84 6b 02 00 00	je	0x100013972
100013707:	48 8b 15 92 db 03 00	movq	252818(%rip), %rdx ## Objc selector ref: frame
10001370e:	4c 8d 75 b0	leaq	-80(%rbp), %r14
100013712:	4c 89 f7	movq	%r14, %rdi
100013715:	e8 c8 bd 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001371a:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
100013720:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100013725:	f2 0f 58 05 2b 5b 02 00	addsd	154411(%rip), %xmm0
10001372d:	e9 55 02 00 00	jmp	0x100013987
100013732:	4c 89 ef	movq	%r13, %rdi
100013735:	4c 89 f6	movq	%r14, %rsi
100013738:	ff 15 e2 94 02 00	callq	*169186(%rip) ## Objc message: -[%rdi frame]
10001373e:	85 c0	testl	%eax, %eax
100013740:	0f 84 a5 02 00 00	je	0x1000139eb
100013746:	48 8b 05 f3 f6 03 00	movq	259827(%rip), %rax
10001374d:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013752:	4c 8b 35 47 e7 03 00	movq	255815(%rip), %r14 ## Objc selector ref: setHidden:
100013759:	4c 89 f6	movq	%r14, %rsi
10001375c:	ba 01 00 00 00	movl	$1, %edx
100013761:	41 ff d4	callq	*%r12
100013764:	48 8b 05 dd f6 03 00	movq	259805(%rip), %rax
10001376b:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013770:	4c 89 f6	movq	%r14, %rsi
100013773:	ba 01 00 00 00	movl	$1, %edx
100013778:	41 ff d4	callq	*%r12
10001377b:	48 8b 05 ce f6 03 00	movq	259790(%rip), %rax
100013782:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013787:	4c 89 f6	movq	%r14, %rsi
10001378a:	ba 01 00 00 00	movl	$1, %edx
10001378f:	41 ff d4	callq	*%r12
100013792:	48 8b 05 bf f6 03 00	movq	259775(%rip), %rax
100013799:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001379e:	4c 89 f6	movq	%r14, %rsi
1000137a1:	31 d2	xorl	%edx, %edx
1000137a3:	41 ff d4	callq	*%r12
1000137a6:	48 8b 05 b3 f6 03 00	movq	259763(%rip), %rax
1000137ad:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000137b2:	48 89 c3	movq	%rax, %rbx
1000137b5:	4c 89 f6	movq	%r14, %rsi
1000137b8:	31 d2	xorl	%edx, %edx
1000137ba:	41 ff d4	callq	*%r12
1000137bd:	48 8b 05 a4 f6 03 00	movq	259748(%rip), %rax
1000137c4:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000137c9:	4c 89 f6	movq	%r14, %rsi
1000137cc:	31 d2	xorl	%edx, %edx
1000137ce:	41 ff d4	callq	*%r12
1000137d1:	48 8b 05 08 f6 03 00	movq	259592(%rip), %rax
1000137d8:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000137dd:	4c 89 f6	movq	%r14, %rsi
1000137e0:	31 d2	xorl	%edx, %edx
1000137e2:	41 ff d4	callq	*%r12
1000137e5:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
1000137ea:	48 8b 1d 3f d6 03 00	movq	251455(%rip), %rbx ## Objc selector ref: cell
1000137f1:	48 89 de	movq	%rbx, %rsi
1000137f4:	41 ff d4	callq	*%r12
1000137f7:	4c 8b 3d 62 e7 03 00	movq	255842(%rip), %r15 ## Objc selector ref: setLineBreakMode:
1000137fe:	ba 04 00 00 00	movl	$4, %edx
100013803:	48 89 c7	movq	%rax, %rdi
100013806:	4c 89 fe	movq	%r15, %rsi
100013809:	41 ff d4	callq	*%r12
10001380c:	4c 8b 35 cd f5 03 00	movq	259533(%rip), %r14
100013813:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100013818:	48 89 de	movq	%rbx, %rsi
10001381b:	41 ff d4	callq	*%r12
10001381e:	ba 04 00 00 00	movl	$4, %edx
100013823:	48 89 c7	movq	%rax, %rdi
100013826:	4c 89 fe	movq	%r15, %rsi
100013829:	41 ff d4	callq	*%r12
10001382c:	48 8b 05 25 f6 03 00	movq	259621(%rip), %rax
100013833:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013838:	48 8b 1d d1 e3 03 00	movq	254929(%rip), %rbx ## Objc selector ref: selectItemWithTag:
10001383f:	ba 02 00 00 00	movl	$2, %edx
100013844:	48 89 de	movq	%rbx, %rsi
100013847:	41 ff d4	callq	*%r12
10001384a:	48 8b 05 0f f6 03 00	movq	259599(%rip), %rax
100013851:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013856:	48 89 de	movq	%rbx, %rsi
100013859:	31 d2	xorl	%edx, %edx
10001385b:	41 ff d4	callq	*%r12
10001385e:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100013863:	48 8b 35 de de 03 00	movq	253662(%rip), %rsi ## Objc selector ref: menu
10001386a:	41 ff d4	callq	*%r12
10001386d:	49 89 c7	movq	%rax, %r15
100013870:	48 8b 3d e9 ed 03 00	movq	257513(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMenuItem
100013877:	48 8b 35 e2 e3 03 00	movq	254946(%rip), %rsi ## Objc selector ref: separatorItem
10001387e:	41 ff d4	callq	*%r12
100013881:	48 8b 35 d0 d3 03 00	movq	250832(%rip), %rsi ## Objc selector ref: addItem:
100013888:	4c 89 ff	movq	%r15, %rdi
10001388b:	48 89 c2	movq	%rax, %rdx
10001388e:	41 ff d4	callq	*%r12
100013891:	4f 8b 7c 35 00	movq	(%r13,%r14), %r15
100013896:	48 8b 3d 03 ed 03 00	movq	257283(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001389d:	48 8b 35 44 de 03 00	movq	253508(%rip), %rsi ## Objc selector ref: mainBundle
1000138a4:	41 ff d4	callq	*%r12
1000138a7:	48 8b 35 b2 dd 03 00	movq	253362(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000138ae:	48 8d 15 0b a3 02 00	leaq	172811(%rip), %rdx ## Objc cfstring ref: @"Black Point Compensation"
1000138b5:	48 8d 0d e4 95 02 00	leaq	169444(%rip), %rcx ## Objc cfstring ref: @""
1000138bc:	48 89 c7	movq	%rax, %rdi
1000138bf:	45 31 c0	xorl	%r8d, %r8d
1000138c2:	41 ff d4	callq	*%r12
1000138c5:	48 8b 35 94 d3 03 00	movq	250772(%rip), %rsi ## Objc selector ref: addItemWithTitle:
1000138cc:	4c 89 ff	movq	%r15, %rdi
1000138cf:	48 89 c2	movq	%rax, %rdx
1000138d2:	41 ff d4	callq	*%r12
1000138d5:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000138da:	4c 8b 3d 07 dd 03 00	movq	253191(%rip), %r15 ## Objc selector ref: lastItem
1000138e1:	4c 89 fe	movq	%r15, %rsi
1000138e4:	41 ff d4	callq	*%r12
1000138e7:	48 8b 35 0a e8 03 00	movq	256010(%rip), %rsi ## Objc selector ref: setTag:
1000138ee:	ba 05 00 00 00	movl	$5, %edx
1000138f3:	48 89 c7	movq	%rax, %rdi
1000138f6:	41 ff d4	callq	*%r12
1000138f9:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000138fe:	4c 89 fe	movq	%r15, %rsi
100013901:	41 ff d4	callq	*%r12
100013904:	48 8b 35 d5 e7 03 00	movq	255957(%rip), %rsi ## Objc selector ref: setState:
10001390b:	48 89 c7	movq	%rax, %rdi
10001390e:	31 d2	xorl	%edx, %edx
100013910:	41 ff d4	callq	*%r12
100013913:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100013918:	4c 89 fe	movq	%r15, %rsi
10001391b:	41 ff d4	callq	*%r12
10001391e:	48 8b 35 cb e4 03 00	movq	255179(%rip), %rsi ## Objc selector ref: setEnabled:
100013925:	48 89 c7	movq	%rax, %rdi
100013928:	31 d2	xorl	%edx, %edx
10001392a:	41 ff d4	callq	*%r12
10001392d:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100013932:	48 89 de	movq	%rbx, %rsi
100013935:	31 d2	xorl	%edx, %edx
100013937:	41 ff d4	callq	*%r12
10001393a:	48 8b 05 2f f5 03 00	movq	259375(%rip), %rax
100013941:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
10001394a:	48 8b 05 0f f5 03 00	movq	259343(%rip), %rax
100013951:	49 8b 54 05 00	movq	(%r13,%rax), %rdx
100013956:	48 8b 35 db dc 03 00	movq	253147(%rip), %rsi ## Objc selector ref: loadProfiles:
10001395d:	4c 89 ef	movq	%r13, %rdi
100013960:	41 ff d4	callq	*%r12
100013963:	48 8b 35 f6 e6 03 00	movq	255734(%rip), %rsi ## Objc selector ref: setProfileMode
10001396a:	4c 89 ef	movq	%r13, %rdi
10001396d:	41 ff d4	callq	*%r12
100013970:	eb 79	jmp	0x1000139eb
100013972:	0f 57 c0	xorps	%xmm0, %xmm0
100013975:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100013979:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10001397d:	f2 0f 10 05 d3 58 02 00	movsd	153811(%rip), %xmm0
100013985:	31 ff	xorl	%edi, %edi
100013987:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
10001398c:	48 8b 35 c5 e4 03 00	movq	255173(%rip), %rsi ## Objc selector ref: setFrame:
100013993:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
100013997:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10001399b:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000139a0:	0f 11 04 24	movups	%xmm0, (%rsp)
1000139a4:	41 ff d4	callq	*%r12
1000139a7:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
1000139ac:	48 8b 35 7d d4 03 00	movq	251005(%rip), %rsi ## Objc selector ref: cell
1000139b3:	41 ff d4	callq	*%r12
1000139b6:	48 8b 35 a3 e5 03 00	movq	255395(%rip), %rsi ## Objc selector ref: setLineBreakMode:
1000139bd:	ba 04 00 00 00	movl	$4, %edx
1000139c2:	48 89 c7	movq	%rax, %rdi
1000139c5:	41 ff d4	callq	*%r12
1000139c8:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
1000139cd:	48 8b 35 34 e2 03 00	movq	254516(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
1000139d4:	31 d2	xorl	%edx, %edx
1000139d6:	41 ff d4	callq	*%r12
1000139d9:	4b 8b 54 3d 00	movq	(%r13,%r15), %rdx
1000139de:	48 8b 35 33 dc 03 00	movq	252979(%rip), %rsi ## Objc selector ref: loadFilters:
1000139e5:	4c 89 ef	movq	%r13, %rdi
1000139e8:	41 ff d4	callq	*%r12
1000139eb:	48 8b 35 a6 d2 03 00	movq	250534(%rip), %rsi ## Objc selector ref: addToolbarItems
1000139f2:	4c 89 ef	movq	%r13, %rdi
1000139f5:	41 ff d4	callq	*%r12
1000139f8:	48 8b 35 29 df 03 00	movq	253737(%rip), %rsi ## Objc selector ref: pageViewResizeRequest:
1000139ff:	f3 0f 10 05 8d 45 02 00	movss	148877(%rip), %xmm0
100013a07:	4c 89 ef	movq	%r13, %rdi
100013a0a:	41 ff d4	callq	*%r12
100013a0d:	48 8b 05 c4 f3 03 00	movq	259012(%rip), %rax
100013a14:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100013a19:	48 8b 35 98 db 03 00	movq	252824(%rip), %rsi ## Objc selector ref: itemAtIndex:
100013a20:	31 d2	xorl	%edx, %edx
100013a22:	41 ff d4	callq	*%r12
100013a25:	48 8b 35 a4 e9 03 00	movq	256420(%rip), %rsi ## Objc selector ref: title
100013a2c:	48 89 c7	movq	%rax, %rdi
100013a2f:	41 ff d4	callq	*%r12
100013a32:	48 89 c7	movq	%rax, %rdi
100013a35:	ff 15 25 92 02 00	callq	*168485(%rip) ## literal pool symbol address: _objc_retain
100013a3b:	48 8b 0d 6e f3 03 00	movq	258926(%rip), %rcx
100013a42:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100013a47:	48 8b 35 0a ea 03 00	movq	256522(%rip), %rsi ## Objc selector ref: updatePreview
100013a4e:	4c 89 ef	movq	%r13, %rdi
100013a51:	41 ff d4	callq	*%r12
100013a54:	48 8b 35 35 e4 03 00	movq	255029(%rip), %rsi ## Objc selector ref: setHasUndoManager:
100013a5b:	4c 89 ef	movq	%r13, %rdi
100013a5e:	ba 01 00 00 00	movl	$1, %edx
100013a63:	41 ff d4	callq	*%r12
100013a66:	48 8b 3d a3 eb 03 00	movq	256931(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100013a6d:	4c 8b 35 e4 d5 03 00	movq	251364(%rip), %r14 ## Objc selector ref: defaultCenter
100013a74:	4c 89 f6	movq	%r14, %rsi
100013a77:	41 ff d4	callq	*%r12
100013a7a:	48 8b 0d b7 d7 03 00	movq	251831(%rip), %rcx ## Objc selector ref: filterAddNotification:
100013a81:	48 8b 15 30 91 02 00	movq	168240(%rip), %rdx ## literal pool symbol address: _kQuartzFilterManagerDidAddFilterNotification
100013a88:	4c 8b 02	movq	(%rdx), %r8
100013a8b:	4c 8b 3d ee d1 03 00	movq	250350(%rip), %r15 ## Objc selector ref: addObserver:selector:name:object:
100013a92:	48 89 c7	movq	%rax, %rdi
100013a95:	4c 89 fe	movq	%r15, %rsi
100013a98:	4c 89 ea	movq	%r13, %rdx
100013a9b:	45 31 c9	xorl	%r9d, %r9d
100013a9e:	41 ff d4	callq	*%r12
100013aa1:	48 8b 3d 68 eb 03 00	movq	256872(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100013aa8:	4c 89 f6	movq	%r14, %rsi
100013aab:	41 ff d4	callq	*%r12
100013aae:	48 8b 0d a3 d7 03 00	movq	251811(%rip), %rcx ## Objc selector ref: filterRemoveNotification:
100013ab5:	48 8b 15 0c 91 02 00	movq	168204(%rip), %rdx ## literal pool symbol address: _kQuartzFilterManagerDidRemoveFilterNotification
100013abc:	4c 8b 02	movq	(%rdx), %r8
100013abf:	48 89 c7	movq	%rax, %rdi
100013ac2:	4c 89 fe	movq	%r15, %rsi
100013ac5:	4c 89 ea	movq	%r13, %rdx
100013ac8:	45 31 c9	xorl	%r9d, %r9d
100013acb:	41 ff d4	callq	*%r12
100013ace:	48 8b 3d 3b eb 03 00	movq	256827(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100013ad5:	4c 89 f6	movq	%r14, %rsi
100013ad8:	41 ff d4	callq	*%r12
100013adb:	48 8b 0d 86 d7 03 00	movq	251782(%rip), %rcx ## Objc selector ref: filterUpdateNotification:
100013ae2:	48 8b 15 d7 90 02 00	movq	168151(%rip), %rdx ## literal pool symbol address: _kQuartzFilterManagerDidModifyFilterNotification
100013ae9:	4c 8b 02	movq	(%rdx), %r8
100013aec:	48 89 c7	movq	%rax, %rdi
100013aef:	4c 89 fe	movq	%r15, %rsi
100013af2:	4c 89 ea	movq	%r13, %rdx
100013af5:	45 31 c9	xorl	%r9d, %r9d
100013af8:	41 ff d4	callq	*%r12
100013afb:	48 8b 3d 0e eb 03 00	movq	256782(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100013b02:	4c 89 f6	movq	%r14, %rsi
100013b05:	41 ff d4	callq	*%r12
100013b08:	48 8b 0d 51 d7 03 00	movq	251729(%rip), %rcx ## Objc selector ref: filterSelectNotification:
100013b0f:	48 8b 15 ba 90 02 00	movq	168122(%rip), %rdx ## literal pool symbol address: _kQuartzFilterManagerDidSelectFilterNotification
100013b16:	4c 8b 02	movq	(%rdx), %r8
100013b19:	48 89 c7	movq	%rax, %rdi
100013b1c:	4c 89 fe	movq	%r15, %rsi
100013b1f:	4c 89 ea	movq	%r13, %rdx
100013b22:	45 31 c9	xorl	%r9d, %r9d
100013b25:	41 ff d4	callq	*%r12
100013b28:	48 83 c4 78	addq	$120, %rsp
100013b2c:	5b	popq	%rbx
100013b2d:	41 5c	popq	%r12
100013b2f:	41 5d	popq	%r13
100013b31:	41 5e	popq	%r14
100013b33:	41 5f	popq	%r15
100013b35:	5d	popq	%rbp
100013b36:	c3	retq
100013b37:	55	pushq	%rbp
100013b38:	48 89 e5	movq	%rsp, %rbp
100013b3b:	41 57	pushq	%r15
100013b3d:	41 56	pushq	%r14
100013b3f:	53	pushq	%rbx
100013b40:	48 83 ec 18	subq	$24, %rsp
100013b44:	48 89 fb	movq	%rdi, %rbx
100013b47:	48 8b 05 aa f2 03 00	movq	258730(%rip), %rax
100013b4e:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
100013b53:	74 12	je	0x100013b67
100013b55:	48 8b 35 4c df 03 00	movq	253772(%rip), %rsi ## Objc selector ref: releaseToneMapping:
100013b5c:	48 89 df	movq	%rbx, %rdi
100013b5f:	31 d2	xorl	%edx, %edx
100013b61:	ff 15 b9 90 02 00	callq	*168121(%rip) ## Objc message: +[NSNotificationCenter releaseToneMapping:]
100013b67:	4c 8b 3d 82 f2 03 00	movq	258690(%rip), %r15
100013b6e:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100013b72:	4c 8b 35 17 d3 03 00	movq	250647(%rip), %r14 ## Objc selector ref: close
100013b79:	48 85 ff	testq	%rdi, %rdi
100013b7c:	74 11	je	0x100013b8f
100013b7e:	4c 89 f6	movq	%r14, %rsi
100013b81:	ff 15 99 90 02 00	callq	*168089(%rip) ## Objc message: -[%rdi close]
100013b87:	4a c7 04 3b 00 00 00 00	movq	$0, (%rbx,%r15)
100013b8f:	48 8b 05 82 f2 03 00	movq	258690(%rip), %rax
100013b96:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100013b9a:	48 8b 35 8f d9 03 00	movq	252303(%rip), %rsi ## Objc selector ref: invalidateFilterDoc
100013ba1:	ff 15 79 90 02 00	callq	*168057(%rip) ## Objc message: -[%rdi invalidateFilterDoc]
100013ba7:	48 8d 7d d8	leaq	-40(%rbp), %rdi
100013bab:	48 89 1f	movq	%rbx, (%rdi)
100013bae:	48 8b 05 4b ec 03 00	movq	257099(%rip), %rax ## Objc class ref: FilterDoc
100013bb5:	48 89 47 08	movq	%rax, 8(%rdi)
100013bb9:	4c 89 f6	movq	%r14, %rsi
100013bbc:	e8 1b b9 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] invalidateFilterDoc]
100013bc1:	48 83 c4 18	addq	$24, %rsp
100013bc5:	5b	popq	%rbx
100013bc6:	41 5e	popq	%r14
100013bc8:	41 5f	popq	%r15
100013bca:	5d	popq	%rbp
100013bcb:	c3	retq
100013bcc:	55	pushq	%rbp
100013bcd:	48 89 e5	movq	%rsp, %rbp
100013bd0:	41 57	pushq	%r15
100013bd2:	41 56	pushq	%r14
100013bd4:	41 55	pushq	%r13
100013bd6:	41 54	pushq	%r12
100013bd8:	53	pushq	%rbx
100013bd9:	48 83 ec 18	subq	$24, %rsp
100013bdd:	49 89 fc	movq	%rdi, %r12
100013be0:	48 8b 05 91 f2 03 00	movq	258705(%rip), %rax
100013be7:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100013beb:	48 8b 1d 6e 90 02 00	movq	168046(%rip), %rbx ## literal pool symbol address: _objc_retain
100013bf2:	ff d3	callq	*%rbx
100013bf4:	48 8b 05 85 f2 03 00	movq	258693(%rip), %rax
100013bfb:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100013bff:	48 8b 35 6a e6 03 00	movq	255594(%rip), %rsi ## Objc selector ref: sizeToFit
100013c06:	4c 8b 35 13 90 02 00	movq	167955(%rip), %r14 ## Objc message: -[%rdi sizeToFit]
100013c0d:	41 ff d6	callq	*%r14
100013c10:	48 8b 3d 51 ea 03 00	movq	256593(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableDictionary
100013c17:	48 8b 35 72 d4 03 00	movq	250994(%rip), %rsi ## Objc selector ref: dictionary
100013c1e:	41 ff d6	callq	*%r14
100013c21:	48 89 c7	movq	%rax, %rdi
100013c24:	ff d3	callq	*%rbx
100013c26:	48 89 45 c8	movq	%rax, -56(%rbp)
100013c2a:	48 8b 0d 77 f1 03 00	movq	258423(%rip), %rcx
100013c31:	49 89 04 0c	movq	%rax, (%r12,%rcx)
100013c35:	48 8b 3d 64 e9 03 00	movq	256356(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013c3c:	4c 8b 3d a5 da 03 00	movq	252581(%rip), %r15 ## Objc selector ref: mainBundle
100013c43:	4c 89 fe	movq	%r15, %rsi
100013c46:	41 ff d6	callq	*%r14
100013c49:	4c 8b 2d 10 da 03 00	movq	252432(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
100013c50:	48 8d 15 89 9f 02 00	leaq	171913(%rip), %rdx ## Objc cfstring ref: @"Utility Window"
100013c57:	48 8d 1d 42 92 02 00	leaq	168514(%rip), %rbx ## Objc cfstring ref: @""
100013c5e:	48 89 c7	movq	%rax, %rdi
100013c61:	4c 89 ee	movq	%r13, %rsi
100013c64:	48 89 d9	movq	%rbx, %rcx
100013c67:	45 31 c0	xorl	%r8d, %r8d
100013c6a:	41 ff d6	callq	*%r14
100013c6d:	48 89 45 d0	movq	%rax, -48(%rbp)
100013c71:	48 8b 3d 28 e9 03 00	movq	256296(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013c78:	4c 89 fe	movq	%r15, %rsi
100013c7b:	41 ff d6	callq	*%r14
100013c7e:	48 89 c7	movq	%rax, %rdi
100013c81:	4c 89 ee	movq	%r13, %rsi
100013c84:	48 8d 15 55 9f 02 00	leaq	171861(%rip), %rdx ## Objc cfstring ref: @"Utility Window"
100013c8b:	48 89 d9	movq	%rbx, %rcx
100013c8e:	45 31 c0	xorl	%r8d, %r8d
100013c91:	41 ff d6	callq	*%r14
100013c94:	48 89 c3	movq	%rax, %rbx
100013c97:	48 8b 3d 02 e9 03 00	movq	256258(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013c9e:	4c 89 fe	movq	%r15, %rsi
100013ca1:	41 ff d6	callq	*%r14
100013ca4:	48 8d 15 55 9f 02 00	leaq	171861(%rip), %rdx ## Objc cfstring ref: @"Show filter inspector"
100013cab:	48 89 c7	movq	%rax, %rdi
100013cae:	4c 89 ee	movq	%r13, %rsi
100013cb1:	48 8d 0d e8 91 02 00	leaq	168424(%rip), %rcx ## Objc cfstring ref: @""
100013cb8:	45 31 c0	xorl	%r8d, %r8d
100013cbb:	41 ff d6	callq	*%r14
100013cbe:	48 8d 35 1b a6 02 00	leaq	173595(%rip), %rsi ## Objc cfstring ref: @"Filter Inspector Item Identifier"
100013cc5:	48 8b 7d c8	movq	-56(%rbp), %rdi
100013cc9:	48 8b 55 d0	movq	-48(%rbp), %rdx
100013ccd:	48 89 d9	movq	%rbx, %rcx
100013cd0:	49 89 c0	movq	%rax, %r8
100013cd3:	4d 89 e1	movq	%r12, %r9
100013cd6:	e8 b7 08 00 00	callq	0x100014592
100013cdb:	48 85 c0	testq	%rax, %rax
100013cde:	74 49	je	0x100013d29
100013ce0:	48 89 c3	movq	%rax, %rbx
100013ce3:	4c 8b 3d be e1 03 00	movq	254398(%rip), %r15 ## Objc selector ref: setImage:
100013cea:	48 8b 3d c7 e8 03 00	movq	256199(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
100013cf1:	48 8b 35 f8 ce 03 00	movq	249592(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
100013cf8:	48 8d 15 21 9f 02 00	leaq	171809(%rip), %rdx ## Objc cfstring ref: @"camera.filters"
100013cff:	41 ff d6	callq	*%r14
100013d02:	48 8b 35 5f dc 03 00	movq	253023(%rip), %rsi ## Objc selector ref: performSelector:withObject:
100013d09:	48 89 df	movq	%rbx, %rdi
100013d0c:	4c 89 fa	movq	%r15, %rdx
100013d0f:	48 89 c1	movq	%rax, %rcx
100013d12:	41 ff d6	callq	*%r14
100013d15:	48 8b 15 2c e5 03 00	movq	255276(%rip), %rdx ## Objc selector ref: showInspector:
100013d1c:	48 8b 35 55 df 03 00	movq	253781(%rip), %rsi ## Objc selector ref: setAction:
100013d23:	48 89 df	movq	%rbx, %rdi
100013d26:	41 ff d6	callq	*%r14
100013d29:	48 8b 35 f0 db 03 00	movq	252912(%rip), %rsi ## Objc selector ref: pageCount
100013d30:	4c 89 e7	movq	%r12, %rdi
100013d33:	ff 15 e7 8e 02 00	callq	*167655(%rip) ## Objc message: +[NSImage pageCount]
100013d39:	48 83 f8 02	cmpq	$2, %rax
100013d3d:	0f 8c f7 02 00 00	jl	0x10001403a
100013d43:	48 8b 05 5e f0 03 00	movq	258142(%rip), %rax
100013d4a:	49 8b 04 04	movq	(%r12,%rax), %rax
100013d4e:	48 89 45 c8	movq	%rax, -56(%rbp)
100013d52:	48 8b 3d 47 e8 03 00	movq	256071(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013d59:	4c 8b 35 88 d9 03 00	movq	252296(%rip), %r14 ## Objc selector ref: mainBundle
100013d60:	4c 89 f6	movq	%r14, %rsi
100013d63:	4c 8b 2d b6 8e 02 00	movq	167606(%rip), %r13 ## Objc message: +[NSBundle mainBundle]
100013d6a:	41 ff d5	callq	*%r13
100013d6d:	48 8d 15 cc 9e 02 00	leaq	171724(%rip), %rdx ## Objc cfstring ref: @"Page Number"
100013d74:	48 8d 1d 25 91 02 00	leaq	168229(%rip), %rbx ## Objc cfstring ref: @""
100013d7b:	48 89 c7	movq	%rax, %rdi
100013d7e:	4c 8b 3d db d8 03 00	movq	252123(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100013d85:	4c 89 fe	movq	%r15, %rsi
100013d88:	48 89 d9	movq	%rbx, %rcx
100013d8b:	45 31 c0	xorl	%r8d, %r8d
100013d8e:	41 ff d5	callq	*%r13
100013d91:	48 89 45 d0	movq	%rax, -48(%rbp)
100013d95:	48 8b 3d 04 e8 03 00	movq	256004(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013d9c:	4c 89 f6	movq	%r14, %rsi
100013d9f:	41 ff d5	callq	*%r13
100013da2:	48 89 c7	movq	%rax, %rdi
100013da5:	4c 89 fe	movq	%r15, %rsi
100013da8:	48 8d 15 91 9e 02 00	leaq	171665(%rip), %rdx ## Objc cfstring ref: @"Page Number"
100013daf:	48 89 d9	movq	%rbx, %rcx
100013db2:	45 31 c0	xorl	%r8d, %r8d
100013db5:	41 ff d5	callq	*%r13
100013db8:	48 89 c3	movq	%rax, %rbx
100013dbb:	48 8b 3d de e7 03 00	movq	255966(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013dc2:	4c 89 f6	movq	%r14, %rsi
100013dc5:	41 ff d5	callq	*%r13
100013dc8:	48 8d 15 91 9e 02 00	leaq	171665(%rip), %rdx ## Objc cfstring ref: @"Enter the page number to view"
100013dcf:	48 89 c7	movq	%rax, %rdi
100013dd2:	4c 89 fe	movq	%r15, %rsi
100013dd5:	48 8d 0d c4 90 02 00	leaq	168132(%rip), %rcx ## Objc cfstring ref: @""
100013ddc:	45 31 c0	xorl	%r8d, %r8d
100013ddf:	41 ff d5	callq	*%r13
100013de2:	48 8d 35 17 a5 02 00	leaq	173335(%rip), %rsi ## Objc cfstring ref: @"Page Number Item Identifier"
100013de9:	48 8b 7d c8	movq	-56(%rbp), %rdi
100013ded:	48 8b 55 d0	movq	-48(%rbp), %rdx
100013df1:	48 89 d9	movq	%rbx, %rcx
100013df4:	49 89 c0	movq	%rax, %r8
100013df7:	4d 89 e1	movq	%r12, %r9
100013dfa:	e8 93 07 00 00	callq	0x100014592
100013dff:	48 85 c0	testq	%rax, %rax
100013e02:	74 22	je	0x100013e26
100013e04:	48 8b 15 4d e3 03 00	movq	254797(%rip), %rdx ## Objc selector ref: setView:
100013e0b:	48 8b 0d 66 f0 03 00	movq	258150(%rip), %rcx
100013e12:	49 8b 0c 0c	movq	(%r12,%rcx), %rcx
100013e16:	48 8b 35 4b db 03 00	movq	252747(%rip), %rsi ## Objc selector ref: performSelector:withObject:
100013e1d:	48 89 c7	movq	%rax, %rdi
100013e20:	ff 15 fa 8d 02 00	callq	*167418(%rip) ## Objc message: +[NSBundle performSelector:withObject:]
100013e26:	48 8b 05 7b ef 03 00	movq	257915(%rip), %rax
100013e2d:	49 8b 04 04	movq	(%r12,%rax), %rax
100013e31:	48 89 45 c8	movq	%rax, -56(%rbp)
100013e35:	48 8b 3d 64 e7 03 00	movq	255844(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013e3c:	4c 8b 35 a5 d8 03 00	movq	252069(%rip), %r14 ## Objc selector ref: mainBundle
100013e43:	4c 89 f6	movq	%r14, %rsi
100013e46:	4c 8b 2d d3 8d 02 00	movq	167379(%rip), %r13 ## Objc message: +[NSBundle mainBundle]
100013e4d:	41 ff d5	callq	*%r13
100013e50:	48 8d 15 29 9e 02 00	leaq	171561(%rip), %rdx ## Objc cfstring ref: @"Previous"
100013e57:	48 8d 1d 42 90 02 00	leaq	168002(%rip), %rbx ## Objc cfstring ref: @""
100013e5e:	48 89 c7	movq	%rax, %rdi
100013e61:	4c 8b 3d f8 d7 03 00	movq	251896(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100013e68:	4c 89 fe	movq	%r15, %rsi
100013e6b:	48 89 d9	movq	%rbx, %rcx
100013e6e:	45 31 c0	xorl	%r8d, %r8d
100013e71:	41 ff d5	callq	*%r13
100013e74:	48 89 45 d0	movq	%rax, -48(%rbp)
100013e78:	48 8b 3d 21 e7 03 00	movq	255777(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013e7f:	4c 89 f6	movq	%r14, %rsi
100013e82:	41 ff d5	callq	*%r13
100013e85:	48 89 c7	movq	%rax, %rdi
100013e88:	4c 89 fe	movq	%r15, %rsi
100013e8b:	48 8d 15 ee 9d 02 00	leaq	171502(%rip), %rdx ## Objc cfstring ref: @"Previous"
100013e92:	48 89 d9	movq	%rbx, %rcx
100013e95:	45 31 c0	xorl	%r8d, %r8d
100013e98:	41 ff d5	callq	*%r13
100013e9b:	48 89 c3	movq	%rax, %rbx
100013e9e:	48 8b 3d fb e6 03 00	movq	255739(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013ea5:	4c 89 f6	movq	%r14, %rsi
100013ea8:	41 ff d5	callq	*%r13
100013eab:	48 8d 15 ee 9d 02 00	leaq	171502(%rip), %rdx ## Objc cfstring ref: @"Go to previous page"
100013eb2:	48 89 c7	movq	%rax, %rdi
100013eb5:	4c 89 fe	movq	%r15, %rsi
100013eb8:	48 8d 0d e1 8f 02 00	leaq	167905(%rip), %rcx ## Objc cfstring ref: @""
100013ebf:	45 31 c0	xorl	%r8d, %r8d
100013ec2:	41 ff d5	callq	*%r13
100013ec5:	48 8d 35 54 a4 02 00	leaq	173140(%rip), %rsi ## Objc cfstring ref: @"Page Backward Item Identifier"
100013ecc:	48 8b 7d c8	movq	-56(%rbp), %rdi
100013ed0:	48 8b 55 d0	movq	-48(%rbp), %rdx
100013ed4:	48 89 d9	movq	%rbx, %rcx
100013ed7:	49 89 c0	movq	%rax, %r8
100013eda:	4d 89 e1	movq	%r12, %r9
100013edd:	e8 b0 06 00 00	callq	0x100014592
100013ee2:	48 85 c0	testq	%rax, %rax
100013ee5:	74 49	je	0x100013f30
100013ee7:	48 89 c3	movq	%rax, %rbx
100013eea:	4c 8b 35 b7 df 03 00	movq	253879(%rip), %r14 ## Objc selector ref: setImage:
100013ef1:	48 8b 3d c0 e6 03 00	movq	255680(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
100013ef8:	48 8b 35 f1 cc 03 00	movq	249073(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
100013eff:	48 8d 15 ba 9d 02 00	leaq	171450(%rip), %rdx ## Objc cfstring ref: @"arrowtriangle.left.square"
100013f06:	41 ff d5	callq	*%r13
100013f09:	48 8b 35 58 da 03 00	movq	252504(%rip), %rsi ## Objc selector ref: performSelector:withObject:
100013f10:	48 89 df	movq	%rbx, %rdi
100013f13:	4c 89 f2	movq	%r14, %rdx
100013f16:	48 89 c1	movq	%rax, %rcx
100013f19:	41 ff d5	callq	*%r13
100013f1c:	48 8b 15 cd d6 03 00	movq	251597(%rip), %rdx ## Objc selector ref: leftArrowAction:
100013f23:	48 8b 35 4e dd 03 00	movq	253262(%rip), %rsi ## Objc selector ref: setAction:
100013f2a:	48 89 df	movq	%rbx, %rdi
100013f2d:	41 ff d5	callq	*%r13
100013f30:	48 8b 05 71 ee 03 00	movq	257649(%rip), %rax
100013f37:	49 8b 04 04	movq	(%r12,%rax), %rax
100013f3b:	48 89 45 c8	movq	%rax, -56(%rbp)
100013f3f:	48 8b 3d 5a e6 03 00	movq	255578(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013f46:	4c 8b 35 9b d7 03 00	movq	251803(%rip), %r14 ## Objc selector ref: mainBundle
100013f4d:	4c 89 f6	movq	%r14, %rsi
100013f50:	41 ff d5	callq	*%r13
100013f53:	48 8d 15 86 9d 02 00	leaq	171398(%rip), %rdx ## Objc cfstring ref: @"Next"
100013f5a:	48 8d 1d 3f 8f 02 00	leaq	167743(%rip), %rbx ## Objc cfstring ref: @""
100013f61:	48 89 c7	movq	%rax, %rdi
100013f64:	4c 8b 3d f5 d6 03 00	movq	251637(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100013f6b:	4c 89 fe	movq	%r15, %rsi
100013f6e:	48 89 d9	movq	%rbx, %rcx
100013f71:	45 31 c0	xorl	%r8d, %r8d
100013f74:	41 ff d5	callq	*%r13
100013f77:	48 89 45 d0	movq	%rax, -48(%rbp)
100013f7b:	48 8b 3d 1e e6 03 00	movq	255518(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013f82:	4c 89 f6	movq	%r14, %rsi
100013f85:	41 ff d5	callq	*%r13
100013f88:	48 89 c7	movq	%rax, %rdi
100013f8b:	4c 89 fe	movq	%r15, %rsi
100013f8e:	48 8d 15 4b 9d 02 00	leaq	171339(%rip), %rdx ## Objc cfstring ref: @"Next"
100013f95:	48 89 d9	movq	%rbx, %rcx
100013f98:	45 31 c0	xorl	%r8d, %r8d
100013f9b:	41 ff d5	callq	*%r13
100013f9e:	48 89 c3	movq	%rax, %rbx
100013fa1:	48 8b 3d f8 e5 03 00	movq	255480(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100013fa8:	4c 89 f6	movq	%r14, %rsi
100013fab:	41 ff d5	callq	*%r13
100013fae:	48 8d 15 4b 9d 02 00	leaq	171339(%rip), %rdx ## Objc cfstring ref: @"Go to next page"
100013fb5:	48 89 c7	movq	%rax, %rdi
100013fb8:	4c 89 fe	movq	%r15, %rsi
100013fbb:	48 8d 0d de 8e 02 00	leaq	167646(%rip), %rcx ## Objc cfstring ref: @""
100013fc2:	45 31 c0	xorl	%r8d, %r8d
100013fc5:	41 ff d5	callq	*%r13
100013fc8:	48 8d 35 71 a3 02 00	leaq	172913(%rip), %rsi ## Objc cfstring ref: @"Page Forward Item Identifier"
100013fcf:	48 8b 7d c8	movq	-56(%rbp), %rdi
100013fd3:	48 8b 55 d0	movq	-48(%rbp), %rdx
100013fd7:	48 89 d9	movq	%rbx, %rcx
100013fda:	49 89 c0	movq	%rax, %r8
100013fdd:	4d 89 e1	movq	%r12, %r9
100013fe0:	e8 ad 05 00 00	callq	0x100014592
100013fe5:	48 85 c0	testq	%rax, %rax
100013fe8:	74 50	je	0x10001403a
100013fea:	48 89 c3	movq	%rax, %rbx
100013fed:	4c 8b 35 b4 de 03 00	movq	253620(%rip), %r14 ## Objc selector ref: setImage:
100013ff4:	48 8b 3d bd e5 03 00	movq	255421(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
100013ffb:	48 8b 35 ee cb 03 00	movq	248814(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
100014002:	48 8d 15 17 9d 02 00	leaq	171287(%rip), %rdx ## Objc cfstring ref: @"arrowtriangle.right.square"
100014009:	4c 8b 3d 10 8c 02 00	movq	166928(%rip), %r15 ## Objc message: +[NSImage _imageWithSystemSymbolName:]
100014010:	41 ff d7	callq	*%r15
100014013:	48 8b 35 4e d9 03 00	movq	252238(%rip), %rsi ## Objc selector ref: performSelector:withObject:
10001401a:	48 89 df	movq	%rbx, %rdi
10001401d:	4c 89 f2	movq	%r14, %rdx
100014020:	48 89 c1	movq	%rax, %rcx
100014023:	41 ff d7	callq	*%r15
100014026:	48 8b 15 33 db 03 00	movq	252723(%rip), %rdx ## Objc selector ref: rightArrowAction:
10001402d:	48 8b 35 44 dc 03 00	movq	252996(%rip), %rsi ## Objc selector ref: setAction:
100014034:	48 89 df	movq	%rbx, %rdi
100014037:	41 ff d7	callq	*%r15
10001403a:	48 8b 05 a7 ed 03 00	movq	257447(%rip), %rax
100014041:	41 80 3c 04 00	cmpb	$0, (%r12,%rax)
100014046:	74 62	je	0x1000140aa
100014048:	48 8b 05 59 ed 03 00	movq	257369(%rip), %rax
10001404f:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100014053:	48 8d 35 06 a3 02 00	leaq	172806(%rip), %rsi ## Objc cfstring ref: @"Security Lock Item Identifier"
10001405a:	31 d2	xorl	%edx, %edx
10001405c:	31 c9	xorl	%ecx, %ecx
10001405e:	45 31 c0	xorl	%r8d, %r8d
100014061:	4d 89 e1	movq	%r12, %r9
100014064:	e8 29 05 00 00	callq	0x100014592
100014069:	48 85 c0	testq	%rax, %rax
10001406c:	74 3c	je	0x1000140aa
10001406e:	48 89 c3	movq	%rax, %rbx
100014071:	4c 8b 35 30 de 03 00	movq	253488(%rip), %r14 ## Objc selector ref: setImage:
100014078:	48 8b 3d 39 e5 03 00	movq	255289(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
10001407f:	48 8b 35 6a cb 03 00	movq	248682(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
100014086:	48 8d 15 b3 9c 02 00	leaq	171187(%rip), %rdx ## Objc cfstring ref: @"lock"
10001408d:	4c 8b 3d 8c 8b 02 00	movq	166796(%rip), %r15 ## Objc message: +[NSImage _imageWithSystemSymbolName:]
100014094:	41 ff d7	callq	*%r15
100014097:	48 8b 35 ca d8 03 00	movq	252106(%rip), %rsi ## Objc selector ref: performSelector:withObject:
10001409e:	48 89 df	movq	%rbx, %rdi
1000140a1:	4c 89 f2	movq	%r14, %rdx
1000140a4:	48 89 c1	movq	%rax, %rcx
1000140a7:	41 ff d7	callq	*%r15
1000140aa:	48 8b 1d 97 d1 03 00	movq	250263(%rip), %rbx ## Objc selector ref: filterDocumentType
1000140b1:	4c 89 e7	movq	%r12, %rdi
1000140b4:	48 89 de	movq	%rbx, %rsi
1000140b7:	ff 15 63 8b 02 00	callq	*166755(%rip) ## Objc message: -[%rdi filterDocumentType]
1000140bd:	83 f8 02	cmpl	$2, %eax
1000140c0:	74 15	je	0x1000140d7
1000140c2:	4c 89 e7	movq	%r12, %rdi
1000140c5:	48 89 de	movq	%rbx, %rsi
1000140c8:	ff 15 52 8b 02 00	callq	*166738(%rip) ## Objc message: -[%rdi filterDocumentType]
1000140ce:	83 f8 03	cmpl	$3, %eax
1000140d1:	0f 85 21 04 00 00	jne	0x1000144f8
1000140d7:	48 8b 05 ca ec 03 00	movq	257226(%rip), %rax
1000140de:	49 8b 04 04	movq	(%r12,%rax), %rax
1000140e2:	48 89 45 d0	movq	%rax, -48(%rbp)
1000140e6:	48 8b 3d b3 e4 03 00	movq	255155(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000140ed:	4c 8b 2d f4 d5 03 00	movq	251380(%rip), %r13 ## Objc selector ref: mainBundle
1000140f4:	4c 89 ee	movq	%r13, %rsi
1000140f7:	4c 8b 35 22 8b 02 00	movq	166690(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
1000140fe:	41 ff d6	callq	*%r14
100014101:	4c 89 65 c8	movq	%r12, -56(%rbp)
100014105:	48 8d 1d 54 9c 02 00	leaq	171092(%rip), %rbx ## Objc cfstring ref: @"Image Info"
10001410c:	4c 8d 3d 8d 8d 02 00	leaq	167309(%rip), %r15 ## Objc cfstring ref: @""
100014113:	48 89 c7	movq	%rax, %rdi
100014116:	4c 8b 25 43 d5 03 00	movq	251203(%rip), %r12 ## Objc selector ref: localizedStringForKey:value:table:
10001411d:	4c 89 e6	movq	%r12, %rsi
100014120:	48 89 da	movq	%rbx, %rdx
100014123:	4c 89 f9	movq	%r15, %rcx
100014126:	45 31 c0	xorl	%r8d, %r8d
100014129:	41 ff d6	callq	*%r14
10001412c:	48 89 45 c0	movq	%rax, -64(%rbp)
100014130:	48 8b 3d 69 e4 03 00	movq	255081(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014137:	4c 89 ee	movq	%r13, %rsi
10001413a:	41 ff d6	callq	*%r14
10001413d:	48 89 c7	movq	%rax, %rdi
100014140:	4c 89 e6	movq	%r12, %rsi
100014143:	48 89 da	movq	%rbx, %rdx
100014146:	4c 89 f9	movq	%r15, %rcx
100014149:	45 31 c0	xorl	%r8d, %r8d
10001414c:	41 ff d6	callq	*%r14
10001414f:	48 89 c3	movq	%rax, %rbx
100014152:	48 8b 3d 47 e4 03 00	movq	255047(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014159:	4c 89 ee	movq	%r13, %rsi
10001415c:	41 ff d6	callq	*%r14
10001415f:	48 89 c7	movq	%rax, %rdi
100014162:	4c 89 e6	movq	%r12, %rsi
100014165:	48 8d 15 f4 9b 02 00	leaq	170996(%rip), %rdx ## Objc cfstring ref: @"Image Info"
10001416c:	4c 8b 65 c8	movq	-56(%rbp), %r12
100014170:	4c 89 f9	movq	%r15, %rcx
100014173:	45 31 c0	xorl	%r8d, %r8d
100014176:	41 ff d6	callq	*%r14
100014179:	48 8d 35 00 a2 02 00	leaq	172544(%rip), %rsi ## Objc cfstring ref: @"Image Info Item Identifier"
100014180:	48 8b 7d d0	movq	-48(%rbp), %rdi
100014184:	48 8b 55 c0	movq	-64(%rbp), %rdx
100014188:	48 89 d9	movq	%rbx, %rcx
10001418b:	49 89 c0	movq	%rax, %r8
10001418e:	4d 89 e1	movq	%r12, %r9
100014191:	e8 fc 03 00 00	callq	0x100014592
100014196:	48 85 c0	testq	%rax, %rax
100014199:	74 49	je	0x1000141e4
10001419b:	48 89 c3	movq	%rax, %rbx
10001419e:	4c 8b 3d 03 dd 03 00	movq	253187(%rip), %r15 ## Objc selector ref: setImage:
1000141a5:	48 8b 3d 0c e4 03 00	movq	254988(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
1000141ac:	48 8b 35 3d ca 03 00	movq	248381(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
1000141b3:	48 8d 15 c6 9b 02 00	leaq	170950(%rip), %rdx ## Objc cfstring ref: @"info.circle"
1000141ba:	41 ff d6	callq	*%r14
1000141bd:	48 8b 35 a4 d7 03 00	movq	251812(%rip), %rsi ## Objc selector ref: performSelector:withObject:
1000141c4:	48 89 df	movq	%rbx, %rdi
1000141c7:	4c 89 fa	movq	%r15, %rdx
1000141ca:	48 89 c1	movq	%rax, %rcx
1000141cd:	41 ff d6	callq	*%r14
1000141d0:	48 8b 15 a9 d1 03 00	movq	250281(%rip), %rdx ## Objc selector ref: imageInfoAction:
1000141d7:	48 8b 35 9a da 03 00	movq	252570(%rip), %rsi ## Objc selector ref: setAction:
1000141de:	48 89 df	movq	%rbx, %rdi
1000141e1:	41 ff d6	callq	*%r14
1000141e4:	48 8b 05 bd eb 03 00	movq	256957(%rip), %rax
1000141eb:	49 8b 04 04	movq	(%r12,%rax), %rax
1000141ef:	48 89 45 d0	movq	%rax, -48(%rbp)
1000141f3:	48 8b 3d a6 e3 03 00	movq	254886(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000141fa:	4d 89 e7	movq	%r12, %r15
1000141fd:	4c 8b 25 e4 d4 03 00	movq	251108(%rip), %r12 ## Objc selector ref: mainBundle
100014204:	4c 89 e6	movq	%r12, %rsi
100014207:	41 ff d6	callq	*%r14
10001420a:	48 8d 15 8f 9b 02 00	leaq	170895(%rip), %rdx ## Objc cfstring ref: @"Image Size"
100014211:	48 8d 1d 88 8c 02 00	leaq	167048(%rip), %rbx ## Objc cfstring ref: @""
100014218:	48 89 c7	movq	%rax, %rdi
10001421b:	4c 8b 2d 3e d4 03 00	movq	250942(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
100014222:	4c 89 ee	movq	%r13, %rsi
100014225:	48 89 d9	movq	%rbx, %rcx
100014228:	45 31 c0	xorl	%r8d, %r8d
10001422b:	41 ff d6	callq	*%r14
10001422e:	48 89 45 c0	movq	%rax, -64(%rbp)
100014232:	48 8b 3d 67 e3 03 00	movq	254823(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014239:	4c 89 e6	movq	%r12, %rsi
10001423c:	41 ff d6	callq	*%r14
10001423f:	48 89 c7	movq	%rax, %rdi
100014242:	4c 89 ee	movq	%r13, %rsi
100014245:	48 8d 15 54 9b 02 00	leaq	170836(%rip), %rdx ## Objc cfstring ref: @"Image Size"
10001424c:	48 89 d9	movq	%rbx, %rcx
10001424f:	45 31 c0	xorl	%r8d, %r8d
100014252:	41 ff d6	callq	*%r14
100014255:	48 89 c3	movq	%rax, %rbx
100014258:	48 8b 3d 41 e3 03 00	movq	254785(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001425f:	4c 89 e6	movq	%r12, %rsi
100014262:	4d 89 fc	movq	%r15, %r12
100014265:	41 ff d6	callq	*%r14
100014268:	48 8d 15 51 9b 02 00	leaq	170833(%rip), %rdx ## Objc cfstring ref: @"Adjust Image Size"
10001426f:	48 89 c7	movq	%rax, %rdi
100014272:	4c 89 ee	movq	%r13, %rsi
100014275:	48 8d 0d 24 8c 02 00	leaq	166948(%rip), %rcx ## Objc cfstring ref: @""
10001427c:	45 31 c0	xorl	%r8d, %r8d
10001427f:	41 ff d6	callq	*%r14
100014282:	48 8d 35 17 a1 02 00	leaq	172311(%rip), %rsi ## Objc cfstring ref: @"Image Size Item Identifier"
100014289:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001428d:	48 8b 55 c0	movq	-64(%rbp), %rdx
100014291:	48 89 d9	movq	%rbx, %rcx
100014294:	49 89 c0	movq	%rax, %r8
100014297:	4d 89 f9	movq	%r15, %r9
10001429a:	e8 f3 02 00 00	callq	0x100014592
10001429f:	48 85 c0	testq	%rax, %rax
1000142a2:	74 49	je	0x1000142ed
1000142a4:	48 89 c3	movq	%rax, %rbx
1000142a7:	4c 8b 3d fa db 03 00	movq	252922(%rip), %r15 ## Objc selector ref: setImage:
1000142ae:	48 8b 3d 03 e3 03 00	movq	254723(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
1000142b5:	48 8b 35 34 c9 03 00	movq	248116(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
1000142bc:	48 8d 15 1d 9b 02 00	leaq	170781(%rip), %rdx ## Objc cfstring ref: @"aspectratio"
1000142c3:	41 ff d6	callq	*%r14
1000142c6:	48 8b 35 9b d6 03 00	movq	251547(%rip), %rsi ## Objc selector ref: performSelector:withObject:
1000142cd:	48 89 df	movq	%rbx, %rdi
1000142d0:	4c 89 fa	movq	%r15, %rdx
1000142d3:	48 89 c1	movq	%rax, %rcx
1000142d6:	41 ff d6	callq	*%r14
1000142d9:	48 8b 15 c0 d0 03 00	movq	250048(%rip), %rdx ## Objc selector ref: imageSizeAction:
1000142e0:	48 8b 35 91 d9 03 00	movq	252305(%rip), %rsi ## Objc selector ref: setAction:
1000142e7:	48 89 df	movq	%rbx, %rdi
1000142ea:	41 ff d6	callq	*%r14
1000142ed:	48 8b 05 b4 ea 03 00	movq	256692(%rip), %rax
1000142f4:	49 8b 04 04	movq	(%r12,%rax), %rax
1000142f8:	48 89 45 d0	movq	%rax, -48(%rbp)
1000142fc:	48 8b 3d 9d e2 03 00	movq	254621(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014303:	4c 8b 3d de d3 03 00	movq	250846(%rip), %r15 ## Objc selector ref: mainBundle
10001430a:	4c 89 fe	movq	%r15, %rsi
10001430d:	41 ff d6	callq	*%r14
100014310:	48 8d 1d e9 9a 02 00	leaq	170729(%rip), %rbx ## Objc cfstring ref: @"Image Correction"
100014317:	4c 8d 25 82 8b 02 00	leaq	166786(%rip), %r12 ## Objc cfstring ref: @""
10001431e:	48 89 c7	movq	%rax, %rdi
100014321:	4c 8b 2d 38 d3 03 00	movq	250680(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
100014328:	4c 89 ee	movq	%r13, %rsi
10001432b:	48 89 da	movq	%rbx, %rdx
10001432e:	4c 89 e1	movq	%r12, %rcx
100014331:	45 31 c0	xorl	%r8d, %r8d
100014334:	41 ff d6	callq	*%r14
100014337:	48 89 45 c0	movq	%rax, -64(%rbp)
10001433b:	48 8b 3d 5e e2 03 00	movq	254558(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014342:	4c 89 fe	movq	%r15, %rsi
100014345:	41 ff d6	callq	*%r14
100014348:	48 89 c7	movq	%rax, %rdi
10001434b:	4c 89 ee	movq	%r13, %rsi
10001434e:	48 89 da	movq	%rbx, %rdx
100014351:	4c 89 e1	movq	%r12, %rcx
100014354:	45 31 c0	xorl	%r8d, %r8d
100014357:	41 ff d6	callq	*%r14
10001435a:	48 89 c3	movq	%rax, %rbx
10001435d:	48 8b 3d 3c e2 03 00	movq	254524(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014364:	4c 89 fe	movq	%r15, %rsi
100014367:	41 ff d6	callq	*%r14
10001436a:	48 89 c7	movq	%rax, %rdi
10001436d:	4c 89 ee	movq	%r13, %rsi
100014370:	48 8d 15 89 9a 02 00	leaq	170633(%rip), %rdx ## Objc cfstring ref: @"Image Correction"
100014377:	4c 89 e1	movq	%r12, %rcx
10001437a:	45 31 c0	xorl	%r8d, %r8d
10001437d:	41 ff d6	callq	*%r14
100014380:	48 8d 35 39 9f 02 00	leaq	171833(%rip), %rsi ## Objc cfstring ref: @"Image Correction Item Identifier"
100014387:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001438b:	48 8b 55 c0	movq	-64(%rbp), %rdx
10001438f:	4c 8b 7d c8	movq	-56(%rbp), %r15
100014393:	48 89 d9	movq	%rbx, %rcx
100014396:	49 89 c0	movq	%rax, %r8
100014399:	4d 89 f9	movq	%r15, %r9
10001439c:	e8 f1 01 00 00	callq	0x100014592
1000143a1:	48 85 c0	testq	%rax, %rax
1000143a4:	74 49	je	0x1000143ef
1000143a6:	48 89 c3	movq	%rax, %rbx
1000143a9:	4c 8b 25 f8 da 03 00	movq	252664(%rip), %r12 ## Objc selector ref: setImage:
1000143b0:	48 8b 3d 01 e2 03 00	movq	254465(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
1000143b7:	48 8b 35 32 c8 03 00	movq	247858(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
1000143be:	48 8d 15 5b 9a 02 00	leaq	170587(%rip), %rdx ## Objc cfstring ref: @"slider.horizontal.3"
1000143c5:	41 ff d6	callq	*%r14
1000143c8:	48 8b 35 99 d5 03 00	movq	251289(%rip), %rsi ## Objc selector ref: performSelector:withObject:
1000143cf:	48 89 df	movq	%rbx, %rdi
1000143d2:	4c 89 e2	movq	%r12, %rdx
1000143d5:	48 89 c1	movq	%rax, %rcx
1000143d8:	41 ff d6	callq	*%r14
1000143db:	48 8b 15 7e cf 03 00	movq	249726(%rip), %rdx ## Objc selector ref: imageCorrectionAction:
1000143e2:	48 8b 35 8f d8 03 00	movq	252047(%rip), %rsi ## Objc selector ref: setAction:
1000143e9:	48 89 df	movq	%rbx, %rdi
1000143ec:	41 ff d6	callq	*%r14
1000143ef:	48 8b 05 b2 e9 03 00	movq	256434(%rip), %rax
1000143f6:	49 8b 04 07	movq	(%r15,%rax), %rax
1000143fa:	48 89 45 d0	movq	%rax, -48(%rbp)
1000143fe:	48 8b 3d 9b e1 03 00	movq	254363(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014405:	4c 8b 3d dc d2 03 00	movq	250588(%rip), %r15 ## Objc selector ref: mainBundle
10001440c:	4c 89 fe	movq	%r15, %rsi
10001440f:	41 ff d6	callq	*%r14
100014412:	48 8d 1d 27 9a 02 00	leaq	170535(%rip), %rbx ## Objc cfstring ref: @"Tone Mapping"
100014419:	4c 8d 25 80 8a 02 00	leaq	166528(%rip), %r12 ## Objc cfstring ref: @""
100014420:	48 89 c7	movq	%rax, %rdi
100014423:	4c 8b 2d 36 d2 03 00	movq	250422(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
10001442a:	4c 89 ee	movq	%r13, %rsi
10001442d:	48 89 da	movq	%rbx, %rdx
100014430:	4c 89 e1	movq	%r12, %rcx
100014433:	45 31 c0	xorl	%r8d, %r8d
100014436:	41 ff d6	callq	*%r14
100014439:	48 89 45 c0	movq	%rax, -64(%rbp)
10001443d:	48 8b 3d 5c e1 03 00	movq	254300(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014444:	4c 89 fe	movq	%r15, %rsi
100014447:	41 ff d6	callq	*%r14
10001444a:	48 89 c7	movq	%rax, %rdi
10001444d:	4c 89 ee	movq	%r13, %rsi
100014450:	48 89 da	movq	%rbx, %rdx
100014453:	4c 89 e1	movq	%r12, %rcx
100014456:	45 31 c0	xorl	%r8d, %r8d
100014459:	41 ff d6	callq	*%r14
10001445c:	48 89 c3	movq	%rax, %rbx
10001445f:	48 8b 3d 3a e1 03 00	movq	254266(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014466:	4c 89 fe	movq	%r15, %rsi
100014469:	41 ff d6	callq	*%r14
10001446c:	48 89 c7	movq	%rax, %rdi
10001446f:	4c 89 ee	movq	%r13, %rsi
100014472:	48 8d 15 c7 99 02 00	leaq	170439(%rip), %rdx ## Objc cfstring ref: @"Tone Mapping"
100014479:	4c 89 e1	movq	%r12, %rcx
10001447c:	45 31 c0	xorl	%r8d, %r8d
10001447f:	41 ff d6	callq	*%r14
100014482:	48 8d 35 17 9e 02 00	leaq	171543(%rip), %rsi ## Objc cfstring ref: @"Tone Mapping Item Identifier"
100014489:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001448d:	48 8b 55 c0	movq	-64(%rbp), %rdx
100014491:	4c 8b 65 c8	movq	-56(%rbp), %r12
100014495:	48 89 d9	movq	%rbx, %rcx
100014498:	49 89 c0	movq	%rax, %r8
10001449b:	4d 89 e1	movq	%r12, %r9
10001449e:	e8 ef 00 00 00	callq	0x100014592
1000144a3:	48 85 c0	testq	%rax, %rax
1000144a6:	74 50	je	0x1000144f8
1000144a8:	48 89 c3	movq	%rax, %rbx
1000144ab:	4c 8b 35 f6 d9 03 00	movq	252406(%rip), %r14 ## Objc selector ref: setImage:
1000144b2:	48 8b 3d ff e0 03 00	movq	254207(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSImage
1000144b9:	48 8b 35 30 c7 03 00	movq	247600(%rip), %rsi ## Objc selector ref: _imageWithSystemSymbolName:
1000144c0:	48 8d 15 99 99 02 00	leaq	170393(%rip), %rdx ## Objc cfstring ref: @"slider.horizontal.below.rectangle"
1000144c7:	4c 8b 3d 52 87 02 00	movq	165714(%rip), %r15 ## Objc message: +[NSImage _imageWithSystemSymbolName:]
1000144ce:	41 ff d7	callq	*%r15
1000144d1:	48 8b 35 90 d4 03 00	movq	251024(%rip), %rsi ## Objc selector ref: performSelector:withObject:
1000144d8:	48 89 df	movq	%rbx, %rdi
1000144db:	4c 89 f2	movq	%r14, %rdx
1000144de:	48 89 c1	movq	%rax, %rcx
1000144e1:	41 ff d7	callq	*%r15
1000144e4:	48 8b 15 f5 de 03 00	movq	253685(%rip), %rdx ## Objc selector ref: toneMappingAction:
1000144eb:	48 8b 35 86 d7 03 00	movq	251782(%rip), %rsi ## Objc selector ref: setAction:
1000144f2:	48 89 df	movq	%rbx, %rdi
1000144f5:	41 ff d7	callq	*%r15
1000144f8:	48 8b 3d 99 e0 03 00	movq	254105(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSToolbar
1000144ff:	e8 ba af 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100014504:	48 8b 35 5d cf 03 00	movq	249693(%rip), %rsi ## Objc selector ref: initWithIdentifier:
10001450b:	48 8d 15 6e 99 02 00	leaq	170350(%rip), %rdx ## Objc cfstring ref: @"Toolbar Identifier"
100014512:	48 89 c7	movq	%rax, %rdi
100014515:	4c 8b 35 04 87 02 00	movq	165636(%rip), %r14 ## Objc message: +[NSToolbar initWithIdentifier:]
10001451c:	41 ff d6	callq	*%r14
10001451f:	48 89 c7	movq	%rax, %rdi
100014522:	e8 a3 af 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100014527:	48 89 c3	movq	%rax, %rbx
10001452a:	48 8b 35 67 d7 03 00	movq	251751(%rip), %rsi ## Objc selector ref: setAllowsUserCustomization:
100014531:	48 89 c7	movq	%rax, %rdi
100014534:	31 d2	xorl	%edx, %edx
100014536:	41 ff d6	callq	*%r14
100014539:	48 8b 35 80 d7 03 00	movq	251776(%rip), %rsi ## Objc selector ref: setAutosavesConfiguration:
100014540:	48 89 df	movq	%rbx, %rdi
100014543:	31 d2	xorl	%edx, %edx
100014545:	41 ff d6	callq	*%r14
100014548:	48 8b 35 49 d8 03 00	movq	251977(%rip), %rsi ## Objc selector ref: setDisplayMode:
10001454f:	ba 02 00 00 00	movl	$2, %edx
100014554:	48 89 df	movq	%rbx, %rdi
100014557:	41 ff d6	callq	*%r14
10001455a:	48 8b 35 27 d8 03 00	movq	251943(%rip), %rsi ## Objc selector ref: setDelegate:
100014561:	48 89 df	movq	%rbx, %rdi
100014564:	4c 89 e2	movq	%r12, %rdx
100014567:	41 ff d6	callq	*%r14
10001456a:	48 8b 05 97 e8 03 00	movq	256151(%rip), %rax
100014571:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100014575:	48 8b 35 ac db 03 00	movq	252844(%rip), %rsi ## Objc selector ref: setToolbar:
10001457c:	48 89 da	movq	%rbx, %rdx
10001457f:	4c 89 f0	movq	%r14, %rax
100014582:	48 83 c4 18	addq	$24, %rsp
100014586:	5b	popq	%rbx
100014587:	41 5c	popq	%r12
100014589:	41 5d	popq	%r13
10001458b:	41 5e	popq	%r14
10001458d:	41 5f	popq	%r15
10001458f:	5d	popq	%rbp
100014590:	ff e0	jmpq	*%rax
100014592:	55	pushq	%rbp
100014593:	48 89 e5	movq	%rsp, %rbp
100014596:	41 57	pushq	%r15
100014598:	41 56	pushq	%r14
10001459a:	41 55	pushq	%r13
10001459c:	41 54	pushq	%r12
10001459e:	53	pushq	%rbx
10001459f:	48 83 ec 18	subq	$24, %rsp
1000145a3:	4c 89 4d c8	movq	%r9, -56(%rbp)
1000145a7:	4c 89 45 d0	movq	%r8, -48(%rbp)
1000145ab:	49 89 ce	movq	%rcx, %r14
1000145ae:	49 89 d7	movq	%rdx, %r15
1000145b1:	49 89 f5	movq	%rsi, %r13
1000145b4:	48 89 7d c0	movq	%rdi, -64(%rbp)
1000145b8:	48 8b 3d e9 df 03 00	movq	253929(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSToolbarItem
1000145bf:	e8 fa ae 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000145c4:	48 8b 35 b5 ce 03 00	movq	249525(%rip), %rsi ## Objc selector ref: initWithItemIdentifier:
1000145cb:	4c 8b 25 4e 86 02 00	movq	165454(%rip), %r12 ## Objc message: +[NSToolbarItem initWithItemIdentifier:]
1000145d2:	48 89 c7	movq	%rax, %rdi
1000145d5:	4c 89 ea	movq	%r13, %rdx
1000145d8:	41 ff d4	callq	*%r12
1000145db:	48 89 c7	movq	%rax, %rdi
1000145de:	e8 e7 ae 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
1000145e3:	48 89 c3	movq	%rax, %rbx
1000145e6:	48 8b 35 5b d9 03 00	movq	252251(%rip), %rsi ## Objc selector ref: setLabel:
1000145ed:	48 89 c7	movq	%rax, %rdi
1000145f0:	4c 89 fa	movq	%r15, %rdx
1000145f3:	41 ff d4	callq	*%r12
1000145f6:	48 8b 35 13 da 03 00	movq	252435(%rip), %rsi ## Objc selector ref: setPaletteLabel:
1000145fd:	48 89 df	movq	%rbx, %rdi
100014600:	4c 89 f2	movq	%r14, %rdx
100014603:	41 ff d4	callq	*%r12
100014606:	48 8b 35 13 db 03 00	movq	252691(%rip), %rsi ## Objc selector ref: setToolTip:
10001460d:	48 89 df	movq	%rbx, %rdi
100014610:	48 8b 55 d0	movq	-48(%rbp), %rdx
100014614:	41 ff d4	callq	*%r12
100014617:	48 8b 35 e2 da 03 00	movq	252642(%rip), %rsi ## Objc selector ref: setTarget:
10001461e:	48 89 df	movq	%rbx, %rdi
100014621:	48 8b 55 c8	movq	-56(%rbp), %rdx
100014625:	41 ff d4	callq	*%r12
100014628:	48 8b 35 b1 d9 03 00	movq	252337(%rip), %rsi ## Objc selector ref: setObject:forKey:
10001462f:	48 8b 7d c0	movq	-64(%rbp), %rdi
100014633:	48 89 da	movq	%rbx, %rdx
100014636:	4c 89 e9	movq	%r13, %rcx
100014639:	41 ff d4	callq	*%r12
10001463c:	48 89 d8	movq	%rbx, %rax
10001463f:	48 83 c4 18	addq	$24, %rsp
100014643:	5b	popq	%rbx
100014644:	41 5c	popq	%r12
100014646:	41 5d	popq	%r13
100014648:	41 5e	popq	%r14
10001464a:	41 5f	popq	%r15
10001464c:	5d	popq	%rbp
10001464d:	c3	retq
10001464e:	55	pushq	%rbp
10001464f:	48 89 e5	movq	%rsp, %rbp
100014652:	41 57	pushq	%r15
100014654:	41 56	pushq	%r14
100014656:	41 55	pushq	%r13
100014658:	41 54	pushq	%r12
10001465a:	53	pushq	%rbx
10001465b:	48 83 ec 18	subq	$24, %rsp
10001465f:	49 89 cf	movq	%rcx, %r15
100014662:	48 89 fb	movq	%rdi, %rbx
100014665:	48 8b 3d 3c df 03 00	movq	253756(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSToolbarItem
10001466c:	e8 4d ae 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100014671:	48 8b 35 08 ce 03 00	movq	249352(%rip), %rsi ## Objc selector ref: initWithItemIdentifier:
100014678:	4c 8b 25 a1 85 02 00	movq	165281(%rip), %r12 ## Objc message: +[NSToolbarItem initWithItemIdentifier:]
10001467f:	48 89 c7	movq	%rax, %rdi
100014682:	4c 89 fa	movq	%r15, %rdx
100014685:	41 ff d4	callq	*%r12
100014688:	48 89 c7	movq	%rax, %rdi
10001468b:	e8 3a ae 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100014690:	49 89 c5	movq	%rax, %r13
100014693:	48 8b 05 0e e7 03 00	movq	255758(%rip), %rax
10001469a:	48 89 5d d0	movq	%rbx, -48(%rbp)
10001469e:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000146a2:	48 8b 35 cf d1 03 00	movq	250319(%rip), %rsi ## Objc selector ref: objectForKey:
1000146a9:	4c 89 fa	movq	%r15, %rdx
1000146ac:	41 ff d4	callq	*%r12
1000146af:	48 89 c3	movq	%rax, %rbx
1000146b2:	48 8b 35 1f cf 03 00	movq	249631(%rip), %rsi ## Objc selector ref: label
1000146b9:	48 89 c7	movq	%rax, %rdi
1000146bc:	41 ff d4	callq	*%r12
1000146bf:	48 8b 35 82 d8 03 00	movq	252034(%rip), %rsi ## Objc selector ref: setLabel:
1000146c6:	4c 89 ef	movq	%r13, %rdi
1000146c9:	48 89 c2	movq	%rax, %rdx
1000146cc:	41 ff d4	callq	*%r12
1000146cf:	48 8b 35 5a d2 03 00	movq	250458(%rip), %rsi ## Objc selector ref: paletteLabel
1000146d6:	48 89 df	movq	%rbx, %rdi
1000146d9:	41 ff d4	callq	*%r12
1000146dc:	48 8b 35 2d d9 03 00	movq	252205(%rip), %rsi ## Objc selector ref: setPaletteLabel:
1000146e3:	4c 89 ef	movq	%r13, %rdi
1000146e6:	48 89 c2	movq	%rax, %rdx
1000146e9:	41 ff d4	callq	*%r12
1000146ec:	4c 8b 35 c5 dd 03 00	movq	253381(%rip), %r14 ## Objc selector ref: view
1000146f3:	48 89 df	movq	%rbx, %rdi
1000146f6:	4c 89 f6	movq	%r14, %rsi
1000146f9:	41 ff d4	callq	*%r12
1000146fc:	48 85 c0	testq	%rax, %rax
1000146ff:	74 12	je	0x100014713
100014701:	48 89 df	movq	%rbx, %rdi
100014704:	4c 89 f6	movq	%r14, %rsi
100014707:	41 ff d4	callq	*%r12
10001470a:	48 8b 35 47 da 03 00	movq	252487(%rip), %rsi ## Objc selector ref: setView:
100014711:	eb 14	jmp	0x100014727
100014713:	48 8b 35 36 cc 03 00	movq	248886(%rip), %rsi ## Objc selector ref: image
10001471a:	48 89 df	movq	%rbx, %rdi
10001471d:	41 ff d4	callq	*%r12
100014720:	48 8b 35 81 d7 03 00	movq	251777(%rip), %rsi ## Objc selector ref: setImage:
100014727:	4c 89 ef	movq	%r13, %rdi
10001472a:	48 89 c2	movq	%rax, %rdx
10001472d:	41 ff d4	callq	*%r12
100014730:	48 8b 35 b1 dc 03 00	movq	253105(%rip), %rsi ## Objc selector ref: toolTip
100014737:	48 89 df	movq	%rbx, %rdi
10001473a:	41 ff d4	callq	*%r12
10001473d:	48 8b 35 dc d9 03 00	movq	252380(%rip), %rsi ## Objc selector ref: setToolTip:
100014744:	4c 89 ef	movq	%r13, %rdi
100014747:	48 89 c2	movq	%rax, %rdx
10001474a:	41 ff d4	callq	*%r12
10001474d:	48 8b 35 54 dc 03 00	movq	253012(%rip), %rsi ## Objc selector ref: target
100014754:	48 89 df	movq	%rbx, %rdi
100014757:	41 ff d4	callq	*%r12
10001475a:	48 8b 35 9f d9 03 00	movq	252319(%rip), %rsi ## Objc selector ref: setTarget:
100014761:	4c 89 ef	movq	%r13, %rdi
100014764:	48 89 c2	movq	%rax, %rdx
100014767:	41 ff d4	callq	*%r12
10001476a:	48 8b 35 a7 c4 03 00	movq	246951(%rip), %rsi ## Objc selector ref: action
100014771:	48 89 df	movq	%rbx, %rdi
100014774:	41 ff d4	callq	*%r12
100014777:	48 8b 35 fa d4 03 00	movq	251130(%rip), %rsi ## Objc selector ref: setAction:
10001477e:	4c 89 ef	movq	%r13, %rdi
100014781:	48 89 c2	movq	%rax, %rdx
100014784:	41 ff d4	callq	*%r12
100014787:	48 8b 35 e2 cd 03 00	movq	249314(%rip), %rsi ## Objc selector ref: isEqual:
10001478e:	48 8d 15 6b 9b 02 00	leaq	170859(%rip), %rdx ## Objc cfstring ref: @"Page Number Item Identifier"
100014795:	4c 89 ff	movq	%r15, %rdi
100014798:	41 ff d4	callq	*%r12
10001479b:	84 c0	testb	%al, %al
10001479d:	0f 84 ba 00 00 00	je	0x10001485d
1000147a3:	4c 8b 35 76 d1 03 00	movq	250230(%rip), %r14 ## Objc selector ref: pageCount
1000147aa:	48 8b 7d d0	movq	-48(%rbp), %rdi
1000147ae:	4c 89 f6	movq	%r14, %rsi
1000147b1:	ff 15 69 84 02 00	callq	*164969(%rip) ## Objc message: -[%rdi pageCount]
1000147b7:	48 83 f8 02	cmpq	$2, %rax
1000147bb:	0f 8c 9c 00 00 00	jl	0x10001485d
1000147c1:	48 8b 05 c0 e6 03 00	movq	255680(%rip), %rax
1000147c8:	48 8b 5d d0	movq	-48(%rbp), %rbx
1000147cc:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000147d0:	48 89 45 c0	movq	%rax, -64(%rbp)
1000147d4:	48 8b 05 ed dd 03 00	movq	253421(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSString
1000147db:	48 89 45 c8	movq	%rax, -56(%rbp)
1000147df:	48 8b 3d ba dd 03 00	movq	253370(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000147e6:	48 8b 35 fb ce 03 00	movq	249595(%rip), %rsi ## Objc selector ref: mainBundle
1000147ed:	41 ff d4	callq	*%r12
1000147f0:	48 8b 35 69 ce 03 00	movq	249449(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000147f7:	48 8d 15 a2 96 02 00	leaq	169634(%rip), %rdx ## Objc cfstring ref: @"of %ld"
1000147fe:	48 8d 0d 9b 86 02 00	leaq	165531(%rip), %rcx ## Objc cfstring ref: @""
100014805:	48 89 c7	movq	%rax, %rdi
100014808:	45 31 c0	xorl	%r8d, %r8d
10001480b:	41 ff d4	callq	*%r12
10001480e:	49 89 c7	movq	%rax, %r15
100014811:	48 89 df	movq	%rbx, %rdi
100014814:	4c 89 f6	movq	%r14, %rsi
100014817:	41 ff d4	callq	*%r12
10001481a:	48 8b 35 4f ce 03 00	movq	249423(%rip), %rsi ## Objc selector ref: localizedStringWithFormat:
100014821:	48 8b 7d c8	movq	-56(%rbp), %rdi
100014825:	4c 89 fa	movq	%r15, %rdx
100014828:	48 89 c1	movq	%rax, %rcx
10001482b:	31 c0	xorl	%eax, %eax
10001482d:	41 ff d4	callq	*%r12
100014830:	48 8b 35 b9 d8 03 00	movq	252089(%rip), %rsi ## Objc selector ref: setStringValue:
100014837:	48 8b 7d c0	movq	-64(%rbp), %rdi
10001483b:	48 89 c2	movq	%rax, %rdx
10001483e:	41 ff d4	callq	*%r12
100014841:	48 8b 05 38 e6 03 00	movq	255544(%rip), %rax
100014848:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001484c:	48 8b 35 ad d6 03 00	movq	251565(%rip), %rsi ## Objc selector ref: setIntValue:
100014853:	ba 01 00 00 00	movl	$1, %edx
100014858:	41 ff d4	callq	*%r12
10001485b:	eb 10	jmp	0x10001486d
10001485d:	4c 89 ef	movq	%r13, %rdi
100014860:	48 8b 35 51 dc 03 00	movq	253009(%rip), %rsi ## Objc selector ref: view
100014867:	ff 15 b3 83 02 00	callq	*164787(%rip) ## Objc message: +[NSBundle view]
10001486d:	4c 89 e8	movq	%r13, %rax
100014870:	48 83 c4 18	addq	$24, %rsp
100014874:	5b	popq	%rbx
100014875:	41 5c	popq	%r12
100014877:	41 5d	popq	%r13
100014879:	41 5e	popq	%r14
10001487b:	41 5f	popq	%r15
10001487d:	5d	popq	%rbp
10001487e:	c3	retq
10001487f:	55	pushq	%rbp
100014880:	48 89 e5	movq	%rsp, %rbp
100014883:	41 57	pushq	%r15
100014885:	41 56	pushq	%r14
100014887:	41 55	pushq	%r13
100014889:	41 54	pushq	%r12
10001488b:	53	pushq	%rbx
10001488c:	48 83 ec 28	subq	$40, %rsp
100014890:	48 89 fb	movq	%rdi, %rbx
100014893:	4c 8b 35 ae c9 03 00	movq	248238(%rip), %r14 ## Objc selector ref: filterDocumentType
10001489a:	4c 89 f6	movq	%r14, %rsi
10001489d:	ff 15 7d 83 02 00	callq	*164733(%rip) ## Objc message: -[%rdi filterDocumentType]
1000148a3:	83 f8 01	cmpl	$1, %eax
1000148a6:	75 36	jne	0x1000148de
1000148a8:	4c 8b 25 01 dd 03 00	movq	253185(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSArray
1000148af:	4c 8b 35 4a 7e 02 00	movq	163402(%rip), %r14 ## literal pool symbol address: _NSToolbarSeparatorItemIdentifier
1000148b6:	4d 8b 3e	movq	(%r14), %r15
1000148b9:	4c 8b 2d 60 d0 03 00	movq	249952(%rip), %r13 ## Objc selector ref: pageCount
1000148c0:	48 89 df	movq	%rbx, %rdi
1000148c3:	4c 89 ee	movq	%r13, %rsi
1000148c6:	ff 15 54 83 02 00	callq	*164692(%rip) ## Objc message: +[NSArray pageCount]
1000148cc:	48 83 f8 02	cmpq	$2, %rax
1000148d0:	0f 8c a9 00 00 00	jl	0x10001497f
1000148d6:	49 8b 06	movq	(%r14), %rax
1000148d9:	e9 12 01 00 00	jmp	0x1000149f0
1000148de:	48 89 df	movq	%rbx, %rdi
1000148e1:	4c 89 f6	movq	%r14, %rsi
1000148e4:	ff 15 36 83 02 00	callq	*164662(%rip) ## Objc message: -[%rdi pageCount]
1000148ea:	85 c0	testl	%eax, %eax
1000148ec:	0f 84 a6 00 00 00	je	0x100014998
1000148f2:	48 8b 35 27 d0 03 00	movq	249895(%rip), %rsi ## Objc selector ref: pageCount
1000148f9:	48 89 df	movq	%rbx, %rdi
1000148fc:	ff 15 1e 83 02 00	callq	*164638(%rip) ## Objc message: -[%rdi pageCount]
100014902:	48 8b 3d a7 dc 03 00	movq	253095(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100014909:	48 83 f8 02	cmpq	$2, %rax
10001490d:	0f 8c 90 00 00 00	jl	0x1000149a3
100014913:	4c 8b 15 e6 7d 02 00	movq	163302(%rip), %r10 ## literal pool symbol address: _NSToolbarSeparatorItemIdentifier
10001491a:	48 8b 35 17 c4 03 00	movq	246807(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100014921:	48 83 ec 08	subq	$8, %rsp
100014925:	48 8d 1d d4 99 02 00	leaq	170452(%rip), %rbx ## Objc cfstring ref: @"Page Number Item Identifier"
10001492c:	4c 8d 1d 0d 9a 02 00	leaq	170509(%rip), %r11 ## Objc cfstring ref: @"Page Forward Item Identifier"
100014933:	4c 8d 35 e6 99 02 00	leaq	170470(%rip), %r14 ## Objc cfstring ref: @"Page Backward Item Identifier"
10001493a:	4c 8d 3d 5f 99 02 00	leaq	170335(%rip), %r15 ## Objc cfstring ref: @"Tone Mapping Item Identifier"
100014941:	4c 8d 25 78 99 02 00	leaq	170360(%rip), %r12 ## Objc cfstring ref: @"Image Correction Item Identifier"
100014948:	48 8d 15 71 9a 02 00	leaq	170609(%rip), %rdx ## Objc cfstring ref: @"Zoom In Item Identifier"
10001494f:	48 8d 0d 8a 9a 02 00	leaq	170634(%rip), %rcx ## Objc cfstring ref: @"Zoom Out Item Identifier"
100014956:	4c 8d 05 23 9a 02 00	leaq	170531(%rip), %r8 ## Objc cfstring ref: @"Image Info Item Identifier"
10001495d:	4c 8d 0d 3c 9a 02 00	leaq	170556(%rip), %r9 ## Objc cfstring ref: @"Image Size Item Identifier"
100014964:	31 c0	xorl	%eax, %eax
100014966:	6a 00	pushq	$0
100014968:	53	pushq	%rbx
100014969:	41 53	pushq	%r11
10001496b:	41 56	pushq	%r14
10001496d:	41 ff 32	pushq	(%r10)
100014970:	41 57	pushq	%r15
100014972:	41 54	pushq	%r12
100014974:	ff 15 a6 82 02 00	callq	*164518(%rip) ## Objc message: +[NSArray arrayWithObjects:]
10001497a:	e9 4f 01 00 00	jmp	0x100014ace
10001497f:	48 8b 05 62 e4 03 00	movq	255074(%rip), %rax
100014986:	80 3c 03 01	cmpb	$1, (%rbx,%rax)
10001498a:	75 62	jne	0x1000149ee
10001498c:	48 8b 05 65 7d 02 00	movq	163173(%rip), %rax ## literal pool symbol address: _NSToolbarFlexibleSpaceItemIdentifier
100014993:	48 8b 00	movq	(%rax), %rax
100014996:	eb 58	jmp	0x1000149f0
100014998:	31 c0	xorl	%eax, %eax
10001499a:	48 83 c4 28	addq	$40, %rsp
10001499e:	e9 2f 01 00 00	jmp	0x100014ad2
1000149a3:	48 8b 35 8e c3 03 00	movq	246670(%rip), %rsi ## Objc selector ref: arrayWithObjects:
1000149aa:	48 83 ec 08	subq	$8, %rsp
1000149ae:	48 8d 1d eb 98 02 00	leaq	170219(%rip), %rbx ## Objc cfstring ref: @"Tone Mapping Item Identifier"
1000149b5:	4c 8d 15 04 99 02 00	leaq	170244(%rip), %r10 ## Objc cfstring ref: @"Image Correction Item Identifier"
1000149bc:	48 8d 15 fd 99 02 00	leaq	170493(%rip), %rdx ## Objc cfstring ref: @"Zoom In Item Identifier"
1000149c3:	48 8d 0d 16 9a 02 00	leaq	170518(%rip), %rcx ## Objc cfstring ref: @"Zoom Out Item Identifier"
1000149ca:	4c 8d 05 af 99 02 00	leaq	170415(%rip), %r8 ## Objc cfstring ref: @"Image Info Item Identifier"
1000149d1:	4c 8d 0d c8 99 02 00	leaq	170440(%rip), %r9 ## Objc cfstring ref: @"Image Size Item Identifier"
1000149d8:	31 c0	xorl	%eax, %eax
1000149da:	6a 00	pushq	$0
1000149dc:	53	pushq	%rbx
1000149dd:	41 52	pushq	%r10
1000149df:	ff 15 3b 82 02 00	callq	*164411(%rip) ## Objc message: -[%rdi arrayWithObjects:]
1000149e5:	48 83 c4 48	addq	$72, %rsp
1000149e9:	e9 e4 00 00 00	jmp	0x100014ad2
1000149ee:	31 c0	xorl	%eax, %eax
1000149f0:	48 89 45 c8	movq	%rax, -56(%rbp)
1000149f4:	48 89 df	movq	%rbx, %rdi
1000149f7:	4c 89 ee	movq	%r13, %rsi
1000149fa:	ff 15 20 82 02 00	callq	*164384(%rip) ## Objc message: -[%rdi arrayWithObjects:]
100014a00:	48 8b 0d e1 e3 03 00	movq	254945(%rip), %rcx
100014a07:	48 83 f8 01	cmpq	$1, %rax
100014a0b:	4c 89 7d b8	movq	%r15, -72(%rbp)
100014a0f:	4c 89 65 c0	movq	%r12, -64(%rbp)
100014a13:	7e 0d	jle	0x100014a22
100014a15:	48 8d 05 04 99 02 00	leaq	170244(%rip), %rax ## Objc cfstring ref: @"Page Backward Item Identifier"
100014a1c:	48 89 45 d0	movq	%rax, -48(%rbp)
100014a20:	eb 15	jmp	0x100014a37
100014a22:	31 d2	xorl	%edx, %edx
100014a24:	80 3c 0b 01	cmpb	$1, (%rbx,%rcx)
100014a28:	48 8d 05 31 99 02 00	leaq	170289(%rip), %rax ## Objc cfstring ref: @"Security Lock Item Identifier"
100014a2f:	48 0f 44 d0	cmoveq	%rax, %rdx
100014a33:	48 89 55 d0	movq	%rdx, -48(%rbp)
100014a37:	49 89 cf	movq	%rcx, %r15
100014a3a:	4c 8b 35 df 81 02 00	movq	164319(%rip), %r14 ## Objc message: -[%rdi arrayWithObjects:]
100014a41:	48 89 df	movq	%rbx, %rdi
100014a44:	4c 89 ee	movq	%r13, %rsi
100014a47:	41 ff d6	callq	*%r14
100014a4a:	45 31 e4	xorl	%r12d, %r12d
100014a4d:	48 83 f8 02	cmpq	$2, %rax
100014a51:	4c 89 ee	movq	%r13, %rsi
100014a54:	4c 8d 2d e5 98 02 00	leaq	170213(%rip), %r13 ## Objc cfstring ref: @"Page Forward Item Identifier"
100014a5b:	4d 0f 4c ec	cmovlq	%r12, %r13
100014a5f:	48 89 df	movq	%rbx, %rdi
100014a62:	41 ff d6	callq	*%r14
100014a65:	48 83 f8 02	cmpq	$2, %rax
100014a69:	4c 8d 15 90 98 02 00	leaq	170128(%rip), %r10 ## Objc cfstring ref: @"Page Number Item Identifier"
100014a70:	4d 0f 4c d4	cmovlq	%r12, %r10
100014a74:	42 80 3c 3b 01	cmpb	$1, (%rbx,%r15)
100014a79:	48 8b 05 78 7c 02 00	movq	162936(%rip), %rax ## literal pool symbol address: _NSToolbarFlexibleSpaceItemIdentifier
100014a80:	4c 8b 18	movq	(%rax), %r11
100014a83:	4d 0f 45 dc	cmovneq	%r12, %r11
100014a87:	48 8d 1d d2 98 02 00	leaq	170194(%rip), %rbx ## Objc cfstring ref: @"Security Lock Item Identifier"
100014a8e:	49 0f 45 dc	cmovneq	%r12, %rbx
100014a92:	48 8b 35 9f c2 03 00	movq	246431(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100014a99:	48 83 ec 08	subq	$8, %rsp
100014a9d:	48 8d 15 3c 98 02 00	leaq	170044(%rip), %rdx ## Objc cfstring ref: @"Filter Inspector Item Identifier"
100014aa4:	4c 8d 05 15 99 02 00	leaq	170261(%rip), %r8 ## Objc cfstring ref: @"Zoom In Item Identifier"
100014aab:	4c 8d 0d 2e 99 02 00	leaq	170286(%rip), %r9 ## Objc cfstring ref: @"Zoom Out Item Identifier"
100014ab2:	48 8b 7d c0	movq	-64(%rbp), %rdi
100014ab6:	48 8b 4d b8	movq	-72(%rbp), %rcx
100014aba:	31 c0	xorl	%eax, %eax
100014abc:	6a 00	pushq	$0
100014abe:	53	pushq	%rbx
100014abf:	41 53	pushq	%r11
100014ac1:	41 52	pushq	%r10
100014ac3:	41 55	pushq	%r13
100014ac5:	ff 75 d0	pushq	-48(%rbp)
100014ac8:	ff 75 c8	pushq	-56(%rbp)
100014acb:	41 ff d6	callq	*%r14
100014ace:	48 83 c4 68	addq	$104, %rsp
100014ad2:	5b	popq	%rbx
100014ad3:	41 5c	popq	%r12
100014ad5:	41 5d	popq	%r13
100014ad7:	41 5e	popq	%r14
100014ad9:	41 5f	popq	%r15
100014adb:	5d	popq	%rbp
100014adc:	c3	retq
100014add:	55	pushq	%rbp
100014ade:	48 89 e5	movq	%rsp, %rbp
100014ae1:	48 8b 35 10 d9 03 00	movq	252176(%rip), %rsi ## Objc selector ref: toolbarDefaultItemIdentifiers:
100014ae8:	5d	popq	%rbp
100014ae9:	ff 25 31 81 02 00	jmpq	*164145(%rip) ## Objc message: -[%rdi toolbarDefaultItemIdentifiers:]
100014aef:	55	pushq	%rbp
100014af0:	48 89 e5	movq	%rsp, %rbp
100014af3:	41 57	pushq	%r15
100014af5:	41 56	pushq	%r14
100014af7:	53	pushq	%rbx
100014af8:	50	pushq	%rax
100014af9:	48 89 d3	movq	%rdx, %rbx
100014afc:	49 89 fe	movq	%rdi, %r14
100014aff:	48 8b 35 ea c8 03 00	movq	248042(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100014b06:	48 89 d7	movq	%rdx, %rdi
100014b09:	ff 15 11 81 02 00	callq	*164113(%rip) ## Objc message: -[%rdi indexOfSelectedItem]
100014b0f:	48 8b 0d 7a e3 03 00	movq	254842(%rip), %rcx
100014b16:	49 89 04 0e	movq	%rax, (%r14,%rcx)
100014b1a:	48 85 c0	testq	%rax, %rax
100014b1d:	74 47	je	0x100014b66
100014b1f:	48 8b 35 12 d1 03 00	movq	250130(%rip), %rsi ## Objc selector ref: selectedItem
100014b26:	4c 8b 3d f3 80 02 00	movq	164083(%rip), %r15 ## Objc message: -[%rdi selectedItem]
100014b2d:	48 89 df	movq	%rbx, %rdi
100014b30:	41 ff d7	callq	*%r15
100014b33:	48 8b 35 5e d8 03 00	movq	251998(%rip), %rsi ## Objc selector ref: tag
100014b3a:	48 89 c7	movq	%rax, %rdi
100014b3d:	41 ff d7	callq	*%r15
100014b40:	48 83 f8 ff	cmpq	$-1, %rax
100014b44:	74 20	je	0x100014b66
100014b46:	48 8b 0d 6b e2 03 00	movq	254571(%rip), %rcx
100014b4d:	49 8b 3c 0e	movq	(%r14,%rcx), %rdi
100014b51:	48 8b 35 08 cd 03 00	movq	249096(%rip), %rsi ## Objc selector ref: objectAtIndex:
100014b58:	48 89 c2	movq	%rax, %rdx
100014b5b:	ff 15 bf 80 02 00	callq	*164031(%rip) ## Objc message: -[%rdi objectAtIndex:]
100014b61:	48 89 c2	movq	%rax, %rdx
100014b64:	eb 02	jmp	0x100014b68
100014b66:	31 d2	xorl	%edx, %edx
100014b68:	48 8b 35 e1 d1 03 00	movq	250337(%rip), %rsi ## Objc selector ref: setCurrentFilter:
100014b6f:	48 8b 1d aa 80 02 00	movq	164010(%rip), %rbx ## Objc message: -[%rdi setCurrentFilter:]
100014b76:	4c 89 f7	movq	%r14, %rdi
100014b79:	ff d3	callq	*%rbx
100014b7b:	48 8b 35 d6 d8 03 00	movq	252118(%rip), %rsi ## Objc selector ref: updatePreview
100014b82:	4c 89 f7	movq	%r14, %rdi
100014b85:	48 89 d8	movq	%rbx, %rax
100014b88:	48 83 c4 08	addq	$8, %rsp
100014b8c:	5b	popq	%rbx
100014b8d:	41 5e	popq	%r14
100014b8f:	41 5f	popq	%r15
100014b91:	5d	popq	%rbp
100014b92:	ff e0	jmpq	*%rax
100014b94:	55	pushq	%rbp
100014b95:	48 89 e5	movq	%rsp, %rbp
100014b98:	41 57	pushq	%r15
100014b9a:	41 56	pushq	%r14
100014b9c:	41 55	pushq	%r13
100014b9e:	41 54	pushq	%r12
100014ba0:	53	pushq	%rbx
100014ba1:	48 81 ec 98 00 00 00	subq	$152, %rsp
100014ba8:	49 89 d5	movq	%rdx, %r13
100014bab:	49 89 fc	movq	%rdi, %r12
100014bae:	48 8b 35 83 d0 03 00	movq	249987(%rip), %rsi ## Objc selector ref: selectedItem
100014bb5:	4c 8b 3d 64 80 02 00	movq	163940(%rip), %r15 ## Objc message: -[%rdi selectedItem]
100014bbc:	48 89 d7	movq	%rdx, %rdi
100014bbf:	41 ff d7	callq	*%r15
100014bc2:	48 8b 35 cf d7 03 00	movq	251855(%rip), %rsi ## Objc selector ref: tag
100014bc9:	48 89 c7	movq	%rax, %rdi
100014bcc:	41 ff d7	callq	*%r15
100014bcf:	48 83 f8 ff	cmpq	$-1, %rax
100014bd3:	74 30	je	0x100014c05
100014bd5:	48 8b 0d dc e1 03 00	movq	254428(%rip), %rcx
100014bdc:	49 8b 3c 0c	movq	(%r12,%rcx), %rdi
100014be0:	48 8b 35 79 cc 03 00	movq	248953(%rip), %rsi ## Objc selector ref: objectAtIndex:
100014be7:	48 89 c2	movq	%rax, %rdx
100014bea:	41 ff d7	callq	*%r15
100014bed:	48 8b 35 8c d8 03 00	movq	252044(%rip), %rsi ## Objc selector ref: url
100014bf4:	48 89 c7	movq	%rax, %rdi
100014bf7:	41 ff d7	callq	*%r15
100014bfa:	48 89 c7	movq	%rax, %rdi
100014bfd:	ff 15 5d 80 02 00	callq	*163933(%rip) ## literal pool symbol address: _objc_retain
100014c03:	eb 02	jmp	0x100014c07
100014c05:	31 c0	xorl	%eax, %eax
100014c07:	48 89 45 d0	movq	%rax, -48(%rbp)
100014c0b:	48 8b 35 de c7 03 00	movq	247774(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100014c12:	4c 89 ef	movq	%r13, %rdi
100014c15:	41 ff d7	callq	*%r15
100014c18:	48 8b 15 71 e2 03 00	movq	254577(%rip), %rdx
100014c1f:	31 c9	xorl	%ecx, %ecx
100014c21:	48 83 f8 ff	cmpq	$-1, %rax
100014c25:	48 0f 45 c8	cmovneq	%rax, %rcx
100014c29:	49 89 0c 14	movq	%rcx, (%r12,%rdx)
100014c2d:	48 8b 35 cc cb 03 00	movq	248780(%rip), %rsi ## Objc selector ref: numberOfItems
100014c34:	4c 89 ef	movq	%r13, %rdi
100014c37:	41 ff d7	callq	*%r15
100014c3a:	48 89 c3	movq	%rax, %rbx
100014c3d:	48 8b 35 94 ce 03 00	movq	249492(%rip), %rsi ## Objc selector ref: removeAllToolTips
100014c44:	4c 89 ef	movq	%r13, %rdi
100014c47:	41 ff d7	callq	*%r15
100014c4a:	48 83 fb 03	cmpq	$3, %rbx
100014c4e:	72 1c	jb	0x100014c6c
100014c50:	4c 8b 35 99 ce 03 00	movq	249497(%rip), %r14 ## Objc selector ref: removeItemAtIndex:
100014c57:	48 ff cb	decq	%rbx
100014c5a:	4c 89 ef	movq	%r13, %rdi
100014c5d:	4c 89 f6	movq	%r14, %rsi
100014c60:	48 89 da	movq	%rbx, %rdx
100014c63:	41 ff d7	callq	*%r15
100014c66:	48 83 fb 02	cmpq	$2, %rbx
100014c6a:	77 eb	ja	0x100014c57
100014c6c:	48 8b 1d 45 e1 03 00	movq	254277(%rip), %rbx
100014c73:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100014c77:	ff 15 db 7f 02 00	callq	*163803(%rip) ## literal pool symbol address: _objc_release
100014c7d:	48 8b 3d 44 da 03 00	movq	252484(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_QuartzFilterManager
100014c84:	48 8b 35 ed c5 03 00	movq	247277(%rip), %rsi ## Objc selector ref: filtersInDomains:
100014c8b:	31 d2	xorl	%edx, %edx
100014c8d:	41 ff d7	callq	*%r15
100014c90:	48 8b 35 09 cb 03 00	movq	248585(%rip), %rsi ## Objc selector ref: mutableCopy
100014c97:	48 89 c7	movq	%rax, %rdi
100014c9a:	41 ff d7	callq	*%r15
100014c9d:	49 89 04 1c	movq	%rax, (%r12,%rbx)
100014ca1:	48 85 c0	testq	%rax, %rax
100014ca4:	0f 84 6a 01 00 00	je	0x100014e14
100014caa:	48 8b 35 0f c3 03 00	movq	246543(%rip), %rsi ## Objc selector ref: count
100014cb1:	48 89 c7	movq	%rax, %rdi
100014cb4:	ff 15 66 7f 02 00	callq	*163686(%rip) ## Objc message: +[QuartzFilterManager count]
100014cba:	48 89 45 80	movq	%rax, -128(%rbp)
100014cbe:	48 85 c0	testq	%rax, %rax
100014cc1:	0f 84 4d 01 00 00	je	0x100014e14
100014cc7:	4c 89 6d c8	movq	%r13, -56(%rbp)
100014ccb:	48 8b 05 e6 e0 03 00	movq	254182(%rip), %rax
100014cd2:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100014cd6:	48 8b 35 c3 d5 03 00	movq	251331(%rip), %rsi ## Objc selector ref: sortUsingFunction:context:
100014cdd:	48 8d 15 e5 01 00 00	leaq	485(%rip), %rdx
100014ce4:	31 db	xorl	%ebx, %ebx
100014ce6:	31 c9	xorl	%ecx, %ecx
100014ce8:	ff 15 32 7f 02 00	callq	*163634(%rip) ## Objc message: -[%rdi sortUsingFunction:context:]
100014cee:	48 8b 05 5b c9 03 00	movq	248155(%rip), %rax ## Objc selector ref: localizedName
100014cf5:	48 89 45 88	movq	%rax, -120(%rbp)
100014cf9:	48 8b 05 48 ca 03 00	movq	248392(%rip), %rax ## Objc selector ref: menu
100014d00:	48 89 45 90	movq	%rax, -112(%rbp)
100014d04:	48 8b 05 ed be 03 00	movq	245485(%rip), %rax ## Objc selector ref: _popUpItemAction:
100014d0b:	48 89 45 98	movq	%rax, -104(%rbp)
100014d0f:	48 8b 05 52 bf 03 00	movq	245586(%rip), %rax ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
100014d16:	48 89 45 a0	movq	%rax, -96(%rbp)
100014d1a:	48 8b 05 c7 c8 03 00	movq	248007(%rip), %rax ## Objc selector ref: lastItem
100014d21:	48 89 45 a8	movq	%rax, -88(%rbp)
100014d25:	48 8b 05 cc d3 03 00	movq	250828(%rip), %rax ## Objc selector ref: setTag:
100014d2c:	48 89 45 b0	movq	%rax, -80(%rbp)
100014d30:	48 8b 05 49 d7 03 00	movq	251721(%rip), %rax ## Objc selector ref: url
100014d37:	48 89 45 b8	movq	%rax, -72(%rbp)
100014d3b:	4c 89 65 c0	movq	%r12, -64(%rbp)
100014d3f:	4c 8b 6d c8	movq	-56(%rbp), %r13
100014d43:	48 8b 05 6e e0 03 00	movq	254062(%rip), %rax
100014d4a:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100014d4e:	48 8b 35 0b cb 03 00	movq	248587(%rip), %rsi ## Objc selector ref: objectAtIndex:
100014d55:	48 89 da	movq	%rbx, %rdx
100014d58:	41 ff d7	callq	*%r15
100014d5b:	49 89 c6	movq	%rax, %r14
100014d5e:	48 89 c7	movq	%rax, %rdi
100014d61:	48 8b 75 88	movq	-120(%rbp), %rsi
100014d65:	41 ff d7	callq	*%r15
100014d68:	48 85 c0	testq	%rax, %rax
100014d6b:	74 75	je	0x100014de2
100014d6d:	49 89 c4	movq	%rax, %r12
100014d70:	4c 89 ef	movq	%r13, %rdi
100014d73:	48 8b 75 90	movq	-112(%rbp), %rsi
100014d77:	41 ff d7	callq	*%r15
100014d7a:	48 89 c7	movq	%rax, %rdi
100014d7d:	48 8b 75 a0	movq	-96(%rbp), %rsi
100014d81:	4c 89 e2	movq	%r12, %rdx
100014d84:	48 8b 4d 98	movq	-104(%rbp), %rcx
100014d88:	4c 8d 05 11 81 02 00	leaq	164113(%rip), %r8 ## Objc cfstring ref: @""
100014d8f:	41 ff d7	callq	*%r15
100014d92:	4c 89 ef	movq	%r13, %rdi
100014d95:	48 8b 75 a8	movq	-88(%rbp), %rsi
100014d99:	41 ff d7	callq	*%r15
100014d9c:	48 89 c7	movq	%rax, %rdi
100014d9f:	48 8b 75 b0	movq	-80(%rbp), %rsi
100014da3:	48 89 da	movq	%rbx, %rdx
100014da6:	41 ff d7	callq	*%r15
100014da9:	48 83 7d d0 00	cmpq	$0, -48(%rbp)
100014dae:	74 32	je	0x100014de2
100014db0:	4c 89 f7	movq	%r14, %rdi
100014db3:	48 8b 75 b8	movq	-72(%rbp), %rsi
100014db7:	41 ff d7	callq	*%r15
100014dba:	48 85 c0	testq	%rax, %rax
100014dbd:	74 23	je	0x100014de2
100014dbf:	48 89 c7	movq	%rax, %rdi
100014dc2:	48 8b 75 d0	movq	-48(%rbp), %rsi
100014dc6:	e8 4b 01 00 00	callq	0x100014f16
100014dcb:	84 c0	testb	%al, %al
100014dcd:	74 13	je	0x100014de2
100014dcf:	48 8d 43 02	leaq	2(%rbx), %rax
100014dd3:	48 8b 4d c0	movq	-64(%rbp), %rcx
100014dd7:	48 8b 15 b2 e0 03 00	movq	254130(%rip), %rdx
100014dde:	48 89 04 11	movq	%rax, (%rcx,%rdx)
100014de2:	48 ff c3	incq	%rbx
100014de5:	48 39 5d 80	cmpq	%rbx, -128(%rbp)
100014de9:	4c 8b 65 c0	movq	-64(%rbp), %r12
100014ded:	0f 85 50 ff ff ff	jne	0x100014d43
100014df3:	48 8b 5d c8	movq	-56(%rbp), %rbx
100014df7:	48 85 db	testq	%rbx, %rbx
100014dfa:	74 56	je	0x100014e52
100014dfc:	48 8b 15 cd bf 03 00	movq	245709(%rip), %rdx ## Objc selector ref: bounds
100014e03:	48 8d bd 60 ff ff ff	leaq	-160(%rbp), %rdi
100014e0a:	48 89 de	movq	%rbx, %rsi
100014e0d:	e8 d0 a6 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100014e12:	eb 4f	jmp	0x100014e63
100014e14:	48 8b 3d 85 d7 03 00	movq	251781(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100014e1b:	48 8b 35 c6 c8 03 00	movq	248006(%rip), %rsi ## Objc selector ref: mainBundle
100014e22:	41 ff d7	callq	*%r15
100014e25:	48 8b 35 34 c8 03 00	movq	247860(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100014e2c:	48 8d 15 8d 90 02 00	leaq	168077(%rip), %rdx ## Objc cfstring ref: @"No filters available"
100014e33:	48 8d 0d 66 80 02 00	leaq	163942(%rip), %rcx ## Objc cfstring ref: @""
100014e3a:	48 89 c7	movq	%rax, %rdi
100014e3d:	45 31 c0	xorl	%r8d, %r8d
100014e40:	41 ff d7	callq	*%r15
100014e43:	48 8b 35 16 be 03 00	movq	245270(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100014e4a:	4c 89 ef	movq	%r13, %rdi
100014e4d:	48 89 c2	movq	%rax, %rdx
100014e50:	eb 58	jmp	0x100014eaa
100014e52:	0f 57 c0	xorps	%xmm0, %xmm0
100014e55:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
100014e5c:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
100014e63:	48 8b 05 4e df 03 00	movq	253774(%rip), %rax
100014e6a:	49 8b 0c 04	movq	(%r12,%rax), %rcx
100014e6e:	48 8b 35 1b be 03 00	movq	245275(%rip), %rsi ## Objc selector ref: addToolTipRect:owner:userData:
100014e75:	0f 28 85 60 ff ff ff	movaps	-160(%rbp), %xmm0
100014e7c:	0f 28 8d 70 ff ff ff	movaps	-144(%rbp), %xmm1
100014e83:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100014e88:	0f 11 04 24	movups	%xmm0, (%rsp)
100014e8c:	48 89 df	movq	%rbx, %rdi
100014e8f:	4c 89 e2	movq	%r12, %rdx
100014e92:	41 ff d7	callq	*%r15
100014e95:	48 8b 05 f4 df 03 00	movq	253940(%rip), %rax
100014e9c:	49 8b 14 04	movq	(%r12,%rax), %rdx
100014ea0:	48 8b 35 61 cd 03 00	movq	249185(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100014ea7:	48 89 df	movq	%rbx, %rdi
100014eaa:	41 ff d7	callq	*%r15
100014ead:	48 8b 7d d0	movq	-48(%rbp), %rdi
100014eb1:	ff 15 a1 7d 02 00	callq	*163233(%rip) ## literal pool symbol address: _objc_release
100014eb7:	48 81 c4 98 00 00 00	addq	$152, %rsp
100014ebe:	5b	popq	%rbx
100014ebf:	41 5c	popq	%r12
100014ec1:	41 5d	popq	%r13
100014ec3:	41 5e	popq	%r14
100014ec5:	41 5f	popq	%r15
100014ec7:	5d	popq	%rbp
100014ec8:	c3	retq
100014ec9:	55	pushq	%rbp
100014eca:	48 89 e5	movq	%rsp, %rbp
100014ecd:	41 57	pushq	%r15
100014ecf:	41 56	pushq	%r14
100014ed1:	41 54	pushq	%r12
100014ed3:	53	pushq	%rbx
100014ed4:	48 89 f3	movq	%rsi, %rbx
100014ed7:	4c 8b 35 72 c7 03 00	movq	247666(%rip), %r14 ## Objc selector ref: localizedName
100014ede:	4c 8b 25 3b 7d 02 00	movq	163131(%rip), %r12 ## Objc message: +[NSBundle localizedName]
100014ee5:	4c 89 f6	movq	%r14, %rsi
100014ee8:	41 ff d4	callq	*%r12
100014eeb:	49 89 c7	movq	%rax, %r15
100014eee:	48 89 df	movq	%rbx, %rdi
100014ef1:	4c 89 f6	movq	%r14, %rsi
100014ef4:	41 ff d4	callq	*%r12
100014ef7:	48 8b 35 02 c0 03 00	movq	245762(%rip), %rsi ## Objc selector ref: compare:options:
100014efe:	b9 01 00 00 00	movl	$1, %ecx
100014f03:	4c 89 ff	movq	%r15, %rdi
100014f06:	48 89 c2	movq	%rax, %rdx
100014f09:	4c 89 e0	movq	%r12, %rax
100014f0c:	5b	popq	%rbx
100014f0d:	41 5c	popq	%r12
100014f0f:	41 5e	popq	%r14
100014f11:	41 5f	popq	%r15
100014f13:	5d	popq	%rbp
100014f14:	ff e0	jmpq	*%rax
100014f16:	55	pushq	%rbp
100014f17:	48 89 e5	movq	%rsp, %rbp
100014f1a:	41 57	pushq	%r15
100014f1c:	41 56	pushq	%r14
100014f1e:	53	pushq	%rbx
100014f1f:	50	pushq	%rax
100014f20:	48 89 f3	movq	%rsi, %rbx
100014f23:	48 85 ff	testq	%rdi, %rdi
100014f26:	74 0a	je	0x100014f32
100014f28:	e8 27 a0 01 00	callq	0x10002ef54 ## symbol stub for: _CFURLCopyAbsoluteURL
100014f2d:	49 89 c6	movq	%rax, %r14
100014f30:	eb 03	jmp	0x100014f35
100014f32:	45 31 f6	xorl	%r14d, %r14d
100014f35:	48 85 db	testq	%rbx, %rbx
100014f38:	74 0d	je	0x100014f47
100014f3a:	48 89 df	movq	%rbx, %rdi
100014f3d:	e8 12 a0 01 00	callq	0x10002ef54 ## symbol stub for: _CFURLCopyAbsoluteURL
100014f42:	48 89 c3	movq	%rax, %rbx
100014f45:	eb 02	jmp	0x100014f49
100014f47:	31 db	xorl	%ebx, %ebx
100014f49:	49 39 de	cmpq	%rbx, %r14
100014f4c:	74 20	je	0x100014f6e
100014f4e:	45 31 ff	xorl	%r15d, %r15d
100014f51:	4d 85 f6	testq	%r14, %r14
100014f54:	74 1b	je	0x100014f71
100014f56:	48 85 db	testq	%rbx, %rbx
100014f59:	74 16	je	0x100014f71
100014f5b:	4c 89 f7	movq	%r14, %rdi
100014f5e:	48 89 de	movq	%rbx, %rsi
100014f61:	e8 8e 9f 01 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
100014f66:	84 c0	testb	%al, %al
100014f68:	41 0f 95 c7	setne	%r15b
100014f6c:	eb 08	jmp	0x100014f76
100014f6e:	41 b7 01	movb	$1, %r15b
100014f71:	4d 85 f6	testq	%r14, %r14
100014f74:	74 08	je	0x100014f7e
100014f76:	4c 89 f7	movq	%r14, %rdi
100014f79:	e8 94 9f 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100014f7e:	48 85 db	testq	%rbx, %rbx
100014f81:	74 08	je	0x100014f8b
100014f83:	48 89 df	movq	%rbx, %rdi
100014f86:	e8 87 9f 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100014f8b:	41 0f b6 c7	movzbl	%r15b, %eax
100014f8f:	48 83 c4 08	addq	$8, %rsp
100014f93:	5b	popq	%rbx
100014f94:	41 5e	popq	%r14
100014f96:	41 5f	popq	%r15
100014f98:	5d	popq	%rbp
100014f99:	c3	retq
100014f9a:	55	pushq	%rbp
100014f9b:	48 89 e5	movq	%rsp, %rbp
100014f9e:	41 57	pushq	%r15
100014fa0:	41 56	pushq	%r14
100014fa2:	41 54	pushq	%r12
100014fa4:	53	pushq	%rbx
100014fa5:	48 89 d3	movq	%rdx, %rbx
100014fa8:	49 89 ff	movq	%rdi, %r15
100014fab:	48 8b 35 26 ca 03 00	movq	248358(%rip), %rsi ## Objc selector ref: profName
100014fb2:	48 89 d7	movq	%rdx, %rdi
100014fb5:	ff 15 65 7c 02 00	callq	*162917(%rip) ## Objc message: -[%rdi profName]
100014fbb:	48 85 c0	testq	%rax, %rax
100014fbe:	0f 84 42 01 00 00	je	0x100015106
100014fc4:	49 89 c6	movq	%rax, %r14
100014fc7:	48 8b 35 fa c9 03 00	movq	248314(%rip), %rsi ## Objc selector ref: profClass
100014fce:	48 89 df	movq	%rbx, %rdi
100014fd1:	ff 15 49 7c 02 00	callq	*162889(%rip) ## Objc message: -[%rdi profClass]
100014fd7:	3d 71 74 72 70	cmpl	$1886549105, %eax
100014fdc:	7f 22	jg	0x100015000
100014fde:	3d 74 73 62 61	cmpl	$1633842036, %eax
100014fe3:	74 3d	je	0x100015022
100014fe5:	3d 72 74 6e 6d	cmpl	$1835955314, %eax
100014fea:	74 3f	je	0x10001502b
100014fec:	3d 6c 63 6d 6e	cmpl	$1852662636, %eax
100014ff1:	0f 85 0f 01 00 00	jne	0x100015106
100014ff7:	48 8d 05 ba de 03 00	leaq	253626(%rip), %rax
100014ffe:	eb 44	jmp	0x100015044
100015000:	3d 72 74 72 70	cmpl	$1886549106, %eax
100015005:	74 2d	je	0x100015034
100015007:	3d 72 6e 63 73	cmpl	$1935896178, %eax
10001500c:	74 2f	je	0x10001503d
10001500e:	3d 63 61 70 73	cmpl	$1936744803, %eax
100015013:	0f 85 ed 00 00 00	jne	0x100015106
100015019:	48 8d 05 80 de 03 00	leaq	253568(%rip), %rax
100015020:	eb 22	jmp	0x100015044
100015022:	48 8d 05 6f de 03 00	leaq	253551(%rip), %rax
100015029:	eb 19	jmp	0x100015044
10001502b:	48 8d 05 76 de 03 00	leaq	253558(%rip), %rax
100015032:	eb 10	jmp	0x100015044
100015034:	48 8d 05 85 de 03 00	leaq	253573(%rip), %rax
10001503b:	eb 07	jmp	0x100015044
10001503d:	48 8d 05 6c de 03 00	leaq	253548(%rip), %rax
100015044:	48 8b 00	movq	(%rax), %rax
100015047:	4d 8b 3c 07	movq	(%r15,%rax), %r15
10001504b:	4d 85 ff	testq	%r15, %r15
10001504e:	0f 84 b2 00 00 00	je	0x100015106
100015054:	48 8b 0d b5 c9 03 00	movq	248245(%rip), %rcx ## Objc selector ref: profileMenuAction:
10001505b:	48 8b 35 06 bc 03 00	movq	244742(%rip), %rsi ## Objc selector ref: addItemWithTitle:action:keyEquivalent:
100015062:	4c 8d 05 37 7e 02 00	leaq	163383(%rip), %r8 ## Objc cfstring ref: @""
100015069:	4c 8b 25 b0 7b 02 00	movq	162736(%rip), %r12 ## Objc message: -[%rdi addItemWithTitle:action:keyEquivalent:]
100015070:	4c 89 ff	movq	%r15, %rdi
100015073:	4c 89 f2	movq	%r14, %rdx
100015076:	41 ff d4	callq	*%r12
100015079:	49 89 c6	movq	%rax, %r14
10001507c:	48 8b 35 f5 cf 03 00	movq	249845(%rip), %rsi ## Objc selector ref: setRepresentedObject:
100015083:	48 89 c7	movq	%rax, %rdi
100015086:	48 89 da	movq	%rbx, %rdx
100015089:	41 ff d4	callq	*%r12
10001508c:	48 8b 35 65 c9 03 00	movq	248165(%rip), %rsi ## Objc selector ref: profURL
100015093:	48 89 df	movq	%rbx, %rdi
100015096:	41 ff d4	callq	*%r12
100015099:	48 8b 35 a8 c8 03 00	movq	247976(%rip), %rsi ## Objc selector ref: path
1000150a0:	48 89 c7	movq	%rax, %rdi
1000150a3:	41 ff d4	callq	*%r12
1000150a6:	48 8b 35 33 d2 03 00	movq	250419(%rip), %rsi ## Objc selector ref: stringByStandardizingPath
1000150ad:	48 89 c7	movq	%rax, %rdi
1000150b0:	41 ff d4	callq	*%r12
1000150b3:	48 8b 35 16 d2 03 00	movq	250390(%rip), %rsi ## Objc selector ref: stringByAbbreviatingWithTildeInPath
1000150ba:	48 89 c7	movq	%rax, %rdi
1000150bd:	41 ff d4	callq	*%r12
1000150c0:	48 8b 35 59 d0 03 00	movq	249945(%rip), %rsi ## Objc selector ref: setToolTip:
1000150c7:	4c 89 f7	movq	%r14, %rdi
1000150ca:	48 89 c2	movq	%rax, %rdx
1000150cd:	41 ff d4	callq	*%r12
1000150d0:	48 8b 35 e1 c4 03 00	movq	247009(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000150d7:	4c 89 ff	movq	%r15, %rdi
1000150da:	31 d2	xorl	%edx, %edx
1000150dc:	41 ff d4	callq	*%r12
1000150df:	48 8b 35 c2 d2 03 00	movq	250562(%rip), %rsi ## Objc selector ref: target
1000150e6:	48 89 c7	movq	%rax, %rdi
1000150e9:	41 ff d4	callq	*%r12
1000150ec:	48 8b 35 0d d0 03 00	movq	249869(%rip), %rsi ## Objc selector ref: setTarget:
1000150f3:	4c 89 f7	movq	%r14, %rdi
1000150f6:	48 89 c2	movq	%rax, %rdx
1000150f9:	4c 89 e0	movq	%r12, %rax
1000150fc:	5b	popq	%rbx
1000150fd:	41 5c	popq	%r12
1000150ff:	41 5e	popq	%r14
100015101:	41 5f	popq	%r15
100015103:	5d	popq	%rbp
100015104:	ff e0	jmpq	*%rax
100015106:	5b	popq	%rbx
100015107:	41 5c	popq	%r12
100015109:	41 5e	popq	%r14
10001510b:	41 5f	popq	%r15
10001510d:	5d	popq	%rbp
10001510e:	c3	retq
10001510f:	55	pushq	%rbp
100015110:	48 89 e5	movq	%rsp, %rbp
100015113:	41 57	pushq	%r15
100015115:	41 56	pushq	%r14
100015117:	41 55	pushq	%r13
100015119:	41 54	pushq	%r12
10001511b:	53	pushq	%rbx
10001511c:	48 83 ec 18	subq	$24, %rsp
100015120:	49 89 d4	movq	%rdx, %r12
100015123:	49 89 fd	movq	%rdi, %r13
100015126:	48 8b 3d 6b d5 03 00	movq	251243(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSData
10001512d:	48 8b 35 0c bf 03 00	movq	245516(%rip), %rsi ## Objc selector ref: dataWithContentsOfURL:
100015134:	ff 15 e6 7a 02 00	callq	*162534(%rip) ## Objc message: +[NSData dataWithContentsOfURL:]
10001513a:	48 8d 75 c8	leaq	-56(%rbp), %rsi
10001513e:	48 c7 06 00 00 00 00	movq	$0, (%rsi)
100015145:	48 89 c7	movq	%rax, %rdi
100015148:	e8 3d a1 01 00	callq	0x10002f28a ## symbol stub for: _ColorSyncProfileCreate
10001514d:	48 85 c0	testq	%rax, %rax
100015150:	74 4f	je	0x1000151a1
100015152:	48 89 c3	movq	%rax, %rbx
100015155:	48 89 c7	movq	%rax, %rdi
100015158:	e8 15 a1 01 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
10001515d:	41 b6 01	movb	$1, %r14b
100015160:	48 85 c0	testq	%rax, %rax
100015163:	0f 84 3d 01 00 00	je	0x1000152a6
100015169:	49 89 c7	movq	%rax, %r15
10001516c:	48 89 c7	movq	%rax, %rdi
10001516f:	e8 2c 9d 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100015174:	48 85 c0	testq	%rax, %rax
100015177:	0f 84 21 01 00 00	je	0x10001529e
10001517d:	8b 40 0c	movl	12(%rax), %eax
100015180:	3d 71 74 72 70	cmpl	$1886549105, %eax
100015185:	7f 22	jg	0x1000151a9
100015187:	3d 74 73 62 61	cmpl	$1633842036, %eax
10001518c:	74 34	je	0x1000151c2
10001518e:	3d 72 74 6e 6d	cmpl	$1835955314, %eax
100015193:	74 2d	je	0x1000151c2
100015195:	3d 6c 63 6d 6e	cmpl	$1852662636, %eax
10001519a:	74 26	je	0x1000151c2
10001519c:	e9 fd 00 00 00	jmp	0x10001529e
1000151a1:	45 31 f6	xorl	%r14d, %r14d
1000151a4:	e9 fd 00 00 00	jmp	0x1000152a6
1000151a9:	3d 72 74 72 70	cmpl	$1886549106, %eax
1000151ae:	74 12	je	0x1000151c2
1000151b0:	3d 63 61 70 73	cmpl	$1936744803, %eax
1000151b5:	74 0b	je	0x1000151c2
1000151b7:	3d 72 6e 63 73	cmpl	$1935896178, %eax
1000151bc:	0f 85 dc 00 00 00	jne	0x10001529e
1000151c2:	48 8b 3d 9f d4 03 00	movq	251039(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableDictionary
1000151c9:	48 8b 35 c0 be 03 00	movq	245440(%rip), %rsi ## Objc selector ref: dictionary
1000151d0:	ff 15 4a 7a 02 00	callq	*162378(%rip) ## Objc message: +[NSMutableDictionary dictionary]
1000151d6:	4c 89 6d d0	movq	%r13, -48(%rbp)
1000151da:	49 89 c5	movq	%rax, %r13
1000151dd:	48 8b 05 84 78 02 00	movq	161924(%rip), %rax ## literal pool symbol address: _kColorSyncProfileHeader
1000151e4:	48 8b 08	movq	(%rax), %rcx
1000151e7:	48 8b 35 f2 cd 03 00	movq	249330(%rip), %rsi ## Objc selector ref: setObject:forKey:
1000151ee:	4c 89 ef	movq	%r13, %rdi
1000151f1:	4c 89 fa	movq	%r15, %rdx
1000151f4:	ff 15 26 7a 02 00	callq	*162342(%rip) ## Objc message: -[%rdi setObject:forKey:]
1000151fa:	48 8b 05 77 78 02 00	movq	161911(%rip), %rax ## literal pool symbol address: _kColorSyncProfileURL
100015201:	48 8b 08	movq	(%rax), %rcx
100015204:	4c 89 ef	movq	%r13, %rdi
100015207:	48 8b 35 d2 cd 03 00	movq	249298(%rip), %rsi ## Objc selector ref: setObject:forKey:
10001520e:	4c 89 e2	movq	%r12, %rdx
100015211:	4c 8b 25 08 7a 02 00	movq	162312(%rip), %r12 ## Objc message: -[%rdi setObject:forKey:]
100015218:	41 ff d4	callq	*%r12
10001521b:	48 89 df	movq	%rbx, %rdi
10001521e:	e8 49 a0 01 00	callq	0x10002f26c ## symbol stub for: _ColorSyncProfileCopyDescriptionString
100015223:	48 89 c3	movq	%rax, %rbx
100015226:	48 8b 05 33 78 02 00	movq	161843(%rip), %rax ## literal pool symbol address: _kColorSyncProfileDescription
10001522d:	48 8b 08	movq	(%rax), %rcx
100015230:	4c 89 ef	movq	%r13, %rdi
100015233:	48 8b 35 a6 cd 03 00	movq	249254(%rip), %rsi ## Objc selector ref: setObject:forKey:
10001523a:	48 89 da	movq	%rbx, %rdx
10001523d:	41 ff d4	callq	*%r12
100015240:	48 89 df	movq	%rbx, %rdi
100015243:	e8 ca 9c 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100015248:	48 8b 3d 69 d4 03 00	movq	250985(%rip), %rdi ## Objc class ref: FilterDocProfile
10001524f:	48 8b 35 72 c5 03 00	movq	247154(%rip), %rsi ## Objc selector ref: newWithIterateData:
100015256:	4c 89 ea	movq	%r13, %rdx
100015259:	41 ff d4	callq	*%r12
10001525c:	48 89 c3	movq	%rax, %rbx
10001525f:	48 8b 05 62 dc 03 00	movq	253026(%rip), %rax
100015266:	4c 8b 6d d0	movq	-48(%rbp), %r13
10001526a:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001526f:	48 8b 35 fa b9 03 00	movq	244218(%rip), %rsi ## Objc selector ref: addObject:
100015276:	48 89 da	movq	%rbx, %rdx
100015279:	41 ff d4	callq	*%r12
10001527c:	48 89 df	movq	%rbx, %rdi
10001527f:	ff 15 d3 79 02 00	callq	*162259(%rip) ## literal pool symbol address: _objc_release
100015285:	48 8b 05 d4 db 03 00	movq	252884(%rip), %rax
10001528c:	4c 89 ef	movq	%r13, %rdi
10001528f:	49 8b 54 05 00	movq	(%r13,%rax), %rdx
100015294:	48 8b 35 9d c3 03 00	movq	246685(%rip), %rsi ## Objc selector ref: loadProfiles:
10001529b:	41 ff d4	callq	*%r12
10001529e:	4c 89 ff	movq	%r15, %rdi
1000152a1:	e8 6c 9c 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000152a6:	41 0f b6 c6	movzbl	%r14b, %eax
1000152aa:	48 83 c4 18	addq	$24, %rsp
1000152ae:	5b	popq	%rbx
1000152af:	41 5c	popq	%r12
1000152b1:	41 5d	popq	%r13
1000152b3:	41 5e	popq	%r14
1000152b5:	41 5f	popq	%r15
1000152b7:	5d	popq	%rbp
1000152b8:	c3	retq
1000152b9:	55	pushq	%rbp
1000152ba:	48 89 e5	movq	%rsp, %rbp
1000152bd:	41 57	pushq	%r15
1000152bf:	41 56	pushq	%r14
1000152c1:	41 55	pushq	%r13
1000152c3:	41 54	pushq	%r12
1000152c5:	53	pushq	%rbx
1000152c6:	48 83 ec 78	subq	$120, %rsp
1000152ca:	49 89 d5	movq	%rdx, %r13
1000152cd:	49 89 fc	movq	%rdi, %r12
1000152d0:	4c 8b 3d f9 db 03 00	movq	252921(%rip), %r15
1000152d7:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
1000152db:	48 85 ff	testq	%rdi, %rdi
1000152de:	74 05	je	0x1000152e5
1000152e0:	e8 2d 9c 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000152e5:	48 8b 1d dc db 03 00	movq	252892(%rip), %rbx
1000152ec:	49 83 3c 1c 00	cmpq	$0, (%r12,%rbx)
1000152f1:	75 10	jne	0x100015303
1000152f3:	48 8b 3d 8e d2 03 00	movq	250510(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
1000152fa:	e8 c5 a1 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
1000152ff:	49 89 04 1c	movq	%rax, (%r12,%rbx)
100015303:	48 8b 3d 7e d2 03 00	movq	250494(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
10001530a:	48 8b 35 1f ba 03 00	movq	244255(%rip), %rsi ## Objc selector ref: arrayWithCapacity:
100015311:	4c 8b 35 08 79 02 00	movq	162056(%rip), %r14 ## Objc message: +[NSMutableArray arrayWithCapacity:]
100015318:	31 d2	xorl	%edx, %edx
10001531a:	41 ff d6	callq	*%r14
10001531d:	48 89 c7	movq	%rax, %rdi
100015320:	ff 15 3a 79 02 00	callq	*162106(%rip) ## literal pool symbol address: _objc_retain
100015326:	48 89 c3	movq	%rax, %rbx
100015329:	48 8b 3d e8 d2 03 00	movq	250600(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100015330:	48 8b 05 49 76 02 00	movq	161353(%rip), %rax ## literal pool symbol address: _kCFBooleanTrue
100015337:	48 8b 10	movq	(%rax), %rdx
10001533a:	48 8b 05 97 77 02 00	movq	161687(%rip), %rax ## literal pool symbol address: _kColorSyncWaitForCacheReply
100015341:	48 8b 08	movq	(%rax), %rcx
100015344:	48 8b 35 55 bd 03 00	movq	245077(%rip), %rsi ## Objc selector ref: dictionaryWithObject:forKey:
10001534b:	41 ff d6	callq	*%r14
10001534e:	48 8d 3d 5f 68 00 00	leaq	26719(%rip), %rdi
100015355:	31 f6	xorl	%esi, %esi
100015357:	48 89 da	movq	%rbx, %rdx
10001535a:	48 89 c1	movq	%rax, %rcx
10001535d:	45 31 c0	xorl	%r8d, %r8d
100015360:	e8 fb 9e 01 00	callq	0x10002f260 ## symbol stub for: _ColorSyncIterateInstalledProfilesWithOptions
100015365:	4b 89 1c 3c	movq	%rbx, (%r12,%r15)
100015369:	48 85 db	testq	%rbx, %rbx
10001536c:	0f 84 cb 01 00 00	je	0x10001553d
100015372:	48 8b 35 47 bc 03 00	movq	244807(%rip), %rsi ## Objc selector ref: count
100015379:	48 89 df	movq	%rbx, %rdi
10001537c:	ff 15 9e 78 02 00	callq	*161950(%rip) ## Objc message: +[NSDictionary count]
100015382:	48 83 f8 02	cmpq	$2, %rax
100015386:	0f 82 b1 01 00 00	jb	0x10001553d
10001538c:	48 8b 05 3d db 03 00	movq	252733(%rip), %rax
100015393:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100015397:	48 8b 35 02 cf 03 00	movq	249602(%rip), %rsi ## Objc selector ref: sortUsingFunction:context:
10001539e:	48 8d 15 3f 02 00 00	leaq	575(%rip), %rdx
1000153a5:	31 c9	xorl	%ecx, %ecx
1000153a7:	4c 8b 3d 72 78 02 00	movq	161906(%rip), %r15 ## Objc message: -[%rdi sortUsingFunction:context:]
1000153ae:	41 ff d7	callq	*%r15
1000153b1:	48 8b 35 48 c4 03 00	movq	246856(%rip), %rsi ## Objc selector ref: numberOfItems
1000153b8:	4c 89 ef	movq	%r13, %rdi
1000153bb:	41 ff d7	callq	*%r15
1000153be:	48 89 c3	movq	%rax, %rbx
1000153c1:	48 8b 35 10 c7 03 00	movq	247568(%rip), %rsi ## Objc selector ref: removeAllToolTips
1000153c8:	4c 89 ef	movq	%r13, %rdi
1000153cb:	41 ff d7	callq	*%r15
1000153ce:	48 83 fb 08	cmpq	$8, %rbx
1000153d2:	7c 20	jl	0x1000153f4
1000153d4:	4c 8b 35 15 c7 03 00	movq	247573(%rip), %r14 ## Objc selector ref: removeItemAtIndex:
1000153db:	48 ff c3	incq	%rbx
1000153de:	48 8d 53 fe	leaq	-2(%rbx), %rdx
1000153e2:	4c 89 ef	movq	%r13, %rdi
1000153e5:	4c 89 f6	movq	%r14, %rsi
1000153e8:	41 ff d7	callq	*%r15
1000153eb:	48 ff cb	decq	%rbx
1000153ee:	48 83 fb 08	cmpq	$8, %rbx
1000153f2:	77 ea	ja	0x1000153de
1000153f4:	48 8b 05 dd d9 03 00	movq	252381(%rip), %rax
1000153fb:	49 8b 14 04	movq	(%r12,%rax), %rdx
1000153ff:	48 8b 35 9a cb 03 00	movq	248730(%rip), %rsi ## Objc selector ref: setMenu:
100015406:	4c 89 6d d0	movq	%r13, -48(%rbp)
10001540a:	4c 89 ef	movq	%r13, %rdi
10001540d:	41 ff d7	callq	*%r15
100015410:	48 8b 05 b9 da 03 00	movq	252601(%rip), %rax
100015417:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001541b:	48 8b 35 9e bb 03 00	movq	244638(%rip), %rsi ## Objc selector ref: count
100015422:	41 ff d7	callq	*%r15
100015425:	48 85 c0	testq	%rax, %rax
100015428:	7e 39	jle	0x100015463
10001542a:	49 89 c5	movq	%rax, %r13
10001542d:	48 8b 1d fc c1 03 00	movq	246268(%rip), %rbx ## Objc selector ref: loadProfile:
100015434:	45 31 f6	xorl	%r14d, %r14d
100015437:	48 8b 05 92 da 03 00	movq	252562(%rip), %rax
10001543e:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100015442:	48 8b 35 17 c4 03 00	movq	246807(%rip), %rsi ## Objc selector ref: objectAtIndex:
100015449:	4c 89 f2	movq	%r14, %rdx
10001544c:	41 ff d7	callq	*%r15
10001544f:	4c 89 e7	movq	%r12, %rdi
100015452:	48 89 de	movq	%rbx, %rsi
100015455:	48 89 c2	movq	%rax, %rdx
100015458:	41 ff d7	callq	*%r15
10001545b:	49 ff c6	incq	%r14
10001545e:	4d 39 f5	cmpq	%r14, %r13
100015461:	75 d4	jne	0x100015437
100015463:	48 8b 05 5e da 03 00	movq	252510(%rip), %rax
10001546a:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001546e:	48 8b 05 43 73 02 00	movq	160579(%rip), %rax ## literal pool symbol address: __NSConcreteStackBlock
100015475:	48 8d 55 88	leaq	-120(%rbp), %rdx
100015479:	48 89 02	movq	%rax, (%rdx)
10001547c:	b8 00 00 00 c2	movl	$3254779904, %eax
100015481:	48 89 42 08	movq	%rax, 8(%rdx)
100015485:	48 8d 05 a0 01 00 00	leaq	416(%rip), %rax
10001548c:	48 89 42 10	movq	%rax, 16(%rdx)
100015490:	48 8d 05 71 78 02 00	leaq	161905(%rip), %rax
100015497:	48 89 42 18	movq	%rax, 24(%rdx)
10001549b:	4c 89 62 20	movq	%r12, 32(%rdx)
10001549f:	48 8b 35 2a bd 03 00	movq	245034(%rip), %rsi ## Objc selector ref: enumerateObjectsUsingBlock:
1000154a6:	4c 89 fb	movq	%r15, %rbx
1000154a9:	41 ff d7	callq	*%r15
1000154ac:	48 8b 05 e5 d9 03 00	movq	252389(%rip), %rax
1000154b3:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000154b7:	4c 8b 3d 32 c6 03 00	movq	247346(%rip), %r15 ## Objc selector ref: removeItemAtIndex:
1000154be:	4c 89 fe	movq	%r15, %rsi
1000154c1:	31 d2	xorl	%edx, %edx
1000154c3:	ff d3	callq	*%rbx
1000154c5:	48 8b 05 d4 d9 03 00	movq	252372(%rip), %rax
1000154cc:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000154d0:	4c 89 fe	movq	%r15, %rsi
1000154d3:	31 d2	xorl	%edx, %edx
1000154d5:	ff d3	callq	*%rbx
1000154d7:	48 8b 05 ca d9 03 00	movq	252362(%rip), %rax
1000154de:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000154e2:	4c 89 fe	movq	%r15, %rsi
1000154e5:	31 d2	xorl	%edx, %edx
1000154e7:	ff d3	callq	*%rbx
1000154e9:	48 8b 05 c0 d9 03 00	movq	252352(%rip), %rax
1000154f0:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000154f4:	4c 89 fe	movq	%r15, %rsi
1000154f7:	31 d2	xorl	%edx, %edx
1000154f9:	ff d3	callq	*%rbx
1000154fb:	48 8b 05 b6 d9 03 00	movq	252342(%rip), %rax
100015502:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100015506:	4c 89 fe	movq	%r15, %rsi
100015509:	31 d2	xorl	%edx, %edx
10001550b:	ff d3	callq	*%rbx
10001550d:	48 8b 05 ac d9 03 00	movq	252332(%rip), %rax
100015514:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100015518:	4c 89 fe	movq	%r15, %rsi
10001551b:	31 d2	xorl	%edx, %edx
10001551d:	ff d3	callq	*%rbx
10001551f:	48 8b 5d d0	movq	-48(%rbp), %rbx
100015523:	48 85 db	testq	%rbx, %rbx
100015526:	74 69	je	0x100015591
100015528:	48 8b 15 a1 b8 03 00	movq	243873(%rip), %rdx ## Objc selector ref: bounds
10001552f:	48 8d 7d b0	leaq	-80(%rbp), %rdi
100015533:	48 89 de	movq	%rbx, %rsi
100015536:	e8 a7 9f 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001553b:	eb 5f	jmp	0x10001559c
10001553d:	48 8b 3d 5c d0 03 00	movq	249948(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100015544:	48 8b 35 9d c1 03 00	movq	246173(%rip), %rsi ## Objc selector ref: mainBundle
10001554b:	48 8b 1d ce 76 02 00	movq	161486(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100015552:	ff d3	callq	*%rbx
100015554:	48 8b 35 05 c1 03 00	movq	246021(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001555b:	48 8d 15 7e 89 02 00	leaq	166270(%rip), %rdx ## Objc cfstring ref: @"No Profiles available"
100015562:	48 8d 0d 37 79 02 00	leaq	162103(%rip), %rcx ## Objc cfstring ref: @""
100015569:	48 89 c7	movq	%rax, %rdi
10001556c:	45 31 c0	xorl	%r8d, %r8d
10001556f:	ff d3	callq	*%rbx
100015571:	48 8b 35 e8 b6 03 00	movq	243432(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100015578:	4c 89 ef	movq	%r13, %rdi
10001557b:	48 89 c2	movq	%rax, %rdx
10001557e:	48 89 d8	movq	%rbx, %rax
100015581:	48 83 c4 78	addq	$120, %rsp
100015585:	5b	popq	%rbx
100015586:	41 5c	popq	%r12
100015588:	41 5d	popq	%r13
10001558a:	41 5e	popq	%r14
10001558c:	41 5f	popq	%r15
10001558e:	5d	popq	%rbp
10001558f:	ff e0	jmpq	*%rax
100015591:	0f 57 c0	xorps	%xmm0, %xmm0
100015594:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100015598:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10001559c:	48 8b 35 ed b6 03 00	movq	243437(%rip), %rsi ## Objc selector ref: addToolTipRect:owner:userData:
1000155a3:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
1000155a7:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
1000155ab:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000155b0:	0f 11 04 24	movups	%xmm0, (%rsp)
1000155b4:	48 89 df	movq	%rbx, %rdi
1000155b7:	4c 89 e2	movq	%r12, %rdx
1000155ba:	31 c9	xorl	%ecx, %ecx
1000155bc:	4c 8b 35 5d 76 02 00	movq	161373(%rip), %r14 ## Objc message: -[%rdi addToolTipRect:owner:userData:]
1000155c3:	41 ff d6	callq	*%r14
1000155c6:	48 8b 35 3b c6 03 00	movq	247355(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
1000155cd:	48 89 df	movq	%rbx, %rdi
1000155d0:	31 d2	xorl	%edx, %edx
1000155d2:	41 ff d6	callq	*%r14
1000155d5:	48 83 c4 78	addq	$120, %rsp
1000155d9:	5b	popq	%rbx
1000155da:	41 5c	popq	%r12
1000155dc:	41 5d	popq	%r13
1000155de:	41 5e	popq	%r14
1000155e0:	41 5f	popq	%r15
1000155e2:	5d	popq	%rbp
1000155e3:	c3	retq
1000155e4:	55	pushq	%rbp
1000155e5:	48 89 e5	movq	%rsp, %rbp
1000155e8:	41 57	pushq	%r15
1000155ea:	41 56	pushq	%r14
1000155ec:	41 54	pushq	%r12
1000155ee:	53	pushq	%rbx
1000155ef:	49 89 f7	movq	%rsi, %r15
1000155f2:	4c 8b 35 df c3 03 00	movq	246751(%rip), %r14 ## Objc selector ref: profName
1000155f9:	4c 8b 25 20 76 02 00	movq	161312(%rip), %r12 ## Objc message: -[%rdi profName]
100015600:	4c 89 f6	movq	%r14, %rsi
100015603:	41 ff d4	callq	*%r12
100015606:	48 89 c3	movq	%rax, %rbx
100015609:	4c 89 ff	movq	%r15, %rdi
10001560c:	4c 89 f6	movq	%r14, %rsi
10001560f:	41 ff d4	callq	*%r12
100015612:	48 8b 35 0f b8 03 00	movq	243727(%rip), %rsi ## Objc selector ref: caseInsensitiveCompare:
100015619:	48 89 df	movq	%rbx, %rdi
10001561c:	48 89 c2	movq	%rax, %rdx
10001561f:	4c 89 e0	movq	%r12, %rax
100015622:	5b	popq	%rbx
100015623:	41 5c	popq	%r12
100015625:	41 5e	popq	%r14
100015627:	41 5f	popq	%r15
100015629:	5d	popq	%rbp
10001562a:	ff e0	jmpq	*%rax
10001562c:	55	pushq	%rbp
10001562d:	48 89 e5	movq	%rsp, %rbp
100015630:	48 89 f2	movq	%rsi, %rdx
100015633:	48 8b 7f 20	movq	32(%rdi), %rdi
100015637:	48 8b 35 f2 bf 03 00	movq	245746(%rip), %rsi ## Objc selector ref: loadProfile:
10001563e:	5d	popq	%rbp
10001563f:	ff 25 db 75 02 00	jmpq	*161243(%rip) ## Objc message: -[%rdi loadProfile:]
100015645:	55	pushq	%rbp
100015646:	48 89 e5	movq	%rsp, %rbp
100015649:	48 83 c7 20	addq	$32, %rdi
10001564d:	48 8b 76 20	movq	32(%rsi), %rsi
100015651:	ba 03 00 00 00	movl	$3, %edx
100015656:	5d	popq	%rbp
100015657:	e9 1e 9d 01 00	jmp	0x10002f37a ## symbol stub for: __Block_object_assign
10001565c:	55	pushq	%rbp
10001565d:	48 89 e5	movq	%rsp, %rbp
100015660:	48 8b 7f 20	movq	32(%rdi), %rdi
100015664:	be 03 00 00 00	movl	$3, %esi
100015669:	5d	popq	%rbp
10001566a:	e9 11 9d 01 00	jmp	0x10002f380 ## symbol stub for: __Block_object_dispose
10001566f:	55	pushq	%rbp
100015670:	48 89 e5	movq	%rsp, %rbp
100015673:	41 57	pushq	%r15
100015675:	41 56	pushq	%r14
100015677:	41 55	pushq	%r13
100015679:	41 54	pushq	%r12
10001567b:	53	pushq	%rbx
10001567c:	48 83 ec 38	subq	$56, %rsp
100015680:	48 8b 05 51 d8 03 00	movq	251985(%rip), %rax
100015687:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
10001568c:	0f 84 3e 02 00 00	je	0x1000158d0
100015692:	48 89 fb	movq	%rdi, %rbx
100015695:	48 8b 05 d4 d7 03 00	movq	251860(%rip), %rax
10001569c:	8b 04 07	movl	(%rdi,%rax), %eax
10001569f:	89 45 c8	movl	%eax, -56(%rbp)
1000156a2:	4c 8b 2d af d7 03 00	movq	251823(%rip), %r13
1000156a9:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
1000156ad:	4c 8b 35 84 c5 03 00	movq	247172(%rip), %r14 ## Objc selector ref: selectedItem
1000156b4:	4c 8b 25 65 75 02 00	movq	161125(%rip), %r12 ## Objc message: -[%rdi selectedItem]
1000156bb:	4c 89 f6	movq	%r14, %rsi
1000156be:	41 ff d4	callq	*%r12
1000156c1:	4c 8b 3d d0 cc 03 00	movq	249040(%rip), %r15 ## Objc selector ref: tag
1000156c8:	48 89 c7	movq	%rax, %rdi
1000156cb:	4c 89 fe	movq	%r15, %rsi
1000156ce:	41 ff d4	callq	*%r12
1000156d1:	48 89 45 b8	movq	%rax, -72(%rbp)
1000156d5:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000156d9:	4c 89 f6	movq	%r14, %rsi
1000156dc:	41 ff d4	callq	*%r12
1000156df:	48 89 c7	movq	%rax, %rdi
1000156e2:	4c 89 fe	movq	%r15, %rsi
1000156e5:	41 ff d4	callq	*%r12
1000156e8:	48 89 45 d0	movq	%rax, -48(%rbp)
1000156ec:	48 8b 05 ed d6 03 00	movq	251629(%rip), %rax
1000156f3:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000156f7:	48 8b 35 ea be 03 00	movq	245482(%rip), %rsi ## Objc selector ref: lastItem
1000156fe:	41 ff d4	callq	*%r12
100015701:	48 8b 35 b8 cb 03 00	movq	248760(%rip), %rsi ## Objc selector ref: state
100015708:	48 89 c7	movq	%rax, %rdi
10001570b:	41 ff d4	callq	*%r12
10001570e:	48 89 45 b0	movq	%rax, -80(%rbp)
100015712:	48 8b 05 bf d7 03 00	movq	251839(%rip), %rax
100015719:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10001571d:	48 8b 1d 8c ce 03 00	movq	249484(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
100015724:	48 8b 3d c5 ce 03 00	movq	249541(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001572b:	4c 8b 35 d6 c0 03 00	movq	245974(%rip), %r14 ## Objc selector ref: numberWithBool:
100015732:	4c 89 f6	movq	%r14, %rsi
100015735:	ba 01 00 00 00	movl	$1, %edx
10001573a:	41 ff d4	callq	*%r12
10001573d:	49 89 c5	movq	%rax, %r13
100015740:	48 8b 3d a9 ce 03 00	movq	249513(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100015747:	4c 89 f6	movq	%r14, %rsi
10001574a:	ba 01 00 00 00	movl	$1, %edx
10001574f:	41 ff d4	callq	*%r12
100015752:	48 8b 35 df b5 03 00	movq	243167(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100015759:	48 89 df	movq	%rbx, %rdi
10001575c:	4c 89 ea	movq	%r13, %rdx
10001575f:	49 89 f5	movq	%rsi, %r13
100015762:	48 89 c1	movq	%rax, %rcx
100015765:	45 31 c0	xorl	%r8d, %r8d
100015768:	31 c0	xorl	%eax, %eax
10001576a:	41 ff d4	callq	*%r12
10001576d:	48 89 c3	movq	%rax, %rbx
100015770:	48 8b 3d 39 ce 03 00	movq	249401(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100015777:	48 8b 05 62 73 02 00	movq	160610(%rip), %rax ## literal pool symbol address: _kQFilterAppLicationDomain
10001577e:	48 8b 10	movq	(%rax), %rdx
100015781:	48 8b 05 f8 73 02 00	movq	160760(%rip), %rax ## literal pool symbol address: _kQFilterPrintingDomain
100015788:	48 8b 08	movq	(%rax), %rcx
10001578b:	4c 89 ee	movq	%r13, %rsi
10001578e:	45 31 c0	xorl	%r8d, %r8d
100015791:	31 c0	xorl	%eax, %eax
100015793:	41 ff d4	callq	*%r12
100015796:	48 8b 3d 7b ce 03 00	movq	249467(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001579d:	48 8b 35 04 b9 03 00	movq	243972(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
1000157a4:	48 89 da	movq	%rbx, %rdx
1000157a7:	48 89 c1	movq	%rax, %rcx
1000157aa:	41 ff d4	callq	*%r12
1000157ad:	48 89 45 a8	movq	%rax, -88(%rbp)
1000157b1:	48 8b 1d b8 c2 03 00	movq	246456(%rip), %rbx ## Objc selector ref: ref
1000157b8:	4c 89 ff	movq	%r15, %rdi
1000157bb:	48 89 de	movq	%rbx, %rsi
1000157be:	41 ff d4	callq	*%r12
1000157c1:	48 89 c7	movq	%rax, %rdi
1000157c4:	31 f6	xorl	%esi, %esi
1000157c6:	e8 9b 9a 01 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
1000157cb:	48 89 c7	movq	%rax, %rdi
1000157ce:	e8 f7 9c 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
1000157d3:	48 89 45 c0	movq	%rax, -64(%rbp)
1000157d7:	4c 89 ff	movq	%r15, %rdi
1000157da:	48 89 de	movq	%rbx, %rsi
1000157dd:	41 ff d4	callq	*%r12
1000157e0:	48 89 c7	movq	%rax, %rdi
1000157e3:	31 f6	xorl	%esi, %esi
1000157e5:	e8 00 98 01 00	callq	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
1000157ea:	48 89 c3	movq	%rax, %rbx
1000157ed:	48 83 7d d0 01	cmpq	$1, -48(%rbp)
1000157f2:	0f 85 e9 00 00 00	jne	0x1000158e1
1000157f8:	4c 8b 65 b8	movq	-72(%rbp), %r12
1000157fc:	48 89 df	movq	%rbx, %rdi
1000157ff:	e8 1c 98 01 00	callq	0x10002f020 ## symbol stub for: _CGColorSpaceGetProcessColorModel
100015804:	83 f8 02	cmpl	$2, %eax
100015807:	0f 87 f9 01 00 00	ja	0x100015a06
10001580d:	48 98	cltq
10001580f:	48 8d 0d 22 75 02 00	leaq	161058(%rip), %rcx
100015816:	48 8b 04 c1	movq	(%rcx,%rax,8), %rax
10001581a:	4c 8b 30	movq	(%rax), %r14
10001581d:	4d 85 f6	testq	%r14, %r14
100015820:	0f 84 e8 02 00 00	je	0x100015b0e
100015826:	48 89 5d d0	movq	%rbx, -48(%rbp)
10001582a:	48 8b 05 7f cd 03 00	movq	249215(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSArray
100015831:	48 89 45 c8	movq	%rax, -56(%rbp)
100015835:	4c 8b 3d dc cd 03 00	movq	249308(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001583c:	48 8b 3d ad cd 03 00	movq	249261(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100015843:	48 8b 35 d6 bf 03 00	movq	245718(%rip), %rsi ## Objc selector ref: numberWithInt:
10001584a:	31 d2	xorl	%edx, %edx
10001584c:	ff 15 ce 73 02 00	callq	*160718(%rip) ## Objc message: +[NSNumber numberWithInt:]
100015852:	4d 85 e4	testq	%r12, %r12
100015855:	75 0a	jne	0x100015861
100015857:	48 8b 0d 0a 73 02 00	movq	160522(%rip), %rcx ## literal pool symbol address: _kQFilterIntermediateColorSpace
10001585e:	4c 8b 31	movq	(%rcx), %r14
100015861:	4c 8b 25 38 b8 03 00	movq	243768(%rip), %r12 ## Objc selector ref: dictionaryWithObject:forKey:
100015868:	4c 89 ff	movq	%r15, %rdi
10001586b:	4c 89 e6	movq	%r12, %rsi
10001586e:	48 89 c2	movq	%rax, %rdx
100015871:	4c 89 f1	movq	%r14, %rcx
100015874:	4c 8b 2d a5 73 02 00	movq	160677(%rip), %r13 ## Objc message: -[%rdi dictionaryWithObject:forKey:]
10001587b:	41 ff d5	callq	*%r13
10001587e:	48 8b 0d ab 72 02 00	movq	160427(%rip), %rcx ## literal pool symbol address: _kQFilterDocumentColorSettings
100015885:	48 8b 09	movq	(%rcx), %rcx
100015888:	4c 89 ff	movq	%r15, %rdi
10001588b:	4c 89 e6	movq	%r12, %rsi
10001588e:	48 89 c2	movq	%rax, %rdx
100015891:	41 ff d5	callq	*%r13
100015894:	49 89 c7	movq	%rax, %r15
100015897:	48 8b 3d 12 cd 03 00	movq	249106(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
10001589e:	48 8b 1d 93 b4 03 00	movq	242835(%rip), %rbx ## Objc selector ref: arrayWithObjects:
1000158a5:	48 89 de	movq	%rbx, %rsi
1000158a8:	48 8b 55 c0	movq	-64(%rbp), %rdx
1000158ac:	31 c9	xorl	%ecx, %ecx
1000158ae:	31 c0	xorl	%eax, %eax
1000158b0:	41 ff d5	callq	*%r13
1000158b3:	48 8b 7d c8	movq	-56(%rbp), %rdi
1000158b7:	48 89 de	movq	%rbx, %rsi
1000158ba:	4c 89 fa	movq	%r15, %rdx
1000158bd:	48 89 c1	movq	%rax, %rcx
1000158c0:	45 31 c0	xorl	%r8d, %r8d
1000158c3:	31 c0	xorl	%eax, %eax
1000158c5:	41 ff d5	callq	*%r13
1000158c8:	49 89 dd	movq	%rbx, %r13
1000158cb:	e9 2f 01 00 00	jmp	0x1000159ff
1000158d0:	31 c0	xorl	%eax, %eax
1000158d2:	48 83 c4 38	addq	$56, %rsp
1000158d6:	5b	popq	%rbx
1000158d7:	41 5c	popq	%r12
1000158d9:	41 5d	popq	%r13
1000158db:	41 5e	popq	%r14
1000158dd:	41 5f	popq	%r15
1000158df:	5d	popq	%rbp
1000158e0:	c3	retq
1000158e1:	48 89 5d d0	movq	%rbx, -48(%rbp)
1000158e5:	31 db	xorl	%ebx, %ebx
1000158e7:	48 83 7d b0 01	cmpq	$1, -80(%rbp)
1000158ec:	0f 94 c3	sete	%bl
1000158ef:	4c 8b 2d ba cc 03 00	movq	249018(%rip), %r13 ## Objc class ref: _OBJC_CLASS_$_NSArray
1000158f6:	48 8b 3d f3 cc 03 00	movq	249075(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
1000158fd:	4c 8b 3d 1c bf 03 00	movq	245532(%rip), %r15 ## Objc selector ref: numberWithInt:
100015904:	4c 89 fe	movq	%r15, %rsi
100015907:	31 d2	xorl	%edx, %edx
100015909:	41 ff d4	callq	*%r12
10001590c:	49 89 c6	movq	%rax, %r14
10001590f:	48 8b 3d da cc 03 00	movq	249050(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100015916:	4c 89 fe	movq	%r15, %rsi
100015919:	8b 55 c8	movl	-56(%rbp), %edx
10001591c:	41 ff d4	callq	*%r12
10001591f:	49 89 c7	movq	%rax, %r15
100015922:	48 8b 3d c7 cc 03 00	movq	249031(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100015929:	48 8b 35 d8 be 03 00	movq	245464(%rip), %rsi ## Objc selector ref: numberWithBool:
100015930:	89 da	movl	%ebx, %edx
100015932:	41 ff d4	callq	*%r12
100015935:	4c 89 ef	movq	%r13, %rdi
100015938:	4c 8b 2d f9 b3 03 00	movq	242681(%rip), %r13 ## Objc selector ref: arrayWithObjects:
10001593f:	4c 89 ee	movq	%r13, %rsi
100015942:	4c 89 f2	movq	%r14, %rdx
100015945:	4c 89 f9	movq	%r15, %rcx
100015948:	49 89 c0	movq	%rax, %r8
10001594b:	45 31 c9	xorl	%r9d, %r9d
10001594e:	31 c0	xorl	%eax, %eax
100015950:	41 ff d4	callq	*%r12
100015953:	49 89 c6	movq	%rax, %r14
100015956:	48 8b 3d 53 cc 03 00	movq	248915(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
10001595d:	48 83 7d b8 00	cmpq	$0, -72(%rbp)
100015962:	75 09	jne	0x10001596d
100015964:	48 8b 05 fd 71 02 00	movq	160253(%rip), %rax ## literal pool symbol address: _kQFilterIntermediateColorSpace
10001596b:	eb 07	jmp	0x100015974
10001596d:	48 8b 05 2c 72 02 00	movq	160300(%rip), %rax ## literal pool symbol address: _kQFilterTargetColorSpace
100015974:	48 8b 1d a5 72 02 00	movq	160421(%rip), %rbx ## Objc message: +[NSArray arrayWithObjects:]
10001597b:	48 8b 10	movq	(%rax), %rdx
10001597e:	48 8b 05 13 72 02 00	movq	160275(%rip), %rax ## literal pool symbol address: _kQFilterSourceRenderingIntent
100015985:	48 8b 08	movq	(%rax), %rcx
100015988:	48 8b 05 71 71 02 00	movq	160113(%rip), %rax ## literal pool symbol address: _kQFilterBlackPointCompensation
10001598f:	4c 8b 00	movq	(%rax), %r8
100015992:	4c 89 ee	movq	%r13, %rsi
100015995:	45 31 c9	xorl	%r9d, %r9d
100015998:	31 c0	xorl	%eax, %eax
10001599a:	ff d3	callq	*%rbx
10001599c:	4c 8b 3d 0d cc 03 00	movq	248845(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSArray
1000159a3:	4c 8b 25 6e cc 03 00	movq	248942(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
1000159aa:	4c 89 e7	movq	%r12, %rdi
1000159ad:	48 8b 35 f4 b6 03 00	movq	243444(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
1000159b4:	4c 89 f2	movq	%r14, %rdx
1000159b7:	48 89 c1	movq	%rax, %rcx
1000159ba:	ff d3	callq	*%rbx
1000159bc:	48 8b 0d 6d 71 02 00	movq	160109(%rip), %rcx ## literal pool symbol address: _kQFilterDocumentColorSettings
1000159c3:	48 8b 09	movq	(%rcx), %rcx
1000159c6:	48 8b 35 d3 b6 03 00	movq	243411(%rip), %rsi ## Objc selector ref: dictionaryWithObject:forKey:
1000159cd:	4c 89 e7	movq	%r12, %rdi
1000159d0:	48 89 c2	movq	%rax, %rdx
1000159d3:	ff d3	callq	*%rbx
1000159d5:	49 89 c6	movq	%rax, %r14
1000159d8:	48 8b 3d d1 cb 03 00	movq	248785(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
1000159df:	4c 89 ee	movq	%r13, %rsi
1000159e2:	48 8b 55 c0	movq	-64(%rbp), %rdx
1000159e6:	31 c9	xorl	%ecx, %ecx
1000159e8:	31 c0	xorl	%eax, %eax
1000159ea:	ff d3	callq	*%rbx
1000159ec:	4c 89 ff	movq	%r15, %rdi
1000159ef:	4c 89 ee	movq	%r13, %rsi
1000159f2:	4c 89 f2	movq	%r14, %rdx
1000159f5:	48 89 c1	movq	%rax, %rcx
1000159f8:	45 31 c0	xorl	%r8d, %r8d
1000159fb:	31 c0	xorl	%eax, %eax
1000159fd:	ff d3	callq	*%rbx
1000159ff:	49 89 c6	movq	%rax, %r14
100015a02:	48 8b 5d d0	movq	-48(%rbp), %rbx
100015a06:	48 89 df	movq	%rbx, %rdi
100015a09:	e8 24 96 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100015a0e:	48 8b 3d 9b cb 03 00	movq	248731(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100015a15:	48 8b 05 ec 70 02 00	movq	159980(%rip), %rax ## literal pool symbol address: _kQFilterColorSettings
100015a1c:	48 8b 10	movq	(%rax), %rdx
100015a1f:	48 8b 05 62 71 02 00	movq	160098(%rip), %rax ## literal pool symbol address: _kQFilterProfileData
100015a26:	48 8b 08	movq	(%rax), %rcx
100015a29:	4c 89 ee	movq	%r13, %rsi
100015a2c:	45 31 c0	xorl	%r8d, %r8d
100015a2f:	31 c0	xorl	%eax, %eax
100015a31:	4c 8b 3d e8 71 02 00	movq	160232(%rip), %r15 ## Objc message: +[NSArray dictionaryWithObject:forKey:]
100015a38:	41 ff d7	callq	*%r15
100015a3b:	48 8b 3d d6 cb 03 00	movq	248790(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100015a42:	48 8b 35 5f b6 03 00	movq	243295(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
100015a49:	4c 89 f2	movq	%r14, %rdx
100015a4c:	48 89 c1	movq	%rax, %rcx
100015a4f:	41 ff d7	callq	*%r15
100015a52:	49 89 c6	movq	%rax, %r14
100015a55:	48 8b 1d 54 cb 03 00	movq	248660(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
100015a5c:	48 8b 3d 8d cb 03 00	movq	248717(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100015a63:	48 8b 35 b6 bd 03 00	movq	245174(%rip), %rsi ## Objc selector ref: numberWithInt:
100015a6a:	ba 01 00 00 00	movl	$1, %edx
100015a6f:	41 ff d7	callq	*%r15
100015a72:	45 31 e4	xorl	%r12d, %r12d
100015a75:	4c 89 24 24	movq	%r12, (%rsp)
100015a79:	48 8d 15 80 89 02 00	leaq	166272(%rip), %rdx ## Objc cfstring ref: @"Image Conversion"
100015a80:	48 89 df	movq	%rbx, %rdi
100015a83:	4c 89 ee	movq	%r13, %rsi
100015a86:	48 89 c1	movq	%rax, %rcx
100015a89:	4c 8b 45 a8	movq	-88(%rbp), %r8
100015a8d:	4d 89 f1	movq	%r14, %r9
100015a90:	31 c0	xorl	%eax, %eax
100015a92:	41 ff d7	callq	*%r15
100015a95:	48 89 c3	movq	%rax, %rbx
100015a98:	48 8b 3d 11 cb 03 00	movq	248593(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100015a9f:	48 8b 05 ca 70 02 00	movq	159946(%rip), %rax ## literal pool symbol address: _kQFilterName
100015aa6:	48 8b 10	movq	(%rax), %rdx
100015aa9:	48 8b 05 f8 70 02 00	movq	159992(%rip), %rax ## literal pool symbol address: _kQFilterType
100015ab0:	48 8b 08	movq	(%rax), %rcx
100015ab3:	48 8b 05 7e 70 02 00	movq	159870(%rip), %rax ## literal pool symbol address: _kQFilterDomains
100015aba:	4c 8b 00	movq	(%rax), %r8
100015abd:	48 8b 05 4c 70 02 00	movq	159820(%rip), %rax ## literal pool symbol address: _kQFilterData
100015ac4:	4c 8b 08	movq	(%rax), %r9
100015ac7:	4c 89 24 24	movq	%r12, (%rsp)
100015acb:	4c 89 ee	movq	%r13, %rsi
100015ace:	31 c0	xorl	%eax, %eax
100015ad0:	41 ff d7	callq	*%r15
100015ad3:	48 8b 3d 3e cb 03 00	movq	248638(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100015ada:	48 8b 35 c7 b5 03 00	movq	243143(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
100015ae1:	48 89 da	movq	%rbx, %rdx
100015ae4:	48 89 c1	movq	%rax, %rcx
100015ae7:	41 ff d7	callq	*%r15
100015aea:	48 8b 3d bf cb 03 00	movq	248767(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_QuartzFilter
100015af1:	48 8b 35 40 bf 03 00	movq	245568(%rip), %rsi ## Objc selector ref: quartzFilterWithProperties:
100015af8:	48 89 c2	movq	%rax, %rdx
100015afb:	4c 89 f8	movq	%r15, %rax
100015afe:	48 83 c4 38	addq	$56, %rsp
100015b02:	5b	popq	%rbx
100015b03:	41 5c	popq	%r12
100015b05:	41 5d	popq	%r13
100015b07:	41 5e	popq	%r14
100015b09:	41 5f	popq	%r15
100015b0b:	5d	popq	%rbp
100015b0c:	ff e0	jmpq	*%rax
100015b0e:	e9 f3 fe ff ff	jmp	0x100015a06
100015b13:	55	pushq	%rbp
100015b14:	48 89 e5	movq	%rsp, %rbp
100015b17:	48 8b 05 52 d3 03 00	movq	250706(%rip), %rax
100015b1e:	8b 04 07	movl	(%rdi,%rax), %eax
100015b21:	5d	popq	%rbp
100015b22:	c3	retq
100015b23:	55	pushq	%rbp
100015b24:	48 89 e5	movq	%rsp, %rbp
100015b27:	41 56	pushq	%r14
100015b29:	53	pushq	%rbx
100015b2a:	48 89 fb	movq	%rdi, %rbx
100015b2d:	48 8b 35 3c b8 03 00	movq	243772(%rip), %rsi ## Objc selector ref: imageFilter
100015b34:	4c 8b 35 e5 70 02 00	movq	159973(%rip), %r14 ## Objc message: +[QuartzFilter imageFilter]
100015b3b:	41 ff d6	callq	*%r14
100015b3e:	48 8b 35 0b c2 03 00	movq	246283(%rip), %rsi ## Objc selector ref: setCurrentFilter:
100015b45:	48 89 df	movq	%rbx, %rdi
100015b48:	48 89 c2	movq	%rax, %rdx
100015b4b:	41 ff d6	callq	*%r14
100015b4e:	48 8b 35 03 c9 03 00	movq	248067(%rip), %rsi ## Objc selector ref: updatePreview
100015b55:	48 89 df	movq	%rbx, %rdi
100015b58:	4c 89 f0	movq	%r14, %rax
100015b5b:	5b	popq	%rbx
100015b5c:	41 5e	popq	%r14
100015b5e:	5d	popq	%rbp
100015b5f:	ff e0	jmpq	*%rax
100015b61:	55	pushq	%rbp
100015b62:	48 89 e5	movq	%rsp, %rbp
100015b65:	48 8b 3d 0c ca 03 00	movq	248332(%rip), %rdi ## Objc class ref: CSUtilities
100015b6c:	48 8b 35 0d b7 03 00	movq	243469(%rip), %rsi ## Objc selector ref: findModule:
100015b73:	ba 73 74 6c 66	movl	$1718383731, %edx
100015b78:	5d	popq	%rbp
100015b79:	ff 25 a1 70 02 00	jmpq	*159905(%rip) ## Objc message: +[CSUtilities findModule:]
100015b7f:	55	pushq	%rbp
100015b80:	48 89 e5	movq	%rsp, %rbp
100015b83:	41 57	pushq	%r15
100015b85:	41 56	pushq	%r14
100015b87:	41 55	pushq	%r13
100015b89:	41 54	pushq	%r12
100015b8b:	53	pushq	%rbx
100015b8c:	50	pushq	%rax
100015b8d:	48 89 d3	movq	%rdx, %rbx
100015b90:	49 89 ff	movq	%rdi, %r15
100015b93:	48 8b 05 3e d3 03 00	movq	250686(%rip), %rax
100015b9a:	48 89 14 07	movq	%rdx, (%rdi,%rax)
100015b9e:	4c 8b 2d bb d2 03 00	movq	250555(%rip), %r13
100015ba5:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
100015ba9:	48 8b 35 08 ba 03 00	movq	244232(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015bb0:	4c 8b 25 69 70 02 00	movq	159849(%rip), %r12 ## Objc message: -[%rdi itemAtIndex:]
100015bb7:	ba 01 00 00 00	movl	$1, %edx
100015bbc:	41 ff d4	callq	*%r12
100015bbf:	48 8b 35 0a c8 03 00	movq	247818(%rip), %rsi ## Objc selector ref: title
100015bc6:	48 89 c7	movq	%rax, %rdi
100015bc9:	41 ff d4	callq	*%r12
100015bcc:	4c 8b 35 dd d1 03 00	movq	250333(%rip), %r14
100015bd3:	4b 8b 14 37	movq	(%r15,%r14), %rdx
100015bd7:	48 8b 35 aa b9 03 00	movq	244138(%rip), %rsi ## Objc selector ref: isEqualToString:
100015bde:	48 89 c7	movq	%rax, %rdi
100015be1:	41 ff d4	callq	*%r12
100015be4:	41 89 c4	movl	%eax, %r12d
100015be7:	48 85 db	testq	%rbx, %rbx
100015bea:	74 3a	je	0x100015c26
100015bec:	4f 8b 2c 2f	movq	(%r15,%r13), %r13
100015bf0:	48 8b 35 e1 bd 03 00	movq	245217(%rip), %rsi ## Objc selector ref: profName
100015bf7:	48 89 df	movq	%rbx, %rdi
100015bfa:	48 8b 1d 1f 70 02 00	movq	159775(%rip), %rbx ## Objc message: -[%rdi profName]
100015c01:	ff d3	callq	*%rbx
100015c03:	48 8b 35 0e c5 03 00	movq	247054(%rip), %rsi ## Objc selector ref: setTitle:
100015c0a:	4c 89 ef	movq	%r13, %rdi
100015c0d:	48 89 c2	movq	%rax, %rdx
100015c10:	ff d3	callq	*%rbx
100015c12:	45 84 e4	testb	%r12b, %r12b
100015c15:	74 51	je	0x100015c68
100015c17:	48 83 c4 08	addq	$8, %rsp
100015c1b:	5b	popq	%rbx
100015c1c:	41 5c	popq	%r12
100015c1e:	41 5d	popq	%r13
100015c20:	41 5e	popq	%r14
100015c22:	41 5f	popq	%r15
100015c24:	5d	popq	%rbp
100015c25:	c3	retq
100015c26:	48 8b 1d f3 6f 02 00	movq	159731(%rip), %rbx ## Objc message: -[%rdi setTitle:]
100015c2d:	45 84 e4	testb	%r12b, %r12b
100015c30:	74 16	je	0x100015c48
100015c32:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100015c36:	48 8b 35 b3 be 03 00	movq	245427(%rip), %rsi ## Objc selector ref: removeItemAtIndex:
100015c3d:	ba 01 00 00 00	movl	$1, %edx
100015c42:	ff 15 d8 6f 02 00	callq	*159704(%rip) ## Objc message: -[%rdi removeItemAtIndex:]
100015c48:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100015c4c:	4b 8b 14 37	movq	(%r15,%r14), %rdx
100015c50:	48 8b 35 c1 c4 03 00	movq	246977(%rip), %rsi ## Objc selector ref: setTitle:
100015c57:	ff d3	callq	*%rbx
100015c59:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100015c5d:	48 8b 35 a4 bf 03 00	movq	245668(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100015c64:	31 d2	xorl	%edx, %edx
100015c66:	eb 52	jmp	0x100015cba
100015c68:	4c 8b 25 69 d1 03 00	movq	250217(%rip), %r12
100015c6f:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100015c73:	4b 8b 14 37	movq	(%r15,%r14), %rdx
100015c77:	48 8b 0d 92 bd 03 00	movq	245138(%rip), %rcx ## Objc selector ref: profileMenuAction:
100015c7e:	48 8b 35 73 b8 03 00	movq	243827(%rip), %rsi ## Objc selector ref: insertItemWithTitle:action:keyEquivalent:atIndex:
100015c85:	4c 8d 05 14 72 02 00	leaq	160276(%rip), %r8 ## Objc cfstring ref: @""
100015c8c:	41 b9 01 00 00 00	movl	$1, %r9d
100015c92:	48 8b 1d 87 6f 02 00	movq	159623(%rip), %rbx ## Objc message: -[%rdi insertItemWithTitle:action:keyEquivalent:atIndex:]
100015c99:	ff d3	callq	*%rbx
100015c9b:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100015c9f:	ba 01 00 00 00	movl	$1, %edx
100015ca4:	48 8b 35 0d b9 03 00	movq	243981(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015cab:	ff d3	callq	*%rbx
100015cad:	48 8b 35 4c c4 03 00	movq	246860(%rip), %rsi ## Objc selector ref: setTarget:
100015cb4:	48 89 c7	movq	%rax, %rdi
100015cb7:	4c 89 fa	movq	%r15, %rdx
100015cba:	48 89 d8	movq	%rbx, %rax
100015cbd:	48 83 c4 08	addq	$8, %rsp
100015cc1:	5b	popq	%rbx
100015cc2:	41 5c	popq	%r12
100015cc4:	41 5d	popq	%r13
100015cc6:	41 5e	popq	%r14
100015cc8:	41 5f	popq	%r15
100015cca:	5d	popq	%rbp
100015ccb:	ff e0	jmpq	*%rax
100015ccd:	55	pushq	%rbp
100015cce:	48 89 e5	movq	%rsp, %rbp
100015cd1:	41 56	pushq	%r14
100015cd3:	53	pushq	%rbx
100015cd4:	48 89 d3	movq	%rdx, %rbx
100015cd7:	49 89 fe	movq	%rdi, %r14
100015cda:	48 8b 3d 7f c9 03 00	movq	248191(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMenuItem
100015ce1:	e8 02 98 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100015ce6:	48 89 df	movq	%rbx, %rdi
100015ce9:	48 89 c6	movq	%rax, %rsi
100015cec:	e8 fd 97 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
100015cf1:	84 c0	testb	%al, %al
100015cf3:	74 15	je	0x100015d0a
100015cf5:	48 8b 35 1c be 03 00	movq	245276(%rip), %rsi ## Objc selector ref: representedObject
100015cfc:	48 89 df	movq	%rbx, %rdi
100015cff:	ff 15 1b 6f 02 00	callq	*159515(%rip) ## Objc message: +[NSMenuItem representedObject]
100015d05:	48 89 c2	movq	%rax, %rdx
100015d08:	eb 02	jmp	0x100015d0c
100015d0a:	31 d2	xorl	%edx, %edx
100015d0c:	48 8b 35 2d c3 03 00	movq	246573(%rip), %rsi ## Objc selector ref: setProfile:
100015d13:	48 8b 1d 06 6f 02 00	movq	159494(%rip), %rbx ## Objc message: -[%rdi setProfile:]
100015d1a:	4c 89 f7	movq	%r14, %rdi
100015d1d:	ff d3	callq	*%rbx
100015d1f:	48 8b 35 9a b5 03 00	movq	243098(%rip), %rsi ## Objc selector ref: genericAction
100015d26:	4c 89 f7	movq	%r14, %rdi
100015d29:	48 89 d8	movq	%rbx, %rax
100015d2c:	5b	popq	%rbx
100015d2d:	41 5e	popq	%r14
100015d2f:	5d	popq	%rbp
100015d30:	ff e0	jmpq	*%rax
100015d32:	55	pushq	%rbp
100015d33:	48 89 e5	movq	%rsp, %rbp
100015d36:	41 57	pushq	%r15
100015d38:	41 56	pushq	%r14
100015d3a:	41 55	pushq	%r13
100015d3c:	41 54	pushq	%r12
100015d3e:	53	pushq	%rbx
100015d3f:	48 83 ec 48	subq	$72, %rsp
100015d43:	49 89 fd	movq	%rdi, %r13
100015d46:	4c 8b 3d 0b d1 03 00	movq	250123(%rip), %r15
100015d4d:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
100015d51:	4c 8b 35 e0 be 03 00	movq	245472(%rip), %r14 ## Objc selector ref: selectedItem
100015d58:	4c 8b 25 c1 6e 02 00	movq	159425(%rip), %r12 ## Objc message: -[%rdi selectedItem]
100015d5f:	4c 89 f6	movq	%r14, %rsi
100015d62:	41 ff d4	callq	*%r12
100015d65:	48 8b 1d 2c c6 03 00	movq	247340(%rip), %rbx ## Objc selector ref: tag
100015d6c:	48 89 c7	movq	%rax, %rdi
100015d6f:	48 89 de	movq	%rbx, %rsi
100015d72:	41 ff d4	callq	*%r12
100015d75:	48 89 45 a0	movq	%rax, -96(%rbp)
100015d79:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100015d7e:	4c 89 f6	movq	%r14, %rsi
100015d81:	41 ff d4	callq	*%r12
100015d84:	48 89 c7	movq	%rax, %rdi
100015d87:	48 89 de	movq	%rbx, %rsi
100015d8a:	41 ff d4	callq	*%r12
100015d8d:	48 89 45 b8	movq	%rax, -72(%rbp)
100015d91:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100015d96:	4c 89 f6	movq	%r14, %rsi
100015d99:	41 ff d4	callq	*%r12
100015d9c:	48 89 c7	movq	%rax, %rdi
100015d9f:	48 89 de	movq	%rbx, %rsi
100015da2:	41 ff d4	callq	*%r12
100015da5:	48 89 45 a8	movq	%rax, -88(%rbp)
100015da9:	48 8b 05 30 d1 03 00	movq	250160(%rip), %rax
100015db0:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015db5:	4c 8b 35 34 c0 03 00	movq	245812(%rip), %r14 ## Objc selector ref: setEnabled:
100015dbc:	4c 89 f6	movq	%r14, %rsi
100015dbf:	ba 01 00 00 00	movl	$1, %edx
100015dc4:	41 ff d4	callq	*%r12
100015dc7:	48 8b 05 1a d1 03 00	movq	250138(%rip), %rax
100015dce:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015dd3:	4c 89 f6	movq	%r14, %rsi
100015dd6:	ba 01 00 00 00	movl	$1, %edx
100015ddb:	41 ff d4	callq	*%r12
100015dde:	48 8b 05 0b d1 03 00	movq	250123(%rip), %rax
100015de5:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015dea:	4c 89 f6	movq	%r14, %rsi
100015ded:	ba 01 00 00 00	movl	$1, %edx
100015df2:	41 ff d4	callq	*%r12
100015df5:	48 8b 05 fc d0 03 00	movq	250108(%rip), %rax
100015dfc:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e01:	4c 89 f6	movq	%r14, %rsi
100015e04:	ba 01 00 00 00	movl	$1, %edx
100015e09:	41 ff d4	callq	*%r12
100015e0c:	48 8b 05 ed d0 03 00	movq	250093(%rip), %rax
100015e13:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e18:	4c 89 f6	movq	%r14, %rsi
100015e1b:	ba 01 00 00 00	movl	$1, %edx
100015e20:	41 ff d4	callq	*%r12
100015e23:	48 8b 05 de d0 03 00	movq	250078(%rip), %rax
100015e2a:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e2f:	4c 89 f6	movq	%r14, %rsi
100015e32:	ba 01 00 00 00	movl	$1, %edx
100015e37:	41 ff d4	callq	*%r12
100015e3a:	48 8b 05 57 d0 03 00	movq	249943(%rip), %rax
100015e41:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e46:	48 8b 35 b3 b9 03 00	movq	244147(%rip), %rsi ## Objc selector ref: numberOfItems
100015e4d:	41 ff d4	callq	*%r12
100015e50:	48 85 c0	testq	%rax, %rax
100015e53:	74 34	je	0x100015e89
100015e55:	49 89 c7	movq	%rax, %r15
100015e58:	31 db	xorl	%ebx, %ebx
100015e5a:	48 8b 05 37 d0 03 00	movq	249911(%rip), %rax
100015e61:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e66:	48 8b 35 4b b7 03 00	movq	243531(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015e6d:	48 89 da	movq	%rbx, %rdx
100015e70:	41 ff d4	callq	*%r12
100015e73:	48 89 c7	movq	%rax, %rdi
100015e76:	4c 89 f6	movq	%r14, %rsi
100015e79:	ba 01 00 00 00	movl	$1, %edx
100015e7e:	41 ff d4	callq	*%r12
100015e81:	48 ff c3	incq	%rbx
100015e84:	49 39 df	cmpq	%rbx, %r15
100015e87:	75 d1	jne	0x100015e5a
100015e89:	48 8b 05 10 d0 03 00	movq	249872(%rip), %rax
100015e90:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015e95:	48 8b 35 64 b9 03 00	movq	244068(%rip), %rsi ## Objc selector ref: numberOfItems
100015e9c:	ff 15 7e 6d 02 00	callq	*159102(%rip) ## Objc message: -[%rdi numberOfItems]
100015ea2:	48 85 c0	testq	%rax, %rax
100015ea5:	74 34	je	0x100015edb
100015ea7:	49 89 c7	movq	%rax, %r15
100015eaa:	31 db	xorl	%ebx, %ebx
100015eac:	48 8b 05 ed cf 03 00	movq	249837(%rip), %rax
100015eb3:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015eb8:	48 8b 35 f9 b6 03 00	movq	243449(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015ebf:	48 89 da	movq	%rbx, %rdx
100015ec2:	41 ff d4	callq	*%r12
100015ec5:	48 89 c7	movq	%rax, %rdi
100015ec8:	4c 89 f6	movq	%r14, %rsi
100015ecb:	ba 01 00 00 00	movl	$1, %edx
100015ed0:	41 ff d4	callq	*%r12
100015ed3:	48 ff c3	incq	%rbx
100015ed6:	49 39 df	cmpq	%rbx, %r15
100015ed9:	75 d1	jne	0x100015eac
100015edb:	48 8b 05 c6 cf 03 00	movq	249798(%rip), %rax
100015ee2:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015ee7:	48 8b 35 12 b9 03 00	movq	243986(%rip), %rsi ## Objc selector ref: numberOfItems
100015eee:	ff 15 2c 6d 02 00	callq	*159020(%rip) ## Objc message: -[%rdi numberOfItems]
100015ef4:	48 85 c0	testq	%rax, %rax
100015ef7:	74 34	je	0x100015f2d
100015ef9:	49 89 c7	movq	%rax, %r15
100015efc:	31 db	xorl	%ebx, %ebx
100015efe:	48 8b 05 a3 cf 03 00	movq	249763(%rip), %rax
100015f05:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015f0a:	48 8b 35 a7 b6 03 00	movq	243367(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015f11:	48 89 da	movq	%rbx, %rdx
100015f14:	41 ff d4	callq	*%r12
100015f17:	48 89 c7	movq	%rax, %rdi
100015f1a:	4c 89 f6	movq	%r14, %rsi
100015f1d:	ba 01 00 00 00	movl	$1, %edx
100015f22:	41 ff d4	callq	*%r12
100015f25:	48 ff c3	incq	%rbx
100015f28:	49 39 df	cmpq	%rbx, %r15
100015f2b:	75 d1	jne	0x100015efe
100015f2d:	48 8b 05 7c cf 03 00	movq	249724(%rip), %rax
100015f34:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015f39:	48 8b 35 c0 b8 03 00	movq	243904(%rip), %rsi ## Objc selector ref: numberOfItems
100015f40:	ff 15 da 6c 02 00	callq	*158938(%rip) ## Objc message: -[%rdi numberOfItems]
100015f46:	48 85 c0	testq	%rax, %rax
100015f49:	74 34	je	0x100015f7f
100015f4b:	49 89 c7	movq	%rax, %r15
100015f4e:	31 db	xorl	%ebx, %ebx
100015f50:	48 8b 05 59 cf 03 00	movq	249689(%rip), %rax
100015f57:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015f5c:	48 8b 35 55 b6 03 00	movq	243285(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015f63:	48 89 da	movq	%rbx, %rdx
100015f66:	41 ff d4	callq	*%r12
100015f69:	48 89 c7	movq	%rax, %rdi
100015f6c:	4c 89 f6	movq	%r14, %rsi
100015f6f:	ba 01 00 00 00	movl	$1, %edx
100015f74:	41 ff d4	callq	*%r12
100015f77:	48 ff c3	incq	%rbx
100015f7a:	49 39 df	cmpq	%rbx, %r15
100015f7d:	75 d1	jne	0x100015f50
100015f7f:	48 8b 05 32 cf 03 00	movq	249650(%rip), %rax
100015f86:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015f8b:	48 8b 35 6e b8 03 00	movq	243822(%rip), %rsi ## Objc selector ref: numberOfItems
100015f92:	ff 15 88 6c 02 00	callq	*158856(%rip) ## Objc message: -[%rdi numberOfItems]
100015f98:	48 85 c0	testq	%rax, %rax
100015f9b:	74 34	je	0x100015fd1
100015f9d:	49 89 c7	movq	%rax, %r15
100015fa0:	31 db	xorl	%ebx, %ebx
100015fa2:	48 8b 05 0f cf 03 00	movq	249615(%rip), %rax
100015fa9:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015fae:	48 8b 35 03 b6 03 00	movq	243203(%rip), %rsi ## Objc selector ref: itemAtIndex:
100015fb5:	48 89 da	movq	%rbx, %rdx
100015fb8:	41 ff d4	callq	*%r12
100015fbb:	48 89 c7	movq	%rax, %rdi
100015fbe:	4c 89 f6	movq	%r14, %rsi
100015fc1:	ba 01 00 00 00	movl	$1, %edx
100015fc6:	41 ff d4	callq	*%r12
100015fc9:	48 ff c3	incq	%rbx
100015fcc:	49 39 df	cmpq	%rbx, %r15
100015fcf:	75 d1	jne	0x100015fa2
100015fd1:	48 8b 05 e8 ce 03 00	movq	249576(%rip), %rax
100015fd8:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100015fdd:	48 8b 35 1c b8 03 00	movq	243740(%rip), %rsi ## Objc selector ref: numberOfItems
100015fe4:	ff 15 36 6c 02 00	callq	*158774(%rip) ## Objc message: -[%rdi numberOfItems]
100015fea:	48 85 c0	testq	%rax, %rax
100015fed:	74 34	je	0x100016023
100015fef:	49 89 c7	movq	%rax, %r15
100015ff2:	31 db	xorl	%ebx, %ebx
100015ff4:	48 8b 05 c5 ce 03 00	movq	249541(%rip), %rax
100015ffb:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016000:	48 8b 35 b1 b5 03 00	movq	243121(%rip), %rsi ## Objc selector ref: itemAtIndex:
100016007:	48 89 da	movq	%rbx, %rdx
10001600a:	41 ff d4	callq	*%r12
10001600d:	48 89 c7	movq	%rax, %rdi
100016010:	4c 89 f6	movq	%r14, %rsi
100016013:	ba 01 00 00 00	movl	$1, %edx
100016018:	41 ff d4	callq	*%r12
10001601b:	48 ff c3	incq	%rbx
10001601e:	49 39 df	cmpq	%rbx, %r15
100016021:	75 d1	jne	0x100015ff4
100016023:	48 8b 05 2e ce 03 00	movq	249390(%rip), %rax
10001602a:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001602f:	48 8b 35 02 bc 03 00	movq	244738(%rip), %rsi ## Objc selector ref: selectedItem
100016036:	41 ff d4	callq	*%r12
100016039:	48 89 c7	movq	%rax, %rdi
10001603c:	48 8b 35 55 c3 03 00	movq	246613(%rip), %rsi ## Objc selector ref: tag
100016043:	41 ff d4	callq	*%r12
100016046:	48 85 c0	testq	%rax, %rax
100016049:	0f 84 88 00 00 00	je	0x1000160d7
10001604f:	48 8b 35 ea b1 03 00	movq	242154(%rip), %rsi ## Objc selector ref: filterDocument
100016056:	4c 89 ef	movq	%r13, %rdi
100016059:	ff 15 c1 6b 02 00	callq	*158657(%rip) ## Objc message: -[%rdi filterDocument]
10001605f:	41 b4 01	movb	$1, %r12b
100016062:	48 85 c0	testq	%rax, %rax
100016065:	0f 84 d8 00 00 00	je	0x100016143
10001606b:	48 89 c3	movq	%rax, %rbx
10001606e:	48 89 c7	movq	%rax, %rdi
100016071:	e8 84 8e 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100016076:	49 89 c6	movq	%rax, %r14
100016079:	e8 f8 90 01 00	callq	0x10002f176 ## symbol stub for: _CGImageGetTypeID
10001607e:	31 f6	xorl	%esi, %esi
100016080:	b9 00 00 00 00	movl	$0, %ecx
100016085:	ba 00 00 00 00	movl	$0, %edx
10001608a:	49 39 c6	cmpq	%rax, %r14
10001608d:	0f 85 d8 00 00 00	jne	0x10001616b
100016093:	48 89 df	movq	%rbx, %rdi
100016096:	e8 b1 90 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
10001609b:	48 89 c7	movq	%rax, %rdi
10001609e:	e8 71 8f 01 00	callq	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
1000160a3:	31 d2	xorl	%edx, %edx
1000160a5:	83 f8 03	cmpl	$3, %eax
1000160a8:	0f 87 9d 00 00 00	ja	0x10001614b
1000160ae:	ba 59 41 52 47	movl	$1196573017, %edx
1000160b3:	40 b6 01	movb	$1, %sil
1000160b6:	89 c0	movl	%eax, %eax
1000160b8:	48 8d 0d 81 08 00 00	leaq	2177(%rip), %rcx
1000160bf:	48 63 04 81	movslq	(%rcx,%rax,4), %rax
1000160c3:	48 01 c8	addq	%rcx, %rax
1000160c6:	45 31 e4	xorl	%r12d, %r12d
1000160c9:	31 c9	xorl	%ecx, %ecx
1000160cb:	ff e0	jmpq	*%rax
1000160cd:	ba 20 42 47 52	movl	$1380401696, %edx
1000160d2:	e9 8f 00 00 00	jmp	0x100016166
1000160d7:	4c 8b 25 d2 cd 03 00	movq	249298(%rip), %r12
1000160de:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
1000160e3:	48 8b 35 16 b7 03 00	movq	243478(%rip), %rsi ## Objc selector ref: numberOfItems
1000160ea:	ff 15 30 6b 02 00	callq	*158512(%rip) ## Objc message: -[%rdi numberOfItems]
1000160f0:	49 89 c7	movq	%rax, %r15
1000160f3:	48 85 c0	testq	%rax, %rax
1000160f6:	48 8b 05 23 6b 02 00	movq	158499(%rip), %rax ## Objc message: -[%rdi numberOfItems]
1000160fd:	0f 84 ed 06 00 00	je	0x1000167f0
100016103:	4c 8b 35 ae b4 03 00	movq	242862(%rip), %r14 ## Objc selector ref: itemAtIndex:
10001610a:	31 db	xorl	%ebx, %ebx
10001610c:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100016111:	4c 89 f6	movq	%r14, %rsi
100016114:	48 89 da	movq	%rbx, %rdx
100016117:	ff 15 03 6b 02 00	callq	*158467(%rip) ## Objc message: -[%rdi itemAtIndex:]
10001611d:	48 89 c7	movq	%rax, %rdi
100016120:	48 8b 35 c9 bc 03 00	movq	244937(%rip), %rsi ## Objc selector ref: setEnabled:
100016127:	31 d2	xorl	%edx, %edx
100016129:	ff 15 f1 6a 02 00	callq	*158449(%rip) ## Objc message: -[%rdi setEnabled:]
10001612f:	48 8b 05 ea 6a 02 00	movq	158442(%rip), %rax ## Objc message: -[%rdi setEnabled:]
100016136:	48 ff c3	incq	%rbx
100016139:	49 39 df	cmpq	%rbx, %r15
10001613c:	75 ce	jne	0x10001610c
10001613e:	e9 ad 06 00 00	jmp	0x1000167f0
100016143:	31 f6	xorl	%esi, %esi
100016145:	31 c9	xorl	%ecx, %ecx
100016147:	31 d2	xorl	%edx, %edx
100016149:	eb 20	jmp	0x10001616b
10001614b:	41 b4 01	movb	$1, %r12b
10001614e:	31 f6	xorl	%esi, %esi
100016150:	eb 17	jmp	0x100016169
100016152:	ba 4b 59 4d 43	movl	$1129142603, %edx
100016157:	40 b6 01	movb	$1, %sil
10001615a:	45 31 e4	xorl	%r12d, %r12d
10001615d:	b1 01	movb	$1, %cl
10001615f:	eb 0a	jmp	0x10001616b
100016161:	ba 20 62 61 4c	movl	$1281450528, %edx
100016166:	45 31 e4	xorl	%r12d, %r12d
100016169:	31 c9	xorl	%ecx, %ecx
10001616b:	89 75 c4	movl	%esi, -60(%rbp)
10001616e:	89 4d b4	movl	%ecx, -76(%rbp)
100016171:	89 55 c8	movl	%edx, -56(%rbp)
100016174:	48 8b 05 5d cd 03 00	movq	249181(%rip), %rax
10001617b:	49 83 7c 05 00 00	cmpq	$0, (%r13,%rax)
100016181:	0f 84 9c 02 00 00	je	0x100016423
100016187:	44 89 65 c0	movl	%r12d, -64(%rbp)
10001618b:	48 8b 05 06 cd 03 00	movq	249094(%rip), %rax
100016192:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016197:	48 8b 35 62 b6 03 00	movq	243298(%rip), %rsi ## Objc selector ref: numberOfItems
10001619e:	ff 15 7c 6a 02 00	callq	*158332(%rip) ## Objc message: -[%rdi numberOfItems]
1000161a4:	48 85 c0	testq	%rax, %rax
1000161a7:	74 61	je	0x10001620a
1000161a9:	49 89 c4	movq	%rax, %r12
1000161ac:	bb 01 00 00 00	movl	$1, %ebx
1000161b1:	4c 8b 35 60 b9 03 00	movq	244064(%rip), %r14 ## Objc selector ref: representedObject
1000161b8:	48 8d 53 ff	leaq	-1(%rbx), %rdx
1000161bc:	48 8b 05 d5 cc 03 00	movq	249045(%rip), %rax
1000161c3:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000161c8:	48 8b 35 e9 b3 03 00	movq	242665(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000161cf:	4c 8b 3d 4a 6a 02 00	movq	158282(%rip), %r15 ## Objc message: -[%rdi itemAtIndex:]
1000161d6:	41 ff d7	callq	*%r15
1000161d9:	48 89 c7	movq	%rax, %rdi
1000161dc:	4c 89 f6	movq	%r14, %rsi
1000161df:	41 ff d7	callq	*%r15
1000161e2:	49 89 c7	movq	%rax, %r15
1000161e5:	48 8b 05 ec cc 03 00	movq	249068(%rip), %rax
1000161ec:	49 8b 44 05 00	movq	(%r13,%rax), %rax
1000161f1:	4c 39 f8	cmpq	%r15, %rax
1000161f4:	74 0c	je	0x100016202
1000161f6:	48 8d 4b 01	leaq	1(%rbx), %rcx
1000161fa:	4c 39 e3	cmpq	%r12, %rbx
1000161fd:	48 89 cb	movq	%rcx, %rbx
100016200:	72 b6	jb	0x1000161b8
100016202:	4c 39 f8	cmpq	%r15, %rax
100016205:	0f 94 c3	sete	%bl
100016208:	eb 05	jmp	0x10001620f
10001620a:	45 31 ff	xorl	%r15d, %r15d
10001620d:	31 db	xorl	%ebx, %ebx
10001620f:	48 8b 05 8a cc 03 00	movq	248970(%rip), %rax
100016216:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001621b:	48 8b 35 de b5 03 00	movq	243166(%rip), %rsi ## Objc selector ref: numberOfItems
100016222:	ff 15 f8 69 02 00	callq	*158200(%rip) ## Objc message: -[%rdi numberOfItems]
100016228:	48 89 c1	movq	%rax, %rcx
10001622b:	84 db	testb	%bl, %bl
10001622d:	48 8b 05 84 cc 03 00	movq	248964(%rip), %rax
100016234:	75 78	jne	0x1000162ae
100016236:	48 85 c9	testq	%rcx, %rcx
100016239:	74 73	je	0x1000162ae
10001623b:	4c 89 6d d0	movq	%r13, -48(%rbp)
10001623f:	48 89 4d 98	movq	%rcx, -104(%rbp)
100016243:	41 be 01 00 00 00	movl	$1, %r14d
100016249:	4c 8b 25 c8 b8 03 00	movq	243912(%rip), %r12 ## Objc selector ref: representedObject
100016250:	4c 8b 6d d0	movq	-48(%rbp), %r13
100016254:	49 8d 56 ff	leaq	-1(%r14), %rdx
100016258:	48 8b 05 41 cc 03 00	movq	248897(%rip), %rax
10001625f:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016264:	48 8b 35 4d b3 03 00	movq	242509(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001626b:	48 8b 1d ae 69 02 00	movq	158126(%rip), %rbx ## Objc message: -[%rdi itemAtIndex:]
100016272:	ff d3	callq	*%rbx
100016274:	48 89 c7	movq	%rax, %rdi
100016277:	4c 89 e6	movq	%r12, %rsi
10001627a:	ff d3	callq	*%rbx
10001627c:	49 89 c7	movq	%rax, %r15
10001627f:	48 8b 05 52 cc 03 00	movq	248914(%rip), %rax
100016286:	49 8b 44 05 00	movq	(%r13,%rax), %rax
10001628b:	4c 39 f8	cmpq	%r15, %rax
10001628e:	74 0d	je	0x10001629d
100016290:	49 8d 4e 01	leaq	1(%r14), %rcx
100016294:	4c 3b 75 98	cmpq	-104(%rbp), %r14
100016298:	49 89 ce	movq	%rcx, %r14
10001629b:	72 b7	jb	0x100016254
10001629d:	4c 39 f8	cmpq	%r15, %rax
1000162a0:	0f 94 c3	sete	%bl
1000162a3:	48 8b 05 0e cc 03 00	movq	248846(%rip), %rax
1000162aa:	4c 8b 6d d0	movq	-48(%rbp), %r13
1000162ae:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000162b3:	48 8b 35 46 b5 03 00	movq	243014(%rip), %rsi ## Objc selector ref: numberOfItems
1000162ba:	ff 15 60 69 02 00	callq	*158048(%rip) ## Objc message: -[%rdi numberOfItems]
1000162c0:	49 89 c4	movq	%rax, %r12
1000162c3:	84 db	testb	%bl, %bl
1000162c5:	0f 94 c0	sete	%al
1000162c8:	75 5b	jne	0x100016325
1000162ca:	4d 85 e4	testq	%r12, %r12
1000162cd:	74 56	je	0x100016325
1000162cf:	bb 01 00 00 00	movl	$1, %ebx
1000162d4:	4c 8b 35 3d b8 03 00	movq	243773(%rip), %r14 ## Objc selector ref: representedObject
1000162db:	48 8d 53 ff	leaq	-1(%rbx), %rdx
1000162df:	48 8b 05 d2 cb 03 00	movq	248786(%rip), %rax
1000162e6:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000162eb:	48 8b 35 c6 b2 03 00	movq	242374(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000162f2:	4c 8b 3d 27 69 02 00	movq	157991(%rip), %r15 ## Objc message: -[%rdi itemAtIndex:]
1000162f9:	41 ff d7	callq	*%r15
1000162fc:	48 89 c7	movq	%rax, %rdi
1000162ff:	4c 89 f6	movq	%r14, %rsi
100016302:	41 ff d7	callq	*%r15
100016305:	49 89 c7	movq	%rax, %r15
100016308:	48 8b 05 c9 cb 03 00	movq	248777(%rip), %rax
10001630f:	4d 39 7c 05 00	cmpq	%r15, (%r13,%rax)
100016314:	0f 95 c0	setne	%al
100016317:	74 0c	je	0x100016325
100016319:	48 8d 4b 01	leaq	1(%rbx), %rcx
10001631d:	4c 39 e3	cmpq	%r12, %rbx
100016320:	48 89 cb	movq	%rcx, %rbx
100016323:	72 b6	jb	0x1000162db
100016325:	84 c0	testb	%al, %al
100016327:	44 8b 65 c0	movl	-64(%rbp), %r12d
10001632b:	0f 85 f2 00 00 00	jne	0x100016423
100016331:	48 8b 35 90 b6 03 00	movq	243344(%rip), %rsi ## Objc selector ref: profClass
100016338:	4c 89 ff	movq	%r15, %rdi
10001633b:	ff 15 df 68 02 00	callq	*157919(%rip) ## Objc message: -[%rdi profClass]
100016341:	3d 74 73 62 61	cmpl	$1633842036, %eax
100016346:	74 0e	je	0x100016356
100016348:	3d 63 61 70 73	cmpl	$1936744803, %eax
10001634d:	74 07	je	0x100016356
10001634f:	3d 6c 63 6d 6e	cmpl	$1852662636, %eax
100016354:	75 04	jne	0x10001635a
100016356:	b3 01	movb	$1, %bl
100016358:	eb 02	jmp	0x10001635c
10001635a:	31 db	xorl	%ebx, %ebx
10001635c:	48 83 7d b8 01	cmpq	$1, -72(%rbp)
100016361:	75 1e	jne	0x100016381
100016363:	48 8b 35 86 b6 03 00	movq	243334(%rip), %rsi ## Objc selector ref: profSpace
10001636a:	4c 89 ff	movq	%r15, %rdi
10001636d:	ff 15 ad 68 02 00	callq	*157869(%rip) ## Objc message: -[%rdi profSpace]
100016373:	3b 45 c8	cmpl	-56(%rbp), %eax
100016376:	0f b6 c3	movzbl	%bl, %eax
100016379:	bb 01 00 00 00	movl	$1, %ebx
10001637e:	0f 44 d8	cmovel	%eax, %ebx
100016381:	8b 4d c4	movl	-60(%rbp), %ecx
100016384:	84 db	testb	%bl, %bl
100016386:	0f 94 c0	sete	%al
100016389:	84 c1	testb	%al, %cl
10001638b:	0f 85 92 00 00 00	jne	0x100016423
100016391:	48 8b 05 a0 62 02 00	movq	156320(%rip), %rax ## literal pool symbol address: _NSApp
100016398:	48 8b 00	movq	(%rax), %rax
10001639b:	48 89 45 d0	movq	%rax, -48(%rbp)
10001639f:	4c 8b 3d ba ca 03 00	movq	248506(%rip), %r15
1000163a6:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
1000163ab:	48 8b 1d 06 b2 03 00	movq	242182(%rip), %rbx ## Objc selector ref: itemAtIndex:
1000163b2:	ba 01 00 00 00	movl	$1, %edx
1000163b7:	48 89 de	movq	%rbx, %rsi
1000163ba:	4c 8b 25 5f 68 02 00	movq	157791(%rip), %r12 ## Objc message: -[%rdi itemAtIndex:]
1000163c1:	41 ff d4	callq	*%r12
1000163c4:	48 8b 35 4d a8 03 00	movq	239693(%rip), %rsi ## Objc selector ref: action
1000163cb:	48 89 c7	movq	%rax, %rdi
1000163ce:	41 ff d4	callq	*%r12
1000163d1:	49 89 c6	movq	%rax, %r14
1000163d4:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
1000163d9:	ba 01 00 00 00	movl	$1, %edx
1000163de:	48 89 de	movq	%rbx, %rsi
1000163e1:	41 ff d4	callq	*%r12
1000163e4:	48 8b 35 bd bf 03 00	movq	245693(%rip), %rsi ## Objc selector ref: target
1000163eb:	48 89 c7	movq	%rax, %rdi
1000163ee:	41 ff d4	callq	*%r12
1000163f1:	48 89 c3	movq	%rax, %rbx
1000163f4:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
1000163f9:	ba 01 00 00 00	movl	$1, %edx
1000163fe:	48 8b 35 b3 b1 03 00	movq	242099(%rip), %rsi ## Objc selector ref: itemAtIndex:
100016405:	41 ff d4	callq	*%r12
100016408:	48 8b 35 41 b8 03 00	movq	243777(%rip), %rsi ## Objc selector ref: sendAction:to:from:
10001640f:	48 8b 7d d0	movq	-48(%rbp), %rdi
100016413:	4c 89 f2	movq	%r14, %rdx
100016416:	48 89 d9	movq	%rbx, %rcx
100016419:	49 89 c0	movq	%rax, %r8
10001641c:	41 ff d4	callq	*%r12
10001641f:	44 8b 65 c0	movl	-64(%rbp), %r12d
100016423:	48 8b 05 b6 ca 03 00	movq	248502(%rip), %rax
10001642a:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001642f:	4c 8b 3d ba b9 03 00	movq	244154(%rip), %r15 ## Objc selector ref: setEnabled:
100016436:	4c 89 fe	movq	%r15, %rsi
100016439:	31 d2	xorl	%edx, %edx
10001643b:	48 8b 1d de 67 02 00	movq	157662(%rip), %rbx ## Objc message: -[%rdi setEnabled:]
100016442:	ff d3	callq	*%rbx
100016444:	48 8b 05 9d ca 03 00	movq	248477(%rip), %rax
10001644b:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016450:	4c 89 fe	movq	%r15, %rsi
100016453:	31 d2	xorl	%edx, %edx
100016455:	ff d3	callq	*%rbx
100016457:	48 8b 05 a2 ca 03 00	movq	248482(%rip), %rax
10001645e:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016463:	4c 89 fe	movq	%r15, %rsi
100016466:	31 d2	xorl	%edx, %edx
100016468:	ff d3	callq	*%rbx
10001646a:	45 84 e4	testb	%r12b, %r12b
10001646d:	74 74	je	0x1000164e3
10001646f:	48 8b 05 7a ca 03 00	movq	248442(%rip), %rax
100016476:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001647b:	4c 89 fe	movq	%r15, %rsi
10001647e:	31 d2	xorl	%edx, %edx
100016480:	ff d3	callq	*%rbx
100016482:	48 8b 05 6f ca 03 00	movq	248431(%rip), %rax
100016489:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001648e:	4c 89 fe	movq	%r15, %rsi
100016491:	31 d2	xorl	%edx, %edx
100016493:	ff d3	callq	*%rbx
100016495:	48 8b 05 6c ca 03 00	movq	248428(%rip), %rax
10001649c:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000164a1:	4c 89 fe	movq	%r15, %rsi
1000164a4:	31 d2	xorl	%edx, %edx
1000164a6:	ff d3	callq	*%rbx
1000164a8:	4c 8b 35 31 c9 03 00	movq	248113(%rip), %r14
1000164af:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000164b4:	48 8b 35 55 b7 03 00	movq	243541(%rip), %rsi ## Objc selector ref: selectItemWithTag:
1000164bb:	31 d2	xorl	%edx, %edx
1000164bd:	ff d3	callq	*%rbx
1000164bf:	48 8b 05 aa c9 03 00	movq	248234(%rip), %rax
1000164c6:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
1000164cf:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000164d4:	4c 89 fe	movq	%r15, %rsi
1000164d7:	31 d2	xorl	%edx, %edx
1000164d9:	ff d3	callq	*%rbx
1000164db:	48 89 d8	movq	%rbx, %rax
1000164de:	e9 0d 03 00 00	jmp	0x1000167f0
1000164e3:	48 83 7d b8 01	cmpq	$1, -72(%rbp)
1000164e8:	75 26	jne	0x100016510
1000164ea:	80 7d b4 00	cmpb	$0, -76(%rbp)
1000164ee:	0f 84 01 01 00 00	je	0x1000165f5
1000164f4:	48 8b 05 f5 c9 03 00	movq	248309(%rip), %rax
1000164fb:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016500:	4c 89 fe	movq	%r15, %rsi
100016503:	31 d2	xorl	%edx, %edx
100016505:	ff 15 15 67 02 00	callq	*157461(%rip) ## Objc message: -[%rdi selectItemWithTag:]
10001650b:	e9 8c 01 00 00	jmp	0x10001669c
100016510:	48 83 7d a8 02	cmpq	$2, -88(%rbp)
100016515:	48 8b 1d a4 c9 03 00	movq	248228(%rip), %rbx
10001651c:	0f 85 3f 03 00 00	jne	0x100016861
100016522:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016527:	48 8b 35 d2 b2 03 00	movq	242386(%rip), %rsi ## Objc selector ref: numberOfItems
10001652e:	ff 15 ec 66 02 00	callq	*157420(%rip) ## Objc message: -[%rdi numberOfItems]
100016534:	48 89 c1	movq	%rax, %rcx
100016537:	48 8b 05 e2 66 02 00	movq	157410(%rip), %rax ## Objc message: -[%rdi numberOfItems]
10001653e:	48 89 4d c8	movq	%rcx, -56(%rbp)
100016542:	48 85 c9	testq	%rcx, %rcx
100016545:	0f 84 16 03 00 00	je	0x100016861
10001654b:	48 8b 0d c6 b5 03 00	movq	243142(%rip), %rcx ## Objc selector ref: representedObject
100016552:	48 89 4d d0	movq	%rcx, -48(%rbp)
100016556:	4c 8b 35 93 b4 03 00	movq	242835(%rip), %r14 ## Objc selector ref: profSpace
10001655d:	45 31 e4	xorl	%r12d, %r12d
100016560:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016565:	48 8b 35 4c b0 03 00	movq	241740(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001656c:	4c 89 e2	movq	%r12, %rdx
10001656f:	49 89 c7	movq	%rax, %r15
100016572:	ff d0	callq	*%rax
100016574:	48 89 c7	movq	%rax, %rdi
100016577:	48 8b 75 d0	movq	-48(%rbp), %rsi
10001657b:	41 ff d7	callq	*%r15
10001657e:	48 89 c3	movq	%rax, %rbx
100016581:	48 89 c7	movq	%rax, %rdi
100016584:	4c 89 f6	movq	%r14, %rsi
100016587:	41 ff d7	callq	*%r15
10001658a:	3d 59 41 52 47	cmpl	$1196573017, %eax
10001658f:	74 48	je	0x1000165d9
100016591:	48 89 df	movq	%rbx, %rdi
100016594:	4c 89 f6	movq	%r14, %rsi
100016597:	41 ff d7	callq	*%r15
10001659a:	3d 20 42 47 52	cmpl	$1380401696, %eax
10001659f:	74 38	je	0x1000165d9
1000165a1:	48 89 df	movq	%rbx, %rdi
1000165a4:	4c 89 f6	movq	%r14, %rsi
1000165a7:	41 ff d7	callq	*%r15
1000165aa:	3d 4b 59 4d 43	cmpl	$1129142603, %eax
1000165af:	74 28	je	0x1000165d9
1000165b1:	48 8b 05 08 c9 03 00	movq	248072(%rip), %rax
1000165b8:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000165bd:	48 8b 35 f4 af 03 00	movq	241652(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000165c4:	4c 89 e2	movq	%r12, %rdx
1000165c7:	41 ff d7	callq	*%r15
1000165ca:	48 89 c7	movq	%rax, %rdi
1000165cd:	48 8b 35 1c b8 03 00	movq	243740(%rip), %rsi ## Objc selector ref: setEnabled:
1000165d4:	31 d2	xorl	%edx, %edx
1000165d6:	41 ff d7	callq	*%r15
1000165d9:	49 ff c4	incq	%r12
1000165dc:	4c 39 65 c8	cmpq	%r12, -56(%rbp)
1000165e0:	4c 89 f8	movq	%r15, %rax
1000165e3:	48 8b 1d d6 c8 03 00	movq	248022(%rip), %rbx
1000165ea:	0f 85 70 ff ff ff	jne	0x100016560
1000165f0:	e9 fb 01 00 00	jmp	0x1000167f0
1000165f5:	48 8b 1d ac c8 03 00	movq	247980(%rip), %rbx
1000165fc:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016601:	48 8b 35 f8 b1 03 00	movq	242168(%rip), %rsi ## Objc selector ref: numberOfItems
100016608:	ff 15 12 66 02 00	callq	*157202(%rip) ## Objc message: -[%rdi numberOfItems]
10001660e:	48 89 45 d0	movq	%rax, -48(%rbp)
100016612:	48 85 c0	testq	%rax, %rax
100016615:	48 8b 05 04 66 02 00	movq	157188(%rip), %rax ## Objc message: -[%rdi numberOfItems]
10001661c:	74 7e	je	0x10001669c
10001661e:	4c 8b 35 f3 b4 03 00	movq	242931(%rip), %r14 ## Objc selector ref: representedObject
100016625:	4c 8b 25 c4 b3 03 00	movq	242628(%rip), %r12 ## Objc selector ref: profSpace
10001662c:	45 31 ff	xorl	%r15d, %r15d
10001662f:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016634:	48 8b 35 7d af 03 00	movq	241533(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001663b:	4c 89 fa	movq	%r15, %rdx
10001663e:	48 89 c3	movq	%rax, %rbx
100016641:	ff d0	callq	*%rax
100016643:	48 89 c7	movq	%rax, %rdi
100016646:	4c 89 f6	movq	%r14, %rsi
100016649:	ff d3	callq	*%rbx
10001664b:	48 89 c7	movq	%rax, %rdi
10001664e:	4c 89 e6	movq	%r12, %rsi
100016651:	ff d3	callq	*%rbx
100016653:	3b 45 c8	cmpl	-56(%rbp), %eax
100016656:	74 2d	je	0x100016685
100016658:	48 8b 05 49 c8 03 00	movq	247881(%rip), %rax
10001665f:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016664:	48 8b 35 4d af 03 00	movq	241485(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001666b:	4c 89 fa	movq	%r15, %rdx
10001666e:	48 8b 1d ab 65 02 00	movq	157099(%rip), %rbx ## Objc message: -[%rdi itemAtIndex:]
100016675:	ff d3	callq	*%rbx
100016677:	48 89 c7	movq	%rax, %rdi
10001667a:	48 8b 35 6f b7 03 00	movq	243567(%rip), %rsi ## Objc selector ref: setEnabled:
100016681:	31 d2	xorl	%edx, %edx
100016683:	ff d3	callq	*%rbx
100016685:	49 ff c7	incq	%r15
100016688:	4c 39 7d d0	cmpq	%r15, -48(%rbp)
10001668c:	48 8b 05 8d 65 02 00	movq	157069(%rip), %rax ## Objc message: -[%rdi setEnabled:]
100016693:	48 8b 1d 0e c8 03 00	movq	247822(%rip), %rbx
10001669a:	75 93	jne	0x10001662f
10001669c:	48 8b 05 0d c8 03 00	movq	247821(%rip), %rax
1000166a3:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000166a8:	48 8b 35 51 b1 03 00	movq	242001(%rip), %rsi ## Objc selector ref: numberOfItems
1000166af:	ff 15 6b 65 02 00	callq	*157035(%rip) ## Objc message: -[%rdi numberOfItems]
1000166b5:	48 89 c1	movq	%rax, %rcx
1000166b8:	48 8b 05 61 65 02 00	movq	157025(%rip), %rax ## Objc message: -[%rdi numberOfItems]
1000166bf:	48 89 4d d0	movq	%rcx, -48(%rbp)
1000166c3:	48 85 c9	testq	%rcx, %rcx
1000166c6:	74 7e	je	0x100016746
1000166c8:	4c 8b 35 49 b4 03 00	movq	242761(%rip), %r14 ## Objc selector ref: representedObject
1000166cf:	4c 8b 25 1a b3 03 00	movq	242458(%rip), %r12 ## Objc selector ref: profSpace
1000166d6:	45 31 ff	xorl	%r15d, %r15d
1000166d9:	48 8b 0d d0 c7 03 00	movq	247760(%rip), %rcx
1000166e0:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
1000166e5:	48 8b 35 cc ae 03 00	movq	241356(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000166ec:	4c 89 fa	movq	%r15, %rdx
1000166ef:	48 89 c3	movq	%rax, %rbx
1000166f2:	ff d0	callq	*%rax
1000166f4:	48 89 c7	movq	%rax, %rdi
1000166f7:	4c 89 f6	movq	%r14, %rsi
1000166fa:	ff d3	callq	*%rbx
1000166fc:	48 89 c7	movq	%rax, %rdi
1000166ff:	4c 89 e6	movq	%r12, %rsi
100016702:	ff d3	callq	*%rbx
100016704:	3b 45 c8	cmpl	-56(%rbp), %eax
100016707:	74 2d	je	0x100016736
100016709:	48 8b 05 a0 c7 03 00	movq	247712(%rip), %rax
100016710:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100016715:	48 8b 35 9c ae 03 00	movq	241308(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001671c:	4c 89 fa	movq	%r15, %rdx
10001671f:	48 8b 1d fa 64 02 00	movq	156922(%rip), %rbx ## Objc message: -[%rdi itemAtIndex:]
100016726:	ff d3	callq	*%rbx
100016728:	48 89 c7	movq	%rax, %rdi
10001672b:	48 8b 35 be b6 03 00	movq	243390(%rip), %rsi ## Objc selector ref: setEnabled:
100016732:	31 d2	xorl	%edx, %edx
100016734:	ff d3	callq	*%rbx
100016736:	49 ff c7	incq	%r15
100016739:	4c 39 7d d0	cmpq	%r15, -48(%rbp)
10001673d:	48 8b 05 dc 64 02 00	movq	156892(%rip), %rax ## Objc message: -[%rdi setEnabled:]
100016744:	75 93	jne	0x1000166d9
100016746:	48 8b 1d 73 c7 03 00	movq	247667(%rip), %rbx
10001674d:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016752:	48 8b 35 a7 b0 03 00	movq	241831(%rip), %rsi ## Objc selector ref: numberOfItems
100016759:	ff 15 c1 64 02 00	callq	*156865(%rip) ## Objc message: -[%rdi numberOfItems]
10001675f:	48 89 c1	movq	%rax, %rcx
100016762:	48 8b 05 b7 64 02 00	movq	156855(%rip), %rax ## Objc message: -[%rdi numberOfItems]
100016769:	48 89 4d d0	movq	%rcx, -48(%rbp)
10001676d:	48 85 c9	testq	%rcx, %rcx
100016770:	74 7e	je	0x1000167f0
100016772:	4c 8b 35 9f b3 03 00	movq	242591(%rip), %r14 ## Objc selector ref: representedObject
100016779:	4c 8b 25 70 b2 03 00	movq	242288(%rip), %r12 ## Objc selector ref: profSpace
100016780:	45 31 ff	xorl	%r15d, %r15d
100016783:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100016788:	48 8b 35 29 ae 03 00	movq	241193(%rip), %rsi ## Objc selector ref: itemAtIndex:
10001678f:	4c 89 fa	movq	%r15, %rdx
100016792:	48 89 c3	movq	%rax, %rbx
100016795:	ff d0	callq	*%rax
100016797:	48 89 c7	movq	%rax, %rdi
10001679a:	4c 89 f6	movq	%r14, %rsi
10001679d:	ff d3	callq	*%rbx
10001679f:	48 89 c7	movq	%rax, %rdi
1000167a2:	4c 89 e6	movq	%r12, %rsi
1000167a5:	ff d3	callq	*%rbx
1000167a7:	3b 45 c8	cmpl	-56(%rbp), %eax
1000167aa:	74 2d	je	0x1000167d9
1000167ac:	48 8b 05 0d c7 03 00	movq	247565(%rip), %rax
1000167b3:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000167b8:	48 8b 35 f9 ad 03 00	movq	241145(%rip), %rsi ## Objc selector ref: itemAtIndex:
1000167bf:	4c 89 fa	movq	%r15, %rdx
1000167c2:	48 8b 1d 57 64 02 00	movq	156759(%rip), %rbx ## Objc message: -[%rdi itemAtIndex:]
1000167c9:	ff d3	callq	*%rbx
1000167cb:	48 89 c7	movq	%rax, %rdi
1000167ce:	48 8b 35 1b b6 03 00	movq	243227(%rip), %rsi ## Objc selector ref: setEnabled:
1000167d5:	31 d2	xorl	%edx, %edx
1000167d7:	ff d3	callq	*%rbx
1000167d9:	49 ff c7	incq	%r15
1000167dc:	4c 39 7d d0	cmpq	%r15, -48(%rbp)
1000167e0:	48 8b 05 39 64 02 00	movq	156729(%rip), %rax ## Objc message: -[%rdi setEnabled:]
1000167e7:	48 8b 1d d2 c6 03 00	movq	247506(%rip), %rbx
1000167ee:	75 93	jne	0x100016783
1000167f0:	48 83 7d b8 01	cmpq	$1, -72(%rbp)
1000167f5:	4c 8b 3d f4 b5 03 00	movq	243188(%rip), %r15 ## Objc selector ref: setEnabled:
1000167fc:	75 63	jne	0x100016861
1000167fe:	4c 8b 35 db c5 03 00	movq	247259(%rip), %r14
100016805:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001680a:	48 8b 35 ff b3 03 00	movq	242687(%rip), %rsi ## Objc selector ref: selectItemWithTag:
100016811:	31 d2	xorl	%edx, %edx
100016813:	48 89 c3	movq	%rax, %rbx
100016816:	ff d0	callq	*%rax
100016818:	48 8b 05 51 c6 03 00	movq	247377(%rip), %rax
10001681f:	41 c7 44 05 00 00 00 00 00	movl	$0, (%r13,%rax)
100016828:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001682d:	4c 89 fe	movq	%r15, %rsi
100016830:	31 d2	xorl	%edx, %edx
100016832:	ff d3	callq	*%rbx
100016834:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100016839:	48 8b 35 a8 ad 03 00	movq	241064(%rip), %rsi ## Objc selector ref: lastItem
100016840:	ff d3	callq	*%rbx
100016842:	48 8b 35 97 b8 03 00	movq	243863(%rip), %rsi ## Objc selector ref: setState:
100016849:	48 89 c7	movq	%rax, %rdi
10001684c:	31 d2	xorl	%edx, %edx
10001684e:	48 89 d8	movq	%rbx, %rax
100016851:	48 83 c4 48	addq	$72, %rsp
100016855:	5b	popq	%rbx
100016856:	41 5c	popq	%r12
100016858:	41 5d	popq	%r13
10001685a:	41 5e	popq	%r14
10001685c:	41 5f	popq	%r15
10001685e:	5d	popq	%rbp
10001685f:	ff e0	jmpq	*%rax
100016861:	4c 8b 35 78 c5 03 00	movq	247160(%rip), %r14
100016868:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001686d:	48 8b 35 f4 ac 03 00	movq	240884(%rip), %rsi ## Objc selector ref: isEnabled
100016874:	ff 15 a6 63 02 00	callq	*156582(%rip) ## Objc message: -[%rdi isEnabled]
10001687a:	84 c0	testb	%al, %al
10001687c:	75 13	jne	0x100016891
10001687e:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100016883:	4c 89 fe	movq	%r15, %rsi
100016886:	ba 01 00 00 00	movl	$1, %edx
10001688b:	ff 15 8f 63 02 00	callq	*156559(%rip) ## Objc message: -[%rdi isEnabled]
100016891:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100016896:	48 83 7d a0 00	cmpq	$0, -96(%rbp)
10001689b:	48 8b 05 7e 63 02 00	movq	156542(%rip), %rax ## Objc message: -[%rdi isEnabled]
1000168a2:	74 41	je	0x1000168e5
1000168a4:	48 8b 35 8d b3 03 00	movq	242573(%rip), %rsi ## Objc selector ref: selectedItem
1000168ab:	49 89 c7	movq	%rax, %r15
1000168ae:	ff d0	callq	*%rax
1000168b0:	48 89 c7	movq	%rax, %rdi
1000168b3:	48 8b 35 de ba 03 00	movq	244446(%rip), %rsi ## Objc selector ref: tag
1000168ba:	41 ff d7	callq	*%r15
1000168bd:	48 89 c3	movq	%rax, %rbx
1000168c0:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000168c5:	48 8b 35 1c ad 03 00	movq	240924(%rip), %rsi ## Objc selector ref: lastItem
1000168cc:	41 ff d7	callq	*%r15
1000168cf:	48 89 c7	movq	%rax, %rdi
1000168d2:	48 8b 35 17 b5 03 00	movq	242967(%rip), %rsi ## Objc selector ref: setEnabled:
1000168d9:	48 85 db	testq	%rbx, %rbx
1000168dc:	74 49	je	0x100016927
1000168de:	ba 01 00 00 00	movl	$1, %edx
1000168e3:	eb 44	jmp	0x100016929
1000168e5:	4c 8b 25 fc ac 03 00	movq	240892(%rip), %r12 ## Objc selector ref: lastItem
1000168ec:	4c 89 e6	movq	%r12, %rsi
1000168ef:	48 89 c3	movq	%rax, %rbx
1000168f2:	ff d0	callq	*%rax
1000168f4:	48 8b 35 e5 b7 03 00	movq	243685(%rip), %rsi ## Objc selector ref: setState:
1000168fb:	48 89 c7	movq	%rax, %rdi
1000168fe:	31 d2	xorl	%edx, %edx
100016900:	ff d3	callq	*%rbx
100016902:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100016907:	4c 89 e6	movq	%r12, %rsi
10001690a:	ff d3	callq	*%rbx
10001690c:	48 89 c7	movq	%rax, %rdi
10001690f:	4c 89 fe	movq	%r15, %rsi
100016912:	31 d2	xorl	%edx, %edx
100016914:	48 89 d8	movq	%rbx, %rax
100016917:	48 83 c4 48	addq	$72, %rsp
10001691b:	5b	popq	%rbx
10001691c:	41 5c	popq	%r12
10001691e:	41 5d	popq	%r13
100016920:	41 5e	popq	%r14
100016922:	41 5f	popq	%r15
100016924:	5d	popq	%rbp
100016925:	ff e0	jmpq	*%rax
100016927:	31 d2	xorl	%edx, %edx
100016929:	48 83 c4 48	addq	$72, %rsp
10001692d:	5b	popq	%rbx
10001692e:	41 5c	popq	%r12
100016930:	41 5d	popq	%r13
100016932:	41 5e	popq	%r14
100016934:	41 5f	popq	%r15
100016936:	5d	popq	%rbp
100016937:	ff 25 e3 62 02 00	jmpq	*156387(%rip) ## Objc message: -[%rdi setState:]
10001693d:	0f 1f 00	nopl	(%rax)
2b f8 ff ff	.long 4294965291	@ KIND_JUMP_TABLE32
8d f7 ff ff	.long 4294965133	@ KIND_JUMP_TABLE32
12 f8 ff ff	.long 4294965266	@ KIND_JUMP_TABLE32
21 f8 ff ff	.long 4294965281	@ KIND_JUMP_TABLE32
100016950:	55	pushq	%rbp
100016951:	48 89 e5	movq	%rsp, %rbp
100016954:	41 56	pushq	%r14
100016956:	53	pushq	%rbx
100016957:	48 89 fb	movq	%rdi, %rbx
10001695a:	48 8b 35 ff b6 03 00	movq	243455(%rip), %rsi ## Objc selector ref: setProfileMode
100016961:	4c 8b 35 b8 62 02 00	movq	156344(%rip), %r14 ## Objc message: -[%rdi setProfileMode]
100016968:	41 ff d6	callq	*%r14
10001696b:	48 8b 35 4e a9 03 00	movq	239950(%rip), %rsi ## Objc selector ref: genericAction
100016972:	48 89 df	movq	%rbx, %rdi
100016975:	4c 89 f0	movq	%r14, %rax
100016978:	5b	popq	%rbx
100016979:	41 5e	popq	%r14
10001697b:	5d	popq	%rbp
10001697c:	ff e0	jmpq	*%rax
10001697e:	55	pushq	%rbp
10001697f:	48 89 e5	movq	%rsp, %rbp
100016982:	41 57	pushq	%r15
100016984:	41 56	pushq	%r14
100016986:	41 55	pushq	%r13
100016988:	41 54	pushq	%r12
10001698a:	53	pushq	%rbx
10001698b:	50	pushq	%rax
10001698c:	49 89 fc	movq	%rdi, %r12
10001698f:	4c 8b 2d 4a c4 03 00	movq	246858(%rip), %r13
100016996:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
10001699a:	83 fa 05	cmpl	$5, %edx
10001699d:	75 2e	jne	0x1000169cd
10001699f:	48 8b 05 ca c4 03 00	movq	246986(%rip), %rax
1000169a6:	41 8b 14 04	movl	(%r12,%rax), %edx
1000169aa:	48 8b 35 5f b2 03 00	movq	242271(%rip), %rsi ## Objc selector ref: selectItemWithTag:
1000169b1:	ff 15 69 62 02 00	callq	*156265(%rip) ## Objc message: -[%rdi selectItemWithTag:]
1000169b7:	48 8b 05 52 c5 03 00	movq	247122(%rip), %rax
1000169be:	41 80 3c 04 00	cmpb	$0, (%r12,%rax)
1000169c3:	41 0f 94 04 04	sete	(%r12,%rax)
1000169c8:	e9 ca 00 00 00	jmp	0x100016a97
1000169cd:	4c 8b 35 64 b2 03 00	movq	242276(%rip), %r14 ## Objc selector ref: selectedItem
1000169d4:	48 8b 1d 45 62 02 00	movq	156229(%rip), %rbx ## Objc message: -[%rdi selectedItem]
1000169db:	4c 89 f6	movq	%r14, %rsi
1000169de:	ff d3	callq	*%rbx
1000169e0:	4c 8b 3d b1 b9 03 00	movq	244145(%rip), %r15 ## Objc selector ref: tag
1000169e7:	48 89 c7	movq	%rax, %rdi
1000169ea:	4c 89 fe	movq	%r15, %rsi
1000169ed:	ff d3	callq	*%rbx
1000169ef:	48 8b 0d 7a c4 03 00	movq	246906(%rip), %rcx
1000169f6:	41 89 04 0c	movl	%eax, (%r12,%rcx)
1000169fa:	83 f8 02	cmpl	$2, %eax
1000169fd:	72 57	jb	0x100016a56
1000169ff:	48 8b 05 52 c4 03 00	movq	246866(%rip), %rax
100016a06:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100016a0a:	4c 89 f6	movq	%r14, %rsi
100016a0d:	ff d3	callq	*%rbx
100016a0f:	48 89 c7	movq	%rax, %rdi
100016a12:	4c 89 fe	movq	%r15, %rsi
100016a15:	ff d3	callq	*%rbx
100016a17:	48 85 c0	testq	%rax, %rax
100016a1a:	74 3a	je	0x100016a56
100016a1c:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100016a20:	4c 8b 35 c1 ab 03 00	movq	240577(%rip), %r14 ## Objc selector ref: lastItem
100016a27:	4c 89 f6	movq	%r14, %rsi
100016a2a:	ff d3	callq	*%rbx
100016a2c:	48 8b 35 35 ab 03 00	movq	240437(%rip), %rsi ## Objc selector ref: isEnabled
100016a33:	48 89 c7	movq	%rax, %rdi
100016a36:	ff d3	callq	*%rbx
100016a38:	84 c0	testb	%al, %al
100016a3a:	75 5b	jne	0x100016a97
100016a3c:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100016a40:	4c 89 f6	movq	%r14, %rsi
100016a43:	ff d3	callq	*%rbx
100016a45:	48 8b 35 a4 b3 03 00	movq	242596(%rip), %rsi ## Objc selector ref: setEnabled:
100016a4c:	48 89 c7	movq	%rax, %rdi
100016a4f:	ba 01 00 00 00	movl	$1, %edx
100016a54:	eb 3f	jmp	0x100016a95
100016a56:	48 8b 05 b3 c4 03 00	movq	246963(%rip), %rax
100016a5d:	41 c6 04 04 00	movb	$0, (%r12,%rax)
100016a62:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100016a66:	4c 8b 35 7b ab 03 00	movq	240507(%rip), %r14 ## Objc selector ref: lastItem
100016a6d:	4c 89 f6	movq	%r14, %rsi
100016a70:	ff d3	callq	*%rbx
100016a72:	48 8b 35 67 b6 03 00	movq	243303(%rip), %rsi ## Objc selector ref: setState:
100016a79:	48 89 c7	movq	%rax, %rdi
100016a7c:	31 d2	xorl	%edx, %edx
100016a7e:	ff d3	callq	*%rbx
100016a80:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100016a84:	4c 89 f6	movq	%r14, %rsi
100016a87:	ff d3	callq	*%rbx
100016a89:	48 8b 35 60 b3 03 00	movq	242528(%rip), %rsi ## Objc selector ref: setEnabled:
100016a90:	48 89 c7	movq	%rax, %rdi
100016a93:	31 d2	xorl	%edx, %edx
100016a95:	ff d3	callq	*%rbx
100016a97:	48 8b 05 72 c4 03 00	movq	246898(%rip), %rax
100016a9e:	31 db	xorl	%ebx, %ebx
100016aa0:	41 80 3c 04 00	cmpb	$0, (%r12,%rax)
100016aa5:	0f 95 c3	setne	%bl
100016aa8:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100016aac:	48 8b 35 35 ab 03 00	movq	240437(%rip), %rsi ## Objc selector ref: lastItem
100016ab3:	4c 8b 35 66 61 02 00	movq	156006(%rip), %r14 ## Objc message: -[%rdi lastItem]
100016aba:	41 ff d6	callq	*%r14
100016abd:	48 8b 35 1c b6 03 00	movq	243228(%rip), %rsi ## Objc selector ref: setState:
100016ac4:	48 89 c7	movq	%rax, %rdi
100016ac7:	48 89 da	movq	%rbx, %rdx
100016aca:	41 ff d6	callq	*%r14
100016acd:	48 8b 35 ec a7 03 00	movq	239596(%rip), %rsi ## Objc selector ref: genericAction
100016ad4:	4c 89 e7	movq	%r12, %rdi
100016ad7:	4c 89 f0	movq	%r14, %rax
100016ada:	48 83 c4 08	addq	$8, %rsp
100016ade:	5b	popq	%rbx
100016adf:	41 5c	popq	%r12
100016ae1:	41 5d	popq	%r13
100016ae3:	41 5e	popq	%r14
100016ae5:	41 5f	popq	%r15
100016ae7:	5d	popq	%rbp
100016ae8:	ff e0	jmpq	*%rax
100016aea:	55	pushq	%rbp
100016aeb:	48 89 e5	movq	%rsp, %rbp
100016aee:	41 56	pushq	%r14
100016af0:	53	pushq	%rbx
100016af1:	48 89 fb	movq	%rdi, %rbx
100016af4:	48 8b 05 e5 c2 03 00	movq	246501(%rip), %rax
100016afb:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100016aff:	48 8b 35 32 b1 03 00	movq	241970(%rip), %rsi ## Objc selector ref: selectedItem
100016b06:	4c 8b 35 13 61 02 00	movq	155923(%rip), %r14 ## Objc message: -[%rdi selectedItem]
100016b0d:	41 ff d6	callq	*%r14
100016b10:	48 8b 35 81 b8 03 00	movq	243841(%rip), %rsi ## Objc selector ref: tag
100016b17:	48 89 c7	movq	%rax, %rdi
100016b1a:	41 ff d6	callq	*%r14
100016b1d:	48 8b 35 e4 b3 03 00	movq	242660(%rip), %rsi ## Objc selector ref: setIntent:
100016b24:	48 89 df	movq	%rbx, %rdi
100016b27:	89 c2	movl	%eax, %edx
100016b29:	41 ff d6	callq	*%r14
100016b2c:	48 8b 35 8d a7 03 00	movq	239501(%rip), %rsi ## Objc selector ref: genericAction
100016b33:	48 89 df	movq	%rbx, %rdi
100016b36:	4c 89 f0	movq	%r14, %rax
100016b39:	5b	popq	%rbx
100016b3a:	41 5e	popq	%r14
100016b3c:	5d	popq	%rbp
100016b3d:	ff e0	jmpq	*%rax
100016b3f:	55	pushq	%rbp
100016b40:	48 89 e5	movq	%rsp, %rbp
100016b43:	41 56	pushq	%r14
100016b45:	53	pushq	%rbx
100016b46:	48 83 ec 10	subq	$16, %rsp
100016b4a:	49 89 d6	movq	%rdx, %r14
100016b4d:	48 89 fb	movq	%rdi, %rbx
100016b50:	48 8b 35 f1 a6 03 00	movq	239345(%rip), %rsi ## Objc selector ref: filterDocumentType
100016b57:	ff 15 c3 60 02 00	callq	*155843(%rip) ## Objc message: -[%rdi filterDocumentType]
100016b5d:	83 f8 01	cmpl	$1, %eax
100016b60:	75 2a	jne	0x100016b8c
100016b62:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100016b66:	48 89 1f	movq	%rbx, (%rdi)
100016b69:	48 8b 05 90 bc 03 00	movq	244880(%rip), %rax ## Objc class ref: FilterDoc
100016b70:	48 89 47 08	movq	%rax, 8(%rdi)
100016b74:	48 8b 35 1d b0 03 00	movq	241693(%rip), %rsi ## Objc selector ref: saveDocumentAs:
100016b7b:	4c 89 f2	movq	%r14, %rdx
100016b7e:	e8 59 89 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] saveDocumentAs:]
100016b83:	48 83 c4 10	addq	$16, %rsp
100016b87:	5b	popq	%rbx
100016b88:	41 5e	popq	%r14
100016b8a:	5d	popq	%rbp
100016b8b:	c3	retq
100016b8c:	48 8b 05 a5 c2 03 00	movq	246437(%rip), %rax
100016b93:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100016b97:	48 8b 35 02 ad 03 00	movq	240898(%rip), %rsi ## Objc selector ref: openExportPanel:operation:
100016b9e:	b9 01 00 00 00	movl	$1, %ecx
100016ba3:	48 89 da	movq	%rbx, %rdx
100016ba6:	48 83 c4 10	addq	$16, %rsp
100016baa:	5b	popq	%rbx
100016bab:	41 5e	popq	%r14
100016bad:	5d	popq	%rbp
100016bae:	ff 25 6c 60 02 00	jmpq	*155756(%rip) ## Objc message: -[%rdi openExportPanel:operation:]
100016bb4:	55	pushq	%rbp
100016bb5:	48 89 e5	movq	%rsp, %rbp
100016bb8:	48 8b 35 99 b8 03 00	movq	243865(%rip), %rsi ## Objc selector ref: updatePreview
100016bbf:	5d	popq	%rbp
100016bc0:	ff 25 5a 60 02 00	jmpq	*155738(%rip) ## Objc message: -[%rdi updatePreview]
100016bc6:	55	pushq	%rbp
100016bc7:	48 89 e5	movq	%rsp, %rbp
100016bca:	48 8b 05 1f c2 03 00	movq	246303(%rip), %rax
100016bd1:	48 8b 04 07	movq	(%rdi,%rax), %rax
100016bd5:	5d	popq	%rbp
100016bd6:	c3	retq
100016bd7:	55	pushq	%rbp
100016bd8:	48 89 e5	movq	%rsp, %rbp
100016bdb:	41 56	pushq	%r14
100016bdd:	53	pushq	%rbx
100016bde:	48 89 fb	movq	%rdi, %rbx
100016be1:	48 8b 05 00 c2 03 00	movq	246272(%rip), %rax
100016be8:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
100016bec:	75 10	jne	0x100016bfe
100016bee:	48 8b 0d cb c1 03 00	movq	246219(%rip), %rcx
100016bf5:	b0 01	movb	$1, %al
100016bf7:	48 83 3c 0b 00	cmpq	$0, (%rbx,%rcx)
100016bfc:	75 02	jne	0x100016c00
100016bfe:	31 c0	xorl	%eax, %eax
100016c00:	48 8b 0d 11 c3 03 00	movq	246545(%rip), %rcx
100016c07:	48 8b 3c 0b	movq	(%rbx,%rcx), %rdi
100016c0b:	48 8b 35 de b1 03 00	movq	242142(%rip), %rsi ## Objc selector ref: setEnabled:
100016c12:	0f b6 d0	movzbl	%al, %edx
100016c15:	4c 8b 35 04 60 02 00	movq	155652(%rip), %r14 ## Objc message: -[%rdi setEnabled:]
100016c1c:	41 ff d6	callq	*%r14
100016c1f:	48 8b 35 1a a6 03 00	movq	239130(%rip), %rsi ## Objc selector ref: filterDocument
100016c26:	48 89 df	movq	%rbx, %rdi
100016c29:	41 ff d6	callq	*%r14
100016c2c:	48 85 c0	testq	%rax, %rax
100016c2f:	74 14	je	0x100016c45
100016c31:	48 8b 35 a8 a4 03 00	movq	238760(%rip), %rsi ## Objc selector ref: displayPage
100016c38:	48 89 df	movq	%rbx, %rdi
100016c3b:	5b	popq	%rbx
100016c3c:	41 5e	popq	%r14
100016c3e:	5d	popq	%rbp
100016c3f:	ff 25 db 5f 02 00	jmpq	*155611(%rip) ## Objc message: -[%rdi displayPage]
100016c45:	5b	popq	%rbx
100016c46:	41 5e	popq	%r14
100016c48:	5d	popq	%rbp
100016c49:	c3	retq
100016c4a:	55	pushq	%rbp
100016c4b:	48 89 e5	movq	%rsp, %rbp
100016c4e:	41 57	pushq	%r15
100016c50:	41 56	pushq	%r14
100016c52:	41 54	pushq	%r12
100016c54:	53	pushq	%rbx
100016c55:	48 89 fb	movq	%rdi, %rbx
100016c58:	48 8b 35 c1 ac 03 00	movq	240833(%rip), %rsi ## Objc selector ref: pageCount
100016c5f:	ff 15 bb 5f 02 00	callq	*155579(%rip) ## Objc message: -[%rdi pageCount]
100016c65:	48 83 f8 02	cmpq	$2, %rax
100016c69:	7c 5b	jl	0x100016cc6
100016c6b:	4c 8b 3d 0e c2 03 00	movq	246286(%rip), %r15
100016c72:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100016c76:	48 8b 35 ab af 03 00	movq	241579(%rip), %rsi ## Objc selector ref: selectText:
100016c7d:	4c 8b 25 9c 5f 02 00	movq	155548(%rip), %r12 ## Objc message: -[%rdi selectText:]
100016c84:	31 d2	xorl	%edx, %edx
100016c86:	41 ff d4	callq	*%r12
100016c89:	4e 8b 34 3b	movq	(%rbx,%r15), %r14
100016c8d:	48 8b 35 bc a5 03 00	movq	239036(%rip), %rsi ## Objc selector ref: filterPage
100016c94:	48 89 df	movq	%rbx, %rdi
100016c97:	41 ff d4	callq	*%r12
100016c9a:	48 8b 35 5f b2 03 00	movq	242271(%rip), %rsi ## Objc selector ref: setIntValue:
100016ca1:	4c 89 f7	movq	%r14, %rdi
100016ca4:	89 c2	movl	%eax, %edx
100016ca6:	41 ff d4	callq	*%r12
100016ca9:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100016cad:	48 8b 35 14 b3 03 00	movq	242452(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100016cb4:	ba 01 00 00 00	movl	$1, %edx
100016cb9:	4c 89 e0	movq	%r12, %rax
100016cbc:	5b	popq	%rbx
100016cbd:	41 5c	popq	%r12
100016cbf:	41 5e	popq	%r14
100016cc1:	41 5f	popq	%r15
100016cc3:	5d	popq	%rbp
100016cc4:	ff e0	jmpq	*%rax
100016cc6:	5b	popq	%rbx
100016cc7:	41 5c	popq	%r12
100016cc9:	41 5e	popq	%r14
100016ccb:	41 5f	popq	%r15
100016ccd:	5d	popq	%rbp
100016cce:	c3	retq
100016ccf:	55	pushq	%rbp
100016cd0:	48 89 e5	movq	%rsp, %rbp
100016cd3:	41 56	pushq	%r14
100016cd5:	53	pushq	%rbx
100016cd6:	48 89 fb	movq	%rdi, %rbx
100016cd9:	48 8b 05 38 c1 03 00	movq	246072(%rip), %rax
100016ce0:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100016ce4:	48 8b 35 dd b2 03 00	movq	242397(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100016ceb:	4c 8b 35 2e 5f 02 00	movq	155438(%rip), %r14 ## Objc message: -[%rdi setNeedsDisplay:]
100016cf2:	ba 01 00 00 00	movl	$1, %edx
100016cf7:	41 ff d6	callq	*%r14
100016cfa:	48 8b 35 4f b7 03 00	movq	243535(%rip), %rsi ## Objc selector ref: updatePageInfo
100016d01:	48 89 df	movq	%rbx, %rdi
100016d04:	4c 89 f0	movq	%r14, %rax
100016d07:	5b	popq	%rbx
100016d08:	41 5e	popq	%r14
100016d0a:	5d	popq	%rbp
100016d0b:	ff e0	jmpq	*%rax
100016d0d:	55	pushq	%rbp
100016d0e:	48 89 e5	movq	%rsp, %rbp
100016d11:	41 57	pushq	%r15
100016d13:	41 56	pushq	%r14
100016d15:	41 55	pushq	%r13
100016d17:	41 54	pushq	%r12
100016d19:	53	pushq	%rbx
100016d1a:	50	pushq	%rax
100016d1b:	49 89 d6	movq	%rdx, %r14
100016d1e:	49 89 ff	movq	%rdi, %r15
100016d21:	48 8b 1d d8 c0 03 00	movq	245976(%rip), %rbx
100016d28:	48 01 fb	addq	%rdi, %rbx
100016d2b:	48 89 df	movq	%rbx, %rdi
100016d2e:	e8 eb 87 01 00	callq	0x10002f51e ## symbol stub for: _pthread_mutex_lock
100016d33:	4c 8b 25 26 5f 02 00	movq	155430(%rip), %r12 ## literal pool symbol address: _objc_retain
100016d3a:	4c 89 f7	movq	%r14, %rdi
100016d3d:	41 ff d4	callq	*%r12
100016d40:	4c 8b 2d 79 c0 03 00	movq	245881(%rip), %r13
100016d47:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100016d4b:	ff 15 07 5f 02 00	callq	*155399(%rip) ## literal pool symbol address: _objc_release
100016d51:	4c 89 f7	movq	%r14, %rdi
100016d54:	41 ff d4	callq	*%r12
100016d57:	4b 89 04 2f	movq	%rax, (%r15,%r13)
100016d5b:	48 89 df	movq	%rbx, %rdi
100016d5e:	48 83 c4 08	addq	$8, %rsp
100016d62:	5b	popq	%rbx
100016d63:	41 5c	popq	%r12
100016d65:	41 5d	popq	%r13
100016d67:	41 5e	popq	%r14
100016d69:	41 5f	popq	%r15
100016d6b:	5d	popq	%rbp
100016d6c:	e9 b3 87 01 00	jmp	0x10002f524 ## symbol stub for: _pthread_mutex_unlock
100016d71:	55	pushq	%rbp
100016d72:	48 89 e5	movq	%rsp, %rbp
100016d75:	41 56	pushq	%r14
100016d77:	53	pushq	%rbx
100016d78:	49 89 fe	movq	%rdi, %r14
100016d7b:	48 8b 1d 7e c0 03 00	movq	245886(%rip), %rbx
100016d82:	48 01 fb	addq	%rdi, %rbx
100016d85:	48 89 df	movq	%rbx, %rdi
100016d88:	e8 91 87 01 00	callq	0x10002f51e ## symbol stub for: _pthread_mutex_lock
100016d8d:	48 8b 05 2c c0 03 00	movq	245804(%rip), %rax
100016d94:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100016d98:	ff 15 c2 5e 02 00	callq	*155330(%rip) ## literal pool symbol address: _objc_retain
100016d9e:	49 89 c6	movq	%rax, %r14
100016da1:	48 89 df	movq	%rbx, %rdi
100016da4:	e8 7b 87 01 00	callq	0x10002f524 ## symbol stub for: _pthread_mutex_unlock
100016da9:	4c 89 f0	movq	%r14, %rax
100016dac:	5b	popq	%rbx
100016dad:	41 5e	popq	%r14
100016daf:	5d	popq	%rbp
100016db0:	c3	retq
100016db1:	55	pushq	%rbp
100016db2:	48 89 e5	movq	%rsp, %rbp
100016db5:	41 56	pushq	%r14
100016db7:	53	pushq	%rbx
100016db8:	48 89 fb	movq	%rdi, %rbx
100016dbb:	48 8b 35 8e af 03 00	movq	241550(%rip), %rsi ## Objc selector ref: setCurrentFilter:
100016dc2:	4c 8b 35 57 5e 02 00	movq	155223(%rip), %r14 ## Objc message: -[%rdi setCurrentFilter:]
100016dc9:	31 d2	xorl	%edx, %edx
100016dcb:	41 ff d6	callq	*%r14
100016dce:	48 8b 05 bb c0 03 00	movq	245947(%rip), %rax
100016dd5:	48 c7 04 03 00 00 00 00	movq	$0, (%rbx,%rax)
100016ddd:	48 8b 05 64 c0 03 00	movq	245860(%rip), %rax
100016de4:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100016de8:	48 8b 35 19 ae 03 00	movq	241177(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100016def:	31 d2	xorl	%edx, %edx
100016df1:	4c 89 f0	movq	%r14, %rax
100016df4:	5b	popq	%rbx
100016df5:	41 5e	popq	%r14
100016df7:	5d	popq	%rbp
100016df8:	ff e0	jmpq	*%rax
100016dfa:	55	pushq	%rbp
100016dfb:	48 89 e5	movq	%rsp, %rbp
100016dfe:	31 c0	xorl	%eax, %eax
100016e00:	5d	popq	%rbp
100016e01:	c3	retq
100016e02:	55	pushq	%rbp
100016e03:	48 89 e5	movq	%rsp, %rbp
100016e06:	48 89 f8	movq	%rdi, %rax
100016e09:	48 8b 0d a8 53 02 00	movq	152488(%rip), %rcx ## literal pool symbol address: _CGAffineTransformIdentity
100016e10:	0f 10 01	movups	(%rcx), %xmm0
100016e13:	0f 10 49 10	movups	16(%rcx), %xmm1
100016e17:	0f 10 51 20	movups	32(%rcx), %xmm2
100016e1b:	0f 11 57 20	movups	%xmm2, 32(%rdi)
100016e1f:	0f 11 4f 10	movups	%xmm1, 16(%rdi)
100016e23:	0f 11 07	movups	%xmm0, (%rdi)
100016e26:	5d	popq	%rbp
100016e27:	c3	retq
100016e28:	55	pushq	%rbp
100016e29:	48 89 e5	movq	%rsp, %rbp
100016e2c:	31 c0	xorl	%eax, %eax
100016e2e:	5d	popq	%rbp
100016e2f:	c3	retq
100016e30:	55	pushq	%rbp
100016e31:	48 89 e5	movq	%rsp, %rbp
100016e34:	41 57	pushq	%r15
100016e36:	41 56	pushq	%r14
100016e38:	41 54	pushq	%r12
100016e3a:	53	pushq	%rbx
100016e3b:	49 89 ff	movq	%rdi, %r15
100016e3e:	48 8b 35 fb a3 03 00	movq	238587(%rip), %rsi ## Objc selector ref: filterDocument
100016e45:	ff 15 d5 5d 02 00	callq	*155093(%rip) ## Objc message: -[%rdi filterDocument]
100016e4b:	48 85 c0	testq	%rax, %rax
100016e4e:	74 48	je	0x100016e98
100016e50:	48 89 c3	movq	%rax, %rbx
100016e53:	48 89 c7	movq	%rax, %rdi
100016e56:	e8 9f 80 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100016e5b:	49 89 c6	movq	%rax, %r14
100016e5e:	e8 13 83 01 00	callq	0x10002f176 ## symbol stub for: _CGImageGetTypeID
100016e63:	49 39 c6	cmpq	%rax, %r14
100016e66:	75 30	jne	0x100016e98
100016e68:	48 89 df	movq	%rbx, %rdi
100016e6b:	e8 dc 82 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100016e70:	49 89 c6	movq	%rax, %r14
100016e73:	48 89 c7	movq	%rax, %rdi
100016e76:	e8 ab 81 01 00	callq	0x10002f026 ## symbol stub for: _CGColorSpaceGetType
100016e7b:	83 f8 07	cmpl	$7, %eax
100016e7e:	75 0b	jne	0x100016e8b
100016e80:	4c 89 f7	movq	%r14, %rdi
100016e83:	e8 7a 81 01 00	callq	0x10002f002 ## symbol stub for: _CGColorSpaceGetBaseColorSpace
100016e88:	49 89 c6	movq	%rax, %r14
100016e8b:	4c 89 f7	movq	%r14, %rdi
100016e8e:	e8 a5 81 01 00	callq	0x10002f038 ## symbol stub for: _CGColorSpaceRetain
100016e93:	49 89 c6	movq	%rax, %r14
100016e96:	eb 03	jmp	0x100016e9b
100016e98:	45 31 f6	xorl	%r14d, %r14d
100016e9b:	4c 8b 25 36 c0 03 00	movq	245814(%rip), %r12
100016ea2:	4b 83 3c 27 00	cmpq	$0, (%r15,%r12)
100016ea7:	74 57	je	0x100016f00
100016ea9:	48 8b 05 a8 bf 03 00	movq	245672(%rip), %rax
100016eb0:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100016eb4:	48 8b 35 7d ad 03 00	movq	241021(%rip), %rsi ## Objc selector ref: selectedItem
100016ebb:	48 8b 1d 5e 5d 02 00	movq	154974(%rip), %rbx ## Objc message: -[%rdi selectedItem]
100016ec2:	ff d3	callq	*%rbx
100016ec4:	48 8b 35 cd b4 03 00	movq	242893(%rip), %rsi ## Objc selector ref: tag
100016ecb:	48 89 c7	movq	%rax, %rdi
100016ece:	ff d3	callq	*%rbx
100016ed0:	48 85 c0	testq	%rax, %rax
100016ed3:	74 2b	je	0x100016f00
100016ed5:	4c 89 f7	movq	%r14, %rdi
100016ed8:	e8 55 81 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
100016edd:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100016ee1:	48 8b 35 88 ab 03 00	movq	240520(%rip), %rsi ## Objc selector ref: ref
100016ee8:	ff 15 32 5d 02 00	callq	*154930(%rip) ## Objc message: -[%rdi ref]
100016eee:	48 89 c7	movq	%rax, %rdi
100016ef1:	31 f6	xorl	%esi, %esi
100016ef3:	5b	popq	%rbx
100016ef4:	41 5c	popq	%r12
100016ef6:	41 5e	popq	%r14
100016ef8:	41 5f	popq	%r15
100016efa:	5d	popq	%rbp
100016efb:	e9 ea 80 01 00	jmp	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
100016f00:	4c 89 f0	movq	%r14, %rax
100016f03:	5b	popq	%rbx
100016f04:	41 5c	popq	%r12
100016f06:	41 5e	popq	%r14
100016f08:	41 5f	popq	%r15
100016f0a:	5d	popq	%rbp
100016f0b:	c3	retq
100016f0c:	55	pushq	%rbp
100016f0d:	48 89 e5	movq	%rsp, %rbp
100016f10:	b8 ff ff ff ff	movl	$4294967295, %eax
100016f15:	5d	popq	%rbp
100016f16:	c3	retq
100016f17:	55	pushq	%rbp
100016f18:	48 89 e5	movq	%rsp, %rbp
100016f1b:	31 c0	xorl	%eax, %eax
100016f1d:	5d	popq	%rbp
100016f1e:	c3	retq
100016f1f:	55	pushq	%rbp
100016f20:	48 89 e5	movq	%rsp, %rbp
100016f23:	31 c0	xorl	%eax, %eax
100016f25:	5d	popq	%rbp
100016f26:	c3	retq
100016f27:	55	pushq	%rbp
100016f28:	48 89 e5	movq	%rsp, %rbp
100016f2b:	48 89 f8	movq	%rdi, %rax
100016f2e:	48 8b 0d 93 be 03 00	movq	245395(%rip), %rcx
100016f35:	48 8b 3c 0f	movq	(%rdi,%rcx), %rdi
100016f39:	48 85 ff	testq	%rdi, %rdi
100016f3c:	74 19	je	0x100016f57
100016f3e:	48 8b 0d db bf 03 00	movq	245723(%rip), %rcx
100016f45:	48 8b 34 08	movq	(%rax,%rcx), %rsi
100016f49:	48 85 f6	testq	%rsi, %rsi
100016f4c:	7e 09	jle	0x100016f57
100016f4e:	48 ff ce	decq	%rsi
100016f51:	5d	popq	%rbp
100016f52:	e9 07 7f 01 00	jmp	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100016f57:	31 c0	xorl	%eax, %eax
100016f59:	5d	popq	%rbp
100016f5a:	c3	retq
100016f5b:	55	pushq	%rbp
100016f5c:	48 89 e5	movq	%rsp, %rbp
100016f5f:	48 85 d2	testq	%rdx, %rdx
100016f62:	74 2c	je	0x100016f90
100016f64:	48 89 f8	movq	%rdi, %rax
100016f67:	48 8b 0d 5a be 03 00	movq	245338(%rip), %rcx
100016f6e:	48 8b 3c 0f	movq	(%rdi,%rcx), %rdi
100016f72:	48 85 ff	testq	%rdi, %rdi
100016f75:	74 19	je	0x100016f90
100016f77:	48 8b 0d a2 bf 03 00	movq	245666(%rip), %rcx
100016f7e:	48 8b 34 08	movq	(%rax,%rcx), %rsi
100016f82:	48 85 f6	testq	%rsi, %rsi
100016f85:	7e 09	jle	0x100016f90
100016f87:	48 ff ce	decq	%rsi
100016f8a:	5d	popq	%rbp
100016f8b:	e9 e0 7e 01 00	jmp	0x10002ee70 ## symbol stub for: _CFArraySetValueAtIndex
100016f90:	5d	popq	%rbp
100016f91:	c3	retq
100016f92:	55	pushq	%rbp
100016f93:	48 89 e5	movq	%rsp, %rbp
100016f96:	31 c0	xorl	%eax, %eax
100016f98:	5d	popq	%rbp
100016f99:	c3	retq
100016f9a:	55	pushq	%rbp
100016f9b:	48 89 e5	movq	%rsp, %rbp
100016f9e:	5d	popq	%rbp
100016f9f:	c3	retq
100016fa0:	55	pushq	%rbp
100016fa1:	48 89 e5	movq	%rsp, %rbp
100016fa4:	31 c0	xorl	%eax, %eax
100016fa6:	5d	popq	%rbp
100016fa7:	c3	retq
100016fa8:	55	pushq	%rbp
100016fa9:	48 89 e5	movq	%rsp, %rbp
100016fac:	5d	popq	%rbp
100016fad:	c3	retq
100016fae:	55	pushq	%rbp
100016faf:	48 89 e5	movq	%rsp, %rbp
100016fb2:	5d	popq	%rbp
100016fb3:	c3	retq
100016fb4:	55	pushq	%rbp
100016fb5:	48 89 e5	movq	%rsp, %rbp
100016fb8:	31 c0	xorl	%eax, %eax
100016fba:	5d	popq	%rbp
100016fbb:	c3	retq
100016fbc:	55	pushq	%rbp
100016fbd:	48 89 e5	movq	%rsp, %rbp
100016fc0:	41 56	pushq	%r14
100016fc2:	53	pushq	%rbx
100016fc3:	48 89 fb	movq	%rdi, %rbx
100016fc6:	4c 8b 35 23 be 03 00	movq	245283(%rip), %r14
100016fcd:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
100016fd1:	48 85 ff	testq	%rdi, %rdi
100016fd4:	74 22	je	0x100016ff8
100016fd6:	48 8b 35 43 9c 03 00	movq	236611(%rip), %rsi ## Objc selector ref: active
100016fdd:	ff 15 3d 5c 02 00	callq	*154685(%rip) ## Objc message: -[%rdi active]
100016fe3:	84 c0	testb	%al, %al
100016fe5:	74 11	je	0x100016ff8
100016fe7:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100016feb:	48 8b 35 9e 9e 03 00	movq	237214(%rip), %rsi ## Objc selector ref: close
100016ff2:	ff 15 28 5c 02 00	callq	*154664(%rip) ## Objc message: -[%rdi close]
100016ff8:	48 8b 35 39 b4 03 00	movq	242745(%rip), %rsi ## Objc selector ref: updateChangeCount:
100016fff:	4c 8b 35 1a 5c 02 00	movq	154650(%rip), %r14 ## Objc message: -[%rdi updateChangeCount:]
100017006:	ba 02 00 00 00	movl	$2, %edx
10001700b:	48 89 df	movq	%rbx, %rdi
10001700e:	41 ff d6	callq	*%r14
100017011:	48 8b 35 10 b4 03 00	movq	242704(%rip), %rsi ## Objc selector ref: undoManager
100017018:	48 89 df	movq	%rbx, %rdi
10001701b:	41 ff d6	callq	*%r14
10001701e:	48 8b 35 93 aa 03 00	movq	240275(%rip), %rsi ## Objc selector ref: removeAllActions
100017025:	48 89 c7	movq	%rax, %rdi
100017028:	41 ff d6	callq	*%r14
10001702b:	b8 01 00 00 00	movl	$1, %eax
100017030:	5b	popq	%rbx
100017031:	41 5e	popq	%r14
100017033:	5d	popq	%rbp
100017034:	c3	retq
100017035:	55	pushq	%rbp
100017036:	48 89 e5	movq	%rsp, %rbp
100017039:	31 c0	xorl	%eax, %eax
10001703b:	5d	popq	%rbp
10001703c:	c3	retq
10001703d:	55	pushq	%rbp
10001703e:	48 89 e5	movq	%rsp, %rbp
100017041:	31 c0	xorl	%eax, %eax
100017043:	5d	popq	%rbp
100017044:	c3	retq
100017045:	55	pushq	%rbp
100017046:	48 89 e5	movq	%rsp, %rbp
100017049:	41 57	pushq	%r15
10001704b:	41 56	pushq	%r14
10001704d:	41 55	pushq	%r13
10001704f:	41 54	pushq	%r12
100017051:	53	pushq	%rbx
100017052:	48 81 ec 08 01 00 00	subq	$264, %rsp
100017059:	4c 89 85 20 ff ff ff	movq	%r8, -224(%rbp)
100017060:	48 89 cb	movq	%rcx, %rbx
100017063:	49 89 d4	movq	%rdx, %r12
100017066:	48 8b 05 ab 57 02 00	movq	153515(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001706d:	48 8b 00	movq	(%rax), %rax
100017070:	48 89 45 d0	movq	%rax, -48(%rbp)
100017074:	48 89 d7	movq	%rdx, %rdi
100017077:	e8 00 81 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
10001707c:	4c 89 e7	movq	%r12, %rdi
10001707f:	e8 da 80 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100017084:	48 8b 35 95 a9 03 00	movq	240021(%rip), %rsi ## Objc selector ref: properties
10001708b:	48 89 9d 18 ff ff ff	movq	%rbx, -232(%rbp)
100017092:	48 89 df	movq	%rbx, %rdi
100017095:	ff 15 85 5b 02 00	callq	*154501(%rip) ## Objc message: -[%rdi properties]
10001709b:	49 89 c6	movq	%rax, %r14
10001709e:	4c 89 e7	movq	%r12, %rdi
1000170a1:	e8 a6 80 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
1000170a6:	48 89 c3	movq	%rax, %rbx
1000170a9:	48 89 c7	movq	%rax, %rdi
1000170ac:	e8 75 7f 01 00	callq	0x10002f026 ## symbol stub for: _CGColorSpaceGetType
1000170b1:	83 f8 07	cmpl	$7, %eax
1000170b4:	75 0b	jne	0x1000170c1
1000170b6:	48 89 df	movq	%rbx, %rdi
1000170b9:	e8 44 7f 01 00	callq	0x10002f002 ## symbol stub for: _CGColorSpaceGetBaseColorSpace
1000170be:	48 89 c3	movq	%rax, %rbx
1000170c1:	48 89 df	movq	%rbx, %rdi
1000170c4:	e8 5d 7f 01 00	callq	0x10002f026 ## symbol stub for: _CGColorSpaceGetType
1000170c9:	83 f8 02	cmpl	$2, %eax
1000170cc:	74 23	je	0x1000170f1
1000170ce:	83 f8 01	cmpl	$1, %eax
1000170d1:	74 38	je	0x10001710b
1000170d3:	85 c0	testl	%eax, %eax
1000170d5:	75 51	jne	0x100017128
1000170d7:	48 8b 05 42 5a 02 00	movq	154178(%rip), %rax ## literal pool symbol address: _kQFilterDefaultGrayColorSpace
1000170de:	48 8b 00	movq	(%rax), %rax
1000170e1:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
1000170e8:	48 8b 05 b9 58 02 00	movq	153785(%rip), %rax ## literal pool symbol address: _kCGColorSpaceGenericGrayGamma2_2
1000170ef:	eb 32	jmp	0x100017123
1000170f1:	48 8b 05 20 5a 02 00	movq	154144(%rip), %rax ## literal pool symbol address: _kQFilterDefaultCMYKColorSpace
1000170f8:	48 8b 00	movq	(%rax), %rax
1000170fb:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
100017102:	48 8b 05 97 58 02 00	movq	153751(%rip), %rax ## literal pool symbol address: _kCGColorSpaceGenericCMYK
100017109:	eb 18	jmp	0x100017123
10001710b:	48 8b 05 16 5a 02 00	movq	154134(%rip), %rax ## literal pool symbol address: _kQFilterDefaultRGBColorSpace
100017112:	48 8b 00	movq	(%rax), %rax
100017115:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
10001711c:	48 8b 05 95 58 02 00	movq	153749(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
100017123:	4c 8b 28	movq	(%rax), %r13
100017126:	eb 0c	jmp	0x100017134
100017128:	45 31 ed	xorl	%r13d, %r13d
10001712b:	31 c0	xorl	%eax, %eax
10001712d:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
100017134:	48 89 df	movq	%rbx, %rdi
100017137:	e8 e4 7e 01 00	callq	0x10002f020 ## symbol stub for: _CGColorSpaceGetProcessColorModel
10001713c:	83 f8 02	cmpl	$2, %eax
10001713f:	48 89 9d 68 ff ff ff	movq	%rbx, -152(%rbp)
100017146:	74 12	je	0x10001715a
100017148:	83 f8 01	cmpl	$1, %eax
10001714b:	74 16	je	0x100017163
10001714d:	85 c0	testl	%eax, %eax
10001714f:	75 1e	jne	0x10001716f
100017151:	48 8b 05 98 59 02 00	movq	154008(%rip), %rax ## literal pool symbol address: _kQFilterAssignGrayColorSpace
100017158:	eb 10	jmp	0x10001716a
10001715a:	48 8b 05 87 59 02 00	movq	153991(%rip), %rax ## literal pool symbol address: _kQFilterAssignCMYKColorSpace
100017161:	eb 07	jmp	0x10001716a
100017163:	48 8b 05 8e 59 02 00	movq	153998(%rip), %rax ## literal pool symbol address: _kQFilterAssignRGBColorSpace
10001716a:	48 8b 00	movq	(%rax), %rax
10001716d:	eb 02	jmp	0x100017171
10001716f:	31 c0	xorl	%eax, %eax
100017171:	4d 85 f6	testq	%r14, %r14
100017174:	0f 84 64 01 00 00	je	0x1000172de
10001717a:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
100017181:	48 8b 05 88 59 02 00	movq	153992(%rip), %rax ## literal pool symbol address: _kQFilterData
100017188:	48 8b 10	movq	(%rax), %rdx
10001718b:	4c 8b 3d e6 a6 03 00	movq	239334(%rip), %r15 ## Objc selector ref: objectForKey:
100017192:	4c 89 f7	movq	%r14, %rdi
100017195:	4c 89 fe	movq	%r15, %rsi
100017198:	ff 15 82 5a 02 00	callq	*154242(%rip) ## Objc message: -[%rdi objectForKey:]
10001719e:	48 85 c0	testq	%rax, %rax
1000171a1:	0f 84 37 01 00 00	je	0x1000172de
1000171a7:	48 89 c3	movq	%rax, %rbx
1000171aa:	4c 89 ad 40 ff ff ff	movq	%r13, -192(%rbp)
1000171b1:	48 8b 05 50 59 02 00	movq	153936(%rip), %rax ## literal pool symbol address: _kQFilterColorSettings
1000171b8:	48 8b 10	movq	(%rax), %rdx
1000171bb:	4c 8b 2d 5e 5a 02 00	movq	154206(%rip), %r13 ## Objc message: -[%rdi objectForKey:]
1000171c2:	48 89 df	movq	%rbx, %rdi
1000171c5:	4c 89 fe	movq	%r15, %rsi
1000171c8:	41 ff d5	callq	*%r13
1000171cb:	49 89 c6	movq	%rax, %r14
1000171ce:	48 8b 05 b3 59 02 00	movq	154035(%rip), %rax ## literal pool symbol address: _kQFilterProfileData
1000171d5:	48 8b 10	movq	(%rax), %rdx
1000171d8:	48 89 df	movq	%rbx, %rdi
1000171db:	4c 89 fe	movq	%r15, %rsi
1000171de:	41 ff d5	callq	*%r13
1000171e1:	4d 85 f6	testq	%r14, %r14
1000171e4:	0f 84 20 01 00 00	je	0x10001730a
1000171ea:	48 89 c3	movq	%rax, %rbx
1000171ed:	4d 89 fd	movq	%r15, %r13
1000171f0:	48 8b 3d 21 b4 03 00	movq	242721(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
1000171f7:	e8 ec 82 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
1000171fc:	4c 89 f7	movq	%r14, %rdi
1000171ff:	48 89 c6	movq	%rax, %rsi
100017202:	e8 e7 82 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
100017207:	84 c0	testb	%al, %al
100017209:	0f 84 fb 00 00 00	je	0x10001730a
10001720f:	48 85 db	testq	%rbx, %rbx
100017212:	74 1f	je	0x100017233
100017214:	48 8b 3d 95 b3 03 00	movq	242581(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
10001721b:	e8 c8 82 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100017220:	48 89 df	movq	%rbx, %rdi
100017223:	48 89 c6	movq	%rax, %rsi
100017226:	e8 c3 82 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
10001722b:	84 c0	testb	%al, %al
10001722d:	0f 84 d7 00 00 00	je	0x10001730a
100017233:	48 89 9d 48 ff ff ff	movq	%rbx, -184(%rbp)
10001723a:	48 8b 05 ff 58 02 00	movq	153855(%rip), %rax ## literal pool symbol address: _kQFilterImageColorSettings
100017241:	48 8b 10	movq	(%rax), %rdx
100017244:	4c 89 f7	movq	%r14, %rdi
100017247:	4c 89 ee	movq	%r13, %rsi
10001724a:	4c 8b 3d cf 59 02 00	movq	154063(%rip), %r15 ## Objc message: +[NSArray objectForKey:]
100017251:	41 ff d7	callq	*%r15
100017254:	48 89 c3	movq	%rax, %rbx
100017257:	48 8b 05 d2 58 02 00	movq	153810(%rip), %rax ## literal pool symbol address: _kQFilterDocumentColorSettings
10001725e:	48 8b 10	movq	(%rax), %rdx
100017261:	4c 89 f7	movq	%r14, %rdi
100017264:	4c 89 ee	movq	%r13, %rsi
100017267:	41 ff d7	callq	*%r15
10001726a:	49 89 c7	movq	%rax, %r15
10001726d:	48 85 db	testq	%rbx, %rbx
100017270:	0f 84 1e 07 00 00	je	0x100017994
100017276:	48 8b 3d 9b b3 03 00	movq	242587(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001727d:	e8 66 82 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100017282:	48 89 df	movq	%rbx, %rdi
100017285:	48 89 c6	movq	%rax, %rsi
100017288:	e8 61 82 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
10001728d:	3c 01	cmpb	$1, %al
10001728f:	4c 8b ad 40 ff ff ff	movq	-192(%rbp), %r13
100017296:	4c 8b b5 38 ff ff ff	movq	-200(%rbp), %r14
10001729d:	0f 85 00 07 00 00	jne	0x1000179a3
1000172a3:	48 8b 05 f6 58 02 00	movq	153846(%rip), %rax ## literal pool symbol address: _kQFilterTargetColorSpace
1000172aa:	48 8b 10	movq	(%rax), %rdx
1000172ad:	48 89 df	movq	%rbx, %rdi
1000172b0:	48 8b 35 c1 a5 03 00	movq	239041(%rip), %rsi ## Objc selector ref: objectForKey:
1000172b7:	ff 15 63 59 02 00	callq	*153955(%rip) ## Objc message: +[NSDictionary objectForKey:]
1000172bd:	48 85 c0	testq	%rax, %rax
1000172c0:	0f 84 ef 06 00 00	je	0x1000179b5
1000172c6:	48 8b 35 43 a2 03 00	movq	238147(%rip), %rsi ## Objc selector ref: intValue
1000172cd:	48 89 c7	movq	%rax, %rdi
1000172d0:	ff 15 4a 59 02 00	callq	*153930(%rip) ## Objc message: -[%rdi intValue]
1000172d6:	48 63 f0	movslq	%eax, %rsi
1000172d9:	e9 de 06 00 00	jmp	0x1000179bc
1000172de:	45 31 f6	xorl	%r14d, %r14d
1000172e1:	4d 85 f6	testq	%r14, %r14
1000172e4:	48 8b 9d 68 ff ff ff	movq	-152(%rbp), %rbx
1000172eb:	49 0f 45 de	cmovneq	%r14, %rbx
1000172ef:	48 89 df	movq	%rbx, %rdi
1000172f2:	e8 47 7d 01 00	callq	0x10002f03e ## symbol stub for: _CGColorSpaceSupportsOutput
1000172f7:	84 c0	testb	%al, %al
1000172f9:	74 05	je	0x100017300
1000172fb:	48 89 df	movq	%rbx, %rdi
1000172fe:	eb 11	jmp	0x100017311
100017300:	4d 85 ed	testq	%r13, %r13
100017303:	74 13	je	0x100017318
100017305:	4c 89 ef	movq	%r13, %rdi
100017308:	eb 18	jmp	0x100017322
10001730a:	48 8b bd 68 ff ff ff	movq	-152(%rbp), %rdi
100017311:	e8 22 7d 01 00	callq	0x10002f038 ## symbol stub for: _CGColorSpaceRetain
100017316:	eb 0f	jmp	0x100017327
100017318:	48 8b 05 99 56 02 00	movq	153241(%rip), %rax ## literal pool symbol address: _kCGColorSpaceSRGB
10001731f:	48 8b 38	movq	(%rax), %rdi
100017322:	e8 cf 7c 01 00	callq	0x10002eff6 ## symbol stub for: _CGColorSpaceCreateWithName
100017327:	49 89 c7	movq	%rax, %r15
10001732a:	4c 89 e7	movq	%r12, %rdi
10001732d:	e8 08 7e 01 00	callq	0x10002f13a ## symbol stub for: _CGImageGetBitsPerComponent
100017332:	4c 89 e7	movq	%r12, %rdi
100017335:	e8 06 7e 01 00	callq	0x10002f140 ## symbol stub for: _CGImageGetBitsPerPixel
10001733a:	4c 89 e7	movq	%r12, %rdi
10001733d:	e8 04 7e 01 00	callq	0x10002f146 ## symbol stub for: _CGImageGetBytesPerRow
100017342:	4c 89 e7	movq	%r12, %rdi
100017345:	e8 e4 7d 01 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
10001734a:	41 89 c6	movl	%eax, %r14d
10001734d:	4c 89 ff	movq	%r15, %rdi
100017350:	e8 c5 7c 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
100017355:	48 89 c3	movq	%rax, %rbx
100017358:	4c 89 e7	movq	%r12, %rdi
10001735b:	e8 1c 7e 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100017360:	49 89 c5	movq	%rax, %r13
100017363:	4c 89 e7	movq	%r12, %rdi
100017366:	e8 f3 7d 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10001736b:	48 89 85 58 ff ff ff	movq	%rax, -168(%rbp)
100017372:	48 83 fb 04	cmpq	$4, %rbx
100017376:	74 3d	je	0x1000173b5
100017378:	48 83 fb 03	cmpq	$3, %rbx
10001737c:	74 69	je	0x1000173e7
10001737e:	31 c0	xorl	%eax, %eax
100017380:	48 83 fb 01	cmpq	$1, %rbx
100017384:	0f 85 9c 00 00 00	jne	0x100017426
10001738a:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
100017391:	b8 08 00 00 00	movl	$8, %eax
100017396:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
10001739d:	b8 08 00 00 00	movl	$8, %eax
1000173a2:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
1000173a9:	4c 89 ad 40 ff ff ff	movq	%r13, -192(%rbp)
1000173b0:	e9 ad 00 00 00	jmp	0x100017462
1000173b5:	31 c0	xorl	%eax, %eax
1000173b7:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
1000173be:	4a 8d 04 ad 00 00 00 00	leaq	(,%r13,4), %rax
1000173c6:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
1000173cd:	b8 20 00 00 00	movl	$32, %eax
1000173d2:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
1000173d9:	b8 08 00 00 00	movl	$8, %eax
1000173de:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
1000173e5:	eb 7b	jmp	0x100017462
1000173e7:	4a 8d 04 ad 00 00 00 00	leaq	(,%r13,4), %rax
1000173ef:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
1000173f6:	b8 20 00 00 00	movl	$32, %eax
1000173fb:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
100017402:	b8 08 00 00 00	movl	$8, %eax
100017407:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
10001740e:	41 83 fe 04	cmpl	$4, %r14d
100017412:	74 36	je	0x10001744a
100017414:	41 83 fe 03	cmpl	$3, %r14d
100017418:	74 37	je	0x100017451
10001741a:	45 85 f6	testl	%r14d, %r14d
10001741d:	75 39	jne	0x100017458
10001741f:	b8 05 00 00 00	movl	$5, %eax
100017424:	eb 35	jmp	0x10001745b
100017426:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
10001742d:	31 c0	xorl	%eax, %eax
10001742f:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
100017436:	31 c0	xorl	%eax, %eax
100017438:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
10001743f:	31 c0	xorl	%eax, %eax
100017441:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
100017448:	eb 18	jmp	0x100017462
10001744a:	b8 02 00 00 00	movl	$2, %eax
10001744f:	eb 0a	jmp	0x10001745b
100017451:	b8 01 00 00 00	movl	$1, %eax
100017456:	eb 03	jmp	0x10001745b
100017458:	44 89 f0	movl	%r14d, %eax
10001745b:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
100017462:	4c 89 ad 38 ff ff ff	movq	%r13, -200(%rbp)
100017469:	4c 89 e7	movq	%r12, %rdi
10001746c:	e8 11 7d 01 00	callq	0x10002f182 ## symbol stub for: _CGImageHasAlpha
100017471:	c7 85 34 ff ff ff 00 00 00 00	movl	$0, -204(%rbp)
10001747b:	41 be 00 00 00 00	movl	$0, %r14d
100017481:	84 c0	testb	%al, %al
100017483:	75 0f	jne	0x100017494
100017485:	4c 89 e7	movq	%r12, %rdi
100017488:	e8 d7 7c 01 00	callq	0x10002f164 ## symbol stub for: _CGImageGetMask
10001748d:	48 85 c0	testq	%rax, %rax
100017490:	41 0f 94 c6	sete	%r14b
100017494:	4c 89 a5 28 ff ff ff	movq	%r12, -216(%rbp)
10001749b:	48 83 fb 03	cmpq	$3, %rbx
10001749f:	41 0f 94 c5	sete	%r13b
1000174a3:	45 08 f5	orb	%r14b, %r13b
1000174a6:	48 8b bd 20 ff ff ff	movq	-224(%rbp), %rdi
1000174ad:	48 8b 35 6c a5 03 00	movq	238956(%rip), %rsi ## Objc selector ref: properties
1000174b4:	ff 15 66 57 02 00	callq	*153446(%rip) ## Objc message: -[%rdi properties]
1000174ba:	48 85 c0	testq	%rax, %rax
1000174bd:	4c 89 bd 68 ff ff ff	movq	%r15, -152(%rbp)
1000174c4:	0f 84 56 01 00 00	je	0x100017620
1000174ca:	48 8b 0d 3f 56 02 00	movq	153151(%rip), %rcx ## literal pool symbol address: _kQFilterData
1000174d1:	48 8b 11	movq	(%rcx), %rdx
1000174d4:	4c 8b 25 9d a3 03 00	movq	238493(%rip), %r12 ## Objc selector ref: objectForKey:
1000174db:	48 89 c7	movq	%rax, %rdi
1000174de:	4c 89 e6	movq	%r12, %rsi
1000174e1:	ff 15 39 57 02 00	callq	*153401(%rip) ## Objc message: -[%rdi objectForKey:]
1000174e7:	48 85 c0	testq	%rax, %rax
1000174ea:	0f 84 29 01 00 00	je	0x100017619
1000174f0:	48 8b 0d 11 56 02 00	movq	153105(%rip), %rcx ## literal pool symbol address: _kQFilterColorSettings
1000174f7:	48 8b 11	movq	(%rcx), %rdx
1000174fa:	48 89 c7	movq	%rax, %rdi
1000174fd:	4c 89 e6	movq	%r12, %rsi
100017500:	ff 15 1a 57 02 00	callq	*153370(%rip) ## Objc message: -[%rdi objectForKey:]
100017506:	48 85 c0	testq	%rax, %rax
100017509:	0f 84 0a 01 00 00	je	0x100017619
10001750f:	48 89 c3	movq	%rax, %rbx
100017512:	48 8b 3d ff b0 03 00	movq	241919(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100017519:	e8 ca 7f 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001751e:	48 89 df	movq	%rbx, %rdi
100017521:	48 89 c6	movq	%rax, %rsi
100017524:	e8 c5 7f 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
100017529:	3c 01	cmpb	$1, %al
10001752b:	0f 85 e8 00 00 00	jne	0x100017619
100017531:	48 8b 05 28 56 02 00	movq	153128(%rip), %rax ## literal pool symbol address: _kQFilterImageSettings
100017538:	48 8b 10	movq	(%rax), %rdx
10001753b:	48 89 df	movq	%rbx, %rdi
10001753e:	4c 89 e6	movq	%r12, %rsi
100017541:	ff 15 d9 56 02 00	callq	*153305(%rip) ## Objc message: +[NSDictionary objectForKey:]
100017547:	48 85 c0	testq	%rax, %rax
10001754a:	0f 84 c9 00 00 00	je	0x100017619
100017550:	48 89 c3	movq	%rax, %rbx
100017553:	48 8b 3d be b0 03 00	movq	241854(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001755a:	e8 89 7f 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001755f:	48 89 df	movq	%rbx, %rdi
100017562:	48 89 c6	movq	%rax, %rsi
100017565:	e8 84 7f 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
10001756a:	3c 01	cmpb	$1, %al
10001756c:	0f 85 a7 00 00 00	jne	0x100017619
100017572:	48 8b 05 df 55 02 00	movq	153055(%rip), %rax ## literal pool symbol address: _kQFilterImageScaleSettings
100017579:	48 8b 10	movq	(%rax), %rdx
10001757c:	48 89 df	movq	%rbx, %rdi
10001757f:	4c 89 e6	movq	%r12, %rsi
100017582:	ff 15 98 56 02 00	callq	*153240(%rip) ## Objc message: +[NSDictionary objectForKey:]
100017588:	48 85 c0	testq	%rax, %rax
10001758b:	0f 84 88 00 00 00	je	0x100017619
100017591:	48 89 c3	movq	%rax, %rbx
100017594:	48 8b 05 ad 55 02 00	movq	153005(%rip), %rax ## literal pool symbol address: _kQFilterImageScaleFactor
10001759b:	48 8b 10	movq	(%rax), %rdx
10001759e:	4c 8b 3d 7b 56 02 00	movq	153211(%rip), %r15 ## Objc message: -[%rdi objectForKey:]
1000175a5:	48 89 df	movq	%rbx, %rdi
1000175a8:	4c 89 e6	movq	%r12, %rsi
1000175ab:	41 ff d7	callq	*%r15
1000175ae:	48 8b 35 db 9c 03 00	movq	236763(%rip), %rsi ## Objc selector ref: floatValue
1000175b5:	48 89 c7	movq	%rax, %rdi
1000175b8:	41 ff d7	callq	*%r15
1000175bb:	f3 0f 11 85 20 ff ff ff	movss	%xmm0, -224(%rbp)
1000175c3:	48 8b 05 86 55 02 00	movq	152966(%rip), %rax ## literal pool symbol address: _kQFilterImageScaleInterpolate
1000175ca:	48 8b 10	movq	(%rax), %rdx
1000175cd:	48 89 df	movq	%rbx, %rdi
1000175d0:	4c 89 e6	movq	%r12, %rsi
1000175d3:	41 ff d7	callq	*%r15
1000175d6:	ba 00 00 00 00	movl	$0, %edx
1000175db:	48 85 c0	testq	%rax, %rax
1000175de:	0f 84 4d 06 00 00	je	0x100017c31
1000175e4:	48 89 c3	movq	%rax, %rbx
1000175e7:	48 89 c7	movq	%rax, %rdi
1000175ea:	e8 0b 79 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
1000175ef:	49 89 c4	movq	%rax, %r12
1000175f2:	e8 85 78 01 00	callq	0x10002ee7c ## symbol stub for: _CFBooleanGetTypeID
1000175f7:	49 39 c4	cmpq	%rax, %r12
1000175fa:	0f 85 05 06 00 00	jne	0x100017c05
100017600:	48 8b 05 79 53 02 00	movq	152441(%rip), %rax ## literal pool symbol address: _kCFBooleanTrue
100017607:	31 c9	xorl	%ecx, %ecx
100017609:	48 39 18	cmpq	%rbx, (%rax)
10001760c:	0f 94 c1	sete	%cl
10001760f:	8d 14 09	leal	(%rcx,%rcx), %edx
100017612:	ff c2	incl	%edx
100017614:	e9 18 06 00 00	jmp	0x100017c31
100017619:	4c 8b bd 68 ff ff ff	movq	-152(%rbp), %r15
100017620:	48 8b 9d 58 ff ff ff	movq	-168(%rbp), %rbx
100017627:	45 84 ed	testb	%r13b, %r13b
10001762a:	48 8b 85 60 ff ff ff	movq	-160(%rbp), %rax
100017631:	0f 84 87 01 00 00	je	0x1000177be
100017637:	89 44 24 08	movl	%eax, 8(%rsp)
10001763b:	4c 89 3c 24	movq	%r15, (%rsp)
10001763f:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
100017648:	45 31 e4	xorl	%r12d, %r12d
10001764b:	f2 0f 10 05 e5 1a 02 00	movsd	137957(%rip), %xmm0
100017653:	31 ff	xorl	%edi, %edi
100017655:	48 8b b5 38 ff ff ff	movq	-200(%rbp), %rsi
10001765c:	48 89 da	movq	%rbx, %rdx
10001765f:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
100017666:	4c 8b 85 48 ff ff ff	movq	-184(%rbp), %r8
10001766d:	4c 8b 8d 40 ff ff ff	movq	-192(%rbp), %r9
100017674:	0f 28 c8	movaps	%xmm0, %xmm1
100017677:	e8 26 79 01 00	callq	0x10002efa2 ## symbol stub for: _CGBitmapContextCreateWithDictionary
10001767c:	48 85 c0	testq	%rax, %rax
10001767f:	0f 84 da 02 00 00	je	0x10001795f
100017685:	49 89 c5	movq	%rax, %r13
100017688:	48 89 c7	movq	%rax, %rdi
10001768b:	e8 1e 79 01 00	callq	0x10002efae ## symbol stub for: _CGBitmapContextGetWidth
100017690:	49 89 c4	movq	%rax, %r12
100017693:	4c 89 ef	movq	%r13, %rdi
100017696:	e8 0d 79 01 00	callq	0x10002efa8 ## symbol stub for: _CGBitmapContextGetHeight
10001769b:	66 49 0f 6e cc	movq	%r12, %xmm1
1000176a0:	66 48 0f 6e c0	movq	%rax, %xmm0
1000176a5:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
1000176a9:	66 0f ef c0	pxor	%xmm0, %xmm0
1000176ad:	66 0f 6f d1	movdqa	%xmm1, %xmm2
1000176b1:	66 0f 3a 0e d0 cc	pblendw	$204, %xmm0, %xmm2
1000176b7:	66 0f eb 15 81 1a 02 00	por	137857(%rip), %xmm2
1000176bf:	66 0f 73 d1 20	psrlq	$32, %xmm1
1000176c4:	66 0f eb 0d 84 1a 02 00	por	137860(%rip), %xmm1
1000176cc:	66 0f 5c 0d 8c 1a 02 00	subpd	137868(%rip), %xmm1
1000176d4:	66 0f 58 ca	addpd	%xmm2, %xmm1
1000176d8:	66 0f 7f 85 f0 fe ff ff	movdqa	%xmm0, -272(%rbp)
1000176e0:	66 0f 29 8d 00 ff ff ff	movapd	%xmm1, -256(%rbp)
1000176e8:	45 84 f6	testb	%r14b, %r14b
1000176eb:	0f 84 88 01 00 00	je	0x100017879
1000176f1:	0f 28 0d 88 1a 02 00	movaps	137864(%rip), %xmm1
1000176f8:	4c 8d 7d c0	leaq	-64(%rbp), %r15
1000176fc:	41 0f 29 0f	movaps	%xmm1, (%r15)
100017700:	0f 28 0d a9 1b 02 00	movaps	138153(%rip), %xmm1
100017707:	48 89 9d 58 ff ff ff	movq	%rbx, -168(%rbp)
10001770e:	48 8d 5d a0	leaq	-96(%rbp), %rbx
100017712:	0f 29 4b 10	movaps	%xmm1, 16(%rbx)
100017716:	0f 28 0d 83 1b 02 00	movaps	138115(%rip), %xmm1
10001771d:	0f 29 0b	movaps	%xmm1, (%rbx)
100017720:	4c 8d a5 70 ff ff ff	leaq	-144(%rbp), %r12
100017727:	66 41 0f 7f 44 24 10	movdqa	%xmm0, 16(%r12)
10001772e:	66 41 0f 7f 04 24	movdqa	%xmm0, (%r12)
100017734:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
10001773e:	49 89 44 24 20	movq	%rax, 32(%r12)
100017743:	4c 8b b5 68 ff ff ff	movq	-152(%rbp), %r14
10001774a:	4c 89 f7	movq	%r14, %rdi
10001774d:	e8 c8 78 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
100017752:	48 83 f8 03	cmpq	$3, %rax
100017756:	4c 0f 44 e3	cmoveq	%rbx, %r12
10001775a:	48 8b 9d 58 ff ff ff	movq	-168(%rbp), %rbx
100017761:	48 83 f8 01	cmpq	$1, %rax
100017765:	4d 0f 44 e7	cmoveq	%r15, %r12
100017769:	4c 89 f7	movq	%r14, %rdi
10001776c:	4c 89 e6	movq	%r12, %rsi
10001776f:	e8 4c 78 01 00	callq	0x10002efc0 ## symbol stub for: _CGColorCreate
100017774:	49 89 c4	movq	%rax, %r12
100017777:	4c 89 ef	movq	%r13, %rdi
10001777a:	e8 43 79 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10001777f:	4c 89 ef	movq	%r13, %rdi
100017782:	4c 89 e6	movq	%r12, %rsi
100017785:	e8 44 79 01 00	callq	0x10002f0ce ## symbol stub for: _CGContextSetFillColorWithColor
10001778a:	0f 28 85 f0 fe ff ff	movaps	-272(%rbp), %xmm0
100017791:	0f 28 8d 00 ff ff ff	movaps	-256(%rbp), %xmm1
100017798:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001779d:	0f 11 04 24	movups	%xmm0, (%rsp)
1000177a1:	4c 89 ef	movq	%r13, %rdi
1000177a4:	e8 ef 78 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
1000177a9:	4c 89 ef	movq	%r13, %rdi
1000177ac:	e8 0b 79 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
1000177b1:	4c 89 e7	movq	%r12, %rdi
1000177b4:	e8 0d 78 01 00	callq	0x10002efc6 ## symbol stub for: _CGColorRelease
1000177b9:	e9 da 00 00 00	jmp	0x100017898
1000177be:	89 44 24 08	movl	%eax, 8(%rsp)
1000177c2:	4c 89 3c 24	movq	%r15, (%rsp)
1000177c6:	48 c7 44 24 10 00 00 00 00	movq	$0, 16(%rsp)
1000177cf:	45 31 e4	xorl	%r12d, %r12d
1000177d2:	f2 0f 10 05 5e 19 02 00	movsd	137566(%rip), %xmm0
1000177da:	31 ff	xorl	%edi, %edi
1000177dc:	48 8b b5 38 ff ff ff	movq	-200(%rbp), %rsi
1000177e3:	48 89 da	movq	%rbx, %rdx
1000177e6:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
1000177ed:	4c 8b 85 48 ff ff ff	movq	-184(%rbp), %r8
1000177f4:	4c 8b 8d 40 ff ff ff	movq	-192(%rbp), %r9
1000177fb:	0f 28 c8	movaps	%xmm0, %xmm1
1000177fe:	e8 99 77 01 00	callq	0x10002ef9c ## symbol stub for: _CGBitmapContextCreateWithAlpha
100017803:	48 85 c0	testq	%rax, %rax
100017806:	0f 84 53 01 00 00	je	0x10001795f
10001780c:	49 89 c5	movq	%rax, %r13
10001780f:	48 89 c7	movq	%rax, %rdi
100017812:	e8 97 77 01 00	callq	0x10002efae ## symbol stub for: _CGBitmapContextGetWidth
100017817:	49 89 c4	movq	%rax, %r12
10001781a:	4c 89 ef	movq	%r13, %rdi
10001781d:	e8 86 77 01 00	callq	0x10002efa8 ## symbol stub for: _CGBitmapContextGetHeight
100017822:	66 49 0f 6e c4	movq	%r12, %xmm0
100017827:	66 48 0f 6e c8	movq	%rax, %xmm1
10001782c:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
100017830:	66 0f ef c9	pxor	%xmm1, %xmm1
100017834:	66 0f 6f d0	movdqa	%xmm0, %xmm2
100017838:	66 0f 3a 0e d1 cc	pblendw	$204, %xmm1, %xmm2
10001783e:	66 0f eb 15 fa 18 02 00	por	137466(%rip), %xmm2
100017846:	66 0f 73 d0 20	psrlq	$32, %xmm0
10001784b:	66 0f eb 05 fd 18 02 00	por	137469(%rip), %xmm0
100017853:	66 0f 5c 05 05 19 02 00	subpd	137477(%rip), %xmm0
10001785b:	66 0f 58 c2	addpd	%xmm2, %xmm0
10001785f:	66 0f 7f 8d 70 ff ff ff	movdqa	%xmm1, -144(%rbp)
100017867:	66 0f 29 45 80	movapd	%xmm0, -128(%rbp)
10001786c:	0f 28 85 70 ff ff ff	movaps	-144(%rbp), %xmm0
100017873:	0f 28 4d 80	movaps	-128(%rbp), %xmm1
100017877:	eb 0e	jmp	0x100017887
100017879:	0f 28 85 f0 fe ff ff	movaps	-272(%rbp), %xmm0
100017880:	0f 28 8d 00 ff ff ff	movaps	-256(%rbp), %xmm1
100017887:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001788c:	0f 11 04 24	movups	%xmm0, (%rsp)
100017890:	4c 89 ef	movq	%r13, %rdi
100017893:	e8 d6 77 01 00	callq	0x10002f06e ## symbol stub for: _CGContextClearRect
100017898:	4c 8b b5 28 ff ff ff	movq	-216(%rbp), %r14
10001789f:	48 8b 35 5a 94 03 00	movq	234586(%rip), %rsi ## Objc selector ref: applyToContext:
1000178a6:	48 8b bd 18 ff ff ff	movq	-232(%rbp), %rdi
1000178ad:	4c 89 ea	movq	%r13, %rdx
1000178b0:	ff 15 6a 53 02 00	callq	*152426(%rip) ## Objc message: -[%rdi applyToContext:]
1000178b6:	8b 95 34 ff ff ff	movl	-204(%rbp), %edx
1000178bc:	85 d2	testl	%edx, %edx
1000178be:	75 10	jne	0x1000178d0
1000178c0:	4c 89 f7	movq	%r14, %rdi
1000178c3:	e8 a8 78 01 00	callq	0x10002f170 ## symbol stub for: _CGImageGetShouldInterpolate
1000178c8:	0f b6 c0	movzbl	%al, %eax
1000178cb:	8d 14 00	leal	(%rax,%rax), %edx
1000178ce:	ff c2	incl	%edx
1000178d0:	f2 0f 10 85 38 ff ff ff	movsd	-200(%rbp), %xmm0
1000178d8:	66 0f 28 0d 30 0d 02 00	movapd	134448(%rip), %xmm1
1000178e0:	0f 14 c1	unpcklps	%xmm1, %xmm0
1000178e3:	66 0f 28 15 35 0d 02 00	movapd	134453(%rip), %xmm2
1000178eb:	66 0f 5c c2	subpd	%xmm2, %xmm0
1000178ef:	66 48 0f 6e db	movq	%rbx, %xmm3
1000178f4:	66 0f 62 d9	punpckldq	%xmm1, %xmm3
1000178f8:	66 0f 5c da	subpd	%xmm2, %xmm3
1000178fc:	66 0f 7c c3	haddpd	%xmm3, %xmm0
100017900:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100017904:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10001790b:	66 0f 29 0b	movapd	%xmm1, (%rbx)
10001790f:	66 0f 29 43 10	movapd	%xmm0, 16(%rbx)
100017914:	4c 89 ef	movq	%r13, %rdi
100017917:	89 d6	movl	%edx, %esi
100017919:	e8 bc 77 01 00	callq	0x10002f0da ## symbol stub for: _CGContextSetInterpolationQualityRange
10001791e:	4c 89 ef	movq	%r13, %rdi
100017921:	48 89 de	movq	%rbx, %rsi
100017924:	e8 3f 77 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
100017929:	0f 28 03	movaps	(%rbx), %xmm0
10001792c:	0f 28 4b 10	movaps	16(%rbx), %xmm1
100017930:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100017935:	0f 11 04 24	movups	%xmm0, (%rsp)
100017939:	4c 89 ef	movq	%r13, %rdi
10001793c:	4c 89 f6	movq	%r14, %rsi
10001793f:	e8 3c 77 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
100017944:	4c 89 ef	movq	%r13, %rdi
100017947:	e8 46 77 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10001794c:	4c 89 ef	movq	%r13, %rdi
10001794f:	e8 42 76 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
100017954:	49 89 c4	movq	%rax, %r12
100017957:	4c 89 ef	movq	%r13, %rdi
10001795a:	e8 57 77 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
10001795f:	48 8b bd 68 ff ff ff	movq	-152(%rbp), %rdi
100017966:	e8 c7 76 01 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10001796b:	48 8b 05 a6 4e 02 00	movq	151206(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100017972:	48 8b 00	movq	(%rax), %rax
100017975:	48 3b 45 d0	cmpq	-48(%rbp), %rax
100017979:	0f 85 aa 03 00 00	jne	0x100017d29
10001797f:	4c 89 e0	movq	%r12, %rax
100017982:	48 81 c4 08 01 00 00	addq	$264, %rsp
100017989:	5b	popq	%rbx
10001798a:	41 5c	popq	%r12
10001798c:	41 5d	popq	%r13
10001798e:	41 5e	popq	%r14
100017990:	41 5f	popq	%r15
100017992:	5d	popq	%rbp
100017993:	c3	retq
100017994:	31 d2	xorl	%edx, %edx
100017996:	31 f6	xorl	%esi, %esi
100017998:	31 c9	xorl	%ecx, %ecx
10001799a:	4c 8b ad 40 ff ff ff	movq	-192(%rbp), %r13
1000179a1:	eb 06	jmp	0x1000179a9
1000179a3:	31 d2	xorl	%edx, %edx
1000179a5:	31 f6	xorl	%esi, %esi
1000179a7:	31 c9	xorl	%ecx, %ecx
1000179a9:	48 8b 1d c8 9e 03 00	movq	237256(%rip), %rbx ## Objc selector ref: objectForKey:
1000179b0:	e9 dc 00 00 00	jmp	0x100017a91
1000179b5:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
1000179bc:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
1000179c3:	e8 6f 41 00 00	callq	0x10001bb37
1000179c8:	48 89 85 50 ff ff ff	movq	%rax, -176(%rbp)
1000179cf:	48 8b 95 58 ff ff ff	movq	-168(%rbp), %rdx
1000179d6:	48 85 d2	testq	%rdx, %rdx
1000179d9:	74 2a	je	0x100017a05
1000179db:	48 89 df	movq	%rbx, %rdi
1000179de:	48 8b 35 93 9e 03 00	movq	237203(%rip), %rsi ## Objc selector ref: objectForKey:
1000179e5:	ff 15 35 52 02 00	callq	*152117(%rip) ## Objc message: -[%rdi objectForKey:]
1000179eb:	48 85 c0	testq	%rax, %rax
1000179ee:	74 19	je	0x100017a09
1000179f0:	48 8b 35 19 9b 03 00	movq	236313(%rip), %rsi ## Objc selector ref: intValue
1000179f7:	48 89 c7	movq	%rax, %rdi
1000179fa:	ff 15 20 52 02 00	callq	*152096(%rip) ## Objc message: -[%rdi intValue]
100017a00:	48 63 f0	movslq	%eax, %rsi
100017a03:	eb 0b	jmp	0x100017a10
100017a05:	31 d2	xorl	%edx, %edx
100017a07:	eb 16	jmp	0x100017a1f
100017a09:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
100017a10:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
100017a17:	e8 1b 41 00 00	callq	0x10001bb37
100017a1c:	48 89 c2	movq	%rax, %rdx
100017a1f:	4d 85 f6	testq	%r14, %r14
100017a22:	74 37	je	0x100017a5b
100017a24:	48 89 95 60 ff ff ff	movq	%rdx, -160(%rbp)
100017a2b:	48 89 df	movq	%rbx, %rdi
100017a2e:	48 8b 1d 43 9e 03 00	movq	237123(%rip), %rbx ## Objc selector ref: objectForKey:
100017a35:	48 89 de	movq	%rbx, %rsi
100017a38:	4c 89 f2	movq	%r14, %rdx
100017a3b:	ff 15 df 51 02 00	callq	*152031(%rip) ## Objc message: -[%rdi objectForKey:]
100017a41:	48 85 c0	testq	%rax, %rax
100017a44:	74 27	je	0x100017a6d
100017a46:	48 8b 35 c3 9a 03 00	movq	236227(%rip), %rsi ## Objc selector ref: intValue
100017a4d:	48 89 c7	movq	%rax, %rdi
100017a50:	ff 15 ca 51 02 00	callq	*152010(%rip) ## Objc message: -[%rdi intValue]
100017a56:	48 63 f0	movslq	%eax, %rsi
100017a59:	eb 19	jmp	0x100017a74
100017a5b:	31 f6	xorl	%esi, %esi
100017a5d:	48 8b 1d 14 9e 03 00	movq	237076(%rip), %rbx ## Objc selector ref: objectForKey:
100017a64:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
100017a6b:	eb 24	jmp	0x100017a91
100017a6d:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
100017a74:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
100017a7b:	e8 b7 40 00 00	callq	0x10001bb37
100017a80:	48 89 c6	movq	%rax, %rsi
100017a83:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
100017a8a:	48 8b 95 60 ff ff ff	movq	-160(%rbp), %rdx
100017a91:	4d 85 ff	testq	%r15, %r15
100017a94:	74 60	je	0x100017af6
100017a96:	48 89 b5 40 ff ff ff	movq	%rsi, -192(%rbp)
100017a9d:	48 89 95 60 ff ff ff	movq	%rdx, -160(%rbp)
100017aa4:	48 89 8d 50 ff ff ff	movq	%rcx, -176(%rbp)
100017aab:	48 8b 3d 66 ab 03 00	movq	240486(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100017ab2:	e8 31 7a 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
100017ab7:	4c 89 ff	movq	%r15, %rdi
100017aba:	48 89 c6	movq	%rax, %rsi
100017abd:	e8 2c 7a 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
100017ac2:	3c 01	cmpb	$1, %al
100017ac4:	75 3c	jne	0x100017b02
100017ac6:	48 8b 05 d3 50 02 00	movq	151763(%rip), %rax ## literal pool symbol address: _kQFilterTargetColorSpace
100017acd:	48 8b 10	movq	(%rax), %rdx
100017ad0:	4c 89 ff	movq	%r15, %rdi
100017ad3:	48 89 de	movq	%rbx, %rsi
100017ad6:	ff 15 44 51 02 00	callq	*151876(%rip) ## Objc message: +[NSDictionary objectForKey:]
100017adc:	48 85 c0	testq	%rax, %rax
100017adf:	74 2d	je	0x100017b0e
100017ae1:	48 8b 35 28 9a 03 00	movq	236072(%rip), %rsi ## Objc selector ref: intValue
100017ae8:	48 89 c7	movq	%rax, %rdi
100017aeb:	ff 15 2f 51 02 00	callq	*151855(%rip) ## Objc message: -[%rdi intValue]
100017af1:	48 63 f0	movslq	%eax, %rsi
100017af4:	eb 1f	jmp	0x100017b15
100017af6:	31 c0	xorl	%eax, %eax
100017af8:	31 db	xorl	%ebx, %ebx
100017afa:	45 31 f6	xorl	%r14d, %r14d
100017afd:	e9 d0 00 00 00	jmp	0x100017bd2
100017b02:	31 c0	xorl	%eax, %eax
100017b04:	31 db	xorl	%ebx, %ebx
100017b06:	45 31 f6	xorl	%r14d, %r14d
100017b09:	e9 af 00 00 00	jmp	0x100017bbd
100017b0e:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
100017b15:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
100017b1c:	e8 16 40 00 00	callq	0x10001bb37
100017b21:	49 89 c6	movq	%rax, %r14
100017b24:	48 8b 95 58 ff ff ff	movq	-168(%rbp), %rdx
100017b2b:	48 85 d2	testq	%rdx, %rdx
100017b2e:	74 26	je	0x100017b56
100017b30:	4c 89 ff	movq	%r15, %rdi
100017b33:	48 89 de	movq	%rbx, %rsi
100017b36:	ff 15 e4 50 02 00	callq	*151780(%rip) ## Objc message: -[%rdi intValue]
100017b3c:	48 85 c0	testq	%rax, %rax
100017b3f:	74 19	je	0x100017b5a
100017b41:	48 8b 35 c8 99 03 00	movq	235976(%rip), %rsi ## Objc selector ref: intValue
100017b48:	48 89 c7	movq	%rax, %rdi
100017b4b:	ff 15 cf 50 02 00	callq	*151759(%rip) ## Objc message: -[%rdi intValue]
100017b51:	48 63 f0	movslq	%eax, %rsi
100017b54:	eb 0b	jmp	0x100017b61
100017b56:	31 db	xorl	%ebx, %ebx
100017b58:	eb 16	jmp	0x100017b70
100017b5a:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
100017b61:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
100017b68:	e8 ca 3f 00 00	callq	0x10001bb37
100017b6d:	48 89 c3	movq	%rax, %rbx
100017b70:	48 8b 95 38 ff ff ff	movq	-200(%rbp), %rdx
100017b77:	48 85 d2	testq	%rdx, %rdx
100017b7a:	74 2a	je	0x100017ba6
100017b7c:	4c 89 ff	movq	%r15, %rdi
100017b7f:	48 8b 35 f2 9c 03 00	movq	236786(%rip), %rsi ## Objc selector ref: objectForKey:
100017b86:	ff 15 94 50 02 00	callq	*151700(%rip) ## Objc message: -[%rdi objectForKey:]
100017b8c:	48 85 c0	testq	%rax, %rax
100017b8f:	74 19	je	0x100017baa
100017b91:	48 8b 35 78 99 03 00	movq	235896(%rip), %rsi ## Objc selector ref: intValue
100017b98:	48 89 c7	movq	%rax, %rdi
100017b9b:	ff 15 7f 50 02 00	callq	*151679(%rip) ## Objc message: -[%rdi intValue]
100017ba1:	48 63 f0	movslq	%eax, %rsi
100017ba4:	eb 0b	jmp	0x100017bb1
100017ba6:	31 c0	xorl	%eax, %eax
100017ba8:	eb 13	jmp	0x100017bbd
100017baa:	48 c7 c6 ff ff ff ff	movq	$-1, %rsi
100017bb1:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
100017bb8:	e8 7a 3f 00 00	callq	0x10001bb37
100017bbd:	48 8b 8d 50 ff ff ff	movq	-176(%rbp), %rcx
100017bc4:	48 8b 95 60 ff ff ff	movq	-160(%rbp), %rdx
100017bcb:	48 8b b5 40 ff ff ff	movq	-192(%rbp), %rsi
100017bd2:	48 85 c9	testq	%rcx, %rcx
100017bd5:	4c 0f 45 f1	cmovneq	%rcx, %r14
100017bd9:	4d 85 f6	testq	%r14, %r14
100017bdc:	4c 0f 44 f2	cmoveq	%rdx, %r14
100017be0:	4d 85 f6	testq	%r14, %r14
100017be3:	4c 0f 44 f3	cmoveq	%rbx, %r14
100017be7:	4d 85 f6	testq	%r14, %r14
100017bea:	4c 0f 44 f6	cmoveq	%rsi, %r14
100017bee:	4d 85 f6	testq	%r14, %r14
100017bf1:	4c 0f 44 f0	cmoveq	%rax, %r14
100017bf5:	4d 85 f6	testq	%r14, %r14
100017bf8:	4c 0f 44 b5 68 ff ff ff	cmoveq	-152(%rbp), %r14
100017c00:	e9 dc f6 ff ff	jmp	0x1000172e1
100017c05:	48 89 df	movq	%rbx, %rdi
100017c08:	e8 ed 72 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100017c0d:	49 89 c4	movq	%rax, %r12
100017c10:	e8 f1 72 01 00	callq	0x10002ef06 ## symbol stub for: _CFNumberGetTypeID
100017c15:	ba 00 00 00 00	movl	$0, %edx
100017c1a:	49 39 c4	cmpq	%rax, %r12
100017c1d:	75 12	jne	0x100017c31
100017c1f:	48 8b 35 ea 98 03 00	movq	235754(%rip), %rsi ## Objc selector ref: intValue
100017c26:	48 89 df	movq	%rbx, %rdi
100017c29:	ff 15 f1 4f 02 00	callq	*151537(%rip) ## Objc message: -[%rdi intValue]
100017c2f:	89 c2	movl	%eax, %edx
100017c31:	0f 57 c0	xorps	%xmm0, %xmm0
100017c34:	f3 0f 10 9d 20 ff ff ff	movss	-224(%rbp), %xmm3
100017c3c:	0f 2e d8	ucomiss	%xmm0, %xmm3
100017c3f:	4c 8b bd 68 ff ff ff	movq	-152(%rbp), %r15
100017c46:	48 8b 9d 58 ff ff ff	movq	-168(%rbp), %rbx
100017c4d:	75 02	jne	0x100017c51
100017c4f:	7b 16	jnp	0x100017c67
100017c51:	48 8b 8d 38 ff ff ff	movq	-200(%rbp), %rcx
100017c58:	48 85 c9	testq	%rcx, %rcx
100017c5b:	78 19	js	0x100017c76
100017c5d:	0f 57 c0	xorps	%xmm0, %xmm0
100017c60:	f3 48 0f 2a c1	cvtsi2ss	%rcx, %xmm0
100017c65:	eb 27	jmp	0x100017c8e
100017c67:	c7 85 34 ff ff ff 00 00 00 00	movl	$0, -204(%rbp)
100017c71:	e9 b1 f9 ff ff	jmp	0x100017627
100017c76:	48 89 c8	movq	%rcx, %rax
100017c79:	48 d1 e8	shrq	%rax
100017c7c:	83 e1 01	andl	$1, %ecx
100017c7f:	48 09 c1	orq	%rax, %rcx
100017c82:	0f 57 c0	xorps	%xmm0, %xmm0
100017c85:	f3 48 0f 2a c1	cvtsi2ss	%rcx, %xmm0
100017c8a:	f3 0f 58 c0	addss	%xmm0, %xmm0
100017c8e:	f3 0f 59 c3	mulss	%xmm3, %xmm0
100017c92:	f3 0f 5a d0	cvtss2sd	%xmm0, %xmm2
100017c96:	f2 0f 10 05 82 03 02 00	movsd	131970(%rip), %xmm0
100017c9e:	f2 0f 58 d0	addsd	%xmm0, %xmm2
100017ca2:	f2 48 0f 2c ca	cvttsd2si	%xmm2, %rcx
100017ca7:	48 89 8d 38 ff ff ff	movq	%rcx, -200(%rbp)
100017cae:	48 c1 f9 3f	sarq	$63, %rcx
100017cb2:	f2 0f 10 0d 76 14 02 00	movsd	136310(%rip), %xmm1
100017cba:	f2 0f 5c d1	subsd	%xmm1, %xmm2
100017cbe:	f2 48 0f 2c c2	cvttsd2si	%xmm2, %rax
100017cc3:	48 21 c8	andq	%rcx, %rax
100017cc6:	48 85 db	testq	%rbx, %rbx
100017cc9:	89 95 34 ff ff ff	movl	%edx, -204(%rbp)
100017ccf:	78 0a	js	0x100017cdb
100017cd1:	0f 57 d2	xorps	%xmm2, %xmm2
100017cd4:	f3 48 0f 2a d3	cvtsi2ss	%rbx, %xmm2
100017cd9:	eb 18	jmp	0x100017cf3
100017cdb:	48 89 d9	movq	%rbx, %rcx
100017cde:	48 d1 e9	shrq	%rcx
100017ce1:	83 e3 01	andl	$1, %ebx
100017ce4:	48 09 cb	orq	%rcx, %rbx
100017ce7:	0f 57 d2	xorps	%xmm2, %xmm2
100017cea:	f3 48 0f 2a d3	cvtsi2ss	%rbx, %xmm2
100017cef:	f3 0f 58 d2	addss	%xmm2, %xmm2
100017cf3:	48 09 85 38 ff ff ff	orq	%rax, -200(%rbp)
100017cfa:	f3 0f 59 da	mulss	%xmm2, %xmm3
100017cfe:	0f 57 d2	xorps	%xmm2, %xmm2
100017d01:	f3 0f 5a d3	cvtss2sd	%xmm3, %xmm2
100017d05:	f2 0f 58 d0	addsd	%xmm0, %xmm2
100017d09:	f2 48 0f 2c c2	cvttsd2si	%xmm2, %rax
100017d0e:	48 89 c1	movq	%rax, %rcx
100017d11:	48 c1 f9 3f	sarq	$63, %rcx
100017d15:	f2 0f 5c d1	subsd	%xmm1, %xmm2
100017d19:	f2 48 0f 2c da	cvttsd2si	%xmm2, %rbx
100017d1e:	48 21 cb	andq	%rcx, %rbx
100017d21:	48 09 c3	orq	%rax, %rbx
100017d24:	e9 fe f8 ff ff	jmp	0x100017627
100017d29:	e8 82 76 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100017d2e:	55	pushq	%rbp
100017d2f:	48 89 e5	movq	%rsp, %rbp
100017d32:	41 57	pushq	%r15
100017d34:	41 56	pushq	%r14
100017d36:	41 55	pushq	%r13
100017d38:	41 54	pushq	%r12
100017d3a:	53	pushq	%rbx
100017d3b:	48 83 ec 68	subq	$104, %rsp
100017d3f:	49 89 cf	movq	%rcx, %r15
100017d42:	49 89 d4	movq	%rdx, %r12
100017d45:	48 89 d7	movq	%rdx, %rdi
100017d48:	e8 9b 74 01 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
100017d4d:	49 89 c5	movq	%rax, %r13
100017d50:	45 85 ed	testl	%r13d, %r13d
100017d53:	0f 84 37 01 00 00	je	0x100017e90
100017d59:	48 8d 05 44 01 00 00	leaq	324(%rip), %rax
100017d60:	48 89 45 b8	movq	%rax, -72(%rbp)
100017d64:	48 8d 05 51 01 00 00	leaq	337(%rip), %rax
100017d6b:	48 89 45 c0	movq	%rax, -64(%rbp)
100017d6f:	48 8b 05 fa 4b 02 00	movq	150522(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100017d76:	48 8b 38	movq	(%rax), %rdi
100017d79:	31 db	xorl	%ebx, %ebx
100017d7b:	31 f6	xorl	%esi, %esi
100017d7d:	e8 0c 71 01 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
100017d82:	48 85 c0	testq	%rax, %rax
100017d85:	0f 84 07 01 00 00	je	0x100017e92
100017d8b:	48 89 45 d0	movq	%rax, -48(%rbp)
100017d8f:	48 8b 7d d0	movq	-48(%rbp), %rdi
100017d93:	e8 80 71 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100017d98:	48 8d 75 b8	leaq	-72(%rbp), %rsi
100017d9c:	48 89 c7	movq	%rax, %rdi
100017d9f:	e8 3c 73 01 00	callq	0x10002f0e0 ## symbol stub for: _CGDataConsumerCreate
100017da4:	31 db	xorl	%ebx, %ebx
100017da6:	48 89 45 c8	movq	%rax, -56(%rbp)
100017daa:	48 89 c7	movq	%rax, %rdi
100017dad:	31 f6	xorl	%esi, %esi
100017daf:	31 d2	xorl	%edx, %edx
100017db1:	e8 02 74 01 00	callq	0x10002f1b8 ## symbol stub for: _CGPDFContextCreate
100017db6:	48 85 c0	testq	%rax, %rax
100017db9:	0f 84 d3 00 00 00	je	0x100017e92
100017dbf:	49 89 c6	movq	%rax, %r14
100017dc2:	48 8b 35 37 8f 03 00	movq	233271(%rip), %rsi ## Objc selector ref: applyToContext:
100017dc9:	4c 89 ff	movq	%r15, %rdi
100017dcc:	48 89 c2	movq	%rax, %rdx
100017dcf:	ff 15 4b 4e 02 00	callq	*151115(%rip) ## Objc message: -[%rdi applyToContext:]
100017dd5:	45 85 ed	testl	%r13d, %r13d
100017dd8:	7e 71	jle	0x100017e4b
100017dda:	45 89 ed	movl	%r13d, %r13d
100017ddd:	49 f7 dd	negq	%r13
100017de0:	bb 01 00 00 00	movl	$1, %ebx
100017de5:	4c 89 e7	movq	%r12, %rdi
100017de8:	48 89 de	movq	%rbx, %rsi
100017deb:	e8 fe 73 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
100017df0:	48 85 c0	testq	%rax, %rax
100017df3:	74 46	je	0x100017e3b
100017df5:	49 89 c7	movq	%rax, %r15
100017df8:	48 8d bd 70 ff ff ff	leaq	-144(%rbp), %rdi
100017dff:	48 89 c6	movq	%rax, %rsi
100017e02:	31 d2	xorl	%edx, %edx
100017e04:	e8 fd 73 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
100017e09:	0f 10 85 70 ff ff ff	movups	-144(%rbp), %xmm0
100017e10:	0f 10 4d 80	movups	-128(%rbp), %xmm1
100017e14:	0f 29 4d a0	movaps	%xmm1, -96(%rbp)
100017e18:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
100017e1c:	4c 89 f7	movq	%r14, %rdi
100017e1f:	48 8d 75 90	leaq	-112(%rbp), %rsi
100017e23:	e8 40 72 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
100017e28:	4c 89 f7	movq	%r14, %rdi
100017e2b:	4c 89 fe	movq	%r15, %rsi
100017e2e:	e8 53 72 01 00	callq	0x10002f086 ## symbol stub for: _CGContextDrawPDFPage
100017e33:	4c 89 f7	movq	%r14, %rdi
100017e36:	e8 57 72 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
100017e3b:	4a 8d 04 2b	leaq	(%rbx,%r13), %rax
100017e3f:	48 ff c0	incq	%rax
100017e42:	48 ff c3	incq	%rbx
100017e45:	48 83 f8 01	cmpq	$1, %rax
100017e49:	75 9a	jne	0x100017de5
100017e4b:	4c 89 f7	movq	%r14, %rdi
100017e4e:	e8 5f 73 01 00	callq	0x10002f1b2 ## symbol stub for: _CGPDFContextClose
100017e53:	4c 89 f7	movq	%r14, %rdi
100017e56:	e8 5b 72 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
100017e5b:	48 8b 7d c8	movq	-56(%rbp), %rdi
100017e5f:	e8 82 72 01 00	callq	0x10002f0e6 ## symbol stub for: _CGDataConsumerRelease
100017e64:	48 8b 5d d0	movq	-48(%rbp), %rbx
100017e68:	48 89 df	movq	%rbx, %rdi
100017e6b:	e8 82 72 01 00	callq	0x10002f0f2 ## symbol stub for: _CGDataProviderCreateWithCFData
100017e70:	49 89 c6	movq	%rax, %r14
100017e73:	48 89 df	movq	%rbx, %rdi
100017e76:	e8 97 70 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100017e7b:	4c 89 f7	movq	%r14, %rdi
100017e7e:	e8 53 73 01 00	callq	0x10002f1d6 ## symbol stub for: _CGPDFDocumentCreateWithProvider
100017e83:	48 89 c3	movq	%rax, %rbx
100017e86:	4c 89 f7	movq	%r14, %rdi
100017e89:	e8 70 72 01 00	callq	0x10002f0fe ## symbol stub for: _CGDataProviderRelease
100017e8e:	eb 02	jmp	0x100017e92
100017e90:	31 db	xorl	%ebx, %ebx
100017e92:	48 89 d8	movq	%rbx, %rax
100017e95:	48 83 c4 68	addq	$104, %rsp
100017e99:	5b	popq	%rbx
100017e9a:	41 5c	popq	%r12
100017e9c:	41 5d	popq	%r13
100017e9e:	41 5e	popq	%r14
100017ea0:	41 5f	popq	%r15
100017ea2:	5d	popq	%rbp
100017ea3:	c3	retq
100017ea4:	55	pushq	%rbp
100017ea5:	48 89 e5	movq	%rsp, %rbp
100017ea8:	53	pushq	%rbx
100017ea9:	50	pushq	%rax
100017eaa:	48 89 d3	movq	%rdx, %rbx
100017ead:	e8 d6 6f 01 00	callq	0x10002ee88 ## symbol stub for: _CFDataAppendBytes
100017eb2:	48 89 d8	movq	%rbx, %rax
100017eb5:	48 83 c4 08	addq	$8, %rsp
100017eb9:	5b	popq	%rbx
100017eba:	5d	popq	%rbp
100017ebb:	c3	retq
100017ebc:	55	pushq	%rbp
100017ebd:	48 89 e5	movq	%rsp, %rbp
100017ec0:	5d	popq	%rbp
100017ec1:	e9 4c 70 01 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100017ec6:	55	pushq	%rbp
100017ec7:	48 89 e5	movq	%rsp, %rbp
100017eca:	41 56	pushq	%r14
100017ecc:	53	pushq	%rbx
100017ecd:	49 89 d6	movq	%rdx, %r14
100017ed0:	48 8b 05 99 4a 02 00	movq	150169(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100017ed7:	48 8b 38	movq	(%rax), %rdi
100017eda:	48 8b 15 a7 4a 02 00	movq	150183(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
100017ee1:	31 f6	xorl	%esi, %esi
100017ee3:	e8 5e 6f 01 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
100017ee8:	48 89 c3	movq	%rax, %rbx
100017eeb:	4d 85 f6	testq	%r14, %r14
100017eee:	74 10	je	0x100017f00
100017ef0:	48 85 db	testq	%rbx, %rbx
100017ef3:	74 0b	je	0x100017f00
100017ef5:	48 89 df	movq	%rbx, %rdi
100017ef8:	4c 89 f6	movq	%r14, %rsi
100017efb:	e8 34 6f 01 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
100017f00:	48 85 db	testq	%rbx, %rbx
100017f03:	74 15	je	0x100017f1a
100017f05:	48 89 df	movq	%rbx, %rdi
100017f08:	e8 45 6f 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100017f0d:	48 85 c0	testq	%rax, %rax
100017f10:	75 0a	jne	0x100017f1c
100017f12:	48 89 df	movq	%rbx, %rdi
100017f15:	e8 f8 6f 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100017f1a:	31 db	xorl	%ebx, %ebx
100017f1c:	48 89 d8	movq	%rbx, %rax
100017f1f:	5b	popq	%rbx
100017f20:	41 5e	popq	%r14
100017f22:	5d	popq	%rbp
100017f23:	c3	retq
100017f24:	55	pushq	%rbp
100017f25:	48 89 e5	movq	%rsp, %rbp
100017f28:	41 57	pushq	%r15
100017f2a:	41 56	pushq	%r14
100017f2c:	41 55	pushq	%r13
100017f2e:	41 54	pushq	%r12
100017f30:	53	pushq	%rbx
100017f31:	48 83 ec 38	subq	$56, %rsp
100017f35:	4c 89 45 b8	movq	%r8, -72(%rbp)
100017f39:	48 89 4d c0	movq	%rcx, -64(%rbp)
100017f3d:	48 89 55 c8	movq	%rdx, -56(%rbp)
100017f41:	48 89 fb	movq	%rdi, %rbx
100017f44:	48 8b 35 fd 92 03 00	movq	234237(%rip), %rsi ## Objc selector ref: filterDocumentType
100017f4b:	ff 15 cf 4c 02 00	callq	*150735(%rip) ## Objc message: -[%rdi filterDocumentType]
100017f51:	83 f8 01	cmpl	$1, %eax
100017f54:	0f 85 97 00 00 00	jne	0x100017ff1
100017f5a:	4c 8b 3d e7 ae 03 00	movq	241383(%rip), %r15
100017f61:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100017f65:	48 8b 35 9c 9c 03 00	movq	236700(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100017f6c:	4c 8b 35 ad 4c 02 00	movq	150701(%rip), %r14 ## Objc message: -[%rdi selectItemAtIndex:]
100017f73:	31 d2	xorl	%edx, %edx
100017f75:	41 ff d6	callq	*%r14
100017f78:	48 8b 05 b9 46 02 00	movq	149177(%rip), %rax ## literal pool symbol address: _NSApp
100017f7f:	48 8b 00	movq	(%rax), %rax
100017f82:	48 89 45 d0	movq	%rax, -48(%rbp)
100017f86:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100017f8a:	4c 8b 25 27 96 03 00	movq	235047(%rip), %r12 ## Objc selector ref: itemAtIndex:
100017f91:	4c 89 e6	movq	%r12, %rsi
100017f94:	31 d2	xorl	%edx, %edx
100017f96:	41 ff d6	callq	*%r14
100017f99:	48 8b 35 78 8c 03 00	movq	232568(%rip), %rsi ## Objc selector ref: action
100017fa0:	48 89 c7	movq	%rax, %rdi
100017fa3:	41 ff d6	callq	*%r14
100017fa6:	49 89 c5	movq	%rax, %r13
100017fa9:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100017fad:	4c 89 e6	movq	%r12, %rsi
100017fb0:	31 d2	xorl	%edx, %edx
100017fb2:	41 ff d6	callq	*%r14
100017fb5:	48 8b 35 ec a3 03 00	movq	238572(%rip), %rsi ## Objc selector ref: target
100017fbc:	48 89 c7	movq	%rax, %rdi
100017fbf:	41 ff d6	callq	*%r14
100017fc2:	49 89 c4	movq	%rax, %r12
100017fc5:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100017fc9:	48 8b 35 e8 95 03 00	movq	234984(%rip), %rsi ## Objc selector ref: itemAtIndex:
100017fd0:	31 d2	xorl	%edx, %edx
100017fd2:	41 ff d6	callq	*%r14
100017fd5:	48 8b 35 74 9c 03 00	movq	236660(%rip), %rsi ## Objc selector ref: sendAction:to:from:
100017fdc:	48 8b 7d d0	movq	-48(%rbp), %rdi
100017fe0:	4c 89 ea	movq	%r13, %rdx
100017fe3:	4c 89 e1	movq	%r12, %rcx
100017fe6:	49 89 c0	movq	%rax, %r8
100017fe9:	41 ff d6	callq	*%r14
100017fec:	e9 ac 01 00 00	jmp	0x10001819d
100017ff1:	48 8b 05 40 46 02 00	movq	149056(%rip), %rax ## literal pool symbol address: _NSApp
100017ff8:	48 8b 00	movq	(%rax), %rax
100017ffb:	48 89 45 d0	movq	%rax, -48(%rbp)
100017fff:	48 8b 05 5a ae 03 00	movq	241242(%rip), %rax
100018006:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001800a:	49 89 c7	movq	%rax, %r15
10001800d:	4c 8b 25 a4 95 03 00	movq	234916(%rip), %r12 ## Objc selector ref: itemAtIndex:
100018014:	4c 8b 2d 05 4c 02 00	movq	150533(%rip), %r13 ## Objc message: -[%rdi itemAtIndex:]
10001801b:	ba 01 00 00 00	movl	$1, %edx
100018020:	4c 89 e6	movq	%r12, %rsi
100018023:	41 ff d5	callq	*%r13
100018026:	48 8b 35 eb 8b 03 00	movq	232427(%rip), %rsi ## Objc selector ref: action
10001802d:	48 89 c7	movq	%rax, %rdi
100018030:	41 ff d5	callq	*%r13
100018033:	49 89 c6	movq	%rax, %r14
100018036:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001803a:	ba 01 00 00 00	movl	$1, %edx
10001803f:	4c 89 e6	movq	%r12, %rsi
100018042:	4d 89 e7	movq	%r12, %r15
100018045:	41 ff d5	callq	*%r13
100018048:	48 8b 35 59 a3 03 00	movq	238425(%rip), %rsi ## Objc selector ref: target
10001804f:	48 89 c7	movq	%rax, %rdi
100018052:	41 ff d5	callq	*%r13
100018055:	49 89 c4	movq	%rax, %r12
100018058:	48 8b 05 01 ae 03 00	movq	241153(%rip), %rax
10001805f:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100018063:	ba 01 00 00 00	movl	$1, %edx
100018068:	4c 89 fe	movq	%r15, %rsi
10001806b:	41 ff d5	callq	*%r13
10001806e:	48 8b 35 db 9b 03 00	movq	236507(%rip), %rsi ## Objc selector ref: sendAction:to:from:
100018075:	48 8b 7d d0	movq	-48(%rbp), %rdi
100018079:	4c 89 f2	movq	%r14, %rdx
10001807c:	4c 89 e1	movq	%r12, %rcx
10001807f:	49 89 c0	movq	%rax, %r8
100018082:	41 ff d5	callq	*%r13
100018085:	48 8b 05 cc ad 03 00	movq	241100(%rip), %rax
10001808c:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100018090:	49 89 c6	movq	%rax, %r14
100018093:	48 8b 35 76 9b 03 00	movq	236406(%rip), %rsi ## Objc selector ref: selectItemWithTag:
10001809a:	31 d2	xorl	%edx, %edx
10001809c:	41 ff d5	callq	*%r13
10001809f:	48 8b 05 92 45 02 00	movq	148882(%rip), %rax ## literal pool symbol address: _NSApp
1000180a6:	48 8b 00	movq	(%rax), %rax
1000180a9:	48 89 45 d0	movq	%rax, -48(%rbp)
1000180ad:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000180b1:	4c 89 fe	movq	%r15, %rsi
1000180b4:	31 d2	xorl	%edx, %edx
1000180b6:	41 ff d5	callq	*%r13
1000180b9:	48 89 c7	movq	%rax, %rdi
1000180bc:	48 8b 35 55 8b 03 00	movq	232277(%rip), %rsi ## Objc selector ref: action
1000180c3:	41 ff d5	callq	*%r13
1000180c6:	49 89 c4	movq	%rax, %r12
1000180c9:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000180cd:	4c 89 fe	movq	%r15, %rsi
1000180d0:	4d 89 fe	movq	%r15, %r14
1000180d3:	31 d2	xorl	%edx, %edx
1000180d5:	41 ff d5	callq	*%r13
1000180d8:	48 89 c7	movq	%rax, %rdi
1000180db:	48 8b 35 c6 a2 03 00	movq	238278(%rip), %rsi ## Objc selector ref: target
1000180e2:	41 ff d5	callq	*%r13
1000180e5:	49 89 c7	movq	%rax, %r15
1000180e8:	48 8b 05 69 ad 03 00	movq	241001(%rip), %rax
1000180ef:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000180f3:	4c 89 f6	movq	%r14, %rsi
1000180f6:	31 d2	xorl	%edx, %edx
1000180f8:	41 ff d5	callq	*%r13
1000180fb:	48 8b 7d d0	movq	-48(%rbp), %rdi
1000180ff:	48 8b 35 4a 9b 03 00	movq	236362(%rip), %rsi ## Objc selector ref: sendAction:to:from:
100018106:	4c 89 e2	movq	%r12, %rdx
100018109:	4c 89 f9	movq	%r15, %rcx
10001810c:	49 89 c0	movq	%rax, %r8
10001810f:	41 ff d5	callq	*%r13
100018112:	4c 8b 35 c7 ac 03 00	movq	240839(%rip), %r14
100018119:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001811d:	48 8b 35 ec 9a 03 00	movq	236268(%rip), %rsi ## Objc selector ref: selectItemWithTag:
100018124:	31 d2	xorl	%edx, %edx
100018126:	41 ff d5	callq	*%r13
100018129:	48 8b 05 08 45 02 00	movq	148744(%rip), %rax ## literal pool symbol address: _NSApp
100018130:	48 8b 00	movq	(%rax), %rax
100018133:	48 89 45 d0	movq	%rax, -48(%rbp)
100018137:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001813b:	4c 8b 25 76 94 03 00	movq	234614(%rip), %r12 ## Objc selector ref: itemAtIndex:
100018142:	4c 89 e6	movq	%r12, %rsi
100018145:	31 d2	xorl	%edx, %edx
100018147:	41 ff d5	callq	*%r13
10001814a:	48 89 c7	movq	%rax, %rdi
10001814d:	48 8b 35 c4 8a 03 00	movq	232132(%rip), %rsi ## Objc selector ref: action
100018154:	41 ff d5	callq	*%r13
100018157:	49 89 c7	movq	%rax, %r15
10001815a:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001815e:	4c 89 e6	movq	%r12, %rsi
100018161:	31 d2	xorl	%edx, %edx
100018163:	41 ff d5	callq	*%r13
100018166:	48 89 c7	movq	%rax, %rdi
100018169:	48 8b 35 38 a2 03 00	movq	238136(%rip), %rsi ## Objc selector ref: target
100018170:	41 ff d5	callq	*%r13
100018173:	49 89 c4	movq	%rax, %r12
100018176:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001817a:	48 8b 35 37 94 03 00	movq	234551(%rip), %rsi ## Objc selector ref: itemAtIndex:
100018181:	31 d2	xorl	%edx, %edx
100018183:	41 ff d5	callq	*%r13
100018186:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001818a:	48 8b 35 bf 9a 03 00	movq	236223(%rip), %rsi ## Objc selector ref: sendAction:to:from:
100018191:	4c 89 fa	movq	%r15, %rdx
100018194:	4c 89 e1	movq	%r12, %rcx
100018197:	49 89 c0	movq	%rax, %r8
10001819a:	41 ff d5	callq	*%r13
10001819d:	48 8d 7d a8	leaq	-88(%rbp), %rdi
1000181a1:	48 89 1f	movq	%rbx, (%rdi)
1000181a4:	48 8b 05 55 a6 03 00	movq	239189(%rip), %rax ## Objc class ref: FilterDoc
1000181ab:	48 89 47 08	movq	%rax, 8(%rdi)
1000181af:	48 8b 35 a2 99 03 00	movq	235938(%rip), %rsi ## Objc selector ref: revertToContentsOfURL:ofType:error:
1000181b6:	48 8b 55 c8	movq	-56(%rbp), %rdx
1000181ba:	48 8b 4d c0	movq	-64(%rbp), %rcx
1000181be:	4c 8b 45 b8	movq	-72(%rbp), %r8
1000181c2:	e8 15 73 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] revertToContentsOfURL:ofType:error:]
1000181c7:	0f be c0	movsbl	%al, %eax
1000181ca:	48 83 c4 38	addq	$56, %rsp
1000181ce:	5b	popq	%rbx
1000181cf:	41 5c	popq	%r12
1000181d1:	41 5d	popq	%r13
1000181d3:	41 5e	popq	%r14
1000181d5:	41 5f	popq	%r15
1000181d7:	5d	popq	%rbp
1000181d8:	c3	retq
1000181d9:	55	pushq	%rbp
1000181da:	48 89 e5	movq	%rsp, %rbp
1000181dd:	53	pushq	%rbx
1000181de:	48 83 ec 78	subq	$120, %rsp
1000181e2:	48 89 fb	movq	%rdi, %rbx
1000181e5:	0f 28 05 84 10 02 00	movaps	135300(%rip), %xmm0
1000181ec:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
1000181f0:	0f 28 05 89 10 02 00	movaps	135305(%rip), %xmm0
1000181f7:	0f 29 45 e0	movaps	%xmm0, -32(%rbp)
1000181fb:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
1000181ff:	0f 28 4d e0	movaps	-32(%rbp), %xmm1
100018203:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018208:	0f 11 04 24	movups	%xmm0, (%rsp)
10001820c:	e8 25 70 01 00	callq	0x10002f236 ## symbol stub for: _CGRectGetMinX
100018211:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
100018215:	0f 28 4d e0	movaps	-32(%rbp), %xmm1
100018219:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001821e:	0f 11 04 24	movups	%xmm0, (%rsp)
100018222:	e8 15 70 01 00	callq	0x10002f23c ## symbol stub for: _CGRectGetMinY
100018227:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
10001822b:	0f 28 4d e0	movaps	-32(%rbp), %xmm1
10001822f:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018234:	0f 11 04 24	movups	%xmm0, (%rsp)
100018238:	e8 05 70 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
10001823d:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
100018241:	66 0f 28 45 d0	movapd	-48(%rbp), %xmm0
100018246:	0f 28 4d e0	movaps	-32(%rbp), %xmm1
10001824a:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001824f:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
100018254:	e8 d7 6f 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
100018259:	66 0f 28 4d b0	movapd	-80(%rbp), %xmm1
10001825e:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
100018262:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
100018266:	66 0f 29 45 b0	movapd	%xmm0, -80(%rbp)
10001826b:	0f 28 45 10	movaps	16(%rbp), %xmm0
10001826f:	0f 28 4d 20	movaps	32(%rbp), %xmm1
100018273:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018278:	0f 11 04 24	movups	%xmm0, (%rsp)
10001827c:	e8 b5 6f 01 00	callq	0x10002f236 ## symbol stub for: _CGRectGetMinX
100018281:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100018285:	66 0f 28 45 10	movapd	16(%rbp), %xmm0
10001828a:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10001828e:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018293:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
100018298:	e8 9f 6f 01 00	callq	0x10002f23c ## symbol stub for: _CGRectGetMinY
10001829d:	66 0f 28 4d c0	movapd	-64(%rbp), %xmm1
1000182a2:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
1000182a6:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
1000182aa:	66 0f 29 45 c0	movapd	%xmm0, -64(%rbp)
1000182af:	0f 28 45 10	movaps	16(%rbp), %xmm0
1000182b3:	0f 28 4d 20	movaps	32(%rbp), %xmm1
1000182b7:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000182bc:	0f 11 04 24	movups	%xmm0, (%rsp)
1000182c0:	e8 7d 6f 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
1000182c5:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
1000182c9:	66 0f 28 45 10	movapd	16(%rbp), %xmm0
1000182ce:	0f 28 4d 20	movaps	32(%rbp), %xmm1
1000182d2:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
1000182d7:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
1000182dc:	e8 4f 6f 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
1000182e1:	66 0f 28 4d a0	movapd	-96(%rbp), %xmm1
1000182e6:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
1000182ea:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
1000182ee:	0f 28 5d b0	movaps	-80(%rbp), %xmm3
1000182f2:	0f 28 cb	movaps	%xmm3, %xmm1
1000182f5:	0f 5e c8	divps	%xmm0, %xmm1
1000182f8:	0f 28 15 91 0f 02 00	movaps	135057(%rip), %xmm2
1000182ff:	0f 5d d1	minps	%xmm1, %xmm2
100018302:	f3 0f 16 ca	movshdup	%xmm2, %xmm1
100018306:	f3 0f 5d d1	minss	%xmm1, %xmm2
10001830a:	f3 0f 12 ca	movsldup	%xmm2, %xmm1
10001830e:	0f 59 c1	mulps	%xmm1, %xmm0
100018311:	0f 5c d8	subps	%xmm0, %xmm3
100018314:	0f 59 1d 55 0e 02 00	mulps	134741(%rip), %xmm3
10001831b:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10001831f:	0f 59 c1	mulps	%xmm1, %xmm0
100018322:	0f 5c d8	subps	%xmm0, %xmm3
100018325:	0f 5a c3	cvtps2pd	%xmm3, %xmm0
100018328:	0f 57 c9	xorps	%xmm1, %xmm1
10001832b:	f3 0f 5a ca	cvtss2sd	%xmm2, %xmm1
10001832f:	f2 0f 12 55 18	movddup	24(%rbp), %xmm2
100018334:	0f 57 db	xorps	%xmm3, %xmm3
100018337:	0f 16 d9	movlhps	%xmm1, %xmm3
10001833a:	66 0f 59 d3	mulpd	%xmm3, %xmm2
10001833e:	0f 28 e1	movaps	%xmm1, %xmm4
100018341:	0f 16 65 10	movhps	16(%rbp), %xmm4
100018345:	f2 0f 10 6d 10	movsd	16(%rbp), %xmm5
10001834a:	66 0f 59 ec	mulpd	%xmm4, %xmm5
10001834e:	66 0f 58 ea	addpd	%xmm2, %xmm5
100018352:	66 0f 58 e8	addpd	%xmm0, %xmm5
100018356:	66 0f 11 2b	movupd	%xmm5, (%rbx)
10001835a:	f2 0f 12 45 28	movddup	40(%rbp), %xmm0
10001835f:	66 0f 59 c3	mulpd	%xmm3, %xmm0
100018363:	0f 16 4d 20	movhps	32(%rbp), %xmm1
100018367:	f2 0f 10 55 20	movsd	32(%rbp), %xmm2
10001836c:	66 0f 59 d1	mulpd	%xmm1, %xmm2
100018370:	66 0f 58 d0	addpd	%xmm0, %xmm2
100018374:	66 0f 11 53 10	movupd	%xmm2, 16(%rbx)
100018379:	48 89 d8	movq	%rbx, %rax
10001837c:	48 83 c4 78	addq	$120, %rsp
100018380:	5b	popq	%rbx
100018381:	5d	popq	%rbp
100018382:	c3	retq
100018383:	55	pushq	%rbp
100018384:	48 89 e5	movq	%rsp, %rbp
100018387:	41 57	pushq	%r15
100018389:	41 56	pushq	%r14
10001838b:	41 55	pushq	%r13
10001838d:	41 54	pushq	%r12
10001838f:	53	pushq	%rbx
100018390:	48 81 ec 88 00 00 00	subq	$136, %rsp
100018397:	48 85 d2	testq	%rdx, %rdx
10001839a:	0f 84 0e 01 00 00	je	0x1000184ae
1000183a0:	49 89 d4	movq	%rdx, %r12
1000183a3:	49 89 fd	movq	%rdi, %r13
1000183a6:	48 8d 05 f7 fa ff ff	leaq	-1289(%rip), %rax
1000183ad:	48 89 45 b8	movq	%rax, -72(%rbp)
1000183b1:	48 8d 05 04 fb ff ff	leaq	-1276(%rip), %rax
1000183b8:	48 89 45 c0	movq	%rax, -64(%rbp)
1000183bc:	48 8b 05 ad 45 02 00	movq	148909(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
1000183c3:	48 8b 38	movq	(%rax), %rdi
1000183c6:	31 db	xorl	%ebx, %ebx
1000183c8:	31 f6	xorl	%esi, %esi
1000183ca:	e8 bf 6a 01 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
1000183cf:	48 85 c0	testq	%rax, %rax
1000183d2:	0f 84 bb 01 00 00	je	0x100018593
1000183d8:	49 89 c6	movq	%rax, %r14
1000183db:	48 89 c7	movq	%rax, %rdi
1000183de:	e8 35 6b 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
1000183e3:	48 8d 75 b8	leaq	-72(%rbp), %rsi
1000183e7:	48 89 c7	movq	%rax, %rdi
1000183ea:	e8 f1 6c 01 00	callq	0x10002f0e0 ## symbol stub for: _CGDataConsumerCreate
1000183ef:	31 db	xorl	%ebx, %ebx
1000183f1:	48 89 45 c8	movq	%rax, -56(%rbp)
1000183f5:	48 89 c7	movq	%rax, %rdi
1000183f8:	31 f6	xorl	%esi, %esi
1000183fa:	31 d2	xorl	%edx, %edx
1000183fc:	e8 b7 6d 01 00	callq	0x10002f1b8 ## symbol stub for: _CGPDFContextCreate
100018401:	48 85 c0	testq	%rax, %rax
100018404:	0f 84 89 01 00 00	je	0x100018593
10001840a:	49 89 c7	movq	%rax, %r15
10001840d:	4c 89 e7	movq	%r12, %rdi
100018410:	e8 5b 6d 01 00	callq	0x10002f170 ## symbol stub for: _CGImageGetShouldInterpolate
100018415:	0f b6 c0	movzbl	%al, %eax
100018418:	01 c0	addl	%eax, %eax
10001841a:	ff c0	incl	%eax
10001841c:	89 45 d4	movl	%eax, -44(%rbp)
10001841f:	4c 89 e7	movq	%r12, %rdi
100018422:	e8 55 6d 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100018427:	48 89 c3	movq	%rax, %rbx
10001842a:	4c 89 e7	movq	%r12, %rdi
10001842d:	e8 2c 6d 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100018432:	66 48 0f 6e cb	movq	%rbx, %xmm1
100018437:	66 48 0f 6e c0	movq	%rax, %xmm0
10001843c:	66 0f 6c c8	punpcklqdq	%xmm0, %xmm1
100018440:	66 0f ef c0	pxor	%xmm0, %xmm0
100018444:	66 0f 6f d1	movdqa	%xmm1, %xmm2
100018448:	66 0f 3a 0e d0 cc	pblendw	$204, %xmm0, %xmm2
10001844e:	66 0f eb 15 ea 0c 02 00	por	134378(%rip), %xmm2
100018456:	66 0f 73 d1 20	psrlq	$32, %xmm1
10001845b:	66 0f eb 0d ed 0c 02 00	por	134381(%rip), %xmm1
100018463:	66 0f 5c 0d f5 0c 02 00	subpd	134389(%rip), %xmm1
10001846b:	66 0f 58 ca	addpd	%xmm2, %xmm1
10001846f:	66 0f 7f 85 70 ff ff ff	movdqa	%xmm0, -144(%rbp)
100018477:	66 0f 29 4d 80	movapd	%xmm1, -128(%rbp)
10001847c:	4d 85 ed	testq	%r13, %r13
10001847f:	74 34	je	0x1000184b5
100018481:	48 8b 15 10 8f 03 00	movq	233232(%rip), %rdx ## Objc selector ref: imageRectForPDFPage:
100018488:	66 0f 6f 85 70 ff ff ff	movdqa	-144(%rbp), %xmm0
100018490:	66 0f 28 4d 80	movapd	-128(%rbp), %xmm1
100018495:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10001849b:	f3 0f 7f 04 24	movdqu	%xmm0, (%rsp)
1000184a0:	48 8d 7d 90	leaq	-112(%rbp), %rdi
1000184a4:	4c 89 ee	movq	%r13, %rsi
1000184a7:	e8 36 70 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
1000184ac:	eb 11	jmp	0x1000184bf
1000184ae:	31 db	xorl	%ebx, %ebx
1000184b0:	e9 de 00 00 00	jmp	0x100018593
1000184b5:	66 0f 7f 45 a0	movdqa	%xmm0, -96(%rbp)
1000184ba:	66 0f 7f 45 90	movdqa	%xmm0, -112(%rbp)
1000184bf:	0f 28 45 90	movaps	-112(%rbp), %xmm0
1000184c3:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
1000184c7:	4c 8d ad 70 ff ff ff	leaq	-144(%rbp), %r13
1000184ce:	41 0f 29 4d 10	movaps	%xmm1, 16(%r13)
1000184d3:	41 0f 29 45 00	movaps	%xmm0, (%r13)
1000184d8:	4c 89 ff	movq	%r15, %rdi
1000184db:	4c 89 ee	movq	%r13, %rsi
1000184de:	e8 85 6b 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
1000184e3:	4c 89 ff	movq	%r15, %rdi
1000184e6:	e8 d7 6b 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
1000184eb:	f2 0f 10 05 15 fb 01 00	movsd	129813(%rip), %xmm0
1000184f3:	4c 89 ff	movq	%r15, %rdi
1000184f6:	0f 28 c8	movaps	%xmm0, %xmm1
1000184f9:	e8 d6 6b 01 00	callq	0x10002f0d4 ## symbol stub for: _CGContextSetGrayFillColor
1000184fe:	41 0f 28 45 00	movaps	(%r13), %xmm0
100018503:	41 0f 28 4d 10	movaps	16(%r13), %xmm1
100018508:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001850d:	0f 11 04 24	movups	%xmm0, (%rsp)
100018511:	4c 89 ff	movq	%r15, %rdi
100018514:	e8 7f 6b 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
100018519:	4c 89 ff	movq	%r15, %rdi
10001851c:	e8 9b 6b 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
100018521:	4c 89 ff	movq	%r15, %rdi
100018524:	8b 55 d4	movl	-44(%rbp), %edx
100018527:	89 d6	movl	%edx, %esi
100018529:	e8 ac 6b 01 00	callq	0x10002f0da ## symbol stub for: _CGContextSetInterpolationQualityRange
10001852e:	41 0f 28 45 00	movaps	(%r13), %xmm0
100018533:	41 0f 28 4d 10	movaps	16(%r13), %xmm1
100018538:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001853d:	0f 11 04 24	movups	%xmm0, (%rsp)
100018541:	4c 89 ff	movq	%r15, %rdi
100018544:	4c 89 e6	movq	%r12, %rsi
100018547:	e8 34 6b 01 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
10001854c:	4c 89 ff	movq	%r15, %rdi
10001854f:	e8 3e 6b 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
100018554:	4c 89 ff	movq	%r15, %rdi
100018557:	e8 56 6c 01 00	callq	0x10002f1b2 ## symbol stub for: _CGPDFContextClose
10001855c:	4c 89 ff	movq	%r15, %rdi
10001855f:	e8 52 6b 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
100018564:	48 8b 7d c8	movq	-56(%rbp), %rdi
100018568:	e8 79 6b 01 00	callq	0x10002f0e6 ## symbol stub for: _CGDataConsumerRelease
10001856d:	4c 89 f7	movq	%r14, %rdi
100018570:	e8 7d 6b 01 00	callq	0x10002f0f2 ## symbol stub for: _CGDataProviderCreateWithCFData
100018575:	49 89 c7	movq	%rax, %r15
100018578:	4c 89 f7	movq	%r14, %rdi
10001857b:	e8 92 69 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100018580:	4c 89 ff	movq	%r15, %rdi
100018583:	e8 4e 6c 01 00	callq	0x10002f1d6 ## symbol stub for: _CGPDFDocumentCreateWithProvider
100018588:	48 89 c3	movq	%rax, %rbx
10001858b:	4c 89 ff	movq	%r15, %rdi
10001858e:	e8 6b 6b 01 00	callq	0x10002f0fe ## symbol stub for: _CGDataProviderRelease
100018593:	48 89 d8	movq	%rbx, %rax
100018596:	48 81 c4 88 00 00 00	addq	$136, %rsp
10001859d:	5b	popq	%rbx
10001859e:	41 5c	popq	%r12
1000185a0:	41 5d	popq	%r13
1000185a2:	41 5e	popq	%r14
1000185a4:	41 5f	popq	%r15
1000185a6:	5d	popq	%rbp
1000185a7:	c3	retq
1000185a8:	55	pushq	%rbp
1000185a9:	48 89 e5	movq	%rsp, %rbp
1000185ac:	41 57	pushq	%r15
1000185ae:	41 56	pushq	%r14
1000185b0:	41 55	pushq	%r13
1000185b2:	41 54	pushq	%r12
1000185b4:	53	pushq	%rbx
1000185b5:	48 83 ec 78	subq	$120, %rsp
1000185b9:	48 85 d2	testq	%rdx, %rdx
1000185bc:	0f 84 76 01 00 00	je	0x100018738
1000185c2:	49 89 d7	movq	%rdx, %r15
1000185c5:	48 89 fb	movq	%rdi, %rbx
1000185c8:	48 89 d7	movq	%rdx, %rdi
1000185cb:	e8 82 68 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
1000185d0:	48 85 c0	testq	%rax, %rax
1000185d3:	0f 8e 5f 01 00 00	jle	0x100018738
1000185d9:	4c 89 ff	movq	%r15, %rdi
1000185dc:	e8 71 68 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
1000185e1:	48 89 45 d0	movq	%rax, -48(%rbp)
1000185e5:	48 8d 05 b8 f8 ff ff	leaq	-1864(%rip), %rax
1000185ec:	48 89 45 a8	movq	%rax, -88(%rbp)
1000185f0:	48 8d 05 c5 f8 ff ff	leaq	-1851(%rip), %rax
1000185f7:	48 89 45 b0	movq	%rax, -80(%rbp)
1000185fb:	48 8b 05 6e 43 02 00	movq	148334(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100018602:	48 8b 38	movq	(%rax), %rdi
100018605:	45 31 f6	xorl	%r14d, %r14d
100018608:	31 f6	xorl	%esi, %esi
10001860a:	e8 7f 68 01 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
10001860f:	48 85 c0	testq	%rax, %rax
100018612:	0f 84 23 01 00 00	je	0x10001873b
100018618:	49 89 c4	movq	%rax, %r12
10001861b:	48 89 c7	movq	%rax, %rdi
10001861e:	e8 f5 68 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100018623:	48 8d 75 a8	leaq	-88(%rbp), %rsi
100018627:	48 89 c7	movq	%rax, %rdi
10001862a:	e8 b1 6a 01 00	callq	0x10002f0e0 ## symbol stub for: _CGDataConsumerCreate
10001862f:	45 31 f6	xorl	%r14d, %r14d
100018632:	48 89 45 c0	movq	%rax, -64(%rbp)
100018636:	48 89 c7	movq	%rax, %rdi
100018639:	31 f6	xorl	%esi, %esi
10001863b:	31 d2	xorl	%edx, %edx
10001863d:	e8 76 6b 01 00	callq	0x10002f1b8 ## symbol stub for: _CGPDFContextCreate
100018642:	48 85 c0	testq	%rax, %rax
100018645:	0f 84 f0 00 00 00	je	0x10001873b
10001864b:	49 89 c5	movq	%rax, %r13
10001864e:	4c 89 65 c8	movq	%r12, -56(%rbp)
100018652:	48 83 7d d0 00	cmpq	$0, -48(%rbp)
100018657:	0f 8e 96 00 00 00	jle	0x1000186f3
10001865d:	48 8b 05 1c 89 03 00	movq	231708(%rip), %rax ## Objc selector ref: convertImageToPDFDoc:
100018664:	48 89 45 b8	movq	%rax, -72(%rbp)
100018668:	45 31 e4	xorl	%r12d, %r12d
10001866b:	4c 89 ff	movq	%r15, %rdi
10001866e:	4c 89 e6	movq	%r12, %rsi
100018671:	e8 e8 67 01 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100018676:	48 89 df	movq	%rbx, %rdi
100018679:	48 8b 75 b8	movq	-72(%rbp), %rsi
10001867d:	48 89 c2	movq	%rax, %rdx
100018680:	ff 15 9a 45 02 00	callq	*148890(%rip) ## Objc message: -[%rdi convertImageToPDFDoc:]
100018686:	48 85 c0	testq	%rax, %rax
100018689:	74 5b	je	0x1000186e6
10001868b:	be 01 00 00 00	movl	$1, %esi
100018690:	48 89 c7	movq	%rax, %rdi
100018693:	e8 56 6b 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
100018698:	48 85 c0	testq	%rax, %rax
10001869b:	74 49	je	0x1000186e6
10001869d:	49 89 c6	movq	%rax, %r14
1000186a0:	48 8d bd 60 ff ff ff	leaq	-160(%rbp), %rdi
1000186a7:	48 89 c6	movq	%rax, %rsi
1000186aa:	31 d2	xorl	%edx, %edx
1000186ac:	e8 55 6b 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
1000186b1:	0f 10 85 60 ff ff ff	movups	-160(%rbp), %xmm0
1000186b8:	0f 10 8d 70 ff ff ff	movups	-144(%rbp), %xmm1
1000186bf:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
1000186c3:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
1000186c7:	4c 89 ef	movq	%r13, %rdi
1000186ca:	48 8d 75 80	leaq	-128(%rbp), %rsi
1000186ce:	e8 95 69 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
1000186d3:	4c 89 ef	movq	%r13, %rdi
1000186d6:	4c 89 f6	movq	%r14, %rsi
1000186d9:	e8 a8 69 01 00	callq	0x10002f086 ## symbol stub for: _CGContextDrawPDFPage
1000186de:	4c 89 ef	movq	%r13, %rdi
1000186e1:	e8 ac 69 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
1000186e6:	49 ff c4	incq	%r12
1000186e9:	4c 39 65 d0	cmpq	%r12, -48(%rbp)
1000186ed:	0f 85 78 ff ff ff	jne	0x10001866b
1000186f3:	4c 89 ef	movq	%r13, %rdi
1000186f6:	e8 b7 6a 01 00	callq	0x10002f1b2 ## symbol stub for: _CGPDFContextClose
1000186fb:	4c 89 ef	movq	%r13, %rdi
1000186fe:	e8 b3 69 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
100018703:	48 8b 7d c0	movq	-64(%rbp), %rdi
100018707:	e8 da 69 01 00	callq	0x10002f0e6 ## symbol stub for: _CGDataConsumerRelease
10001870c:	48 8b 5d c8	movq	-56(%rbp), %rbx
100018710:	48 89 df	movq	%rbx, %rdi
100018713:	e8 da 69 01 00	callq	0x10002f0f2 ## symbol stub for: _CGDataProviderCreateWithCFData
100018718:	49 89 c7	movq	%rax, %r15
10001871b:	48 89 df	movq	%rbx, %rdi
10001871e:	e8 ef 67 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100018723:	4c 89 ff	movq	%r15, %rdi
100018726:	e8 ab 6a 01 00	callq	0x10002f1d6 ## symbol stub for: _CGPDFDocumentCreateWithProvider
10001872b:	49 89 c6	movq	%rax, %r14
10001872e:	4c 89 ff	movq	%r15, %rdi
100018731:	e8 c8 69 01 00	callq	0x10002f0fe ## symbol stub for: _CGDataProviderRelease
100018736:	eb 03	jmp	0x10001873b
100018738:	45 31 f6	xorl	%r14d, %r14d
10001873b:	4c 89 f0	movq	%r14, %rax
10001873e:	48 83 c4 78	addq	$120, %rsp
100018742:	5b	popq	%rbx
100018743:	41 5c	popq	%r12
100018745:	41 5d	popq	%r13
100018747:	41 5e	popq	%r14
100018749:	41 5f	popq	%r15
10001874b:	5d	popq	%rbp
10001874c:	c3	retq
10001874d:	55	pushq	%rbp
10001874e:	48 89 e5	movq	%rsp, %rbp
100018751:	41 57	pushq	%r15
100018753:	41 56	pushq	%r14
100018755:	41 54	pushq	%r12
100018757:	53	pushq	%rbx
100018758:	4d 89 ce	movq	%r9, %r14
10001875b:	4c 89 c3	movq	%r8, %rbx
10001875e:	49 89 cf	movq	%rcx, %r15
100018761:	48 8b 3d d8 9e 03 00	movq	237272(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSURL
100018768:	48 8b 35 a9 8a 03 00	movq	232105(%rip), %rsi ## Objc selector ref: fileURLWithPath:
10001876f:	ff 15 ab 44 02 00	callq	*148651(%rip) ## Objc message: +[NSURL fileURLWithPath:]
100018775:	45 31 e4	xorl	%r12d, %r12d
100018778:	ba 01 00 00 00	movl	$1, %edx
10001877d:	48 89 c7	movq	%rax, %rdi
100018780:	48 89 de	movq	%rbx, %rsi
100018783:	31 c9	xorl	%ecx, %ecx
100018785:	e8 98 69 01 00	callq	0x10002f122 ## symbol stub for: _CGImageDestinationCreateWithURL
10001878a:	48 85 c0	testq	%rax, %rax
10001878d:	74 24	je	0x1000187b3
10001878f:	48 89 c3	movq	%rax, %rbx
100018792:	48 89 c7	movq	%rax, %rdi
100018795:	4c 89 fe	movq	%r15, %rsi
100018798:	4c 89 f2	movq	%r14, %rdx
10001879b:	e8 76 69 01 00	callq	0x10002f116 ## symbol stub for: _CGImageDestinationAddImage
1000187a0:	48 89 df	movq	%rbx, %rdi
1000187a3:	e8 80 69 01 00	callq	0x10002f128 ## symbol stub for: _CGImageDestinationFinalize
1000187a8:	41 89 c4	movl	%eax, %r12d
1000187ab:	48 89 df	movq	%rbx, %rdi
1000187ae:	e8 5f 67 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000187b3:	4c 89 ff	movq	%r15, %rdi
1000187b6:	e8 cd 69 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
1000187bb:	41 0f b6 c4	movzbl	%r12b, %eax
1000187bf:	5b	popq	%rbx
1000187c0:	41 5c	popq	%r12
1000187c2:	41 5e	popq	%r14
1000187c4:	41 5f	popq	%r15
1000187c6:	5d	popq	%rbp
1000187c7:	c3	retq
1000187c8:	55	pushq	%rbp
1000187c9:	48 89 e5	movq	%rsp, %rbp
1000187cc:	41 57	pushq	%r15
1000187ce:	41 56	pushq	%r14
1000187d0:	41 54	pushq	%r12
1000187d2:	53	pushq	%rbx
1000187d3:	48 89 fb	movq	%rdi, %rbx
1000187d6:	4c 8b 3d 4b a7 03 00	movq	239435(%rip), %r15
1000187dd:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
1000187e1:	48 39 d7	cmpq	%rdx, %rdi
1000187e4:	74 30	je	0x100018816
1000187e6:	49 89 d6	movq	%rdx, %r14
1000187e9:	e8 dc 6c 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
1000187ee:	48 8b 35 6b 9d 03 00	movq	236907(%rip), %rsi ## Objc selector ref: zone
1000187f5:	4c 8b 25 24 44 02 00	movq	148516(%rip), %r12 ## Objc message: -[%rdi zone]
1000187fc:	48 89 df	movq	%rbx, %rdi
1000187ff:	41 ff d4	callq	*%r12
100018802:	48 8b 35 af 87 03 00	movq	231343(%rip), %rsi ## Objc selector ref: copyWithZone:
100018809:	4c 89 f7	movq	%r14, %rdi
10001880c:	48 89 c2	movq	%rax, %rdx
10001880f:	41 ff d4	callq	*%r12
100018812:	4a 89 04 3b	movq	%rax, (%rbx,%r15)
100018816:	5b	popq	%rbx
100018817:	41 5c	popq	%r12
100018819:	41 5e	popq	%r14
10001881b:	41 5f	popq	%r15
10001881d:	5d	popq	%rbp
10001881e:	c3	retq
10001881f:	55	pushq	%rbp
100018820:	48 89 e5	movq	%rsp, %rbp
100018823:	41 57	pushq	%r15
100018825:	41 56	pushq	%r14
100018827:	53	pushq	%rbx
100018828:	50	pushq	%rax
100018829:	4c 8b 35 f8 a6 03 00	movq	239352(%rip), %r14
100018830:	4a 8b 04 37	movq	(%rdi,%r14), %rax
100018834:	48 85 c0	testq	%rax, %rax
100018837:	75 2f	jne	0x100018868
100018839:	48 89 fb	movq	%rdi, %rbx
10001883c:	48 8b 3d bd 9d 03 00	movq	236989(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintInfo
100018843:	48 8b 35 de 99 03 00	movq	235998(%rip), %rsi ## Objc selector ref: sharedPrintInfo
10001884a:	4c 8b 3d cf 43 02 00	movq	148431(%rip), %r15 ## Objc message: +[NSPrintInfo sharedPrintInfo]
100018851:	41 ff d7	callq	*%r15
100018854:	48 8b 35 cd 97 03 00	movq	235469(%rip), %rsi ## Objc selector ref: setPrintInfo:
10001885b:	48 89 df	movq	%rbx, %rdi
10001885e:	48 89 c2	movq	%rax, %rdx
100018861:	41 ff d7	callq	*%r15
100018864:	4a 8b 04 33	movq	(%rbx,%r14), %rax
100018868:	48 83 c4 08	addq	$8, %rsp
10001886c:	5b	popq	%rbx
10001886d:	41 5e	popq	%r14
10001886f:	41 5f	popq	%r15
100018871:	5d	popq	%rbp
100018872:	c3	retq
100018873:	55	pushq	%rbp
100018874:	48 89 e5	movq	%rsp, %rbp
100018877:	31 c0	xorl	%eax, %eax
100018879:	5d	popq	%rbp
10001887a:	c3	retq
10001887b:	55	pushq	%rbp
10001887c:	48 89 e5	movq	%rsp, %rbp
10001887f:	48 8b 05 4a a5 03 00	movq	238922(%rip), %rax
100018886:	48 8b 04 07	movq	(%rdi,%rax), %rax
10001888a:	5d	popq	%rbp
10001888b:	c3	retq
10001888c:	55	pushq	%rbp
10001888d:	48 89 e5	movq	%rsp, %rbp
100018890:	48 8b 05 81 3e 02 00	movq	147073(%rip), %rax ## literal pool symbol address: _NSZeroSize
100018897:	f2 0f 10 00	movsd	(%rax), %xmm0
10001889b:	f2 0f 10 48 08	movsd	8(%rax), %xmm1
1000188a0:	5d	popq	%rbp
1000188a1:	c3	retq
1000188a2:	55	pushq	%rbp
1000188a3:	48 89 e5	movq	%rsp, %rbp
1000188a6:	41 57	pushq	%r15
1000188a8:	41 56	pushq	%r14
1000188aa:	41 54	pushq	%r12
1000188ac:	53	pushq	%rbx
1000188ad:	48 89 d3	movq	%rdx, %rbx
1000188b0:	49 89 fe	movq	%rdi, %r14
1000188b3:	48 8b 3d ce 9c 03 00	movq	236750(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableArray
1000188ba:	48 8b 35 57 84 03 00	movq	230487(%rip), %rsi ## Objc selector ref: array
1000188c1:	ff 15 59 43 02 00	callq	*148313(%rip) ## Objc message: +[NSMutableArray array]
1000188c7:	49 89 c7	movq	%rax, %r15
1000188ca:	e8 4d 68 01 00	callq	0x10002f11c ## symbol stub for: _CGImageDestinationCopyTypeIdentifiers
1000188cf:	48 89 c7	movq	%rax, %rdi
1000188d2:	e8 f3 6b 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
1000188d7:	49 89 c4	movq	%rax, %r12
1000188da:	48 83 fb 02	cmpq	$2, %rbx
1000188de:	77 15	ja	0x1000188f5
1000188e0:	48 8b 35 91 83 03 00	movq	230289(%rip), %rsi ## Objc selector ref: addObjectsFromArray:
1000188e7:	4c 89 ff	movq	%r15, %rdi
1000188ea:	4c 89 e2	movq	%r12, %rdx
1000188ed:	ff 15 2d 43 02 00	callq	*148269(%rip) ## Objc message: -[%rdi addObjectsFromArray:]
1000188f3:	eb 6c	jmp	0x100018961
1000188f5:	48 83 fb 03	cmpq	$3, %rbx
1000188f9:	74 44	je	0x10001893f
1000188fb:	48 83 fb 04	cmpq	$4, %rbx
1000188ff:	75 60	jne	0x100018961
100018901:	48 8b 35 00 89 03 00	movq	231680(%rip), %rsi ## Objc selector ref: fileType
100018908:	4c 89 f7	movq	%r14, %rdi
10001890b:	ff 15 0f 43 02 00	callq	*148239(%rip) ## Objc message: -[%rdi fileType]
100018911:	48 85 c0	testq	%rax, %rax
100018914:	74 4b	je	0x100018961
100018916:	48 89 c3	movq	%rax, %rbx
100018919:	48 8b 35 20 86 03 00	movq	230944(%rip), %rsi ## Objc selector ref: containsObject:
100018920:	4c 89 e7	movq	%r12, %rdi
100018923:	48 89 c2	movq	%rax, %rdx
100018926:	ff 15 f4 42 02 00	callq	*148212(%rip) ## Objc message: -[%rdi containsObject:]
10001892c:	84 c0	testb	%al, %al
10001892e:	74 31	je	0x100018961
100018930:	48 8b 35 39 83 03 00	movq	230201(%rip), %rsi ## Objc selector ref: addObject:
100018937:	4c 89 ff	movq	%r15, %rdi
10001893a:	48 89 da	movq	%rbx, %rdx
10001893d:	eb ae	jmp	0x1000188ed
10001893f:	48 8b 35 42 84 03 00	movq	230466(%rip), %rsi ## Objc selector ref: bestTypeForWriting
100018946:	48 8b 1d d3 42 02 00	movq	148179(%rip), %rbx ## Objc message: -[%rdi bestTypeForWriting]
10001894d:	4c 89 f7	movq	%r14, %rdi
100018950:	ff d3	callq	*%rbx
100018952:	48 8b 35 17 83 03 00	movq	230167(%rip), %rsi ## Objc selector ref: addObject:
100018959:	4c 89 ff	movq	%r15, %rdi
10001895c:	48 89 c2	movq	%rax, %rdx
10001895f:	ff d3	callq	*%rbx
100018961:	4c 89 f8	movq	%r15, %rax
100018964:	5b	popq	%rbx
100018965:	41 5c	popq	%r12
100018967:	41 5e	popq	%r14
100018969:	41 5f	popq	%r15
10001896b:	5d	popq	%rbp
10001896c:	c3	retq
10001896d:	55	pushq	%rbp
10001896e:	48 89 e5	movq	%rsp, %rbp
100018971:	48 8b 35 d8 8d 03 00	movq	232920(%rip), %rsi ## Objc selector ref: metadata
100018978:	ff 15 a2 42 02 00	callq	*148130(%rip) ## Objc message: -[%rdi metadata]
10001897e:	48 85 c0	testq	%rax, %rax
100018981:	74 20	je	0x1000189a3
100018983:	48 8b 0d e6 3f 02 00	movq	147430(%rip), %rcx ## literal pool symbol address: _kCFAllocatorDefault
10001898a:	48 8b 39	movq	(%rcx), %rdi
10001898d:	ba 02 00 00 00	movl	$2, %edx
100018992:	48 89 c6	movq	%rax, %rsi
100018995:	e8 72 65 01 00	callq	0x10002ef0c ## symbol stub for: _CFPropertyListCreateDeepCopy
10001899a:	48 89 c7	movq	%rax, %rdi
10001899d:	5d	popq	%rbp
10001899e:	e9 27 6b 01 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
1000189a3:	31 c0	xorl	%eax, %eax
1000189a5:	5d	popq	%rbp
1000189a6:	c3	retq
1000189a7:	55	pushq	%rbp
1000189a8:	48 89 e5	movq	%rsp, %rbp
1000189ab:	31 c0	xorl	%eax, %eax
1000189ad:	5d	popq	%rbp
1000189ae:	c3	retq
1000189af:	55	pushq	%rbp
1000189b0:	48 89 e5	movq	%rsp, %rbp
1000189b3:	41 57	pushq	%r15
1000189b5:	41 56	pushq	%r14
1000189b7:	41 55	pushq	%r13
1000189b9:	41 54	pushq	%r12
1000189bb:	53	pushq	%rbx
1000189bc:	48 81 ec 38 01 00 00	subq	$312, %rsp
1000189c3:	49 89 fd	movq	%rdi, %r13
1000189c6:	4c 8b 3d 4b a4 03 00	movq	238667(%rip), %r15
1000189cd:	4a 8b 34 3f	movq	(%rdi,%r15), %rsi
1000189d1:	48 85 f6	testq	%rsi, %rsi
1000189d4:	74 48	je	0x100018a1e
1000189d6:	48 8b 15 f3 83 03 00	movq	230387(%rip), %rdx ## Objc selector ref: bounds
1000189dd:	4c 8d b5 c0 fe ff ff	leaq	-320(%rbp), %r14
1000189e4:	4c 89 f7	movq	%r14, %rdi
1000189e7:	e8 f6 6a 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
1000189ec:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
1000189f2:	f2 41 0f 10 4e 18	movsd	24(%r14), %xmm1
1000189f8:	4b 8b 74 3d 00	movq	(%r13,%r15), %rsi
1000189fd:	48 85 f6	testq	%rsi, %rsi
100018a00:	f2 0f 11 45 b8	movsd	%xmm0, -72(%rbp)
100018a05:	f2 0f 11 4d c0	movsd	%xmm1, -64(%rbp)
100018a0a:	74 33	je	0x100018a3f
100018a0c:	48 8b 15 c5 83 03 00	movq	230341(%rip), %rdx ## Objc selector ref: boundsRectWithPreservedAspectRatio
100018a13:	48 8d 7d 90	leaq	-112(%rbp), %rdi
100018a17:	e8 c6 6a 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018a1c:	eb 2c	jmp	0x100018a4a
100018a1e:	0f 57 c0	xorps	%xmm0, %xmm0
100018a21:	0f 29 85 d0 fe ff ff	movaps	%xmm0, -304(%rbp)
100018a28:	0f 29 85 c0 fe ff ff	movaps	%xmm0, -320(%rbp)
100018a2f:	0f 57 c0	xorps	%xmm0, %xmm0
100018a32:	f2 0f 11 45 b8	movsd	%xmm0, -72(%rbp)
100018a37:	0f 57 c0	xorps	%xmm0, %xmm0
100018a3a:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
100018a3f:	0f 57 c0	xorps	%xmm0, %xmm0
100018a42:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
100018a46:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
100018a4a:	0f 28 45 90	movaps	-112(%rbp), %xmm0
100018a4e:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
100018a52:	0f 29 8d 70 ff ff ff	movaps	%xmm1, -144(%rbp)
100018a59:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
100018a60:	0f 28 85 60 ff ff ff	movaps	-160(%rbp), %xmm0
100018a67:	0f 28 8d 70 ff ff ff	movaps	-144(%rbp), %xmm1
100018a6e:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018a73:	0f 11 04 24	movups	%xmm0, (%rsp)
100018a77:	e8 c6 67 01 00	callq	0x10002f242 ## symbol stub for: _CGRectGetWidth
100018a7c:	f2 0f 11 45 b0	movsd	%xmm0, -80(%rbp)
100018a81:	48 8b 1d 88 a3 03 00	movq	238472(%rip), %rbx
100018a88:	f2 41 0f 10 44 1d 00	movsd	(%r13,%rbx), %xmm0
100018a8f:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100018a94:	66 0f 28 85 60 ff ff ff	movapd	-160(%rbp), %xmm0
100018a9c:	0f 28 8d 70 ff ff ff	movaps	-144(%rbp), %xmm1
100018aa3:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100018aa8:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
100018aad:	e8 7e 67 01 00	callq	0x10002f230 ## symbol stub for: _CGRectGetHeight
100018ab2:	f2 41 0f 10 4c 1d 08	movsd	8(%r13,%rbx), %xmm1
100018ab9:	4b 8b 74 3d 00	movq	(%r13,%r15), %rsi
100018abe:	48 85 f6	testq	%rsi, %rsi
100018ac1:	74 29	je	0x100018aec
100018ac3:	48 8b 15 06 83 03 00	movq	230150(%rip), %rdx ## Objc selector ref: bounds
100018aca:	48 8d bd e0 fe ff ff	leaq	-288(%rbp), %rdi
100018ad1:	f2 0f 11 4d c8	movsd	%xmm1, -56(%rbp)
100018ad6:	f2 0f 11 45 88	movsd	%xmm0, -120(%rbp)
100018adb:	e8 02 6a 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018ae0:	f2 0f 10 45 88	movsd	-120(%rbp), %xmm0
100018ae5:	f2 0f 10 4d c8	movsd	-56(%rbp), %xmm1
100018aea:	eb 11	jmp	0x100018afd
100018aec:	0f 57 d2	xorps	%xmm2, %xmm2
100018aef:	0f 29 95 f0 fe ff ff	movaps	%xmm2, -272(%rbp)
100018af6:	0f 29 95 e0 fe ff ff	movaps	%xmm2, -288(%rbp)
100018afd:	f2 0f 10 5d d0	movsd	-48(%rbp), %xmm3
100018b02:	f2 0f 10 55 b0	movsd	-80(%rbp), %xmm2
100018b07:	f2 0f 5f da	maxsd	%xmm2, %xmm3
100018b0b:	f2 0f 11 5d d0	movsd	%xmm3, -48(%rbp)
100018b10:	f2 0f 5f c8	maxsd	%xmm0, %xmm1
100018b14:	f2 0f 11 4d c8	movsd	%xmm1, -56(%rbp)
100018b19:	48 8b 3d b0 9b 03 00	movq	236464(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScreen
100018b20:	48 8b 35 d1 8b 03 00	movq	232401(%rip), %rsi ## Objc selector ref: mainScreen
100018b27:	ff 15 f3 40 02 00	callq	*147699(%rip) ## Objc message: +[NSScreen mainScreen]
100018b2d:	48 85 c0	testq	%rax, %rax
100018b30:	74 15	je	0x100018b47
100018b32:	48 8b 15 97 99 03 00	movq	235927(%rip), %rdx ## Objc selector ref: visibleFrame
100018b39:	48 8d 7d 90	leaq	-112(%rbp), %rdi
100018b3d:	48 89 c6	movq	%rax, %rsi
100018b40:	e8 9d 69 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018b45:	eb 0e	jmp	0x100018b55
100018b47:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100018b4b:	66 0f 29 45 a0	movapd	%xmm0, -96(%rbp)
100018b50:	66 0f 29 45 90	movapd	%xmm0, -112(%rbp)
100018b55:	f2 0f 10 45 b8	movsd	-72(%rbp), %xmm0
100018b5a:	f2 0f 10 4d c0	movsd	-64(%rbp), %xmm1
100018b5f:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100018b64:	f2 0f 10 5d c8	movsd	-56(%rbp), %xmm3
100018b69:	f2 0f 5c d0	subsd	%xmm0, %xmm2
100018b6d:	0f 57 c0	xorps	%xmm0, %xmm0
100018b70:	f2 0f 5a c2	cvtsd2ss	%xmm2, %xmm0
100018b74:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
100018b79:	f2 0f 5c d9	subsd	%xmm1, %xmm3
100018b7d:	0f 57 c0	xorps	%xmm0, %xmm0
100018b80:	f2 0f 5a c3	cvtsd2ss	%xmm3, %xmm0
100018b84:	f3 0f 11 45 c8	movss	%xmm0, -56(%rbp)
100018b89:	4c 8b 25 78 a2 03 00	movq	238200(%rip), %r12
100018b90:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100018b95:	48 8b 35 ac 83 03 00	movq	230316(%rip), %rsi ## Objc selector ref: contentView
100018b9c:	ff 15 7e 40 02 00	callq	*147582(%rip) ## Objc message: -[%rdi contentView]
100018ba2:	48 85 c0	testq	%rax, %rax
100018ba5:	74 27	je	0x100018bce
100018ba7:	48 8b 15 22 82 03 00	movq	229922(%rip), %rdx ## Objc selector ref: bounds
100018bae:	4c 8d b5 00 ff ff ff	leaq	-256(%rbp), %r14
100018bb5:	4c 89 f7	movq	%r14, %rdi
100018bb8:	48 89 c6	movq	%rax, %rsi
100018bbb:	e8 22 69 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018bc0:	f2 41 0f 10 4e 10	movsd	16(%r14), %xmm1
100018bc6:	f2 41 0f 10 56 18	movsd	24(%r14), %xmm2
100018bcc:	eb 19	jmp	0x100018be7
100018bce:	0f 57 c0	xorps	%xmm0, %xmm0
100018bd1:	0f 29 85 10 ff ff ff	movaps	%xmm0, -240(%rbp)
100018bd8:	0f 29 85 00 ff ff ff	movaps	%xmm0, -256(%rbp)
100018bdf:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100018be3:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100018be7:	f3 0f 10 45 d0	movss	-48(%rbp), %xmm0
100018bec:	f3 0f 10 5d c8	movss	-56(%rbp), %xmm3
100018bf1:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
100018bf5:	f2 0f 58 c1	addsd	%xmm1, %xmm0
100018bf9:	0f 57 c9	xorps	%xmm1, %xmm1
100018bfc:	f3 0f 5a cb	cvtss2sd	%xmm3, %xmm1
100018c00:	f2 0f 58 ca	addsd	%xmm2, %xmm1
100018c04:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100018c09:	48 8b 35 28 91 03 00	movq	233768(%rip), %rsi ## Objc selector ref: setContentSize:
100018c10:	ff 15 0a 40 02 00	callq	*147466(%rip) ## Objc message: -[%rdi setContentSize:]
100018c16:	4b 8b 74 25 00	movq	(%r13,%r12), %rsi
100018c1b:	48 85 f6	testq	%rsi, %rsi
100018c1e:	74 51	je	0x100018c71
100018c20:	4c 8b 35 79 86 03 00	movq	231033(%rip), %r14 ## Objc selector ref: frame
100018c27:	4c 8d bd 20 ff ff ff	leaq	-224(%rbp), %r15
100018c2e:	4c 89 ff	movq	%r15, %rdi
100018c31:	4c 89 f2	movq	%r14, %rdx
100018c34:	e8 a9 68 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018c39:	4b 8b 74 25 00	movq	(%r13,%r12), %rsi
100018c3e:	f2 41 0f 10 57 18	movsd	24(%r15), %xmm2
100018c44:	48 85 f6	testq	%rsi, %rsi
100018c47:	74 40	je	0x100018c89
100018c49:	4c 8d bd 40 ff ff ff	leaq	-192(%rbp), %r15
100018c50:	4c 89 ff	movq	%r15, %rdi
100018c53:	4c 89 f2	movq	%r14, %rdx
100018c56:	f2 0f 11 55 d0	movsd	%xmm2, -48(%rbp)
100018c5b:	e8 82 68 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100018c60:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100018c65:	f2 41 0f 10 07	movsd	(%r15), %xmm0
100018c6a:	4b 8b 7c 25 00	movq	(%r13,%r12), %rdi
100018c6f:	eb 32	jmp	0x100018ca3
100018c71:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100018c75:	66 0f 29 85 30 ff ff ff	movapd	%xmm0, -208(%rbp)
100018c7d:	66 0f 29 85 20 ff ff ff	movapd	%xmm0, -224(%rbp)
100018c85:	66 0f 57 d2	xorpd	%xmm2, %xmm2
100018c89:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100018c8d:	66 0f 29 85 50 ff ff ff	movapd	%xmm0, -176(%rbp)
100018c95:	66 0f 29 85 40 ff ff ff	movapd	%xmm0, -192(%rbp)
100018c9d:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100018ca1:	31 ff	xorl	%edi, %edi
100018ca3:	f2 0f 10 4d 98	movsd	-104(%rbp), %xmm1
100018ca8:	f2 0f 58 4d a8	addsd	-88(%rbp), %xmm1
100018cad:	f2 0f 5c ca	subsd	%xmm2, %xmm1
100018cb1:	48 8b 35 b0 91 03 00	movq	233904(%rip), %rsi ## Objc selector ref: setFrameOrigin:
100018cb8:	ff 15 62 3f 02 00	callq	*147298(%rip) ## Objc message: -[%rdi setFrameOrigin:]
100018cbe:	48 81 c4 38 01 00 00	addq	$312, %rsp
100018cc5:	5b	popq	%rbx
100018cc6:	41 5c	popq	%r12
100018cc8:	41 5d	popq	%r13
100018cca:	41 5e	popq	%r14
100018ccc:	41 5f	popq	%r15
100018cce:	5d	popq	%rbp
100018ccf:	c3	retq
100018cd0:	55	pushq	%rbp
100018cd1:	48 89 e5	movq	%rsp, %rbp
100018cd4:	41 57	pushq	%r15
100018cd6:	41 56	pushq	%r14
100018cd8:	41 55	pushq	%r13
100018cda:	41 54	pushq	%r12
100018cdc:	53	pushq	%rbx
100018cdd:	50	pushq	%rax
100018cde:	49 89 fc	movq	%rdi, %r12
100018ce1:	48 8b 05 98 a1 03 00	movq	237976(%rip), %rax
100018ce8:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100018cec:	48 8b 35 1d 88 03 00	movq	231453(%rip), %rsi ## Objc selector ref: intValue
100018cf3:	4c 8b 2d 26 3f 02 00	movq	147238(%rip), %r13 ## Objc message: -[%rdi intValue]
100018cfa:	41 ff d5	callq	*%r13
100018cfd:	89 c3	movl	%eax, %ebx
100018cff:	4c 63 f8	movslq	%eax, %r15
100018d02:	4c 8b 35 47 85 03 00	movq	230727(%rip), %r14 ## Objc selector ref: filterPage
100018d09:	4c 89 e7	movq	%r12, %rdi
100018d0c:	4c 89 f6	movq	%r14, %rsi
100018d0f:	41 ff d5	callq	*%r13
100018d12:	4c 39 f8	cmpq	%r15, %rax
100018d15:	75 0f	jne	0x100018d26
100018d17:	48 83 c4 08	addq	$8, %rsp
100018d1b:	5b	popq	%rbx
100018d1c:	41 5c	popq	%r12
100018d1e:	41 5d	popq	%r13
100018d20:	41 5e	popq	%r14
100018d22:	41 5f	popq	%r15
100018d24:	5d	popq	%rbp
100018d25:	c3	retq
100018d26:	4d 89 f5	movq	%r14, %r13
100018d29:	4c 8b 35 50 a1 03 00	movq	237904(%rip), %r14
100018d30:	85 db	testl	%ebx, %ebx
100018d32:	7e 15	jle	0x100018d49
100018d34:	48 8b 35 e5 8b 03 00	movq	232421(%rip), %rsi ## Objc selector ref: pageCount
100018d3b:	4c 89 e7	movq	%r12, %rdi
100018d3e:	ff 15 dc 3e 02 00	callq	*147164(%rip) ## Objc message: -[%rdi pageCount]
100018d44:	4c 39 f8	cmpq	%r15, %rax
100018d47:	7d 38	jge	0x100018d81
100018d49:	e8 8a 65 01 00	callq	0x10002f2d8 ## symbol stub for: _NSBeep
100018d4e:	4b 8b 1c 34	movq	(%r12,%r14), %rbx
100018d52:	4c 89 e7	movq	%r12, %rdi
100018d55:	4c 89 ee	movq	%r13, %rsi
100018d58:	4c 8b 35 c1 3e 02 00	movq	147137(%rip), %r14 ## Objc message: -[%rdi pageCount]
100018d5f:	41 ff d6	callq	*%r14
100018d62:	48 8b 35 97 91 03 00	movq	233879(%rip), %rsi ## Objc selector ref: setIntValue:
100018d69:	48 89 df	movq	%rbx, %rdi
100018d6c:	89 c2	movl	%eax, %edx
100018d6e:	4c 89 f0	movq	%r14, %rax
100018d71:	48 83 c4 08	addq	$8, %rsp
100018d75:	5b	popq	%rbx
100018d76:	41 5c	popq	%r12
100018d78:	41 5d	popq	%r13
100018d7a:	41 5e	popq	%r14
100018d7c:	41 5f	popq	%r15
100018d7e:	5d	popq	%rbp
100018d7f:	ff e0	jmpq	*%rax
100018d81:	48 8b 35 a8 90 03 00	movq	233640(%rip), %rsi ## Objc selector ref: setFilterPage:
100018d88:	4c 89 e7	movq	%r12, %rdi
100018d8b:	4c 89 fa	movq	%r15, %rdx
100018d8e:	48 8b 1d 8b 3e 02 00	movq	147083(%rip), %rbx ## Objc message: -[%rdi setFilterPage:]
100018d95:	ff d3	callq	*%rbx
100018d97:	48 8b 35 42 83 03 00	movq	230210(%rip), %rsi ## Objc selector ref: displayPage
100018d9e:	4c 89 e7	movq	%r12, %rdi
100018da1:	48 89 d8	movq	%rbx, %rax
100018da4:	48 83 c4 08	addq	$8, %rsp
100018da8:	5b	popq	%rbx
100018da9:	41 5c	popq	%r12
100018dab:	41 5d	popq	%r13
100018dad:	41 5e	popq	%r14
100018daf:	41 5f	popq	%r15
100018db1:	5d	popq	%rbp
100018db2:	ff e0	jmpq	*%rax
100018db4:	55	pushq	%rbp
100018db5:	48 89 e5	movq	%rsp, %rbp
100018db8:	41 57	pushq	%r15
100018dba:	41 56	pushq	%r14
100018dbc:	53	pushq	%rbx
100018dbd:	50	pushq	%rax
100018dbe:	48 89 fb	movq	%rdi, %rbx
100018dc1:	4c 8b 35 b8 a0 03 00	movq	237752(%rip), %r14
100018dc8:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
100018dcc:	48 8b 35 3d 87 03 00	movq	231229(%rip), %rsi ## Objc selector ref: intValue
100018dd3:	4c 8b 3d 46 3e 02 00	movq	147014(%rip), %r15 ## Objc message: -[%rdi intValue]
100018dda:	41 ff d7	callq	*%r15
100018ddd:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100018de1:	8d 50 ff	leal	-1(%rax), %edx
100018de4:	48 8b 35 15 91 03 00	movq	233749(%rip), %rsi ## Objc selector ref: setIntValue:
100018deb:	41 ff d7	callq	*%r15
100018dee:	48 8b 35 33 82 03 00	movq	229939(%rip), %rsi ## Objc selector ref: currentPageAction:
100018df5:	48 89 df	movq	%rbx, %rdi
100018df8:	31 d2	xorl	%edx, %edx
100018dfa:	4c 89 f8	movq	%r15, %rax
100018dfd:	48 83 c4 08	addq	$8, %rsp
100018e01:	5b	popq	%rbx
100018e02:	41 5e	popq	%r14
100018e04:	41 5f	popq	%r15
100018e06:	5d	popq	%rbp
100018e07:	ff e0	jmpq	*%rax
100018e09:	55	pushq	%rbp
100018e0a:	48 89 e5	movq	%rsp, %rbp
100018e0d:	41 57	pushq	%r15
100018e0f:	41 56	pushq	%r14
100018e11:	53	pushq	%rbx
100018e12:	50	pushq	%rax
100018e13:	48 89 fb	movq	%rdi, %rbx
100018e16:	4c 8b 35 63 a0 03 00	movq	237667(%rip), %r14
100018e1d:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
100018e21:	48 8b 35 e8 86 03 00	movq	231144(%rip), %rsi ## Objc selector ref: intValue
100018e28:	4c 8b 3d f1 3d 02 00	movq	146929(%rip), %r15 ## Objc message: -[%rdi intValue]
100018e2f:	41 ff d7	callq	*%r15
100018e32:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100018e36:	8d 50 01	leal	1(%rax), %edx
100018e39:	48 8b 35 c0 90 03 00	movq	233664(%rip), %rsi ## Objc selector ref: setIntValue:
100018e40:	41 ff d7	callq	*%r15
100018e43:	48 8b 35 de 81 03 00	movq	229854(%rip), %rsi ## Objc selector ref: currentPageAction:
100018e4a:	48 89 df	movq	%rbx, %rdi
100018e4d:	31 d2	xorl	%edx, %edx
100018e4f:	4c 89 f8	movq	%r15, %rax
100018e52:	48 83 c4 08	addq	$8, %rsp
100018e56:	5b	popq	%rbx
100018e57:	41 5e	popq	%r14
100018e59:	41 5f	popq	%r15
100018e5b:	5d	popq	%rbp
100018e5c:	ff e0	jmpq	*%rax
100018e5e:	55	pushq	%rbp
100018e5f:	48 89 e5	movq	%rsp, %rbp
100018e62:	41 57	pushq	%r15
100018e64:	41 56	pushq	%r14
100018e66:	41 55	pushq	%r13
100018e68:	41 54	pushq	%r12
100018e6a:	53	pushq	%rbx
100018e6b:	50	pushq	%rax
100018e6c:	48 89 fb	movq	%rdi, %rbx
100018e6f:	48 8b 35 ca 83 03 00	movq	230346(%rip), %rsi ## Objc selector ref: filterDocument
100018e76:	ff 15 a4 3d 02 00	callq	*146852(%rip) ## Objc message: -[%rdi filterDocument]
100018e7c:	48 85 c0	testq	%rax, %rax
100018e7f:	0f 84 2e 01 00 00	je	0x100018fb3
100018e85:	48 8b 35 bc 83 03 00	movq	230332(%rip), %rsi ## Objc selector ref: filterDocumentType
100018e8c:	4c 8b 2d 8d 3d 02 00	movq	146829(%rip), %r13 ## Objc message: -[%rdi filterDocumentType]
100018e93:	48 89 df	movq	%rbx, %rdi
100018e96:	41 ff d5	callq	*%r13
100018e99:	41 89 c4	movl	%eax, %r12d
100018e9c:	4c 8b 3d 4d 96 03 00	movq	235085(%rip), %r15 ## Objc selector ref: wholeDocumentAndSettings
100018ea3:	48 89 df	movq	%rbx, %rdi
100018ea6:	4c 89 fe	movq	%r15, %rsi
100018ea9:	41 ff d5	callq	*%r13
100018eac:	48 89 c7	movq	%rax, %rdi
100018eaf:	ff 15 ab 3d 02 00	callq	*146859(%rip) ## literal pool symbol address: _objc_retain
100018eb5:	48 89 45 d0	movq	%rax, -48(%rbp)
100018eb9:	41 83 fc 01	cmpl	$1, %r12d
100018ebd:	75 25	jne	0x100018ee4
100018ebf:	48 8b 35 22 7e 03 00	movq	228898(%rip), %rsi ## Objc selector ref: applyFilterAndScaleImage:
100018ec6:	48 89 df	movq	%rbx, %rdi
100018ec9:	31 d2	xorl	%edx, %edx
100018ecb:	41 ff d5	callq	*%r13
100018ece:	48 8b 35 4b 8c 03 00	movq	232523(%rip), %rsi ## Objc selector ref: resetCurrentFilter
100018ed5:	48 89 df	movq	%rbx, %rdi
100018ed8:	41 ff d5	callq	*%r13
100018edb:	4c 8d 35 b6 92 03 00	leaq	234166(%rip), %r14 ## Objc selector ref: setupApplyFilterUndo:
100018ee2:	eb 65	jmp	0x100018f49
100018ee4:	48 8b 35 1d 7e 03 00	movq	228893(%rip), %rsi ## Objc selector ref: applyToneMapping
100018eeb:	48 89 df	movq	%rbx, %rdi
100018eee:	41 ff d5	callq	*%r13
100018ef1:	48 8b 35 f0 7d 03 00	movq	228848(%rip), %rsi ## Objc selector ref: applyFilterAndScaleImage:
100018ef8:	48 89 df	movq	%rbx, %rdi
100018efb:	31 d2	xorl	%edx, %edx
100018efd:	41 ff d5	callq	*%r13
100018f00:	48 8b 35 19 8c 03 00	movq	232473(%rip), %rsi ## Objc selector ref: resetCurrentFilter
100018f07:	48 89 df	movq	%rbx, %rdi
100018f0a:	41 ff d5	callq	*%r13
100018f0d:	48 8b 35 2c 91 03 00	movq	233772(%rip), %rsi ## Objc selector ref: setProfile:
100018f14:	48 89 df	movq	%rbx, %rdi
100018f17:	31 d2	xorl	%edx, %edx
100018f19:	41 ff d5	callq	*%r13
100018f1c:	48 8b 05 bd 9e 03 00	movq	237245(%rip), %rax
100018f23:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100018f27:	48 8b 35 e2 8c 03 00	movq	232674(%rip), %rsi ## Objc selector ref: selectItemWithTag:
100018f2e:	31 d2	xorl	%edx, %edx
100018f30:	41 ff d5	callq	*%r13
100018f33:	48 8b 35 ce 8f 03 00	movq	233422(%rip), %rsi ## Objc selector ref: setIntent:
100018f3a:	48 89 df	movq	%rbx, %rdi
100018f3d:	31 d2	xorl	%edx, %edx
100018f3f:	41 ff d5	callq	*%r13
100018f42:	4c 8d 35 57 92 03 00	leaq	234071(%rip), %r14 ## Objc selector ref: setupApplyProfileUndo:
100018f49:	48 89 df	movq	%rbx, %rdi
100018f4c:	4c 89 fe	movq	%r15, %rsi
100018f4f:	41 ff d5	callq	*%r13
100018f52:	48 89 c7	movq	%rax, %rdi
100018f55:	ff 15 05 3d 02 00	callq	*146693(%rip) ## literal pool symbol address: _objc_retain
100018f5b:	49 89 c7	movq	%rax, %r15
100018f5e:	48 8b 05 cb 9f 03 00	movq	237515(%rip), %rax
100018f65:	c6 04 03 01	movb	$1, (%rbx,%rax)
100018f69:	48 8b 3d 40 96 03 00	movq	235072(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100018f70:	48 8b 35 c1 7d 03 00	movq	228801(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100018f77:	4c 8b 65 d0	movq	-48(%rbp), %r12
100018f7b:	4c 89 e2	movq	%r12, %rdx
100018f7e:	4c 89 f9	movq	%r15, %rcx
100018f81:	45 31 c0	xorl	%r8d, %r8d
100018f84:	31 c0	xorl	%eax, %eax
100018f86:	41 ff d5	callq	*%r13
100018f89:	49 8b 36	movq	(%r14), %rsi
100018f8c:	48 89 df	movq	%rbx, %rdi
100018f8f:	48 89 c2	movq	%rax, %rdx
100018f92:	41 ff d5	callq	*%r13
100018f95:	48 8b 05 94 9f 03 00	movq	237460(%rip), %rax
100018f9c:	c6 04 03 00	movb	$0, (%rbx,%rax)
100018fa0:	4c 8b 35 b1 3c 02 00	movq	146609(%rip), %r14 ## literal pool symbol address: _objc_release
100018fa7:	4c 89 e7	movq	%r12, %rdi
100018faa:	41 ff d6	callq	*%r14
100018fad:	4c 89 ff	movq	%r15, %rdi
100018fb0:	41 ff d6	callq	*%r14
100018fb3:	48 8b 35 9e 94 03 00	movq	234654(%rip), %rsi ## Objc selector ref: updatePreview
100018fba:	48 89 df	movq	%rbx, %rdi
100018fbd:	48 83 c4 08	addq	$8, %rsp
100018fc1:	5b	popq	%rbx
100018fc2:	41 5c	popq	%r12
100018fc4:	41 5d	popq	%r13
100018fc6:	41 5e	popq	%r14
100018fc8:	41 5f	popq	%r15
100018fca:	5d	popq	%rbp
100018fcb:	ff 25 4f 3c 02 00	jmpq	*146511(%rip) ## Objc message: +[NSArray updatePreview]
100018fd1:	55	pushq	%rbp
100018fd2:	48 89 e5	movq	%rsp, %rbp
100018fd5:	41 57	pushq	%r15
100018fd7:	41 56	pushq	%r14
100018fd9:	41 55	pushq	%r13
100018fdb:	41 54	pushq	%r12
100018fdd:	53	pushq	%rbx
100018fde:	48 83 ec 48	subq	$72, %rsp
100018fe2:	49 89 ff	movq	%rdi, %r15
100018fe5:	f3 0f 10 15 5f 02 02 00	movss	131679(%rip), %xmm2
100018fed:	f3 0f 5d d0	minss	%xmm0, %xmm2
100018ff1:	0f 57 c0	xorps	%xmm0, %xmm0
100018ff4:	f3 0f 5a c2	cvtss2sd	%xmm2, %xmm0
100018ff8:	f2 0f 10 0d 28 f0 01 00	movsd	127016(%rip), %xmm1
100019000:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
100019004:	76 08	jbe	0x10001900e
100019006:	f3 0f 10 15 42 02 02 00	movss	131650(%rip), %xmm2
10001900e:	48 8b 05 1b 9e 03 00	movq	237083(%rip), %rax
100019015:	f3 41 0f 10 2c 07	movss	(%r15,%rax), %xmm5
10001901b:	f3 41 0f 11 14 07	movss	%xmm2, (%r15,%rax)
100019021:	4c 8b 25 00 9e 03 00	movq	237056(%rip), %r12
100019028:	4b 8b 34 27	movq	(%r15,%r12), %rsi
10001902c:	48 85 f6	testq	%rsi, %rsi
10001902f:	74 3c	je	0x10001906d
100019031:	48 8b 15 d0 80 03 00	movq	229584(%rip), %rdx ## Objc selector ref: documentVisibleRect
100019038:	48 8d 5d 90	leaq	-112(%rbp), %rbx
10001903c:	48 89 df	movq	%rbx, %rdi
10001903f:	f3 0f 11 55 c8	movss	%xmm2, -56(%rbp)
100019044:	f3 0f 11 6d d0	movss	%xmm5, -48(%rbp)
100019049:	e8 94 64 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001904e:	f3 0f 10 6d d0	movss	-48(%rbp), %xmm5
100019053:	f3 0f 10 55 c8	movss	-56(%rbp), %xmm2
100019058:	f2 0f 10 0b	movsd	(%rbx), %xmm1
10001905c:	f2 0f 10 43 08	movsd	8(%rbx), %xmm0
100019061:	f2 0f 10 63 10	movsd	16(%rbx), %xmm4
100019066:	f2 0f 10 5b 18	movsd	24(%rbx), %xmm3
10001906b:	eb 10	jmp	0x10001907d
10001906d:	66 0f 57 db	xorpd	%xmm3, %xmm3
100019071:	66 0f 57 e4	xorpd	%xmm4, %xmm4
100019075:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100019079:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10001907d:	f2 0f 11 65 c0	movsd	%xmm4, -64(%rbp)
100019082:	f2 0f 11 5d b8	movsd	%xmm3, -72(%rbp)
100019087:	f3 0f 5e d5	divss	%xmm5, %xmm2
10001908b:	f3 0f 11 55 c8	movss	%xmm2, -56(%rbp)
100019090:	f2 0f 10 2d 88 ef 01 00	movsd	126856(%rip), %xmm5
100019098:	66 0f 28 f4	movapd	%xmm4, %xmm6
10001909c:	f2 0f 59 f5	mulsd	%xmm5, %xmm6
1000190a0:	f2 0f 58 f1	addsd	%xmm1, %xmm6
1000190a4:	f2 0f 11 75 b0	movsd	%xmm6, -80(%rbp)
1000190a9:	f2 0f 59 eb	mulsd	%xmm3, %xmm5
1000190ad:	f2 0f 58 e8	addsd	%xmm0, %xmm5
1000190b1:	f2 0f 11 6d d0	movsd	%xmm5, -48(%rbp)
1000190b6:	48 8b 35 f3 86 03 00	movq	231155(%rip), %rsi ## Objc selector ref: newPageViewFrame:
1000190bd:	4c 8b 2d 5c 3b 02 00	movq	146268(%rip), %r13 ## Objc message: -[%rdi newPageViewFrame:]
1000190c4:	4c 89 ff	movq	%r15, %rdi
1000190c7:	0f 28 c2	movaps	%xmm2, %xmm0
1000190ca:	41 ff d5	callq	*%r13
1000190cd:	0f 57 c0	xorps	%xmm0, %xmm0
1000190d0:	f3 0f 5a 45 c8	cvtss2sd	-56(%rbp), %xmm0
1000190d5:	f2 0f 10 0d 63 f3 01 00	movsd	127843(%rip), %xmm1
1000190dd:	f2 0f 10 5d c0	movsd	-64(%rbp), %xmm3
1000190e2:	f2 0f 59 d9	mulsd	%xmm1, %xmm3
1000190e6:	f2 0f 10 55 b0	movsd	-80(%rbp), %xmm2
1000190eb:	f2 0f 59 d0	mulsd	%xmm0, %xmm2
1000190ef:	f2 0f 58 d3	addsd	%xmm3, %xmm2
1000190f3:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
1000190f7:	66 0f 3a 0a d2 09	roundss	$9, %xmm2, %xmm2
1000190fd:	f3 0f 5a d2	cvtss2sd	%xmm2, %xmm2
100019101:	f2 0f 11 55 c8	movsd	%xmm2, -56(%rbp)
100019106:	f2 0f 10 55 b8	movsd	-72(%rbp), %xmm2
10001910b:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
10001910f:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100019114:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
100019118:	f2 0f 58 ca	addsd	%xmm2, %xmm1
10001911c:	0f 57 c0	xorps	%xmm0, %xmm0
10001911f:	f2 0f 5a c1	cvtsd2ss	%xmm1, %xmm0
100019123:	66 0f 3a 0a c0 09	roundss	$9, %xmm0, %xmm0
100019129:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10001912d:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100019132:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100019136:	4c 8b 35 0b 7e 03 00	movq	228875(%rip), %r14 ## Objc selector ref: contentView
10001913d:	4c 89 f6	movq	%r14, %rsi
100019140:	41 ff d5	callq	*%r13
100019143:	48 8b 35 ee 7d 03 00	movq	228846(%rip), %rsi ## Objc selector ref: constrainScrollPoint:
10001914a:	48 89 c7	movq	%rax, %rdi
10001914d:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
100019152:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100019157:	41 ff d5	callq	*%r13
10001915a:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
10001915f:	f2 0f 11 4d d0	movsd	%xmm1, -48(%rbp)
100019164:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
100019168:	4c 89 f6	movq	%r14, %rsi
10001916b:	41 ff d5	callq	*%r13
10001916e:	48 8b 35 73 8a 03 00	movq	232051(%rip), %rsi ## Objc selector ref: scrollToPoint:
100019175:	48 89 c7	movq	%rax, %rdi
100019178:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001917d:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
100019182:	41 ff d5	callq	*%r13
100019185:	4b 8b 1c 27	movq	(%r15,%r12), %rbx
100019189:	48 89 df	movq	%rbx, %rdi
10001918c:	4c 89 f6	movq	%r14, %rsi
10001918f:	41 ff d5	callq	*%r13
100019192:	48 8b 35 df 88 03 00	movq	231647(%rip), %rsi ## Objc selector ref: reflectScrolledClipView:
100019199:	48 89 df	movq	%rbx, %rdi
10001919c:	48 89 c2	movq	%rax, %rdx
10001919f:	41 ff d5	callq	*%r13
1000191a2:	48 8b 35 a7 7c 03 00	movq	228519(%rip), %rsi ## Objc selector ref: centerPageViewFrame
1000191a9:	4c 89 ff	movq	%r15, %rdi
1000191ac:	41 ff d5	callq	*%r13
1000191af:	48 83 c4 48	addq	$72, %rsp
1000191b3:	5b	popq	%rbx
1000191b4:	41 5c	popq	%r12
1000191b6:	41 5d	popq	%r13
1000191b8:	41 5e	popq	%r14
1000191ba:	41 5f	popq	%r15
1000191bc:	5d	popq	%rbp
1000191bd:	c3	retq
1000191be:	55	pushq	%rbp
1000191bf:	48 89 e5	movq	%rsp, %rbp
1000191c2:	41 56	pushq	%r14
1000191c4:	53	pushq	%rbx
1000191c5:	48 89 fb	movq	%rdi, %rbx
1000191c8:	48 8b 35 39 81 03 00	movq	229689(%rip), %rsi ## Objc selector ref: handleZoomToScale:
1000191cf:	4c 8b 35 4a 3a 02 00	movq	145994(%rip), %r14 ## Objc message: -[%rdi handleZoomToScale:]
1000191d6:	41 ff d6	callq	*%r14
1000191d9:	48 8b 05 40 9c 03 00	movq	236608(%rip), %rax
1000191e0:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000191e4:	48 8b 35 dd 8d 03 00	movq	232925(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
1000191eb:	ba 01 00 00 00	movl	$1, %edx
1000191f0:	4c 89 f0	movq	%r14, %rax
1000191f3:	5b	popq	%rbx
1000191f4:	41 5e	popq	%r14
1000191f6:	5d	popq	%rbp
1000191f7:	ff e0	jmpq	*%rax
1000191f9:	55	pushq	%rbp
1000191fa:	48 89 e5	movq	%rsp, %rbp
1000191fd:	48 8b 05 2c 9c 03 00	movq	236588(%rip), %rax
100019204:	f3 0f 10 04 07	movss	(%rdi,%rax), %xmm0
100019209:	0f 2e 05 3c 00 02 00	ucomiss	131132(%rip), %xmm0
100019210:	73 1e	jae	0x100019230
100019212:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
100019216:	f2 0f 59 05 42 00 02 00	mulsd	131138(%rip), %xmm0
10001921e:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100019222:	48 8b 35 3f 93 03 00	movq	234303(%rip), %rsi ## Objc selector ref: zoomAction:
100019229:	5d	popq	%rbp
10001922a:	ff 25 f0 39 02 00	jmpq	*145904(%rip) ## Objc message: -[%rdi zoomAction:]
100019230:	5d	popq	%rbp
100019231:	e9 a2 60 01 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
100019236:	55	pushq	%rbp
100019237:	48 89 e5	movq	%rsp, %rbp
10001923a:	48 8b 05 ef 9b 03 00	movq	236527(%rip), %rax
100019241:	f3 0f 5a 04 07	cvtss2sd	(%rdi,%rax), %xmm0
100019246:	f2 0f 10 0d da ed 01 00	movsd	126426(%rip), %xmm1
10001924e:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
100019252:	73 1a	jae	0x10001926e
100019254:	f2 0f 5e 05 04 00 02 00	divsd	131076(%rip), %xmm0
10001925c:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100019260:	48 8b 35 01 93 03 00	movq	234241(%rip), %rsi ## Objc selector ref: zoomAction:
100019267:	5d	popq	%rbp
100019268:	ff 25 b2 39 02 00	jmpq	*145842(%rip) ## Objc message: -[%rdi zoomAction:]
10001926e:	5d	popq	%rbp
10001926f:	e9 64 60 01 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
100019274:	55	pushq	%rbp
100019275:	48 89 e5	movq	%rsp, %rbp
100019278:	41 57	pushq	%r15
10001927a:	41 56	pushq	%r14
10001927c:	53	pushq	%rbx
10001927d:	48 83 ec 58	subq	$88, %rsp
100019281:	48 89 fb	movq	%rdi, %rbx
100019284:	4c 8b 3d 9d 9b 03 00	movq	236445(%rip), %r15
10001928b:	4a 8b 34 3f	movq	(%rdi,%r15), %rsi
10001928f:	48 85 f6	testq	%rsi, %rsi
100019292:	74 2f	je	0x1000192c3
100019294:	48 8b 15 6d 7e 03 00	movq	228973(%rip), %rdx ## Objc selector ref: documentVisibleRect
10001929b:	4c 8d 75 90	leaq	-112(%rbp), %r14
10001929f:	4c 89 f7	movq	%r14, %rdi
1000192a2:	e8 3b 62 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
1000192a7:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
1000192ad:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
1000192b2:	f2 41 0f 10 46 18	movsd	24(%r14), %xmm0
1000192b8:	f2 0f 11 45 d8	movsd	%xmm0, -40(%rbp)
1000192bd:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000192c1:	eb 14	jmp	0x1000192d7
1000192c3:	66 0f 57 c0	xorpd	%xmm0, %xmm0
1000192c7:	f2 0f 11 45 d8	movsd	%xmm0, -40(%rbp)
1000192cc:	31 ff	xorl	%edi, %edi
1000192ce:	66 0f 57 c0	xorpd	%xmm0, %xmm0
1000192d2:	f2 0f 11 45 e0	movsd	%xmm0, -32(%rbp)
1000192d7:	48 8b 35 32 80 03 00	movq	229426(%rip), %rsi ## Objc selector ref: hasHorizontalScroller
1000192de:	ff 15 3c 39 02 00	callq	*145724(%rip) ## Objc message: -[%rdi hasHorizontalScroller]
1000192e4:	84 c0	testb	%al, %al
1000192e6:	74 22	je	0x10001930a
1000192e8:	48 8b 3d e9 93 03 00	movq	234473(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
1000192ef:	48 8b 35 fa 88 03 00	movq	231674(%rip), %rsi ## Objc selector ref: scrollerWidth
1000192f6:	ff 15 24 39 02 00	callq	*145700(%rip) ## Objc message: +[NSScroller scrollerWidth]
1000192fc:	f2 0f 10 4d d8	movsd	-40(%rbp), %xmm1
100019301:	f2 0f 58 c8	addsd	%xmm0, %xmm1
100019305:	f2 0f 11 4d d8	movsd	%xmm1, -40(%rbp)
10001930a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001930e:	48 8b 35 13 80 03 00	movq	229395(%rip), %rsi ## Objc selector ref: hasVerticalScroller
100019315:	ff 15 05 39 02 00	callq	*145669(%rip) ## Objc message: -[%rdi hasVerticalScroller]
10001931b:	84 c0	testb	%al, %al
10001931d:	74 22	je	0x100019341
10001931f:	48 8b 3d b2 93 03 00	movq	234418(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
100019326:	48 8b 35 c3 88 03 00	movq	231619(%rip), %rsi ## Objc selector ref: scrollerWidth
10001932d:	ff 15 ed 38 02 00	callq	*145645(%rip) ## Objc message: +[NSScroller scrollerWidth]
100019333:	f2 0f 10 4d e0	movsd	-32(%rbp), %xmm1
100019338:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10001933c:	f2 0f 11 4d e0	movsd	%xmm1, -32(%rbp)
100019341:	48 8b 05 d0 9a 03 00	movq	236240(%rip), %rax
100019348:	48 8b 34 03	movq	(%rbx,%rax), %rsi
10001934c:	48 85 f6	testq	%rsi, %rsi
10001934f:	74 21	je	0x100019372
100019351:	48 8b 15 78 7a 03 00	movq	227960(%rip), %rdx ## Objc selector ref: bounds
100019358:	4c 8d 75 b0	leaq	-80(%rbp), %r14
10001935c:	4c 89 f7	movq	%r14, %rdi
10001935f:	e8 7e 61 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100019364:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
10001936a:	f2 41 0f 10 4e 18	movsd	24(%r14), %xmm1
100019370:	eb 16	jmp	0x100019388
100019372:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100019376:	66 0f 29 45 c0	movapd	%xmm0, -64(%rbp)
10001937b:	66 0f 29 45 b0	movapd	%xmm0, -80(%rbp)
100019380:	66 0f 57 c9	xorpd	%xmm1, %xmm1
100019384:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100019388:	f2 0f 10 55 e0	movsd	-32(%rbp), %xmm2
10001938d:	f2 0f 5e d0	divsd	%xmm0, %xmm2
100019391:	0f 57 c0	xorps	%xmm0, %xmm0
100019394:	f2 0f 5a c2	cvtsd2ss	%xmm2, %xmm0
100019398:	0f 57 d2	xorps	%xmm2, %xmm2
10001939b:	f3 0f 5a d0	cvtss2sd	%xmm0, %xmm2
10001939f:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
1000193a3:	f2 0f 10 5d d8	movsd	-40(%rbp), %xmm3
1000193a8:	66 0f 2e d3	ucomisd	%xmm3, %xmm2
1000193ac:	76 0f	jbe	0x1000193bd
1000193ae:	66 0f 28 d3	movapd	%xmm3, %xmm2
1000193b2:	f2 0f 5e d1	divsd	%xmm1, %xmm2
1000193b6:	0f 57 c0	xorps	%xmm0, %xmm0
1000193b9:	f2 0f 5a c2	cvtsd2ss	%xmm2, %xmm0
1000193bd:	48 8b 35 44 7f 03 00	movq	229188(%rip), %rsi ## Objc selector ref: handleZoomToScale:
1000193c4:	4c 8b 35 55 38 02 00	movq	145493(%rip), %r14 ## Objc message: -[%rdi handleZoomToScale:]
1000193cb:	48 89 df	movq	%rbx, %rdi
1000193ce:	41 ff d6	callq	*%r14
1000193d1:	48 8b 05 48 9a 03 00	movq	236104(%rip), %rax
1000193d8:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000193dc:	48 8b 35 e5 8b 03 00	movq	232421(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
1000193e3:	ba 01 00 00 00	movl	$1, %edx
1000193e8:	41 ff d6	callq	*%r14
1000193eb:	48 83 c4 58	addq	$88, %rsp
1000193ef:	5b	popq	%rbx
1000193f0:	41 5e	popq	%r14
1000193f2:	41 5f	popq	%r15
1000193f4:	5d	popq	%rbp
1000193f5:	c3	retq
1000193f6:	55	pushq	%rbp
1000193f7:	48 89 e5	movq	%rsp, %rbp
1000193fa:	41 57	pushq	%r15
1000193fc:	41 56	pushq	%r14
1000193fe:	41 55	pushq	%r13
100019400:	41 54	pushq	%r12
100019402:	53	pushq	%rbx
100019403:	48 83 ec 48	subq	$72, %rsp
100019407:	48 89 fb	movq	%rdi, %rbx
10001940a:	48 8b 35 2f 7e 03 00	movq	228911(%rip), %rsi ## Objc selector ref: filterDocument
100019411:	4c 8b 35 08 38 02 00	movq	145416(%rip), %r14 ## Objc message: -[%rdi filterDocument]
100019418:	41 ff d6	callq	*%r14
10001941b:	49 89 c7	movq	%rax, %r15
10001941e:	48 8b 35 2b 83 03 00	movq	230187(%rip), %rsi ## Objc selector ref: metadata
100019425:	48 89 df	movq	%rbx, %rdi
100019428:	41 ff d6	callq	*%r14
10001942b:	4d 85 ff	testq	%r15, %r15
10001942e:	0f 84 1c 04 00 00	je	0x100019850
100019434:	49 89 c4	movq	%rax, %r12
100019437:	4c 89 ff	movq	%r15, %rdi
10001943a:	e8 bb 5a 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
10001943f:	49 89 c6	movq	%rax, %r14
100019442:	e8 2f 5d 01 00	callq	0x10002f176 ## symbol stub for: _CGImageGetTypeID
100019447:	49 39 c6	cmpq	%rax, %r14
10001944a:	0f 85 00 04 00 00	jne	0x100019850
100019450:	4c 89 65 c0	movq	%r12, -64(%rbp)
100019454:	48 89 5d a0	movq	%rbx, -96(%rbp)
100019458:	4c 89 ff	movq	%r15, %rdi
10001945b:	e8 ec 5c 01 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100019460:	49 89 c5	movq	%rax, %r13
100019463:	48 89 c7	movq	%rax, %rdi
100019466:	e8 bb 5b 01 00	callq	0x10002f026 ## symbol stub for: _CGColorSpaceGetType
10001946b:	89 c3	movl	%eax, %ebx
10001946d:	4c 89 ef	movq	%r13, %rdi
100019470:	e8 9f 5b 01 00	callq	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
100019475:	89 45 b8	movl	%eax, -72(%rbp)
100019478:	4c 89 ef	movq	%r13, %rdi
10001947b:	e8 58 5b 01 00	callq	0x10002efd8 ## symbol stub for: _CGColorSpaceCopyICCProfileDescription
100019480:	48 89 45 c8	movq	%rax, -56(%rbp)
100019484:	4c 8b 25 3d 91 03 00	movq	233789(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSString
10001948b:	4c 89 ff	movq	%r15, %rdi
10001948e:	e8 e9 5c 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100019493:	49 89 c6	movq	%rax, %r14
100019496:	4c 89 ff	movq	%r15, %rdi
100019499:	e8 c0 5c 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10001949e:	48 8b 35 83 8e 03 00	movq	233091(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000194a5:	48 8d 15 b4 46 02 00	leaq	149172(%rip), %rdx ## Objc cfstring ref: @"%d x %d"
1000194ac:	4c 89 e7	movq	%r12, %rdi
1000194af:	44 89 f1	movl	%r14d, %ecx
1000194b2:	41 89 c0	movl	%eax, %r8d
1000194b5:	31 c0	xorl	%eax, %eax
1000194b7:	ff 15 63 37 02 00	callq	*145251(%rip) ## Objc message: +[NSString stringWithFormat:]
1000194bd:	49 89 c6	movq	%rax, %r14
1000194c0:	89 5d d4	movl	%ebx, -44(%rbp)
1000194c3:	83 fb 07	cmpl	$7, %ebx
1000194c6:	75 14	jne	0x1000194dc
1000194c8:	4c 89 ef	movq	%r13, %rdi
1000194cb:	e8 32 5b 01 00	callq	0x10002f002 ## symbol stub for: _CGColorSpaceGetBaseColorSpace
1000194d0:	48 89 c7	movq	%rax, %rdi
1000194d3:	e8 00 5b 01 00	callq	0x10002efd8 ## symbol stub for: _CGColorSpaceCopyICCProfileDescription
1000194d8:	48 89 45 c8	movq	%rax, -56(%rbp)
1000194dc:	48 8b 5d c0	movq	-64(%rbp), %rbx
1000194e0:	48 8d 05 b9 39 02 00	leaq	145849(%rip), %rax ## Objc cfstring ref: @""
1000194e7:	48 85 db	testq	%rbx, %rbx
1000194ea:	4c 8b 25 2f 37 02 00	movq	145199(%rip), %r12 ## Objc message: -[%rdi stringWithFormat:]
1000194f1:	48 89 45 c0	movq	%rax, -64(%rbp)
1000194f5:	4c 89 6d b0	movq	%r13, -80(%rbp)
1000194f9:	74 70	je	0x10001956b
1000194fb:	48 8b 05 ce 34 02 00	movq	144590(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIWidth
100019502:	48 8b 30	movq	(%rax), %rsi
100019505:	48 89 df	movq	%rbx, %rdi
100019508:	e8 d5 59 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10001950d:	49 89 c5	movq	%rax, %r13
100019510:	48 8b 05 b1 34 02 00	movq	144561(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIHeight
100019517:	48 8b 30	movq	(%rax), %rsi
10001951a:	48 89 df	movq	%rbx, %rdi
10001951d:	e8 c0 59 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100019522:	4d 85 ed	testq	%r13, %r13
100019525:	74 44	je	0x10001956b
100019527:	49 89 c7	movq	%rax, %r15
10001952a:	48 85 c0	testq	%rax, %rax
10001952d:	74 3c	je	0x10001956b
10001952f:	4c 89 ef	movq	%r13, %rdi
100019532:	4c 89 fe	movq	%r15, %rsi
100019535:	e8 ba 59 01 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
10001953a:	84 c0	testb	%al, %al
10001953c:	74 06	je	0x100019544
10001953e:	4c 89 6d c0	movq	%r13, -64(%rbp)
100019542:	eb 27	jmp	0x10001956b
100019544:	48 8b 3d 7d 90 03 00	movq	233597(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001954b:	48 8d 15 ae 49 02 00	leaq	149934(%rip), %rdx ## Objc cfstring ref: @"%@ x %@"
100019552:	48 8b 35 cf 8d 03 00	movq	232911(%rip), %rsi ## Objc selector ref: stringWithFormat:
100019559:	4c 89 e9	movq	%r13, %rcx
10001955c:	4d 89 f8	movq	%r15, %r8
10001955f:	31 c0	xorl	%eax, %eax
100019561:	ff 15 b9 36 02 00	callq	*145081(%rip) ## Objc message: +[NSString stringWithFormat:]
100019567:	48 89 45 c0	movq	%rax, -64(%rbp)
10001956b:	8b 45 b8	movl	-72(%rbp), %eax
10001956e:	83 f8 03	cmpl	$3, %eax
100019571:	4c 89 75 a8	movq	%r14, -88(%rbp)
100019575:	77 78	ja	0x1000195ef
100019577:	89 c0	movl	%eax, %eax
100019579:	48 8d 0d e0 02 00 00	leaq	736(%rip), %rcx
100019580:	48 63 04 81	movslq	(%rcx,%rax,4), %rax
100019584:	48 01 c8	addq	%rcx, %rax
100019587:	ff e0	jmpq	*%rax
100019589:	48 8b 3d 10 90 03 00	movq	233488(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100019590:	4c 8b 3d 51 81 03 00	movq	229713(%rip), %r15 ## Objc selector ref: mainBundle
100019597:	4c 89 fe	movq	%r15, %rsi
10001959a:	41 ff d4	callq	*%r12
10001959d:	4c 8b 35 bc 80 03 00	movq	229564(%rip), %r14 ## Objc selector ref: localizedStringForKey:value:table:
1000195a4:	48 8d 15 75 49 02 00	leaq	149877(%rip), %rdx ## Objc cfstring ref: @"Gray"
1000195ab:	48 8d 1d ee 38 02 00	leaq	145646(%rip), %rbx ## Objc cfstring ref: @""
1000195b2:	48 89 c7	movq	%rax, %rdi
1000195b5:	4c 89 f6	movq	%r14, %rsi
1000195b8:	48 89 d9	movq	%rbx, %rcx
1000195bb:	45 31 c0	xorl	%r8d, %r8d
1000195be:	41 ff d4	callq	*%r12
1000195c1:	49 89 c5	movq	%rax, %r13
1000195c4:	48 8b 3d d5 8f 03 00	movq	233429(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000195cb:	4c 89 fe	movq	%r15, %rsi
1000195ce:	41 ff d4	callq	*%r12
1000195d1:	48 8d 15 68 49 02 00	leaq	149864(%rip), %rdx ## Objc cfstring ref: @"(Generic Gray Gamma 2.2 used when converting image)"
1000195d8:	48 89 c7	movq	%rax, %rdi
1000195db:	4c 89 f6	movq	%r14, %rsi
1000195de:	48 89 d9	movq	%rbx, %rcx
1000195e1:	45 31 c0	xorl	%r8d, %r8d
1000195e4:	41 ff d4	callq	*%r12
1000195e7:	4d 89 ec	movq	%r13, %r12
1000195ea:	e9 d9 00 00 00	jmp	0x1000196c8
1000195ef:	48 8b 3d aa 8f 03 00	movq	233386(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000195f6:	4c 8b 3d eb 80 03 00	movq	229611(%rip), %r15 ## Objc selector ref: mainBundle
1000195fd:	4c 89 fe	movq	%r15, %rsi
100019600:	41 ff d4	callq	*%r12
100019603:	4c 8b 35 56 80 03 00	movq	229462(%rip), %r14 ## Objc selector ref: localizedStringForKey:value:table:
10001960a:	48 8d 15 cf 49 02 00	leaq	149967(%rip), %rdx ## Objc cfstring ref: @"Unknown"
100019611:	e9 d9 00 00 00	jmp	0x1000196ef
100019616:	48 8b 3d 83 8f 03 00	movq	233347(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001961d:	4c 8b 3d c4 80 03 00	movq	229572(%rip), %r15 ## Objc selector ref: mainBundle
100019624:	4c 89 fe	movq	%r15, %rsi
100019627:	41 ff d4	callq	*%r12
10001962a:	4c 8b 35 2f 80 03 00	movq	229423(%rip), %r14 ## Objc selector ref: localizedStringForKey:value:table:
100019631:	48 8d 15 28 49 02 00	leaq	149800(%rip), %rdx ## Objc cfstring ref: @"RGB"
100019638:	4c 8d 2d 61 38 02 00	leaq	145505(%rip), %r13 ## Objc cfstring ref: @""
10001963f:	48 89 c7	movq	%rax, %rdi
100019642:	4c 89 f6	movq	%r14, %rsi
100019645:	4c 89 e9	movq	%r13, %rcx
100019648:	45 31 c0	xorl	%r8d, %r8d
10001964b:	41 ff d4	callq	*%r12
10001964e:	48 89 c3	movq	%rax, %rbx
100019651:	48 8b 3d 48 8f 03 00	movq	233288(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100019658:	4c 89 fe	movq	%r15, %rsi
10001965b:	41 ff d4	callq	*%r12
10001965e:	48 8d 15 1b 49 02 00	leaq	149787(%rip), %rdx ## Objc cfstring ref: @"(sRGB used when converting image)"
100019665:	eb 4f	jmp	0x1000196b6
100019667:	48 8b 3d 32 8f 03 00	movq	233266(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001966e:	4c 8b 3d 73 80 03 00	movq	229491(%rip), %r15 ## Objc selector ref: mainBundle
100019675:	4c 89 fe	movq	%r15, %rsi
100019678:	41 ff d4	callq	*%r12
10001967b:	4c 8b 35 de 7f 03 00	movq	229342(%rip), %r14 ## Objc selector ref: localizedStringForKey:value:table:
100019682:	48 8d 15 17 49 02 00	leaq	149783(%rip), %rdx ## Objc cfstring ref: @"CMYK"
100019689:	4c 8d 2d 10 38 02 00	leaq	145424(%rip), %r13 ## Objc cfstring ref: @""
100019690:	48 89 c7	movq	%rax, %rdi
100019693:	4c 89 f6	movq	%r14, %rsi
100019696:	4c 89 e9	movq	%r13, %rcx
100019699:	45 31 c0	xorl	%r8d, %r8d
10001969c:	41 ff d4	callq	*%r12
10001969f:	48 89 c3	movq	%rax, %rbx
1000196a2:	48 8b 3d f7 8e 03 00	movq	233207(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000196a9:	4c 89 fe	movq	%r15, %rsi
1000196ac:	41 ff d4	callq	*%r12
1000196af:	48 8d 15 0a 49 02 00	leaq	149770(%rip), %rdx ## Objc cfstring ref: @"(Generic CMYK used when converting image)"
1000196b6:	48 89 c7	movq	%rax, %rdi
1000196b9:	4c 89 f6	movq	%r14, %rsi
1000196bc:	4c 89 e9	movq	%r13, %rcx
1000196bf:	45 31 c0	xorl	%r8d, %r8d
1000196c2:	41 ff d4	callq	*%r12
1000196c5:	49 89 dc	movq	%rbx, %r12
1000196c8:	48 89 c3	movq	%rax, %rbx
1000196cb:	eb 3b	jmp	0x100019708
1000196cd:	48 8b 3d cc 8e 03 00	movq	233164(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000196d4:	4c 8b 3d 0d 80 03 00	movq	229389(%rip), %r15 ## Objc selector ref: mainBundle
1000196db:	4c 89 fe	movq	%r15, %rsi
1000196de:	41 ff d4	callq	*%r12
1000196e1:	4c 8b 35 78 7f 03 00	movq	229240(%rip), %r14 ## Objc selector ref: localizedStringForKey:value:table:
1000196e8:	48 8d 15 91 3e 02 00	leaq	147089(%rip), %rdx ## Objc cfstring ref: @"Lab"
1000196ef:	48 8d 1d aa 37 02 00	leaq	145322(%rip), %rbx ## Objc cfstring ref: @""
1000196f6:	48 89 c7	movq	%rax, %rdi
1000196f9:	4c 89 f6	movq	%r14, %rsi
1000196fc:	48 89 d9	movq	%rbx, %rcx
1000196ff:	45 31 c0	xorl	%r8d, %r8d
100019702:	41 ff d4	callq	*%r12
100019705:	49 89 c4	movq	%rax, %r12
100019708:	48 8b 45 c8	movq	-56(%rbp), %rax
10001970c:	44 8b 6d d4	movl	-44(%rbp), %r13d
100019710:	48 85 c0	testq	%rax, %rax
100019713:	74 09	je	0x10001971e
100019715:	48 8d 1d 84 37 02 00	leaq	145284(%rip), %rbx ## Objc cfstring ref: @""
10001971c:	eb 47	jmp	0x100019765
10001971e:	48 8b 7d b0	movq	-80(%rbp), %rdi
100019722:	e8 05 59 01 00	callq	0x10002f02c ## symbol stub for: _CGColorSpaceIsICCCompatible
100019727:	84 c0	testb	%al, %al
100019729:	74 33	je	0x10001975e
10001972b:	48 8b 3d 6e 8e 03 00	movq	233070(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100019732:	4c 89 fe	movq	%r15, %rsi
100019735:	4c 8b 3d e4 34 02 00	movq	144612(%rip), %r15 ## Objc message: +[NSBundle localizedStringForKey:value:table:]
10001973c:	41 ff d7	callq	*%r15
10001973f:	48 8d 15 ba 48 02 00	leaq	149690(%rip), %rdx ## Objc cfstring ref: @"Unnamed Profile"
100019746:	48 8d 1d 53 37 02 00	leaq	145235(%rip), %rbx ## Objc cfstring ref: @""
10001974d:	48 89 c7	movq	%rax, %rdi
100019750:	4c 89 f6	movq	%r14, %rsi
100019753:	48 89 d9	movq	%rbx, %rcx
100019756:	45 31 c0	xorl	%r8d, %r8d
100019759:	41 ff d7	callq	*%r15
10001975c:	eb 07	jmp	0x100019765
10001975e:	48 8d 05 bb 48 02 00	leaq	149691(%rip), %rax ## Objc cfstring ref: @"-"
100019765:	48 89 45 b8	movq	%rax, -72(%rbp)
100019769:	49 89 de	movq	%rbx, %r14
10001976c:	41 83 fd 07	cmpl	$7, %r13d
100019770:	75 23	jne	0x100019795
100019772:	48 8b 3d 4f 8e 03 00	movq	233039(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100019779:	48 8d 15 c0 48 02 00	leaq	149696(%rip), %rdx ## Objc cfstring ref: @"%@ (Indexed)"
100019780:	48 8b 35 a1 8b 03 00	movq	232353(%rip), %rsi ## Objc selector ref: stringWithFormat:
100019787:	4c 89 e1	movq	%r12, %rcx
10001978a:	31 c0	xorl	%eax, %eax
10001978c:	ff 15 8e 34 02 00	callq	*144526(%rip) ## Objc message: +[NSString stringWithFormat:]
100019792:	49 89 c4	movq	%rax, %r12
100019795:	48 8b 05 9c 97 03 00	movq	235420(%rip), %rax
10001979c:	48 8b 5d a0	movq	-96(%rbp), %rbx
1000197a0:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000197a4:	4c 8b 2d 45 89 03 00	movq	231749(%rip), %r13 ## Objc selector ref: setStringValue:
1000197ab:	4c 89 ee	movq	%r13, %rsi
1000197ae:	48 8b 55 a8	movq	-88(%rbp), %rdx
1000197b2:	4c 8b 3d 67 34 02 00	movq	144487(%rip), %r15 ## Objc message: -[%rdi setStringValue:]
1000197b9:	41 ff d7	callq	*%r15
1000197bc:	48 8b 05 7d 97 03 00	movq	235389(%rip), %rax
1000197c3:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000197c7:	4c 89 ee	movq	%r13, %rsi
1000197ca:	48 8b 55 c0	movq	-64(%rbp), %rdx
1000197ce:	41 ff d7	callq	*%r15
1000197d1:	48 8b 05 70 97 03 00	movq	235376(%rip), %rax
1000197d8:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000197dc:	4c 89 ee	movq	%r13, %rsi
1000197df:	4c 89 e2	movq	%r12, %rdx
1000197e2:	41 ff d7	callq	*%r15
1000197e5:	48 8b 05 64 97 03 00	movq	235364(%rip), %rax
1000197ec:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
1000197f0:	4c 89 ee	movq	%r13, %rsi
1000197f3:	48 8b 55 b8	movq	-72(%rbp), %rdx
1000197f7:	41 ff d7	callq	*%r15
1000197fa:	48 8b 05 57 97 03 00	movq	235351(%rip), %rax
100019801:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100019805:	4c 89 ee	movq	%r13, %rsi
100019808:	4c 89 f2	movq	%r14, %rdx
10001980b:	41 ff d7	callq	*%r15
10001980e:	48 8b 7d c8	movq	-56(%rbp), %rdi
100019812:	ff 15 40 34 02 00	callq	*144448(%rip) ## literal pool symbol address: _objc_release
100019818:	48 8b 05 19 2e 02 00	movq	142873(%rip), %rax ## literal pool symbol address: _NSApp
10001981f:	48 8b 38	movq	(%rax), %rdi
100019822:	48 8b 05 37 97 03 00	movq	235319(%rip), %rax
100019829:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10001982d:	48 8b 05 d4 95 03 00	movq	234964(%rip), %rax
100019834:	48 8b 0c 03	movq	(%rbx,%rax), %rcx
100019838:	48 8b 35 39 75 03 00	movq	226617(%rip), %rsi ## Objc selector ref: beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:
10001983f:	48 c7 04 24 00 00 00 00	movq	$0, (%rsp)
100019847:	49 89 d8	movq	%rbx, %r8
10001984a:	45 31 c9	xorl	%r9d, %r9d
10001984d:	41 ff d7	callq	*%r15
100019850:	48 83 c4 48	addq	$72, %rsp
100019854:	5b	popq	%rbx
100019855:	41 5c	popq	%r12
100019857:	41 5d	popq	%r13
100019859:	41 5e	popq	%r14
10001985b:	41 5f	popq	%r15
10001985d:	5d	popq	%rbp
10001985e:	c3	retq
10001985f:	90	nop
29 fd ff ff	.long 4294966569	@ KIND_JUMP_TABLE32
b6 fd ff ff	.long 4294966710	@ KIND_JUMP_TABLE32
07 fe ff ff	.long 4294966791	@ KIND_JUMP_TABLE32
6d fe ff ff	.long 4294966893	@ KIND_JUMP_TABLE32
100019870:	55	pushq	%rbp
100019871:	48 89 e5	movq	%rsp, %rbp
100019874:	41 57	pushq	%r15
100019876:	41 56	pushq	%r14
100019878:	41 55	pushq	%r13
10001987a:	41 54	pushq	%r12
10001987c:	53	pushq	%rbx
10001987d:	50	pushq	%rax
10001987e:	49 89 fc	movq	%rdi, %r12
100019881:	48 8b 35 b8 79 03 00	movq	227768(%rip), %rsi ## Objc selector ref: filterDocument
100019888:	ff 15 92 33 02 00	callq	*144274(%rip) ## Objc message: -[%rdi filterDocument]
10001988e:	48 85 c0	testq	%rax, %rax
100019891:	0f 84 bf 01 00 00	je	0x100019a56
100019897:	48 89 c3	movq	%rax, %rbx
10001989a:	48 89 c7	movq	%rax, %rdi
10001989d:	e8 58 56 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
1000198a2:	49 89 c6	movq	%rax, %r14
1000198a5:	e8 cc 58 01 00	callq	0x10002f176 ## symbol stub for: _CGImageGetTypeID
1000198aa:	49 39 c6	cmpq	%rax, %r14
1000198ad:	0f 85 a3 01 00 00	jne	0x100019a56
1000198b3:	4c 8b 35 0e 8d 03 00	movq	232718(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSString
1000198ba:	48 89 df	movq	%rbx, %rdi
1000198bd:	e8 ba 58 01 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
1000198c2:	49 89 c7	movq	%rax, %r15
1000198c5:	48 89 df	movq	%rbx, %rdi
1000198c8:	e8 91 58 01 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000198cd:	48 8b 35 54 8a 03 00	movq	232020(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000198d4:	48 8d 15 85 42 02 00	leaq	148101(%rip), %rdx ## Objc cfstring ref: @"%d x %d"
1000198db:	4c 8b 2d 3e 33 02 00	movq	144190(%rip), %r13 ## Objc message: +[NSString stringWithFormat:]
1000198e2:	4c 89 f7	movq	%r14, %rdi
1000198e5:	44 89 f9	movl	%r15d, %ecx
1000198e8:	41 89 c0	movl	%eax, %r8d
1000198eb:	31 c0	xorl	%eax, %eax
1000198ed:	41 ff d5	callq	*%r13
1000198f0:	48 8b 35 c9 85 03 00	movq	230857(%rip), %rsi ## Objc selector ref: setImageSizeDimension:
1000198f7:	4c 89 e7	movq	%r12, %rdi
1000198fa:	48 89 c2	movq	%rax, %rdx
1000198fd:	41 ff d5	callq	*%r13
100019900:	48 8b 35 49 7e 03 00	movq	228937(%rip), %rsi ## Objc selector ref: metadata
100019907:	4c 89 e7	movq	%r12, %rdi
10001990a:	41 ff d5	callq	*%r13
10001990d:	4c 8b 35 54 96 03 00	movq	235092(%rip), %r14
100019914:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
100019918:	48 8b 35 d1 84 03 00	movq	230609(%rip), %rsi ## Objc selector ref: setEnabled:
10001991f:	48 85 c0	testq	%rax, %rax
100019922:	74 65	je	0x100019989
100019924:	48 89 c3	movq	%rax, %rbx
100019927:	ba 01 00 00 00	movl	$1, %edx
10001992c:	ff 15 ee 32 02 00	callq	*144110(%rip) ## Objc message: -[%rdi setEnabled:]
100019932:	48 8b 05 97 30 02 00	movq	143511(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIWidth
100019939:	48 8b 30	movq	(%rax), %rsi
10001993c:	48 89 df	movq	%rbx, %rdi
10001993f:	e8 9e 55 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100019944:	49 89 c7	movq	%rax, %r15
100019947:	48 8b 05 7a 30 02 00	movq	143482(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIHeight
10001994e:	48 8b 30	movq	(%rax), %rsi
100019951:	48 89 df	movq	%rbx, %rdi
100019954:	e8 89 55 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100019959:	4d 85 ff	testq	%r15, %r15
10001995c:	74 33	je	0x100019991
10001995e:	48 85 c0	testq	%rax, %rax
100019961:	74 2e	je	0x100019991
100019963:	4c 89 ff	movq	%r15, %rdi
100019966:	48 89 c6	movq	%rax, %rsi
100019969:	e8 86 55 01 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
10001996e:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
100019972:	84 c0	testb	%al, %al
100019974:	74 0c	je	0x100019982
100019976:	48 8b 35 23 8a 03 00	movq	231971(%rip), %rsi ## Objc selector ref: takeIntValueFrom:
10001997d:	4c 89 fa	movq	%r15, %rdx
100019980:	eb 21	jmp	0x1000199a3
100019982:	48 8b 35 67 84 03 00	movq	230503(%rip), %rsi ## Objc selector ref: setEnabled:
100019989:	31 d2	xorl	%edx, %edx
10001998b:	ff 15 8f 32 02 00	callq	*144015(%rip) ## Objc message: -[%rdi setEnabled:]
100019991:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
100019995:	48 8b 35 54 87 03 00	movq	231252(%rip), %rsi ## Objc selector ref: setStringValue:
10001999c:	48 8d 15 fd 34 02 00	leaq	144637(%rip), %rdx ## Objc cfstring ref: @""
1000199a3:	ff 15 77 32 02 00	callq	*143991(%rip) ## Objc message: -[%rdi setStringValue:]
1000199a9:	48 8b 05 c0 95 03 00	movq	234944(%rip), %rax
1000199b0:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000199b4:	48 8b 1d 4d 82 03 00	movq	229965(%rip), %rbx ## Objc selector ref: selectItemAtIndex:
1000199bb:	48 89 de	movq	%rbx, %rsi
1000199be:	31 d2	xorl	%edx, %edx
1000199c0:	41 ff d5	callq	*%r13
1000199c3:	48 8b 05 ae 95 03 00	movq	234926(%rip), %rax
1000199ca:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000199ce:	ba 02 00 00 00	movl	$2, %edx
1000199d3:	48 89 de	movq	%rbx, %rsi
1000199d6:	41 ff d5	callq	*%r13
1000199d9:	48 8b 35 f8 84 03 00	movq	230648(%rip), %rsi ## Objc selector ref: setImageSizeScaleSelected:
1000199e0:	4c 89 e7	movq	%r12, %rdi
1000199e3:	ba 01 00 00 00	movl	$1, %edx
1000199e8:	41 ff d5	callq	*%r13
1000199eb:	48 8b 35 f6 84 03 00	movq	230646(%rip), %rsi ## Objc selector ref: setImageSizeWidthSelected:
1000199f2:	4c 89 e7	movq	%r12, %rdi
1000199f5:	31 d2	xorl	%edx, %edx
1000199f7:	41 ff d5	callq	*%r13
1000199fa:	48 8b 35 c7 84 03 00	movq	230599(%rip), %rsi ## Objc selector ref: setImageSizeHeightSelected:
100019a01:	4c 89 e7	movq	%r12, %rdi
100019a04:	31 d2	xorl	%edx, %edx
100019a06:	41 ff d5	callq	*%r13
100019a09:	48 8b 35 d0 84 03 00	movq	230608(%rip), %rsi ## Objc selector ref: setImageSizeScaleValue:
100019a10:	f3 0f 10 05 34 f8 01 00	movss	129076(%rip), %xmm0
100019a18:	4c 89 e7	movq	%r12, %rdi
100019a1b:	41 ff d5	callq	*%r13
100019a1e:	48 8b 05 13 2c 02 00	movq	142355(%rip), %rax ## literal pool symbol address: _NSApp
100019a25:	48 8b 38	movq	(%rax), %rdi
100019a28:	48 8b 05 51 95 03 00	movq	234833(%rip), %rax
100019a2f:	49 8b 14 04	movq	(%r12,%rax), %rdx
100019a33:	48 8b 05 ce 93 03 00	movq	234446(%rip), %rax
100019a3a:	49 8b 0c 04	movq	(%r12,%rax), %rcx
100019a3e:	48 8b 35 33 73 03 00	movq	226099(%rip), %rsi ## Objc selector ref: beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:
100019a45:	48 c7 04 24 00 00 00 00	movq	$0, (%rsp)
100019a4d:	4d 89 e0	movq	%r12, %r8
100019a50:	45 31 c9	xorl	%r9d, %r9d
100019a53:	41 ff d5	callq	*%r13
100019a56:	48 83 c4 08	addq	$8, %rsp
100019a5a:	5b	popq	%rbx
100019a5b:	41 5c	popq	%r12
100019a5d:	41 5d	popq	%r13
100019a5f:	41 5e	popq	%r14
100019a61:	41 5f	popq	%r15
100019a63:	5d	popq	%rbp
100019a64:	c3	retq
100019a65:	55	pushq	%rbp
100019a66:	48 89 e5	movq	%rsp, %rbp
100019a69:	48 8b 35 50 7e 03 00	movq	228944(%rip), %rsi ## Objc selector ref: openImageCorrection
100019a70:	5d	popq	%rbp
100019a71:	ff 25 a9 31 02 00	jmpq	*143785(%rip) ## Objc message: -[%rdi openImageCorrection]
100019a77:	55	pushq	%rbp
100019a78:	48 89 e5	movq	%rsp, %rbp
100019a7b:	41 56	pushq	%r14
100019a7d:	53	pushq	%rbx
100019a7e:	4c 8b 35 6b 93 03 00	movq	234347(%rip), %r14
100019a85:	4a 83 3c 37 00	cmpq	$0, (%rdi,%r14)
100019a8a:	74 05	je	0x100019a91
100019a8c:	5b	popq	%rbx
100019a8d:	41 5e	popq	%r14
100019a8f:	5d	popq	%rbp
100019a90:	c3	retq
100019a91:	48 89 fb	movq	%rdi, %rbx
100019a94:	48 8b 3d 45 8c 03 00	movq	232517(%rip), %rdi ## Objc class ref: FilterImageCorrection
100019a9b:	e8 24 5a 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
100019aa0:	4a 89 04 33	movq	%rax, (%rbx,%r14)
100019aa4:	48 8b 35 1d 7e 03 00	movq	228893(%rip), %rsi ## Objc selector ref: openImageCorrection:
100019aab:	48 89 c7	movq	%rax, %rdi
100019aae:	48 89 da	movq	%rbx, %rdx
100019ab1:	5b	popq	%rbx
100019ab2:	41 5e	popq	%r14
100019ab4:	5d	popq	%rbp
100019ab5:	ff 25 65 31 02 00	jmpq	*143717(%rip) ## Objc message: +[FilterImageCorrection openImageCorrection:]
100019abb:	55	pushq	%rbp
100019abc:	48 89 e5	movq	%rsp, %rbp
100019abf:	48 8b 0d 2a 93 03 00	movq	234282(%rip), %rcx
100019ac6:	48 8b 04 0f	movq	(%rdi,%rcx), %rax
100019aca:	48 85 c0	testq	%rax, %rax
100019acd:	74 12	je	0x100019ae1
100019acf:	48 c7 04 0f 00 00 00 00	movq	$0, (%rdi,%rcx)
100019ad7:	48 89 c7	movq	%rax, %rdi
100019ada:	5d	popq	%rbp
100019adb:	ff 25 77 31 02 00	jmpq	*143735(%rip) ## literal pool symbol address: _objc_release
100019ae1:	5d	popq	%rbp
100019ae2:	c3	retq
100019ae3:	55	pushq	%rbp
100019ae4:	48 89 e5	movq	%rsp, %rbp
100019ae7:	41 57	pushq	%r15
100019ae9:	41 56	pushq	%r14
100019aeb:	41 55	pushq	%r13
100019aed:	41 54	pushq	%r12
100019aef:	53	pushq	%rbx
100019af0:	50	pushq	%rax
100019af1:	48 89 fb	movq	%rdi, %rbx
100019af4:	4c 8b 3d f5 89 03 00	movq	231925(%rip), %r15 ## Objc selector ref: wholeDocumentAndSettings
100019afb:	4c 8b 25 1e 31 02 00	movq	143646(%rip), %r12 ## Objc message: -[%rdi wholeDocumentAndSettings]
100019b02:	4c 89 fe	movq	%r15, %rsi
100019b05:	41 ff d4	callq	*%r12
100019b08:	4c 8b 2d 51 31 02 00	movq	143697(%rip), %r13 ## literal pool symbol address: _objc_retain
100019b0f:	48 89 c7	movq	%rax, %rdi
100019b12:	41 ff d5	callq	*%r13
100019b15:	49 89 c6	movq	%rax, %r14
100019b18:	48 8b 35 b1 7d 03 00	movq	228785(%rip), %rsi ## Objc selector ref: openToneMapping
100019b1f:	48 89 df	movq	%rbx, %rdi
100019b22:	41 ff d4	callq	*%r12
100019b25:	48 8b 35 2c 89 03 00	movq	231724(%rip), %rsi ## Objc selector ref: updatePreview
100019b2c:	48 89 df	movq	%rbx, %rdi
100019b2f:	41 ff d4	callq	*%r12
100019b32:	48 89 df	movq	%rbx, %rdi
100019b35:	4c 89 fe	movq	%r15, %rsi
100019b38:	41 ff d4	callq	*%r12
100019b3b:	48 89 c7	movq	%rax, %rdi
100019b3e:	41 ff d5	callq	*%r13
100019b41:	49 89 c7	movq	%rax, %r15
100019b44:	4c 8b 2d e5 93 03 00	movq	234469(%rip), %r13
100019b4b:	42 c6 04 2b 01	movb	$1, (%rbx,%r13)
100019b50:	48 8b 3d 59 8a 03 00	movq	232025(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100019b57:	48 8b 35 da 71 03 00	movq	225754(%rip), %rsi ## Objc selector ref: arrayWithObjects:
100019b5e:	4c 89 f2	movq	%r14, %rdx
100019b61:	48 89 c1	movq	%rax, %rcx
100019b64:	45 31 c0	xorl	%r8d, %r8d
100019b67:	31 c0	xorl	%eax, %eax
100019b69:	41 ff d4	callq	*%r12
100019b6c:	48 8b 35 85 86 03 00	movq	231045(%rip), %rsi ## Objc selector ref: setupToneMappingUndo:
100019b73:	48 89 df	movq	%rbx, %rdi
100019b76:	48 89 c2	movq	%rax, %rdx
100019b79:	41 ff d4	callq	*%r12
100019b7c:	42 c6 04 2b 00	movb	$0, (%rbx,%r13)
100019b81:	48 8b 1d d0 30 02 00	movq	143568(%rip), %rbx ## literal pool symbol address: _objc_release
100019b88:	4c 89 f7	movq	%r14, %rdi
100019b8b:	ff d3	callq	*%rbx
100019b8d:	4c 89 ff	movq	%r15, %rdi
100019b90:	48 89 d8	movq	%rbx, %rax
100019b93:	48 83 c4 08	addq	$8, %rsp
100019b97:	5b	popq	%rbx
100019b98:	41 5c	popq	%r12
100019b9a:	41 5d	popq	%r13
100019b9c:	41 5e	popq	%r14
100019b9e:	41 5f	popq	%r15
100019ba0:	5d	popq	%rbp
100019ba1:	ff e0	jmpq	*%rax
100019ba3:	55	pushq	%rbp
100019ba4:	48 89 e5	movq	%rsp, %rbp
100019ba7:	41 56	pushq	%r14
100019ba9:	53	pushq	%rbx
100019baa:	4c 8b 35 47 92 03 00	movq	234055(%rip), %r14
100019bb1:	4a 83 3c 37 00	cmpq	$0, (%rdi,%r14)
100019bb6:	74 05	je	0x100019bbd
100019bb8:	5b	popq	%rbx
100019bb9:	41 5e	popq	%r14
100019bbb:	5d	popq	%rbp
100019bbc:	c3	retq
100019bbd:	48 89 fb	movq	%rdi, %rbx
100019bc0:	48 8b 3d 21 8b 03 00	movq	232225(%rip), %rdi ## Objc class ref: FilterToneMapping
100019bc7:	e8 f8 58 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
100019bcc:	4a 89 04 33	movq	%rax, (%rbx,%r14)
100019bd0:	48 8b 35 01 7d 03 00	movq	228609(%rip), %rsi ## Objc selector ref: openToneMapping:
100019bd7:	48 89 c7	movq	%rax, %rdi
100019bda:	48 89 da	movq	%rbx, %rdx
100019bdd:	5b	popq	%rbx
100019bde:	41 5e	popq	%r14
100019be0:	5d	popq	%rbp
100019be1:	ff 25 39 30 02 00	jmpq	*143417(%rip) ## Objc message: +[FilterToneMapping openToneMapping:]
100019be7:	55	pushq	%rbp
100019be8:	48 89 e5	movq	%rsp, %rbp
100019beb:	53	pushq	%rbx
100019bec:	50	pushq	%rax
100019bed:	48 8b 05 04 92 03 00	movq	233988(%rip), %rax
100019bf4:	48 8b 1c 07	movq	(%rdi,%rax), %rbx
100019bf8:	48 85 db	testq	%rbx, %rbx
100019bfb:	74 2a	je	0x100019c27
100019bfd:	48 c7 04 07 00 00 00 00	movq	$0, (%rdi,%rax)
100019c05:	48 8b 35 94 72 03 00	movq	225940(%rip), %rsi ## Objc selector ref: closeToneMapping:
100019c0c:	0f be d2	movsbl	%dl, %edx
100019c0f:	48 89 df	movq	%rbx, %rdi
100019c12:	ff 15 08 30 02 00	callq	*143368(%rip) ## Objc message: -[%rdi closeToneMapping:]
100019c18:	48 89 df	movq	%rbx, %rdi
100019c1b:	48 83 c4 08	addq	$8, %rsp
100019c1f:	5b	popq	%rbx
100019c20:	5d	popq	%rbp
100019c21:	ff 25 31 30 02 00	jmpq	*143409(%rip) ## literal pool symbol address: _objc_release
100019c27:	48 83 c4 08	addq	$8, %rsp
100019c2b:	5b	popq	%rbx
100019c2c:	5d	popq	%rbp
100019c2d:	c3	retq
100019c2e:	55	pushq	%rbp
100019c2f:	48 89 e5	movq	%rsp, %rbp
100019c32:	48 89 fa	movq	%rdi, %rdx
100019c35:	48 8b 05 fc 91 03 00	movq	233980(%rip), %rax
100019c3c:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100019c40:	48 8b 35 59 7c 03 00	movq	228441(%rip), %rsi ## Objc selector ref: openExportPanel:operation:
100019c47:	b9 02 00 00 00	movl	$2, %ecx
100019c4c:	5d	popq	%rbp
100019c4d:	ff 25 cd 2f 02 00	jmpq	*143309(%rip) ## Objc message: -[%rdi openExportPanel:operation:]
100019c53:	55	pushq	%rbp
100019c54:	48 89 e5	movq	%rsp, %rbp
100019c57:	41 57	pushq	%r15
100019c59:	41 56	pushq	%r14
100019c5b:	53	pushq	%rbx
100019c5c:	50	pushq	%rax
100019c5d:	48 89 fb	movq	%rdi, %rbx
100019c60:	48 8b 05 d1 29 02 00	movq	141777(%rip), %rax ## literal pool symbol address: _NSApp
100019c67:	48 8b 38	movq	(%rax), %rdi
100019c6a:	4c 8b 35 ef 92 03 00	movq	234223(%rip), %r14
100019c71:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
100019c75:	48 8b 35 44 75 03 00	movq	226628(%rip), %rsi ## Objc selector ref: endSheet:
100019c7c:	4c 8b 3d 9d 2f 02 00	movq	143261(%rip), %r15 ## Objc message: -[%rdi endSheet:]
100019c83:	41 ff d7	callq	*%r15
100019c86:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100019c8a:	48 8b 35 ff 71 03 00	movq	225791(%rip), %rsi ## Objc selector ref: close
100019c91:	4c 89 f8	movq	%r15, %rax
100019c94:	48 83 c4 08	addq	$8, %rsp
100019c98:	5b	popq	%rbx
100019c99:	41 5e	popq	%r14
100019c9b:	41 5f	popq	%r15
100019c9d:	5d	popq	%rbp
100019c9e:	ff e0	jmpq	*%rax
100019ca0:	55	pushq	%rbp
100019ca1:	48 89 e5	movq	%rsp, %rbp
100019ca4:	41 57	pushq	%r15
100019ca6:	41 56	pushq	%r14
100019ca8:	41 55	pushq	%r13
100019caa:	41 54	pushq	%r12
100019cac:	53	pushq	%rbx
100019cad:	48 83 ec 38	subq	$56, %rsp
100019cb1:	49 89 ff	movq	%rdi, %r15
100019cb4:	48 8b 35 f5 76 03 00	movq	227061(%rip), %rsi ## Objc selector ref: imageSizeScaleValue
100019cbb:	4c 8b 25 5e 2f 02 00	movq	143198(%rip), %r12 ## Objc message: -[%rdi imageSizeScaleValue]
100019cc2:	41 ff d4	callq	*%r12
100019cc5:	f3 0f 5e 05 7f f5 01 00	divss	128383(%rip), %xmm0
100019ccd:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
100019cd2:	48 8b 05 5f 29 02 00	movq	141663(%rip), %rax ## literal pool symbol address: _NSApp
100019cd9:	48 8b 38	movq	(%rax), %rdi
100019cdc:	48 8b 1d 9d 92 03 00	movq	234141(%rip), %rbx
100019ce3:	49 8b 14 1f	movq	(%r15,%rbx), %rdx
100019ce7:	48 8b 35 d2 74 03 00	movq	226514(%rip), %rsi ## Objc selector ref: endSheet:
100019cee:	41 ff d4	callq	*%r12
100019cf1:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
100019cf5:	48 8b 35 94 71 03 00	movq	225684(%rip), %rsi ## Objc selector ref: close
100019cfc:	41 ff d4	callq	*%r12
100019cff:	48 8b 05 72 92 03 00	movq	234098(%rip), %rax
100019d06:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100019d0a:	48 8b 35 27 7f 03 00	movq	229159(%rip), %rsi ## Objc selector ref: selectedItem
100019d11:	41 ff d4	callq	*%r12
100019d14:	48 8b 35 7d 86 03 00	movq	231037(%rip), %rsi ## Objc selector ref: tag
100019d1b:	48 89 c7	movq	%rax, %rdi
100019d1e:	41 ff d4	callq	*%r12
100019d21:	49 89 c5	movq	%rax, %r13
100019d24:	48 8b 1d 25 7a 03 00	movq	227877(%rip), %rbx ## Objc selector ref: metadata
100019d2b:	4c 89 ff	movq	%r15, %rdi
100019d2e:	48 89 de	movq	%rbx, %rsi
100019d31:	41 ff d4	callq	*%r12
100019d34:	48 85 c0	testq	%rax, %rax
100019d37:	74 61	je	0x100019d9a
100019d39:	4c 89 ff	movq	%r15, %rdi
100019d3c:	48 89 de	movq	%rbx, %rsi
100019d3f:	ff 15 db 2e 02 00	callq	*143067(%rip) ## Objc message: -[%rdi metadata]
100019d45:	48 89 c3	movq	%rax, %rbx
100019d48:	48 8b 05 81 2c 02 00	movq	142465(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIWidth
100019d4f:	48 8b 30	movq	(%rax), %rsi
100019d52:	48 89 df	movq	%rbx, %rdi
100019d55:	e8 88 51 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100019d5a:	49 89 c6	movq	%rax, %r14
100019d5d:	48 8b 05 64 2c 02 00	movq	142436(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIHeight
100019d64:	48 8b 30	movq	(%rax), %rsi
100019d67:	48 89 df	movq	%rbx, %rdi
100019d6a:	e8 73 51 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100019d6f:	31 c9	xorl	%ecx, %ecx
100019d71:	bb 01 00 00 00	movl	$1, %ebx
100019d76:	4d 85 f6	testq	%r14, %r14
100019d79:	74 23	je	0x100019d9e
100019d7b:	48 85 c0	testq	%rax, %rax
100019d7e:	74 1e	je	0x100019d9e
100019d80:	4c 89 f7	movq	%r14, %rdi
100019d83:	48 89 c6	movq	%rax, %rsi
100019d86:	e8 69 51 01 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
100019d8b:	31 c9	xorl	%ecx, %ecx
100019d8d:	31 db	xorl	%ebx, %ebx
100019d8f:	84 c0	testb	%al, %al
100019d91:	0f 95 c3	setne	%bl
100019d94:	49 0f 45 ce	cmovneq	%r14, %rcx
100019d98:	eb 04	jmp	0x100019d9e
100019d9a:	31 c9	xorl	%ecx, %ecx
100019d9c:	31 db	xorl	%ebx, %ebx
100019d9e:	48 89 4d a8	movq	%rcx, -88(%rbp)
100019da2:	48 8b 05 bf 91 03 00	movq	233919(%rip), %rax
100019da9:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100019dad:	48 8b 35 d4 7a 03 00	movq	228052(%rip), %rsi ## Objc selector ref: objectValue
100019db4:	ff 15 66 2e 02 00	callq	*142950(%rip) ## Objc message: -[%rdi objectValue]
100019dba:	0f 57 c0	xorps	%xmm0, %xmm0
100019dbd:	f3 0f 10 4d d0	movss	-48(%rbp), %xmm1
100019dc2:	0f 2e c8	ucomiss	%xmm0, %xmm1
100019dc5:	48 89 45 c0	movq	%rax, -64(%rbp)
100019dc9:	0f 86 31 02 00 00	jbe	0x10001a000
100019dcf:	89 5d cc	movl	%ebx, -52(%rbp)
100019dd2:	48 8b 1d d7 87 03 00	movq	231383(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
100019dd9:	48 8b 3d 10 88 03 00	movq	231440(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100019de0:	4c 8b 35 21 7a 03 00	movq	227873(%rip), %r14 ## Objc selector ref: numberWithBool:
100019de7:	4c 89 f6	movq	%r14, %rsi
100019dea:	ba 01 00 00 00	movl	$1, %edx
100019def:	41 ff d4	callq	*%r12
100019df2:	4c 89 6d b8	movq	%r13, -72(%rbp)
100019df6:	49 89 c5	movq	%rax, %r13
100019df9:	48 8b 3d f0 87 03 00	movq	231408(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100019e00:	4c 89 f6	movq	%r14, %rsi
100019e03:	ba 01 00 00 00	movl	$1, %edx
100019e08:	41 ff d4	callq	*%r12
100019e0b:	4c 8b 35 26 6f 03 00	movq	225062(%rip), %r14 ## Objc selector ref: arrayWithObjects:
100019e12:	48 89 df	movq	%rbx, %rdi
100019e15:	4c 89 f6	movq	%r14, %rsi
100019e18:	4c 89 ea	movq	%r13, %rdx
100019e1b:	48 89 c1	movq	%rax, %rcx
100019e1e:	45 31 c0	xorl	%r8d, %r8d
100019e21:	31 c0	xorl	%eax, %eax
100019e23:	41 ff d4	callq	*%r12
100019e26:	48 89 c3	movq	%rax, %rbx
100019e29:	48 8b 3d 80 87 03 00	movq	231296(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100019e30:	48 8b 05 a9 2c 02 00	movq	142505(%rip), %rax ## literal pool symbol address: _kQFilterAppLicationDomain
100019e37:	48 8b 10	movq	(%rax), %rdx
100019e3a:	48 8b 05 3f 2d 02 00	movq	142655(%rip), %rax ## literal pool symbol address: _kQFilterPrintingDomain
100019e41:	48 8b 08	movq	(%rax), %rcx
100019e44:	4c 89 f6	movq	%r14, %rsi
100019e47:	45 31 c0	xorl	%r8d, %r8d
100019e4a:	31 c0	xorl	%eax, %eax
100019e4c:	41 ff d4	callq	*%r12
100019e4f:	48 8b 3d c2 87 03 00	movq	231362(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100019e56:	48 8b 35 4b 72 03 00	movq	225867(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
100019e5d:	48 89 da	movq	%rbx, %rdx
100019e60:	48 89 c1	movq	%rax, %rcx
100019e63:	41 ff d4	callq	*%r12
100019e66:	48 89 45 b0	movq	%rax, -80(%rbp)
100019e6a:	48 8b 1d 3f 87 03 00	movq	231231(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
100019e71:	48 8b 3d 78 87 03 00	movq	231288(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100019e78:	48 8b 35 99 79 03 00	movq	227737(%rip), %rsi ## Objc selector ref: numberWithFloat:
100019e7f:	f3 0f 10 45 d0	movss	-48(%rbp), %xmm0
100019e84:	41 ff d4	callq	*%r12
100019e87:	49 89 c5	movq	%rax, %r13
100019e8a:	48 8b 3d 5f 87 03 00	movq	231263(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100019e91:	48 8b 35 88 79 03 00	movq	227720(%rip), %rsi ## Objc selector ref: numberWithInt:
100019e98:	48 8b 55 b8	movq	-72(%rbp), %rdx
100019e9c:	41 ff d4	callq	*%r12
100019e9f:	48 89 df	movq	%rbx, %rdi
100019ea2:	4c 89 f6	movq	%r14, %rsi
100019ea5:	4c 89 ea	movq	%r13, %rdx
100019ea8:	48 89 c1	movq	%rax, %rcx
100019eab:	45 31 c0	xorl	%r8d, %r8d
100019eae:	31 c0	xorl	%eax, %eax
100019eb0:	41 ff d4	callq	*%r12
100019eb3:	49 89 c5	movq	%rax, %r13
100019eb6:	48 8b 3d f3 86 03 00	movq	231155(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100019ebd:	48 8b 05 84 2c 02 00	movq	142468(%rip), %rax ## literal pool symbol address: _kQFilterImageScaleFactor
100019ec4:	48 8b 10	movq	(%rax), %rdx
100019ec7:	48 8b 05 82 2c 02 00	movq	142466(%rip), %rax ## literal pool symbol address: _kQFilterImageScaleInterpolate
100019ece:	48 8b 08	movq	(%rax), %rcx
100019ed1:	4c 89 f6	movq	%r14, %rsi
100019ed4:	45 31 c0	xorl	%r8d, %r8d
100019ed7:	31 c0	xorl	%eax, %eax
100019ed9:	41 ff d4	callq	*%r12
100019edc:	48 8b 1d 35 87 03 00	movq	231221(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100019ee3:	48 89 df	movq	%rbx, %rdi
100019ee6:	48 8b 35 bb 71 03 00	movq	225723(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
100019eed:	4c 89 ea	movq	%r13, %rdx
100019ef0:	48 89 c1	movq	%rax, %rcx
100019ef3:	41 ff d4	callq	*%r12
100019ef6:	48 8b 0d 5b 2c 02 00	movq	142427(%rip), %rcx ## literal pool symbol address: _kQFilterImageScaleSettings
100019efd:	48 8b 09	movq	(%rcx), %rcx
100019f00:	4c 8b 2d 99 71 03 00	movq	225689(%rip), %r13 ## Objc selector ref: dictionaryWithObject:forKey:
100019f07:	48 89 df	movq	%rbx, %rdi
100019f0a:	4c 89 ee	movq	%r13, %rsi
100019f0d:	48 89 c2	movq	%rax, %rdx
100019f10:	41 ff d4	callq	*%r12
100019f13:	48 8b 3d fe 86 03 00	movq	231166(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100019f1a:	48 8b 0d 3f 2c 02 00	movq	142399(%rip), %rcx ## literal pool symbol address: _kQFilterImageSettings
100019f21:	48 8b 09	movq	(%rcx), %rcx
100019f24:	4c 89 ee	movq	%r13, %rsi
100019f27:	48 89 c2	movq	%rax, %rdx
100019f2a:	41 ff d4	callq	*%r12
100019f2d:	48 8b 3d e4 86 03 00	movq	231140(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100019f34:	48 8b 0d cd 2b 02 00	movq	142285(%rip), %rcx ## literal pool symbol address: _kQFilterColorSettings
100019f3b:	48 8b 09	movq	(%rcx), %rcx
100019f3e:	4c 89 ee	movq	%r13, %rsi
100019f41:	48 89 c2	movq	%rax, %rdx
100019f44:	41 ff d4	callq	*%r12
100019f47:	49 89 c5	movq	%rax, %r13
100019f4a:	48 8b 1d 5f 86 03 00	movq	231007(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSArray
100019f51:	48 8b 3d 98 86 03 00	movq	231064(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100019f58:	48 8b 35 c1 78 03 00	movq	227521(%rip), %rsi ## Objc selector ref: numberWithInt:
100019f5f:	ba 01 00 00 00	movl	$1, %edx
100019f64:	41 ff d4	callq	*%r12
100019f67:	31 c9	xorl	%ecx, %ecx
100019f69:	48 89 0c 24	movq	%rcx, (%rsp)
100019f6d:	48 8d 15 ac 44 02 00	leaq	148652(%rip), %rdx ## Objc cfstring ref: @"Image Scaling"
100019f74:	48 89 df	movq	%rbx, %rdi
100019f77:	4c 89 f6	movq	%r14, %rsi
100019f7a:	48 89 c1	movq	%rax, %rcx
100019f7d:	4c 8b 45 b0	movq	-80(%rbp), %r8
100019f81:	4d 89 e9	movq	%r13, %r9
100019f84:	31 c0	xorl	%eax, %eax
100019f86:	41 ff d4	callq	*%r12
100019f89:	48 89 c3	movq	%rax, %rbx
100019f8c:	48 8b 3d 1d 86 03 00	movq	230941(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
100019f93:	48 8b 05 d6 2b 02 00	movq	142294(%rip), %rax ## literal pool symbol address: _kQFilterName
100019f9a:	48 8b 10	movq	(%rax), %rdx
100019f9d:	48 8b 05 04 2c 02 00	movq	142340(%rip), %rax ## literal pool symbol address: _kQFilterType
100019fa4:	48 8b 08	movq	(%rax), %rcx
100019fa7:	48 8b 05 8a 2b 02 00	movq	142218(%rip), %rax ## literal pool symbol address: _kQFilterDomains
100019fae:	4c 8b 00	movq	(%rax), %r8
100019fb1:	48 8b 05 58 2b 02 00	movq	142168(%rip), %rax ## literal pool symbol address: _kQFilterData
100019fb8:	4c 8b 08	movq	(%rax), %r9
100019fbb:	31 c0	xorl	%eax, %eax
100019fbd:	48 89 04 24	movq	%rax, (%rsp)
100019fc1:	4c 89 f6	movq	%r14, %rsi
100019fc4:	31 c0	xorl	%eax, %eax
100019fc6:	41 ff d4	callq	*%r12
100019fc9:	48 8b 3d 48 86 03 00	movq	230984(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100019fd0:	48 8b 35 d1 70 03 00	movq	225489(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:
100019fd7:	48 89 da	movq	%rbx, %rdx
100019fda:	8b 5d cc	movl	-52(%rbp), %ebx
100019fdd:	48 89 c1	movq	%rax, %rcx
100019fe0:	41 ff d4	callq	*%r12
100019fe3:	48 8b 3d c6 86 03 00	movq	231110(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_QuartzFilter
100019fea:	48 8b 35 47 7a 03 00	movq	227911(%rip), %rsi ## Objc selector ref: quartzFilterWithProperties:
100019ff1:	48 89 c2	movq	%rax, %rdx
100019ff4:	41 ff d4	callq	*%r12
100019ff7:	49 89 c5	movq	%rax, %r13
100019ffa:	48 8b 45 c0	movq	-64(%rbp), %rax
100019ffe:	eb 03	jmp	0x10001a003
10001a000:	45 31 ed	xorl	%r13d, %r13d
10001a003:	85 db	testl	%ebx, %ebx
10001a005:	48 8b 7d a8	movq	-88(%rbp), %rdi
10001a009:	74 1f	je	0x10001a02a
10001a00b:	48 85 ff	testq	%rdi, %rdi
10001a00e:	75 05	jne	0x10001a015
10001a010:	48 85 c0	testq	%rax, %rax
10001a013:	75 0a	jne	0x10001a01f
10001a015:	48 85 ff	testq	%rdi, %rdi
10001a018:	74 10	je	0x10001a02a
10001a01a:	48 85 c0	testq	%rax, %rax
10001a01d:	75 0b	jne	0x10001a02a
10001a01f:	4d 85 ed	testq	%r13, %r13
10001a022:	41 0f 95 c6	setne	%r14b
10001a026:	b3 01	movb	$1, %bl
10001a028:	eb 3d	jmp	0x10001a067
10001a02a:	31 db	xorl	%ebx, %ebx
10001a02c:	48 85 ff	testq	%rdi, %rdi
10001a02f:	74 1a	je	0x10001a04b
10001a031:	48 85 c0	testq	%rax, %rax
10001a034:	74 15	je	0x10001a04b
10001a036:	48 8b 35 3b 75 03 00	movq	226619(%rip), %rsi ## Objc selector ref: isEqualTo:
10001a03d:	48 89 c2	movq	%rax, %rdx
10001a040:	ff 15 da 2b 02 00	callq	*142298(%rip) ## Objc message: +[QuartzFilter isEqualTo:]
10001a046:	84 c0	testb	%al, %al
10001a048:	0f 94 c3	sete	%bl
10001a04b:	4d 85 ed	testq	%r13, %r13
10001a04e:	41 0f 95 c6	setne	%r14b
10001a052:	75 13	jne	0x10001a067
10001a054:	84 db	testb	%bl, %bl
10001a056:	75 0f	jne	0x10001a067
10001a058:	48 83 c4 38	addq	$56, %rsp
10001a05c:	5b	popq	%rbx
10001a05d:	41 5c	popq	%r12
10001a05f:	41 5d	popq	%r13
10001a061:	41 5e	popq	%r14
10001a063:	41 5f	popq	%r15
10001a065:	5d	popq	%rbp
10001a066:	c3	retq
10001a067:	48 8b 35 7a 84 03 00	movq	230522(%rip), %rsi ## Objc selector ref: wholeDocumentAndMetadata
10001a06e:	4c 89 ff	movq	%r15, %rdi
10001a071:	ff 15 a9 2b 02 00	callq	*142249(%rip) ## Objc message: -[%rdi wholeDocumentAndMetadata]
10001a077:	48 89 c7	movq	%rax, %rdi
10001a07a:	ff 15 e0 2b 02 00	callq	*142304(%rip) ## literal pool symbol address: _objc_retain
10001a080:	48 89 45 d0	movq	%rax, -48(%rbp)
10001a084:	45 84 f6	testb	%r14b, %r14b
10001a087:	74 13	je	0x10001a09c
10001a089:	48 8b 35 58 6c 03 00	movq	224344(%rip), %rsi ## Objc selector ref: applyFilterAndScaleImage:
10001a090:	4c 89 ff	movq	%r15, %rdi
10001a093:	4c 89 ea	movq	%r13, %rdx
10001a096:	ff 15 84 2b 02 00	callq	*142212(%rip) ## Objc message: -[%rdi applyFilterAndScaleImage:]
10001a09c:	84 db	testb	%bl, %bl
10001a09e:	0f 84 90 00 00 00	je	0x10001a134
10001a0a4:	48 8b 05 c5 28 02 00	movq	141509(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
10001a0ab:	48 8b 18	movq	(%rax), %rbx
10001a0ae:	4c 89 ff	movq	%r15, %rdi
10001a0b1:	48 8b 35 98 76 03 00	movq	226968(%rip), %rsi ## Objc selector ref: metadata
10001a0b8:	41 ff d4	callq	*%r12
10001a0bb:	48 89 df	movq	%rbx, %rdi
10001a0be:	31 f6	xorl	%esi, %esi
10001a0c0:	48 89 c2	movq	%rax, %rdx
10001a0c3:	e8 02 4e 01 00	callq	0x10002eeca ## symbol stub for: _CFDictionaryCreateMutableCopy
10001a0c8:	48 89 c3	movq	%rax, %rbx
10001a0cb:	48 8b 35 de 7e 03 00	movq	229086(%rip), %rsi ## Objc selector ref: setMetadata:
10001a0d2:	4c 89 ff	movq	%r15, %rdi
10001a0d5:	48 89 c2	movq	%rax, %rdx
10001a0d8:	41 ff d4	callq	*%r12
10001a0db:	48 85 db	testq	%rbx, %rbx
10001a0de:	74 54	je	0x10001a134
10001a0e0:	48 89 df	movq	%rbx, %rdi
10001a0e3:	e8 2a 4e 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001a0e8:	48 8b 05 e1 28 02 00	movq	141537(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIWidth
10001a0ef:	48 8b 30	movq	(%rax), %rsi
10001a0f2:	4c 8b 75 c0	movq	-64(%rbp), %r14
10001a0f6:	48 89 df	movq	%rbx, %rdi
10001a0f9:	4d 85 f6	testq	%r14, %r14
10001a0fc:	74 1f	je	0x10001a11d
10001a0fe:	4c 89 f2	movq	%r14, %rdx
10001a101:	e8 e8 4d 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
10001a106:	48 8b 05 bb 28 02 00	movq	141499(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIHeight
10001a10d:	48 8b 30	movq	(%rax), %rsi
10001a110:	48 89 df	movq	%rbx, %rdi
10001a113:	4c 89 f2	movq	%r14, %rdx
10001a116:	e8 d3 4d 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
10001a11b:	eb 17	jmp	0x10001a134
10001a11d:	e8 c6 4d 01 00	callq	0x10002eee8 ## symbol stub for: _CFDictionaryRemoveValue
10001a122:	48 8b 05 9f 28 02 00	movq	141471(%rip), %rax ## literal pool symbol address: _kCGImagePropertyDPIHeight
10001a129:	48 8b 30	movq	(%rax), %rsi
10001a12c:	48 89 df	movq	%rbx, %rdi
10001a12f:	e8 b4 4d 01 00	callq	0x10002eee8 ## symbol stub for: _CFDictionaryRemoveValue
10001a134:	4c 89 ff	movq	%r15, %rdi
10001a137:	48 8b 35 aa 83 03 00	movq	230314(%rip), %rsi ## Objc selector ref: wholeDocumentAndMetadata
10001a13e:	41 ff d4	callq	*%r12
10001a141:	48 89 c7	movq	%rax, %rdi
10001a144:	ff 15 16 2b 02 00	callq	*142102(%rip) ## literal pool symbol address: _objc_retain
10001a14a:	49 89 c5	movq	%rax, %r13
10001a14d:	4c 8b 35 dc 8d 03 00	movq	232924(%rip), %r14
10001a154:	43 c6 04 37 01	movb	$1, (%r15,%r14)
10001a159:	48 8b 3d 50 84 03 00	movq	230480(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
10001a160:	48 8b 35 d1 6b 03 00	movq	224209(%rip), %rsi ## Objc selector ref: arrayWithObjects:
10001a167:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001a16b:	48 89 da	movq	%rbx, %rdx
10001a16e:	48 89 c1	movq	%rax, %rcx
10001a171:	45 31 c0	xorl	%r8d, %r8d
10001a174:	31 c0	xorl	%eax, %eax
10001a176:	41 ff d4	callq	*%r12
10001a179:	48 8b 35 10 80 03 00	movq	229392(%rip), %rsi ## Objc selector ref: setupAdjustImageSizeUndo:
10001a180:	4c 89 ff	movq	%r15, %rdi
10001a183:	48 89 c2	movq	%rax, %rdx
10001a186:	41 ff d4	callq	*%r12
10001a189:	43 c6 04 37 00	movb	$0, (%r15,%r14)
10001a18e:	4c 8b 35 c3 2a 02 00	movq	142019(%rip), %r14 ## literal pool symbol address: _objc_release
10001a195:	48 89 df	movq	%rbx, %rdi
10001a198:	41 ff d6	callq	*%r14
10001a19b:	4c 89 ef	movq	%r13, %rdi
10001a19e:	4c 89 f0	movq	%r14, %rax
10001a1a1:	48 83 c4 38	addq	$56, %rsp
10001a1a5:	5b	popq	%rbx
10001a1a6:	41 5c	popq	%r12
10001a1a8:	41 5d	popq	%r13
10001a1aa:	41 5e	popq	%r14
10001a1ac:	41 5f	popq	%r15
10001a1ae:	5d	popq	%rbp
10001a1af:	ff e0	jmpq	*%rax
10001a1b1:	55	pushq	%rbp
10001a1b2:	48 89 e5	movq	%rsp, %rbp
10001a1b5:	41 57	pushq	%r15
10001a1b7:	41 56	pushq	%r14
10001a1b9:	53	pushq	%rbx
10001a1ba:	50	pushq	%rax
10001a1bb:	48 89 fb	movq	%rdi, %rbx
10001a1be:	48 8b 05 73 24 02 00	movq	140403(%rip), %rax ## literal pool symbol address: _NSApp
10001a1c5:	48 8b 38	movq	(%rax), %rdi
10001a1c8:	4c 8b 35 b1 8d 03 00	movq	232881(%rip), %r14
10001a1cf:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
10001a1d3:	48 8b 35 e6 6f 03 00	movq	225254(%rip), %rsi ## Objc selector ref: endSheet:
10001a1da:	4c 8b 3d 3f 2a 02 00	movq	141887(%rip), %r15 ## Objc message: +[NSArray endSheet:]
10001a1e1:	41 ff d7	callq	*%r15
10001a1e4:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001a1e8:	48 8b 35 a1 6c 03 00	movq	224417(%rip), %rsi ## Objc selector ref: close
10001a1ef:	4c 89 f8	movq	%r15, %rax
10001a1f2:	48 83 c4 08	addq	$8, %rsp
10001a1f6:	5b	popq	%rbx
10001a1f7:	41 5e	popq	%r14
10001a1f9:	41 5f	popq	%r15
10001a1fb:	5d	popq	%rbp
10001a1fc:	ff e0	jmpq	*%rax
10001a1fe:	55	pushq	%rbp
10001a1ff:	48 89 e5	movq	%rsp, %rbp
10001a202:	5d	popq	%rbp
10001a203:	c3	retq
10001a204:	55	pushq	%rbp
10001a205:	48 89 e5	movq	%rsp, %rbp
10001a208:	41 57	pushq	%r15
10001a20a:	41 56	pushq	%r14
10001a20c:	41 54	pushq	%r12
10001a20e:	53	pushq	%rbx
10001a20f:	49 89 fe	movq	%rdi, %r14
10001a212:	48 8b 05 57 8d 03 00	movq	232791(%rip), %rax
10001a219:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001a21d:	48 8b 35 14 7a 03 00	movq	227860(%rip), %rsi ## Objc selector ref: selectedItem
10001a224:	4c 8b 3d f5 29 02 00	movq	141813(%rip), %r15 ## Objc message: -[%rdi selectedItem]
10001a22b:	41 ff d7	callq	*%r15
10001a22e:	48 8b 35 63 81 03 00	movq	229731(%rip), %rsi ## Objc selector ref: tag
10001a235:	48 89 c7	movq	%rax, %rdi
10001a238:	41 ff d7	callq	*%r15
10001a23b:	48 89 c3	movq	%rax, %rbx
10001a23e:	31 d2	xorl	%edx, %edx
10001a240:	48 85 c0	testq	%rax, %rax
10001a243:	0f 94 c2	sete	%dl
10001a246:	48 8b 35 8b 7c 03 00	movq	228491(%rip), %rsi ## Objc selector ref: setImageSizeScaleSelected:
10001a24d:	4c 89 f7	movq	%r14, %rdi
10001a250:	41 ff d7	callq	*%r15
10001a253:	31 d2	xorl	%edx, %edx
10001a255:	48 83 fb 01	cmpq	$1, %rbx
10001a259:	0f 94 c2	sete	%dl
10001a25c:	48 8b 35 85 7c 03 00	movq	228485(%rip), %rsi ## Objc selector ref: setImageSizeWidthSelected:
10001a263:	4c 89 f7	movq	%r14, %rdi
10001a266:	41 ff d7	callq	*%r15
10001a269:	31 d2	xorl	%edx, %edx
10001a26b:	48 83 fb 02	cmpq	$2, %rbx
10001a26f:	0f 94 c2	sete	%dl
10001a272:	48 8b 35 4f 7c 03 00	movq	228431(%rip), %rsi ## Objc selector ref: setImageSizeHeightSelected:
10001a279:	4c 89 f7	movq	%r14, %rdi
10001a27c:	4d 89 fc	movq	%r15, %r12
10001a27f:	41 ff d7	callq	*%r15
10001a282:	48 83 fb 02	cmpq	$2, %rbx
10001a286:	74 2f	je	0x10001a2b7
10001a288:	48 83 fb 01	cmpq	$1, %rbx
10001a28c:	74 3f	je	0x10001a2cd
10001a28e:	48 85 db	testq	%rbx, %rbx
10001a291:	75 60	jne	0x10001a2f3
10001a293:	48 8b 35 16 71 03 00	movq	225558(%rip), %rsi ## Objc selector ref: imageSizeScaleValue
10001a29a:	4c 89 f7	movq	%r14, %rdi
10001a29d:	41 ff d4	callq	*%r12
10001a2a0:	48 8b 35 39 7c 03 00	movq	228409(%rip), %rsi ## Objc selector ref: setImageSizeScaleValue:
10001a2a7:	4c 89 f7	movq	%r14, %rdi
10001a2aa:	4c 89 e0	movq	%r12, %rax
10001a2ad:	5b	popq	%rbx
10001a2ae:	41 5c	popq	%r12
10001a2b0:	41 5e	popq	%r14
10001a2b2:	41 5f	popq	%r15
10001a2b4:	5d	popq	%rbp
10001a2b5:	ff e0	jmpq	*%rax
10001a2b7:	48 8b 35 ea 70 03 00	movq	225514(%rip), %rsi ## Objc selector ref: imageSizeHeightValue
10001a2be:	4c 89 f7	movq	%r14, %rdi
10001a2c1:	41 ff d4	callq	*%r12
10001a2c4:	48 8b 35 05 7c 03 00	movq	228357(%rip), %rsi ## Objc selector ref: setImageSizeHeightValue:
10001a2cb:	eb 14	jmp	0x10001a2e1
10001a2cd:	48 8b 35 e4 70 03 00	movq	225508(%rip), %rsi ## Objc selector ref: imageSizeWidthValue
10001a2d4:	4c 89 f7	movq	%r14, %rdi
10001a2d7:	41 ff d4	callq	*%r12
10001a2da:	48 8b 35 0f 7c 03 00	movq	228367(%rip), %rsi ## Objc selector ref: setImageSizeWidthValue:
10001a2e1:	4c 89 f7	movq	%r14, %rdi
10001a2e4:	89 c2	movl	%eax, %edx
10001a2e6:	4c 89 e0	movq	%r12, %rax
10001a2e9:	5b	popq	%rbx
10001a2ea:	41 5c	popq	%r12
10001a2ec:	41 5e	popq	%r14
10001a2ee:	41 5f	popq	%r15
10001a2f0:	5d	popq	%rbp
10001a2f1:	ff e0	jmpq	*%rax
10001a2f3:	5b	popq	%rbx
10001a2f4:	41 5c	popq	%r12
10001a2f6:	41 5e	popq	%r14
10001a2f8:	41 5f	popq	%r15
10001a2fa:	5d	popq	%rbp
10001a2fb:	c3	retq
10001a2fc:	55	pushq	%rbp
10001a2fd:	48 89 e5	movq	%rsp, %rbp
10001a300:	5d	popq	%rbp
10001a301:	c3	retq
10001a302:	55	pushq	%rbp
10001a303:	48 89 e5	movq	%rsp, %rbp
10001a306:	41 56	pushq	%r14
10001a308:	53	pushq	%rbx
10001a309:	48 8b 05 80 8b 03 00	movq	232320(%rip), %rax
10001a310:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
10001a315:	74 66	je	0x10001a37d
10001a317:	48 89 fb	movq	%rdi, %rbx
10001a31a:	48 8b 05 27 8b 03 00	movq	232231(%rip), %rax
10001a321:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001a325:	48 8b 35 0c 79 03 00	movq	227596(%rip), %rsi ## Objc selector ref: selectedItem
10001a32c:	4c 8b 35 ed 28 02 00	movq	141549(%rip), %r14 ## Objc message: -[%rdi selectedItem]
10001a333:	41 ff d6	callq	*%r14
10001a336:	48 8b 35 5b 80 03 00	movq	229467(%rip), %rsi ## Objc selector ref: tag
10001a33d:	48 89 c7	movq	%rax, %rdi
10001a340:	41 ff d6	callq	*%r14
10001a343:	48 83 f8 ff	cmpq	$-1, %rax
10001a347:	74 34	je	0x10001a37d
10001a349:	48 8b 0d 68 8a 03 00	movq	232040(%rip), %rcx
10001a350:	48 8b 3c 0b	movq	(%rbx,%rcx), %rdi
10001a354:	48 8b 35 05 75 03 00	movq	226565(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001a35b:	48 89 c2	movq	%rax, %rdx
10001a35e:	ff 15 bc 28 02 00	callq	*141500(%rip) ## Objc message: -[%rdi objectAtIndex:]
10001a364:	48 85 c0	testq	%rax, %rax
10001a367:	74 14	je	0x10001a37d
10001a369:	48 8b 35 10 81 03 00	movq	229648(%rip), %rsi ## Objc selector ref: url
10001a370:	48 89 c7	movq	%rax, %rdi
10001a373:	5b	popq	%rbx
10001a374:	41 5e	popq	%r14
10001a376:	5d	popq	%rbp
10001a377:	ff 25 a3 28 02 00	jmpq	*141475(%rip) ## Objc message: -[%rdi url]
10001a37d:	31 c0	xorl	%eax, %eax
10001a37f:	5b	popq	%rbx
10001a380:	41 5e	popq	%r14
10001a382:	5d	popq	%rbp
10001a383:	c3	retq
10001a384:	55	pushq	%rbp
10001a385:	48 89 e5	movq	%rsp, %rbp
10001a388:	41 57	pushq	%r15
10001a38a:	41 56	pushq	%r14
10001a38c:	41 55	pushq	%r13
10001a38e:	41 54	pushq	%r12
10001a390:	53	pushq	%rbx
10001a391:	50	pushq	%rax
10001a392:	48 89 d3	movq	%rdx, %rbx
10001a395:	49 89 fc	movq	%rdi, %r12
10001a398:	48 8b 35 b9 74 03 00	movq	226489(%rip), %rsi ## Objc selector ref: object
10001a39f:	4c 8b 35 7a 28 02 00	movq	141434(%rip), %r14 ## Objc message: -[%rdi object]
10001a3a6:	48 89 d7	movq	%rdx, %rdi
10001a3a9:	41 ff d6	callq	*%r14
10001a3ac:	49 89 c5	movq	%rax, %r13
10001a3af:	48 8b 35 f2 73 03 00	movq	226290(%rip), %rsi ## Objc selector ref: name
10001a3b6:	48 89 df	movq	%rbx, %rdi
10001a3b9:	41 ff d6	callq	*%r14
10001a3bc:	49 89 c7	movq	%rax, %r15
10001a3bf:	48 8b 35 c2 80 03 00	movq	229570(%rip), %rsi ## Objc selector ref: userInfo
10001a3c6:	48 89 df	movq	%rbx, %rdi
10001a3c9:	41 ff d6	callq	*%r14
10001a3cc:	48 89 c3	movq	%rax, %rbx
10001a3cf:	48 8b 3d 1a 83 03 00	movq	230170(%rip), %rdi ## Objc class ref: FilterImageDoc
10001a3d6:	e8 0d 51 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001a3db:	48 8b 35 be 71 03 00	movq	225726(%rip), %rsi ## Objc selector ref: isMemberOfClass:
10001a3e2:	4c 89 e7	movq	%r12, %rdi
10001a3e5:	48 89 c2	movq	%rax, %rdx
10001a3e8:	41 ff d6	callq	*%r14
10001a3eb:	84 c0	testb	%al, %al
10001a3ed:	75 51	jne	0x10001a440
10001a3ef:	4d 85 ed	testq	%r13, %r13
10001a3f2:	74 4c	je	0x10001a440
10001a3f4:	48 8b 05 bd 27 02 00	movq	141245(%rip), %rax ## literal pool symbol address: _kQuartzFilterManagerDidAddFilterNotification
10001a3fb:	48 8b 10	movq	(%rax), %rdx
10001a3fe:	48 8b 35 83 71 03 00	movq	225667(%rip), %rsi ## Objc selector ref: isEqualToString:
10001a405:	4c 89 ff	movq	%r15, %rdi
10001a408:	ff 15 12 28 02 00	callq	*141330(%rip) ## Objc message: +[FilterImageDoc isEqualToString:]
10001a40e:	84 c0	testb	%al, %al
10001a410:	74 2e	je	0x10001a440
10001a412:	48 85 db	testq	%rbx, %rbx
10001a415:	74 29	je	0x10001a440
10001a417:	48 8b 05 2a 8a 03 00	movq	231978(%rip), %rax
10001a41e:	49 8b 14 04	movq	(%r12,%rax), %rdx
10001a422:	48 8b 35 ef 71 03 00	movq	225775(%rip), %rsi ## Objc selector ref: loadFilters:
10001a429:	4c 89 e7	movq	%r12, %rdi
10001a42c:	48 83 c4 08	addq	$8, %rsp
10001a430:	5b	popq	%rbx
10001a431:	41 5c	popq	%r12
10001a433:	41 5d	popq	%r13
10001a435:	41 5e	popq	%r14
10001a437:	41 5f	popq	%r15
10001a439:	5d	popq	%rbp
10001a43a:	ff 25 e0 27 02 00	jmpq	*141280(%rip) ## Objc message: -[%rdi loadFilters:]
10001a440:	48 83 c4 08	addq	$8, %rsp
10001a444:	5b	popq	%rbx
10001a445:	41 5c	popq	%r12
10001a447:	41 5d	popq	%r13
10001a449:	41 5e	popq	%r14
10001a44b:	41 5f	popq	%r15
10001a44d:	5d	popq	%rbp
10001a44e:	c3	retq
10001a44f:	55	pushq	%rbp
10001a450:	48 89 e5	movq	%rsp, %rbp
10001a453:	41 57	pushq	%r15
10001a455:	41 56	pushq	%r14
10001a457:	41 55	pushq	%r13
10001a459:	41 54	pushq	%r12
10001a45b:	53	pushq	%rbx
10001a45c:	50	pushq	%rax
10001a45d:	48 89 d3	movq	%rdx, %rbx
10001a460:	49 89 ff	movq	%rdi, %r15
10001a463:	48 8b 35 ee 73 03 00	movq	226286(%rip), %rsi ## Objc selector ref: object
10001a46a:	4c 8b 35 af 27 02 00	movq	141231(%rip), %r14 ## Objc message: -[%rdi object]
10001a471:	48 89 d7	movq	%rdx, %rdi
10001a474:	41 ff d6	callq	*%r14
10001a477:	49 89 c5	movq	%rax, %r13
10001a47a:	48 8b 35 27 73 03 00	movq	226087(%rip), %rsi ## Objc selector ref: name
10001a481:	48 89 df	movq	%rbx, %rdi
10001a484:	41 ff d6	callq	*%r14
10001a487:	49 89 c4	movq	%rax, %r12
10001a48a:	48 8b 35 f7 7f 03 00	movq	229367(%rip), %rsi ## Objc selector ref: userInfo
10001a491:	48 89 df	movq	%rbx, %rdi
10001a494:	41 ff d6	callq	*%r14
10001a497:	48 89 c3	movq	%rax, %rbx
10001a49a:	48 8b 3d 4f 82 03 00	movq	229967(%rip), %rdi ## Objc class ref: FilterImageDoc
10001a4a1:	e8 42 50 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001a4a6:	48 8b 35 f3 70 03 00	movq	225523(%rip), %rsi ## Objc selector ref: isMemberOfClass:
10001a4ad:	4c 89 7d d0	movq	%r15, -48(%rbp)
10001a4b1:	4c 89 ff	movq	%r15, %rdi
10001a4b4:	48 89 c2	movq	%rax, %rdx
10001a4b7:	41 ff d6	callq	*%r14
10001a4ba:	84 c0	testb	%al, %al
10001a4bc:	0f 85 e9 00 00 00	jne	0x10001a5ab
10001a4c2:	4d 85 ed	testq	%r13, %r13
10001a4c5:	0f 84 e0 00 00 00	je	0x10001a5ab
10001a4cb:	48 8b 05 f6 26 02 00	movq	141046(%rip), %rax ## literal pool symbol address: _kQuartzFilterManagerDidRemoveFilterNotification
10001a4d2:	48 8b 10	movq	(%rax), %rdx
10001a4d5:	48 8b 35 ac 70 03 00	movq	225452(%rip), %rsi ## Objc selector ref: isEqualToString:
10001a4dc:	4c 89 e7	movq	%r12, %rdi
10001a4df:	ff 15 3b 27 02 00	callq	*141115(%rip) ## Objc message: +[FilterImageDoc isEqualToString:]
10001a4e5:	84 c0	testb	%al, %al
10001a4e7:	0f 84 be 00 00 00	je	0x10001a5ab
10001a4ed:	48 85 db	testq	%rbx, %rbx
10001a4f0:	0f 84 b5 00 00 00	je	0x10001a5ab
10001a4f6:	4c 3b 6d d0	cmpq	-48(%rbp), %r13
10001a4fa:	0f 84 ab 00 00 00	je	0x10001a5ab
10001a500:	48 8b 05 a9 26 02 00	movq	140969(%rip), %rax ## literal pool symbol address: _kQFilterURL
10001a507:	48 8b 10	movq	(%rax), %rdx
10001a50a:	48 8b 35 67 73 03 00	movq	226151(%rip), %rsi ## Objc selector ref: objectForKey:
10001a511:	48 89 df	movq	%rbx, %rdi
10001a514:	ff 15 06 27 02 00	callq	*141062(%rip) ## Objc message: -[%rdi objectForKey:]
10001a51a:	48 85 c0	testq	%rax, %rax
10001a51d:	0f 84 88 00 00 00	je	0x10001a5ab
10001a523:	49 89 c6	movq	%rax, %r14
10001a526:	48 8b 35 03 6b 03 00	movq	224003(%rip), %rsi ## Objc selector ref: currentURL
10001a52d:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001a531:	48 89 df	movq	%rbx, %rdi
10001a534:	4c 8b 25 e5 26 02 00	movq	141029(%rip), %r12 ## Objc message: -[%rdi currentURL]
10001a53b:	41 ff d4	callq	*%r12
10001a53e:	48 89 c7	movq	%rax, %rdi
10001a541:	ff 15 19 27 02 00	callq	*141081(%rip) ## literal pool symbol address: _objc_retain
10001a547:	49 89 c7	movq	%rax, %r15
10001a54a:	48 8b 05 f7 88 03 00	movq	231671(%rip), %rax
10001a551:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10001a555:	48 8b 35 bc 70 03 00	movq	225468(%rip), %rsi ## Objc selector ref: loadFilters:
10001a55c:	48 89 df	movq	%rbx, %rdi
10001a55f:	41 ff d4	callq	*%r12
10001a562:	4d 85 ff	testq	%r15, %r15
10001a565:	74 2d	je	0x10001a594
10001a567:	4c 89 f7	movq	%r14, %rdi
10001a56a:	4c 89 fe	movq	%r15, %rsi
10001a56d:	e8 a4 a9 ff ff	callq	0x100014f16
10001a572:	84 c0	testb	%al, %al
10001a574:	74 1e	je	0x10001a594
10001a576:	48 8b 35 a3 75 03 00	movq	226723(%rip), %rsi ## Objc selector ref: resetCurrentFilter
10001a57d:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001a581:	48 89 df	movq	%rbx, %rdi
10001a584:	41 ff d4	callq	*%r12
10001a587:	48 8b 35 ca 7e 03 00	movq	229066(%rip), %rsi ## Objc selector ref: updatePreview
10001a58e:	48 89 df	movq	%rbx, %rdi
10001a591:	41 ff d4	callq	*%r12
10001a594:	4c 89 ff	movq	%r15, %rdi
10001a597:	48 83 c4 08	addq	$8, %rsp
10001a59b:	5b	popq	%rbx
10001a59c:	41 5c	popq	%r12
10001a59e:	41 5d	popq	%r13
10001a5a0:	41 5e	popq	%r14
10001a5a2:	41 5f	popq	%r15
10001a5a4:	5d	popq	%rbp
10001a5a5:	ff 25 ad 26 02 00	jmpq	*140973(%rip) ## literal pool symbol address: _objc_release
10001a5ab:	48 83 c4 08	addq	$8, %rsp
10001a5af:	5b	popq	%rbx
10001a5b0:	41 5c	popq	%r12
10001a5b2:	41 5d	popq	%r13
10001a5b4:	41 5e	popq	%r14
10001a5b6:	41 5f	popq	%r15
10001a5b8:	5d	popq	%rbp
10001a5b9:	c3	retq
10001a5ba:	55	pushq	%rbp
10001a5bb:	48 89 e5	movq	%rsp, %rbp
10001a5be:	41 57	pushq	%r15
10001a5c0:	41 56	pushq	%r14
10001a5c2:	41 55	pushq	%r13
10001a5c4:	41 54	pushq	%r12
10001a5c6:	53	pushq	%rbx
10001a5c7:	48 83 ec 28	subq	$40, %rsp
10001a5cb:	48 89 d3	movq	%rdx, %rbx
10001a5ce:	49 89 fd	movq	%rdi, %r13
10001a5d1:	48 8b 35 80 72 03 00	movq	225920(%rip), %rsi ## Objc selector ref: object
10001a5d8:	4c 8b 3d 41 26 02 00	movq	140865(%rip), %r15 ## Objc message: -[%rdi object]
10001a5df:	48 89 d7	movq	%rdx, %rdi
10001a5e2:	41 ff d7	callq	*%r15
10001a5e5:	49 89 c4	movq	%rax, %r12
10001a5e8:	48 8b 35 b9 71 03 00	movq	225721(%rip), %rsi ## Objc selector ref: name
10001a5ef:	48 89 df	movq	%rbx, %rdi
10001a5f2:	41 ff d7	callq	*%r15
10001a5f5:	49 89 c6	movq	%rax, %r14
10001a5f8:	48 8b 35 89 7e 03 00	movq	229001(%rip), %rsi ## Objc selector ref: userInfo
10001a5ff:	48 89 df	movq	%rbx, %rdi
10001a602:	41 ff d7	callq	*%r15
10001a605:	48 89 c3	movq	%rax, %rbx
10001a608:	48 8b 3d e1 80 03 00	movq	229601(%rip), %rdi ## Objc class ref: FilterImageDoc
10001a60f:	e8 d4 4e 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001a614:	48 8b 35 85 6f 03 00	movq	225157(%rip), %rsi ## Objc selector ref: isMemberOfClass:
10001a61b:	4c 89 ef	movq	%r13, %rdi
10001a61e:	48 89 c2	movq	%rax, %rdx
10001a621:	41 ff d7	callq	*%r15
10001a624:	84 c0	testb	%al, %al
10001a626:	0f 85 3b 01 00 00	jne	0x10001a767
10001a62c:	4d 85 e4	testq	%r12, %r12
10001a62f:	0f 84 32 01 00 00	je	0x10001a767
10001a635:	48 8b 05 84 25 02 00	movq	140676(%rip), %rax ## literal pool symbol address: _kQuartzFilterManagerDidModifyFilterNotification
10001a63c:	48 8b 10	movq	(%rax), %rdx
10001a63f:	48 8b 35 42 6f 03 00	movq	225090(%rip), %rsi ## Objc selector ref: isEqualToString:
10001a646:	4c 89 f7	movq	%r14, %rdi
10001a649:	ff 15 d1 25 02 00	callq	*140753(%rip) ## Objc message: +[FilterImageDoc isEqualToString:]
10001a64f:	84 c0	testb	%al, %al
10001a651:	0f 84 10 01 00 00	je	0x10001a767
10001a657:	48 85 db	testq	%rbx, %rbx
10001a65a:	0f 84 07 01 00 00	je	0x10001a767
10001a660:	48 8b 05 49 25 02 00	movq	140617(%rip), %rax ## literal pool symbol address: _kQFilterURL
10001a667:	48 8b 10	movq	(%rax), %rdx
10001a66a:	48 8b 35 07 72 03 00	movq	225799(%rip), %rsi ## Objc selector ref: objectForKey:
10001a671:	48 89 df	movq	%rbx, %rdi
10001a674:	ff 15 a6 25 02 00	callq	*140710(%rip) ## Objc message: -[%rdi objectForKey:]
10001a67a:	48 89 45 c0	movq	%rax, -64(%rbp)
10001a67e:	48 85 c0	testq	%rax, %rax
10001a681:	0f 84 e0 00 00 00	je	0x10001a767
10001a687:	48 8b 05 ba 87 03 00	movq	231354(%rip), %rax
10001a68e:	49 8b 54 05 00	movq	(%r13,%rax), %rdx
10001a693:	48 8b 35 7e 6f 03 00	movq	225150(%rip), %rsi ## Objc selector ref: loadFilters:
10001a69a:	4c 89 ef	movq	%r13, %rdi
10001a69d:	ff 15 7d 25 02 00	callq	*140669(%rip) ## Objc message: -[%rdi loadFilters:]
10001a6a3:	48 8b 05 e6 87 03 00	movq	231398(%rip), %rax
10001a6aa:	49 83 7c 05 00 00	cmpq	$0, (%r13,%rax)
10001a6b0:	0f 84 b1 00 00 00	je	0x10001a767
10001a6b6:	48 8b 05 fb 86 03 00	movq	231163(%rip), %rax
10001a6bd:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001a6c2:	48 8b 35 f7 68 03 00	movq	223479(%rip), %rsi ## Objc selector ref: count
10001a6c9:	ff 15 51 25 02 00	callq	*140625(%rip) ## Objc message: -[%rdi count]
10001a6cf:	48 89 45 b8	movq	%rax, -72(%rbp)
10001a6d3:	48 85 c0	testq	%rax, %rax
10001a6d6:	0f 84 8b 00 00 00	je	0x10001a767
10001a6dc:	48 8b 1d 9d 7d 03 00	movq	228765(%rip), %rbx ## Objc selector ref: url
10001a6e3:	48 8b 05 66 76 03 00	movq	226918(%rip), %rax ## Objc selector ref: setCurrentFilter:
10001a6ea:	48 89 45 c8	movq	%rax, -56(%rbp)
10001a6ee:	48 8b 05 63 7d 03 00	movq	228707(%rip), %rax ## Objc selector ref: updatePreview
10001a6f5:	48 89 45 d0	movq	%rax, -48(%rbp)
10001a6f9:	45 31 e4	xorl	%r12d, %r12d
10001a6fc:	48 8b 05 b5 86 03 00	movq	231093(%rip), %rax
10001a703:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001a708:	48 8b 35 51 71 03 00	movq	225617(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001a70f:	4c 89 e2	movq	%r12, %rdx
10001a712:	41 ff d7	callq	*%r15
10001a715:	49 89 c6	movq	%rax, %r14
10001a718:	48 89 c7	movq	%rax, %rdi
10001a71b:	48 89 de	movq	%rbx, %rsi
10001a71e:	41 ff d7	callq	*%r15
10001a721:	48 85 c0	testq	%rax, %rax
10001a724:	74 38	je	0x10001a75e
10001a726:	48 89 c7	movq	%rax, %rdi
10001a729:	48 8b 75 c0	movq	-64(%rbp), %rsi
10001a72d:	e8 e4 a7 ff ff	callq	0x100014f16
10001a732:	84 c0	testb	%al, %al
10001a734:	74 28	je	0x10001a75e
10001a736:	49 8d 44 24 02	leaq	2(%r12), %rax
10001a73b:	48 8b 0d 4e 87 03 00	movq	231246(%rip), %rcx
10001a742:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10001a747:	4c 89 ef	movq	%r13, %rdi
10001a74a:	48 8b 75 c8	movq	-56(%rbp), %rsi
10001a74e:	4c 89 f2	movq	%r14, %rdx
10001a751:	41 ff d7	callq	*%r15
10001a754:	4c 89 ef	movq	%r13, %rdi
10001a757:	48 8b 75 d0	movq	-48(%rbp), %rsi
10001a75b:	41 ff d7	callq	*%r15
10001a75e:	49 ff c4	incq	%r12
10001a761:	4c 39 65 b8	cmpq	%r12, -72(%rbp)
10001a765:	75 95	jne	0x10001a6fc
10001a767:	48 83 c4 28	addq	$40, %rsp
10001a76b:	5b	popq	%rbx
10001a76c:	41 5c	popq	%r12
10001a76e:	41 5d	popq	%r13
10001a770:	41 5e	popq	%r14
10001a772:	41 5f	popq	%r15
10001a774:	5d	popq	%rbp
10001a775:	c3	retq
10001a776:	55	pushq	%rbp
10001a777:	48 89 e5	movq	%rsp, %rbp
10001a77a:	53	pushq	%rbx
10001a77b:	50	pushq	%rax
10001a77c:	48 89 fb	movq	%rdi, %rbx
10001a77f:	48 8b 3d 6a 7f 03 00	movq	229226(%rip), %rdi ## Objc class ref: FilterImageDoc
10001a786:	e8 5d 4d 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001a78b:	48 8b 35 0e 6e 03 00	movq	224782(%rip), %rsi ## Objc selector ref: isMemberOfClass:
10001a792:	48 89 df	movq	%rbx, %rdi
10001a795:	48 89 c2	movq	%rax, %rdx
10001a798:	48 83 c4 08	addq	$8, %rsp
10001a79c:	5b	popq	%rbx
10001a79d:	5d	popq	%rbp
10001a79e:	ff 25 7c 24 02 00	jmpq	*140412(%rip) ## Objc message: +[FilterImageDoc isMemberOfClass:]
10001a7a4:	55	pushq	%rbp
10001a7a5:	48 89 e5	movq	%rsp, %rbp
10001a7a8:	41 57	pushq	%r15
10001a7aa:	41 56	pushq	%r14
10001a7ac:	41 55	pushq	%r13
10001a7ae:	41 54	pushq	%r12
10001a7b0:	53	pushq	%rbx
10001a7b1:	48 81 ec 88 00 00 00	subq	$136, %rsp
10001a7b8:	f3 0f 11 45 c0	movss	%xmm0, -64(%rbp)
10001a7bd:	49 89 fd	movq	%rdi, %r13
10001a7c0:	48 8b 1d 61 86 03 00	movq	231009(%rip), %rbx
10001a7c7:	48 8b 3c 1f	movq	(%rdi,%rbx), %rdi
10001a7cb:	48 8b 35 3e 6b 03 00	movq	224062(%rip), %rsi ## Objc selector ref: hasHorizontalScroller
10001a7d2:	4c 8b 35 47 24 02 00	movq	140359(%rip), %r14 ## Objc message: -[%rdi hasHorizontalScroller]
10001a7d9:	41 ff d6	callq	*%r14
10001a7dc:	41 89 c4	movl	%eax, %r12d
10001a7df:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
10001a7e4:	48 8b 35 3d 6b 03 00	movq	224061(%rip), %rsi ## Objc selector ref: hasVerticalScroller
10001a7eb:	41 ff d6	callq	*%r14
10001a7ee:	41 89 c7	movl	%eax, %r15d
10001a7f1:	4c 8b 35 20 86 03 00	movq	230944(%rip), %r14
10001a7f8:	4b 8b 74 35 00	movq	(%r13,%r14), %rsi
10001a7fd:	48 85 f6	testq	%rsi, %rsi
10001a800:	74 26	je	0x10001a828
10001a802:	48 8b 15 c7 65 03 00	movq	222663(%rip), %rdx ## Objc selector ref: bounds
10001a809:	48 8d 9d 50 ff ff ff	leaq	-176(%rbp), %rbx
10001a810:	48 89 df	movq	%rbx, %rdi
10001a813:	e8 ca 4c 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001a818:	f2 0f 10 2b	movsd	(%rbx), %xmm5
10001a81c:	f2 0f 10 73 08	movsd	8(%rbx), %xmm6
10001a821:	66 0f 10 53 10	movupd	16(%rbx), %xmm2
10001a826:	eb 0c	jmp	0x10001a834
10001a828:	66 0f 57 d2	xorpd	%xmm2, %xmm2
10001a82c:	66 0f 57 f6	xorpd	%xmm6, %xmm6
10001a830:	66 0f 57 ed	xorpd	%xmm5, %xmm5
10001a834:	48 8b 05 ed 85 03 00	movq	230893(%rip), %rax
10001a83b:	49 8b 74 05 00	movq	(%r13,%rax), %rsi
10001a840:	48 85 f6	testq	%rsi, %rsi
10001a843:	74 40	je	0x10001a885
10001a845:	48 8b 15 bc 68 03 00	movq	223420(%rip), %rdx ## Objc selector ref: documentVisibleRect
10001a84c:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10001a853:	48 89 df	movq	%rbx, %rdi
10001a856:	f2 0f 11 6d c8	movsd	%xmm5, -56(%rbp)
10001a85b:	f2 0f 11 75 d0	movsd	%xmm6, -48(%rbp)
10001a860:	66 0f 29 55 a0	movapd	%xmm2, -96(%rbp)
10001a865:	e8 78 4c 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001a86a:	66 0f 28 55 a0	movapd	-96(%rbp), %xmm2
10001a86f:	f2 0f 10 75 d0	movsd	-48(%rbp), %xmm6
10001a874:	f2 0f 10 6d c8	movsd	-56(%rbp), %xmm5
10001a879:	f2 0f 10 43 10	movsd	16(%rbx), %xmm0
10001a87e:	f2 0f 10 63 18	movsd	24(%rbx), %xmm4
10001a883:	eb 14	jmp	0x10001a899
10001a885:	0f 57 c0	xorps	%xmm0, %xmm0
10001a888:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10001a88c:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10001a893:	0f 57 e4	xorps	%xmm4, %xmm4
10001a896:	0f 57 c0	xorps	%xmm0, %xmm0
10001a899:	f3 0f 10 4d c0	movss	-64(%rbp), %xmm1
10001a89e:	f3 0f 5a d9	cvtss2sd	%xmm1, %xmm3
10001a8a2:	f2 0f 12 cb	movddup	%xmm3, %xmm1
10001a8a6:	66 0f 59 d1	mulpd	%xmm1, %xmm2
10001a8aa:	66 0f 5a ca	cvtpd2ps	%xmm2, %xmm1
10001a8ae:	66 0f 3a 08 c9 0a	roundps	$10, %xmm1, %xmm1
10001a8b4:	0f 28 15 d5 e9 01 00	movaps	125397(%rip), %xmm2
10001a8bb:	0f c2 d1 01	cmpltps	%xmm1, %xmm2
10001a8bf:	66 0f 38 25 d2	pmovsxdq	%xmm2, %xmm2
10001a8c4:	66 0f 50 c2	movmskpd	%xmm2, %eax
10001a8c8:	3c 03	cmpb	$3, %al
10001a8ca:	0f 85 b3 02 00 00	jne	0x10001ab83
10001a8d0:	f2 0f 11 65 a0	movsd	%xmm4, -96(%rbp)
10001a8d5:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
10001a8da:	0f 57 c0	xorps	%xmm0, %xmm0
10001a8dd:	f3 0f 5a c1	cvtss2sd	%xmm1, %xmm0
10001a8e1:	f3 0f 16 c9	movshdup	%xmm1, %xmm1
10001a8e5:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
10001a8e9:	f2 0f 59 f3	mulsd	%xmm3, %xmm6
10001a8ed:	0f 57 d2	xorps	%xmm2, %xmm2
10001a8f0:	f2 0f 5a d6	cvtsd2ss	%xmm6, %xmm2
10001a8f4:	66 0f 3a 0a d2 09	roundss	$9, %xmm2, %xmm2
10001a8fa:	f3 0f 5a d2	cvtss2sd	%xmm2, %xmm2
10001a8fe:	f2 0f 11 55 b8	movsd	%xmm2, -72(%rbp)
10001a903:	f2 0f 59 eb	mulsd	%xmm3, %xmm5
10001a907:	0f 57 d2	xorps	%xmm2, %xmm2
10001a90a:	f2 0f 5a d5	cvtsd2ss	%xmm5, %xmm2
10001a90e:	66 0f 3a 0a d2 09	roundss	$9, %xmm2, %xmm2
10001a914:	f3 0f 5a d2	cvtss2sd	%xmm2, %xmm2
10001a918:	f2 0f 11 55 98	movsd	%xmm2, -104(%rbp)
10001a91d:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001a922:	48 8b 35 47 75 03 00	movq	226631(%rip), %rsi ## Objc selector ref: setFrameSize:
10001a929:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
10001a92e:	f2 0f 11 4d c0	movsd	%xmm1, -64(%rbp)
10001a933:	48 8b 1d e6 22 02 00	movq	140006(%rip), %rbx ## Objc message: -[%rdi setFrameSize:]
10001a93a:	ff d3	callq	*%rbx
10001a93c:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001a941:	48 8b 35 b8 73 03 00	movq	226232(%rip), %rsi ## Objc selector ref: setBoundsOrigin:
10001a948:	f2 0f 10 45 98	movsd	-104(%rbp), %xmm0
10001a94d:	f2 0f 10 4d b8	movsd	-72(%rbp), %xmm1
10001a952:	ff d3	callq	*%rbx
10001a954:	45 84 e4	testb	%r12b, %r12b
10001a957:	74 31	je	0x10001a98a
10001a959:	45 84 ff	testb	%r15b, %r15b
10001a95c:	74 2c	je	0x10001a98a
10001a95e:	48 8b 3d 73 7d 03 00	movq	228723(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001a965:	4c 8b 25 84 72 03 00	movq	225924(%rip), %r12 ## Objc selector ref: scrollerWidth
10001a96c:	4c 89 e6	movq	%r12, %rsi
10001a96f:	ff 15 ab 22 02 00	callq	*139947(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001a975:	f2 0f 58 45 d0	addsd	-48(%rbp), %xmm0
10001a97a:	66 0f 2e 45 c8	ucomisd	-56(%rbp), %xmm0
10001a97f:	73 45	jae	0x10001a9c6
10001a981:	31 c0	xorl	%eax, %eax
10001a983:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001a988:	eb 62	jmp	0x10001a9ec
10001a98a:	45 84 e4	testb	%r12b, %r12b
10001a98d:	0f 94 c0	sete	%al
10001a990:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001a995:	75 55	jne	0x10001a9ec
10001a997:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001a99c:	66 0f 2e 45 d0	ucomisd	-48(%rbp), %xmm0
10001a9a1:	76 49	jbe	0x10001a9ec
10001a9a3:	48 8b 3d 2e 7d 03 00	movq	228654(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001a9aa:	48 8b 35 3f 72 03 00	movq	225855(%rip), %rsi ## Objc selector ref: scrollerWidth
10001a9b1:	ff 15 69 22 02 00	callq	*139881(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001a9b7:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001a9bc:	66 0f 28 d1	movapd	%xmm1, %xmm2
10001a9c0:	f2 0f 5c d0	subsd	%xmm0, %xmm2
10001a9c4:	eb 5f	jmp	0x10001aa25
10001a9c6:	48 8b 3d 0b 7d 03 00	movq	228619(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001a9cd:	4c 89 e6	movq	%r12, %rsi
10001a9d0:	ff 15 4a 22 02 00	callq	*139850(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001a9d6:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001a9db:	f2 0f 58 c1	addsd	%xmm1, %xmm0
10001a9df:	66 0f 2e 45 c0	ucomisd	-64(%rbp), %xmm0
10001a9e4:	0f 83 b3 00 00 00	jae	0x10001aa9d
10001a9ea:	31 c0	xorl	%eax, %eax
10001a9ec:	66 0f 28 d1	movapd	%xmm1, %xmm2
10001a9f0:	84 c0	testb	%al, %al
10001a9f2:	75 31	jne	0x10001aa25
10001a9f4:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001a9f9:	66 0f 2e 45 d0	ucomisd	-48(%rbp), %xmm0
10001a9fe:	66 0f 28 d1	movapd	%xmm1, %xmm2
10001aa02:	77 21	ja	0x10001aa25
10001aa04:	48 8b 3d cd 7c 03 00	movq	228557(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001aa0b:	48 8b 35 de 71 03 00	movq	225758(%rip), %rsi ## Objc selector ref: scrollerWidth
10001aa12:	ff 15 08 22 02 00	callq	*139784(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001aa18:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001aa1d:	66 0f 28 d0	movapd	%xmm0, %xmm2
10001aa21:	f2 0f 58 d1	addsd	%xmm1, %xmm2
10001aa25:	45 84 ff	testb	%r15b, %r15b
10001aa28:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
10001aa2d:	f2 0f 11 55 b8	movsd	%xmm2, -72(%rbp)
10001aa32:	75 2c	jne	0x10001aa60
10001aa34:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10001aa38:	76 26	jbe	0x10001aa60
10001aa3a:	48 8b 3d 97 7c 03 00	movq	228503(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001aa41:	48 8b 35 a8 71 03 00	movq	225704(%rip), %rsi ## Objc selector ref: scrollerWidth
10001aa48:	ff 15 d2 21 02 00	callq	*139730(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001aa4e:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10001aa53:	f2 0f 5c c8	subsd	%xmm0, %xmm1
10001aa57:	66 0f 28 c1	movapd	%xmm1, %xmm0
10001aa5b:	e9 a4 00 00 00	jmp	0x10001ab04
10001aa60:	45 84 ff	testb	%r15b, %r15b
10001aa63:	0f 84 96 00 00 00	je	0x10001aaff
10001aa69:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10001aa6d:	4c 8b 35 fc 73 03 00	movq	226300(%rip), %r14 ## Objc selector ref: setFrameSize:
10001aa74:	0f 87 1b 01 00 00	ja	0x10001ab95
10001aa7a:	48 8b 3d 57 7c 03 00	movq	228439(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001aa81:	48 8b 35 68 71 03 00	movq	225640(%rip), %rsi ## Objc selector ref: scrollerWidth
10001aa88:	ff 15 92 21 02 00	callq	*139666(%rip) ## Objc message: +[NSScroller scrollerWidth]
10001aa8e:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10001aa93:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10001aa97:	66 0f 28 c1	movapd	%xmm1, %xmm0
10001aa9b:	eb 6e	jmp	0x10001ab0b
10001aa9d:	4c 8b 35 84 83 03 00	movq	230276(%rip), %r14
10001aaa4:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001aaa9:	48 8b 35 d0 73 03 00	movq	226256(%rip), %rsi ## Objc selector ref: setHasHorizontalScroller:
10001aab0:	31 d2	xorl	%edx, %edx
10001aab2:	ff d3	callq	*%rbx
10001aab4:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10001aab9:	48 8b 35 d8 73 03 00	movq	226264(%rip), %rsi ## Objc selector ref: setHasVerticalScroller:
10001aac0:	31 d2	xorl	%edx, %edx
10001aac2:	ff d3	callq	*%rbx
10001aac4:	48 8b 3d 0d 7c 03 00	movq	228365(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001aacb:	4c 89 e6	movq	%r12, %rsi
10001aace:	ff d3	callq	*%rbx
10001aad0:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10001aad5:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10001aad9:	f2 0f 11 4d d0	movsd	%xmm1, -48(%rbp)
10001aade:	48 8b 3d f3 7b 03 00	movq	228339(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScroller
10001aae5:	4c 89 e6	movq	%r12, %rsi
10001aae8:	ff d3	callq	*%rbx
10001aaea:	f2 0f 10 4d a0	movsd	-96(%rbp), %xmm1
10001aaef:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10001aaf3:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
10001aaf8:	f2 0f 11 4d b8	movsd	%xmm1, -72(%rbp)
10001aafd:	eb 05	jmp	0x10001ab04
10001aaff:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
10001ab04:	4c 8b 35 65 73 03 00	movq	226149(%rip), %r14 ## Objc selector ref: setFrameSize:
10001ab0b:	31 d2	xorl	%edx, %edx
10001ab0d:	66 0f 2e 45 c8	ucomisd	-56(%rbp), %xmm0
10001ab12:	0f 92 c0	setb	%al
10001ab15:	48 8b 0d 0c 83 03 00	movq	230156(%rip), %rcx
10001ab1c:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
10001ab21:	48 8b 35 58 73 03 00	movq	226136(%rip), %rsi ## Objc selector ref: setHasHorizontalScroller:
10001ab28:	72 05	jb	0x10001ab2f
10001ab2a:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
10001ab2f:	88 c2	movb	%al, %dl
10001ab31:	ff d3	callq	*%rbx
10001ab33:	31 d2	xorl	%edx, %edx
10001ab35:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
10001ab3a:	f2 0f 10 4d b8	movsd	-72(%rbp), %xmm1
10001ab3f:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10001ab43:	0f 92 c0	setb	%al
10001ab46:	72 04	jb	0x10001ab4c
10001ab48:	66 0f 28 c1	movapd	%xmm1, %xmm0
10001ab4c:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
10001ab51:	48 8b 0d d0 82 03 00	movq	230096(%rip), %rcx
10001ab58:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
10001ab5d:	48 8b 35 34 73 03 00	movq	226100(%rip), %rsi ## Objc selector ref: setHasVerticalScroller:
10001ab64:	88 c2	movb	%al, %dl
10001ab66:	ff d3	callq	*%rbx
10001ab68:	48 8b 05 b1 82 03 00	movq	230065(%rip), %rax
10001ab6f:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001ab74:	4c 89 f6	movq	%r14, %rsi
10001ab77:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001ab7c:	f2 0f 10 4d c0	movsd	-64(%rbp), %xmm1
10001ab81:	ff d3	callq	*%rbx
10001ab83:	48 81 c4 88 00 00 00	addq	$136, %rsp
10001ab8a:	5b	popq	%rbx
10001ab8b:	41 5c	popq	%r12
10001ab8d:	41 5d	popq	%r13
10001ab8f:	41 5e	popq	%r14
10001ab91:	41 5f	popq	%r15
10001ab93:	5d	popq	%rbp
10001ab94:	c3	retq
10001ab95:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
10001ab9a:	e9 6c ff ff ff	jmp	0x10001ab0b
10001ab9f:	55	pushq	%rbp
10001aba0:	48 89 e5	movq	%rsp, %rbp
10001aba3:	41 57	pushq	%r15
10001aba5:	41 56	pushq	%r14
10001aba7:	41 54	pushq	%r12
10001aba9:	53	pushq	%rbx
10001abaa:	48 83 ec 50	subq	$80, %rsp
10001abae:	48 89 fb	movq	%rdi, %rbx
10001abb1:	4c 8b 3d 68 82 03 00	movq	229992(%rip), %r15
10001abb8:	4a 8b 34 3f	movq	(%rdi,%r15), %rsi
10001abbc:	48 85 f6	testq	%rsi, %rsi
10001abbf:	74 1b	je	0x10001abdc
10001abc1:	48 8b 15 d8 66 03 00	movq	222936(%rip), %rdx ## Objc selector ref: frame
10001abc8:	4c 8d 75 90	leaq	-112(%rbp), %r14
10001abcc:	4c 89 f7	movq	%r14, %rdi
10001abcf:	e8 0e 49 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001abd4:	66 41 0f 10 4e 10	movupd	16(%r14), %xmm1
10001abda:	eb 0e	jmp	0x10001abea
10001abdc:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10001abe0:	66 0f 29 4d a0	movapd	%xmm1, -96(%rbp)
10001abe5:	66 0f 29 4d 90	movapd	%xmm1, -112(%rbp)
10001abea:	4c 8b 25 1f 82 03 00	movq	229919(%rip), %r12
10001abf1:	4c 8b 35 20 82 03 00	movq	229920(%rip), %r14
10001abf8:	4a 8b 34 33	movq	(%rbx,%r14), %rsi
10001abfc:	48 85 f6	testq	%rsi, %rsi
10001abff:	74 1c	je	0x10001ac1d
10001ac01:	48 8b 15 98 66 03 00	movq	222872(%rip), %rdx ## Objc selector ref: frame
10001ac08:	48 8d 7d b0	leaq	-80(%rbp), %rdi
10001ac0c:	66 0f 29 4d d0	movapd	%xmm1, -48(%rbp)
10001ac11:	e8 cc 48 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001ac16:	66 0f 28 4d d0	movapd	-48(%rbp), %xmm1
10001ac1b:	eb 0b	jmp	0x10001ac28
10001ac1d:	0f 57 c0	xorps	%xmm0, %xmm0
10001ac20:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10001ac24:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10001ac28:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10001ac2c:	42 0f 11 04 23	movups	%xmm0, (%rbx,%r12)
10001ac31:	66 42 0f 10 04 23	movupd	(%rbx,%r12), %xmm0
10001ac37:	66 0f 5c c8	subpd	%xmm0, %xmm1
10001ac3b:	66 0f 59 0d 1d da 01 00	mulpd	121373(%rip), %xmm1
10001ac43:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
10001ac47:	48 8b 05 3a 83 03 00	movq	230202(%rip), %rax
10001ac4e:	66 0f 3a 08 c0 09	roundps	$9, %xmm0, %xmm0
10001ac54:	0f 5a c0	cvtps2pd	%xmm0, %xmm0
10001ac57:	0f 11 04 03	movups	%xmm0, (%rbx,%rax)
10001ac5b:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001ac5f:	48 8b 35 02 72 03 00	movq	225794(%rip), %rsi ## Objc selector ref: setFrameOrigin:
10001ac66:	0f 28 c8	movaps	%xmm0, %xmm1
10001ac69:	66 0f 15 c8	unpckhpd	%xmm0, %xmm1
10001ac6d:	4c 8b 35 ac 1f 02 00	movq	139180(%rip), %r14 ## Objc message: +[NSScroller setFrameOrigin:]
10001ac74:	41 ff d6	callq	*%r14
10001ac77:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001ac7b:	48 8b 35 46 73 03 00	movq	226118(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
10001ac82:	ba 01 00 00 00	movl	$1, %edx
10001ac87:	41 ff d6	callq	*%r14
10001ac8a:	48 83 c4 50	addq	$80, %rsp
10001ac8e:	5b	popq	%rbx
10001ac8f:	41 5c	popq	%r12
10001ac91:	41 5e	popq	%r14
10001ac93:	41 5f	popq	%r15
10001ac95:	5d	popq	%rbp
10001ac96:	c3	retq
10001ac97:	55	pushq	%rbp
10001ac98:	48 89 e5	movq	%rsp, %rbp
10001ac9b:	41 57	pushq	%r15
10001ac9d:	41 56	pushq	%r14
10001ac9f:	41 55	pushq	%r13
10001aca1:	41 54	pushq	%r12
10001aca3:	53	pushq	%rbx
10001aca4:	48 81 ec a8 00 00 00	subq	$168, %rsp
10001acab:	f3 0f 11 45 bc	movss	%xmm0, -68(%rbp)
10001acb0:	48 89 fb	movq	%rdi, %rbx
10001acb3:	4c 8b 25 5e 81 03 00	movq	229726(%rip), %r12
10001acba:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10001acbe:	48 8b 35 c3 65 03 00	movq	222659(%rip), %rsi ## Objc selector ref: fitSize
10001acc5:	4c 8b 2d 54 1f 02 00	movq	139092(%rip), %r13 ## Objc message: -[%rdi fitSize]
10001accc:	41 ff d5	callq	*%r13
10001accf:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
10001acd4:	f2 0f 11 4d d0	movsd	%xmm1, -48(%rbp)
10001acd9:	48 8b 3d f0 79 03 00	movq	227824(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSScreen
10001ace0:	48 8b 35 11 6a 03 00	movq	223761(%rip), %rsi ## Objc selector ref: mainScreen
10001ace7:	41 ff d5	callq	*%r13
10001acea:	48 85 c0	testq	%rax, %rax
10001aced:	74 15	je	0x10001ad04
10001acef:	48 8b 15 da 77 03 00	movq	227290(%rip), %rdx ## Objc selector ref: visibleFrame
10001acf6:	48 8d 7d 90	leaq	-112(%rbp), %rdi
10001acfa:	48 89 c6	movq	%rax, %rsi
10001acfd:	e8 e0 47 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001ad02:	eb 0b	jmp	0x10001ad0f
10001ad04:	0f 57 c0	xorps	%xmm0, %xmm0
10001ad07:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10001ad0b:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10001ad0f:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10001ad13:	48 8b 35 9e 6f 03 00	movq	225182(%rip), %rsi ## Objc selector ref: setAutoresizingMask:
10001ad1a:	ba 12 00 00 00	movl	$18, %edx
10001ad1f:	41 ff d5	callq	*%r13
10001ad22:	48 8b 05 e7 80 03 00	movq	229607(%rip), %rax
10001ad29:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001ad2e:	f2 0f 5c 04 03	subsd	(%rbx,%rax), %xmm0
10001ad33:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001ad37:	f3 0f 11 45 c8	movss	%xmm0, -56(%rbp)
10001ad3c:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
10001ad41:	f2 0f 5c 44 03 08	subsd	8(%rbx,%rax), %xmm0
10001ad47:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001ad4b:	f3 0f 11 45 d0	movss	%xmm0, -48(%rbp)
10001ad50:	4c 8b 35 b1 80 03 00	movq	229553(%rip), %r14
10001ad57:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001ad5b:	48 8b 35 e6 61 03 00	movq	221670(%rip), %rsi ## Objc selector ref: contentView
10001ad62:	41 ff d5	callq	*%r13
10001ad65:	48 85 c0	testq	%rax, %rax
10001ad68:	74 27	je	0x10001ad91
10001ad6a:	48 8b 15 5f 60 03 00	movq	221279(%rip), %rdx ## Objc selector ref: bounds
10001ad71:	4c 8d bd 30 ff ff ff	leaq	-208(%rbp), %r15
10001ad78:	4c 89 ff	movq	%r15, %rdi
10001ad7b:	48 89 c6	movq	%rax, %rsi
10001ad7e:	e8 5f 47 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001ad83:	f2 41 0f 10 4f 10	movsd	16(%r15), %xmm1
10001ad89:	f2 41 0f 10 47 18	movsd	24(%r15), %xmm0
10001ad8f:	eb 18	jmp	0x10001ada9
10001ad91:	0f 57 c0	xorps	%xmm0, %xmm0
10001ad94:	0f 29 85 40 ff ff ff	movaps	%xmm0, -192(%rbp)
10001ad9b:	0f 29 85 30 ff ff ff	movaps	%xmm0, -208(%rbp)
10001ada2:	0f 57 c0	xorps	%xmm0, %xmm0
10001ada5:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10001ada9:	f3 0f 5a 55 c8	cvtss2sd	-56(%rbp), %xmm2
10001adae:	f2 0f 58 d1	addsd	%xmm1, %xmm2
10001adb2:	f2 0f 11 55 c0	movsd	%xmm2, -64(%rbp)
10001adb7:	0f 57 c9	xorps	%xmm1, %xmm1
10001adba:	f3 0f 5a 4d d0	cvtss2sd	-48(%rbp), %xmm1
10001adbf:	f2 0f 58 c8	addsd	%xmm0, %xmm1
10001adc3:	f2 0f 11 4d b0	movsd	%xmm1, -80(%rbp)
10001adc8:	4c 8b 3d 59 80 03 00	movq	229465(%rip), %r15
10001adcf:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001add3:	48 8b 35 a6 70 03 00	movq	225446(%rip), %rsi ## Objc selector ref: setHasHorizontalScroller:
10001adda:	31 d2	xorl	%edx, %edx
10001addc:	41 ff d5	callq	*%r13
10001addf:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10001ade3:	48 8b 35 ae 70 03 00	movq	225454(%rip), %rsi ## Objc selector ref: setHasVerticalScroller:
10001adea:	31 d2	xorl	%edx, %edx
10001adec:	41 ff d5	callq	*%r13
10001adef:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001adf3:	48 8b 35 3e 6f 03 00	movq	225086(%rip), %rsi ## Objc selector ref: setContentSize:
10001adfa:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
10001adff:	f2 0f 10 4d b0	movsd	-80(%rbp), %xmm1
10001ae04:	41 ff d5	callq	*%r13
10001ae07:	4a 8b 34 33	movq	(%rbx,%r14), %rsi
10001ae0b:	48 85 f6	testq	%rsi, %rsi
10001ae0e:	74 58	je	0x10001ae68
10001ae10:	4c 8b 3d 89 64 03 00	movq	222345(%rip), %r15 ## Objc selector ref: frame
10001ae17:	4c 8d a5 50 ff ff ff	leaq	-176(%rbp), %r12
10001ae1e:	4c 89 e7	movq	%r12, %rdi
10001ae21:	4c 89 fa	movq	%r15, %rdx
10001ae24:	e8 b9 46 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001ae29:	4a 8b 34 33	movq	(%rbx,%r14), %rsi
10001ae2d:	f2 41 0f 10 54 24 18	movsd	24(%r12), %xmm2
10001ae34:	48 85 f6	testq	%rsi, %rsi
10001ae37:	74 46	je	0x10001ae7f
10001ae39:	4c 8d a5 70 ff ff ff	leaq	-144(%rbp), %r12
10001ae40:	4c 89 e7	movq	%r12, %rdi
10001ae43:	4c 89 fa	movq	%r15, %rdx
10001ae46:	f2 0f 11 55 c0	movsd	%xmm2, -64(%rbp)
10001ae4b:	e8 92 46 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001ae50:	f2 0f 10 55 c0	movsd	-64(%rbp), %xmm2
10001ae55:	f2 41 0f 10 04 24	movsd	(%r12), %xmm0
10001ae5b:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001ae5f:	4c 8b 25 b2 7f 03 00	movq	229298(%rip), %r12
10001ae66:	eb 31	jmp	0x10001ae99
10001ae68:	0f 57 c0	xorps	%xmm0, %xmm0
10001ae6b:	0f 29 85 60 ff ff ff	movaps	%xmm0, -160(%rbp)
10001ae72:	0f 29 85 50 ff ff ff	movaps	%xmm0, -176(%rbp)
10001ae79:	66 0f 57 d2	xorpd	%xmm2, %xmm2
10001ae7d:	eb 07	jmp	0x10001ae86
10001ae7f:	4c 8b 25 92 7f 03 00	movq	229266(%rip), %r12
10001ae86:	0f 57 c0	xorps	%xmm0, %xmm0
10001ae89:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10001ae8d:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10001ae94:	0f 57 c0	xorps	%xmm0, %xmm0
10001ae97:	31 ff	xorl	%edi, %edi
10001ae99:	4c 8b 3d 18 6e 03 00	movq	224792(%rip), %r15 ## Objc selector ref: setAutoresizingMask:
10001aea0:	f2 0f 10 4d 98	movsd	-104(%rbp), %xmm1
10001aea5:	f2 0f 58 4d a8	addsd	-88(%rbp), %xmm1
10001aeaa:	f2 0f 5c ca	subsd	%xmm2, %xmm1
10001aeae:	48 8b 35 b3 6f 03 00	movq	225203(%rip), %rsi ## Objc selector ref: setFrameOrigin:
10001aeb5:	41 ff d5	callq	*%r13
10001aeb8:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10001aebc:	ba 2d 00 00 00	movl	$45, %edx
10001aec1:	4c 89 fe	movq	%r15, %rsi
10001aec4:	41 ff d5	callq	*%r13
10001aec7:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001aecb:	48 8b 35 b6 6e 03 00	movq	224950(%rip), %rsi ## Objc selector ref: setDelegate:
10001aed2:	48 89 da	movq	%rbx, %rdx
10001aed5:	41 ff d5	callq	*%r13
10001aed8:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10001aedc:	48 8b 35 c5 6e 03 00	movq	224965(%rip), %rsi ## Objc selector ref: setDisplaysWhenScreenProfileChanges:
10001aee3:	ba 01 00 00 00	movl	$1, %edx
10001aee8:	41 ff d5	callq	*%r13
10001aeeb:	f3 0f 10 05 a1 d0 01 00	movss	118945(%rip), %xmm0
10001aef3:	f3 0f 10 4d bc	movss	-68(%rbp), %xmm1
10001aef8:	0f 2e c1	ucomiss	%xmm1, %xmm0
10001aefb:	76 13	jbe	0x10001af10
10001aefd:	0f 28 c1	movaps	%xmm1, %xmm0
10001af00:	48 8b 35 61 76 03 00	movq	226913(%rip), %rsi ## Objc selector ref: zoomAction:
10001af07:	48 89 df	movq	%rbx, %rdi
10001af0a:	ff 15 10 1d 02 00	callq	*138512(%rip) ## Objc message: +[NSScreen zoomAction:]
10001af10:	0f 57 c0	xorps	%xmm0, %xmm0
10001af13:	f3 0f 10 4d c8	movss	-56(%rbp), %xmm1
10001af18:	0f 2e c8	ucomiss	%xmm0, %xmm1
10001af1b:	75 2e	jne	0x10001af4b
10001af1d:	7a 2c	jp	0x10001af4b
10001af1f:	f3 0f 10 4d d0	movss	-48(%rbp), %xmm1
10001af24:	0f 2e c8	ucomiss	%xmm0, %xmm1
10001af27:	75 22	jne	0x10001af4b
10001af29:	7a 20	jp	0x10001af4b
10001af2b:	4a 8b 1c 23	movq	(%rbx,%r12), %rbx
10001af2f:	48 8b 35 72 62 03 00	movq	221810(%rip), %rsi ## Objc selector ref: drawingQuality
10001af36:	48 89 df	movq	%rbx, %rdi
10001af39:	41 ff d5	callq	*%r13
10001af3c:	48 8b 35 0d 62 03 00	movq	221709(%rip), %rsi ## Objc selector ref: drawCache:
10001af43:	48 89 df	movq	%rbx, %rdi
10001af46:	89 c2	movl	%eax, %edx
10001af48:	41 ff d5	callq	*%r13
10001af4b:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10001af52:	5b	popq	%rbx
10001af53:	41 5c	popq	%r12
10001af55:	41 5d	popq	%r13
10001af57:	41 5e	popq	%r14
10001af59:	41 5f	popq	%r15
10001af5b:	5d	popq	%rbp
10001af5c:	c3	retq
10001af5d:	55	pushq	%rbp
10001af5e:	48 89 e5	movq	%rsp, %rbp
10001af61:	b8 01 00 00 00	movl	$1, %eax
10001af66:	5d	popq	%rbp
10001af67:	c3	retq
10001af68:	55	pushq	%rbp
10001af69:	48 89 e5	movq	%rsp, %rbp
10001af6c:	41 56	pushq	%r14
10001af6e:	53	pushq	%rbx
10001af6f:	48 89 fb	movq	%rdi, %rbx
10001af72:	48 8b 35 37 68 03 00	movq	223287(%rip), %rsi ## Objc selector ref: newPageViewFrame:
10001af79:	4c 8b 35 a0 1c 02 00	movq	138400(%rip), %r14 ## Objc message: -[%rdi newPageViewFrame:]
10001af80:	f3 0f 10 05 0c d0 01 00	movss	118796(%rip), %xmm0
10001af88:	41 ff d6	callq	*%r14
10001af8b:	48 8b 35 be 5e 03 00	movq	220862(%rip), %rsi ## Objc selector ref: centerPageViewFrame
10001af92:	48 89 df	movq	%rbx, %rdi
10001af95:	4c 89 f0	movq	%r14, %rax
10001af98:	5b	popq	%rbx
10001af99:	41 5e	popq	%r14
10001af9b:	5d	popq	%rbp
10001af9c:	ff e0	jmpq	*%rax
10001af9e:	55	pushq	%rbp
10001af9f:	48 89 e5	movq	%rsp, %rbp
10001afa2:	41 57	pushq	%r15
10001afa4:	41 56	pushq	%r14
10001afa6:	53	pushq	%rbx
10001afa7:	48 81 ec 18 04 00 00	subq	$1048, %rsp
10001afae:	48 8b 05 63 18 02 00	movq	137315(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001afb5:	48 8b 00	movq	(%rax), %rax
10001afb8:	48 89 45 e0	movq	%rax, -32(%rbp)
10001afbc:	4d 85 c0	testq	%r8, %r8
10001afbf:	0f 84 0c 01 00 00	je	0x10001b0d1
10001afc5:	4d 89 c7	movq	%r8, %r15
10001afc8:	49 89 fe	movq	%rdi, %r14
10001afcb:	4c 89 c7	movq	%r8, %rdi
10001afce:	e8 27 3f 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
10001afd3:	48 89 c3	movq	%rax, %rbx
10001afd6:	e8 7d 3e 01 00	callq	0x10002ee58 ## symbol stub for: _CFArrayGetTypeID
10001afdb:	48 39 c3	cmpq	%rax, %rbx
10001afde:	75 54	jne	0x10001b034
10001afe0:	48 8b 05 61 7e 03 00	movq	228961(%rip), %rax
10001afe7:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001afeb:	48 8b 35 46 6c 03 00	movq	224326(%rip), %rsi ## Objc selector ref: selectedItem
10001aff2:	48 8b 1d 27 1c 02 00	movq	138279(%rip), %rbx ## Objc message: -[%rdi selectedItem]
10001aff9:	ff d3	callq	*%rbx
10001affb:	48 8b 35 96 73 03 00	movq	226198(%rip), %rsi ## Objc selector ref: tag
10001b002:	48 89 c7	movq	%rax, %rdi
10001b005:	ff d3	callq	*%rbx
10001b007:	48 83 f8 ff	cmpq	$-1, %rax
10001b00b:	74 27	je	0x10001b034
10001b00d:	49 89 c6	movq	%rax, %r14
10001b010:	4c 89 ff	movq	%r15, %rdi
10001b013:	e8 3a 3e 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10001b018:	49 39 c6	cmpq	%rax, %r14
10001b01b:	73 17	jae	0x10001b034
10001b01d:	4c 89 ff	movq	%r15, %rdi
10001b020:	4c 89 f6	movq	%r14, %rsi
10001b023:	e8 36 3e 01 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
10001b028:	49 89 c7	movq	%rax, %r15
10001b02b:	48 85 c0	testq	%rax, %rax
10001b02e:	0f 84 9d 00 00 00	je	0x10001b0d1
10001b034:	4c 89 ff	movq	%r15, %rdi
10001b037:	e8 be 3e 01 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
10001b03c:	48 89 c3	movq	%rax, %rbx
10001b03f:	e8 98 3e 01 00	callq	0x10002eedc ## symbol stub for: _CFDictionaryGetTypeID
10001b044:	48 39 c3	cmpq	%rax, %rbx
10001b047:	0f 85 84 00 00 00	jne	0x10001b0d1
10001b04d:	48 8b 05 5c 1b 02 00	movq	138076(%rip), %rax ## literal pool symbol address: _kQFilterURL
10001b054:	48 8b 30	movq	(%rax), %rsi
10001b057:	4c 89 ff	movq	%r15, %rdi
10001b05a:	e8 83 3e 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10001b05f:	48 85 c0	testq	%rax, %rax
10001b062:	74 6d	je	0x10001b0d1
10001b064:	48 8d 95 d0 fb ff ff	leaq	-1072(%rbp), %rdx
10001b06b:	b9 01 04 00 00	movl	$1025, %ecx
10001b070:	48 89 c7	movq	%rax, %rdi
10001b073:	be 01 00 00 00	movl	$1, %esi
10001b078:	e8 e9 3e 01 00	callq	0x10002ef66 ## symbol stub for: _CFURLGetFileSystemRepresentation
10001b07d:	84 c0	testb	%al, %al
10001b07f:	74 50	je	0x10001b0d1
10001b081:	48 8b 05 e8 18 02 00	movq	137448(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
10001b088:	48 8b 18	movq	(%rax), %rbx
10001b08b:	4c 8d b5 d0 fb ff ff	leaq	-1072(%rbp), %r14
10001b092:	4c 89 f7	movq	%r14, %rdi
10001b095:	e8 a2 44 01 00	callq	0x10002f53c ## symbol stub for: _strlen
10001b09a:	48 89 df	movq	%rbx, %rdi
10001b09d:	4c 89 f6	movq	%r14, %rsi
10001b0a0:	48 89 c2	movq	%rax, %rdx
10001b0a3:	b9 00 01 00 08	movl	$134217984, %ecx
10001b0a8:	45 31 c0	xorl	%r8d, %r8d
10001b0ab:	e8 86 3e 01 00	callq	0x10002ef36 ## symbol stub for: _CFStringCreateWithBytes
10001b0b0:	48 8b 35 29 72 03 00	movq	225833(%rip), %rsi ## Objc selector ref: stringByStandardizingPath
10001b0b7:	48 8b 1d 62 1b 02 00	movq	138082(%rip), %rbx ## Objc message: -[%rdi stringByStandardizingPath]
10001b0be:	48 89 c7	movq	%rax, %rdi
10001b0c1:	ff d3	callq	*%rbx
10001b0c3:	48 8b 35 06 72 03 00	movq	225798(%rip), %rsi ## Objc selector ref: stringByAbbreviatingWithTildeInPath
10001b0ca:	48 89 c7	movq	%rax, %rdi
10001b0cd:	ff d3	callq	*%rbx
10001b0cf:	eb 02	jmp	0x10001b0d3
10001b0d1:	31 c0	xorl	%eax, %eax
10001b0d3:	48 8b 0d 3e 17 02 00	movq	137022(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
10001b0da:	48 8b 09	movq	(%rcx), %rcx
10001b0dd:	48 3b 4d e0	cmpq	-32(%rbp), %rcx
10001b0e1:	75 0e	jne	0x10001b0f1
10001b0e3:	48 81 c4 18 04 00 00	addq	$1048, %rsp
10001b0ea:	5b	popq	%rbx
10001b0eb:	41 5e	popq	%r14
10001b0ed:	41 5f	popq	%r15
10001b0ef:	5d	popq	%rbp
10001b0f0:	c3	retq
10001b0f1:	e8 ba 42 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001b0f6:	55	pushq	%rbp
10001b0f7:	48 89 e5	movq	%rsp, %rbp
10001b0fa:	48 8b 35 3f 61 03 00	movq	221503(%rip), %rsi ## Objc selector ref: filterDocument
10001b101:	5d	popq	%rbp
10001b102:	ff 25 18 1b 02 00	jmpq	*138008(%rip) ## Objc message: -[%rdi filterDocument]
10001b108:	55	pushq	%rbp
10001b109:	48 89 e5	movq	%rsp, %rbp
10001b10c:	41 56	pushq	%r14
10001b10e:	53	pushq	%rbx
10001b10f:	48 83 ec 30	subq	$48, %rsp
10001b113:	49 89 fe	movq	%rdi, %r14
10001b116:	48 8b 05 fb 16 02 00	movq	136955(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001b11d:	48 8b 00	movq	(%rax), %rax
10001b120:	48 89 45 e8	movq	%rax, -24(%rbp)
10001b124:	48 8b 35 b5 73 03 00	movq	226229(%rip), %rsi ## Objc selector ref: wholeDocument
10001b12b:	ff 15 ef 1a 02 00	callq	*137967(%rip) ## Objc message: -[%rdi wholeDocument]
10001b131:	48 85 c0	testq	%rax, %rax
10001b134:	74 16	je	0x10001b14c
10001b136:	48 8d 0d 23 2f 02 00	leaq	143139(%rip), %rcx ## Objc cfstring ref: @"Image"
10001b13d:	48 89 4d d0	movq	%rcx, -48(%rbp)
10001b141:	48 89 45 c0	movq	%rax, -64(%rbp)
10001b145:	bb 01 00 00 00	movl	$1, %ebx
10001b14a:	eb 02	jmp	0x10001b14e
10001b14c:	31 db	xorl	%ebx, %ebx
10001b14e:	48 8b 35 fb 65 03 00	movq	222715(%rip), %rsi ## Objc selector ref: metadata
10001b155:	4c 89 f7	movq	%r14, %rdi
10001b158:	ff 15 c2 1a 02 00	callq	*137922(%rip) ## Objc message: -[%rdi metadata]
10001b15e:	48 85 c0	testq	%rax, %rax
10001b161:	74 14	je	0x10001b177
10001b163:	48 8d 0d 16 2f 02 00	leaq	143126(%rip), %rcx ## Objc cfstring ref: @"Metadata"
10001b16a:	48 89 4c dd d0	movq	%rcx, -48(%rbp,%rbx,8)
10001b16f:	48 89 44 dd c0	movq	%rax, -64(%rbp,%rbx,8)
10001b174:	48 ff c3	incq	%rbx
10001b177:	48 8b 3d 9a 74 03 00	movq	226458(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001b17e:	48 8b 35 2b 5f 03 00	movq	220971(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:count:
10001b185:	48 8d 55 c0	leaq	-64(%rbp), %rdx
10001b189:	48 8d 4d d0	leaq	-48(%rbp), %rcx
10001b18d:	49 89 d8	movq	%rbx, %r8
10001b190:	ff 15 8a 1a 02 00	callq	*137866(%rip) ## Objc message: +[NSDictionary dictionaryWithObjects:forKeys:count:]
10001b196:	48 8b 0d 7b 16 02 00	movq	136827(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
10001b19d:	48 8b 09	movq	(%rcx), %rcx
10001b1a0:	48 3b 4d e8	cmpq	-24(%rbp), %rcx
10001b1a4:	75 09	jne	0x10001b1af
10001b1a6:	48 83 c4 30	addq	$48, %rsp
10001b1aa:	5b	popq	%rbx
10001b1ab:	41 5e	popq	%r14
10001b1ad:	5d	popq	%rbp
10001b1ae:	c3	retq
10001b1af:	e8 fc 41 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001b1b4:	55	pushq	%rbp
10001b1b5:	48 89 e5	movq	%rsp, %rbp
10001b1b8:	41 57	pushq	%r15
10001b1ba:	41 56	pushq	%r14
10001b1bc:	53	pushq	%rbx
10001b1bd:	48 83 ec 48	subq	$72, %rsp
10001b1c1:	49 89 fe	movq	%rdi, %r14
10001b1c4:	48 8b 05 4d 16 02 00	movq	136781(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001b1cb:	48 8b 00	movq	(%rax), %rax
10001b1ce:	48 89 45 e0	movq	%rax, -32(%rbp)
10001b1d2:	48 8b 35 07 73 03 00	movq	226055(%rip), %rsi ## Objc selector ref: wholeDocument
10001b1d9:	ff 15 41 1a 02 00	callq	*137793(%rip) ## Objc message: -[%rdi wholeDocument]
10001b1df:	48 85 c0	testq	%rax, %rax
10001b1e2:	74 16	je	0x10001b1fa
10001b1e4:	48 8d 0d b5 2e 02 00	leaq	143029(%rip), %rcx ## Objc cfstring ref: @"PDFDoc"
10001b1eb:	48 89 4d c0	movq	%rcx, -64(%rbp)
10001b1ef:	48 89 45 a0	movq	%rax, -96(%rbp)
10001b1f3:	bb 01 00 00 00	movl	$1, %ebx
10001b1f8:	eb 02	jmp	0x10001b1fc
10001b1fa:	31 db	xorl	%ebx, %ebx
10001b1fc:	48 8b 05 bd 7b 03 00	movq	228285(%rip), %rax
10001b203:	49 8b 04 06	movq	(%r14,%rax), %rax
10001b207:	48 85 c0	testq	%rax, %rax
10001b20a:	74 14	je	0x10001b220
10001b20c:	48 8d 0d ad 2e 02 00	leaq	143021(%rip), %rcx ## Objc cfstring ref: @"Filter"
10001b213:	48 89 4c dd c0	movq	%rcx, -64(%rbp,%rbx,8)
10001b218:	48 89 44 dd a0	movq	%rax, -96(%rbp,%rbx,8)
10001b21d:	48 ff c3	incq	%rbx
10001b220:	48 8d 05 b9 2e 02 00	leaq	143033(%rip), %rax ## Objc cfstring ref: @"FilterIndex"
10001b227:	48 89 44 dd c0	movq	%rax, -64(%rbp,%rbx,8)
10001b22c:	48 8b 3d bd 73 03 00	movq	226237(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001b233:	48 8b 05 56 7c 03 00	movq	228438(%rip), %rax
10001b23a:	41 8b 14 06	movl	(%r14,%rax), %edx
10001b23e:	48 8b 35 db 65 03 00	movq	222683(%rip), %rsi ## Objc selector ref: numberWithInt:
10001b245:	4c 8b 3d d4 19 02 00	movq	137684(%rip), %r15 ## Objc message: +[NSNumber numberWithInt:]
10001b24c:	41 ff d7	callq	*%r15
10001b24f:	48 89 44 dd a0	movq	%rax, -96(%rbp,%rbx,8)
10001b254:	48 8d 05 a5 2e 02 00	leaq	143013(%rip), %rax ## Objc cfstring ref: @"FilterName"
10001b25b:	48 89 44 dd c8	movq	%rax, -56(%rbp,%rbx,8)
10001b260:	48 8b 05 e1 7b 03 00	movq	228321(%rip), %rax
10001b267:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001b26b:	48 8b 35 c6 69 03 00	movq	223686(%rip), %rsi ## Objc selector ref: selectedItem
10001b272:	41 ff d7	callq	*%r15
10001b275:	48 8b 35 54 71 03 00	movq	225620(%rip), %rsi ## Objc selector ref: title
10001b27c:	48 89 c7	movq	%rax, %rdi
10001b27f:	41 ff d7	callq	*%r15
10001b282:	48 89 44 dd a8	movq	%rax, -88(%rbp,%rbx,8)
10001b287:	48 83 c3 02	addq	$2, %rbx
10001b28b:	48 8b 3d 86 73 03 00	movq	226182(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001b292:	48 8b 35 17 5e 03 00	movq	220695(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:count:
10001b299:	48 8d 55 a0	leaq	-96(%rbp), %rdx
10001b29d:	48 8d 4d c0	leaq	-64(%rbp), %rcx
10001b2a1:	49 89 d8	movq	%rbx, %r8
10001b2a4:	41 ff d7	callq	*%r15
10001b2a7:	48 8b 0d 6a 15 02 00	movq	136554(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
10001b2ae:	48 8b 09	movq	(%rcx), %rcx
10001b2b1:	48 3b 4d e0	cmpq	-32(%rbp), %rcx
10001b2b5:	75 0b	jne	0x10001b2c2
10001b2b7:	48 83 c4 48	addq	$72, %rsp
10001b2bb:	5b	popq	%rbx
10001b2bc:	41 5e	popq	%r14
10001b2be:	41 5f	popq	%r15
10001b2c0:	5d	popq	%rbp
10001b2c1:	c3	retq
10001b2c2:	e8 e9 40 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001b2c7:	55	pushq	%rbp
10001b2c8:	48 89 e5	movq	%rsp, %rbp
10001b2cb:	5d	popq	%rbp
10001b2cc:	c3	retq
10001b2cd:	55	pushq	%rbp
10001b2ce:	48 89 e5	movq	%rsp, %rbp
10001b2d1:	41 57	pushq	%r15
10001b2d3:	41 56	pushq	%r14
10001b2d5:	41 55	pushq	%r13
10001b2d7:	41 54	pushq	%r12
10001b2d9:	53	pushq	%rbx
10001b2da:	50	pushq	%rax
10001b2db:	48 89 d3	movq	%rdx, %rbx
10001b2de:	49 89 ff	movq	%rdi, %r15
10001b2e1:	4c 8b 25 90 65 03 00	movq	222608(%rip), %r12 ## Objc selector ref: objectForKey:
10001b2e8:	48 8d 15 b1 2d 02 00	leaq	142769(%rip), %rdx ## Objc cfstring ref: @"PDFDoc"
10001b2ef:	4c 8b 2d 2a 19 02 00	movq	137514(%rip), %r13 ## Objc message: +[NSDictionary objectForKey:]
10001b2f6:	48 89 df	movq	%rbx, %rdi
10001b2f9:	4c 89 e6	movq	%r12, %rsi
10001b2fc:	41 ff d5	callq	*%r13
10001b2ff:	49 89 c6	movq	%rax, %r14
10001b302:	48 8d 15 b7 2d 02 00	leaq	142775(%rip), %rdx ## Objc cfstring ref: @"Filter"
10001b309:	48 89 df	movq	%rbx, %rdi
10001b30c:	4c 89 e6	movq	%r12, %rsi
10001b30f:	41 ff d5	callq	*%r13
10001b312:	48 8d 15 c7 2d 02 00	leaq	142791(%rip), %rdx ## Objc cfstring ref: @"FilterIndex"
10001b319:	48 89 df	movq	%rbx, %rdi
10001b31c:	4c 89 e6	movq	%r12, %rsi
10001b31f:	4c 89 eb	movq	%r13, %rbx
10001b322:	41 ff d5	callq	*%r13
10001b325:	48 85 c0	testq	%rax, %rax
10001b328:	74 10	je	0x10001b33a
10001b32a:	48 8b 35 df 61 03 00	movq	221663(%rip), %rsi ## Objc selector ref: intValue
10001b331:	48 89 c7	movq	%rax, %rdi
10001b334:	ff 15 e6 18 02 00	callq	*137446(%rip) ## Objc message: -[%rdi intValue]
10001b33a:	48 8b 35 0f 6a 03 00	movq	223759(%rip), %rsi ## Objc selector ref: setCurrentFilter:
10001b341:	4c 89 ff	movq	%r15, %rdi
10001b344:	31 d2	xorl	%edx, %edx
10001b346:	ff d3	callq	*%rbx
10001b348:	48 8b 05 41 7b 03 00	movq	228161(%rip), %rax
10001b34f:	49 c7 04 07 00 00 00 00	movq	$0, (%r15,%rax)
10001b357:	48 8b 05 ea 7a 03 00	movq	228074(%rip), %rax
10001b35e:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10001b362:	48 8b 35 9f 68 03 00	movq	223391(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
10001b369:	31 d2	xorl	%edx, %edx
10001b36b:	ff d3	callq	*%rbx
10001b36d:	48 8b 35 fc 6d 03 00	movq	224764(%rip), %rsi ## Objc selector ref: setWholeDocument:
10001b374:	4c 89 ff	movq	%r15, %rdi
10001b377:	4c 89 f2	movq	%r14, %rdx
10001b37a:	48 89 d8	movq	%rbx, %rax
10001b37d:	48 83 c4 08	addq	$8, %rsp
10001b381:	5b	popq	%rbx
10001b382:	41 5c	popq	%r12
10001b384:	41 5d	popq	%r13
10001b386:	41 5e	popq	%r14
10001b388:	41 5f	popq	%r15
10001b38a:	5d	popq	%rbp
10001b38b:	ff e0	jmpq	*%rax
10001b38d:	55	pushq	%rbp
10001b38e:	48 89 e5	movq	%rsp, %rbp
10001b391:	41 57	pushq	%r15
10001b393:	41 56	pushq	%r14
10001b395:	41 55	pushq	%r13
10001b397:	41 54	pushq	%r12
10001b399:	53	pushq	%rbx
10001b39a:	50	pushq	%rax
10001b39b:	49 89 d6	movq	%rdx, %r14
10001b39e:	48 89 fb	movq	%rdi, %rbx
10001b3a1:	48 85 d2	testq	%rdx, %rdx
10001b3a4:	74 7c	je	0x10001b422
10001b3a6:	4c 8b 3d 7b 70 03 00	movq	225403(%rip), %r15 ## Objc selector ref: undoManager
10001b3ad:	4c 8b 25 6c 18 02 00	movq	137324(%rip), %r12 ## Objc message: -[%rdi undoManager]
10001b3b4:	48 89 df	movq	%rbx, %rdi
10001b3b7:	4c 89 fe	movq	%r15, %rsi
10001b3ba:	41 ff d4	callq	*%r12
10001b3bd:	48 8b 0d cc 6d 03 00	movq	224716(%rip), %rcx ## Objc selector ref: setupAdjustImageSizeUndo:
10001b3c4:	48 8b 35 c5 66 03 00	movq	222917(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10001b3cb:	48 89 c7	movq	%rax, %rdi
10001b3ce:	48 89 da	movq	%rbx, %rdx
10001b3d1:	4d 89 f0	movq	%r14, %r8
10001b3d4:	41 ff d4	callq	*%r12
10001b3d7:	48 89 df	movq	%rbx, %rdi
10001b3da:	4c 89 fe	movq	%r15, %rsi
10001b3dd:	41 ff d4	callq	*%r12
10001b3e0:	49 89 c7	movq	%rax, %r15
10001b3e3:	48 8b 3d b6 71 03 00	movq	225718(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001b3ea:	48 8b 35 f7 62 03 00	movq	221943(%rip), %rsi ## Objc selector ref: mainBundle
10001b3f1:	41 ff d4	callq	*%r12
10001b3f4:	48 8b 35 65 62 03 00	movq	221797(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001b3fb:	48 8d 15 be 29 02 00	leaq	141758(%rip), %rdx ## Objc cfstring ref: @"Adjust Image Size"
10001b402:	48 8d 0d 97 1a 02 00	leaq	137879(%rip), %rcx ## Objc cfstring ref: @""
10001b409:	48 89 c7	movq	%rax, %rdi
10001b40c:	45 31 c0	xorl	%r8d, %r8d
10001b40f:	41 ff d4	callq	*%r12
10001b412:	48 8b 35 67 68 03 00	movq	223335(%rip), %rsi ## Objc selector ref: setActionName:
10001b419:	4c 89 ff	movq	%r15, %rdi
10001b41c:	48 89 c2	movq	%rax, %rdx
10001b41f:	41 ff d4	callq	*%r12
10001b422:	48 8b 05 07 7b 03 00	movq	228103(%rip), %rax
10001b429:	80 3c 03 00	cmpb	$0, (%rbx,%rax)
10001b42d:	74 0f	je	0x10001b43e
10001b42f:	48 83 c4 08	addq	$8, %rsp
10001b433:	5b	popq	%rbx
10001b434:	41 5c	popq	%r12
10001b436:	41 5d	popq	%r13
10001b438:	41 5e	popq	%r14
10001b43a:	41 5f	popq	%r15
10001b43c:	5d	popq	%rbp
10001b43d:	c3	retq
10001b43e:	48 8b 35 e3 6f 03 00	movq	225251(%rip), %rsi ## Objc selector ref: undoManager
10001b445:	4c 8b 2d d4 17 02 00	movq	137172(%rip), %r13 ## Objc message: +[NSBundle undoManager]
10001b44c:	48 89 df	movq	%rbx, %rdi
10001b44f:	41 ff d5	callq	*%r13
10001b452:	48 8b 35 4f 61 03 00	movq	221519(%rip), %rsi ## Objc selector ref: isUndoing
10001b459:	48 89 c7	movq	%rax, %rdi
10001b45c:	41 ff d5	callq	*%r13
10001b45f:	31 d2	xorl	%edx, %edx
10001b461:	84 c0	testb	%al, %al
10001b463:	0f 94 c2	sete	%dl
10001b466:	48 8b 35 f3 63 03 00	movq	222195(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001b46d:	4c 89 f7	movq	%r14, %rdi
10001b470:	41 ff d5	callq	*%r13
10001b473:	49 89 c6	movq	%rax, %r14
10001b476:	4c 8b 3d fb 63 03 00	movq	222203(%rip), %r15 ## Objc selector ref: objectForKey:
10001b47d:	48 8d 15 dc 2b 02 00	leaq	142300(%rip), %rdx ## Objc cfstring ref: @"Image"
10001b484:	48 89 c7	movq	%rax, %rdi
10001b487:	4c 89 fe	movq	%r15, %rsi
10001b48a:	41 ff d5	callq	*%r13
10001b48d:	49 89 c4	movq	%rax, %r12
10001b490:	48 8d 15 e9 2b 02 00	leaq	142313(%rip), %rdx ## Objc cfstring ref: @"Metadata"
10001b497:	4c 89 f7	movq	%r14, %rdi
10001b49a:	4c 89 fe	movq	%r15, %rsi
10001b49d:	41 ff d5	callq	*%r13
10001b4a0:	49 89 c6	movq	%rax, %r14
10001b4a3:	48 8b 35 c6 6c 03 00	movq	224454(%rip), %rsi ## Objc selector ref: setWholeDocument:
10001b4aa:	48 89 df	movq	%rbx, %rdi
10001b4ad:	4c 89 e2	movq	%r12, %rdx
10001b4b0:	41 ff d5	callq	*%r13
10001b4b3:	48 8b 35 f6 6a 03 00	movq	223990(%rip), %rsi ## Objc selector ref: setMetadata:
10001b4ba:	48 89 df	movq	%rbx, %rdi
10001b4bd:	4c 89 f2	movq	%r14, %rdx
10001b4c0:	41 ff d5	callq	*%r13
10001b4c3:	48 8b 35 8e 6f 03 00	movq	225166(%rip), %rsi ## Objc selector ref: updatePreview
10001b4ca:	48 89 df	movq	%rbx, %rdi
10001b4cd:	4c 89 e8	movq	%r13, %rax
10001b4d0:	48 83 c4 08	addq	$8, %rsp
10001b4d4:	5b	popq	%rbx
10001b4d5:	41 5c	popq	%r12
10001b4d7:	41 5d	popq	%r13
10001b4d9:	41 5e	popq	%r14
10001b4db:	41 5f	popq	%r15
10001b4dd:	5d	popq	%rbp
10001b4de:	ff e0	jmpq	*%rax
10001b4e0:	55	pushq	%rbp
10001b4e1:	48 89 e5	movq	%rsp, %rbp
10001b4e4:	41 57	pushq	%r15
10001b4e6:	41 56	pushq	%r14
10001b4e8:	41 55	pushq	%r13
10001b4ea:	41 54	pushq	%r12
10001b4ec:	53	pushq	%rbx
10001b4ed:	48 83 ec 18	subq	$24, %rsp
10001b4f1:	49 89 d7	movq	%rdx, %r15
10001b4f4:	49 89 fd	movq	%rdi, %r13
10001b4f7:	48 8b 35 2a 6f 03 00	movq	225066(%rip), %rsi ## Objc selector ref: undoManager
10001b4fe:	48 8b 1d 1b 17 02 00	movq	136987(%rip), %rbx ## Objc message: -[%rdi undoManager]
10001b505:	ff d3	callq	*%rbx
10001b507:	48 8b 35 9a 60 03 00	movq	221338(%rip), %rsi ## Objc selector ref: isUndoing
10001b50e:	48 89 c7	movq	%rax, %rdi
10001b511:	ff d3	callq	*%rbx
10001b513:	31 d2	xorl	%edx, %edx
10001b515:	84 c0	testb	%al, %al
10001b517:	0f 94 c2	sete	%dl
10001b51a:	4c 8b 25 3f 63 03 00	movq	222015(%rip), %r12 ## Objc selector ref: objectAtIndex:
10001b521:	4c 89 ff	movq	%r15, %rdi
10001b524:	4c 89 e6	movq	%r12, %rsi
10001b527:	ff d3	callq	*%rbx
10001b529:	48 89 c3	movq	%rax, %rbx
10001b52c:	4d 85 ff	testq	%r15, %r15
10001b52f:	0f 84 fe 00 00 00	je	0x10001b633
10001b535:	4c 8d 35 e4 2b 02 00	leaq	142308(%rip), %r14 ## Objc cfstring ref: @"Apply Button"
10001b53c:	48 85 db	testq	%rbx, %rbx
10001b53f:	0f 84 9e 00 00 00	je	0x10001b5e3
10001b545:	48 8b 35 74 5a 03 00	movq	219764(%rip), %rsi ## Objc selector ref: count
10001b54c:	48 89 df	movq	%rbx, %rdi
10001b54f:	ff 15 cb 16 02 00	callq	*136907(%rip) ## Objc message: -[%rdi count]
10001b555:	48 83 f8 02	cmpq	$2, %rax
10001b559:	0f 82 84 00 00 00	jb	0x10001b5e3
10001b55f:	48 8b 05 62 70 03 00	movq	225378(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSString
10001b566:	48 89 45 c8	movq	%rax, -56(%rbp)
10001b56a:	48 8b 35 07 63 03 00	movq	221959(%rip), %rsi ## Objc selector ref: objectForKey:
10001b571:	48 8d 15 e8 2b 02 00	leaq	142312(%rip), %rdx ## Objc cfstring ref: @"ProfileMode"
10001b578:	48 89 df	movq	%rbx, %rdi
10001b57b:	4c 8b 35 9e 16 02 00	movq	136862(%rip), %r14 ## Objc message: +[NSString objectForKey:]
10001b582:	41 ff d6	callq	*%r14
10001b585:	48 8b 35 44 6e 03 00	movq	224836(%rip), %rsi ## Objc selector ref: title
10001b58c:	48 89 c7	movq	%rax, %rdi
10001b58f:	41 ff d6	callq	*%r14
10001b592:	48 89 45 d0	movq	%rax, -48(%rbp)
10001b596:	4c 89 ff	movq	%r15, %rdi
10001b599:	4c 89 e6	movq	%r12, %rsi
10001b59c:	31 d2	xorl	%edx, %edx
10001b59e:	41 ff d6	callq	*%r14
10001b5a1:	48 8d 15 d8 2b 02 00	leaq	142296(%rip), %rdx ## Objc cfstring ref: @"Profile"
10001b5a8:	48 89 c7	movq	%rax, %rdi
10001b5ab:	48 8b 35 c6 62 03 00	movq	221894(%rip), %rsi ## Objc selector ref: objectForKey:
10001b5b2:	41 ff d6	callq	*%r14
10001b5b5:	48 8b 35 1c 64 03 00	movq	222236(%rip), %rsi ## Objc selector ref: profName
10001b5bc:	48 89 c7	movq	%rax, %rdi
10001b5bf:	41 ff d6	callq	*%r14
10001b5c2:	48 8b 35 5f 6d 03 00	movq	224607(%rip), %rsi ## Objc selector ref: stringWithFormat:
10001b5c9:	48 8d 15 70 2b 02 00	leaq	142192(%rip), %rdx ## Objc cfstring ref: @"%@ '%@'"
10001b5d0:	48 8b 7d c8	movq	-56(%rbp), %rdi
10001b5d4:	48 8b 4d d0	movq	-48(%rbp), %rcx
10001b5d8:	49 89 c0	movq	%rax, %r8
10001b5db:	31 c0	xorl	%eax, %eax
10001b5dd:	41 ff d6	callq	*%r14
10001b5e0:	49 89 c6	movq	%rax, %r14
10001b5e3:	4c 89 ef	movq	%r13, %rdi
10001b5e6:	48 8b 35 3b 6e 03 00	movq	224827(%rip), %rsi ## Objc selector ref: undoManager
10001b5ed:	48 8b 05 2c 16 02 00	movq	136748(%rip), %rax ## Objc message: -[%rdi undoManager]
10001b5f4:	49 89 dc	movq	%rbx, %r12
10001b5f7:	48 89 c3	movq	%rax, %rbx
10001b5fa:	ff d0	callq	*%rax
10001b5fc:	48 8b 0d 9d 6b 03 00	movq	224157(%rip), %rcx ## Objc selector ref: setupApplyProfileUndo:
10001b603:	48 8b 35 86 64 03 00	movq	222342(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10001b60a:	48 89 c7	movq	%rax, %rdi
10001b60d:	4c 89 ea	movq	%r13, %rdx
10001b610:	4d 89 f8	movq	%r15, %r8
10001b613:	ff d3	callq	*%rbx
10001b615:	4c 89 ef	movq	%r13, %rdi
10001b618:	48 8b 35 09 6e 03 00	movq	224777(%rip), %rsi ## Objc selector ref: undoManager
10001b61f:	ff d3	callq	*%rbx
10001b621:	48 8b 35 58 66 03 00	movq	222808(%rip), %rsi ## Objc selector ref: setActionName:
10001b628:	48 89 c7	movq	%rax, %rdi
10001b62b:	4c 89 f2	movq	%r14, %rdx
10001b62e:	ff d3	callq	*%rbx
10001b630:	4c 89 e3	movq	%r12, %rbx
10001b633:	48 8b 05 f6 78 03 00	movq	227574(%rip), %rax
10001b63a:	41 80 7c 05 00 00	cmpb	$0, (%r13,%rax)
10001b640:	74 0f	je	0x10001b651
10001b642:	48 83 c4 18	addq	$24, %rsp
10001b646:	5b	popq	%rbx
10001b647:	41 5c	popq	%r12
10001b649:	41 5d	popq	%r13
10001b64b:	41 5e	popq	%r14
10001b64d:	41 5f	popq	%r15
10001b64f:	5d	popq	%rbp
10001b650:	c3	retq
10001b651:	48 8b 35 20 6b 03 00	movq	224032(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001b658:	4c 89 ef	movq	%r13, %rdi
10001b65b:	48 89 da	movq	%rbx, %rdx
10001b65e:	48 8b 1d bb 15 02 00	movq	136635(%rip), %rbx ## Objc message: -[%rdi setWholeDocumentAndSettings:]
10001b665:	ff d3	callq	*%rbx
10001b667:	48 8b 35 ea 6d 03 00	movq	224746(%rip), %rsi ## Objc selector ref: updatePreview
10001b66e:	4c 89 ef	movq	%r13, %rdi
10001b671:	48 89 d8	movq	%rbx, %rax
10001b674:	48 83 c4 18	addq	$24, %rsp
10001b678:	5b	popq	%rbx
10001b679:	41 5c	popq	%r12
10001b67b:	41 5d	popq	%r13
10001b67d:	41 5e	popq	%r14
10001b67f:	41 5f	popq	%r15
10001b681:	5d	popq	%rbp
10001b682:	ff e0	jmpq	*%rax
10001b684:	55	pushq	%rbp
10001b685:	48 89 e5	movq	%rsp, %rbp
10001b688:	41 57	pushq	%r15
10001b68a:	41 56	pushq	%r14
10001b68c:	41 55	pushq	%r13
10001b68e:	41 54	pushq	%r12
10001b690:	53	pushq	%rbx
10001b691:	50	pushq	%rax
10001b692:	49 89 d4	movq	%rdx, %r12
10001b695:	49 89 ff	movq	%rdi, %r15
10001b698:	4c 8b 35 89 6d 03 00	movq	224649(%rip), %r14 ## Objc selector ref: undoManager
10001b69f:	48 8b 1d 7a 15 02 00	movq	136570(%rip), %rbx ## Objc message: -[%rdi undoManager]
10001b6a6:	4c 89 f6	movq	%r14, %rsi
10001b6a9:	ff d3	callq	*%rbx
10001b6ab:	48 8b 35 f6 5e 03 00	movq	220918(%rip), %rsi ## Objc selector ref: isUndoing
10001b6b2:	48 89 c7	movq	%rax, %rdi
10001b6b5:	ff d3	callq	*%rbx
10001b6b7:	31 d2	xorl	%edx, %edx
10001b6b9:	84 c0	testb	%al, %al
10001b6bb:	0f 94 c2	sete	%dl
10001b6be:	4c 8b 2d 9b 61 03 00	movq	221595(%rip), %r13 ## Objc selector ref: objectAtIndex:
10001b6c5:	4c 89 e7	movq	%r12, %rdi
10001b6c8:	4c 89 ee	movq	%r13, %rsi
10001b6cb:	ff d3	callq	*%rbx
10001b6cd:	48 89 c2	movq	%rax, %rdx
10001b6d0:	4d 85 e4	testq	%r12, %r12
10001b6d3:	0f 84 8a 00 00 00	je	0x10001b763
10001b6d9:	48 89 55 d0	movq	%rdx, -48(%rbp)
10001b6dd:	4c 89 e7	movq	%r12, %rdi
10001b6e0:	4c 89 ee	movq	%r13, %rsi
10001b6e3:	31 d2	xorl	%edx, %edx
10001b6e5:	ff 15 35 15 02 00	callq	*136501(%rip) ## Objc message: -[%rdi objectAtIndex:]
10001b6eb:	48 85 c0	testq	%rax, %rax
10001b6ee:	74 29	je	0x10001b719
10001b6f0:	4c 89 e7	movq	%r12, %rdi
10001b6f3:	4c 89 ee	movq	%r13, %rsi
10001b6f6:	31 d2	xorl	%edx, %edx
10001b6f8:	48 8b 1d 21 15 02 00	movq	136481(%rip), %rbx ## Objc message: -[%rdi objectAtIndex:]
10001b6ff:	ff d3	callq	*%rbx
10001b701:	48 8b 35 70 61 03 00	movq	221552(%rip), %rsi ## Objc selector ref: objectForKey:
10001b708:	48 8d 15 f1 29 02 00	leaq	141809(%rip), %rdx ## Objc cfstring ref: @"FilterName"
10001b70f:	48 89 c7	movq	%rax, %rdi
10001b712:	ff d3	callq	*%rbx
10001b714:	49 89 c5	movq	%rax, %r13
10001b717:	eb 0e	jmp	0x10001b727
10001b719:	4c 8d 2d 00 2a 02 00	leaq	141824(%rip), %r13 ## Objc cfstring ref: @"Apply Button"
10001b720:	48 8b 1d f9 14 02 00	movq	136441(%rip), %rbx ## Objc message: -[%rdi objectForKey:]
10001b727:	4c 89 ff	movq	%r15, %rdi
10001b72a:	4c 89 f6	movq	%r14, %rsi
10001b72d:	ff d3	callq	*%rbx
10001b72f:	48 8b 0d 62 6a 03 00	movq	223842(%rip), %rcx ## Objc selector ref: setupApplyFilterUndo:
10001b736:	48 8b 35 53 63 03 00	movq	222035(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10001b73d:	48 89 c7	movq	%rax, %rdi
10001b740:	4c 89 fa	movq	%r15, %rdx
10001b743:	4d 89 e0	movq	%r12, %r8
10001b746:	ff d3	callq	*%rbx
10001b748:	4c 89 ff	movq	%r15, %rdi
10001b74b:	4c 89 f6	movq	%r14, %rsi
10001b74e:	ff d3	callq	*%rbx
10001b750:	48 8b 35 29 65 03 00	movq	222505(%rip), %rsi ## Objc selector ref: setActionName:
10001b757:	48 89 c7	movq	%rax, %rdi
10001b75a:	4c 89 ea	movq	%r13, %rdx
10001b75d:	ff d3	callq	*%rbx
10001b75f:	48 8b 55 d0	movq	-48(%rbp), %rdx
10001b763:	48 8b 05 c6 77 03 00	movq	227270(%rip), %rax
10001b76a:	41 80 3c 07 00	cmpb	$0, (%r15,%rax)
10001b76f:	74 0f	je	0x10001b780
10001b771:	48 83 c4 08	addq	$8, %rsp
10001b775:	5b	popq	%rbx
10001b776:	41 5c	popq	%r12
10001b778:	41 5d	popq	%r13
10001b77a:	41 5e	popq	%r14
10001b77c:	41 5f	popq	%r15
10001b77e:	5d	popq	%rbp
10001b77f:	c3	retq
10001b780:	48 8b 35 f1 69 03 00	movq	223729(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001b787:	4c 89 ff	movq	%r15, %rdi
10001b78a:	48 8b 1d 8f 14 02 00	movq	136335(%rip), %rbx ## Objc message: -[%rdi setWholeDocumentAndSettings:]
10001b791:	ff d3	callq	*%rbx
10001b793:	48 8b 35 be 6c 03 00	movq	224446(%rip), %rsi ## Objc selector ref: updatePreview
10001b79a:	4c 89 ff	movq	%r15, %rdi
10001b79d:	48 89 d8	movq	%rbx, %rax
10001b7a0:	48 83 c4 08	addq	$8, %rsp
10001b7a4:	5b	popq	%rbx
10001b7a5:	41 5c	popq	%r12
10001b7a7:	41 5d	popq	%r13
10001b7a9:	41 5e	popq	%r14
10001b7ab:	41 5f	popq	%r15
10001b7ad:	5d	popq	%rbp
10001b7ae:	ff e0	jmpq	*%rax
10001b7b0:	55	pushq	%rbp
10001b7b1:	48 89 e5	movq	%rsp, %rbp
10001b7b4:	41 57	pushq	%r15
10001b7b6:	41 56	pushq	%r14
10001b7b8:	41 55	pushq	%r13
10001b7ba:	41 54	pushq	%r12
10001b7bc:	53	pushq	%rbx
10001b7bd:	50	pushq	%rax
10001b7be:	49 89 d7	movq	%rdx, %r15
10001b7c1:	48 89 fb	movq	%rdi, %rbx
10001b7c4:	4c 8b 35 5d 6c 03 00	movq	224349(%rip), %r14 ## Objc selector ref: undoManager
10001b7cb:	4c 8b 2d 4e 14 02 00	movq	136270(%rip), %r13 ## Objc message: -[%rdi undoManager]
10001b7d2:	4c 89 f6	movq	%r14, %rsi
10001b7d5:	41 ff d5	callq	*%r13
10001b7d8:	48 8b 35 c9 5d 03 00	movq	220617(%rip), %rsi ## Objc selector ref: isUndoing
10001b7df:	48 89 c7	movq	%rax, %rdi
10001b7e2:	41 ff d5	callq	*%r13
10001b7e5:	31 d2	xorl	%edx, %edx
10001b7e7:	84 c0	testb	%al, %al
10001b7e9:	0f 94 c2	sete	%dl
10001b7ec:	48 8b 35 6d 60 03 00	movq	221293(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001b7f3:	4c 89 ff	movq	%r15, %rdi
10001b7f6:	41 ff d5	callq	*%r13
10001b7f9:	49 89 c4	movq	%rax, %r12
10001b7fc:	4d 85 ff	testq	%r15, %r15
10001b7ff:	74 40	je	0x10001b841
10001b801:	48 89 df	movq	%rbx, %rdi
10001b804:	4c 89 f6	movq	%r14, %rsi
10001b807:	41 ff d5	callq	*%r13
10001b80a:	48 8b 0d e7 69 03 00	movq	223719(%rip), %rcx ## Objc selector ref: setupToneMappingUndo:
10001b811:	48 8b 35 78 62 03 00	movq	221816(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10001b818:	48 89 c7	movq	%rax, %rdi
10001b81b:	48 89 da	movq	%rbx, %rdx
10001b81e:	4d 89 f8	movq	%r15, %r8
10001b821:	41 ff d5	callq	*%r13
10001b824:	48 89 df	movq	%rbx, %rdi
10001b827:	4c 89 f6	movq	%r14, %rsi
10001b82a:	41 ff d5	callq	*%r13
10001b82d:	48 8b 35 4c 64 03 00	movq	222284(%rip), %rsi ## Objc selector ref: setActionName:
10001b834:	48 8d 15 65 29 02 00	leaq	141669(%rip), %rdx ## Objc cfstring ref: @"Apply Tone Mapping"
10001b83b:	48 89 c7	movq	%rax, %rdi
10001b83e:	41 ff d5	callq	*%r13
10001b841:	48 8b 05 e8 76 03 00	movq	227048(%rip), %rax
10001b848:	80 3c 03 00	cmpb	$0, (%rbx,%rax)
10001b84c:	74 0f	je	0x10001b85d
10001b84e:	48 83 c4 08	addq	$8, %rsp
10001b852:	5b	popq	%rbx
10001b853:	41 5c	popq	%r12
10001b855:	41 5d	popq	%r13
10001b857:	41 5e	popq	%r14
10001b859:	41 5f	popq	%r15
10001b85b:	5d	popq	%rbp
10001b85c:	c3	retq
10001b85d:	48 8b 35 14 69 03 00	movq	223508(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001b864:	48 89 df	movq	%rbx, %rdi
10001b867:	4c 89 e2	movq	%r12, %rdx
10001b86a:	41 ff d5	callq	*%r13
10001b86d:	48 8b 35 e4 6b 03 00	movq	224228(%rip), %rsi ## Objc selector ref: updatePreview
10001b874:	48 89 df	movq	%rbx, %rdi
10001b877:	4c 89 e8	movq	%r13, %rax
10001b87a:	48 83 c4 08	addq	$8, %rsp
10001b87e:	5b	popq	%rbx
10001b87f:	41 5c	popq	%r12
10001b881:	41 5d	popq	%r13
10001b883:	41 5e	popq	%r14
10001b885:	41 5f	popq	%r15
10001b887:	5d	popq	%rbp
10001b888:	ff e0	jmpq	*%rax
10001b88a:	55	pushq	%rbp
10001b88b:	48 89 e5	movq	%rsp, %rbp
10001b88e:	41 57	pushq	%r15
10001b890:	41 56	pushq	%r14
10001b892:	41 55	pushq	%r13
10001b894:	41 54	pushq	%r12
10001b896:	53	pushq	%rbx
10001b897:	50	pushq	%rax
10001b898:	49 89 d7	movq	%rdx, %r15
10001b89b:	48 89 fb	movq	%rdi, %rbx
10001b89e:	4c 8b 35 83 6b 03 00	movq	224131(%rip), %r14 ## Objc selector ref: undoManager
10001b8a5:	4c 8b 2d 74 13 02 00	movq	136052(%rip), %r13 ## Objc message: -[%rdi undoManager]
10001b8ac:	4c 89 f6	movq	%r14, %rsi
10001b8af:	41 ff d5	callq	*%r13
10001b8b2:	48 8b 35 ef 5c 03 00	movq	220399(%rip), %rsi ## Objc selector ref: isUndoing
10001b8b9:	48 89 c7	movq	%rax, %rdi
10001b8bc:	41 ff d5	callq	*%r13
10001b8bf:	31 d2	xorl	%edx, %edx
10001b8c1:	84 c0	testb	%al, %al
10001b8c3:	0f 94 c2	sete	%dl
10001b8c6:	48 8b 35 93 5f 03 00	movq	221075(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001b8cd:	4c 89 ff	movq	%r15, %rdi
10001b8d0:	41 ff d5	callq	*%r13
10001b8d3:	49 89 c4	movq	%rax, %r12
10001b8d6:	4d 85 ff	testq	%r15, %r15
10001b8d9:	74 40	je	0x10001b91b
10001b8db:	48 89 df	movq	%rbx, %rdi
10001b8de:	4c 89 f6	movq	%r14, %rsi
10001b8e1:	41 ff d5	callq	*%r13
10001b8e4:	48 8b 0d dd 68 03 00	movq	223453(%rip), %rcx ## Objc selector ref: setupImageCorrectionUndo:
10001b8eb:	48 8b 35 9e 61 03 00	movq	221598(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10001b8f2:	48 89 c7	movq	%rax, %rdi
10001b8f5:	48 89 da	movq	%rbx, %rdx
10001b8f8:	4d 89 f8	movq	%r15, %r8
10001b8fb:	41 ff d5	callq	*%r13
10001b8fe:	48 89 df	movq	%rbx, %rdi
10001b901:	4c 89 f6	movq	%r14, %rsi
10001b904:	41 ff d5	callq	*%r13
10001b907:	48 8b 35 72 63 03 00	movq	222066(%rip), %rsi ## Objc selector ref: setActionName:
10001b90e:	48 8d 15 ab 28 02 00	leaq	141483(%rip), %rdx ## Objc cfstring ref: @"Apply Image Correction"
10001b915:	48 89 c7	movq	%rax, %rdi
10001b918:	41 ff d5	callq	*%r13
10001b91b:	48 8b 05 0e 76 03 00	movq	226830(%rip), %rax
10001b922:	80 3c 03 00	cmpb	$0, (%rbx,%rax)
10001b926:	74 0f	je	0x10001b937
10001b928:	48 83 c4 08	addq	$8, %rsp
10001b92c:	5b	popq	%rbx
10001b92d:	41 5c	popq	%r12
10001b92f:	41 5d	popq	%r13
10001b931:	41 5e	popq	%r14
10001b933:	41 5f	popq	%r15
10001b935:	5d	popq	%rbp
10001b936:	c3	retq
10001b937:	48 8b 35 3a 68 03 00	movq	223290(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001b93e:	48 89 df	movq	%rbx, %rdi
10001b941:	4c 89 e2	movq	%r12, %rdx
10001b944:	41 ff d5	callq	*%r13
10001b947:	48 8b 35 0a 6b 03 00	movq	224010(%rip), %rsi ## Objc selector ref: updatePreview
10001b94e:	48 89 df	movq	%rbx, %rdi
10001b951:	4c 89 e8	movq	%r13, %rax
10001b954:	48 83 c4 08	addq	$8, %rsp
10001b958:	5b	popq	%rbx
10001b959:	41 5c	popq	%r12
10001b95b:	41 5d	popq	%r13
10001b95d:	41 5e	popq	%r14
10001b95f:	41 5f	popq	%r15
10001b961:	5d	popq	%rbp
10001b962:	ff e0	jmpq	*%rax
10001b964:	55	pushq	%rbp
10001b965:	48 89 e5	movq	%rsp, %rbp
10001b968:	41 57	pushq	%r15
10001b96a:	41 56	pushq	%r14
10001b96c:	53	pushq	%rbx
10001b96d:	50	pushq	%rax
10001b96e:	48 89 d3	movq	%rdx, %rbx
10001b971:	4c 8b 35 10 5c 03 00	movq	220176(%rip), %r14 ## Objc selector ref: isEqualToString:
10001b978:	48 8d 15 61 20 02 00	leaq	139361(%rip), %rdx ## Objc cfstring ref: @"PDF Document"
10001b97f:	48 89 df	movq	%rbx, %rdi
10001b982:	4c 89 f6	movq	%r14, %rsi
10001b985:	ff 15 95 12 02 00	callq	*135829(%rip) ## Objc message: -[%rdi isEqualToString:]
10001b98b:	41 bf 01 00 00 00	movl	$1, %r15d
10001b991:	84 c0	testb	%al, %al
10001b993:	0f 85 b7 00 00 00	jne	0x10001ba50
10001b999:	48 8d 15 60 20 02 00	leaq	139360(%rip), %rdx ## Objc cfstring ref: @"com.adobe.pdf"
10001b9a0:	48 89 df	movq	%rbx, %rdi
10001b9a3:	4c 89 f6	movq	%r14, %rsi
10001b9a6:	ff 15 74 12 02 00	callq	*135796(%rip) ## Objc message: -[%rdi isEqualToString:]
10001b9ac:	84 c0	testb	%al, %al
10001b9ae:	0f 85 9c 00 00 00	jne	0x10001ba50
10001b9b4:	48 8d 15 25 28 02 00	leaq	141349(%rip), %rdx ## Objc cfstring ref: @"PostScript Document"
10001b9bb:	48 89 df	movq	%rbx, %rdi
10001b9be:	4c 89 f6	movq	%r14, %rsi
10001b9c1:	ff 15 59 12 02 00	callq	*135769(%rip) ## Objc message: -[%rdi isEqualToString:]
10001b9c7:	84 c0	testb	%al, %al
10001b9c9:	0f 85 81 00 00 00	jne	0x10001ba50
10001b9cf:	48 8d 15 2a 28 02 00	leaq	141354(%rip), %rdx ## Objc cfstring ref: @"com.adobe.postscript"
10001b9d6:	48 89 df	movq	%rbx, %rdi
10001b9d9:	4c 89 f6	movq	%r14, %rsi
10001b9dc:	ff 15 3e 12 02 00	callq	*135742(%rip) ## Objc message: -[%rdi isEqualToString:]
10001b9e2:	84 c0	testb	%al, %al
10001b9e4:	75 6a	jne	0x10001ba50
10001b9e6:	48 8d 15 33 28 02 00	leaq	141363(%rip), %rdx ## Objc cfstring ref: @"GIF Image"
10001b9ed:	48 89 df	movq	%rbx, %rdi
10001b9f0:	4c 89 f6	movq	%r14, %rsi
10001b9f3:	ff 15 27 12 02 00	callq	*135719(%rip) ## Objc message: -[%rdi isEqualToString:]
10001b9f9:	41 bf 03 00 00 00	movl	$3, %r15d
10001b9ff:	84 c0	testb	%al, %al
10001ba01:	75 4d	jne	0x10001ba50
10001ba03:	48 8d 15 36 28 02 00	leaq	141366(%rip), %rdx ## Objc cfstring ref: @"public.gif"
10001ba0a:	48 89 df	movq	%rbx, %rdi
10001ba0d:	4c 89 f6	movq	%r14, %rsi
10001ba10:	ff 15 0a 12 02 00	callq	*135690(%rip) ## Objc message: -[%rdi isEqualToString:]
10001ba16:	84 c0	testb	%al, %al
10001ba18:	75 36	jne	0x10001ba50
10001ba1a:	48 8d 15 3f 28 02 00	leaq	141375(%rip), %rdx ## Objc cfstring ref: @"TIFF Document"
10001ba21:	48 89 df	movq	%rbx, %rdi
10001ba24:	4c 89 f6	movq	%r14, %rsi
10001ba27:	ff 15 f3 11 02 00	callq	*135667(%rip) ## Objc message: -[%rdi isEqualToString:]
10001ba2d:	84 c0	testb	%al, %al
10001ba2f:	75 1f	jne	0x10001ba50
10001ba31:	48 8d 15 48 28 02 00	leaq	141384(%rip), %rdx ## Objc cfstring ref: @"public.tiff"
10001ba38:	48 89 df	movq	%rbx, %rdi
10001ba3b:	4c 89 f6	movq	%r14, %rsi
10001ba3e:	ff 15 dc 11 02 00	callq	*135644(%rip) ## Objc message: -[%rdi isEqualToString:]
10001ba44:	3c 01	cmpb	$1, %al
10001ba46:	41 bf 03 00 00 00	movl	$3, %r15d
10001ba4c:	41 83 df 00	sbbl	$0, %r15d
10001ba50:	44 89 f8	movl	%r15d, %eax
10001ba53:	48 83 c4 08	addq	$8, %rsp
10001ba57:	5b	popq	%rbx
10001ba58:	41 5e	popq	%r14
10001ba5a:	41 5f	popq	%r15
10001ba5c:	5d	popq	%rbp
10001ba5d:	c3	retq
10001ba5e:	55	pushq	%rbp
10001ba5f:	48 89 e5	movq	%rsp, %rbp
10001ba62:	48 8b 05 ff 74 03 00	movq	226559(%rip), %rax
10001ba69:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001ba6d:	48 8b 35 9c 5a 03 00	movq	219804(%rip), %rsi ## Objc selector ref: intValue
10001ba74:	5d	popq	%rbp
10001ba75:	ff 25 a5 11 02 00	jmpq	*135589(%rip) ## Objc message: -[%rdi intValue]
10001ba7b:	55	pushq	%rbp
10001ba7c:	48 89 e5	movq	%rsp, %rbp
10001ba7f:	48 8b 15 0a 75 03 00	movq	226570(%rip), %rdx
10001ba86:	b9 01 00 00 00	movl	$1, %ecx
10001ba8b:	5d	popq	%rbp
10001ba8c:	e9 45 3a 01 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10001ba91:	55	pushq	%rbp
10001ba92:	48 89 e5	movq	%rsp, %rbp
10001ba95:	48 8b 0d f4 74 03 00	movq	226548(%rip), %rcx
10001ba9c:	5d	popq	%rbp
10001ba9d:	e9 64 3a 01 00	jmp	0x10002f506 ## symbol stub for: _objc_setProperty_atomic_copy
10001baa2:	55	pushq	%rbp
10001baa3:	48 89 e5	movq	%rsp, %rbp
10001baa6:	48 8b 05 eb 74 03 00	movq	226539(%rip), %rax
10001baad:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10001bab1:	5d	popq	%rbp
10001bab2:	c3	retq
10001bab3:	55	pushq	%rbp
10001bab4:	48 89 e5	movq	%rsp, %rbp
10001bab7:	48 8b 05 da 74 03 00	movq	226522(%rip), %rax
10001babe:	88 14 07	movb	%dl, (%rdi,%rax)
10001bac1:	5d	popq	%rbp
10001bac2:	c3	retq
10001bac3:	55	pushq	%rbp
10001bac4:	48 89 e5	movq	%rsp, %rbp
10001bac7:	48 8b 05 d2 74 03 00	movq	226514(%rip), %rax
10001bace:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10001bad2:	5d	popq	%rbp
10001bad3:	c3	retq
10001bad4:	55	pushq	%rbp
10001bad5:	48 89 e5	movq	%rsp, %rbp
10001bad8:	48 8b 05 c1 74 03 00	movq	226497(%rip), %rax
10001badf:	88 14 07	movb	%dl, (%rdi,%rax)
10001bae2:	5d	popq	%rbp
10001bae3:	c3	retq
10001bae4:	55	pushq	%rbp
10001bae5:	48 89 e5	movq	%rsp, %rbp
10001bae8:	48 8b 05 b9 74 03 00	movq	226489(%rip), %rax
10001baef:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10001baf3:	5d	popq	%rbp
10001baf4:	c3	retq
10001baf5:	55	pushq	%rbp
10001baf6:	48 89 e5	movq	%rsp, %rbp
10001baf9:	48 8b 05 a8 74 03 00	movq	226472(%rip), %rax
10001bb00:	88 14 07	movb	%dl, (%rdi,%rax)
10001bb03:	5d	popq	%rbp
10001bb04:	c3	retq
10001bb05:	55	pushq	%rbp
10001bb06:	48 89 e5	movq	%rsp, %rbp
10001bb09:	48 8b 05 80 72 03 00	movq	225920(%rip), %rax
10001bb10:	f3 0f 10 04 07	movss	(%rdi,%rax), %xmm0
10001bb15:	5d	popq	%rbp
10001bb16:	c3	retq
10001bb17:	55	pushq	%rbp
10001bb18:	48 89 e5	movq	%rsp, %rbp
10001bb1b:	48 8b 05 76 72 03 00	movq	225910(%rip), %rax
10001bb22:	8b 04 07	movl	(%rdi,%rax), %eax
10001bb25:	5d	popq	%rbp
10001bb26:	c3	retq
10001bb27:	55	pushq	%rbp
10001bb28:	48 89 e5	movq	%rsp, %rbp
10001bb2b:	48 8b 05 6e 72 03 00	movq	225902(%rip), %rax
10001bb32:	8b 04 07	movl	(%rdi,%rax), %eax
10001bb35:	5d	popq	%rbp
10001bb36:	c3	retq
10001bb37:	55	pushq	%rbp
10001bb38:	48 89 e5	movq	%rsp, %rbp
10001bb3b:	41 56	pushq	%r14
10001bb3d:	53	pushq	%rbx
10001bb3e:	48 85 ff	testq	%rdi, %rdi
10001bb41:	74 6a	je	0x10001bbad
10001bb43:	49 89 f6	movq	%rsi, %r14
10001bb46:	48 89 fb	movq	%rdi, %rbx
10001bb49:	48 8b 3d 60 6a 03 00	movq	223840(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSArray
10001bb50:	e8 93 39 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001bb55:	48 89 df	movq	%rbx, %rdi
10001bb58:	48 89 c6	movq	%rax, %rsi
10001bb5b:	e8 8e 39 01 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
10001bb60:	84 c0	testb	%al, %al
10001bb62:	74 49	je	0x10001bbad
10001bb64:	48 8b 35 55 54 03 00	movq	218197(%rip), %rsi ## Objc selector ref: count
10001bb6b:	48 89 df	movq	%rbx, %rdi
10001bb6e:	ff 15 ac 10 02 00	callq	*135340(%rip) ## Objc message: +[NSArray count]
10001bb74:	4c 39 f0	cmpq	%r14, %rax
10001bb77:	76 34	jbe	0x10001bbad
10001bb79:	48 8b 35 e0 5c 03 00	movq	220384(%rip), %rsi ## Objc selector ref: objectAtIndex:
10001bb80:	48 89 df	movq	%rbx, %rdi
10001bb83:	4c 89 f2	movq	%r14, %rdx
10001bb86:	ff 15 94 10 02 00	callq	*135316(%rip) ## Objc message: -[%rdi objectAtIndex:]
10001bb8c:	48 89 c7	movq	%rax, %rdi
10001bb8f:	e8 5c 34 01 00	callq	0x10002eff0 ## symbol stub for: _CGColorSpaceCreateWithICCData
10001bb94:	48 85 c0	testq	%rax, %rax
10001bb97:	74 14	je	0x10001bbad
10001bb99:	48 89 c7	movq	%rax, %rdi
10001bb9c:	e8 5f 33 01 00	callq	0x10002ef00 ## symbol stub for: _CFMakeCollectable
10001bba1:	48 89 c7	movq	%rax, %rdi
10001bba4:	5b	popq	%rbx
10001bba5:	41 5e	popq	%r14
10001bba7:	5d	popq	%rbp
10001bba8:	e9 1d 39 01 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
10001bbad:	31 c0	xorl	%eax, %eax
10001bbaf:	5b	popq	%rbx
10001bbb0:	41 5e	popq	%r14
10001bbb2:	5d	popq	%rbp
10001bbb3:	c3	retq
10001bbb4:	55	pushq	%rbp
10001bbb5:	48 89 e5	movq	%rsp, %rbp
10001bbb8:	41 57	pushq	%r15
10001bbba:	41 56	pushq	%r14
10001bbbc:	53	pushq	%rbx
10001bbbd:	50	pushq	%rax
10001bbbe:	49 89 f6	movq	%rsi, %r14
10001bbc1:	48 89 fb	movq	%rdi, %rbx
10001bbc4:	48 8b 05 9d 0e 02 00	movq	134813(%rip), %rax ## literal pool symbol address: _kColorSyncProfileHeader
10001bbcb:	48 8b 30	movq	(%rax), %rsi
10001bbce:	e8 0f 33 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10001bbd3:	48 85 c0	testq	%rax, %rax
10001bbd6:	74 6e	je	0x10001bc46
10001bbd8:	48 89 c7	movq	%rax, %rdi
10001bbdb:	e8 c0 32 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001bbe0:	48 85 c0	testq	%rax, %rax
10001bbe3:	74 61	je	0x10001bc46
10001bbe5:	8b 40 0c	movl	12(%rax), %eax
10001bbe8:	3d 71 74 72 70	cmpl	$1886549105, %eax
10001bbed:	7f 17	jg	0x10001bc06
10001bbef:	3d 74 73 62 61	cmpl	$1633842036, %eax
10001bbf4:	74 25	je	0x10001bc1b
10001bbf6:	3d 72 74 6e 6d	cmpl	$1835955314, %eax
10001bbfb:	74 1e	je	0x10001bc1b
10001bbfd:	3d 6c 63 6d 6e	cmpl	$1852662636, %eax
10001bc02:	74 17	je	0x10001bc1b
10001bc04:	eb 40	jmp	0x10001bc46
10001bc06:	3d 72 74 72 70	cmpl	$1886549106, %eax
10001bc0b:	74 0e	je	0x10001bc1b
10001bc0d:	3d 63 61 70 73	cmpl	$1936744803, %eax
10001bc12:	74 07	je	0x10001bc1b
10001bc14:	3d 72 6e 63 73	cmpl	$1935896178, %eax
10001bc19:	75 2b	jne	0x10001bc46
10001bc1b:	48 8b 3d 96 6a 03 00	movq	223894(%rip), %rdi ## Objc class ref: FilterDocProfile
10001bc22:	48 8b 35 9f 5b 03 00	movq	220063(%rip), %rsi ## Objc selector ref: newWithIterateData:
10001bc29:	4c 8b 3d f0 0f 02 00	movq	135152(%rip), %r15 ## Objc message: +[FilterDocProfile newWithIterateData:]
10001bc30:	48 89 da	movq	%rbx, %rdx
10001bc33:	41 ff d7	callq	*%r15
10001bc36:	48 8b 35 33 50 03 00	movq	217139(%rip), %rsi ## Objc selector ref: addObject:
10001bc3d:	4c 89 f7	movq	%r14, %rdi
10001bc40:	48 89 c2	movq	%rax, %rdx
10001bc43:	41 ff d7	callq	*%r15
10001bc46:	b0 01	movb	$1, %al
10001bc48:	48 83 c4 08	addq	$8, %rsp
10001bc4c:	5b	popq	%rbx
10001bc4d:	41 5e	popq	%r14
10001bc4f:	41 5f	popq	%r15
10001bc51:	5d	popq	%rbp
10001bc52:	c3	retq
10001bc53:	55	pushq	%rbp
10001bc54:	48 89 e5	movq	%rsp, %rbp
10001bc57:	53	pushq	%rbx
10001bc58:	48 83 ec 38	subq	$56, %rsp
10001bc5c:	48 8d 45 e8	leaq	-24(%rbp), %rax
10001bc60:	48 89 38	movq	%rdi, (%rax)
10001bc63:	48 8b 0d 9e 6b 03 00	movq	224158(%rip), %rcx ## Objc class ref: SelfSizingHeaderOutlineVIew
10001bc6a:	48 89 48 08	movq	%rcx, 8(%rax)
10001bc6e:	48 8b 35 db 57 03 00	movq	219099(%rip), %rsi ## Objc selector ref: initWithFrame:
10001bc75:	0f 28 45 10	movaps	16(%rbp), %xmm0
10001bc79:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10001bc7d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001bc82:	0f 11 04 24	movups	%xmm0, (%rsp)
10001bc86:	48 89 c7	movq	%rax, %rdi
10001bc89:	e8 4e 38 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10001bc8e:	48 89 c3	movq	%rax, %rbx
10001bc91:	48 85 c0	testq	%rax, %rax
10001bc94:	74 10	je	0x10001bca6
10001bc96:	48 8b 35 c3 65 03 00	movq	222659(%rip), %rsi ## Objc selector ref: sizeTableHeaderCellsToFit
10001bc9d:	48 89 df	movq	%rbx, %rdi
10001bca0:	ff 15 7a 0f 02 00	callq	*135034(%rip) ## Objc message: -[%rdi sizeTableHeaderCellsToFit]
10001bca6:	48 89 d8	movq	%rbx, %rax
10001bca9:	48 83 c4 38	addq	$56, %rsp
10001bcad:	5b	popq	%rbx
10001bcae:	5d	popq	%rbp
10001bcaf:	c3	retq
10001bcb0:	55	pushq	%rbp
10001bcb1:	48 89 e5	movq	%rsp, %rbp
10001bcb4:	53	pushq	%rbx
10001bcb5:	48 83 ec 18	subq	$24, %rsp
10001bcb9:	48 8d 45 e8	leaq	-24(%rbp), %rax
10001bcbd:	48 89 38	movq	%rdi, (%rax)
10001bcc0:	48 8b 0d 41 6b 03 00	movq	224065(%rip), %rcx ## Objc class ref: SelfSizingHeaderOutlineVIew
10001bcc7:	48 89 48 08	movq	%rcx, 8(%rax)
10001bccb:	48 8b 35 66 57 03 00	movq	218982(%rip), %rsi ## Objc selector ref: initWithCoder:
10001bcd2:	48 89 c7	movq	%rax, %rdi
10001bcd5:	e8 02 38 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithCoder:]
10001bcda:	48 89 c3	movq	%rax, %rbx
10001bcdd:	48 85 c0	testq	%rax, %rax
10001bce0:	74 10	je	0x10001bcf2
10001bce2:	48 8b 35 77 65 03 00	movq	222583(%rip), %rsi ## Objc selector ref: sizeTableHeaderCellsToFit
10001bce9:	48 89 df	movq	%rbx, %rdi
10001bcec:	ff 15 2e 0f 02 00	callq	*134958(%rip) ## Objc message: -[%rdi sizeTableHeaderCellsToFit]
10001bcf2:	48 89 d8	movq	%rbx, %rax
10001bcf5:	48 83 c4 18	addq	$24, %rsp
10001bcf9:	5b	popq	%rbx
10001bcfa:	5d	popq	%rbp
10001bcfb:	c3	retq
10001bcfc:	55	pushq	%rbp
10001bcfd:	48 89 e5	movq	%rsp, %rbp
10001bd00:	41 57	pushq	%r15
10001bd02:	41 56	pushq	%r14
10001bd04:	41 55	pushq	%r13
10001bd06:	41 54	pushq	%r12
10001bd08:	53	pushq	%rbx
10001bd09:	48 81 ec f8 00 00 00	subq	$248, %rsp
10001bd10:	48 8b 05 01 0b 02 00	movq	133889(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001bd17:	48 8b 00	movq	(%rax), %rax
10001bd1a:	48 89 45 d0	movq	%rax, -48(%rbp)
10001bd1e:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10001bd22:	4c 8d b5 e0 fe ff ff	leaq	-288(%rbp), %r14
10001bd29:	66 41 0f 29 06	movapd	%xmm0, (%r14)
10001bd2e:	66 41 0f 29 46 10	movapd	%xmm0, 16(%r14)
10001bd34:	66 41 0f 29 46 20	movapd	%xmm0, 32(%r14)
10001bd3a:	66 41 0f 29 46 30	movapd	%xmm0, 48(%r14)
10001bd40:	48 8b 35 41 66 03 00	movq	222785(%rip), %rsi ## Objc selector ref: tableColumns
10001bd47:	48 8b 1d d2 0e 02 00	movq	134866(%rip), %rbx ## Objc message: -[%rdi tableColumns]
10001bd4e:	ff d3	callq	*%rbx
10001bd50:	48 8b 35 71 52 03 00	movq	217713(%rip), %rsi ## Objc selector ref: countByEnumeratingWithState:objects:count:
10001bd57:	48 8d 8d 50 ff ff ff	leaq	-176(%rbp), %rcx
10001bd5e:	41 b8 10 00 00 00	movl	$16, %r8d
10001bd64:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
10001bd6b:	48 89 c7	movq	%rax, %rdi
10001bd6e:	4c 89 f2	movq	%r14, %rdx
10001bd71:	ff d3	callq	*%rbx
10001bd73:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
10001bd7a:	48 85 c0	testq	%rax, %rax
10001bd7d:	0f 84 fe 00 00 00	je	0x10001be81
10001bd83:	48 8d 85 e0 fe ff ff	leaq	-288(%rbp), %rax
10001bd8a:	48 8b 40 10	movq	16(%rax), %rax
10001bd8e:	48 8b 00	movq	(%rax), %rax
10001bd91:	48 89 85 30 ff ff ff	movq	%rax, -208(%rbp)
10001bd98:	4c 8b 35 91 55 03 00	movq	218513(%rip), %r14 ## Objc selector ref: headerCell
10001bd9f:	4c 8b 3d 9a 50 03 00	movq	217242(%rip), %r15 ## Objc selector ref: cellSize
10001bda6:	48 8b 05 bb 59 03 00	movq	219579(%rip), %rax ## Objc selector ref: minWidth
10001bdad:	48 89 85 28 ff ff ff	movq	%rax, -216(%rbp)
10001bdb4:	48 8b 05 05 62 03 00	movq	221701(%rip), %rax ## Objc selector ref: setMinWidth:
10001bdbb:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
10001bdc2:	45 31 ed	xorl	%r13d, %r13d
10001bdc5:	48 8b 85 f0 fe ff ff	movq	-272(%rbp), %rax
10001bdcc:	48 8b 8d 30 ff ff ff	movq	-208(%rbp), %rcx
10001bdd3:	48 39 08	cmpq	%rcx, (%rax)
10001bdd6:	74 0c	je	0x10001bde4
10001bdd8:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
10001bddf:	e8 ec 36 01 00	callq	0x10002f4d0 ## symbol stub for: _objc_enumerationMutation
10001bde4:	48 8b 85 e8 fe ff ff	movq	-280(%rbp), %rax
10001bdeb:	4e 8b 24 e8	movq	(%rax,%r13,8), %r12
10001bdef:	4c 89 e7	movq	%r12, %rdi
10001bdf2:	4c 89 f6	movq	%r14, %rsi
10001bdf5:	ff d3	callq	*%rbx
10001bdf7:	48 89 c7	movq	%rax, %rdi
10001bdfa:	4c 89 fe	movq	%r15, %rsi
10001bdfd:	ff d3	callq	*%rbx
10001bdff:	f2 0f 11 85 20 ff ff ff	movsd	%xmm0, -224(%rbp)
10001be07:	4c 89 e7	movq	%r12, %rdi
10001be0a:	48 8b b5 28 ff ff ff	movq	-216(%rbp), %rsi
10001be11:	ff d3	callq	*%rbx
10001be13:	f2 0f 10 8d 20 ff ff ff	movsd	-224(%rbp), %xmm1
10001be1b:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10001be1f:	76 1c	jbe	0x10001be3d
10001be21:	4c 89 e7	movq	%r12, %rdi
10001be24:	4c 89 f6	movq	%r14, %rsi
10001be27:	ff d3	callq	*%rbx
10001be29:	48 89 c7	movq	%rax, %rdi
10001be2c:	4c 89 fe	movq	%r15, %rsi
10001be2f:	ff d3	callq	*%rbx
10001be31:	4c 89 e7	movq	%r12, %rdi
10001be34:	48 8b b5 38 ff ff ff	movq	-200(%rbp), %rsi
10001be3b:	ff d3	callq	*%rbx
10001be3d:	49 ff c5	incq	%r13
10001be40:	4c 39 ad 40 ff ff ff	cmpq	%r13, -192(%rbp)
10001be47:	0f 85 78 ff ff ff	jne	0x10001bdc5
10001be4d:	41 b8 10 00 00 00	movl	$16, %r8d
10001be53:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
10001be5a:	48 8b 35 67 51 03 00	movq	217447(%rip), %rsi ## Objc selector ref: countByEnumeratingWithState:objects:count:
10001be61:	48 8d 95 e0 fe ff ff	leaq	-288(%rbp), %rdx
10001be68:	48 8d 8d 50 ff ff ff	leaq	-176(%rbp), %rcx
10001be6f:	ff d3	callq	*%rbx
10001be71:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
10001be78:	48 85 c0	testq	%rax, %rax
10001be7b:	0f 85 17 ff ff ff	jne	0x10001bd98
10001be81:	48 8b 05 90 09 02 00	movq	133520(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001be88:	48 8b 00	movq	(%rax), %rax
10001be8b:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001be8f:	75 12	jne	0x10001bea3
10001be91:	48 81 c4 f8 00 00 00	addq	$248, %rsp
10001be98:	5b	popq	%rbx
10001be99:	41 5c	popq	%r12
10001be9b:	41 5d	popq	%r13
10001be9d:	41 5e	popq	%r14
10001be9f:	41 5f	popq	%r15
10001bea1:	5d	popq	%rbp
10001bea2:	c3	retq
10001bea3:	e8 08 35 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001bea8:	55	pushq	%rbp
10001bea9:	48 89 e5	movq	%rsp, %rbp
10001beac:	53	pushq	%rbx
10001bead:	48 83 ec 18	subq	$24, %rsp
10001beb1:	48 89 fb	movq	%rdi, %rbx
10001beb4:	48 8b 7f 28	movq	40(%rdi), %rdi
10001beb8:	ff 15 9a 0d 02 00	callq	*134554(%rip) ## literal pool symbol address: _objc_release
10001bebe:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001bec2:	48 89 1f	movq	%rbx, (%rdi)
10001bec5:	48 8b 05 44 69 03 00	movq	223556(%rip), %rax ## Objc class ref: FilterDocExport
10001becc:	48 89 47 08	movq	%rax, 8(%rdi)
10001bed0:	48 8b 35 79 51 03 00	movq	217465(%rip), %rsi ## Objc selector ref: dealloc
10001bed7:	e8 00 36 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001bedc:	48 83 c4 18	addq	$24, %rsp
10001bee0:	5b	popq	%rbx
10001bee1:	5d	popq	%rbp
10001bee2:	c3	retq
10001bee3:	55	pushq	%rbp
10001bee4:	48 89 e5	movq	%rsp, %rbp
10001bee7:	53	pushq	%rbx
10001bee8:	48 83 ec 18	subq	$24, %rsp
10001beec:	48 89 fb	movq	%rdi, %rbx
10001beef:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001bef3:	48 89 1f	movq	%rbx, (%rdi)
10001bef6:	48 8b 05 13 69 03 00	movq	223507(%rip), %rax ## Objc class ref: FilterDocExport
10001befd:	48 89 47 08	movq	%rax, 8(%rdi)
10001bf01:	48 8b 35 08 55 03 00	movq	218376(%rip), %rsi ## Objc selector ref: init
10001bf08:	e8 cf 35 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
10001bf0d:	48 89 d8	movq	%rbx, %rax
10001bf10:	48 83 c4 18	addq	$24, %rsp
10001bf14:	5b	popq	%rbx
10001bf15:	5d	popq	%rbp
10001bf16:	c3	retq
10001bf17:	55	pushq	%rbp
10001bf18:	48 89 e5	movq	%rsp, %rbp
10001bf1b:	53	pushq	%rbx
10001bf1c:	50	pushq	%rax
10001bf1d:	48 89 d7	movq	%rdx, %rdi
10001bf20:	48 8b 35 11 5d 03 00	movq	220433(%rip), %rsi ## Objc selector ref: selectedItem
10001bf27:	48 8b 1d f2 0c 02 00	movq	134386(%rip), %rbx ## Objc message: -[%rdi selectedItem]
10001bf2e:	ff d3	callq	*%rbx
10001bf30:	48 8b 35 e1 5b 03 00	movq	220129(%rip), %rsi ## Objc selector ref: representedObject
10001bf37:	48 89 c7	movq	%rax, %rdi
10001bf3a:	48 89 d8	movq	%rbx, %rax
10001bf3d:	48 83 c4 08	addq	$8, %rsp
10001bf41:	5b	popq	%rbx
10001bf42:	5d	popq	%rbp
10001bf43:	ff e0	jmpq	*%rax
10001bf45:	55	pushq	%rbp
10001bf46:	48 89 e5	movq	%rsp, %rbp
10001bf49:	41 57	pushq	%r15
10001bf4b:	41 56	pushq	%r14
10001bf4d:	41 55	pushq	%r13
10001bf4f:	41 54	pushq	%r12
10001bf51:	53	pushq	%rbx
10001bf52:	48 83 ec 38	subq	$56, %rsp
10001bf56:	48 85 c9	testq	%rcx, %rcx
10001bf59:	0f 84 64 01 00 00	je	0x10001c0c3
10001bf5f:	49 89 d6	movq	%rdx, %r14
10001bf62:	48 85 d2	testq	%rdx, %rdx
10001bf65:	0f 84 58 01 00 00	je	0x10001c0c3
10001bf6b:	4c 89 c3	movq	%r8, %rbx
10001bf6e:	4d 85 c0	testq	%r8, %r8
10001bf71:	0f 84 4c 01 00 00	je	0x10001c0c3
10001bf77:	48 8d 35 c2 24 02 00	leaq	140482(%rip), %rsi ## Objc cfstring ref: @"FileFormat"
10001bf7e:	4c 89 f7	movq	%r14, %rdi
10001bf81:	48 89 ca	movq	%rcx, %rdx
10001bf84:	e8 65 2f 01 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
10001bf89:	48 8b 05 28 08 02 00	movq	133160(%rip), %rax ## literal pool symbol address: __NSConcreteStackBlock
10001bf90:	48 8d 55 a8	leaq	-88(%rbp), %rdx
10001bf94:	48 89 02	movq	%rax, (%rdx)
10001bf97:	b8 00 00 00 c0	movl	$3221225472, %eax
10001bf9c:	48 89 42 08	movq	%rax, 8(%rdx)
10001bfa0:	48 8d 05 2b 01 00 00	leaq	299(%rip), %rax
10001bfa7:	48 89 42 10	movq	%rax, 16(%rdx)
10001bfab:	48 8d 05 9e 0d 02 00	leaq	134558(%rip), %rax
10001bfb2:	48 89 42 18	movq	%rax, 24(%rdx)
10001bfb6:	4c 89 72 20	movq	%r14, 32(%rdx)
10001bfba:	48 8b 35 07 52 03 00	movq	217607(%rip), %rsi ## Objc selector ref: enumerateKeysAndObjectsUsingBlock:
10001bfc1:	4c 8b 25 58 0c 02 00	movq	134232(%rip), %r12 ## Objc message: -[%rdi enumerateKeysAndObjectsUsingBlock:]
10001bfc8:	48 89 df	movq	%rbx, %rdi
10001bfcb:	41 ff d4	callq	*%r12
10001bfce:	4c 8b 3d a3 58 03 00	movq	219299(%rip), %r15 ## Objc selector ref: objectForKey:
10001bfd5:	48 8d 15 a4 24 02 00	leaq	140452(%rip), %rdx ## Objc cfstring ref: @"encrypt"
10001bfdc:	48 89 df	movq	%rbx, %rdi
10001bfdf:	4c 89 fe	movq	%r15, %rsi
10001bfe2:	41 ff d4	callq	*%r12
10001bfe5:	48 8b 35 34 55 03 00	movq	218420(%rip), %rsi ## Objc selector ref: integerValue
10001bfec:	48 89 c7	movq	%rax, %rdi
10001bfef:	41 ff d4	callq	*%r12
10001bff2:	48 83 f8 01	cmpq	$1, %rax
10001bff6:	0f 85 c7 00 00 00	jne	0x10001c0c3
10001bffc:	48 8d 15 9d 24 02 00	leaq	140445(%rip), %rdx ## Objc cfstring ref: @"encryptPassword"
10001c003:	48 89 df	movq	%rbx, %rdi
10001c006:	4c 89 fe	movq	%r15, %rsi
10001c009:	ff 15 11 0c 02 00	callq	*134161(%rip) ## Objc message: -[%rdi integerValue]
10001c00f:	48 85 c0	testq	%rax, %rax
10001c012:	0f 84 ab 00 00 00	je	0x10001c0c3
10001c018:	48 89 c3	movq	%rax, %rbx
10001c01b:	48 8b 35 d6 55 03 00	movq	218582(%rip), %rsi ## Objc selector ref: length
10001c022:	48 89 c7	movq	%rax, %rdi
10001c025:	ff 15 f5 0b 02 00	callq	*134133(%rip) ## Objc message: -[%rdi length]
10001c02b:	48 85 c0	testq	%rax, %rax
10001c02e:	0f 84 8f 00 00 00	je	0x10001c0c3
10001c034:	4c 8b 3d dd 65 03 00	movq	222685(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10001c03b:	48 8b 05 be 09 02 00	movq	133566(%rip), %rax ## literal pool symbol address: _kCGPDFContextOwnerPassword
10001c042:	48 8b 00	movq	(%rax), %rax
10001c045:	48 89 45 d0	movq	%rax, -48(%rbp)
10001c049:	48 8b 05 c0 09 02 00	movq	133568(%rip), %rax ## literal pool symbol address: _kCGPDFContextUserPassword
10001c050:	4c 8b 28	movq	(%rax), %r13
10001c053:	48 8b 3d 96 65 03 00	movq	222614(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001c05a:	48 8b 35 c7 57 03 00	movq	219079(%rip), %rsi ## Objc selector ref: numberWithInteger:
10001c061:	ba 80 00 00 00	movl	$128, %edx
10001c066:	41 ff d4	callq	*%r12
10001c069:	49 89 c2	movq	%rax, %r10
10001c06c:	4c 8b 1d 7d 09 02 00	movq	133501(%rip), %r11 ## literal pool symbol address: _kCGPDFContextEncryptionKeyLength
10001c073:	48 8b 35 3e 50 03 00	movq	217150(%rip), %rsi ## Objc selector ref: dictionaryWithObjectsAndKeys:
10001c07a:	48 83 ec 08	subq	$8, %rsp
10001c07e:	4c 89 ff	movq	%r15, %rdi
10001c081:	48 89 da	movq	%rbx, %rdx
10001c084:	48 8b 4d d0	movq	-48(%rbp), %rcx
10001c088:	49 89 d8	movq	%rbx, %r8
10001c08b:	4d 89 e9	movq	%r13, %r9
10001c08e:	31 c0	xorl	%eax, %eax
10001c090:	6a 00	pushq	$0
10001c092:	41 ff 33	pushq	(%r11)
10001c095:	41 52	pushq	%r10
10001c097:	41 ff d4	callq	*%r12
10001c09a:	48 83 c4 20	addq	$32, %rsp
10001c09e:	48 85 c0	testq	%rax, %rax
10001c0a1:	74 20	je	0x10001c0c3
10001c0a3:	48 8d 35 96 19 02 00	leaq	137622(%rip), %rsi ## Objc cfstring ref: @"PDF Encryption"
10001c0aa:	4c 89 f7	movq	%r14, %rdi
10001c0ad:	48 89 c2	movq	%rax, %rdx
10001c0b0:	48 83 c4 38	addq	$56, %rsp
10001c0b4:	5b	popq	%rbx
10001c0b5:	41 5c	popq	%r12
10001c0b7:	41 5d	popq	%r13
10001c0b9:	41 5e	popq	%r14
10001c0bb:	41 5f	popq	%r15
10001c0bd:	5d	popq	%rbp
10001c0be:	e9 2b 2e 01 00	jmp	0x10002eeee ## symbol stub for: _CFDictionarySetValue
10001c0c3:	48 83 c4 38	addq	$56, %rsp
10001c0c7:	5b	popq	%rbx
10001c0c8:	41 5c	popq	%r12
10001c0ca:	41 5d	popq	%r13
10001c0cc:	41 5e	popq	%r14
10001c0ce:	41 5f	popq	%r15
10001c0d0:	5d	popq	%rbp
10001c0d1:	c3	retq
10001c0d2:	55	pushq	%rbp
10001c0d3:	48 89 e5	movq	%rsp, %rbp
10001c0d6:	41 57	pushq	%r15
10001c0d8:	41 56	pushq	%r14
10001c0da:	53	pushq	%rbx
10001c0db:	50	pushq	%rax
10001c0dc:	49 89 d6	movq	%rdx, %r14
10001c0df:	48 89 f3	movq	%rsi, %rbx
10001c0e2:	49 89 ff	movq	%rdi, %r15
10001c0e5:	48 8b 35 9c 54 03 00	movq	218268(%rip), %rsi ## Objc selector ref: isEqualToString:
10001c0ec:	48 8d 15 6d 23 02 00	leaq	140141(%rip), %rdx ## Objc cfstring ref: @"quartzFilterObj"
10001c0f3:	48 89 df	movq	%rbx, %rdi
10001c0f6:	ff 15 24 0b 02 00	callq	*133924(%rip) ## Objc message: +[NSNumber isEqualToString:]
10001c0fc:	84 c0	testb	%al, %al
10001c0fe:	49 8b 7f 20	movq	32(%r15), %rdi
10001c102:	48 8d 35 17 19 02 00	leaq	137495(%rip), %rsi ## Objc cfstring ref: @"QuartzFilter"
10001c109:	48 0f 44 f3	cmoveq	%rbx, %rsi
10001c10d:	4c 89 f2	movq	%r14, %rdx
10001c110:	48 83 c4 08	addq	$8, %rsp
10001c114:	5b	popq	%rbx
10001c115:	41 5e	popq	%r14
10001c117:	41 5f	popq	%r15
10001c119:	5d	popq	%rbp
10001c11a:	e9 cf 2d 01 00	jmp	0x10002eeee ## symbol stub for: _CFDictionarySetValue
10001c11f:	55	pushq	%rbp
10001c120:	48 89 e5	movq	%rsp, %rbp
10001c123:	41 56	pushq	%r14
10001c125:	53	pushq	%rbx
10001c126:	48 89 d3	movq	%rdx, %rbx
10001c129:	48 8b 05 b0 0a 02 00	movq	133808(%rip), %rax ## literal pool symbol address: _kUTTypeQuickTimeMovie
10001c130:	48 8b 10	movq	(%rax), %rdx
10001c133:	4c 8b 35 4e 54 03 00	movq	218190(%rip), %r14 ## Objc selector ref: isEqualToString:
10001c13a:	48 89 df	movq	%rbx, %rdi
10001c13d:	4c 89 f6	movq	%r14, %rsi
10001c140:	ff 15 da 0a 02 00	callq	*133850(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c146:	84 c0	testb	%al, %al
10001c148:	75 45	jne	0x10001c18f
10001c14a:	48 8d 15 4f 1a 02 00	leaq	137807(%rip), %rdx ## Objc cfstring ref: @"com.ilm.openexr-image"
10001c151:	48 89 df	movq	%rbx, %rdi
10001c154:	4c 89 f6	movq	%r14, %rsi
10001c157:	ff 15 c3 0a 02 00	callq	*133827(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c15d:	84 c0	testb	%al, %al
10001c15f:	75 2e	jne	0x10001c18f
10001c161:	48 8d 15 58 23 02 00	leaq	140120(%rip), %rdx ## Objc cfstring ref: @"public.pvr"
10001c168:	48 89 df	movq	%rbx, %rdi
10001c16b:	4c 89 f6	movq	%r14, %rsi
10001c16e:	ff 15 ac 0a 02 00	callq	*133804(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c174:	84 c0	testb	%al, %al
10001c176:	75 17	jne	0x10001c18f
10001c178:	48 8d 15 61 23 02 00	leaq	140129(%rip), %rdx ## Objc cfstring ref: @"com.apple.rjpeg"
10001c17f:	48 89 df	movq	%rbx, %rdi
10001c182:	4c 89 f6	movq	%r14, %rsi
10001c185:	ff 15 95 0a 02 00	callq	*133781(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c18b:	84 c0	testb	%al, %al
10001c18d:	74 0a	je	0x10001c199
10001c18f:	31 c0	xorl	%eax, %eax
10001c191:	0f b6 c0	movzbl	%al, %eax
10001c194:	5b	popq	%rbx
10001c195:	41 5e	popq	%r14
10001c197:	5d	popq	%rbp
10001c198:	c3	retq
10001c199:	48 8d 15 60 23 02 00	leaq	140128(%rip), %rdx ## Objc cfstring ref: @"public.pbm"
10001c1a0:	48 89 df	movq	%rbx, %rdi
10001c1a3:	4c 89 f6	movq	%r14, %rsi
10001c1a6:	ff 15 74 0a 02 00	callq	*133748(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c1ac:	84 c0	testb	%al, %al
10001c1ae:	0f 94 c0	sete	%al
10001c1b1:	eb de	jmp	0x10001c191
10001c1b3:	55	pushq	%rbp
10001c1b4:	48 89 e5	movq	%rsp, %rbp
10001c1b7:	41 57	pushq	%r15
10001c1b9:	41 56	pushq	%r14
10001c1bb:	41 55	pushq	%r13
10001c1bd:	41 54	pushq	%r12
10001c1bf:	53	pushq	%rbx
10001c1c0:	48 83 ec 28	subq	$40, %rsp
10001c1c4:	49 89 cf	movq	%rcx, %r15
10001c1c7:	49 89 d6	movq	%rdx, %r14
10001c1ca:	48 89 fb	movq	%rdi, %rbx
10001c1cd:	48 8b 3d 24 65 03 00	movq	222500(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSSavePanel
10001c1d4:	48 8b 35 cd 59 03 00	movq	219597(%rip), %rsi ## Objc selector ref: savePanel
10001c1db:	4c 8b 2d 3e 0a 02 00	movq	133694(%rip), %r13 ## Objc message: +[NSSavePanel savePanel]
10001c1e2:	41 ff d5	callq	*%r13
10001c1e5:	48 89 43 18	movq	%rax, 24(%rbx)
10001c1e9:	48 c7 43 10 ff ff ff ff	movq	$-1, 16(%rbx)
10001c1f1:	4c 89 7b 20	movq	%r15, 32(%rbx)
10001c1f5:	4c 89 f7	movq	%r14, %rdi
10001c1f8:	ff 15 62 0a 02 00	callq	*133730(%rip) ## literal pool symbol address: _objc_retain
10001c1fe:	48 89 43 08	movq	%rax, 8(%rbx)
10001c202:	48 8b 3d f7 64 03 00	movq	222455(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_IKSaveOptions
10001c209:	e8 b0 32 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10001c20e:	49 89 c7	movq	%rax, %r15
10001c211:	48 8b 7b 08	movq	8(%rbx), %rdi
10001c215:	48 8b 35 4c 4e 03 00	movq	216652(%rip), %rsi ## Objc selector ref: defaultSaveAsProperties
10001c21c:	41 ff d5	callq	*%r13
10001c21f:	49 89 c4	movq	%rax, %r12
10001c222:	48 8b 7b 08	movq	8(%rbx), %rdi
10001c226:	48 8b 35 5b 4b 03 00	movq	215899(%rip), %rsi ## Objc selector ref: bestTypeForWriting
10001c22d:	41 ff d5	callq	*%r13
10001c230:	48 8b 35 39 52 03 00	movq	217657(%rip), %rsi ## Objc selector ref: initWithImageProperties:imageUTType:
10001c237:	4c 89 ff	movq	%r15, %rdi
10001c23a:	4c 89 e2	movq	%r12, %rdx
10001c23d:	48 89 c1	movq	%rax, %rcx
10001c240:	41 ff d5	callq	*%r13
10001c243:	48 89 43 28	movq	%rax, 40(%rbx)
10001c247:	48 8b 35 3a 5b 03 00	movq	219962(%rip), %rsi ## Objc selector ref: setDelegate:
10001c24e:	48 89 c7	movq	%rax, %rdi
10001c251:	48 89 da	movq	%rbx, %rdx
10001c254:	41 ff d5	callq	*%r13
10001c257:	48 8b 53 18	movq	24(%rbx), %rdx
10001c25b:	48 8b 7b 28	movq	40(%rbx), %rdi
10001c25f:	48 8b 35 22 4a 03 00	movq	215586(%rip), %rsi ## Objc selector ref: addSaveOptionsAccessoryViewToSavePanel:
10001c266:	41 ff d5	callq	*%r13
10001c269:	48 8b 7b 18	movq	24(%rbx), %rdi
10001c26d:	48 8b 35 a4 5a 03 00	movq	219812(%rip), %rsi ## Objc selector ref: setCanSelectHiddenExtension:
10001c274:	ba 01 00 00 00	movl	$1, %edx
10001c279:	41 ff d5	callq	*%r13
10001c27c:	4c 8b 7b 18	movq	24(%rbx), %r15
10001c280:	48 8b 35 89 4f 03 00	movq	216969(%rip), %rsi ## Objc selector ref: fileURL
10001c287:	4c 89 f7	movq	%r14, %rdi
10001c28a:	41 ff d5	callq	*%r13
10001c28d:	48 8b 35 fc 5a 03 00	movq	219900(%rip), %rsi ## Objc selector ref: setDirectoryURL:
10001c294:	4c 89 ff	movq	%r15, %rdi
10001c297:	48 89 c2	movq	%rax, %rdx
10001c29a:	41 ff d5	callq	*%r13
10001c29d:	4c 8b 7b 18	movq	24(%rbx), %r15
10001c2a1:	48 8b 35 80 62 03 00	movq	221824(%rip), %rsi ## Objc selector ref: windowForSheet
10001c2a8:	4c 89 f7	movq	%r14, %rdi
10001c2ab:	41 ff d5	callq	*%r13
10001c2ae:	48 8b 15 03 05 02 00	movq	132355(%rip), %rdx ## literal pool symbol address: __NSConcreteStackBlock
10001c2b5:	48 8d 4d b0	leaq	-80(%rbp), %rcx
10001c2b9:	48 89 11	movq	%rdx, (%rcx)
10001c2bc:	ba 00 00 00 c2	movl	$3254779904, %edx
10001c2c1:	48 89 51 08	movq	%rdx, 8(%rcx)
10001c2c5:	48 8d 15 32 00 00 00	leaq	50(%rip), %rdx
10001c2cc:	48 89 51 10	movq	%rdx, 16(%rcx)
10001c2d0:	48 8d 15 99 0a 02 00	leaq	133785(%rip), %rdx
10001c2d7:	48 89 51 18	movq	%rdx, 24(%rcx)
10001c2db:	48 89 59 20	movq	%rbx, 32(%rcx)
10001c2df:	48 8b 35 9a 4a 03 00	movq	215706(%rip), %rsi ## Objc selector ref: beginSheetModalForWindow:completionHandler:
10001c2e6:	4c 89 ff	movq	%r15, %rdi
10001c2e9:	48 89 c2	movq	%rax, %rdx
10001c2ec:	41 ff d5	callq	*%r13
10001c2ef:	48 83 c4 28	addq	$40, %rsp
10001c2f3:	5b	popq	%rbx
10001c2f4:	41 5c	popq	%r12
10001c2f6:	41 5d	popq	%r13
10001c2f8:	41 5e	popq	%r14
10001c2fa:	41 5f	popq	%r15
10001c2fc:	5d	popq	%rbp
10001c2fd:	c3	retq
10001c2fe:	55	pushq	%rbp
10001c2ff:	48 89 e5	movq	%rsp, %rbp
10001c302:	48 89 f2	movq	%rsi, %rdx
10001c305:	48 8b 7f 20	movq	32(%rdi), %rdi
10001c309:	48 8b 4f 18	movq	24(%rdi), %rcx
10001c30d:	4c 8b 47 20	movq	32(%rdi), %r8
10001c311:	48 8b 35 20 56 03 00	movq	218656(%rip), %rsi ## Objc selector ref: panelDidEnd:contextInfo:operation:
10001c318:	5d	popq	%rbp
10001c319:	ff 25 01 09 02 00	jmpq	*133377(%rip) ## Objc message: +[IKSaveOptions panelDidEnd:contextInfo:operation:]
10001c31f:	55	pushq	%rbp
10001c320:	48 89 e5	movq	%rsp, %rbp
10001c323:	41 57	pushq	%r15
10001c325:	41 56	pushq	%r14
10001c327:	41 55	pushq	%r13
10001c329:	41 54	pushq	%r12
10001c32b:	53	pushq	%rbx
10001c32c:	48 83 ec 18	subq	$24, %rsp
10001c330:	49 89 fe	movq	%rdi, %r14
10001c333:	48 83 fa 01	cmpq	$1, %rdx
10001c337:	0f 85 bd 03 00 00	jne	0x10001c6fa
10001c33d:	4d 89 c4	movq	%r8, %r12
10001c340:	48 89 cb	movq	%rcx, %rbx
10001c343:	49 8b 7e 08	movq	8(%r14), %rdi
10001c347:	48 8b 35 d2 55 03 00	movq	218578(%rip), %rsi ## Objc selector ref: pageCount
10001c34e:	4c 8b 2d cb 08 02 00	movq	133323(%rip), %r13 ## Objc message: -[%rdi pageCount]
10001c355:	41 ff d5	callq	*%r13
10001c358:	49 89 c7	movq	%rax, %r15
10001c35b:	48 8b 35 5e 48 03 00	movq	215134(%rip), %rsi ## Objc selector ref: URL
10001c362:	48 89 df	movq	%rbx, %rdi
10001c365:	41 ff d5	callq	*%r13
10001c368:	48 8b 35 99 48 03 00	movq	215193(%rip), %rsi ## Objc selector ref: absoluteURL
10001c36f:	48 89 c7	movq	%rax, %rdi
10001c372:	41 ff d5	callq	*%r13
10001c375:	48 89 45 c0	movq	%rax, -64(%rbp)
10001c379:	49 8b 7e 28	movq	40(%r14), %rdi
10001c37d:	48 8b 35 3c 50 03 00	movq	217148(%rip), %rsi ## Objc selector ref: imageUTType
10001c384:	41 ff d5	callq	*%r13
10001c387:	48 89 c3	movq	%rax, %rbx
10001c38a:	48 8b 3d 77 63 03 00	movq	222071(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDocumentController
10001c391:	48 8b 35 80 5e 03 00	movq	220800(%rip), %rsi ## Objc selector ref: sharedDocumentController
10001c398:	41 ff d5	callq	*%r13
10001c39b:	48 8b 35 56 4d 03 00	movq	216406(%rip), %rsi ## Objc selector ref: documentClassForType:
10001c3a2:	48 89 c7	movq	%rax, %rdi
10001c3a5:	48 89 5d c8	movq	%rbx, -56(%rbp)
10001c3a9:	48 89 da	movq	%rbx, %rdx
10001c3ac:	41 ff d5	callq	*%r13
10001c3af:	48 85 c0	testq	%rax, %rax
10001c3b2:	0f 84 18 01 00 00	je	0x10001c4d0
10001c3b8:	48 89 c7	movq	%rax, %rdi
10001c3bb:	e8 04 31 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001c3c0:	49 83 ff 02	cmpq	$2, %r15
10001c3c4:	48 89 45 d0	movq	%rax, -48(%rbp)
10001c3c8:	0f 8c 08 01 00 00	jl	0x10001c4d6
10001c3ce:	48 89 c3	movq	%rax, %rbx
10001c3d1:	48 85 c0	testq	%rax, %rax
10001c3d4:	0f 84 fc 00 00 00	je	0x10001c4d6
10001c3da:	48 8b 35 af 54 03 00	movq	218287(%rip), %rsi ## Objc selector ref: okToWriteMultiPage
10001c3e1:	48 89 df	movq	%rbx, %rdi
10001c3e4:	ff 15 36 08 02 00	callq	*133174(%rip) ## Objc message: +[NSDocumentController okToWriteMultiPage]
10001c3ea:	84 c0	testb	%al, %al
10001c3ec:	0f 85 e4 00 00 00	jne	0x10001c4d6
10001c3f2:	48 8b 3d 17 63 03 00	movq	221975(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAlert
10001c3f9:	e8 c6 30 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001c3fe:	48 89 c7	movq	%rax, %rdi
10001c401:	e8 c4 30 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001c406:	49 89 c7	movq	%rax, %r15
10001c409:	48 8b 3d 90 61 03 00	movq	221584(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001c410:	48 8b 35 d1 52 03 00	movq	217809(%rip), %rsi ## Objc selector ref: mainBundle
10001c417:	41 ff d5	callq	*%r13
10001c41a:	48 8b 1d 3f 52 03 00	movq	217663(%rip), %rbx ## Objc selector ref: localizedStringForKey:value:table:
10001c421:	48 8d 15 f8 20 02 00	leaq	139512(%rip), %rdx ## Objc cfstring ref: @"OK"
10001c428:	48 8d 0d 71 0a 02 00	leaq	133745(%rip), %rcx ## Objc cfstring ref: @""
10001c42f:	48 89 c7	movq	%rax, %rdi
10001c432:	48 89 de	movq	%rbx, %rsi
10001c435:	45 31 c0	xorl	%r8d, %r8d
10001c438:	41 ff d5	callq	*%r13
10001c43b:	48 8b 35 f6 47 03 00	movq	215030(%rip), %rsi ## Objc selector ref: addButtonWithTitle:
10001c442:	4c 89 ff	movq	%r15, %rdi
10001c445:	48 89 c2	movq	%rax, %rdx
10001c448:	41 ff d5	callq	*%r13
10001c44b:	48 8b 3d 4e 61 03 00	movq	221518(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001c452:	48 8b 35 8f 52 03 00	movq	217743(%rip), %rsi ## Objc selector ref: mainBundle
10001c459:	41 ff d5	callq	*%r13
10001c45c:	48 8d 15 dd 20 02 00	leaq	139485(%rip), %rdx ## Objc cfstring ref: @"Only the current page will be exported."
10001c463:	48 89 c7	movq	%rax, %rdi
10001c466:	48 89 de	movq	%rbx, %rsi
10001c469:	48 8d 0d 30 0a 02 00	leaq	133680(%rip), %rcx ## Objc cfstring ref: @""
10001c470:	45 31 c0	xorl	%r8d, %r8d
10001c473:	41 ff d5	callq	*%r13
10001c476:	48 8b 35 2b 5b 03 00	movq	219947(%rip), %rsi ## Objc selector ref: setMessageText:
10001c47d:	4c 89 ff	movq	%r15, %rdi
10001c480:	48 89 c2	movq	%rax, %rdx
10001c483:	41 ff d5	callq	*%r13
10001c486:	48 8b 3d 13 61 03 00	movq	221459(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001c48d:	48 8b 35 54 52 03 00	movq	217684(%rip), %rsi ## Objc selector ref: mainBundle
10001c494:	41 ff d5	callq	*%r13
10001c497:	48 8d 15 c2 20 02 00	leaq	139458(%rip), %rdx ## Objc cfstring ref: @"The chosen export file format supports only one page."
10001c49e:	48 89 c7	movq	%rax, %rdi
10001c4a1:	48 89 de	movq	%rbx, %rsi
10001c4a4:	48 8d 0d f5 09 02 00	leaq	133621(%rip), %rcx ## Objc cfstring ref: @""
10001c4ab:	45 31 c0	xorl	%r8d, %r8d
10001c4ae:	41 ff d5	callq	*%r13
10001c4b1:	48 8b 35 40 5a 03 00	movq	219712(%rip), %rsi ## Objc selector ref: setInformativeText:
10001c4b8:	4c 89 ff	movq	%r15, %rdi
10001c4bb:	48 89 c2	movq	%rax, %rdx
10001c4be:	41 ff d5	callq	*%r13
10001c4c1:	48 8b 35 a0 56 03 00	movq	218784(%rip), %rsi ## Objc selector ref: runModal
10001c4c8:	4c 89 ff	movq	%r15, %rdi
10001c4cb:	41 ff d5	callq	*%r13
10001c4ce:	eb 06	jmp	0x10001c4d6
10001c4d0:	31 c0	xorl	%eax, %eax
10001c4d2:	48 89 45 d0	movq	%rax, -48(%rbp)
10001c4d6:	49 8b 7e 08	movq	8(%r14), %rdi
10001c4da:	4c 8b 3d 6f 52 03 00	movq	217711(%rip), %r15 ## Objc selector ref: metadata
10001c4e1:	4c 89 fe	movq	%r15, %rsi
10001c4e4:	ff 15 36 07 02 00	callq	*132918(%rip) ## Objc message: +[NSBundle metadata]
10001c4ea:	48 8b 0d 7f 04 02 00	movq	132223(%rip), %rcx ## literal pool symbol address: _kCFAllocatorDefault
10001c4f1:	48 8b 19	movq	(%rcx), %rbx
10001c4f4:	48 85 c0	testq	%rax, %rax
10001c4f7:	74 1c	je	0x10001c515
10001c4f9:	49 8b 7e 08	movq	8(%r14), %rdi
10001c4fd:	4c 89 fe	movq	%r15, %rsi
10001c500:	ff 15 1a 07 02 00	callq	*132890(%rip) ## Objc message: -[%rdi metadata]
10001c506:	48 89 df	movq	%rbx, %rdi
10001c509:	31 f6	xorl	%esi, %esi
10001c50b:	48 89 c2	movq	%rax, %rdx
10001c50e:	e8 b7 29 01 00	callq	0x10002eeca ## symbol stub for: _CFDictionaryCreateMutableCopy
10001c513:	eb 18	jmp	0x10001c52d
10001c515:	48 8b 15 74 04 02 00	movq	132212(%rip), %rdx ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
10001c51c:	48 8b 0d 75 04 02 00	movq	132213(%rip), %rcx ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
10001c523:	48 89 df	movq	%rbx, %rdi
10001c526:	31 f6	xorl	%esi, %esi
10001c528:	e8 97 29 01 00	callq	0x10002eec4 ## symbol stub for: _CFDictionaryCreateMutable
10001c52d:	49 89 c7	movq	%rax, %r15
10001c530:	48 8b 35 89 4e 03 00	movq	216713(%rip), %rsi ## Objc selector ref: imageUTType
10001c537:	49 8b 7e 28	movq	40(%r14), %rdi
10001c53b:	41 ff d5	callq	*%r13
10001c53e:	48 89 c3	movq	%rax, %rbx
10001c541:	49 8b 7e 28	movq	40(%r14), %rdi
10001c545:	48 8b 35 4c 5f 03 00	movq	221004(%rip), %rsi ## Objc selector ref: userSelection
10001c54c:	41 ff d5	callq	*%r13
10001c54f:	48 8b 35 4a 47 03 00	movq	214858(%rip), %rsi ## Objc selector ref: addUserChoice:imageUTType:userSelection:
10001c556:	4c 89 f7	movq	%r14, %rdi
10001c559:	4c 89 fa	movq	%r15, %rdx
10001c55c:	48 89 d9	movq	%rbx, %rcx
10001c55f:	49 89 c0	movq	%rax, %r8
10001c562:	41 ff d5	callq	*%r13
10001c565:	49 8b 5e 08	movq	8(%r14), %rbx
10001c569:	48 8b 3d a8 61 03 00	movq	221608(%rip), %rdi ## Objc class ref: FilterDoc
10001c570:	48 8b 35 71 4b 03 00	movq	215921(%rip), %rsi ## Objc selector ref: docTypeForImageType:
10001c577:	48 8b 55 c8	movq	-56(%rbp), %rdx
10001c57b:	41 ff d5	callq	*%r13
10001c57e:	48 8b 35 5b 4c 03 00	movq	216155(%rip), %rsi ## Objc selector ref: exportData:operation:
10001c585:	48 89 df	movq	%rbx, %rdi
10001c588:	89 c2	movl	%eax, %edx
10001c58a:	4c 89 e1	movq	%r12, %rcx
10001c58d:	41 ff d5	callq	*%r13
10001c590:	48 8b 35 a1 5f 03 00	movq	221089(%rip), %rsi ## Objc selector ref: writeExportDataToURL:data:info:
10001c597:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001c59b:	48 89 df	movq	%rbx, %rdi
10001c59e:	48 8b 55 c0	movq	-64(%rbp), %rdx
10001c5a2:	48 89 c1	movq	%rax, %rcx
10001c5a5:	4d 89 f8	movq	%r15, %r8
10001c5a8:	41 ff d5	callq	*%r13
10001c5ab:	84 c0	testb	%al, %al
10001c5ad:	0f 84 8c 00 00 00	je	0x10001c63f
10001c5b3:	49 83 fc 01	cmpq	$1, %r12
10001c5b7:	0f 85 27 01 00 00	jne	0x10001c6e4
10001c5bd:	49 8b 7e 08	movq	8(%r14), %rdi
10001c5c1:	48 8b 35 58 58 03 00	movq	219224(%rip), %rsi ## Objc selector ref: setFileURL:
10001c5c8:	4c 8b 65 c0	movq	-64(%rbp), %r12
10001c5cc:	4c 89 e2	movq	%r12, %rdx
10001c5cf:	41 ff d5	callq	*%r13
10001c5d2:	49 8b 7e 08	movq	8(%r14), %rdi
10001c5d6:	48 8b 35 3b 58 03 00	movq	219195(%rip), %rsi ## Objc selector ref: setFileType:
10001c5dd:	48 8b 55 c8	movq	-56(%rbp), %rdx
10001c5e1:	41 ff d5	callq	*%r13
10001c5e4:	49 8b 5e 08	movq	8(%r14), %rbx
10001c5e8:	48 89 df	movq	%rbx, %rdi
10001c5eb:	e8 f8 2e 01 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10001c5f0:	48 8b 35 f1 45 03 00	movq	214513(%rip), %rsi ## Objc selector ref: _fileModificationDateForURL:
10001c5f7:	48 89 c7	movq	%rax, %rdi
10001c5fa:	4c 89 e2	movq	%r12, %rdx
10001c5fd:	41 ff d5	callq	*%r13
10001c600:	48 8b 35 09 58 03 00	movq	219145(%rip), %rsi ## Objc selector ref: setFileModificationDate:
10001c607:	48 89 df	movq	%rbx, %rdi
10001c60a:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001c60e:	48 89 c2	movq	%rax, %rdx
10001c611:	41 ff d5	callq	*%r13
10001c614:	49 8b 7e 08	movq	8(%r14), %rdi
10001c618:	48 8b 35 e1 45 03 00	movq	214497(%rip), %rsi ## Objc selector ref: _resetMoveAndRenameSensing
10001c61f:	41 ff d5	callq	*%r13
10001c622:	49 8b 7e 08	movq	8(%r14), %rdi
10001c626:	48 8b 35 23 54 03 00	movq	218147(%rip), %rsi ## Objc selector ref: readFromURL:ofType:error:
10001c62d:	4c 89 e2	movq	%r12, %rdx
10001c630:	48 8b 4d c8	movq	-56(%rbp), %rcx
10001c634:	45 31 c0	xorl	%r8d, %r8d
10001c637:	41 ff d5	callq	*%r13
10001c63a:	e9 a5 00 00 00	jmp	0x10001c6e4
10001c63f:	48 8b 3d ca 60 03 00	movq	221386(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAlert
10001c646:	e8 79 2e 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001c64b:	48 89 c7	movq	%rax, %rdi
10001c64e:	e8 77 2e 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001c653:	49 89 c4	movq	%rax, %r12
10001c656:	48 8b 3d 43 5f 03 00	movq	220995(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001c65d:	48 8b 35 84 50 03 00	movq	217220(%rip), %rsi ## Objc selector ref: mainBundle
10001c664:	41 ff d5	callq	*%r13
10001c667:	48 8b 35 f2 4f 03 00	movq	217074(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001c66e:	48 8d 15 ab 1e 02 00	leaq	138923(%rip), %rdx ## Objc cfstring ref: @"OK"
10001c675:	48 8d 1d 24 08 02 00	leaq	133156(%rip), %rbx ## Objc cfstring ref: @""
10001c67c:	48 89 c7	movq	%rax, %rdi
10001c67f:	48 89 d9	movq	%rbx, %rcx
10001c682:	45 31 c0	xorl	%r8d, %r8d
10001c685:	41 ff d5	callq	*%r13
10001c688:	48 8b 35 a9 45 03 00	movq	214441(%rip), %rsi ## Objc selector ref: addButtonWithTitle:
10001c68f:	4c 89 e7	movq	%r12, %rdi
10001c692:	48 89 c2	movq	%rax, %rdx
10001c695:	41 ff d5	callq	*%r13
10001c698:	48 8b 3d 01 5f 03 00	movq	220929(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001c69f:	48 8b 35 42 50 03 00	movq	217154(%rip), %rsi ## Objc selector ref: mainBundle
10001c6a6:	41 ff d5	callq	*%r13
10001c6a9:	48 8d 15 d0 1e 02 00	leaq	138960(%rip), %rdx ## Objc cfstring ref: @"Couldn't export document"
10001c6b0:	48 89 c7	movq	%rax, %rdi
10001c6b3:	48 8b 35 a6 4f 03 00	movq	216998(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001c6ba:	48 89 d9	movq	%rbx, %rcx
10001c6bd:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001c6c1:	45 31 c0	xorl	%r8d, %r8d
10001c6c4:	41 ff d5	callq	*%r13
10001c6c7:	48 8b 35 2a 58 03 00	movq	219178(%rip), %rsi ## Objc selector ref: setInformativeText:
10001c6ce:	4c 89 e7	movq	%r12, %rdi
10001c6d1:	48 89 c2	movq	%rax, %rdx
10001c6d4:	41 ff d5	callq	*%r13
10001c6d7:	48 8b 35 8a 54 03 00	movq	218250(%rip), %rsi ## Objc selector ref: runModal
10001c6de:	4c 89 e7	movq	%r12, %rdi
10001c6e1:	41 ff d5	callq	*%r13
10001c6e4:	48 89 df	movq	%rbx, %rdi
10001c6e7:	ff 15 6b 05 02 00	callq	*132459(%rip) ## literal pool symbol address: _objc_release
10001c6ed:	4d 85 ff	testq	%r15, %r15
10001c6f0:	74 08	je	0x10001c6fa
10001c6f2:	4c 89 ff	movq	%r15, %rdi
10001c6f5:	e8 18 28 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001c6fa:	49 c7 46 18 00 00 00 00	movq	$0, 24(%r14)
10001c702:	49 8b 7e 08	movq	8(%r14), %rdi
10001c706:	48 83 c4 18	addq	$24, %rsp
10001c70a:	5b	popq	%rbx
10001c70b:	41 5c	popq	%r12
10001c70d:	41 5d	popq	%r13
10001c70f:	41 5e	popq	%r14
10001c711:	41 5f	popq	%r15
10001c713:	5d	popq	%rbp
10001c714:	ff 25 3e 05 02 00	jmpq	*132414(%rip) ## literal pool symbol address: _objc_release
10001c71a:	55	pushq	%rbp
10001c71b:	48 89 e5	movq	%rsp, %rbp
10001c71e:	53	pushq	%rbx
10001c71f:	48 83 ec 18	subq	$24, %rsp
10001c723:	48 89 fb	movq	%rdi, %rbx
10001c726:	48 8b 05 e3 68 03 00	movq	223459(%rip), %rax
10001c72d:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001c731:	e8 c4 2a 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
10001c736:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001c73a:	48 89 1f	movq	%rbx, (%rdi)
10001c73d:	48 8b 05 d4 60 03 00	movq	221396(%rip), %rax ## Objc class ref: FilterPostScriptDoc
10001c744:	48 89 47 08	movq	%rax, 8(%rdi)
10001c748:	48 8b 35 01 49 03 00	movq	215297(%rip), %rsi ## Objc selector ref: dealloc
10001c74f:	e8 88 2d 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001c754:	48 83 c4 18	addq	$24, %rsp
10001c758:	5b	popq	%rbx
10001c759:	5d	popq	%rbp
10001c75a:	c3	retq
10001c75b:	55	pushq	%rbp
10001c75c:	48 89 e5	movq	%rsp, %rbp
10001c75f:	41 57	pushq	%r15
10001c761:	41 56	pushq	%r14
10001c763:	41 55	pushq	%r13
10001c765:	41 54	pushq	%r12
10001c767:	53	pushq	%rbx
10001c768:	48 81 ec 58 08 00 00	subq	$2136, %rsp
10001c76f:	49 89 d4	movq	%rdx, %r12
10001c772:	49 89 fd	movq	%rdi, %r13
10001c775:	48 8b 05 9c 00 02 00	movq	131228(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001c77c:	48 8b 00	movq	(%rax), %rax
10001c77f:	48 89 45 d0	movq	%rax, -48(%rbp)
10001c783:	48 8b 35 fe 4d 03 00	movq	216574(%rip), %rsi ## Objc selector ref: isEqualToString:
10001c78a:	48 8d 15 4f 1a 02 00	leaq	137807(%rip), %rdx ## Objc cfstring ref: @"PostScript Document"
10001c791:	48 89 cf	movq	%rcx, %rdi
10001c794:	ff 15 86 04 02 00	callq	*132230(%rip) ## Objc message: -[%rdi isEqualToString:]
10001c79a:	45 31 f6	xorl	%r14d, %r14d
10001c79d:	4d 85 e4	testq	%r12, %r12
10001c7a0:	0f 84 8c 01 00 00	je	0x10001c932
10001c7a6:	84 c0	testb	%al, %al
10001c7a8:	0f 84 84 01 00 00	je	0x10001c932
10001c7ae:	e8 27 2c 01 00	callq	0x10002f3da ## symbol stub for: _getuid
10001c7b3:	41 89 c7	movl	%eax, %r15d
10001c7b6:	48 8d 95 d0 f7 ff ff	leaq	-2096(%rbp), %rdx
10001c7bd:	b9 01 04 00 00	movl	$1025, %ecx
10001c7c2:	4c 89 e7	movq	%r12, %rdi
10001c7c5:	be 01 00 00 00	movl	$1, %esi
10001c7ca:	e8 97 27 01 00	callq	0x10002ef66 ## symbol stub for: _CFURLGetFileSystemRepresentation
10001c7cf:	31 db	xorl	%ebx, %ebx
10001c7d1:	84 c0	testb	%al, %al
10001c7d3:	4c 89 ad c8 f7 ff ff	movq	%r13, -2104(%rbp)
10001c7da:	74 2d	je	0x10001c809
10001c7dc:	48 8d bd d0 f7 ff ff	leaq	-2096(%rbp), %rdi
10001c7e3:	e8 54 2d 01 00	callq	0x10002f53c ## symbol stub for: _strlen
10001c7e8:	85 c0	testl	%eax, %eax
10001c7ea:	74 1d	je	0x10001c809
10001c7ec:	89 c0	movl	%eax, %eax
10001c7ee:	31 c9	xorl	%ecx, %ecx
10001c7f0:	31 db	xorl	%ebx, %ebx
10001c7f2:	0f b6 94 0d d0 f7 ff ff	movzbl	-2096(%rbp,%rcx), %edx
10001c7fa:	48 ff c1	incq	%rcx
10001c7fd:	89 ce	movl	%ecx, %esi
10001c7ff:	0f af f2	imull	%edx, %esi
10001c802:	01 f3	addl	%esi, %ebx
10001c804:	48 39 c8	cmpq	%rcx, %rax
10001c807:	75 e9	jne	0x10001c7f2
10001c809:	48 8d 0d c9 d7 01 00	leaq	120777(%rip), %rcx ## literal pool for: "/tmp/%ud.%ud.pdf"
10001c810:	45 31 f6	xorl	%r14d, %r14d
10001c813:	4c 8d ad d0 f7 ff ff	leaq	-2096(%rbp), %r13
10001c81a:	ba 00 08 00 00	movl	$2048, %edx
10001c81f:	4c 89 ef	movq	%r13, %rdi
10001c822:	31 f6	xorl	%esi, %esi
10001c824:	45 89 f8	movl	%r15d, %r8d
10001c827:	41 89 d9	movl	%ebx, %r9d
10001c82a:	31 c0	xorl	%eax, %eax
10001c82c:	e8 79 2b 01 00	callq	0x10002f3aa ## symbol stub for: ___sprintf_chk
10001c831:	48 8d 35 b2 d7 01 00	leaq	120754(%rip), %rsi ## literal pool for: "w"
10001c838:	4c 89 ef	movq	%r13, %rdi
10001c83b:	e8 8e 2b 01 00	callq	0x10002f3ce ## symbol stub for: _fopen
10001c840:	48 85 c0	testq	%rax, %rax
10001c843:	0f 84 e9 00 00 00	je	0x10001c932
10001c849:	48 89 c3	movq	%rax, %rbx
10001c84c:	45 31 f6	xorl	%r14d, %r14d
10001c84f:	48 8d b5 d0 f7 ff ff	leaq	-2096(%rbp), %rsi
10001c856:	31 ff	xorl	%edi, %edi
10001c858:	ba 00 01 00 08	movl	$134217984, %edx
10001c85d:	e8 da 26 01 00	callq	0x10002ef3c ## symbol stub for: _CFStringCreateWithCString
10001c862:	49 89 c5	movq	%rax, %r13
10001c865:	48 89 df	movq	%rbx, %rdi
10001c868:	e8 5b 2b 01 00	callq	0x10002f3c8 ## symbol stub for: _fclose
10001c86d:	4d 85 ed	testq	%r13, %r13
10001c870:	0f 84 b0 00 00 00	je	0x10001c926
10001c876:	45 31 f6	xorl	%r14d, %r14d
10001c879:	31 ff	xorl	%edi, %edi
10001c87b:	4c 89 ee	movq	%r13, %rsi
10001c87e:	31 d2	xorl	%edx, %edx
10001c880:	31 c9	xorl	%ecx, %ecx
10001c882:	e8 d9 26 01 00	callq	0x10002ef60 ## symbol stub for: _CFURLCreateWithFileSystemPath
10001c887:	49 89 c7	movq	%rax, %r15
10001c88a:	4c 89 ef	movq	%r13, %rdi
10001c88d:	e8 80 26 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001c892:	4d 85 ff	testq	%r15, %r15
10001c895:	0f 84 8b 00 00 00	je	0x10001c926
10001c89b:	48 8d b5 88 f7 ff ff	leaq	-2168(%rbp), %rsi
10001c8a2:	c7 06 00 00 00 00	movl	$0, (%rsi)
10001c8a8:	0f 57 c0	xorps	%xmm0, %xmm0
10001c8ab:	0f 11 46 08	movups	%xmm0, 8(%rsi)
10001c8af:	0f 11 46 18	movups	%xmm0, 24(%rsi)
10001c8b3:	0f 11 46 28	movups	%xmm0, 40(%rsi)
10001c8b7:	48 c7 46 38 00 00 00 00	movq	$0, 56(%rsi)
10001c8bf:	45 31 f6	xorl	%r14d, %r14d
10001c8c2:	31 ff	xorl	%edi, %edi
10001c8c4:	31 d2	xorl	%edx, %edx
10001c8c6:	e8 59 29 01 00	callq	0x10002f224 ## symbol stub for: _CGPSConverterCreate
10001c8cb:	48 85 c0	testq	%rax, %rax
10001c8ce:	74 4e	je	0x10001c91e
10001c8d0:	48 89 c3	movq	%rax, %rbx
10001c8d3:	45 31 f6	xorl	%r14d, %r14d
10001c8d6:	48 89 c7	movq	%rax, %rdi
10001c8d9:	4c 89 e6	movq	%r12, %rsi
10001c8dc:	4c 89 fa	movq	%r15, %rdx
10001c8df:	31 c9	xorl	%ecx, %ecx
10001c8e1:	e8 38 29 01 00	callq	0x10002f21e ## symbol stub for: _CGPSConverterConvertFromURLToURL
10001c8e6:	84 c0	testb	%al, %al
10001c8e8:	74 2c	je	0x10001c916
10001c8ea:	4c 89 ff	movq	%r15, %rdi
10001c8ed:	e8 ea 28 01 00	callq	0x10002f1dc ## symbol stub for: _CGPDFDocumentCreateWithURL
10001c8f2:	48 85 c0	testq	%rax, %rax
10001c8f5:	74 1c	je	0x10001c913
10001c8f7:	48 8b 35 0a 57 03 00	movq	218890(%rip), %rsi ## Objc selector ref: setPDFDocument:
10001c8fe:	48 8b bd c8 f7 ff ff	movq	-2104(%rbp), %rdi
10001c905:	48 89 c2	movq	%rax, %rdx
10001c908:	ff 15 12 03 02 00	callq	*131858(%rip) ## Objc message: -[%rdi setPDFDocument:]
10001c90e:	41 b6 01	movb	$1, %r14b
10001c911:	eb 03	jmp	0x10001c916
10001c913:	45 31 f6	xorl	%r14d, %r14d
10001c916:	48 89 df	movq	%rbx, %rdi
10001c919:	e8 f4 25 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001c91e:	4c 89 ff	movq	%r15, %rdi
10001c921:	e8 ec 25 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001c926:	48 8d bd d0 f7 ff ff	leaq	-2096(%rbp), %rdi
10001c92d:	e8 1c 2c 01 00	callq	0x10002f54e ## symbol stub for: _unlink
10001c932:	48 8b 05 df fe 01 00	movq	130783(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001c939:	48 8b 00	movq	(%rax), %rax
10001c93c:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001c940:	75 16	jne	0x10001c958
10001c942:	41 0f b6 c6	movzbl	%r14b, %eax
10001c946:	48 81 c4 58 08 00 00	addq	$2136, %rsp
10001c94d:	5b	popq	%rbx
10001c94e:	41 5c	popq	%r12
10001c950:	41 5d	popq	%r13
10001c952:	41 5e	popq	%r14
10001c954:	41 5f	popq	%r15
10001c956:	5d	popq	%rbp
10001c957:	c3	retq
10001c958:	e8 53 2a 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001c95d:	55	pushq	%rbp
10001c95e:	48 89 e5	movq	%rsp, %rbp
10001c961:	41 57	pushq	%r15
10001c963:	41 56	pushq	%r14
10001c965:	41 55	pushq	%r13
10001c967:	41 54	pushq	%r12
10001c969:	53	pushq	%rbx
10001c96a:	48 81 ec 88 00 00 00	subq	$136, %rsp
10001c971:	48 85 c9	testq	%rcx, %rcx
10001c974:	0f 84 38 01 00 00	je	0x10001cab2
10001c97a:	4d 89 c5	movq	%r8, %r13
10001c97d:	48 89 cb	movq	%rcx, %rbx
10001c980:	49 89 d4	movq	%rdx, %r12
10001c983:	48 89 cf	movq	%rcx, %rdi
10001c986:	e8 5d 28 01 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
10001c98b:	48 85 c0	testq	%rax, %rax
10001c98e:	0f 84 1e 01 00 00	je	0x10001cab2
10001c994:	48 89 45 b0	movq	%rax, -80(%rbp)
10001c998:	48 8d 05 80 01 00 00	leaq	384(%rip), %rax
10001c99f:	48 89 45 98	movq	%rax, -104(%rbp)
10001c9a3:	48 8d 05 8d 01 00 00	leaq	397(%rip), %rax
10001c9aa:	48 89 45 a0	movq	%rax, -96(%rbp)
10001c9ae:	48 8b 05 bb ff 01 00	movq	131003(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
10001c9b5:	48 8b 38	movq	(%rax), %rdi
10001c9b8:	45 31 f6	xorl	%r14d, %r14d
10001c9bb:	31 f6	xorl	%esi, %esi
10001c9bd:	e8 cc 24 01 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
10001c9c2:	48 85 c0	testq	%rax, %rax
10001c9c5:	0f 84 ea 00 00 00	je	0x10001cab5
10001c9cb:	48 89 5d a8	movq	%rbx, -88(%rbp)
10001c9cf:	48 89 45 b8	movq	%rax, -72(%rbp)
10001c9d3:	48 89 c7	movq	%rax, %rdi
10001c9d6:	e8 3d 25 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10001c9db:	48 8d 75 98	leaq	-104(%rbp), %rsi
10001c9df:	48 89 c7	movq	%rax, %rdi
10001c9e2:	e8 f9 26 01 00	callq	0x10002f0e0 ## symbol stub for: _CGDataConsumerCreate
10001c9e7:	49 89 c6	movq	%rax, %r14
10001c9ea:	48 89 c7	movq	%rax, %rdi
10001c9ed:	31 f6	xorl	%esi, %esi
10001c9ef:	31 d2	xorl	%edx, %edx
10001c9f1:	e8 22 28 01 00	callq	0x10002f218 ## symbol stub for: _CGPSContextCreate
10001c9f6:	48 85 c0	testq	%rax, %rax
10001c9f9:	0f 84 b3 00 00 00	je	0x10001cab2
10001c9ff:	49 89 c7	movq	%rax, %r15
10001ca02:	4c 89 75 d0	movq	%r14, -48(%rbp)
10001ca06:	4d 85 ed	testq	%r13, %r13
10001ca09:	74 13	je	0x10001ca1e
10001ca0b:	48 8b 35 ee 42 03 00	movq	213742(%rip), %rsi ## Objc selector ref: applyToContext:
10001ca12:	4c 89 ef	movq	%r13, %rdi
10001ca15:	4c 89 fa	movq	%r15, %rdx
10001ca18:	ff 15 02 02 02 00	callq	*131586(%rip) ## Objc message: -[%rdi applyToContext:]
10001ca1e:	4c 89 6d c8	movq	%r13, -56(%rbp)
10001ca22:	4c 89 65 c0	movq	%r12, -64(%rbp)
10001ca26:	4c 8b 75 b0	movq	-80(%rbp), %r14
10001ca2a:	4d 85 f6	testq	%r14, %r14
10001ca2d:	0f 8e 98 00 00 00	jle	0x10001cacb
10001ca33:	49 f7 de	negq	%r14
10001ca36:	41 bc 01 00 00 00	movl	$1, %r12d
10001ca3c:	31 db	xorl	%ebx, %ebx
10001ca3e:	48 8b 7d a8	movq	-88(%rbp), %rdi
10001ca42:	4c 89 e6	movq	%r12, %rsi
10001ca45:	e8 a4 27 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
10001ca4a:	48 85 c0	testq	%rax, %rax
10001ca4d:	74 51	je	0x10001caa0
10001ca4f:	49 89 c5	movq	%rax, %r13
10001ca52:	48 8d bd 50 ff ff ff	leaq	-176(%rbp), %rdi
10001ca59:	48 89 c6	movq	%rax, %rsi
10001ca5c:	31 d2	xorl	%edx, %edx
10001ca5e:	e8 a3 27 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
10001ca63:	0f 10 85 50 ff ff ff	movups	-176(%rbp), %xmm0
10001ca6a:	0f 10 8d 60 ff ff ff	movups	-160(%rbp), %xmm1
10001ca71:	0f 29 4d 80	movaps	%xmm1, -128(%rbp)
10001ca75:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10001ca7c:	4c 89 ff	movq	%r15, %rdi
10001ca7f:	48 8d b5 70 ff ff ff	leaq	-144(%rbp), %rsi
10001ca86:	e8 dd 25 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10001ca8b:	4c 89 ff	movq	%r15, %rdi
10001ca8e:	4c 89 ee	movq	%r13, %rsi
10001ca91:	e8 f0 25 01 00	callq	0x10002f086 ## symbol stub for: _CGContextDrawPDFPage
10001ca96:	4c 89 ff	movq	%r15, %rdi
10001ca99:	e8 f4 25 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10001ca9e:	b3 01	movb	$1, %bl
10001caa0:	4b 8d 04 26	leaq	(%r14,%r12), %rax
10001caa4:	48 ff c0	incq	%rax
10001caa7:	49 ff c4	incq	%r12
10001caaa:	48 83 f8 01	cmpq	$1, %rax
10001caae:	75 8e	jne	0x10001ca3e
10001cab0:	eb 1b	jmp	0x10001cacd
10001cab2:	45 31 f6	xorl	%r14d, %r14d
10001cab5:	41 0f be c6	movsbl	%r14b, %eax
10001cab9:	48 81 c4 88 00 00 00	addq	$136, %rsp
10001cac0:	5b	popq	%rbx
10001cac1:	41 5c	popq	%r12
10001cac3:	41 5d	popq	%r13
10001cac5:	41 5e	popq	%r14
10001cac7:	41 5f	popq	%r15
10001cac9:	5d	popq	%rbp
10001caca:	c3	retq
10001cacb:	31 db	xorl	%ebx, %ebx
10001cacd:	48 8b 7d c8	movq	-56(%rbp), %rdi
10001cad1:	48 85 ff	testq	%rdi, %rdi
10001cad4:	74 10	je	0x10001cae6
10001cad6:	48 8b 35 03 50 03 00	movq	217091(%rip), %rsi ## Objc selector ref: removeFromContext:
10001cadd:	4c 89 fa	movq	%r15, %rdx
10001cae0:	ff 15 3a 01 02 00	callq	*131386(%rip) ## Objc message: -[%rdi removeFromContext:]
10001cae6:	4c 89 ff	movq	%r15, %rdi
10001cae9:	e8 c8 25 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
10001caee:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001caf2:	e8 ef 25 01 00	callq	0x10002f0e6 ## symbol stub for: _CGDataConsumerRelease
10001caf7:	49 89 de	movq	%rbx, %r14
10001cafa:	41 80 fe 01	cmpb	$1, %r14b
10001cafe:	48 8b 55 c0	movq	-64(%rbp), %rdx
10001cb02:	75 b1	jne	0x10001cab5
10001cb04:	48 8b 35 4d 5a 03 00	movq	219725(%rip), %rsi ## Objc selector ref: writeToURL:atomically:
10001cb0b:	48 8b 7d b8	movq	-72(%rbp), %rdi
10001cb0f:	b9 01 00 00 00	movl	$1, %ecx
10001cb14:	ff 15 06 01 02 00	callq	*131334(%rip) ## Objc message: -[%rdi writeToURL:atomically:]
10001cb1a:	41 89 c6	movl	%eax, %r14d
10001cb1d:	eb 96	jmp	0x10001cab5
10001cb1f:	55	pushq	%rbp
10001cb20:	48 89 e5	movq	%rsp, %rbp
10001cb23:	53	pushq	%rbx
10001cb24:	50	pushq	%rax
10001cb25:	48 89 d3	movq	%rdx, %rbx
10001cb28:	e8 5b 23 01 00	callq	0x10002ee88 ## symbol stub for: _CFDataAppendBytes
10001cb2d:	48 89 d8	movq	%rbx, %rax
10001cb30:	48 83 c4 08	addq	$8, %rsp
10001cb34:	5b	popq	%rbx
10001cb35:	5d	popq	%rbp
10001cb36:	c3	retq
10001cb37:	55	pushq	%rbp
10001cb38:	48 89 e5	movq	%rsp, %rbp
10001cb3b:	5d	popq	%rbp
10001cb3c:	e9 d1 23 01 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
10001cb41:	55	pushq	%rbp
10001cb42:	48 89 e5	movq	%rsp, %rbp
10001cb45:	48 8b 05 c4 64 03 00	movq	222404(%rip), %rax
10001cb4c:	48 8b 0c 07	movq	(%rdi,%rax), %rcx
10001cb50:	48 8b 35 f9 59 03 00	movq	219641(%rip), %rsi ## Objc selector ref: writePostScriptToURL:doc:filter:
10001cb57:	45 31 c0	xorl	%r8d, %r8d
10001cb5a:	5d	popq	%rbp
10001cb5b:	ff 25 bf 00 02 00	jmpq	*131263(%rip) ## Objc message: -[%rdi writePostScriptToURL:doc:filter:]
10001cb61:	55	pushq	%rbp
10001cb62:	48 89 e5	movq	%rsp, %rbp
10001cb65:	b8 01 00 00 00	movl	$1, %eax
10001cb6a:	5d	popq	%rbp
10001cb6b:	c3	retq
10001cb6c:	55	pushq	%rbp
10001cb6d:	48 89 e5	movq	%rsp, %rbp
10001cb70:	48 8b 05 99 64 03 00	movq	222361(%rip), %rax
10001cb77:	48 8b 04 07	movq	(%rdi,%rax), %rax
10001cb7b:	5d	popq	%rbp
10001cb7c:	c3	retq
10001cb7d:	55	pushq	%rbp
10001cb7e:	48 89 e5	movq	%rsp, %rbp
10001cb81:	48 8b 05 90 64 03 00	movq	222352(%rip), %rax
10001cb88:	48 8b 04 07	movq	(%rdi,%rax), %rax
10001cb8c:	5d	popq	%rbp
10001cb8d:	c3	retq
10001cb8e:	55	pushq	%rbp
10001cb8f:	48 89 e5	movq	%rsp, %rbp
10001cb92:	48 8b 05 7f 64 03 00	movq	222335(%rip), %rax
10001cb99:	48 89 14 07	movq	%rdx, (%rdi,%rax)
10001cb9d:	5d	popq	%rbp
10001cb9e:	c3	retq
10001cb9f:	55	pushq	%rbp
10001cba0:	48 89 e5	movq	%rsp, %rbp
10001cba3:	48 8b 05 76 64 03 00	movq	222326(%rip), %rax
10001cbaa:	48 8b 04 07	movq	(%rdi,%rax), %rax
10001cbae:	5d	popq	%rbp
10001cbaf:	c3	retq
10001cbb0:	55	pushq	%rbp
10001cbb1:	48 89 e5	movq	%rsp, %rbp
10001cbb4:	41 57	pushq	%r15
10001cbb6:	41 56	pushq	%r14
10001cbb8:	41 55	pushq	%r13
10001cbba:	41 54	pushq	%r12
10001cbbc:	53	pushq	%rbx
10001cbbd:	50	pushq	%rax
10001cbbe:	49 89 d7	movq	%rdx, %r15
10001cbc1:	48 89 fb	movq	%rdi, %rbx
10001cbc4:	48 89 d7	movq	%rdx, %rdi
10001cbc7:	e8 34 26 01 00	callq	0x10002f200 ## symbol stub for: _CGPDFDocumentRetain
10001cbcc:	4c 8b 25 3d 64 03 00	movq	222269(%rip), %r12
10001cbd3:	4e 8b 34 23	movq	(%rbx,%r12), %r14
10001cbd7:	4d 85 f6	testq	%r14, %r14
10001cbda:	74 08	je	0x10001cbe4
10001cbdc:	4c 89 f7	movq	%r14, %rdi
10001cbdf:	e8 16 26 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
10001cbe4:	4e 89 3c 23	movq	%r15, (%rbx,%r12)
10001cbe8:	4c 8b 2d 31 64 03 00	movq	222257(%rip), %r13
10001cbef:	31 c0	xorl	%eax, %eax
10001cbf1:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
10001cbf5:	4c 8b 25 1c 64 03 00	movq	222236(%rip), %r12
10001cbfc:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10001cc00:	4d 85 ff	testq	%r15, %r15
10001cc03:	74 19	je	0x10001cc1e
10001cc05:	4c 89 ff	movq	%r15, %rdi
10001cc08:	e8 db 25 01 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
10001cc0d:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
10001cc11:	48 85 c0	testq	%rax, %rax
10001cc14:	7e 08	jle	0x10001cc1e
10001cc16:	4a c7 04 23 01 00 00 00	movq	$1, (%rbx,%r12)
10001cc1e:	4d 85 f6	testq	%r14, %r14
10001cc21:	74 1e	je	0x10001cc41
10001cc23:	48 8b 35 2e 58 03 00	movq	219182(%rip), %rsi ## Objc selector ref: updatePreview
10001cc2a:	48 89 df	movq	%rbx, %rdi
10001cc2d:	48 83 c4 08	addq	$8, %rsp
10001cc31:	5b	popq	%rbx
10001cc32:	41 5c	popq	%r12
10001cc34:	41 5d	popq	%r13
10001cc36:	41 5e	popq	%r14
10001cc38:	41 5f	popq	%r15
10001cc3a:	5d	popq	%rbp
10001cc3b:	ff 25 df ff 01 00	jmpq	*131039(%rip) ## Objc message: -[%rdi updatePreview]
10001cc41:	48 83 c4 08	addq	$8, %rsp
10001cc45:	5b	popq	%rbx
10001cc46:	41 5c	popq	%r12
10001cc48:	41 5d	popq	%r13
10001cc4a:	41 5e	popq	%r14
10001cc4c:	41 5f	popq	%r15
10001cc4e:	5d	popq	%rbp
10001cc4f:	c3	retq
10001cc50:	55	pushq	%rbp
10001cc51:	48 89 e5	movq	%rsp, %rbp
10001cc54:	41 57	pushq	%r15
10001cc56:	41 56	pushq	%r14
10001cc58:	41 54	pushq	%r12
10001cc5a:	53	pushq	%rbx
10001cc5b:	48 89 fb	movq	%rdi, %rbx
10001cc5e:	48 8b 35 eb 4e 03 00	movq	216811(%rip), %rsi ## Objc selector ref: retainCurrentFilter
10001cc65:	4c 8b 25 b4 ff 01 00	movq	130996(%rip), %r12 ## Objc message: -[%rdi retainCurrentFilter]
10001cc6c:	41 ff d4	callq	*%r12
10001cc6f:	49 89 c6	movq	%rax, %r14
10001cc72:	48 8b 05 97 63 03 00	movq	222103(%rip), %rax
10001cc79:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10001cc7d:	48 8b 35 74 40 03 00	movq	213108(%rip), %rsi ## Objc selector ref: applyFilterToPDFDoc:filter:
10001cc84:	48 89 df	movq	%rbx, %rdi
10001cc87:	4c 89 f1	movq	%r14, %rcx
10001cc8a:	41 ff d4	callq	*%r12
10001cc8d:	49 89 c7	movq	%rax, %r15
10001cc90:	48 8b 35 71 53 03 00	movq	217969(%rip), %rsi ## Objc selector ref: setPDFDocument:
10001cc97:	48 89 df	movq	%rbx, %rdi
10001cc9a:	48 89 c2	movq	%rax, %rdx
10001cc9d:	41 ff d4	callq	*%r12
10001cca0:	4c 89 ff	movq	%r15, %rdi
10001cca3:	e8 52 25 01 00	callq	0x10002f1fa ## symbol stub for: _CGPDFDocumentRelease
10001cca8:	4c 89 f7	movq	%r14, %rdi
10001ccab:	5b	popq	%rbx
10001ccac:	41 5c	popq	%r12
10001ccae:	41 5e	popq	%r14
10001ccb0:	41 5f	popq	%r15
10001ccb2:	5d	popq	%rbp
10001ccb3:	ff 25 9f ff 01 00	jmpq	*130975(%rip) ## literal pool symbol address: _objc_release
10001ccb9:	55	pushq	%rbp
10001ccba:	48 89 e5	movq	%rsp, %rbp
10001ccbd:	b8 01 00 00 00	movl	$1, %eax
10001ccc2:	5d	popq	%rbp
10001ccc3:	c3	retq
10001ccc4:	55	pushq	%rbp
10001ccc5:	48 89 e5	movq	%rsp, %rbp
10001ccc8:	41 57	pushq	%r15
10001ccca:	41 56	pushq	%r14
10001cccc:	41 55	pushq	%r13
10001ccce:	41 54	pushq	%r12
10001ccd0:	53	pushq	%rbx
10001ccd1:	48 83 ec 68	subq	$104, %rsp
10001ccd5:	48 85 c9	testq	%rcx, %rcx
10001ccd8:	0f 84 9b 01 00 00	je	0x10001ce79
10001ccde:	49 89 cc	movq	%rcx, %r12
10001cce1:	48 8b 05 28 63 03 00	movq	221992(%rip), %rax
10001cce8:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001ccec:	48 89 d6	movq	%rdx, %rsi
10001ccef:	e8 fa 24 01 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
10001ccf4:	48 85 c0	testq	%rax, %rax
10001ccf7:	0f 84 7c 01 00 00	je	0x10001ce79
10001ccfd:	48 89 c3	movq	%rax, %rbx
10001cd00:	4c 8d 75 90	leaq	-112(%rbp), %r14
10001cd04:	4c 89 f7	movq	%r14, %rdi
10001cd07:	48 89 c6	movq	%rax, %rsi
10001cd0a:	ba 01 00 00 00	movl	$1, %edx
10001cd0f:	e8 f2 24 01 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
10001cd14:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
10001cd1a:	f2 48 0f 2c c0	cvttsd2si	%xmm0, %rax
10001cd1f:	f2 0f 10 0d 09 c4 01 00	movsd	115721(%rip), %xmm1
10001cd27:	f2 0f 5c c1	subsd	%xmm1, %xmm0
10001cd2b:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
10001cd30:	f2 41 0f 10 46 18	movsd	24(%r14), %xmm0
10001cd36:	49 89 c7	movq	%rax, %r15
10001cd39:	49 c1 ff 3f	sarq	$63, %r15
10001cd3d:	f2 48 0f 2c d0	cvttsd2si	%xmm0, %rdx
10001cd42:	49 21 cf	andq	%rcx, %r15
10001cd45:	f2 0f 5c c1	subsd	%xmm1, %xmm0
10001cd49:	f2 48 0f 2c c8	cvttsd2si	%xmm0, %rcx
10001cd4e:	49 09 c7	orq	%rax, %r15
10001cd51:	48 89 5d d0	movq	%rbx, -48(%rbp)
10001cd55:	49 89 d6	movq	%rdx, %r14
10001cd58:	49 c1 fe 3f	sarq	$63, %r14
10001cd5c:	49 21 ce	andq	%rcx, %r14
10001cd5f:	49 09 d6	orq	%rdx, %r14
10001cd62:	4c 89 e7	movq	%r12, %rdi
10001cd65:	e8 b0 22 01 00	callq	0x10002f01a ## symbol stub for: _CGColorSpaceGetNumberOfComponents
10001cd6a:	48 83 f8 03	cmpq	$3, %rax
10001cd6e:	bb 04 00 00 00	movl	$4, %ebx
10001cd73:	48 0f 45 d8	cmovneq	%rax, %rbx
10001cd77:	49 0f af df	imulq	%r15, %rbx
10001cd7b:	48 89 de	movq	%rbx, %rsi
10001cd7e:	49 0f af f6	imulq	%r14, %rsi
10001cd82:	bf 01 00 00 00	movl	$1, %edi
10001cd87:	e8 30 26 01 00	callq	0x10002f3bc ## symbol stub for: _calloc
10001cd8c:	c7 04 24 05 00 00 00	movl	$5, (%rsp)
10001cd93:	b9 08 00 00 00	movl	$8, %ecx
10001cd98:	48 89 45 c8	movq	%rax, -56(%rbp)
10001cd9c:	48 89 c7	movq	%rax, %rdi
10001cd9f:	4c 89 fe	movq	%r15, %rsi
10001cda2:	4c 89 f2	movq	%r14, %rdx
10001cda5:	49 89 d8	movq	%rbx, %r8
10001cda8:	4d 89 e1	movq	%r12, %r9
10001cdab:	e8 e0 21 01 00	callq	0x10002ef90 ## symbol stub for: _CGBitmapContextCreate
10001cdb0:	48 85 c0	testq	%rax, %rax
10001cdb3:	0f 84 c0 00 00 00	je	0x10001ce79
10001cdb9:	49 89 c5	movq	%rax, %r13
10001cdbc:	4d 39 fe	cmpq	%r15, %r14
10001cdbf:	4c 89 fb	movq	%r15, %rbx
10001cdc2:	49 0f 47 de	cmovaq	%r14, %rbx
10001cdc6:	4d 0f 42 fe	cmovbq	%r14, %r15
10001cdca:	48 89 c7	movq	%rax, %rdi
10001cdcd:	e8 f0 22 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10001cdd2:	66 49 0f 6e c7	movq	%r15, %xmm0
10001cdd7:	66 48 0f 6e d3	movq	%rbx, %xmm2
10001cddc:	66 0f 6c d0	punpcklqdq	%xmm0, %xmm2
10001cde0:	66 0f ef c0	pxor	%xmm0, %xmm0
10001cde4:	66 0f 6f ca	movdqa	%xmm2, %xmm1
10001cde8:	66 0f 3a 0e c8 cc	pblendw	$204, %xmm0, %xmm1
10001cdee:	66 0f eb 0d 4a c3 01 00	por	115530(%rip), %xmm1
10001cdf6:	66 0f 73 d2 20	psrlq	$32, %xmm2
10001cdfb:	66 0f eb 15 4d c3 01 00	por	115533(%rip), %xmm2
10001ce03:	66 0f 5c 15 55 c3 01 00	subpd	115541(%rip), %xmm2
10001ce0b:	66 0f 58 d1	addpd	%xmm1, %xmm2
10001ce0f:	66 0f 29 55 b0	movapd	%xmm2, -80(%rbp)
10001ce14:	66 0f 7f 45 90	movdqa	%xmm0, -112(%rbp)
10001ce19:	4c 8b 75 d0	movq	-48(%rbp), %r14
10001ce1d:	4c 89 f7	movq	%r14, %rdi
10001ce20:	e8 e7 23 01 00	callq	0x10002f20c ## symbol stub for: _CGPDFPageGetRotationAngle
10001ce25:	0f 28 4d b0	movaps	-80(%rbp), %xmm1
10001ce29:	48 98	cltq
10001ce2b:	48 69 c8 b7 60 0b b6	imulq	$-1240768329, %rax, %rcx
10001ce32:	48 c1 e9 20	shrq	$32, %rcx
10001ce36:	01 c1	addl	%eax, %ecx
10001ce38:	89 ca	movl	%ecx, %edx
10001ce3a:	c1 ea 1f	shrl	$31, %edx
10001ce3d:	c1 f9 08	sarl	$8, %ecx
10001ce40:	01 d1	addl	%edx, %ecx
10001ce42:	69 c9 68 01 00 00	imull	$360, %ecx, %ecx
10001ce48:	29 c8	subl	%ecx, %eax
10001ce4a:	41 bc 68 01 00 00	movl	$360, %r12d
10001ce50:	41 01 c4	addl	%eax, %r12d
10001ce53:	85 c0	testl	%eax, %eax
10001ce55:	44 0f 49 e0	cmovnsl	%eax, %r12d
10001ce59:	0f 28 c1	movaps	%xmm1, %xmm0
10001ce5c:	0f c6 c1 4e	shufps	$78, %xmm1, %xmm0
10001ce60:	41 81 fc b3 00 00 00	cmpl	$179, %r12d
10001ce67:	7f 17	jg	0x10001ce80
10001ce69:	45 85 e4	testl	%r12d, %r12d
10001ce6c:	74 27	je	0x10001ce95
10001ce6e:	41 83 fc 5a	cmpl	$90, %r12d
10001ce72:	74 1e	je	0x10001ce92
10001ce74:	45 31 e4	xorl	%r12d, %r12d
10001ce77:	eb 1c	jmp	0x10001ce95
10001ce79:	31 db	xorl	%ebx, %ebx
10001ce7b:	e9 c4 00 00 00	jmp	0x10001cf44
10001ce80:	41 81 fc b4 00 00 00	cmpl	$180, %r12d
10001ce87:	74 0c	je	0x10001ce95
10001ce89:	41 81 fc 0e 01 00 00	cmpl	$270, %r12d
10001ce90:	75 e2	jne	0x10001ce74
10001ce92:	0f 28 c1	movaps	%xmm1, %xmm0
10001ce95:	48 8d 5d 90	leaq	-112(%rbp), %rbx
10001ce99:	0f 29 43 10	movaps	%xmm0, 16(%rbx)
10001ce9d:	4c 89 ef	movq	%r13, %rdi
10001cea0:	e8 1d 22 01 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10001cea5:	f2 0f 10 05 5b b1 01 00	movsd	110939(%rip), %xmm0
10001cead:	4c 89 ef	movq	%r13, %rdi
10001ceb0:	0f 28 c8	movaps	%xmm0, %xmm1
10001ceb3:	e8 1c 22 01 00	callq	0x10002f0d4 ## symbol stub for: _CGContextSetGrayFillColor
10001ceb8:	0f 28 03	movaps	(%rbx), %xmm0
10001cebb:	0f 28 4b 10	movaps	16(%rbx), %xmm1
10001cebf:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001cec4:	0f 11 04 24	movups	%xmm0, (%rsp)
10001cec8:	4c 89 ef	movq	%r13, %rdi
10001cecb:	e8 c8 21 01 00	callq	0x10002f098 ## symbol stub for: _CGContextFillRect
10001ced0:	4c 89 ef	movq	%r13, %rdi
10001ced3:	e8 e4 21 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10001ced8:	4c 89 ef	movq	%r13, %rdi
10001cedb:	48 89 de	movq	%rbx, %rsi
10001cede:	e8 85 21 01 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10001cee3:	66 0f 28 03	movapd	(%rbx), %xmm0
10001cee7:	66 0f 28 4b 10	movapd	16(%rbx), %xmm1
10001ceec:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10001cef2:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10001cef7:	4c 89 ef	movq	%r13, %rdi
10001cefa:	4c 89 f6	movq	%r14, %rsi
10001cefd:	ba 01 00 00 00	movl	$1, %edx
10001cf02:	44 89 e1	movl	%r12d, %ecx
10001cf05:	41 b8 01 00 00 00	movl	$1, %r8d
10001cf0b:	e8 7c 21 01 00	callq	0x10002f08c ## symbol stub for: _CGContextDrawPDFPageInRect2
10001cf10:	4c 89 ef	movq	%r13, %rdi
10001cf13:	e8 7a 21 01 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10001cf18:	4c 89 ef	movq	%r13, %rdi
10001cf1b:	e8 7e 21 01 00	callq	0x10002f09e ## symbol stub for: _CGContextFlush
10001cf20:	4c 89 ef	movq	%r13, %rdi
10001cf23:	e8 94 21 01 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10001cf28:	4c 89 ef	movq	%r13, %rdi
10001cf2b:	e8 66 20 01 00	callq	0x10002ef96 ## symbol stub for: _CGBitmapContextCreateImage
10001cf30:	48 89 c3	movq	%rax, %rbx
10001cf33:	4c 89 ef	movq	%r13, %rdi
10001cf36:	e8 7b 21 01 00	callq	0x10002f0b6 ## symbol stub for: _CGContextRelease
10001cf3b:	48 8b 7d c8	movq	-56(%rbp), %rdi
10001cf3f:	e8 90 24 01 00	callq	0x10002f3d4 ## symbol stub for: _free
10001cf44:	48 89 d8	movq	%rbx, %rax
10001cf47:	48 83 c4 68	addq	$104, %rsp
10001cf4b:	5b	popq	%rbx
10001cf4c:	41 5c	popq	%r12
10001cf4e:	41 5d	popq	%r13
10001cf50:	41 5e	popq	%r14
10001cf52:	41 5f	popq	%r15
10001cf54:	5d	popq	%rbp
10001cf55:	c3	retq
10001cf56:	55	pushq	%rbp
10001cf57:	48 89 e5	movq	%rsp, %rbp
10001cf5a:	41 57	pushq	%r15
10001cf5c:	41 56	pushq	%r14
10001cf5e:	41 55	pushq	%r13
10001cf60:	41 54	pushq	%r12
10001cf62:	53	pushq	%rbx
10001cf63:	50	pushq	%rax
10001cf64:	48 89 cb	movq	%rcx, %rbx
10001cf67:	49 89 d6	movq	%rdx, %r14
10001cf6a:	49 89 ff	movq	%rdi, %r15
10001cf6d:	48 8b 05 fc f9 01 00	movq	129532(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
10001cf74:	48 8b 38	movq	(%rax), %rdi
10001cf77:	48 8b 15 0a fa 01 00	movq	129546(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
10001cf7e:	45 31 ed	xorl	%r13d, %r13d
10001cf81:	31 f6	xorl	%esi, %esi
10001cf83:	e8 be 1e 01 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
10001cf88:	48 85 c0	testq	%rax, %rax
10001cf8b:	74 70	je	0x10001cffd
10001cf8d:	48 89 45 d0	movq	%rax, -48(%rbp)
10001cf91:	48 85 db	testq	%rbx, %rbx
10001cf94:	7e 4b	jle	0x10001cfe1
10001cf96:	48 f7 db	negq	%rbx
10001cf99:	41 bd 01 00 00 00	movl	$1, %r13d
10001cf9f:	4c 89 ff	movq	%r15, %rdi
10001cfa2:	48 8b 35 e7 3f 03 00	movq	212967(%rip), %rsi ## Objc selector ref: convertPageToImage:colorSpace:
10001cfa9:	4c 89 ea	movq	%r13, %rdx
10001cfac:	4c 89 f1	movq	%r14, %rcx
10001cfaf:	ff 15 6b fc 01 00	callq	*130155(%rip) ## Objc message: -[%rdi convertPageToImage:colorSpace:]
10001cfb5:	48 85 c0	testq	%rax, %rax
10001cfb8:	74 17	je	0x10001cfd1
10001cfba:	49 89 c4	movq	%rax, %r12
10001cfbd:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001cfc1:	48 89 c6	movq	%rax, %rsi
10001cfc4:	e8 6b 1e 01 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
10001cfc9:	4c 89 e7	movq	%r12, %rdi
10001cfcc:	e8 b7 21 01 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10001cfd1:	4a 8d 04 2b	leaq	(%rbx,%r13), %rax
10001cfd5:	48 ff c0	incq	%rax
10001cfd8:	49 ff c5	incq	%r13
10001cfdb:	48 83 f8 01	cmpq	$1, %rax
10001cfdf:	75 be	jne	0x10001cf9f
10001cfe1:	4c 8b 6d d0	movq	-48(%rbp), %r13
10001cfe5:	4c 89 ef	movq	%r13, %rdi
10001cfe8:	e8 65 1e 01 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10001cfed:	48 85 c0	testq	%rax, %rax
10001cff0:	75 0b	jne	0x10001cffd
10001cff2:	4c 89 ef	movq	%r13, %rdi
10001cff5:	e8 18 1f 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001cffa:	45 31 ed	xorl	%r13d, %r13d
10001cffd:	4c 89 e8	movq	%r13, %rax
10001d000:	48 83 c4 08	addq	$8, %rsp
10001d004:	5b	popq	%rbx
10001d005:	41 5c	popq	%r12
10001d007:	41 5d	popq	%r13
10001d009:	41 5e	popq	%r14
10001d00b:	41 5f	popq	%r15
10001d00d:	5d	popq	%rbp
10001d00e:	c3	retq
10001d00f:	55	pushq	%rbp
10001d010:	48 89 e5	movq	%rsp, %rbp
10001d013:	83 fa 03	cmpl	$3, %edx
10001d016:	74 17	je	0x10001d02f
10001d018:	83 fa 02	cmpl	$2, %edx
10001d01b:	74 26	je	0x10001d043
10001d01d:	83 fa 01	cmpl	$1, %edx
10001d020:	75 36	jne	0x10001d058
10001d022:	48 8b 05 e7 5f 03 00	movq	221159(%rip), %rax
10001d029:	48 8b 04 07	movq	(%rdi,%rax), %rax
10001d02d:	eb 2b	jmp	0x10001d05a
10001d02f:	48 8b 05 ea 5f 03 00	movq	221162(%rip), %rax
10001d036:	48 8b 0c 07	movq	(%rdi,%rax), %rcx
10001d03a:	48 8b 35 47 3f 03 00	movq	212807(%rip), %rsi ## Objc selector ref: convertPDFDocumentToImageArray:count:
10001d041:	eb 0c	jmp	0x10001d04f
10001d043:	48 8b 35 3e 3f 03 00	movq	212798(%rip), %rsi ## Objc selector ref: convertPDFDocumentToImageArray:count:
10001d04a:	b9 01 00 00 00	movl	$1, %ecx
10001d04f:	31 d2	xorl	%edx, %edx
10001d051:	5d	popq	%rbp
10001d052:	ff 25 c8 fb 01 00	jmpq	*129992(%rip) ## Objc message: -[%rdi convertPDFDocumentToImageArray:count:]
10001d058:	31 c0	xorl	%eax, %eax
10001d05a:	5d	popq	%rbp
10001d05b:	c3	retq
10001d05c:	55	pushq	%rbp
10001d05d:	48 89 e5	movq	%rsp, %rbp
10001d060:	41 57	pushq	%r15
10001d062:	41 56	pushq	%r14
10001d064:	53	pushq	%rbx
10001d065:	50	pushq	%rax
10001d066:	49 89 ce	movq	%rcx, %r14
10001d069:	49 89 d7	movq	%rdx, %r15
10001d06c:	48 89 fb	movq	%rdi, %rbx
10001d06f:	4d 85 c0	testq	%r8, %r8
10001d072:	74 14	je	0x10001d088
10001d074:	48 8d 35 a5 09 02 00	leaq	133541(%rip), %rsi ## Objc cfstring ref: @"QuartzFilter"
10001d07b:	4c 89 c7	movq	%r8, %rdi
10001d07e:	e8 5f 1e 01 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10001d083:	49 89 c0	movq	%rax, %r8
10001d086:	eb 03	jmp	0x10001d08b
10001d088:	45 31 c0	xorl	%r8d, %r8d
10001d08b:	48 8b 35 be 54 03 00	movq	218302(%rip), %rsi ## Objc selector ref: writePostScriptToURL:doc:filter:
10001d092:	48 89 df	movq	%rbx, %rdi
10001d095:	4c 89 fa	movq	%r15, %rdx
10001d098:	4c 89 f1	movq	%r14, %rcx
10001d09b:	48 83 c4 08	addq	$8, %rsp
10001d09f:	5b	popq	%rbx
10001d0a0:	41 5e	popq	%r14
10001d0a2:	41 5f	popq	%r15
10001d0a4:	5d	popq	%rbp
10001d0a5:	ff 25 75 fb 01 00	jmpq	*129909(%rip) ## Objc message: -[%rdi writePostScriptToURL:doc:filter:]
10001d0ab:	55	pushq	%rbp
10001d0ac:	48 89 e5	movq	%rsp, %rbp
10001d0af:	48 83 ec 10	subq	$16, %rsp
10001d0b3:	48 8d 45 f0	leaq	-16(%rbp), %rax
10001d0b7:	48 89 38	movq	%rdi, (%rax)
10001d0ba:	48 8b 0d 57 57 03 00	movq	218967(%rip), %rcx ## Objc class ref: FilterPostScriptDoc
10001d0c1:	48 89 48 08	movq	%rcx, 8(%rax)
10001d0c5:	48 8b 35 24 54 03 00	movq	218148(%rip), %rsi ## Objc selector ref: wholeDocumentAndSettings
10001d0cc:	48 89 c7	movq	%rax, %rdi
10001d0cf:	e8 08 24 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] wholeDocumentAndSettings]
10001d0d4:	48 83 c4 10	addq	$16, %rsp
10001d0d8:	5d	popq	%rbp
10001d0d9:	c3	retq
10001d0da:	55	pushq	%rbp
10001d0db:	48 89 e5	movq	%rsp, %rbp
10001d0de:	48 8b 35 23 4f 03 00	movq	216867(%rip), %rsi ## Objc selector ref: setPDFDocument:
10001d0e5:	5d	popq	%rbp
10001d0e6:	ff 25 34 fb 01 00	jmpq	*129844(%rip) ## Objc message: -[%rdi setPDFDocument:]
10001d0ec:	55	pushq	%rbp
10001d0ed:	48 89 e5	movq	%rsp, %rbp
10001d0f0:	48 83 ec 10	subq	$16, %rsp
10001d0f4:	48 8d 45 f0	leaq	-16(%rbp), %rax
10001d0f8:	48 89 38	movq	%rdi, (%rax)
10001d0fb:	48 8b 0d 16 57 03 00	movq	218902(%rip), %rcx ## Objc class ref: FilterPostScriptDoc
10001d102:	48 89 48 08	movq	%rcx, 8(%rax)
10001d106:	48 8b 35 6b 50 03 00	movq	217195(%rip), %rsi ## Objc selector ref: setWholeDocumentAndSettings:
10001d10d:	48 89 c7	movq	%rax, %rdi
10001d110:	e8 c7 23 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setWholeDocumentAndSettings:]
10001d115:	48 83 c4 10	addq	$16, %rsp
10001d119:	5d	popq	%rbp
10001d11a:	c3	retq
10001d11b:	55	pushq	%rbp
10001d11c:	48 89 e5	movq	%rsp, %rbp
10001d11f:	53	pushq	%rbx
10001d120:	48 83 ec 38	subq	$56, %rsp
10001d124:	48 89 fb	movq	%rdi, %rbx
10001d127:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001d12b:	48 89 1f	movq	%rbx, (%rdi)
10001d12e:	48 8b 05 eb 56 03 00	movq	218859(%rip), %rax ## Objc class ref: FilterToolbarPageFieldView
10001d135:	48 89 47 08	movq	%rax, 8(%rdi)
10001d139:	48 8b 35 10 43 03 00	movq	213776(%rip), %rsi ## Objc selector ref: initWithFrame:
10001d140:	0f 28 45 10	movaps	16(%rbp), %xmm0
10001d144:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10001d148:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001d14d:	0f 11 04 24	movups	%xmm0, (%rsp)
10001d151:	e8 86 23 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10001d156:	48 89 d8	movq	%rbx, %rax
10001d159:	48 83 c4 38	addq	$56, %rsp
10001d15d:	5b	popq	%rbx
10001d15e:	5d	popq	%rbp
10001d15f:	c3	retq
10001d160:	55	pushq	%rbp
10001d161:	48 89 e5	movq	%rsp, %rbp
10001d164:	5d	popq	%rbp
10001d165:	c3	retq
10001d166:	55	pushq	%rbp
10001d167:	48 89 e5	movq	%rsp, %rbp
10001d16a:	b8 64 61 65 68	movl	$1751474532, %eax
10001d16f:	31 c2	xorl	%eax, %edx
10001d171:	31 c1	xorl	%eax, %ecx
10001d173:	31 c0	xorl	%eax, %eax
10001d175:	09 d1	orl	%edx, %ecx
10001d177:	0f 94 c0	sete	%al
10001d17a:	5d	popq	%rbp
10001d17b:	c3	retq
10001d17c:	55	pushq	%rbp
10001d17d:	48 89 e5	movq	%rsp, %rbp
10001d180:	41 57	pushq	%r15
10001d182:	41 56	pushq	%r14
10001d184:	41 55	pushq	%r13
10001d186:	41 54	pushq	%r12
10001d188:	53	pushq	%rbx
10001d189:	48 81 ec a8 00 00 00	subq	$168, %rsp
10001d190:	49 89 fd	movq	%rdi, %r13
10001d193:	48 89 d7	movq	%rdx, %rdi
10001d196:	e8 d7 20 01 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
10001d19b:	48 85 c0	testq	%rax, %rax
10001d19e:	0f 84 ca 03 00 00	je	0x10001d56e
10001d1a4:	48 89 c3	movq	%rax, %rbx
10001d1a7:	48 89 c7	movq	%rax, %rdi
10001d1aa:	e8 f1 1c 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001d1af:	44 8b 20	movl	(%rax), %r12d
10001d1b2:	8b 48 04	movl	4(%rax), %ecx
10001d1b5:	89 4d d4	movl	%ecx, -44(%rbp)
10001d1b8:	44 8b 70 08	movl	8(%rax), %r14d
10001d1bc:	8b 48 0c	movl	12(%rax), %ecx
10001d1bf:	89 4d a0	movl	%ecx, -96(%rbp)
10001d1c2:	8b 48 10	movl	16(%rax), %ecx
10001d1c5:	89 4d 9c	movl	%ecx, -100(%rbp)
10001d1c8:	8b 48 14	movl	20(%rax), %ecx
10001d1cb:	89 4d 98	movl	%ecx, -104(%rbp)
10001d1ce:	0f b7 48 18	movzwl	24(%rax), %ecx
10001d1d2:	48 89 8d 38 ff ff ff	movq	%rcx, -200(%rbp)
10001d1d9:	0f b7 48 1a	movzwl	26(%rax), %ecx
10001d1dd:	48 89 8d 40 ff ff ff	movq	%rcx, -192(%rbp)
10001d1e4:	0f b7 48 1c	movzwl	28(%rax), %ecx
10001d1e8:	48 89 8d 48 ff ff ff	movq	%rcx, -184(%rbp)
10001d1ef:	0f b7 48 1e	movzwl	30(%rax), %ecx
10001d1f3:	48 89 8d 58 ff ff ff	movq	%rcx, -168(%rbp)
10001d1fa:	0f b7 48 20	movzwl	32(%rax), %ecx
10001d1fe:	48 89 8d 50 ff ff ff	movq	%rcx, -176(%rbp)
10001d205:	0f b7 48 22	movzwl	34(%rax), %ecx
10001d209:	48 89 8d 60 ff ff ff	movq	%rcx, -160(%rbp)
10001d210:	8b 48 28	movl	40(%rax), %ecx
10001d213:	89 4d 94	movl	%ecx, -108(%rbp)
10001d216:	8b 48 2c	movl	44(%rax), %ecx
10001d219:	89 4d 90	movl	%ecx, -112(%rbp)
10001d21c:	8b 48 30	movl	48(%rax), %ecx
10001d21f:	89 4d 8c	movl	%ecx, -116(%rbp)
10001d222:	8b 48 34	movl	52(%rax), %ecx
10001d225:	89 4d 88	movl	%ecx, -120(%rbp)
10001d228:	8b 48 38	movl	56(%rax), %ecx
10001d22b:	89 4d c0	movl	%ecx, -64(%rbp)
10001d22e:	8b 48 3c	movl	60(%rax), %ecx
10001d231:	89 4d c8	movl	%ecx, -56(%rbp)
10001d234:	48 63 48 40	movslq	64(%rax), %rcx
10001d238:	48 89 4d b8	movq	%rcx, -72(%rbp)
10001d23c:	8b 48 44	movl	68(%rax), %ecx
10001d23f:	89 4d b0	movl	%ecx, -80(%rbp)
10001d242:	8b 48 48	movl	72(%rax), %ecx
10001d245:	89 4d 84	movl	%ecx, -124(%rbp)
10001d248:	8b 48 4c	movl	76(%rax), %ecx
10001d24b:	89 4d 80	movl	%ecx, -128(%rbp)
10001d24e:	8b 48 50	movl	80(%rax), %ecx
10001d251:	89 8d 7c ff ff ff	movl	%ecx, -132(%rbp)
10001d257:	8b 48 54	movl	84(%rax), %ecx
10001d25a:	89 4d a4	movl	%ecx, -92(%rbp)
10001d25d:	8b 48 58	movl	88(%rax), %ecx
10001d260:	89 4d a8	movl	%ecx, -88(%rbp)
10001d263:	8b 48 5c	movl	92(%rax), %ecx
10001d266:	89 4d ac	movl	%ecx, -84(%rbp)
10001d269:	8b 40 60	movl	96(%rax), %eax
10001d26c:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10001d273:	48 89 df	movq	%rbx, %rdi
10001d276:	e8 97 1c 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001d27b:	48 8b 3d 76 53 03 00	movq	217974(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumberFormatter
10001d282:	e8 3d 22 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001d287:	48 89 c7	movq	%rax, %rdi
10001d28a:	e8 3b 22 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001d28f:	48 89 c3	movq	%rax, %rbx
10001d292:	48 8b 35 b7 4b 03 00	movq	215991(%rip), %rsi ## Objc selector ref: setFormat:
10001d299:	48 8d 15 20 13 02 00	leaq	135968(%rip), %rdx ## Objc cfstring ref: @"0.00000"
10001d2a0:	4c 8b 3d 79 f9 01 00	movq	129401(%rip), %r15 ## Objc message: +[NSNumberFormatter setFormat:]
10001d2a7:	48 89 c7	movq	%rax, %rdi
10001d2aa:	41 ff d7	callq	*%r15
10001d2ad:	48 8b 35 dc 49 03 00	movq	215516(%rip), %rsi ## Objc selector ref: setAllowsFloats:
10001d2b4:	48 89 df	movq	%rbx, %rdi
10001d2b7:	ba 01 00 00 00	movl	$1, %edx
10001d2bc:	41 ff d7	callq	*%r15
10001d2bf:	48 8b 35 c2 4b 03 00	movq	216002(%rip), %rsi ## Objc selector ref: setHasThousandSeparators:
10001d2c6:	48 89 df	movq	%rbx, %rdi
10001d2c9:	ba 01 00 00 00	movl	$1, %edx
10001d2ce:	41 ff d7	callq	*%r15
10001d2d1:	48 8b 3d b8 52 03 00	movq	217784(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10001d2d8:	48 8b 35 d1 4f 03 00	movq	217041(%rip), %rsi ## Objc selector ref: standardUserDefaults
10001d2df:	41 ff d7	callq	*%r15
10001d2e2:	48 8b 35 8f 45 03 00	movq	214415(%rip), %rsi ## Objc selector ref: objectForKey:
10001d2e9:	48 8d 15 f0 12 02 00	leaq	135920(%rip), %rdx ## Objc cfstring ref: @"NSDecimalSeparator"
10001d2f0:	48 89 c7	movq	%rax, %rdi
10001d2f3:	41 ff d7	callq	*%r15
10001d2f6:	48 8b 35 6b 4a 03 00	movq	215659(%rip), %rsi ## Objc selector ref: setDecimalSeparator:
10001d2fd:	48 89 9d 30 ff ff ff	movq	%rbx, -208(%rbp)
10001d304:	48 89 df	movq	%rbx, %rdi
10001d307:	48 89 c2	movq	%rax, %rdx
10001d30a:	41 ff d7	callq	*%r15
10001d30d:	48 8b 3d dc 52 03 00	movq	217820(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001d314:	48 8b 35 0d 45 03 00	movq	214285(%rip), %rsi ## Objc selector ref: numberWithInteger:
10001d31b:	4c 89 e2	movq	%r12, %rdx
10001d31e:	41 ff d7	callq	*%r15
10001d321:	48 8b 35 40 4d 03 00	movq	216384(%rip), %rsi ## Objc selector ref: setProfileSize:
10001d328:	4c 89 ef	movq	%r13, %rdi
10001d32b:	48 89 c2	movq	%rax, %rdx
10001d32e:	41 ff d7	callq	*%r15
10001d331:	48 8b 05 f8 5c 03 00	movq	220408(%rip), %rax
10001d338:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d33d:	48 8b 3d 84 52 03 00	movq	217732(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d344:	4c 8b 25 9d 4f 03 00	movq	216989(%rip), %r12 ## Objc selector ref: stringForClassType:
10001d34b:	4c 89 e6	movq	%r12, %rsi
10001d34e:	8b 55 d4	movl	-44(%rbp), %edx
10001d351:	41 ff d7	callq	*%r15
10001d354:	48 8b 35 95 4d 03 00	movq	216469(%rip), %rsi ## Objc selector ref: setStringValue:
10001d35b:	48 89 df	movq	%rbx, %rdi
10001d35e:	48 89 c2	movq	%rax, %rdx
10001d361:	41 ff d7	callq	*%r15
10001d364:	48 8b 05 cd 5c 03 00	movq	220365(%rip), %rax
10001d36b:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d370:	48 8b 3d 51 52 03 00	movq	217681(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d377:	44 89 f1	movl	%r14d, %ecx
10001d37a:	c1 e9 18	shrl	$24, %ecx
10001d37d:	45 89 f0	movl	%r14d, %r8d
10001d380:	41 c1 e8 14	shrl	$20, %r8d
10001d384:	41 83 e0 0f	andl	$15, %r8d
10001d388:	44 89 75 d4	movl	%r14d, -44(%rbp)
10001d38c:	41 c1 ee 10	shrl	$16, %r14d
10001d390:	41 83 e6 0f	andl	$15, %r14d
10001d394:	48 8b 35 8d 4f 03 00	movq	216973(%rip), %rsi ## Objc selector ref: stringWithFormat:
10001d39b:	48 8d 15 5e 12 02 00	leaq	135774(%rip), %rdx ## Objc cfstring ref: @"%d.%d.%d"
10001d3a2:	45 89 f1	movl	%r14d, %r9d
10001d3a5:	31 c0	xorl	%eax, %eax
10001d3a7:	41 ff d7	callq	*%r15
10001d3aa:	48 89 df	movq	%rbx, %rdi
10001d3ad:	4c 8b 35 3c 4d 03 00	movq	216380(%rip), %r14 ## Objc selector ref: setStringValue:
10001d3b4:	4c 89 f6	movq	%r14, %rsi
10001d3b7:	48 89 c2	movq	%rax, %rdx
10001d3ba:	41 ff d7	callq	*%r15
10001d3bd:	48 8b 05 7c 5c 03 00	movq	220284(%rip), %rax
10001d3c4:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d3c9:	48 8b 3d f8 51 03 00	movq	217592(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d3d0:	4c 89 e6	movq	%r12, %rsi
10001d3d3:	8b 55 a0	movl	-96(%rbp), %edx
10001d3d6:	41 ff d7	callq	*%r15
10001d3d9:	48 89 df	movq	%rbx, %rdi
10001d3dc:	4c 89 f6	movq	%r14, %rsi
10001d3df:	48 89 c2	movq	%rax, %rdx
10001d3e2:	41 ff d7	callq	*%r15
10001d3e5:	48 8b 05 5c 5c 03 00	movq	220252(%rip), %rax
10001d3ec:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d3f1:	48 8b 3d d0 51 03 00	movq	217552(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d3f8:	4c 8b 25 f1 4e 03 00	movq	216817(%rip), %r12 ## Objc selector ref: stringForDataType:
10001d3ff:	4c 89 e6	movq	%r12, %rsi
10001d402:	8b 55 9c	movl	-100(%rbp), %edx
10001d405:	41 ff d7	callq	*%r15
10001d408:	48 89 df	movq	%rbx, %rdi
10001d40b:	4c 89 f6	movq	%r14, %rsi
10001d40e:	48 89 c2	movq	%rax, %rdx
10001d411:	41 ff d7	callq	*%r15
10001d414:	48 8b 05 35 5c 03 00	movq	220213(%rip), %rax
10001d41b:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d420:	48 8b 3d a1 51 03 00	movq	217505(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d427:	4c 89 e6	movq	%r12, %rsi
10001d42a:	8b 55 98	movl	-104(%rbp), %edx
10001d42d:	41 ff d7	callq	*%r15
10001d430:	48 89 df	movq	%rbx, %rdi
10001d433:	4c 89 f6	movq	%r14, %rsi
10001d436:	48 89 c2	movq	%rax, %rdx
10001d439:	41 ff d7	callq	*%r15
10001d43c:	48 8b 3d dd 52 03 00	movq	217821(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDateFormatter
10001d443:	e8 7c 20 01 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001d448:	48 89 c3	movq	%rax, %rbx
10001d44b:	48 8b 35 be 4c 03 00	movq	216254(%rip), %rsi ## Objc selector ref: setTimeStyle:
10001d452:	ba 01 00 00 00	movl	$1, %edx
10001d457:	48 89 c7	movq	%rax, %rdi
10001d45a:	41 ff d7	callq	*%r15
10001d45d:	48 8b 35 fc 48 03 00	movq	215292(%rip), %rsi ## Objc selector ref: setDateStyle:
10001d464:	ba 01 00 00 00	movl	$1, %edx
10001d469:	48 89 df	movq	%rbx, %rdi
10001d46c:	41 ff d7	callq	*%r15
10001d46f:	48 8b 05 e2 5b 03 00	movq	220130(%rip), %rax
10001d476:	4d 8b 74 05 00	movq	(%r13,%rax), %r14
10001d47b:	4c 8b 25 a6 52 03 00	movq	217766(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSCalendarDate
10001d482:	48 8b 3d a7 52 03 00	movq	217767(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSTimeZone
10001d489:	48 8b 35 b8 41 03 00	movq	213432(%rip), %rsi ## Objc selector ref: localTimeZone
10001d490:	41 ff d7	callq	*%r15
10001d493:	48 8b 35 ae 3b 03 00	movq	211886(%rip), %rsi ## Objc selector ref: dateWithYear:month:day:hour:minute:second:timeZone:
10001d49a:	48 83 ec 08	subq	$8, %rsp
10001d49e:	4c 89 e7	movq	%r12, %rdi
10001d4a1:	48 8b 95 38 ff ff ff	movq	-200(%rbp), %rdx
10001d4a8:	48 8b 8d 40 ff ff ff	movq	-192(%rbp), %rcx
10001d4af:	4c 8b 85 48 ff ff ff	movq	-184(%rbp), %r8
10001d4b6:	4c 8b 8d 58 ff ff ff	movq	-168(%rbp), %r9
10001d4bd:	50	pushq	%rax
10001d4be:	ff b5 60 ff ff ff	pushq	-160(%rbp)
10001d4c4:	ff b5 50 ff ff ff	pushq	-176(%rbp)
10001d4ca:	41 ff d7	callq	*%r15
10001d4cd:	48 83 c4 20	addq	$32, %rsp
10001d4d1:	48 8b 35 28 4e 03 00	movq	216616(%rip), %rsi ## Objc selector ref: stringForObjectValue:
10001d4d8:	48 89 df	movq	%rbx, %rdi
10001d4db:	48 89 c2	movq	%rax, %rdx
10001d4de:	41 ff d7	callq	*%r15
10001d4e1:	4c 89 f7	movq	%r14, %rdi
10001d4e4:	4c 8b 35 05 4c 03 00	movq	216069(%rip), %r14 ## Objc selector ref: setStringValue:
10001d4eb:	4c 89 f6	movq	%r14, %rsi
10001d4ee:	48 89 c2	movq	%rax, %rdx
10001d4f1:	41 ff d7	callq	*%r15
10001d4f4:	48 8b 05 65 5b 03 00	movq	220005(%rip), %rax
10001d4fb:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d500:	48 8b 3d c1 50 03 00	movq	217281(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d507:	48 8b 35 e2 4d 03 00	movq	216546(%rip), %rsi ## Objc selector ref: stringForDataType:
10001d50e:	8b 55 94	movl	-108(%rbp), %edx
10001d511:	41 ff d7	callq	*%r15
10001d514:	48 89 df	movq	%rbx, %rdi
10001d517:	4c 89 f6	movq	%r14, %rsi
10001d51a:	48 89 c2	movq	%rax, %rdx
10001d51d:	41 ff d7	callq	*%r15
10001d520:	8b 55 90	movl	-112(%rbp), %edx
10001d523:	48 8b 05 3e 5b 03 00	movq	219966(%rip), %rax
10001d52a:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10001d52f:	81 fa 00 00 02 00	cmpl	$131072, %edx
10001d535:	74 5b	je	0x10001d592
10001d537:	81 fa 00 00 01 00	cmpl	$65536, %edx
10001d53d:	74 7a	je	0x10001d5b9
10001d53f:	85 d2	testl	%edx, %edx
10001d541:	0f 85 ab 00 00 00	jne	0x10001d5f2
10001d547:	48 8b 3d 52 50 03 00	movq	217170(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001d54e:	48 8b 35 93 41 03 00	movq	213395(%rip), %rsi ## Objc selector ref: mainBundle
10001d555:	48 8b 1d c4 f6 01 00	movq	128708(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001d55c:	ff d3	callq	*%rbx
10001d55e:	48 8b 35 fb 40 03 00	movq	213243(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001d565:	48 8d 15 b4 10 02 00	leaq	135348(%rip), %rdx ## Objc cfstring ref: @"Normal Quality"
10001d56c:	eb 70	jmp	0x10001d5de
10001d56e:	48 8d 3d 2b 10 02 00	leaq	135211(%rip), %rdi ## Objc cfstring ref: @"ColorSyncProfileCopyHeader failed
"
10001d575:	31 c0	xorl	%eax, %eax
10001d577:	e8 80 1d 01 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10001d57c:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10001d583:	5b	popq	%rbx
10001d584:	41 5c	popq	%r12
10001d586:	41 5d	popq	%r13
10001d588:	41 5e	popq	%r14
10001d58a:	41 5f	popq	%r15
10001d58c:	5d	popq	%rbp
10001d58d:	e9 46 1d 01 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
10001d592:	48 8b 3d 07 50 03 00	movq	217095(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001d599:	48 8b 35 48 41 03 00	movq	213320(%rip), %rsi ## Objc selector ref: mainBundle
10001d5a0:	48 8b 1d 79 f6 01 00	movq	128633(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001d5a7:	ff d3	callq	*%rbx
10001d5a9:	48 8b 35 b0 40 03 00	movq	213168(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001d5b0:	48 8d 15 a9 10 02 00	leaq	135337(%rip), %rdx ## Objc cfstring ref: @"Best Quality"
10001d5b7:	eb 25	jmp	0x10001d5de
10001d5b9:	48 8b 3d e0 4f 03 00	movq	217056(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001d5c0:	48 8b 35 21 41 03 00	movq	213281(%rip), %rsi ## Objc selector ref: mainBundle
10001d5c7:	48 8b 1d 52 f6 01 00	movq	128594(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001d5ce:	ff d3	callq	*%rbx
10001d5d0:	48 8b 35 89 40 03 00	movq	213129(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001d5d7:	48 8d 15 62 10 02 00	leaq	135266(%rip), %rdx ## Objc cfstring ref: @"Draft Quality"
10001d5de:	48 8d 0d bb f8 01 00	leaq	129211(%rip), %rcx ## Objc cfstring ref: @""
10001d5e5:	48 89 c7	movq	%rax, %rdi
10001d5e8:	45 31 c0	xorl	%r8d, %r8d
10001d5eb:	ff d3	callq	*%rbx
10001d5ed:	48 89 c2	movq	%rax, %rdx
10001d5f0:	eb 1e	jmp	0x10001d610
10001d5f2:	48 8b 3d cf 4f 03 00	movq	217039(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d5f9:	48 8b 35 10 4d 03 00	movq	216336(%rip), %rsi ## Objc selector ref: stringForType:
10001d600:	ff 15 1a f6 01 00	callq	*128538(%rip) ## Objc message: +[NSString stringForType:]
10001d606:	48 89 c2	movq	%rax, %rdx
10001d609:	48 8b 1d 10 f6 01 00	movq	128528(%rip), %rbx ## Objc message: -[%rdi stringForType:]
10001d610:	4c 8b 3d d9 4a 03 00	movq	215769(%rip), %r15 ## Objc selector ref: setStringValue:
10001d617:	4c 89 e7	movq	%r12, %rdi
10001d61a:	4c 89 fe	movq	%r15, %rsi
10001d61d:	ff d3	callq	*%rbx
10001d61f:	48 8b 05 4a 5a 03 00	movq	219722(%rip), %rax
10001d626:	4d 89 ec	movq	%r13, %r12
10001d629:	4d 8b 74 05 00	movq	(%r13,%rax), %r14
10001d62e:	48 8b 3d 93 4f 03 00	movq	216979(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d635:	48 8b 35 b4 4c 03 00	movq	216244(%rip), %rsi ## Objc selector ref: stringForDataType:
10001d63c:	8b 55 8c	movl	-116(%rbp), %edx
10001d63f:	ff d3	callq	*%rbx
10001d641:	4c 89 f7	movq	%r14, %rdi
10001d644:	4c 89 fe	movq	%r15, %rsi
10001d647:	48 89 c2	movq	%rax, %rdx
10001d64a:	ff d3	callq	*%rbx
10001d64c:	48 8b 05 25 5a 03 00	movq	219685(%rip), %rax
10001d653:	4d 8b 74 05 00	movq	(%r13,%rax), %r14
10001d658:	48 8b 3d 69 4f 03 00	movq	216937(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d65f:	48 8b 35 aa 4c 03 00	movq	216234(%rip), %rsi ## Objc selector ref: stringForType:
10001d666:	8b 55 88	movl	-120(%rbp), %edx
10001d669:	ff d3	callq	*%rbx
10001d66b:	4c 89 f7	movq	%r14, %rdi
10001d66e:	4c 89 fe	movq	%r15, %rsi
10001d671:	48 89 c2	movq	%rax, %rdx
10001d674:	ff d3	callq	*%rbx
10001d676:	48 8b 05 03 5a 03 00	movq	219651(%rip), %rax
10001d67d:	4d 8b 74 05 00	movq	(%r13,%rax), %r14
10001d682:	48 8b 3d 3f 4f 03 00	movq	216895(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d689:	48 8d 15 f0 0f 02 00	leaq	135152(%rip), %rdx ## Objc cfstring ref: @"%.8u %.8u"
10001d690:	48 8b 35 91 4c 03 00	movq	216209(%rip), %rsi ## Objc selector ref: stringWithFormat:
10001d697:	8b 4d c0	movl	-64(%rbp), %ecx
10001d69a:	44 8b 45 c8	movl	-56(%rbp), %r8d
10001d69e:	31 c0	xorl	%eax, %eax
10001d6a0:	ff d3	callq	*%rbx
10001d6a2:	4c 89 f7	movq	%r14, %rdi
10001d6a5:	4c 89 fe	movq	%r15, %rsi
10001d6a8:	48 89 c2	movq	%rax, %rdx
10001d6ab:	ff d3	callq	*%rbx
10001d6ad:	48 8b 05 d4 59 03 00	movq	219604(%rip), %rax
10001d6b4:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10001d6b9:	48 8b 4d b8	movq	-72(%rbp), %rcx
10001d6bd:	83 f9 03	cmpl	$3, %ecx
10001d6c0:	77 0d	ja	0x10001d6cf
10001d6c2:	48 8d 05 d7 f6 01 00	leaq	128727(%rip), %rax
10001d6c9:	48 8b 1c c8	movq	(%rax,%rcx,8), %rbx
10001d6cd:	eb 07	jmp	0x10001d6d6
10001d6cf:	48 8d 1d 0a 09 02 00	leaq	133386(%rip), %rbx ## Objc cfstring ref: @"Unknown"
10001d6d6:	48 8b 3d c3 4e 03 00	movq	216771(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001d6dd:	48 8b 35 04 40 03 00	movq	212996(%rip), %rsi ## Objc selector ref: mainBundle
10001d6e4:	4c 8b 35 35 f5 01 00	movq	128309(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001d6eb:	41 ff d6	callq	*%r14
10001d6ee:	48 8b 35 6b 3f 03 00	movq	212843(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001d6f5:	48 8d 0d a4 f7 01 00	leaq	128932(%rip), %rcx ## Objc cfstring ref: @""
10001d6fc:	48 89 c7	movq	%rax, %rdi
10001d6ff:	48 89 da	movq	%rbx, %rdx
10001d702:	45 31 c0	xorl	%r8d, %r8d
10001d705:	41 ff d6	callq	*%r14
10001d708:	4c 89 e7	movq	%r12, %rdi
10001d70b:	4c 89 fe	movq	%r15, %rsi
10001d70e:	48 89 c2	movq	%rax, %rdx
10001d711:	41 ff d6	callq	*%r14
10001d714:	48 8b 05 75 59 03 00	movq	219509(%rip), %rax
10001d71b:	4c 89 ad 68 ff ff ff	movq	%r13, -152(%rbp)
10001d722:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10001d727:	48 89 7d b8	movq	%rdi, -72(%rbp)
10001d72b:	48 8b 05 96 4e 03 00	movq	216726(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSString
10001d732:	48 89 45 c0	movq	%rax, -64(%rbp)
10001d736:	48 8b 35 db 4b 03 00	movq	216027(%rip), %rsi ## Objc selector ref: stringValue
10001d73d:	41 ff d6	callq	*%r14
10001d740:	48 89 45 c8	movq	%rax, -56(%rbp)
10001d744:	f2 0f 2a 45 b0	cvtsi2sdl	-80(%rbp), %xmm0
10001d749:	48 8b 3d a0 4e 03 00	movq	216736(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001d750:	f2 0f 59 05 08 a9 01 00	mulsd	108808(%rip), %xmm0
10001d758:	4c 8b 25 b1 40 03 00	movq	213169(%rip), %r12 ## Objc selector ref: numberWithDouble:
10001d75f:	4c 89 e6	movq	%r12, %rsi
10001d762:	41 ff d6	callq	*%r14
10001d765:	4c 8b bd 30 ff ff ff	movq	-208(%rbp), %r15
10001d76c:	4c 89 ff	movq	%r15, %rdi
10001d76f:	4c 8b 2d 8a 4b 03 00	movq	215946(%rip), %r13 ## Objc selector ref: stringForObjectValue:
10001d776:	4c 89 ee	movq	%r13, %rsi
10001d779:	48 89 c2	movq	%rax, %rdx
10001d77c:	41 ff d6	callq	*%r14
10001d77f:	48 89 45 b0	movq	%rax, -80(%rbp)
10001d783:	48 8b 3d 66 4e 03 00	movq	216678(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001d78a:	0f 57 c0	xorps	%xmm0, %xmm0
10001d78d:	f2 0f 2a 45 84	cvtsi2sdl	-124(%rbp), %xmm0
10001d792:	f2 0f 59 05 c6 a8 01 00	mulsd	108742(%rip), %xmm0
10001d79a:	4c 89 e6	movq	%r12, %rsi
10001d79d:	41 ff d6	callq	*%r14
10001d7a0:	4c 89 ff	movq	%r15, %rdi
10001d7a3:	4c 89 ee	movq	%r13, %rsi
10001d7a6:	48 89 c2	movq	%rax, %rdx
10001d7a9:	41 ff d6	callq	*%r14
10001d7ac:	48 89 c3	movq	%rax, %rbx
10001d7af:	48 8b 3d 3a 4e 03 00	movq	216634(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001d7b6:	0f 57 c0	xorps	%xmm0, %xmm0
10001d7b9:	f2 0f 2a 45 80	cvtsi2sdl	-128(%rbp), %xmm0
10001d7be:	f2 0f 59 05 9a a8 01 00	mulsd	108698(%rip), %xmm0
10001d7c6:	4c 89 e6	movq	%r12, %rsi
10001d7c9:	41 ff d6	callq	*%r14
10001d7cc:	4c 89 ff	movq	%r15, %rdi
10001d7cf:	4c 8b 3d 1a 49 03 00	movq	215322(%rip), %r15 ## Objc selector ref: setStringValue:
10001d7d6:	4c 89 ee	movq	%r13, %rsi
10001d7d9:	48 89 c2	movq	%rax, %rdx
10001d7dc:	41 ff d6	callq	*%r14
10001d7df:	48 8b 7d c0	movq	-64(%rbp), %rdi
10001d7e3:	4c 8b 25 3e 4b 03 00	movq	215870(%rip), %r12 ## Objc selector ref: stringWithFormat:
10001d7ea:	4c 89 e6	movq	%r12, %rsi
10001d7ed:	48 8b 55 c8	movq	-56(%rbp), %rdx
10001d7f1:	48 8b 4d b0	movq	-80(%rbp), %rcx
10001d7f5:	49 89 d8	movq	%rbx, %r8
10001d7f8:	4c 8b ad 68 ff ff ff	movq	-152(%rbp), %r13
10001d7ff:	49 89 c1	movq	%rax, %r9
10001d802:	31 c0	xorl	%eax, %eax
10001d804:	41 ff d6	callq	*%r14
10001d807:	48 8b 7d b8	movq	-72(%rbp), %rdi
10001d80b:	4c 89 fe	movq	%r15, %rsi
10001d80e:	48 89 c2	movq	%rax, %rdx
10001d811:	41 ff d6	callq	*%r14
10001d814:	48 8b 05 7d 58 03 00	movq	219261(%rip), %rax
10001d81b:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10001d820:	48 8b 3d a1 4d 03 00	movq	216481(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d827:	48 8b 35 c2 4a 03 00	movq	215746(%rip), %rsi ## Objc selector ref: stringForDataType:
10001d82e:	8b 95 7c ff ff ff	movl	-132(%rbp), %edx
10001d834:	41 ff d6	callq	*%r14
10001d837:	48 89 df	movq	%rbx, %rdi
10001d83a:	4c 89 fe	movq	%r15, %rsi
10001d83d:	48 89 c2	movq	%rax, %rdx
10001d840:	41 ff d6	callq	*%r14
10001d843:	81 7d d4 00 00 00 04	cmpl	$67108864, -44(%rbp)
10001d84a:	72 6c	jb	0x10001d8b8
10001d84c:	48 8b 05 4d 58 03 00	movq	219213(%rip), %rax
10001d853:	4d 8b 74 05 00	movq	(%r13,%rax), %r14
10001d858:	48 8b 3d 69 4d 03 00	movq	216425(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001d85f:	8b 4d a4	movl	-92(%rbp), %ecx
10001d862:	0f c9	bswapl	%ecx
10001d864:	44 8b 45 a8	movl	-88(%rbp), %r8d
10001d868:	41 0f c8	bswapl	%r8d
10001d86b:	44 8b 4d ac	movl	-84(%rbp), %r9d
10001d86f:	41 0f c9	bswapl	%r9d
10001d872:	48 8b 9d 70 ff ff ff	movq	-144(%rbp), %rbx
10001d879:	0f cb	bswapl	%ebx
10001d87b:	48 83 ec 08	subq	$8, %rsp
10001d87f:	48 8d 15 9a 0e 02 00	leaq	134810(%rip), %rdx ## Objc cfstring ref: @"%.8x %.8x %.8x %.8x"
10001d886:	4c 89 e6	movq	%r12, %rsi
10001d889:	31 c0	xorl	%eax, %eax
10001d88b:	53	pushq	%rbx
10001d88c:	48 8b 1d 8d f3 01 00	movq	127885(%rip), %rbx ## Objc message: +[NSString stringForDataType:]
10001d893:	ff d3	callq	*%rbx
10001d895:	48 83 c4 10	addq	$16, %rsp
10001d899:	4c 89 f7	movq	%r14, %rdi
10001d89c:	4c 89 fe	movq	%r15, %rsi
10001d89f:	48 89 c2	movq	%rax, %rdx
10001d8a2:	48 89 d8	movq	%rbx, %rax
10001d8a5:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10001d8ac:	5b	popq	%rbx
10001d8ad:	41 5c	popq	%r12
10001d8af:	41 5d	popq	%r13
10001d8b1:	41 5e	popq	%r14
10001d8b3:	41 5f	popq	%r15
10001d8b5:	5d	popq	%rbp
10001d8b6:	ff e0	jmpq	*%rax
10001d8b8:	48 81 c4 a8 00 00 00	addq	$168, %rsp
10001d8bf:	5b	popq	%rbx
10001d8c0:	41 5c	popq	%r12
10001d8c2:	41 5d	popq	%r13
10001d8c4:	41 5e	popq	%r14
10001d8c6:	41 5f	popq	%r15
10001d8c8:	5d	popq	%rbp
10001d8c9:	c3	retq
10001d8ca:	55	pushq	%rbp
10001d8cb:	48 89 e5	movq	%rsp, %rbp
10001d8ce:	48 8b 15 d3 57 03 00	movq	219091(%rip), %rdx
10001d8d5:	b9 01 00 00 00	movl	$1, %ecx
10001d8da:	5d	popq	%rbp
10001d8db:	e9 f6 1b 01 00	jmp	0x10002f4d6 ## symbol stub for: _objc_getProperty
10001d8e0:	55	pushq	%rbp
10001d8e1:	48 89 e5	movq	%rsp, %rbp
10001d8e4:	48 8b 0d bd 57 03 00	movq	219069(%rip), %rcx
10001d8eb:	5d	popq	%rbp
10001d8ec:	e9 0f 1c 01 00	jmp	0x10002f500 ## symbol stub for: _objc_setProperty_atomic
10001d8f1:	90	nop
10001d8f2:	90	nop
10001d8f3:	90	nop
10001d8f4:	90	nop
10001d8f5:	90	nop
10001d8f6:	90	nop
10001d8f7:	90	nop
10001d8f8:	90	nop
10001d8f9:	90	nop
10001d8fa:	90	nop
10001d8fb:	90	nop
10001d8fc:	90	nop
10001d8fd:	90	nop
10001d8fe:	90	nop
10001d8ff:	90	nop
10001d900:	55	pushq	%rbp
10001d901:	48 89 e5	movq	%rsp, %rbp
10001d904:	b8 01 00 00 00	movl	$1, %eax
10001d909:	5d	popq	%rbp
10001d90a:	c3	retq
10001d90b:	55	pushq	%rbp
10001d90c:	48 89 e5	movq	%rsp, %rbp
10001d90f:	41 57	pushq	%r15
10001d911:	41 56	pushq	%r14
10001d913:	41 55	pushq	%r13
10001d915:	41 54	pushq	%r12
10001d917:	53	pushq	%rbx
10001d918:	50	pushq	%rax
10001d919:	45 89 c7	movl	%r8d, %r15d
10001d91c:	41 89 cc	movl	%ecx, %r12d
10001d91f:	48 89 55 d0	movq	%rdx, -48(%rbp)
10001d923:	48 89 fb	movq	%rdi, %rbx
10001d926:	4c 8b 2d 8b 57 03 00	movq	219019(%rip), %r13
10001d92d:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
10001d931:	48 8b 35 b0 47 03 00	movq	214960(%rip), %rsi ## Objc selector ref: setString:
10001d938:	48 8d 15 61 f5 01 00	leaq	128353(%rip), %rdx ## Objc cfstring ref: @""
10001d93f:	4c 8b 35 da f2 01 00	movq	127706(%rip), %r14 ## Objc message: -[%rdi setString:]
10001d946:	41 ff d6	callq	*%r14
10001d949:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10001d94d:	48 8b 35 64 44 03 00	movq	214116(%rip), %rsi ## Objc selector ref: setEditable:
10001d954:	31 d2	xorl	%edx, %edx
10001d956:	41 ff d6	callq	*%r14
10001d959:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10001d95d:	48 8b 35 44 47 03 00	movq	214852(%rip), %rsi ## Objc selector ref: setSelectable:
10001d964:	31 d2	xorl	%edx, %edx
10001d966:	41 ff d6	callq	*%r14
10001d969:	4e 8b 2c 2b	movq	(%rbx,%r13), %r13
10001d96d:	48 8b 3d fc 4c 03 00	movq	216316(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFont
10001d974:	48 8b 35 1d 39 03 00	movq	211229(%rip), %rsi ## Objc selector ref: fontWithName:size:
10001d97b:	48 8d 15 be 0d 02 00	leaq	134590(%rip), %rdx ## Objc cfstring ref: @"Menlo"
10001d982:	f2 0f 10 05 2e aa 01 00	movsd	109102(%rip), %xmm0
10001d98a:	41 ff d6	callq	*%r14
10001d98d:	48 8b 35 b4 44 03 00	movq	214196(%rip), %rsi ## Objc selector ref: setFont:
10001d994:	4c 89 ef	movq	%r13, %rdi
10001d997:	48 89 c2	movq	%rax, %rdx
10001d99a:	41 ff d6	callq	*%r14
10001d99d:	41 81 fc 64 61 65 68	cmpl	$1751474532, %r12d
10001d9a4:	75 19	jne	0x10001d9bf
10001d9a6:	41 81 ff 64 61 65 68	cmpl	$1751474532, %r15d
10001d9ad:	75 10	jne	0x10001d9bf
10001d9af:	48 8b 05 0a 57 03 00	movq	218890(%rip), %rax
10001d9b6:	c7 04 03 80 00 00 00	movl	$128, (%rbx,%rax)
10001d9bd:	eb 45	jmp	0x10001da04
10001d9bf:	44 89 e7	movl	%r12d, %edi
10001d9c2:	e8 8d 18 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001d9c7:	49 89 c6	movq	%rax, %r14
10001d9ca:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001d9ce:	48 89 c6	movq	%rax, %rsi
10001d9d1:	e8 a8 18 01 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001d9d6:	49 89 c5	movq	%rax, %r13
10001d9d9:	4c 89 f7	movq	%r14, %rdi
10001d9dc:	e8 31 15 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001d9e1:	4d 85 ed	testq	%r13, %r13
10001d9e4:	0f 84 88 00 00 00	je	0x10001da72
10001d9ea:	4c 89 ef	movq	%r13, %rdi
10001d9ed:	e8 b4 14 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001d9f2:	48 8b 0d c7 56 03 00	movq	218823(%rip), %rcx
10001d9f9:	89 04 0b	movl	%eax, (%rbx,%rcx)
10001d9fc:	4c 89 ef	movq	%r13, %rdi
10001d9ff:	e8 0e 15 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001da04:	48 8b 05 bd 56 03 00	movq	218813(%rip), %rax
10001da0b:	c6 04 03 01	movb	$1, (%rbx,%rax)
10001da0f:	48 8b 05 ba 56 03 00	movq	218810(%rip), %rax
10001da16:	44 89 24 03	movl	%r12d, (%rbx,%rax)
10001da1a:	48 8b 05 b7 56 03 00	movq	218807(%rip), %rax
10001da21:	44 89 3c 03	movl	%r15d, (%rbx,%rax)
10001da25:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001da29:	e8 ea 14 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10001da2e:	48 8b 0d ab 56 03 00	movq	218795(%rip), %rcx
10001da35:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001da39:	48 8b 05 a8 56 03 00	movq	218792(%rip), %rax
10001da40:	c7 04 03 00 00 00 00	movl	$0, (%rbx,%rax)
10001da47:	48 8b 15 72 49 03 00	movq	215410(%rip), %rdx ## Objc selector ref: thread:
10001da4e:	48 8b 35 1b 3f 03 00	movq	212763(%rip), %rsi ## Objc selector ref: performSelector:withObject:afterDelay:
10001da55:	0f 57 c0	xorps	%xmm0, %xmm0
10001da58:	48 89 df	movq	%rbx, %rdi
10001da5b:	48 89 d9	movq	%rbx, %rcx
10001da5e:	48 83 c4 08	addq	$8, %rsp
10001da62:	5b	popq	%rbx
10001da63:	41 5c	popq	%r12
10001da65:	41 5d	popq	%r13
10001da67:	41 5e	popq	%r14
10001da69:	41 5f	popq	%r15
10001da6b:	5d	popq	%rbp
10001da6c:	ff 25 ae f1 01 00	jmpq	*127406(%rip) ## Objc message: +[NSFont performSelector:withObject:afterDelay:]
10001da72:	48 83 c4 08	addq	$8, %rsp
10001da76:	5b	popq	%rbx
10001da77:	41 5c	popq	%r12
10001da79:	41 5d	popq	%r13
10001da7b:	41 5e	popq	%r14
10001da7d:	41 5f	popq	%r15
10001da7f:	5d	popq	%rbp
10001da80:	c3	retq
10001da81:	55	pushq	%rbp
10001da82:	48 89 e5	movq	%rsp, %rbp
10001da85:	41 57	pushq	%r15
10001da87:	41 56	pushq	%r14
10001da89:	41 55	pushq	%r13
10001da8b:	41 54	pushq	%r12
10001da8d:	53	pushq	%rbx
10001da8e:	50	pushq	%rax
10001da8f:	b8 08 20 00 00	movl	$8200, %eax
10001da94:	e8 f7 03 00 00	callq	0x10001de90
10001da99:	48 29 c4	subq	%rax, %rsp
10001da9c:	58	popq	%rax
10001da9d:	49 89 fe	movq	%rdi, %r14
10001daa0:	48 8b 05 71 ed 01 00	movq	126321(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001daa7:	48 8b 00	movq	(%rax), %rax
10001daaa:	48 89 45 d0	movq	%rax, -48(%rbp)
10001daae:	48 8b 05 0b 56 03 00	movq	218635(%rip), %rax
10001dab5:	44 8b 3c 07	movl	(%rdi,%rax), %r15d
10001dab9:	48 8b 05 28 56 03 00	movq	218664(%rip), %rax
10001dac0:	44 2b 3c 07	subl	(%rdi,%rax), %r15d
10001dac4:	b8 00 08 00 00	movl	$2048, %eax
10001dac9:	41 39 c7	cmpl	%eax, %r15d
10001dacc:	44 0f 43 f8	cmovael	%eax, %r15d
10001dad0:	4c 8b 2d f9 55 03 00	movq	218617(%rip), %r13
10001dad7:	42 8b 3c 2f	movl	(%rdi,%r13), %edi
10001dadb:	81 ff 64 61 65 68	cmpl	$1751474532, %edi
10001dae1:	0f 85 99 00 00 00	jne	0x10001db80
10001dae7:	48 8b 05 ea 55 03 00	movq	218602(%rip), %rax
10001daee:	41 81 3c 06 64 61 65 68	cmpl	$1751474532, (%r14,%rax)
10001daf6:	0f 85 84 00 00 00	jne	0x10001db80
10001dafc:	48 8b 05 dd 55 03 00	movq	218589(%rip), %rax
10001db03:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001db07:	e8 66 17 01 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
10001db0c:	48 85 c0	testq	%rax, %rax
10001db0f:	0f 84 3d 03 00 00	je	0x10001de52
10001db15:	48 89 c3	movq	%rax, %rbx
10001db18:	48 89 c7	movq	%rax, %rdi
10001db1b:	e8 80 13 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001db20:	0f 10 00	movups	(%rax), %xmm0
10001db23:	f3 0f 6f 48 10	movdqu	16(%rax), %xmm1
10001db28:	0f 10 50 20	movups	32(%rax), %xmm2
10001db2c:	0f 10 58 30	movups	48(%rax), %xmm3
10001db30:	0f 29 85 d0 f7 ff ff	movaps	%xmm0, -2096(%rbp)
10001db37:	66 0f 7f 8d e0 f7 ff ff	movdqa	%xmm1, -2080(%rbp)
10001db3f:	0f 29 95 f0 f7 ff ff	movaps	%xmm2, -2064(%rbp)
10001db46:	0f 29 9d 00 f8 ff ff	movaps	%xmm3, -2048(%rbp)
10001db4d:	0f 10 40 40	movups	64(%rax), %xmm0
10001db51:	0f 29 85 10 f8 ff ff	movaps	%xmm0, -2032(%rbp)
10001db58:	0f 10 40 50	movups	80(%rax), %xmm0
10001db5c:	0f 29 85 20 f8 ff ff	movaps	%xmm0, -2016(%rbp)
10001db63:	0f 10 40 60	movups	96(%rax), %xmm0
10001db67:	0f 29 85 30 f8 ff ff	movaps	%xmm0, -2000(%rbp)
10001db6e:	f3 0f 6f 40 70	movdqu	112(%rax), %xmm0
10001db73:	66 0f 7f 85 40 f8 ff ff	movdqa	%xmm0, -1984(%rbp)
10001db7b:	48 89 df	movq	%rbx, %rdi
10001db7e:	eb 74	jmp	0x10001dbf4
10001db80:	e8 cf 16 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001db85:	48 89 c3	movq	%rax, %rbx
10001db88:	48 8b 05 51 55 03 00	movq	218449(%rip), %rax
10001db8f:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001db93:	48 89 de	movq	%rbx, %rsi
10001db96:	e8 e3 16 01 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001db9b:	49 89 c4	movq	%rax, %r12
10001db9e:	48 89 df	movq	%rbx, %rdi
10001dba1:	e8 6c 13 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001dba6:	4d 85 e4	testq	%r12, %r12
10001dba9:	0f 84 81 02 00 00	je	0x10001de30
10001dbaf:	4c 89 e7	movq	%r12, %rdi
10001dbb2:	e8 ef 12 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001dbb7:	41 39 c7	cmpl	%eax, %r15d
10001dbba:	76 0b	jbe	0x10001dbc7
10001dbbc:	4c 89 e7	movq	%r12, %rdi
10001dbbf:	e8 e2 12 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001dbc4:	49 89 c7	movq	%rax, %r15
10001dbc7:	4c 89 e7	movq	%r12, %rdi
10001dbca:	e8 d1 12 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001dbcf:	48 8b 0d 12 55 03 00	movq	218386(%rip), %rcx
10001dbd6:	41 8b 34 0e	movl	(%r14,%rcx), %esi
10001dbda:	48 01 c6	addq	%rax, %rsi
10001dbdd:	44 89 fa	movl	%r15d, %edx
10001dbe0:	48 8d bd d0 f7 ff ff	leaq	-2096(%rbp), %rdi
10001dbe7:	b9 00 08 00 00	movl	$2048, %ecx
10001dbec:	e8 b3 17 01 00	callq	0x10002f3a4 ## symbol stub for: ___memcpy_chk
10001dbf1:	4c 89 e7	movq	%r12, %rdi
10001dbf4:	e8 19 13 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001dbf9:	43 81 3c 2e 64 61 65 68	cmpl	$1751474532, (%r14,%r13)
10001dc01:	0f 85 bd 00 00 00	jne	0x10001dcc4
10001dc07:	48 8b 05 ca 54 03 00	movq	218314(%rip), %rax
10001dc0e:	41 81 3c 06 64 61 65 68	cmpl	$1751474532, (%r14,%rax)
10001dc16:	0f 85 a8 00 00 00	jne	0x10001dcc4
10001dc1c:	66 0f 6f 85 d0 f7 ff ff	movdqa	-2096(%rbp), %xmm0
10001dc24:	66 0f 6f 0d 94 b6 01 00	movdqa	112276(%rip), %xmm1
10001dc2c:	66 0f 38 00 c1	pshufb	%xmm1, %xmm0
10001dc31:	66 0f 7f 85 d0 f7 ff ff	movdqa	%xmm0, -2096(%rbp)
10001dc39:	8b 85 e0 f7 ff ff	movl	-2080(%rbp), %eax
10001dc3f:	0f c8	bswapl	%eax
10001dc41:	89 85 e0 f7 ff ff	movl	%eax, -2080(%rbp)
10001dc47:	8b 85 e4 f7 ff ff	movl	-2076(%rbp), %eax
10001dc4d:	0f c8	bswapl	%eax
10001dc4f:	89 85 e4 f7 ff ff	movl	%eax, -2076(%rbp)
10001dc55:	66 c1 85 e8 f7 ff ff 08	rolw	$8, -2072(%rbp)
10001dc5d:	66 c1 85 ea f7 ff ff 08	rolw	$8, -2070(%rbp)
10001dc65:	66 c1 85 ec f7 ff ff 08	rolw	$8, -2068(%rbp)
10001dc6d:	66 c1 85 ee f7 ff ff 08	rolw	$8, -2066(%rbp)
10001dc75:	66 c1 85 f0 f7 ff ff 08	rolw	$8, -2064(%rbp)
10001dc7d:	66 c1 85 f2 f7 ff ff 08	rolw	$8, -2062(%rbp)
10001dc85:	f3 0f 6f 85 f4 f7 ff ff	movdqu	-2060(%rbp), %xmm0
10001dc8d:	66 0f 38 00 c1	pshufb	%xmm1, %xmm0
10001dc92:	f3 0f 7f 85 f4 f7 ff ff	movdqu	%xmm0, -2060(%rbp)
10001dc9a:	f3 0f 6f 85 04 f8 ff ff	movdqu	-2044(%rbp), %xmm0
10001dca2:	66 0f 38 00 c1	pshufb	%xmm1, %xmm0
10001dca7:	f3 0f 7f 85 04 f8 ff ff	movdqu	%xmm0, -2044(%rbp)
10001dcaf:	f3 0f 6f 85 14 f8 ff ff	movdqu	-2028(%rbp), %xmm0
10001dcb7:	66 0f 38 00 c1	pshufb	%xmm1, %xmm0
10001dcbc:	f3 0f 7f 85 14 f8 ff ff	movdqu	%xmm0, -2028(%rbp)
10001dcc4:	45 85 ff	testl	%r15d, %r15d
10001dcc7:	74 78	je	0x10001dd41
10001dcc9:	44 89 f9	movl	%r15d, %ecx
10001dccc:	31 d2	xorl	%edx, %edx
10001dcce:	31 c0	xorl	%eax, %eax
10001dcd0:	40 8a b4 15 d0 f7 ff ff	movb	-2096(%rbp,%rdx), %sil
10001dcd8:	89 f7	movl	%esi, %edi
10001dcda:	40 c0 ef 04	shrb	$4, %dil
10001dcde:	8d 5f 37	leal	55(%rdi), %ebx
10001dce1:	40 80 cf 30	orb	$48, %dil
10001dce5:	40 80 fe a0	cmpb	$-96, %sil
10001dce9:	0f b6 db	movzbl	%bl, %ebx
10001dcec:	40 0f b6 ff	movzbl	%dil, %edi
10001dcf0:	0f 43 fb	cmovael	%ebx, %edi
10001dcf3:	40 80 e6 0f	andb	$15, %sil
10001dcf7:	8d 5e 37	leal	55(%rsi), %ebx
10001dcfa:	40 80 fe 0a	cmpb	$10, %sil
10001dcfe:	8d 76 30	leal	48(%rsi), %esi
10001dd01:	0f b6 db	movzbl	%bl, %ebx
10001dd04:	40 0f b6 f6	movzbl	%sil, %esi
10001dd08:	0f 43 f3	cmovael	%ebx, %esi
10001dd0b:	40 88 bc 05 d0 df ff ff	movb	%dil, -8240(%rbp,%rax)
10001dd13:	40 88 b4 05 d1 df ff ff	movb	%sil, -8239(%rbp,%rax)
10001dd1b:	89 d6	movl	%edx, %esi
10001dd1d:	f7 d6	notl	%esi
10001dd1f:	40 f6 c6 03	testb	$3, %sil
10001dd23:	75 0e	jne	0x10001dd33
10001dd25:	c6 84 05 d2 df ff ff 20	movb	$32, -8238(%rbp,%rax)
10001dd2d:	48 83 c0 03	addq	$3, %rax
10001dd31:	eb 04	jmp	0x10001dd37
10001dd33:	48 83 c0 02	addq	$2, %rax
10001dd37:	48 ff c2	incq	%rdx
10001dd3a:	48 39 d1	cmpq	%rdx, %rcx
10001dd3d:	75 91	jne	0x10001dcd0
10001dd3f:	eb 02	jmp	0x10001dd43
10001dd41:	31 c0	xorl	%eax, %eax
10001dd43:	c6 84 05 d0 df ff ff 00	movb	$0, -8240(%rbp,%rax)
10001dd4b:	48 8b 3d 76 48 03 00	movq	215158(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001dd52:	48 8b 35 d7 45 03 00	movq	214487(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
10001dd59:	4c 8b 25 c0 ee 01 00	movq	126656(%rip), %r12 ## Objc message: +[NSString stringWithUTF8String:]
10001dd60:	48 8d 95 d0 df ff ff	leaq	-8240(%rbp), %rdx
10001dd67:	41 ff d4	callq	*%r12
10001dd6a:	48 89 c3	movq	%rax, %rbx
10001dd6d:	4c 8b 2d 44 53 03 00	movq	217924(%rip), %r13
10001dd74:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001dd78:	48 8b 35 49 45 03 00	movq	214345(%rip), %rsi ## Objc selector ref: string
10001dd7f:	41 ff d4	callq	*%r12
10001dd82:	48 8b 35 6f 38 03 00	movq	211055(%rip), %rsi ## Objc selector ref: length
10001dd89:	48 89 c7	movq	%rax, %rdi
10001dd8c:	41 ff d4	callq	*%r12
10001dd8f:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001dd93:	48 8b 35 76 3d 03 00	movq	212342(%rip), %rsi ## Objc selector ref: replaceCharactersInRange:withString:
10001dd9a:	48 89 c2	movq	%rax, %rdx
10001dd9d:	31 c9	xorl	%ecx, %ecx
10001dd9f:	49 89 d8	movq	%rbx, %r8
10001dda2:	41 ff d4	callq	*%r12
10001dda5:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001dda9:	48 8b 35 30 3e 03 00	movq	212528(%rip), %rsi ## Objc selector ref: scrollRangeToVisible:
10001ddb0:	31 d2	xorl	%edx, %edx
10001ddb2:	31 c9	xorl	%ecx, %ecx
10001ddb4:	41 ff d4	callq	*%r12
10001ddb7:	48 8b 05 2a 53 03 00	movq	217898(%rip), %rax
10001ddbe:	45 03 3c 06	addl	(%r14,%rax), %r15d
10001ddc2:	45 89 3c 06	movl	%r15d, (%r14,%rax)
10001ddc6:	48 8b 05 f3 52 03 00	movq	217843(%rip), %rax
10001ddcd:	45 3b 3c 06	cmpl	(%r14,%rax), %r15d
10001ddd1:	73 1f	jae	0x10001ddf2
10001ddd3:	48 8b 15 e6 45 03 00	movq	214502(%rip), %rdx ## Objc selector ref: thread:
10001ddda:	48 8b 35 8f 3b 03 00	movq	211855(%rip), %rsi ## Objc selector ref: performSelector:withObject:afterDelay:
10001dde1:	66 0f ef c0	pxor	%xmm0, %xmm0
10001dde5:	4c 89 f7	movq	%r14, %rdi
10001dde8:	31 c9	xorl	%ecx, %ecx
10001ddea:	ff 15 30 ee 01 00	callq	*126512(%rip) ## Objc message: -[%rdi performSelector:withObject:afterDelay:]
10001ddf0:	eb 3e	jmp	0x10001de30
10001ddf2:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001ddf6:	48 8b 35 bb 3f 03 00	movq	212923(%rip), %rsi ## Objc selector ref: setEditable:
10001ddfd:	ba 01 00 00 00	movl	$1, %edx
10001de02:	41 ff d4	callq	*%r12
10001de05:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001de09:	48 8b 35 98 42 03 00	movq	213656(%rip), %rsi ## Objc selector ref: setSelectable:
10001de10:	ba 01 00 00 00	movl	$1, %edx
10001de15:	41 ff d4	callq	*%r12
10001de18:	48 8b 1d c1 52 03 00	movq	217793(%rip), %rbx
10001de1f:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
10001de23:	e8 ea 10 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001de28:	49 c7 04 1e 00 00 00 00	movq	$0, (%r14,%rbx)
10001de30:	48 8b 05 e1 e9 01 00	movq	125409(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001de37:	48 8b 00	movq	(%rax), %rax
10001de3a:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001de3e:	75 46	jne	0x10001de86
10001de40:	48 81 c4 08 20 00 00	addq	$8200, %rsp
10001de47:	5b	popq	%rbx
10001de48:	41 5c	popq	%r12
10001de4a:	41 5d	popq	%r13
10001de4c:	41 5e	popq	%r14
10001de4e:	41 5f	popq	%r15
10001de50:	5d	popq	%rbp
10001de51:	c3	retq
10001de52:	48 8d 3d 07 09 02 00	leaq	133383(%rip), %rdi ## Objc cfstring ref: @"ColorSyncProfileCopyHeader in thread failed
"
10001de59:	31 c0	xorl	%eax, %eax
10001de5b:	e8 9c 14 01 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10001de60:	48 8b 05 b1 e9 01 00	movq	125361(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001de67:	48 8b 00	movq	(%rax), %rax
10001de6a:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001de6e:	75 16	jne	0x10001de86
10001de70:	48 81 c4 08 20 00 00	addq	$8200, %rsp
10001de77:	5b	popq	%rbx
10001de78:	41 5c	popq	%r12
10001de7a:	41 5d	popq	%r13
10001de7c:	41 5e	popq	%r14
10001de7e:	41 5f	popq	%r15
10001de80:	5d	popq	%rbp
10001de81:	e9 52 14 01 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
10001de86:	e8 25 15 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001de8b:	0f 1f 44 00 00	nopl	(%rax,%rax)
10001de90:	51	pushq	%rcx
10001de91:	50	pushq	%rax
10001de92:	48 8b 0d 2f e9 01 00	movq	125231(%rip), %rcx ## literal pool symbol address: ____chkstk_darwin
10001de99:	48 85 c9	testq	%rcx, %rcx
10001de9c:	75 07	jne	0x10001dea5
10001de9e:	48 8d 0d 0b 00 00 00	leaq	11(%rip), %rcx
10001dea5:	ff d1	callq	*%rcx
10001dea7:	58	popq	%rax
10001dea8:	59	popq	%rcx
10001dea9:	c3	retq
10001deaa:	66 0f 1f 44 00 00	nopw	(%rax,%rax)
10001deb0:	48 3d 00 10 00 00	cmpq	$4096, %rax
10001deb6:	48 8d 4c 24 18	leaq	24(%rsp), %rcx
10001debb:	72 17	jb	0x10001ded4
10001debd:	48 81 e9 00 10 00 00	subq	$4096, %rcx
10001dec4:	84 09	testb	%cl, (%rcx)
10001dec6:	48 2d 00 10 00 00	subq	$4096, %rax
10001decc:	48 3d 00 10 00 00	cmpq	$4096, %rax
10001ded2:	77 e9	ja	0x10001debd
10001ded4:	48 29 c1	subq	%rax, %rcx
10001ded7:	84 09	testb	%cl, (%rcx)
10001ded9:	c3	retq
10001deda:	55	pushq	%rbp
10001dedb:	48 89 e5	movq	%rsp, %rbp
10001dede:	41 57	pushq	%r15
10001dee0:	41 56	pushq	%r14
10001dee2:	41 55	pushq	%r13
10001dee4:	41 54	pushq	%r12
10001dee6:	53	pushq	%rbx
10001dee7:	48 81 ec c8 00 00 00	subq	$200, %rsp
10001deee:	48 89 fb	movq	%rdi, %rbx
10001def1:	48 8b 3d 28 47 03 00	movq	214824(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10001def8:	48 8b 35 e1 36 03 00	movq	210657(%rip), %rsi ## Objc selector ref: labelColor
10001deff:	4c 8b 2d 1a ed 01 00	movq	126234(%rip), %r13 ## Objc message: +[NSColor labelColor]
10001df06:	41 ff d5	callq	*%r13
10001df09:	4c 8b 35 60 3d 03 00	movq	212320(%rip), %r14 ## Objc selector ref: set
10001df10:	48 89 c7	movq	%rax, %rdi
10001df13:	4c 89 f6	movq	%r14, %rsi
10001df16:	41 ff d5	callq	*%r13
10001df19:	48 85 db	testq	%rbx, %rbx
10001df1c:	74 43	je	0x10001df61
10001df1e:	4c 8b 3d ab 2e 03 00	movq	208555(%rip), %r15 ## Objc selector ref: bounds
10001df25:	4c 8d 65 90	leaq	-112(%rbp), %r12
10001df29:	4c 89 e7	movq	%r12, %rdi
10001df2c:	48 89 de	movq	%rbx, %rsi
10001df2f:	4c 89 fa	movq	%r15, %rdx
10001df32:	e8 ab 15 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001df37:	41 0f 10 04 24	movups	(%r12), %xmm0
10001df3c:	41 0f 10 4c 24 10	movups	16(%r12), %xmm1
10001df42:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001df47:	0f 11 04 24	movups	%xmm0, (%rsp)
10001df4b:	e8 94 13 01 00	callq	0x10002f2e4 ## symbol stub for: _NSFrameRect
10001df50:	48 8d 7d b0	leaq	-80(%rbp), %rdi
10001df54:	48 89 de	movq	%rbx, %rsi
10001df57:	4c 89 fa	movq	%r15, %rdx
10001df5a:	e8 83 15 01 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10001df5f:	eb 2c	jmp	0x10001df8d
10001df61:	0f 57 c0	xorps	%xmm0, %xmm0
10001df64:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10001df68:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10001df6c:	0f 28 45 90	movaps	-112(%rbp), %xmm0
10001df70:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
10001df74:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001df79:	0f 11 04 24	movups	%xmm0, (%rsp)
10001df7d:	e8 62 13 01 00	callq	0x10002f2e4 ## symbol stub for: _NSFrameRect
10001df82:	0f 57 c0	xorps	%xmm0, %xmm0
10001df85:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10001df89:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10001df8d:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10001df91:	0f 28 4d c0	movaps	-64(%rbp), %xmm1
10001df95:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001df9a:	0f 11 04 24	movups	%xmm0, (%rsp)
10001df9e:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10001dfa5:	f2 0f 10 05 fb a3 01 00	movsd	107515(%rip), %xmm0
10001dfad:	0f 57 c9	xorps	%xmm1, %xmm1
10001dfb0:	48 89 df	movq	%rbx, %rdi
10001dfb3:	e8 38 13 01 00	callq	0x10002f2f0 ## symbol stub for: _NSInsetRect
10001dfb8:	f2 0f 10 43 10	movsd	16(%rbx), %xmm0
10001dfbd:	66 0f 2e 05 0b b3 01 00	ucomisd	111371(%rip), %xmm0
10001dfc5:	0f 86 bb 00 00 00	jbe	0x10001e086
10001dfcb:	48 8d 9d 70 ff ff ff	leaq	-144(%rbp), %rbx
10001dfd2:	0f 10 03	movups	(%rbx), %xmm0
10001dfd5:	0f 10 4b 10	movups	16(%rbx), %xmm1
10001dfd9:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001dfde:	0f 11 04 24	movups	%xmm0, (%rsp)
10001dfe2:	4c 8d bd 30 ff ff ff	leaq	-208(%rbp), %r15
10001dfe9:	f2 0f 10 05 17 a0 01 00	movsd	106519(%rip), %xmm0
10001dff1:	ba 03 00 00 00	movl	$3, %edx
10001dff6:	4c 89 ff	movq	%r15, %rdi
10001dff9:	48 89 de	movq	%rbx, %rsi
10001dffc:	e8 dd 12 01 00	callq	0x10002f2de ## symbol stub for: _NSDivideRect
10001e001:	0f 10 03	movups	(%rbx), %xmm0
10001e004:	0f 10 4b 10	movups	16(%rbx), %xmm1
10001e008:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001e00d:	0f 11 04 24	movups	%xmm0, (%rsp)
10001e011:	4c 8d a5 50 ff ff ff	leaq	-176(%rbp), %r12
10001e018:	ba 01 00 00 00	movl	$1, %edx
10001e01d:	4c 89 e7	movq	%r12, %rdi
10001e020:	48 89 de	movq	%rbx, %rsi
10001e023:	f2 0f 10 05 dd 9f 01 00	movsd	106461(%rip), %xmm0
10001e02b:	e8 ae 12 01 00	callq	0x10002f2de ## symbol stub for: _NSDivideRect
10001e030:	48 8b 3d e9 45 03 00	movq	214505(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10001e037:	48 8b 35 5a 2d 03 00	movq	208218(%rip), %rsi ## Objc selector ref: blackColor
10001e03e:	41 ff d5	callq	*%r13
10001e041:	48 89 c7	movq	%rax, %rdi
10001e044:	4c 89 f6	movq	%r14, %rsi
10001e047:	41 ff d5	callq	*%r13
10001e04a:	41 0f 10 07	movups	(%r15), %xmm0
10001e04e:	41 0f 10 4f 10	movups	16(%r15), %xmm1
10001e053:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001e058:	0f 11 04 24	movups	%xmm0, (%rsp)
10001e05c:	bf 08 00 00 00	movl	$8, %edi
10001e061:	e8 a8 12 01 00	callq	0x10002f30e ## symbol stub for: _NSRectFillUsingOperation
10001e066:	66 41 0f 10 04 24	movupd	(%r12), %xmm0
10001e06c:	41 0f 10 4c 24 10	movups	16(%r12), %xmm1
10001e072:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001e077:	66 0f 11 04 24	movupd	%xmm0, (%rsp)
10001e07c:	bf 08 00 00 00	movl	$8, %edi
10001e081:	e8 88 12 01 00	callq	0x10002f30e ## symbol stub for: _NSRectFillUsingOperation
10001e086:	48 81 c4 c8 00 00 00	addq	$200, %rsp
10001e08d:	5b	popq	%rbx
10001e08e:	41 5c	popq	%r12
10001e090:	41 5d	popq	%r13
10001e092:	41 5e	popq	%r14
10001e094:	41 5f	popq	%r15
10001e096:	5d	popq	%rbp
10001e097:	c3	retq
10001e098:	55	pushq	%rbp
10001e099:	48 89 e5	movq	%rsp, %rbp
10001e09c:	81 f1 32 33 66 73	xorl	$1936077618, %ecx
10001e0a2:	81 f2 64 61 68 63	xorl	$1667785060, %edx
10001e0a8:	09 ca	orl	%ecx, %edx
10001e0aa:	41 83 f0 2c	xorl	$44, %r8d
10001e0ae:	31 c0	xorl	%eax, %eax
10001e0b0:	41 09 d0	orl	%edx, %r8d
10001e0b3:	0f 94 c0	sete	%al
10001e0b6:	5d	popq	%rbp
10001e0b7:	c3	retq
10001e0b8:	55	pushq	%rbp
10001e0b9:	48 89 e5	movq	%rsp, %rbp
10001e0bc:	53	pushq	%rbx
10001e0bd:	50	pushq	%rax
10001e0be:	48 8b 3d db 44 03 00	movq	214235(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001e0c5:	48 8b 35 1c 36 03 00	movq	210460(%rip), %rsi ## Objc selector ref: mainBundle
10001e0cc:	48 8b 1d 4d eb 01 00	movq	125773(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001e0d3:	ff d3	callq	*%rbx
10001e0d5:	48 8b 35 84 35 03 00	movq	210308(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001e0dc:	48 8d 15 9d 06 02 00	leaq	132765(%rip), %rdx ## Objc cfstring ref: @"Chromatic adaptation matrix"
10001e0e3:	48 8d 0d b6 ed 01 00	leaq	126390(%rip), %rcx ## Objc cfstring ref: @""
10001e0ea:	48 89 c7	movq	%rax, %rdi
10001e0ed:	45 31 c0	xorl	%r8d, %r8d
10001e0f0:	48 89 d8	movq	%rbx, %rax
10001e0f3:	48 83 c4 08	addq	$8, %rsp
10001e0f7:	5b	popq	%rbx
10001e0f8:	5d	popq	%rbp
10001e0f9:	ff e0	jmpq	*%rax
10001e0fb:	55	pushq	%rbp
10001e0fc:	48 89 e5	movq	%rsp, %rbp
10001e0ff:	41 57	pushq	%r15
10001e101:	41 56	pushq	%r14
10001e103:	41 55	pushq	%r13
10001e105:	41 54	pushq	%r12
10001e107:	53	pushq	%rbx
10001e108:	48 83 ec 18	subq	$24, %rsp
10001e10c:	49 89 d6	movq	%rdx, %r14
10001e10f:	49 89 ff	movq	%rdi, %r15
10001e112:	89 cf	movl	%ecx, %edi
10001e114:	e8 3b 11 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001e119:	48 89 c3	movq	%rax, %rbx
10001e11c:	4c 89 f7	movq	%r14, %rdi
10001e11f:	48 89 c6	movq	%rax, %rsi
10001e122:	e8 57 11 01 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001e127:	49 89 c6	movq	%rax, %r14
10001e12a:	48 89 df	movq	%rbx, %rdi
10001e12d:	e8 e0 0d 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e132:	4d 85 f6	testq	%r14, %r14
10001e135:	0f 84 d1 00 00 00	je	0x10001e20c
10001e13b:	4c 89 75 d0	movq	%r14, -48(%rbp)
10001e13f:	4c 89 f7	movq	%r14, %rdi
10001e142:	e8 5f 0d 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001e147:	48 83 f8 2c	cmpq	$44, %rax
10001e14b:	0f 82 a4 00 00 00	jb	0x10001e1f5
10001e151:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001e155:	4c 89 7d c8	movq	%r15, -56(%rbp)
10001e159:	e8 42 0d 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001e15e:	48 8b 75 c8	movq	-56(%rbp), %rsi
10001e162:	48 85 c0	testq	%rax, %rax
10001e165:	0f 84 8a 00 00 00	je	0x10001e1f5
10001e16b:	49 89 c5	movq	%rax, %r13
10001e16e:	49 c7 c4 ff ff ff ff	movq	$-1, %r12
10001e175:	48 8b 1d bc 3c 03 00	movq	212156(%rip), %rbx ## Objc selector ref: setFloatValue:
10001e17c:	45 31 f6	xorl	%r14d, %r14d
10001e17f:	4c 8b 3d 9a ea 01 00	movq	125594(%rip), %r15 ## Objc message: -[%rdi setFloatValue:]
10001e186:	4c 89 f0	movq	%r14, %rax
10001e189:	48 b9 ab aa aa aa aa aa aa aa	movabsq	$-6148914691236517205, %rcx
10001e193:	48 f7 e1	mulq	%rcx
10001e196:	48 d1 ea	shrq	%rdx
10001e199:	48 8d 04 52	leaq	(%rdx,%rdx,2), %rax
10001e19d:	4c 89 f1	movq	%r14, %rcx
10001e1a0:	48 29 c1	subq	%rax, %rcx
10001e1a3:	48 8b 05 46 4f 03 00	movq	216902(%rip), %rax
10001e1aa:	48 8b 3c 06	movq	(%rsi,%rax), %rdi
10001e1ae:	41 0f b6 c6	movzbl	%r14b, %eax
10001e1b2:	69 d0 ab 00 00 00	imull	$171, %eax, %edx
10001e1b8:	48 c1 ea 09	shrq	$9, %rdx
10001e1bc:	48 8b 35 75 2c 03 00	movq	207989(%rip), %rsi ## Objc selector ref: cellAtRow:column:
10001e1c3:	41 ff d7	callq	*%r15
10001e1c6:	43 8b 4c a5 0c	movl	12(%r13,%r12,4), %ecx
10001e1cb:	0f c9	bswapl	%ecx
10001e1cd:	0f 57 c0	xorps	%xmm0, %xmm0
10001e1d0:	f3 0f 2a c1	cvtsi2ss	%ecx, %xmm0
10001e1d4:	f3 0f 59 05 fc b0 01 00	mulss	110844(%rip), %xmm0
10001e1dc:	48 89 c7	movq	%rax, %rdi
10001e1df:	48 89 de	movq	%rbx, %rsi
10001e1e2:	41 ff d7	callq	*%r15
10001e1e5:	48 8b 75 c8	movq	-56(%rbp), %rsi
10001e1e9:	49 ff c6	incq	%r14
10001e1ec:	49 ff c4	incq	%r12
10001e1ef:	49 83 fc 08	cmpq	$8, %r12
10001e1f3:	72 91	jb	0x10001e186
10001e1f5:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001e1f9:	48 83 c4 18	addq	$24, %rsp
10001e1fd:	5b	popq	%rbx
10001e1fe:	41 5c	popq	%r12
10001e200:	41 5d	popq	%r13
10001e202:	41 5e	popq	%r14
10001e204:	41 5f	popq	%r15
10001e206:	5d	popq	%rbp
10001e207:	e9 06 0d 01 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
10001e20c:	48 83 c4 18	addq	$24, %rsp
10001e210:	5b	popq	%rbx
10001e211:	41 5c	popq	%r12
10001e213:	41 5d	popq	%r13
10001e215:	41 5e	popq	%r14
10001e217:	41 5f	popq	%r15
10001e219:	5d	popq	%rbp
10001e21a:	c3	retq
10001e21b:	55	pushq	%rbp
10001e21c:	48 89 e5	movq	%rsp, %rbp
10001e21f:	53	pushq	%rbx
10001e220:	48 83 ec 18	subq	$24, %rsp
10001e224:	48 89 fb	movq	%rdi, %rbx
10001e227:	48 8b 05 ca 4e 03 00	movq	216778(%rip), %rax
10001e22e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001e232:	48 85 ff	testq	%rdi, %rdi
10001e235:	74 05	je	0x10001e23c
10001e237:	e8 d6 0c 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e23c:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001e240:	48 89 1f	movq	%rbx, (%rdi)
10001e243:	48 8b 05 de 45 03 00	movq	214494(%rip), %rax ## Objc class ref: DescTag
10001e24a:	48 89 47 08	movq	%rax, 8(%rdi)
10001e24e:	48 8b 35 fb 2d 03 00	movq	208379(%rip), %rsi ## Objc selector ref: dealloc
10001e255:	e8 82 12 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001e25a:	48 83 c4 18	addq	$24, %rsp
10001e25e:	5b	popq	%rbx
10001e25f:	5d	popq	%rbp
10001e260:	c3	retq
10001e261:	55	pushq	%rbp
10001e262:	48 89 e5	movq	%rsp, %rbp
10001e265:	31 c0	xorl	%eax, %eax
10001e267:	81 f9 63 73 65 64	cmpl	$1684370275, %ecx
10001e26d:	0f 94 c0	sete	%al
10001e270:	5d	popq	%rbp
10001e271:	c3	retq
10001e272:	55	pushq	%rbp
10001e273:	48 89 e5	movq	%rsp, %rbp
10001e276:	41 56	pushq	%r14
10001e278:	53	pushq	%rbx
10001e279:	81 fa 6c 63 73 64	cmpl	$1685283692, %edx
10001e27f:	7f 21	jg	0x10001e2a2
10001e281:	81 fa 63 73 65 64	cmpl	$1684370275, %edx
10001e287:	74 3a	je	0x10001e2c3
10001e289:	81 fa 64 64 6d 64	cmpl	$1684890724, %edx
10001e28f:	74 3b	je	0x10001e2cc
10001e291:	81 fa 64 6e 6d 64	cmpl	$1684893284, %edx
10001e297:	75 4e	jne	0x10001e2e7
10001e299:	4c 8d 35 40 05 02 00	leaq	132416(%rip), %r14 ## Objc cfstring ref: @"Localized device manufacturer description strings"
10001e2a0:	eb 4c	jmp	0x10001e2ee
10001e2a2:	81 fa 64 65 75 76	cmpl	$1987405156, %edx
10001e2a8:	74 2b	je	0x10001e2d5
10001e2aa:	81 fa 64 72 63 73	cmpl	$1935897188, %edx
10001e2b0:	74 2c	je	0x10001e2de
10001e2b2:	81 fa 6d 63 73 64	cmpl	$1685283693, %edx
10001e2b8:	75 2d	jne	0x10001e2e7
10001e2ba:	4c 8d 35 ff 04 02 00	leaq	132351(%rip), %r14 ## Objc cfstring ref: @"Apple localized description strings"
10001e2c1:	eb 2b	jmp	0x10001e2ee
10001e2c3:	4c 8d 35 d6 04 02 00	leaq	132310(%rip), %r14 ## Objc cfstring ref: @"Localized description strings"
10001e2ca:	eb 22	jmp	0x10001e2ee
10001e2cc:	4c 8d 35 2d 05 02 00	leaq	132397(%rip), %r14 ## Objc cfstring ref: @"Localized device model description strings"
10001e2d3:	eb 19	jmp	0x10001e2ee
10001e2d5:	4c 8d 35 64 05 02 00	leaq	132452(%rip), %r14 ## Objc cfstring ref: @"Localized viewing conditions description strings"
10001e2dc:	eb 10	jmp	0x10001e2ee
10001e2de:	4c 8d 35 3b 05 02 00	leaq	132411(%rip), %r14 ## Objc cfstring ref: @"Localized screening description strings"
10001e2e5:	eb 07	jmp	0x10001e2ee
10001e2e7:	4c 8d 35 72 05 02 00	leaq	132466(%rip), %r14 ## Objc cfstring ref: @"Localized strings"
10001e2ee:	48 8b 3d ab 42 03 00	movq	213675(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001e2f5:	48 8b 35 ec 33 03 00	movq	209900(%rip), %rsi ## Objc selector ref: mainBundle
10001e2fc:	48 8b 1d 1d e9 01 00	movq	125213(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001e303:	ff d3	callq	*%rbx
10001e305:	48 8b 35 54 33 03 00	movq	209748(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001e30c:	48 8d 0d 8d eb 01 00	leaq	125837(%rip), %rcx ## Objc cfstring ref: @""
10001e313:	48 89 c7	movq	%rax, %rdi
10001e316:	4c 89 f2	movq	%r14, %rdx
10001e319:	45 31 c0	xorl	%r8d, %r8d
10001e31c:	48 89 d8	movq	%rbx, %rax
10001e31f:	5b	popq	%rbx
10001e320:	41 5e	popq	%r14
10001e322:	5d	popq	%rbp
10001e323:	ff e0	jmpq	*%rax
10001e325:	55	pushq	%rbp
10001e326:	48 89 e5	movq	%rsp, %rbp
10001e329:	41 57	pushq	%r15
10001e32b:	41 56	pushq	%r14
10001e32d:	41 55	pushq	%r13
10001e32f:	41 54	pushq	%r12
10001e331:	53	pushq	%rbx
10001e332:	48 81 ec 38 08 00 00	subq	$2104, %rsp
10001e339:	41 89 cc	movl	%ecx, %r12d
10001e33c:	49 89 d6	movq	%rdx, %r14
10001e33f:	48 89 bd a8 f7 ff ff	movq	%rdi, -2136(%rbp)
10001e346:	48 8b 05 cb e4 01 00	movq	124107(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001e34d:	48 8b 00	movq	(%rax), %rax
10001e350:	48 89 45 d0	movq	%rax, -48(%rbp)
10001e354:	89 cf	movl	%ecx, %edi
10001e356:	e8 f9 0e 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001e35b:	48 89 c3	movq	%rax, %rbx
10001e35e:	4c 89 f7	movq	%r14, %rdi
10001e361:	48 89 c6	movq	%rax, %rsi
10001e364:	e8 15 0f 01 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001e369:	49 89 c7	movq	%rax, %r15
10001e36c:	48 89 df	movq	%rbx, %rdi
10001e36f:	e8 9e 0b 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e374:	4d 85 ff	testq	%r15, %r15
10001e377:	0f 84 8e 02 00 00	je	0x10001e60b
10001e37d:	4c 89 ff	movq	%r15, %rdi
10001e380:	e8 21 0b 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001e385:	49 89 c5	movq	%rax, %r13
10001e388:	31 ff	xorl	%edi, %edi
10001e38a:	31 f6	xorl	%esi, %esi
10001e38c:	4c 89 fa	movq	%r15, %rdx
10001e38f:	e8 00 0b 01 00	callq	0x10002ee94 ## symbol stub for: _CFDataCreateMutableCopy
10001e394:	48 89 c3	movq	%rax, %rbx
10001e397:	4c 89 ff	movq	%r15, %rdi
10001e39a:	e8 73 0b 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e39f:	48 85 db	testq	%rbx, %rbx
10001e3a2:	0f 84 63 02 00 00	je	0x10001e60b
10001e3a8:	48 89 df	movq	%rbx, %rdi
10001e3ab:	4c 89 ee	movq	%r13, %rsi
10001e3ae:	e8 ff 0a 01 00	callq	0x10002eeb2 ## symbol stub for: _CFDataSetLength
10001e3b3:	48 8b 05 46 4d 03 00	movq	216390(%rip), %rax
10001e3ba:	48 8b 8d a8 f7 ff ff	movq	-2136(%rbp), %rcx
10001e3c1:	44 89 24 01	movl	%r12d, (%rcx,%rax)
10001e3c5:	49 89 cc	movq	%rcx, %r12
10001e3c8:	4c 8b 3d 29 4d 03 00	movq	216361(%rip), %r15
10001e3cf:	4a 8b 3c 39	movq	(%rcx,%r15), %rdi
10001e3d3:	48 85 ff	testq	%rdi, %rdi
10001e3d6:	74 05	je	0x10001e3dd
10001e3d8:	e8 35 0b 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e3dd:	4c 89 f7	movq	%r14, %rdi
10001e3e0:	e8 33 0b 01 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10001e3e5:	4b 89 04 3c	movq	%rax, (%r12,%r15)
10001e3e9:	48 89 df	movq	%rbx, %rdi
10001e3ec:	e8 bb 0a 01 00	callq	0x10002eeac ## symbol stub for: _CFDataGetMutableBytePtr
10001e3f1:	49 89 c6	movq	%rax, %r14
10001e3f4:	49 01 c5	addq	%rax, %r13
10001e3f7:	44 8b 78 08	movl	8(%rax), %r15d
10001e3fb:	41 0f cf	bswapl	%r15d
10001e3fe:	4c 01 f8	addq	%r15, %rax
10001e401:	48 83 c0 08	addq	$8, %rax
10001e405:	4c 39 e8	cmpq	%r13, %rax
10001e408:	0f 83 1f 02 00 00	jae	0x10001e62d
10001e40e:	49 83 c6 0c	addq	$12, %r14
10001e412:	4c 8d 25 87 ea 01 00	leaq	125575(%rip), %r12 ## Objc cfstring ref: @""
10001e419:	4c 89 e2	movq	%r12, %rdx
10001e41c:	41 83 ff 02	cmpl	$2, %r15d
10001e420:	72 1a	jb	0x10001e43c
10001e422:	48 8b 3d 9f 41 03 00	movq	213407(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001e429:	48 8b 35 00 3f 03 00	movq	212736(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
10001e430:	4c 89 f2	movq	%r14, %rdx
10001e433:	ff 15 e7 e7 01 00	callq	*124903(%rip) ## Objc message: +[NSString stringWithUTF8String:]
10001e439:	48 89 c2	movq	%rax, %rdx
10001e43c:	4b 8d 04 3e	leaq	(%r14,%r15), %rax
10001e440:	43 8b 5c 3e 04	movl	4(%r14,%r15), %ebx
10001e445:	0f cb	bswapl	%ebx
10001e447:	48 01 d8	addq	%rbx, %rax
10001e44a:	48 83 c0 04	addq	$4, %rax
10001e44e:	4c 39 e8	cmpq	%r13, %rax
10001e451:	0f 83 ec 01 00 00	jae	0x10001e643
10001e457:	4d 01 f7	addq	%r14, %r15
10001e45a:	49 83 c7 04	addq	$4, %r15
10001e45e:	41 8a 47 04	movb	4(%r15), %al
10001e462:	49 83 c7 04	addq	$4, %r15
10001e466:	3c ff	cmpb	$-1, %al
10001e468:	48 89 95 b0 f7 ff ff	movq	%rdx, -2128(%rbp)
10001e46f:	74 13	je	0x10001e484
10001e471:	3c fe	cmpb	$-2, %al
10001e473:	75 36	jne	0x10001e4ab
10001e475:	41 80 7f 01 ff	cmpb	$-1, 1(%r15)
10001e47a:	75 2f	jne	0x10001e4ab
10001e47c:	49 83 c7 02	addq	$2, %r15
10001e480:	ff cb	decl	%ebx
10001e482:	eb 27	jmp	0x10001e4ab
10001e484:	41 80 7f 01 fe	cmpb	$-2, 1(%r15)
10001e489:	75 20	jne	0x10001e4ab
10001e48b:	49 83 c7 02	addq	$2, %r15
10001e48f:	ff cb	decl	%ebx
10001e491:	48 8d 14 1b	leaq	(%rbx,%rbx), %rdx
10001e495:	48 8d bd c0 f7 ff ff	leaq	-2112(%rbp), %rdi
10001e49c:	b9 02 08 00 00	movl	$2050, %ecx
10001e4a1:	4c 89 fe	movq	%r15, %rsi
10001e4a4:	e8 fb 0e 01 00	callq	0x10002f3a4 ## symbol stub for: ___memcpy_chk
10001e4a9:	eb 37	jmp	0x10001e4e2
10001e4ab:	48 8d 14 1b	leaq	(%rbx,%rbx), %rdx
10001e4af:	48 8d bd c0 f7 ff ff	leaq	-2112(%rbp), %rdi
10001e4b6:	b9 02 08 00 00	movl	$2050, %ecx
10001e4bb:	4c 89 fe	movq	%r15, %rsi
10001e4be:	e8 e1 0e 01 00	callq	0x10002f3a4 ## symbol stub for: ___memcpy_chk
10001e4c3:	85 db	testl	%ebx, %ebx
10001e4c5:	74 53	je	0x10001e51a
10001e4c7:	31 c0	xorl	%eax, %eax
10001e4c9:	41 0f b7 0c 47	movzwl	(%r15,%rax,2), %ecx
10001e4ce:	66 c1 c1 08	rolw	$8, %cx
10001e4d2:	66 89 8c 45 c0 f7 ff ff	movw	%cx, -2112(%rbp,%rax,2)
10001e4da:	48 ff c0	incq	%rax
10001e4dd:	48 39 c3	cmpq	%rax, %rbx
10001e4e0:	75 e7	jne	0x10001e4c9
10001e4e2:	4d 89 e6	movq	%r12, %r14
10001e4e5:	83 fb 02	cmpl	$2, %ebx
10001e4e8:	72 20	jb	0x10001e50a
10001e4ea:	48 8b 3d d7 40 03 00	movq	213207(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001e4f1:	8d 4b ff	leal	-1(%rbx), %ecx
10001e4f4:	48 8b 35 25 3e 03 00	movq	212517(%rip), %rsi ## Objc selector ref: stringWithCharacters:length:
10001e4fb:	48 8d 95 c0 f7 ff ff	leaq	-2112(%rbp), %rdx
10001e502:	ff 15 18 e7 01 00	callq	*124696(%rip) ## Objc message: +[NSString stringWithCharacters:length:]
10001e508:	eb 07	jmp	0x10001e511
10001e50a:	48 8d 05 8f e9 01 00	leaq	125327(%rip), %rax ## Objc cfstring ref: @""
10001e511:	48 89 85 b8 f7 ff ff	movq	%rax, -2120(%rbp)
10001e518:	eb 13	jmp	0x10001e52d
10001e51a:	4d 89 e6	movq	%r12, %r14
10001e51d:	48 8d 05 7c e9 01 00	leaq	125308(%rip), %rax ## Objc cfstring ref: @""
10001e524:	48 89 85 b8 f7 ff ff	movq	%rax, -2120(%rbp)
10001e52b:	31 db	xorl	%ebx, %ebx
10001e52d:	01 db	addl	%ebx, %ebx
10001e52f:	45 0f b7 24 1f	movzwl	(%r15,%rbx), %r12d
10001e534:	66 41 c1 c4 08	rolw	$8, %r12w
10001e539:	49 8d 0c 1f	leaq	(%r15,%rbx), %rcx
10001e53d:	41 0f b6 44 1f 02	movzbl	2(%r15,%rbx), %eax
10001e543:	48 01 c1	addq	%rax, %rcx
10001e546:	48 83 c1 02	addq	$2, %rcx
10001e54a:	4c 39 e9	cmpq	%r13, %rcx
10001e54d:	73 4a	jae	0x10001e599
10001e54f:	3c 02	cmpb	$2, %al
10001e551:	72 46	jb	0x10001e599
10001e553:	4c 01 fb	addq	%r15, %rbx
10001e556:	48 83 c3 02	addq	$2, %rbx
10001e55a:	48 ff c3	incq	%rbx
10001e55d:	4c 8d bd a4 f7 ff ff	leaq	-2140(%rbp), %r15
10001e564:	41 c7 07 00 00 00 00	movl	$0, (%r15)
10001e56b:	41 0f bf fc	movswl	%r12w, %edi
10001e56f:	be 80 ff ff ff	movl	$4294967168, %esi
10001e574:	ba 80 ff ff ff	movl	$4294967168, %edx
10001e579:	4c 89 f9	movq	%r15, %rcx
10001e57c:	e8 4b 0d 01 00	callq	0x10002f2cc ## symbol stub for: _GetTextEncodingFromScriptInfo
10001e581:	41 8b 17	movl	(%r15), %edx
10001e584:	31 ff	xorl	%edi, %edi
10001e586:	48 89 de	movq	%rbx, %rsi
10001e589:	e8 ae 09 01 00	callq	0x10002ef3c ## symbol stub for: _CFStringCreateWithCString
10001e58e:	49 89 c6	movq	%rax, %r14
10001e591:	48 89 c7	movq	%rax, %rdi
10001e594:	e8 31 0f 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001e599:	48 8b 95 b0 f7 ff ff	movq	-2128(%rbp), %rdx
10001e5a0:	48 8b 05 61 4b 03 00	movq	215905(%rip), %rax
10001e5a7:	48 8b 9d a8 f7 ff ff	movq	-2136(%rbp), %rbx
10001e5ae:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e5b2:	4c 8b 3d 37 3b 03 00	movq	211767(%rip), %r15 ## Objc selector ref: setStringValue:
10001e5b9:	4c 8b 2d 60 e6 01 00	movq	124512(%rip), %r13 ## Objc message: -[%rdi setStringValue:]
10001e5c0:	4c 89 fe	movq	%r15, %rsi
10001e5c3:	41 ff d5	callq	*%r13
10001e5c6:	48 8b 05 43 4b 03 00	movq	215875(%rip), %rax
10001e5cd:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e5d1:	4c 89 fe	movq	%r15, %rsi
10001e5d4:	48 8b 95 b8 f7 ff ff	movq	-2120(%rbp), %rdx
10001e5db:	41 ff d5	callq	*%r13
10001e5de:	48 8b 05 33 4b 03 00	movq	215859(%rip), %rax
10001e5e5:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e5e9:	4c 89 fe	movq	%r15, %rsi
10001e5ec:	4c 89 f2	movq	%r14, %rdx
10001e5ef:	41 ff d5	callq	*%r13
10001e5f2:	48 8b 05 27 4b 03 00	movq	215847(%rip), %rax
10001e5f9:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e5fd:	41 0f bf d4	movswl	%r12w, %edx
10001e601:	48 8b 35 f8 38 03 00	movq	211192(%rip), %rsi ## Objc selector ref: setIntValue:
10001e608:	41 ff d5	callq	*%r13
10001e60b:	48 8b 05 06 e2 01 00	movq	123398(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001e612:	48 8b 00	movq	(%rax), %rax
10001e615:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001e619:	75 37	jne	0x10001e652
10001e61b:	48 81 c4 38 08 00 00	addq	$2104, %rsp
10001e622:	5b	popq	%rbx
10001e623:	41 5c	popq	%r12
10001e625:	41 5d	popq	%r13
10001e627:	41 5e	popq	%r14
10001e629:	41 5f	popq	%r15
10001e62b:	5d	popq	%rbp
10001e62c:	c3	retq
10001e62d:	4c 8d 35 6c e8 01 00	leaq	125036(%rip), %r14 ## Objc cfstring ref: @""
10001e634:	4c 89 b5 b8 f7 ff ff	movq	%r14, -2120(%rbp)
10001e63b:	4c 89 f2	movq	%r14, %rdx
10001e63e:	e9 5d ff ff ff	jmp	0x10001e5a0
10001e643:	4d 89 e6	movq	%r12, %r14
10001e646:	4c 89 b5 b8 f7 ff ff	movq	%r14, -2120(%rbp)
10001e64d:	e9 4e ff ff ff	jmp	0x10001e5a0
10001e652:	e8 59 0d 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001e657:	55	pushq	%rbp
10001e658:	48 89 e5	movq	%rsp, %rbp
10001e65b:	41 56	pushq	%r14
10001e65d:	53	pushq	%rbx
10001e65e:	48 89 fb	movq	%rdi, %rbx
10001e661:	48 8b 35 f0 31 03 00	movq	209392(%rip), %rsi ## Objc selector ref: object
10001e668:	48 89 d7	movq	%rdx, %rdi
10001e66b:	ff 15 af e5 01 00	callq	*124335(%rip) ## Objc message: -[%rdi object]
10001e671:	48 8b 0d a8 4a 03 00	movq	215720(%rip), %rcx
10001e678:	48 39 04 0b	cmpq	%rax, (%rbx,%rcx)
10001e67c:	75 10	jne	0x10001e68e
10001e67e:	48 8b 35 eb 24 03 00	movq	206059(%rip), %rsi ## Objc selector ref: CleanMacName
10001e685:	48 89 df	movq	%rbx, %rdi
10001e688:	ff 15 92 e5 01 00	callq	*124306(%rip) ## Objc message: -[%rdi CleanMacName]
10001e68e:	4c 8b 35 93 4a 03 00	movq	215699(%rip), %r14
10001e695:	42 80 3c 33 00	cmpb	$0, (%rbx,%r14)
10001e69a:	74 10	je	0x10001e6ac
10001e69c:	48 8b 35 3d 25 03 00	movq	206141(%rip), %rsi ## Objc selector ref: UpdateDescTag
10001e6a3:	48 89 df	movq	%rbx, %rdi
10001e6a6:	ff 15 74 e5 01 00	callq	*124276(%rip) ## Objc message: -[%rdi UpdateDescTag]
10001e6ac:	42 c6 04 33 00	movb	$0, (%rbx,%r14)
10001e6b1:	5b	popq	%rbx
10001e6b2:	41 5e	popq	%r14
10001e6b4:	5d	popq	%rbp
10001e6b5:	c3	retq
10001e6b6:	55	pushq	%rbp
10001e6b7:	48 89 e5	movq	%rsp, %rbp
10001e6ba:	41 56	pushq	%r14
10001e6bc:	53	pushq	%rbx
10001e6bd:	48 89 fb	movq	%rdi, %rbx
10001e6c0:	48 8b 35 91 31 03 00	movq	209297(%rip), %rsi ## Objc selector ref: object
10001e6c7:	48 89 d7	movq	%rdx, %rdi
10001e6ca:	ff 15 50 e5 01 00	callq	*124240(%rip) ## Objc message: -[%rdi object]
10001e6d0:	49 89 c6	movq	%rax, %r14
10001e6d3:	48 8b 05 4e 4a 03 00	movq	215630(%rip), %rax
10001e6da:	c6 04 03 01	movb	$1, (%rbx,%rax)
10001e6de:	48 8b 05 23 4a 03 00	movq	215587(%rip), %rax
10001e6e5:	4c 39 34 03	cmpq	%r14, (%rbx,%rax)
10001e6e9:	75 10	jne	0x10001e6fb
10001e6eb:	48 8b 35 76 24 03 00	movq	205942(%rip), %rsi ## Objc selector ref: CleanAsciiName
10001e6f2:	48 89 df	movq	%rbx, %rdi
10001e6f5:	ff 15 25 e5 01 00	callq	*124197(%rip) ## Objc message: -[%rdi CleanAsciiName]
10001e6fb:	48 8b 05 16 4a 03 00	movq	215574(%rip), %rax
10001e702:	4c 39 34 03	cmpq	%r14, (%rbx,%rax)
10001e706:	74 05	je	0x10001e70d
10001e708:	5b	popq	%rbx
10001e709:	41 5e	popq	%r14
10001e70b:	5d	popq	%rbp
10001e70c:	c3	retq
10001e70d:	48 8b 35 5c 24 03 00	movq	205916(%rip), %rsi ## Objc selector ref: CleanMacName
10001e714:	48 89 df	movq	%rbx, %rdi
10001e717:	5b	popq	%rbx
10001e718:	41 5e	popq	%r14
10001e71a:	5d	popq	%rbp
10001e71b:	ff 25 ff e4 01 00	jmpq	*124159(%rip) ## Objc message: -[%rdi CleanMacName]
10001e721:	55	pushq	%rbp
10001e722:	48 89 e5	movq	%rsp, %rbp
10001e725:	41 57	pushq	%r15
10001e727:	41 56	pushq	%r14
10001e729:	41 54	pushq	%r12
10001e72b:	53	pushq	%rbx
10001e72c:	49 89 fe	movq	%rdi, %r14
10001e72f:	4c 8b 3d d2 49 03 00	movq	215506(%rip), %r15
10001e736:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
10001e73a:	48 8b 35 d7 3b 03 00	movq	211927(%rip), %rsi ## Objc selector ref: stringValue
10001e741:	4c 8b 25 d8 e4 01 00	movq	124120(%rip), %r12 ## Objc message: -[%rdi stringValue]
10001e748:	41 ff d4	callq	*%r12
10001e74b:	48 8b 35 e6 28 03 00	movq	207078(%rip), %rsi ## Objc selector ref: dataUsingEncoding:allowLossyConversion:
10001e752:	ba 01 00 00 00	movl	$1, %edx
10001e757:	48 89 c7	movq	%rax, %rdi
10001e75a:	b9 01 00 00 00	movl	$1, %ecx
10001e75f:	41 ff d4	callq	*%r12
10001e762:	48 89 c3	movq	%rax, %rbx
10001e765:	48 8b 3d 5c 3e 03 00	movq	212572(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001e76c:	e8 4d 0d 01 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10001e771:	48 8b 35 c8 2c 03 00	movq	208072(%rip), %rsi ## Objc selector ref: initWithData:encoding:
10001e778:	b9 01 00 00 00	movl	$1, %ecx
10001e77d:	48 89 c7	movq	%rax, %rdi
10001e780:	48 89 da	movq	%rbx, %rdx
10001e783:	41 ff d4	callq	*%r12
10001e786:	48 89 c7	movq	%rax, %rdi
10001e789:	e8 3c 0d 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001e78e:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
10001e792:	48 8b 35 57 39 03 00	movq	211287(%rip), %rsi ## Objc selector ref: setStringValue:
10001e799:	48 89 c2	movq	%rax, %rdx
10001e79c:	4c 89 e0	movq	%r12, %rax
10001e79f:	5b	popq	%rbx
10001e7a0:	41 5c	popq	%r12
10001e7a2:	41 5e	popq	%r14
10001e7a4:	41 5f	popq	%r15
10001e7a6:	5d	popq	%rbp
10001e7a7:	ff e0	jmpq	*%rax
10001e7a9:	55	pushq	%rbp
10001e7aa:	48 89 e5	movq	%rsp, %rbp
10001e7ad:	41 57	pushq	%r15
10001e7af:	41 56	pushq	%r14
10001e7b1:	41 55	pushq	%r13
10001e7b3:	41 54	pushq	%r12
10001e7b5:	53	pushq	%rbx
10001e7b6:	50	pushq	%rax
10001e7b7:	49 89 fe	movq	%rdi, %r14
10001e7ba:	48 8b 05 5f 49 03 00	movq	215391(%rip), %rax
10001e7c1:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001e7c5:	48 8b 35 44 2d 03 00	movq	208196(%rip), %rsi ## Objc selector ref: intValue
10001e7cc:	4c 8b 25 4d e4 01 00	movq	123981(%rip), %r12 ## Objc message: +[NSString intValue]
10001e7d3:	41 ff d4	callq	*%r12
10001e7d6:	89 c3	movl	%eax, %ebx
10001e7d8:	31 c0	xorl	%eax, %eax
10001e7da:	83 fb 21	cmpl	$33, %ebx
10001e7dd:	0f 4d d8	cmovgel	%eax, %ebx
10001e7e0:	4c 8b 2d 31 49 03 00	movq	215345(%rip), %r13
10001e7e7:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001e7eb:	48 8b 35 26 3b 03 00	movq	211750(%rip), %rsi ## Objc selector ref: stringValue
10001e7f2:	41 ff d4	callq	*%r12
10001e7f5:	31 ff	xorl	%edi, %edi
10001e7f7:	48 89 c6	movq	%rax, %rsi
10001e7fa:	89 da	movl	%ebx, %edx
10001e7fc:	b9 3f 00 00 00	movl	$63, %ecx
10001e801:	e8 24 07 01 00	callq	0x10002ef2a ## symbol stub for: _CFStringCreateExternalRepresentation
10001e806:	49 89 c7	movq	%rax, %r15
10001e809:	31 ff	xorl	%edi, %edi
10001e80b:	48 89 c6	movq	%rax, %rsi
10001e80e:	89 da	movl	%ebx, %edx
10001e810:	e8 1b 07 01 00	callq	0x10002ef30 ## symbol stub for: _CFStringCreateFromExternalRepresentation
10001e815:	48 89 c3	movq	%rax, %rbx
10001e818:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10001e81c:	48 8b 35 cd 38 03 00	movq	211149(%rip), %rsi ## Objc selector ref: setStringValue:
10001e823:	48 89 c2	movq	%rax, %rdx
10001e826:	41 ff d4	callq	*%r12
10001e829:	4c 89 ff	movq	%r15, %rdi
10001e82c:	e8 e1 06 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001e831:	48 89 df	movq	%rbx, %rdi
10001e834:	48 83 c4 08	addq	$8, %rsp
10001e838:	5b	popq	%rbx
10001e839:	41 5c	popq	%r12
10001e83b:	41 5d	popq	%r13
10001e83d:	41 5e	popq	%r14
10001e83f:	41 5f	popq	%r15
10001e841:	5d	popq	%rbp
10001e842:	e9 cb 06 01 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
10001e847:	55	pushq	%rbp
10001e848:	48 89 e5	movq	%rsp, %rbp
10001e84b:	41 57	pushq	%r15
10001e84d:	41 56	pushq	%r14
10001e84f:	41 55	pushq	%r13
10001e851:	41 54	pushq	%r12
10001e853:	53	pushq	%rbx
10001e854:	48 83 ec 38	subq	$56, %rsp
10001e858:	48 89 fb	movq	%rdi, %rbx
10001e85b:	48 8b 05 be 48 03 00	movq	215230(%rip), %rax
10001e862:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001e866:	48 8b 35 a3 2c 03 00	movq	208035(%rip), %rsi ## Objc selector ref: intValue
10001e86d:	4c 8b 25 ac e3 01 00	movq	123820(%rip), %r12 ## Objc message: -[%rdi intValue]
10001e874:	41 ff d4	callq	*%r12
10001e877:	41 89 c7	movl	%eax, %r15d
10001e87a:	31 c0	xorl	%eax, %eax
10001e87c:	41 83 ff 21	cmpl	$33, %r15d
10001e880:	44 0f 4d f8	cmovgel	%eax, %r15d
10001e884:	48 8b 05 7d 48 03 00	movq	215165(%rip), %rax
10001e88b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e88f:	4c 8b 35 82 3a 03 00	movq	211586(%rip), %r14 ## Objc selector ref: stringValue
10001e896:	4c 89 f6	movq	%r14, %rsi
10001e899:	41 ff d4	callq	*%r12
10001e89c:	48 8b 35 95 27 03 00	movq	206741(%rip), %rsi ## Objc selector ref: dataUsingEncoding:allowLossyConversion:
10001e8a3:	ba 01 00 00 00	movl	$1, %edx
10001e8a8:	48 89 c7	movq	%rax, %rdi
10001e8ab:	b9 01 00 00 00	movl	$1, %ecx
10001e8b0:	41 ff d4	callq	*%r12
10001e8b3:	49 89 c5	movq	%rax, %r13
10001e8b6:	48 89 45 b8	movq	%rax, -72(%rbp)
10001e8ba:	48 8b 05 4f 48 03 00	movq	215119(%rip), %rax
10001e8c1:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e8c5:	4c 89 f6	movq	%r14, %rsi
10001e8c8:	41 ff d4	callq	*%r12
10001e8cb:	49 89 c6	movq	%rax, %r14
10001e8ce:	48 8b 05 43 48 03 00	movq	215107(%rip), %rax
10001e8d5:	48 89 5d a0	movq	%rbx, -96(%rbp)
10001e8d9:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001e8dd:	48 8b 35 34 3a 03 00	movq	211508(%rip), %rsi ## Objc selector ref: stringValue
10001e8e4:	41 ff d4	callq	*%r12
10001e8e7:	31 ff	xorl	%edi, %edi
10001e8e9:	48 89 c6	movq	%rax, %rsi
10001e8ec:	44 89 7d d4	movl	%r15d, -44(%rbp)
10001e8f0:	44 89 fa	movl	%r15d, %edx
10001e8f3:	b9 3f 00 00 00	movl	$63, %ecx
10001e8f8:	e8 2d 06 01 00	callq	0x10002ef2a ## symbol stub for: _CFStringCreateExternalRepresentation
10001e8fd:	48 89 c3	movq	%rax, %rbx
10001e900:	48 89 c7	movq	%rax, %rdi
10001e903:	e8 c2 0b 01 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001e908:	48 8b 35 e9 2c 03 00	movq	208105(%rip), %rsi ## Objc selector ref: length
10001e90f:	4c 89 ef	movq	%r13, %rdi
10001e912:	49 89 f5	movq	%rsi, %r13
10001e915:	4d 89 e7	movq	%r12, %r15
10001e918:	41 ff d4	callq	*%r12
10001e91b:	49 89 c4	movq	%rax, %r12
10001e91e:	ff c0	incl	%eax
10001e920:	48 89 45 c0	movq	%rax, -64(%rbp)
10001e924:	4c 89 75 c8	movq	%r14, -56(%rbp)
10001e928:	4c 89 f7	movq	%r14, %rdi
10001e92b:	4c 89 ee	movq	%r13, %rsi
10001e92e:	41 ff d7	callq	*%r15
10001e931:	4c 89 f9	movq	%r15, %rcx
10001e934:	49 89 c6	movq	%rax, %r14
10001e937:	44 8d 3c 00	leal	(%rax,%rax), %r15d
10001e93b:	41 83 c7 02	addl	$2, %r15d
10001e93f:	48 89 5d a8	movq	%rbx, -88(%rbp)
10001e943:	48 89 df	movq	%rbx, %rdi
10001e946:	4c 89 ee	movq	%r13, %rsi
10001e949:	ff d1	callq	*%rcx
10001e94b:	ff c0	incl	%eax
10001e94d:	83 f8 43	cmpl	$67, %eax
10001e950:	41 bd 43 00 00 00	movl	$67, %r13d
10001e956:	44 0f 42 e8	cmovbl	%eax, %r13d
10001e95a:	43 8d 34 74	leal	(%r12,%r14,2), %esi
10001e95e:	83 c6 5e	addl	$94, %esi
10001e961:	bf 01 00 00 00	movl	$1, %edi
10001e966:	48 89 75 b0	movq	%rsi, -80(%rbp)
10001e96a:	e8 4d 0a 01 00	callq	0x10002f3bc ## symbol stub for: _calloc
10001e96f:	49 89 c6	movq	%rax, %r14
10001e972:	c7 00 64 65 73 63	movl	$1668506980, (%rax)
10001e978:	48 8b 5d c0	movq	-64(%rbp), %rbx
10001e97c:	89 d8	movl	%ebx, %eax
10001e97e:	0f c8	bswapl	%eax
10001e980:	41 89 46 08	movl	%eax, 8(%r14)
10001e984:	49 8d 56 0c	leaq	12(%r14), %rdx
10001e988:	48 8b 35 39 29 03 00	movq	207161(%rip), %rsi ## Objc selector ref: getBytes:
10001e98f:	48 8b 7d b8	movq	-72(%rbp), %rdi
10001e993:	ff 15 87 e2 01 00	callq	*123527(%rip) ## Objc message: -[%rdi getBytes:]
10001e999:	44 89 f8	movl	%r15d, %eax
10001e99c:	d1 e8	shrl	%eax
10001e99e:	0f c8	bswapl	%eax
10001e9a0:	4d 8d 24 1e	leaq	(%r14,%rbx), %r12
10001e9a4:	49 83 c4 14	addq	$20, %r12
10001e9a8:	41 89 44 24 fc	movl	%eax, -4(%r12)
10001e9ad:	45 85 ff	testl	%r15d, %r15d
10001e9b0:	74 30	je	0x10001e9e2
10001e9b2:	48 8b 35 1f 29 03 00	movq	207135(%rip), %rsi ## Objc selector ref: getCharacters:
10001e9b9:	48 8b 7d c8	movq	-56(%rbp), %rdi
10001e9bd:	4c 89 e2	movq	%r12, %rdx
10001e9c0:	ff 15 5a e2 01 00	callq	*123482(%rip) ## Objc message: -[%rdi getCharacters:]
10001e9c6:	44 89 f8	movl	%r15d, %eax
10001e9c9:	48 89 c1	movq	%rax, %rcx
10001e9cc:	48 d1 e9	shrq	%rcx
10001e9cf:	31 d2	xorl	%edx, %edx
10001e9d1:	66 41 c1 04 54 08	rolw	$8, (%r12,%rdx,2)
10001e9d7:	48 ff c2	incq	%rdx
10001e9da:	48 39 d1	cmpq	%rdx, %rcx
10001e9dd:	75 f2	jne	0x10001e9d1
10001e9df:	49 01 c4	addq	%rax, %r12
10001e9e2:	8b 45 d4	movl	-44(%rbp), %eax
10001e9e5:	66 c1 c0 08	rolw	$8, %ax
10001e9e9:	66 41 89 04 24	movw	%ax, (%r12)
10001e9ee:	45 88 6c 24 02	movb	%r13b, 2(%r12)
10001e9f3:	49 83 c4 03	addq	$3, %r12
10001e9f7:	41 ff cd	decl	%r13d
10001e9fa:	48 8b 35 cf 28 03 00	movq	207055(%rip), %rsi ## Objc selector ref: getBytes:length:
10001ea01:	48 8b 7d a8	movq	-88(%rbp), %rdi
10001ea05:	4c 89 e2	movq	%r12, %rdx
10001ea08:	4c 89 e9	movq	%r13, %rcx
10001ea0b:	ff 15 0f e2 01 00	callq	*123407(%rip) ## Objc message: -[%rdi getBytes:length:]
10001ea11:	48 8b 05 60 df 01 00	movq	122720(%rip), %rax ## literal pool symbol address: _kCFAllocatorNull
10001ea18:	48 8b 08	movq	(%rax), %rcx
10001ea1b:	31 ff	xorl	%edi, %edi
10001ea1d:	4c 89 f6	movq	%r14, %rsi
10001ea20:	48 8b 55 b0	movq	-80(%rbp), %rdx
10001ea24:	e8 71 04 01 00	callq	0x10002ee9a ## symbol stub for: _CFDataCreateWithBytesNoCopy
10001ea29:	49 89 c4	movq	%rax, %r12
10001ea2c:	48 8b 05 cd 46 03 00	movq	214733(%rip), %rax
10001ea33:	48 8b 5d a0	movq	-96(%rbp), %rbx
10001ea37:	8b 3c 03	movl	(%rbx,%rax), %edi
10001ea3a:	e8 15 08 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001ea3f:	49 89 c7	movq	%rax, %r15
10001ea42:	48 8b 05 af 46 03 00	movq	214703(%rip), %rax
10001ea49:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001ea4d:	4c 89 fe	movq	%r15, %rsi
10001ea50:	4c 89 e2	movq	%r12, %rdx
10001ea53:	e8 5c 08 01 00	callq	0x10002f2b4 ## symbol stub for: _ColorSyncProfileSetTag
10001ea58:	4d 85 e4	testq	%r12, %r12
10001ea5b:	74 08	je	0x10001ea65
10001ea5d:	4c 89 e7	movq	%r12, %rdi
10001ea60:	e8 ad 04 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001ea65:	4d 85 ff	testq	%r15, %r15
10001ea68:	74 08	je	0x10001ea72
10001ea6a:	4c 89 ff	movq	%r15, %rdi
10001ea6d:	e8 a0 04 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001ea72:	4d 85 f6	testq	%r14, %r14
10001ea75:	74 16	je	0x10001ea8d
10001ea77:	4c 89 f7	movq	%r14, %rdi
10001ea7a:	48 83 c4 38	addq	$56, %rsp
10001ea7e:	5b	popq	%rbx
10001ea7f:	41 5c	popq	%r12
10001ea81:	41 5d	popq	%r13
10001ea83:	41 5e	popq	%r14
10001ea85:	41 5f	popq	%r15
10001ea87:	5d	popq	%rbp
10001ea88:	e9 47 09 01 00	jmp	0x10002f3d4 ## symbol stub for: _free
10001ea8d:	48 83 c4 38	addq	$56, %rsp
10001ea91:	5b	popq	%rbx
10001ea92:	41 5c	popq	%r12
10001ea94:	41 5d	popq	%r13
10001ea96:	41 5e	popq	%r14
10001ea98:	41 5f	popq	%r15
10001ea9a:	5d	popq	%rbp
10001ea9b:	c3	retq
10001ea9c:	55	pushq	%rbp
10001ea9d:	48 89 e5	movq	%rsp, %rbp
10001eaa0:	53	pushq	%rbx
10001eaa1:	48 83 ec 38	subq	$56, %rsp
10001eaa5:	48 8d 45 e8	leaq	-24(%rbp), %rax
10001eaa9:	48 89 38	movq	%rdi, (%rax)
10001eaac:	48 8b 0d 7d 3d 03 00	movq	212349(%rip), %rcx ## Objc class ref: SelfSizingHeaderTableVIew
10001eab3:	48 89 48 08	movq	%rcx, 8(%rax)
10001eab7:	48 8b 35 92 29 03 00	movq	207250(%rip), %rsi ## Objc selector ref: initWithFrame:
10001eabe:	0f 28 45 10	movaps	16(%rbp), %xmm0
10001eac2:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10001eac6:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10001eacb:	0f 11 04 24	movups	%xmm0, (%rsp)
10001eacf:	48 89 c7	movq	%rax, %rdi
10001ead2:	e8 05 0a 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10001ead7:	48 89 c3	movq	%rax, %rbx
10001eada:	48 85 c0	testq	%rax, %rax
10001eadd:	74 10	je	0x10001eaef
10001eadf:	48 8b 35 7a 37 03 00	movq	210810(%rip), %rsi ## Objc selector ref: sizeTableHeaderCellsToFit
10001eae6:	48 89 df	movq	%rbx, %rdi
10001eae9:	ff 15 31 e1 01 00	callq	*123185(%rip) ## Objc message: -[%rdi sizeTableHeaderCellsToFit]
10001eaef:	48 89 d8	movq	%rbx, %rax
10001eaf2:	48 83 c4 38	addq	$56, %rsp
10001eaf6:	5b	popq	%rbx
10001eaf7:	5d	popq	%rbp
10001eaf8:	c3	retq
10001eaf9:	55	pushq	%rbp
10001eafa:	48 89 e5	movq	%rsp, %rbp
10001eafd:	53	pushq	%rbx
10001eafe:	48 83 ec 18	subq	$24, %rsp
10001eb02:	48 8d 45 e8	leaq	-24(%rbp), %rax
10001eb06:	48 89 38	movq	%rdi, (%rax)
10001eb09:	48 8b 0d 20 3d 03 00	movq	212256(%rip), %rcx ## Objc class ref: SelfSizingHeaderTableVIew
10001eb10:	48 89 48 08	movq	%rcx, 8(%rax)
10001eb14:	48 8b 35 1d 29 03 00	movq	207133(%rip), %rsi ## Objc selector ref: initWithCoder:
10001eb1b:	48 89 c7	movq	%rax, %rdi
10001eb1e:	e8 b9 09 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithCoder:]
10001eb23:	48 89 c3	movq	%rax, %rbx
10001eb26:	48 85 c0	testq	%rax, %rax
10001eb29:	74 10	je	0x10001eb3b
10001eb2b:	48 8b 35 2e 37 03 00	movq	210734(%rip), %rsi ## Objc selector ref: sizeTableHeaderCellsToFit
10001eb32:	48 89 df	movq	%rbx, %rdi
10001eb35:	ff 15 e5 e0 01 00	callq	*123109(%rip) ## Objc message: -[%rdi sizeTableHeaderCellsToFit]
10001eb3b:	48 89 d8	movq	%rbx, %rax
10001eb3e:	48 83 c4 18	addq	$24, %rsp
10001eb42:	5b	popq	%rbx
10001eb43:	5d	popq	%rbp
10001eb44:	c3	retq
10001eb45:	55	pushq	%rbp
10001eb46:	48 89 e5	movq	%rsp, %rbp
10001eb49:	41 57	pushq	%r15
10001eb4b:	41 56	pushq	%r14
10001eb4d:	41 55	pushq	%r13
10001eb4f:	41 54	pushq	%r12
10001eb51:	53	pushq	%rbx
10001eb52:	48 81 ec f8 00 00 00	subq	$248, %rsp
10001eb59:	48 8b 05 b8 dc 01 00	movq	122040(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001eb60:	48 8b 00	movq	(%rax), %rax
10001eb63:	48 89 45 d0	movq	%rax, -48(%rbp)
10001eb67:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10001eb6b:	4c 8d b5 e0 fe ff ff	leaq	-288(%rbp), %r14
10001eb72:	66 41 0f 29 06	movapd	%xmm0, (%r14)
10001eb77:	66 41 0f 29 46 10	movapd	%xmm0, 16(%r14)
10001eb7d:	66 41 0f 29 46 20	movapd	%xmm0, 32(%r14)
10001eb83:	66 41 0f 29 46 30	movapd	%xmm0, 48(%r14)
10001eb89:	48 8b 35 f8 37 03 00	movq	210936(%rip), %rsi ## Objc selector ref: tableColumns
10001eb90:	48 8b 1d 89 e0 01 00	movq	123017(%rip), %rbx ## Objc message: -[%rdi tableColumns]
10001eb97:	ff d3	callq	*%rbx
10001eb99:	48 8b 35 28 24 03 00	movq	205864(%rip), %rsi ## Objc selector ref: countByEnumeratingWithState:objects:count:
10001eba0:	48 8d 8d 50 ff ff ff	leaq	-176(%rbp), %rcx
10001eba7:	41 b8 10 00 00 00	movl	$16, %r8d
10001ebad:	48 89 85 48 ff ff ff	movq	%rax, -184(%rbp)
10001ebb4:	48 89 c7	movq	%rax, %rdi
10001ebb7:	4c 89 f2	movq	%r14, %rdx
10001ebba:	ff d3	callq	*%rbx
10001ebbc:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
10001ebc3:	48 85 c0	testq	%rax, %rax
10001ebc6:	0f 84 fe 00 00 00	je	0x10001ecca
10001ebcc:	48 8d 85 e0 fe ff ff	leaq	-288(%rbp), %rax
10001ebd3:	48 8b 40 10	movq	16(%rax), %rax
10001ebd7:	48 8b 00	movq	(%rax), %rax
10001ebda:	48 89 85 30 ff ff ff	movq	%rax, -208(%rbp)
10001ebe1:	4c 8b 35 48 27 03 00	movq	206664(%rip), %r14 ## Objc selector ref: headerCell
10001ebe8:	4c 8b 3d 51 22 03 00	movq	205393(%rip), %r15 ## Objc selector ref: cellSize
10001ebef:	48 8b 05 72 2b 03 00	movq	207730(%rip), %rax ## Objc selector ref: minWidth
10001ebf6:	48 89 85 28 ff ff ff	movq	%rax, -216(%rbp)
10001ebfd:	48 8b 05 bc 33 03 00	movq	209852(%rip), %rax ## Objc selector ref: setMinWidth:
10001ec04:	48 89 85 38 ff ff ff	movq	%rax, -200(%rbp)
10001ec0b:	45 31 ed	xorl	%r13d, %r13d
10001ec0e:	48 8b 85 f0 fe ff ff	movq	-272(%rbp), %rax
10001ec15:	48 8b 8d 30 ff ff ff	movq	-208(%rbp), %rcx
10001ec1c:	48 39 08	cmpq	%rcx, (%rax)
10001ec1f:	74 0c	je	0x10001ec2d
10001ec21:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
10001ec28:	e8 a3 08 01 00	callq	0x10002f4d0 ## symbol stub for: _objc_enumerationMutation
10001ec2d:	48 8b 85 e8 fe ff ff	movq	-280(%rbp), %rax
10001ec34:	4e 8b 24 e8	movq	(%rax,%r13,8), %r12
10001ec38:	4c 89 e7	movq	%r12, %rdi
10001ec3b:	4c 89 f6	movq	%r14, %rsi
10001ec3e:	ff d3	callq	*%rbx
10001ec40:	48 89 c7	movq	%rax, %rdi
10001ec43:	4c 89 fe	movq	%r15, %rsi
10001ec46:	ff d3	callq	*%rbx
10001ec48:	f2 0f 11 85 20 ff ff ff	movsd	%xmm0, -224(%rbp)
10001ec50:	4c 89 e7	movq	%r12, %rdi
10001ec53:	48 8b b5 28 ff ff ff	movq	-216(%rbp), %rsi
10001ec5a:	ff d3	callq	*%rbx
10001ec5c:	f2 0f 10 8d 20 ff ff ff	movsd	-224(%rbp), %xmm1
10001ec64:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10001ec68:	76 1c	jbe	0x10001ec86
10001ec6a:	4c 89 e7	movq	%r12, %rdi
10001ec6d:	4c 89 f6	movq	%r14, %rsi
10001ec70:	ff d3	callq	*%rbx
10001ec72:	48 89 c7	movq	%rax, %rdi
10001ec75:	4c 89 fe	movq	%r15, %rsi
10001ec78:	ff d3	callq	*%rbx
10001ec7a:	4c 89 e7	movq	%r12, %rdi
10001ec7d:	48 8b b5 38 ff ff ff	movq	-200(%rbp), %rsi
10001ec84:	ff d3	callq	*%rbx
10001ec86:	49 ff c5	incq	%r13
10001ec89:	4c 39 ad 40 ff ff ff	cmpq	%r13, -192(%rbp)
10001ec90:	0f 85 78 ff ff ff	jne	0x10001ec0e
10001ec96:	41 b8 10 00 00 00	movl	$16, %r8d
10001ec9c:	48 8b bd 48 ff ff ff	movq	-184(%rbp), %rdi
10001eca3:	48 8b 35 1e 23 03 00	movq	205598(%rip), %rsi ## Objc selector ref: countByEnumeratingWithState:objects:count:
10001ecaa:	48 8d 95 e0 fe ff ff	leaq	-288(%rbp), %rdx
10001ecb1:	48 8d 8d 50 ff ff ff	leaq	-176(%rbp), %rcx
10001ecb8:	ff d3	callq	*%rbx
10001ecba:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
10001ecc1:	48 85 c0	testq	%rax, %rax
10001ecc4:	0f 85 17 ff ff ff	jne	0x10001ebe1
10001ecca:	48 8b 05 47 db 01 00	movq	121671(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001ecd1:	48 8b 00	movq	(%rax), %rax
10001ecd4:	48 3b 45 d0	cmpq	-48(%rbp), %rax
10001ecd8:	75 12	jne	0x10001ecec
10001ecda:	48 81 c4 f8 00 00 00	addq	$248, %rsp
10001ece1:	5b	popq	%rbx
10001ece2:	41 5c	popq	%r12
10001ece4:	41 5d	popq	%r13
10001ece6:	41 5e	popq	%r14
10001ece8:	41 5f	popq	%r15
10001ecea:	5d	popq	%rbp
10001eceb:	c3	retq
10001ecec:	e8 bf 06 01 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10001ecf1:	55	pushq	%rbp
10001ecf2:	48 89 e5	movq	%rsp, %rbp
10001ecf5:	53	pushq	%rbx
10001ecf6:	48 83 ec 18	subq	$24, %rsp
10001ecfa:	48 8d 45 e8	leaq	-24(%rbp), %rax
10001ecfe:	48 89 38	movq	%rdi, (%rax)
10001ed01:	48 8b 35 28 3b 03 00	movq	211752(%rip), %rsi ## Objc class ref: SelfSizingHeaderTableVIew
10001ed08:	48 89 70 08	movq	%rsi, 8(%rax)
10001ed0c:	48 8b 35 7d 2c 03 00	movq	207997(%rip), %rsi ## Objc selector ref: preparedCellAtColumn:row:
10001ed13:	48 89 c7	movq	%rax, %rdi
10001ed16:	e8 c1 07 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] preparedCellAtColumn:row:]
10001ed1b:	48 89 c3	movq	%rax, %rbx
10001ed1e:	48 8b 05 13 d9 01 00	movq	121107(%rip), %rax ## literal pool symbol address: _NSApp
10001ed25:	48 8b 38	movq	(%rax), %rdi
10001ed28:	48 8b 35 61 37 03 00	movq	210785(%rip), %rsi ## Objc selector ref: userInterfaceLayoutDirection
10001ed2f:	ff 15 eb de 01 00	callq	*122603(%rip) ## Objc message: -[%rdi userInterfaceLayoutDirection]
10001ed35:	48 83 f8 01	cmpq	$1, %rax
10001ed39:	75 28	jne	0x10001ed63
10001ed3b:	48 8b 35 76 1f 03 00	movq	204662(%rip), %rsi ## Objc selector ref: alignment
10001ed42:	48 89 df	movq	%rbx, %rdi
10001ed45:	ff 15 d5 de 01 00	callq	*122581(%rip) ## Objc message: -[%rdi alignment]
10001ed4b:	48 83 f8 01	cmpq	$1, %rax
10001ed4f:	75 12	jne	0x10001ed63
10001ed51:	48 8b 35 30 2f 03 00	movq	208688(%rip), %rsi ## Objc selector ref: setAlignment:
10001ed58:	48 89 df	movq	%rbx, %rdi
10001ed5b:	31 d2	xorl	%edx, %edx
10001ed5d:	ff 15 bd de 01 00	callq	*122557(%rip) ## Objc message: -[%rdi setAlignment:]
10001ed63:	48 89 d8	movq	%rbx, %rax
10001ed66:	48 83 c4 18	addq	$24, %rsp
10001ed6a:	5b	popq	%rbx
10001ed6b:	5d	popq	%rbp
10001ed6c:	c3	retq
10001ed6d:	55	pushq	%rbp
10001ed6e:	48 89 e5	movq	%rsp, %rbp
10001ed71:	41 57	pushq	%r15
10001ed73:	41 56	pushq	%r14
10001ed75:	53	pushq	%rbx
10001ed76:	50	pushq	%rax
10001ed77:	49 89 d6	movq	%rdx, %r14
10001ed7a:	49 89 ff	movq	%rdi, %r15
10001ed7d:	89 f7	movl	%esi, %edi
10001ed7f:	e8 d0 04 01 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001ed84:	48 89 c3	movq	%rax, %rbx
10001ed87:	4c 89 ff	movq	%r15, %rdi
10001ed8a:	48 89 c6	movq	%rax, %rsi
10001ed8d:	e8 ec 04 01 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001ed92:	49 89 c7	movq	%rax, %r15
10001ed95:	48 89 df	movq	%rbx, %rdi
10001ed98:	e8 75 01 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001ed9d:	4d 85 ff	testq	%r15, %r15
10001eda0:	74 46	je	0x10001ede8
10001eda2:	4c 89 ff	movq	%r15, %rdi
10001eda5:	e8 fc 00 01 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001edaa:	48 83 f8 14	cmpq	$20, %rax
10001edae:	72 3c	jb	0x10001edec
10001edb0:	4c 89 ff	movq	%r15, %rdi
10001edb3:	e8 e8 00 01 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001edb8:	48 85 c0	testq	%rax, %rax
10001edbb:	74 2f	je	0x10001edec
10001edbd:	81 38 58 59 5a 20	cmpl	$542792024, (%rax)
10001edc3:	75 23	jne	0x10001ede8
10001edc5:	4d 85 f6	testq	%r14, %r14
10001edc8:	74 22	je	0x10001edec
10001edca:	8b 48 08	movl	8(%rax), %ecx
10001edcd:	0f c9	bswapl	%ecx
10001edcf:	41 89 0e	movl	%ecx, (%r14)
10001edd2:	8b 48 0c	movl	12(%rax), %ecx
10001edd5:	0f c9	bswapl	%ecx
10001edd7:	41 89 4e 04	movl	%ecx, 4(%r14)
10001eddb:	8b 40 10	movl	16(%rax), %eax
10001edde:	0f c8	bswapl	%eax
10001ede0:	41 89 46 08	movl	%eax, 8(%r14)
10001ede4:	b3 01	movb	$1, %bl
10001ede6:	eb 06	jmp	0x10001edee
10001ede8:	31 db	xorl	%ebx, %ebx
10001edea:	eb 0a	jmp	0x10001edf6
10001edec:	31 db	xorl	%ebx, %ebx
10001edee:	4c 89 ff	movq	%r15, %rdi
10001edf1:	e8 1c 01 01 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001edf6:	0f b6 c3	movzbl	%bl, %eax
10001edf9:	48 83 c4 08	addq	$8, %rsp
10001edfd:	5b	popq	%rbx
10001edfe:	41 5e	popq	%r14
10001ee00:	41 5f	popq	%r15
10001ee02:	5d	popq	%rbp
10001ee03:	c3	retq
10001ee04:	55	pushq	%rbp
10001ee05:	48 89 e5	movq	%rsp, %rbp
10001ee08:	81 f1 20 5a 59 58	xorl	$1482250784, %ecx
10001ee0e:	41 83 f0 14	xorl	$20, %r8d
10001ee12:	31 c0	xorl	%eax, %eax
10001ee14:	41 09 c8	orl	%ecx, %r8d
10001ee17:	0f 94 c0	sete	%al
10001ee1a:	5d	popq	%rbp
10001ee1b:	c3	retq
10001ee1c:	55	pushq	%rbp
10001ee1d:	48 89 e5	movq	%rsp, %rbp
10001ee20:	41 56	pushq	%r14
10001ee22:	53	pushq	%rbx
10001ee23:	81 fa 59 59 58 67	cmpl	$1733843289, %edx
10001ee29:	7e 21	jle	0x10001ee4c
10001ee2b:	81 fa 74 70 74 77	cmpl	$2004119668, %edx
10001ee31:	74 32	je	0x10001ee65
10001ee33:	81 fa 5a 59 58 72	cmpl	$1918392666, %edx
10001ee39:	74 33	je	0x10001ee6e
10001ee3b:	81 fa 5a 59 58 67	cmpl	$1733843290, %edx
10001ee41:	75 3d	jne	0x10001ee80
10001ee43:	4c 8d 35 56 fa 01 00	leaq	129622(%rip), %r14 ## Objc cfstring ref: @"Green colorant tristimulus"
10001ee4a:	eb 3b	jmp	0x10001ee87
10001ee4c:	81 fa 5a 59 58 62	cmpl	$1649957210, %edx
10001ee52:	74 23	je	0x10001ee77
10001ee54:	81 fa 74 70 6b 62	cmpl	$1651208308, %edx
10001ee5a:	75 24	jne	0x10001ee80
10001ee5c:	4c 8d 35 7d fa 01 00	leaq	129661(%rip), %r14 ## Objc cfstring ref: @"Media black-point tristimulus"
10001ee63:	eb 22	jmp	0x10001ee87
10001ee65:	4c 8d 35 94 fa 01 00	leaq	129684(%rip), %r14 ## Objc cfstring ref: @"Media white-point tristimulus"
10001ee6c:	eb 19	jmp	0x10001ee87
10001ee6e:	4c 8d 35 0b fa 01 00	leaq	129547(%rip), %r14 ## Objc cfstring ref: @"Red colorant tristimulus"
10001ee75:	eb 10	jmp	0x10001ee87
10001ee77:	4c 8d 35 42 fa 01 00	leaq	129602(%rip), %r14 ## Objc cfstring ref: @"Blue colorant tristimulus"
10001ee7e:	eb 07	jmp	0x10001ee87
10001ee80:	4c 8d 35 99 fa 01 00	leaq	129689(%rip), %r14 ## Objc cfstring ref: @"Tristimulus value"
10001ee87:	48 8b 3d 12 37 03 00	movq	210706(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001ee8e:	48 8b 35 53 28 03 00	movq	206931(%rip), %rsi ## Objc selector ref: mainBundle
10001ee95:	48 8b 1d 84 dd 01 00	movq	122244(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10001ee9c:	ff d3	callq	*%rbx
10001ee9e:	48 8b 35 bb 27 03 00	movq	206779(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001eea5:	48 8d 0d f4 df 01 00	leaq	122868(%rip), %rcx ## Objc cfstring ref: @""
10001eeac:	48 89 c7	movq	%rax, %rdi
10001eeaf:	4c 89 f2	movq	%r14, %rdx
10001eeb2:	45 31 c0	xorl	%r8d, %r8d
10001eeb5:	48 89 d8	movq	%rbx, %rax
10001eeb8:	5b	popq	%rbx
10001eeb9:	41 5e	popq	%r14
10001eebb:	5d	popq	%rbp
10001eebc:	ff e0	jmpq	*%rax
10001eebe:	55	pushq	%rbp
10001eebf:	48 89 e5	movq	%rsp, %rbp
10001eec2:	41 57	pushq	%r15
10001eec4:	41 56	pushq	%r14
10001eec6:	41 55	pushq	%r13
10001eec8:	41 54	pushq	%r12
10001eeca:	53	pushq	%rbx
10001eecb:	48 83 ec 48	subq	$72, %rsp
10001eecf:	41 89 cf	movl	%ecx, %r15d
10001eed2:	48 89 55 d0	movq	%rdx, -48(%rbp)
10001eed6:	49 89 fc	movq	%rdi, %r12
10001eed9:	48 8d 1d 60 fa 01 00	leaq	129632(%rip), %rbx ## Objc cfstring ref: @"Red"
10001eee0:	81 f9 59 59 58 67	cmpl	$1733843289, %ecx
10001eee6:	7e 30	jle	0x10001ef18
10001eee8:	41 81 ff 5a 59 58 67	cmpl	$1733843290, %r15d
10001eeef:	0f 84 b2 00 00 00	je	0x10001efa7
10001eef5:	41 81 ff 5a 59 58 72	cmpl	$1918392666, %r15d
10001eefc:	0f 84 a5 00 00 00	je	0x10001efa7
10001ef02:	41 81 ff 74 70 74 77	cmpl	$2004119668, %r15d
10001ef09:	0f 85 91 00 00 00	jne	0x10001efa0
10001ef0f:	4c 8d 2d 4a fa 01 00	leaq	129610(%rip), %r13 ## Objc cfstring ref: @"White"
10001ef16:	eb 1d	jmp	0x10001ef35
10001ef18:	41 81 ff 5a 59 58 62	cmpl	$1649957210, %r15d
10001ef1f:	0f 84 82 00 00 00	je	0x10001efa7
10001ef25:	41 81 ff 74 70 6b 62	cmpl	$1651208308, %r15d
10001ef2c:	75 72	jne	0x10001efa0
10001ef2e:	4c 8d 2d 4b fa 01 00	leaq	129611(%rip), %r13 ## Objc cfstring ref: @"Black"
10001ef35:	48 8b 05 f4 41 03 00	movq	213492(%rip), %rax
10001ef3c:	49 8b 1c 04	movq	(%r12,%rax), %rbx
10001ef40:	48 8b 3d 59 36 03 00	movq	210521(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001ef47:	48 8b 35 9a 27 03 00	movq	206746(%rip), %rsi ## Objc selector ref: mainBundle
10001ef4e:	4c 8b 35 cb dc 01 00	movq	122059(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001ef55:	41 ff d6	callq	*%r14
10001ef58:	48 8b 35 01 27 03 00	movq	206593(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001ef5f:	48 8d 0d 3a df 01 00	leaq	122682(%rip), %rcx ## Objc cfstring ref: @""
10001ef66:	48 89 c7	movq	%rax, %rdi
10001ef69:	4c 89 ea	movq	%r13, %rdx
10001ef6c:	45 31 c0	xorl	%r8d, %r8d
10001ef6f:	41 ff d6	callq	*%r14
10001ef72:	48 8b 35 77 31 03 00	movq	209271(%rip), %rsi ## Objc selector ref: setStringValue:
10001ef79:	48 89 df	movq	%rbx, %rdi
10001ef7c:	48 89 c2	movq	%rax, %rdx
10001ef7f:	41 ff d6	callq	*%r14
10001ef82:	48 8b 05 af 41 03 00	movq	213423(%rip), %rax
10001ef89:	4d 8d 2c 04	leaq	(%r12,%rax), %r13
10001ef8d:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001ef91:	48 8b 35 10 1c 03 00	movq	203792(%rip), %rsi ## Objc selector ref: SetPlotNone
10001ef98:	41 ff d6	callq	*%r14
10001ef9b:	e9 54 02 00 00	jmp	0x10001f1f4
10001efa0:	48 8d 1d f9 f9 01 00	leaq	129529(%rip), %rbx ## Objc cfstring ref: @"Value"
10001efa7:	48 8b 05 82 41 03 00	movq	213378(%rip), %rax
10001efae:	4d 8b 2c 04	movq	(%r12,%rax), %r13
10001efb2:	48 8b 3d e7 35 03 00	movq	210407(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001efb9:	48 8b 35 28 27 03 00	movq	206632(%rip), %rsi ## Objc selector ref: mainBundle
10001efc0:	4c 8b 35 59 dc 01 00	movq	121945(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001efc7:	41 ff d6	callq	*%r14
10001efca:	48 8b 35 8f 26 03 00	movq	206479(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001efd1:	48 8d 0d c8 de 01 00	leaq	122568(%rip), %rcx ## Objc cfstring ref: @""
10001efd8:	48 89 c7	movq	%rax, %rdi
10001efdb:	48 89 da	movq	%rbx, %rdx
10001efde:	45 31 c0	xorl	%r8d, %r8d
10001efe1:	41 ff d6	callq	*%r14
10001efe4:	48 8b 35 05 31 03 00	movq	209157(%rip), %rsi ## Objc selector ref: setStringValue:
10001efeb:	4c 89 ef	movq	%r13, %rdi
10001efee:	48 89 c2	movq	%rax, %rdx
10001eff1:	41 ff d6	callq	*%r14
10001eff4:	48 8b 05 3d 41 03 00	movq	213309(%rip), %rax
10001effb:	4d 8d 2c 04	leaq	(%r12,%rax), %r13
10001efff:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f003:	48 8b 35 9e 1b 03 00	movq	203678(%rip), %rsi ## Objc selector ref: SetPlotNone
10001f00a:	41 ff d6	callq	*%r14
10001f00d:	41 81 ff 5a 59 58 62	cmpl	$1649957210, %r15d
10001f014:	74 16	je	0x10001f02c
10001f016:	41 81 ff 5a 59 58 72	cmpl	$1918392666, %r15d
10001f01d:	74 0d	je	0x10001f02c
10001f01f:	41 81 ff 5a 59 58 67	cmpl	$1733843290, %r15d
10001f026:	0f 85 c8 01 00 00	jne	0x10001f1f4
10001f02c:	48 8d 55 c0	leaq	-64(%rbp), %rdx
10001f030:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001f034:	48 89 df	movq	%rbx, %rdi
10001f037:	be 5a 59 58 72	movl	$1918392666, %esi
10001f03c:	e8 2c fd ff ff	callq	0x10001ed6d
10001f041:	84 c0	testb	%al, %al
10001f043:	0f 84 7d 02 00 00	je	0x10001f2c6
10001f049:	48 8d 55 98	leaq	-104(%rbp), %rdx
10001f04d:	48 89 df	movq	%rbx, %rdi
10001f050:	be 5a 59 58 67	movl	$1733843290, %esi
10001f055:	e8 13 fd ff ff	callq	0x10001ed6d
10001f05a:	84 c0	testb	%al, %al
10001f05c:	0f 84 64 02 00 00	je	0x10001f2c6
10001f062:	48 8d 55 b0	leaq	-80(%rbp), %rdx
10001f066:	48 89 df	movq	%rbx, %rdi
10001f069:	be 5a 59 58 62	movl	$1649957210, %esi
10001f06e:	e8 fa fc ff ff	callq	0x10001ed6d
10001f073:	84 c0	testb	%al, %al
10001f075:	0f 84 4b 02 00 00	je	0x10001f2c6
10001f07b:	48 8d 45 b8	leaq	-72(%rbp), %rax
10001f07f:	48 89 45 d0	movq	%rax, -48(%rbp)
10001f083:	48 8d 45 b4	leaq	-76(%rbp), %rax
10001f087:	48 89 45 a8	movq	%rax, -88(%rbp)
10001f08b:	49 8b 7d 00	movq	(%r13), %rdi
10001f08f:	48 8b 1d b2 1a 03 00	movq	203442(%rip), %rbx ## Objc selector ref: AddPlotXYZ:index:
10001f096:	48 8d 55 c0	leaq	-64(%rbp), %rdx
10001f09a:	45 31 ff	xorl	%r15d, %r15d
10001f09d:	48 89 de	movq	%rbx, %rsi
10001f0a0:	31 c9	xorl	%ecx, %ecx
10001f0a2:	41 ff d6	callq	*%r14
10001f0a5:	49 8b 7d 00	movq	(%r13), %rdi
10001f0a9:	48 8d 55 98	leaq	-104(%rbp), %rdx
10001f0ad:	48 89 de	movq	%rbx, %rsi
10001f0b0:	b9 01 00 00 00	movl	$1, %ecx
10001f0b5:	41 ff d6	callq	*%r14
10001f0b8:	49 8b 7d 00	movq	(%r13), %rdi
10001f0bc:	48 8d 55 b0	leaq	-80(%rbp), %rdx
10001f0c0:	48 89 de	movq	%rbx, %rsi
10001f0c3:	b9 02 00 00 00	movl	$2, %ecx
10001f0c8:	41 ff d6	callq	*%r14
10001f0cb:	48 8b 05 6e 40 03 00	movq	213102(%rip), %rax
10001f0d2:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f0d6:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10001f0da:	f2 0f 2a 03	cvtsi2sdl	(%rbx), %xmm0
10001f0de:	f2 0f 59 05 7a 8f 01 00	mulsd	102266(%rip), %xmm0
10001f0e6:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f0ea:	4d 89 f5	movq	%r14, %r13
10001f0ed:	4c 8b 35 44 2d 03 00	movq	208196(%rip), %r14 ## Objc selector ref: setFloatValue:
10001f0f4:	4c 89 f6	movq	%r14, %rsi
10001f0f7:	41 ff d5	callq	*%r13
10001f0fa:	48 8b 05 47 40 03 00	movq	213063(%rip), %rax
10001f101:	0f 57 c0	xorps	%xmm0, %xmm0
10001f104:	f2 0f 2a 43 04	cvtsi2sdl	4(%rbx), %xmm0
10001f109:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f10d:	f2 0f 59 05 4b 8f 01 00	mulsd	102219(%rip), %xmm0
10001f115:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f119:	4c 89 f6	movq	%r14, %rsi
10001f11c:	41 ff d5	callq	*%r13
10001f11f:	48 8b 05 2a 40 03 00	movq	213034(%rip), %rax
10001f126:	0f 57 c0	xorps	%xmm0, %xmm0
10001f129:	f2 0f 2a 43 08	cvtsi2sdl	8(%rbx), %xmm0
10001f12e:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f132:	f2 0f 59 05 26 8f 01 00	mulsd	102182(%rip), %xmm0
10001f13a:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f13e:	4c 89 f6	movq	%r14, %rsi
10001f141:	41 ff d5	callq	*%r13
10001f144:	4c 89 eb	movq	%r13, %rbx
10001f147:	48 8b 05 0a 40 03 00	movq	213002(%rip), %rax
10001f14e:	4c 8d 6d 98	leaq	-104(%rbp), %r13
10001f152:	0f 57 c0	xorps	%xmm0, %xmm0
10001f155:	f2 41 0f 2a 45 00	cvtsi2sdl	(%r13), %xmm0
10001f15b:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f15f:	f2 0f 59 05 f9 8e 01 00	mulsd	102137(%rip), %xmm0
10001f167:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f16b:	4c 89 f6	movq	%r14, %rsi
10001f16e:	ff d3	callq	*%rbx
10001f170:	48 8b 05 e9 3f 03 00	movq	212969(%rip), %rax
10001f177:	0f 57 c0	xorps	%xmm0, %xmm0
10001f17a:	f2 41 0f 2a 45 04	cvtsi2sdl	4(%r13), %xmm0
10001f180:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f184:	f2 0f 59 05 d4 8e 01 00	mulsd	102100(%rip), %xmm0
10001f18c:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f190:	4c 89 f6	movq	%r14, %rsi
10001f193:	ff d3	callq	*%rbx
10001f195:	48 8b 05 cc 3f 03 00	movq	212940(%rip), %rax
10001f19c:	0f 57 c0	xorps	%xmm0, %xmm0
10001f19f:	f2 41 0f 2a 45 08	cvtsi2sdl	8(%r13), %xmm0
10001f1a5:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f1a9:	f2 0f 59 05 af 8e 01 00	mulsd	102063(%rip), %xmm0
10001f1b1:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f1b5:	4c 89 f6	movq	%r14, %rsi
10001f1b8:	ff d3	callq	*%rbx
10001f1ba:	48 8b 05 af 3f 03 00	movq	212911(%rip), %rax
10001f1c1:	48 8d 4d b0	leaq	-80(%rbp), %rcx
10001f1c5:	0f 57 c0	xorps	%xmm0, %xmm0
10001f1c8:	f2 0f 2a 01	cvtsi2sdl	(%rcx), %xmm0
10001f1cc:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f1d0:	f2 0f 59 05 88 8e 01 00	mulsd	102024(%rip), %xmm0
10001f1d8:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f1dc:	4c 89 f6	movq	%r14, %rsi
10001f1df:	ff d3	callq	*%rbx
10001f1e1:	4c 8d 2d 98 3f 03 00	leaq	212888(%rip), %r13
10001f1e8:	48 8d 05 89 3f 03 00	leaq	212873(%rip), %rax
10001f1ef:	e9 82 00 00 00	jmp	0x10001f276
10001f1f4:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001f1f8:	48 8d 55 c0	leaq	-64(%rbp), %rdx
10001f1fc:	44 89 fe	movl	%r15d, %esi
10001f1ff:	e8 69 fb ff ff	callq	0x10001ed6d
10001f204:	84 c0	testb	%al, %al
10001f206:	0f 84 bf 00 00 00	je	0x10001f2cb
10001f20c:	48 8d 45 c8	leaq	-56(%rbp), %rax
10001f210:	48 89 45 d0	movq	%rax, -48(%rbp)
10001f214:	48 8d 45 c4	leaq	-60(%rbp), %rax
10001f218:	48 89 45 a8	movq	%rax, -88(%rbp)
10001f21c:	49 8b 7d 00	movq	(%r13), %rdi
10001f220:	48 8b 35 21 19 03 00	movq	203041(%rip), %rsi ## Objc selector ref: AddPlotXYZ:index:
10001f227:	4c 8b 3d f2 d9 01 00	movq	121330(%rip), %r15 ## Objc message: -[%rdi AddPlotXYZ:index:]
10001f22e:	48 8d 5d c0	leaq	-64(%rbp), %rbx
10001f232:	48 89 da	movq	%rbx, %rdx
10001f235:	b9 08 00 00 00	movl	$8, %ecx
10001f23a:	41 ff d7	callq	*%r15
10001f23d:	48 8b 05 fc 3e 03 00	movq	212732(%rip), %rax
10001f244:	f2 0f 2a 03	cvtsi2sdl	(%rbx), %xmm0
10001f248:	f2 0f 59 05 10 8e 01 00	mulsd	101904(%rip), %xmm0
10001f250:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f254:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f258:	4c 8b 35 d9 2b 03 00	movq	207833(%rip), %r14 ## Objc selector ref: setFloatValue:
10001f25f:	4c 89 f6	movq	%r14, %rsi
10001f262:	41 ff d7	callq	*%r15
10001f265:	41 b7 01	movb	$1, %r15b
10001f268:	4c 8d 2d e1 3e 03 00	leaq	212705(%rip), %r13
10001f26f:	48 8d 05 d2 3e 03 00	leaq	212690(%rip), %rax
10001f276:	48 8b 00	movq	(%rax), %rax
10001f279:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f27d:	48 8b 45 a8	movq	-88(%rbp), %rax
10001f281:	0f 57 c0	xorps	%xmm0, %xmm0
10001f284:	f2 0f 2a 00	cvtsi2sdl	(%rax), %xmm0
10001f288:	f2 0f 59 05 d0 8d 01 00	mulsd	101840(%rip), %xmm0
10001f290:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f294:	48 8b 1d 85 d9 01 00	movq	121221(%rip), %rbx ## Objc message: -[%rdi setFloatValue:]
10001f29b:	4c 89 f6	movq	%r14, %rsi
10001f29e:	ff d3	callq	*%rbx
10001f2a0:	49 8b 45 00	movq	(%r13), %rax
10001f2a4:	48 8b 4d d0	movq	-48(%rbp), %rcx
10001f2a8:	0f 57 c0	xorps	%xmm0, %xmm0
10001f2ab:	f2 0f 2a 01	cvtsi2sdl	(%rcx), %xmm0
10001f2af:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f2b3:	f2 0f 59 05 a5 8d 01 00	mulsd	101797(%rip), %xmm0
10001f2bb:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10001f2bf:	4c 89 f6	movq	%r14, %rsi
10001f2c2:	ff d3	callq	*%rbx
10001f2c4:	eb 08	jmp	0x10001f2ce
10001f2c6:	45 31 ff	xorl	%r15d, %r15d
10001f2c9:	eb 03	jmp	0x10001f2ce
10001f2cb:	41 b7 01	movb	$1, %r15b
10001f2ce:	48 8b 05 b3 3e 03 00	movq	212659(%rip), %rax
10001f2d5:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f2d9:	4c 8b 35 c0 2b 03 00	movq	207808(%rip), %r14 ## Objc selector ref: setHidden:
10001f2e0:	41 0f b6 df	movzbl	%r15b, %ebx
10001f2e4:	4c 8b 3d 35 d9 01 00	movq	121141(%rip), %r15 ## Objc message: -[%rdi setHidden:]
10001f2eb:	4c 89 f6	movq	%r14, %rsi
10001f2ee:	89 da	movl	%ebx, %edx
10001f2f0:	41 ff d7	callq	*%r15
10001f2f3:	48 8b 05 96 3e 03 00	movq	212630(%rip), %rax
10001f2fa:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f2fe:	4c 89 f6	movq	%r14, %rsi
10001f301:	89 da	movl	%ebx, %edx
10001f303:	41 ff d7	callq	*%r15
10001f306:	48 8b 05 4b 3e 03 00	movq	212555(%rip), %rax
10001f30d:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f311:	4c 89 f6	movq	%r14, %rsi
10001f314:	89 da	movl	%ebx, %edx
10001f316:	41 ff d7	callq	*%r15
10001f319:	48 8b 05 40 3e 03 00	movq	212544(%rip), %rax
10001f320:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f324:	4c 89 f6	movq	%r14, %rsi
10001f327:	89 da	movl	%ebx, %edx
10001f329:	41 ff d7	callq	*%r15
10001f32c:	48 8b 05 35 3e 03 00	movq	212533(%rip), %rax
10001f333:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f337:	4c 89 f6	movq	%r14, %rsi
10001f33a:	89 da	movl	%ebx, %edx
10001f33c:	41 ff d7	callq	*%r15
10001f33f:	48 8b 05 2a 3e 03 00	movq	212522(%rip), %rax
10001f346:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f34a:	4c 89 f6	movq	%r14, %rsi
10001f34d:	89 da	movl	%ebx, %edx
10001f34f:	41 ff d7	callq	*%r15
10001f352:	48 8b 05 1f 3e 03 00	movq	212511(%rip), %rax
10001f359:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f35d:	4c 89 f6	movq	%r14, %rsi
10001f360:	89 da	movl	%ebx, %edx
10001f362:	41 ff d7	callq	*%r15
10001f365:	48 8b 05 14 3e 03 00	movq	212500(%rip), %rax
10001f36c:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f370:	4c 89 f6	movq	%r14, %rsi
10001f373:	89 da	movl	%ebx, %edx
10001f375:	41 ff d7	callq	*%r15
10001f378:	48 8b 05 19 3e 03 00	movq	212505(%rip), %rax
10001f37f:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f383:	4c 89 f6	movq	%r14, %rsi
10001f386:	89 da	movl	%ebx, %edx
10001f388:	41 ff d7	callq	*%r15
10001f38b:	48 8b 05 0e 3e 03 00	movq	212494(%rip), %rax
10001f392:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f396:	4c 89 f6	movq	%r14, %rsi
10001f399:	89 da	movl	%ebx, %edx
10001f39b:	41 ff d7	callq	*%r15
10001f39e:	48 8b 05 03 3e 03 00	movq	212483(%rip), %rax
10001f3a5:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f3a9:	4c 89 f6	movq	%r14, %rsi
10001f3ac:	89 da	movl	%ebx, %edx
10001f3ae:	41 ff d7	callq	*%r15
10001f3b1:	48 8b 05 f8 3d 03 00	movq	212472(%rip), %rax
10001f3b8:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f3bc:	4c 89 f6	movq	%r14, %rsi
10001f3bf:	89 da	movl	%ebx, %edx
10001f3c1:	41 ff d7	callq	*%r15
10001f3c4:	48 8b 05 ed 3d 03 00	movq	212461(%rip), %rax
10001f3cb:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f3cf:	4c 89 f6	movq	%r14, %rsi
10001f3d2:	89 da	movl	%ebx, %edx
10001f3d4:	41 ff d7	callq	*%r15
10001f3d7:	48 8b 05 e2 3d 03 00	movq	212450(%rip), %rax
10001f3de:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10001f3e2:	4c 89 f6	movq	%r14, %rsi
10001f3e5:	89 da	movl	%ebx, %edx
10001f3e7:	41 ff d7	callq	*%r15
10001f3ea:	48 83 c4 48	addq	$72, %rsp
10001f3ee:	5b	popq	%rbx
10001f3ef:	41 5c	popq	%r12
10001f3f1:	41 5d	popq	%r13
10001f3f3:	41 5e	popq	%r14
10001f3f5:	41 5f	popq	%r15
10001f3f7:	5d	popq	%rbp
10001f3f8:	c3	retq
10001f3f9:	55	pushq	%rbp
10001f3fa:	48 89 e5	movq	%rsp, %rbp
10001f3fd:	53	pushq	%rbx
10001f3fe:	48 83 ec 18	subq	$24, %rsp
10001f402:	48 89 fb	movq	%rdi, %rbx
10001f405:	48 8b 05 d4 3d 03 00	movq	212436(%rip), %rax
10001f40c:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001f410:	48 85 ff	testq	%rdi, %rdi
10001f413:	74 05	je	0x10001f41a
10001f415:	e8 f8 fa 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f41a:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10001f41e:	48 89 1f	movq	%rbx, (%rdi)
10001f421:	48 8b 05 10 34 03 00	movq	209936(%rip), %rax ## Objc class ref: TextTag
10001f428:	48 89 47 08	movq	%rax, 8(%rdi)
10001f42c:	48 8b 35 1d 1c 03 00	movq	203805(%rip), %rsi ## Objc selector ref: dealloc
10001f433:	e8 a4 00 01 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001f438:	48 83 c4 18	addq	$24, %rsp
10001f43c:	5b	popq	%rbx
10001f43d:	5d	popq	%rbp
10001f43e:	c3	retq
10001f43f:	55	pushq	%rbp
10001f440:	48 89 e5	movq	%rsp, %rbp
10001f443:	31 c0	xorl	%eax, %eax
10001f445:	81 f9 74 78 65 74	cmpl	$1952807028, %ecx
10001f44b:	0f 94 c0	sete	%al
10001f44e:	5d	popq	%rbp
10001f44f:	c3	retq
10001f450:	55	pushq	%rbp
10001f451:	48 89 e5	movq	%rsp, %rbp
10001f454:	41 56	pushq	%r14
10001f456:	53	pushq	%rbx
10001f457:	89 d3	movl	%edx, %ebx
10001f459:	48 8b 3d 40 31 03 00	movq	209216(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001f460:	48 8b 35 81 22 03 00	movq	205441(%rip), %rsi ## Objc selector ref: mainBundle
10001f467:	4c 8b 35 b2 d7 01 00	movq	120754(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001f46e:	41 ff d6	callq	*%r14
10001f471:	81 fb 74 72 70 63	cmpl	$1668313716, %ebx
10001f477:	48 8b 35 e2 21 03 00	movq	205282(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001f47e:	48 8d 0d 3b f5 01 00	leaq	128315(%rip), %rcx ## Objc cfstring ref: @"Copyright ASCII Text String"
10001f485:	48 8d 15 54 f5 01 00	leaq	128340(%rip), %rdx ## Objc cfstring ref: @"ASCII Text String"
10001f48c:	48 0f 44 d1	cmoveq	%rcx, %rdx
10001f490:	48 8d 0d 09 da 01 00	leaq	121353(%rip), %rcx ## Objc cfstring ref: @""
10001f497:	48 89 c7	movq	%rax, %rdi
10001f49a:	45 31 c0	xorl	%r8d, %r8d
10001f49d:	4c 89 f0	movq	%r14, %rax
10001f4a0:	5b	popq	%rbx
10001f4a1:	41 5e	popq	%r14
10001f4a3:	5d	popq	%rbp
10001f4a4:	ff e0	jmpq	*%rax
10001f4a6:	55	pushq	%rbp
10001f4a7:	48 89 e5	movq	%rsp, %rbp
10001f4aa:	41 57	pushq	%r15
10001f4ac:	41 56	pushq	%r14
10001f4ae:	41 55	pushq	%r13
10001f4b0:	41 54	pushq	%r12
10001f4b2:	53	pushq	%rbx
10001f4b3:	48 83 ec 28	subq	$40, %rsp
10001f4b7:	41 89 cd	movl	%ecx, %r13d
10001f4ba:	49 89 d7	movq	%rdx, %r15
10001f4bd:	49 89 fe	movq	%rdi, %r14
10001f4c0:	89 cf	movl	%ecx, %edi
10001f4c2:	e8 8d fd 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001f4c7:	48 89 c3	movq	%rax, %rbx
10001f4ca:	4c 89 ff	movq	%r15, %rdi
10001f4cd:	48 89 c6	movq	%rax, %rsi
10001f4d0:	e8 a9 fd 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001f4d5:	49 89 c4	movq	%rax, %r12
10001f4d8:	48 89 df	movq	%rbx, %rdi
10001f4db:	e8 32 fa 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f4e0:	4d 85 e4	testq	%r12, %r12
10001f4e3:	0f 84 f8 00 00 00	je	0x10001f5e1
10001f4e9:	4c 89 7d b8	movq	%r15, -72(%rbp)
10001f4ed:	48 8b 1d d4 30 03 00	movq	209108(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
10001f4f4:	4c 89 e7	movq	%r12, %rdi
10001f4f7:	e8 a4 f9 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001f4fc:	48 8d 50 08	leaq	8(%rax), %rdx
10001f500:	48 8b 35 29 2e 03 00	movq	208425(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
10001f507:	44 89 6d d4	movl	%r13d, -44(%rbp)
10001f50b:	4c 8b 2d 0e d7 01 00	movq	120590(%rip), %r13 ## Objc message: +[NSString stringWithUTF8String:]
10001f512:	48 89 df	movq	%rbx, %rdi
10001f515:	41 ff d5	callq	*%r13
10001f518:	48 89 45 c0	movq	%rax, -64(%rbp)
10001f51c:	48 8b 1d c5 3c 03 00	movq	212165(%rip), %rbx
10001f523:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
10001f527:	48 8b 35 ba 2b 03 00	movq	207802(%rip), %rsi ## Objc selector ref: setString:
10001f52e:	48 89 c2	movq	%rax, %rdx
10001f531:	41 ff d5	callq	*%r13
10001f534:	49 8b 04 1e	movq	(%r14,%rbx), %rax
10001f538:	48 89 45 c8	movq	%rax, -56(%rbp)
10001f53c:	4c 8b 3d 2d 31 03 00	movq	209197(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSFont
10001f543:	48 8b 35 26 2e 03 00	movq	208422(%rip), %rsi ## Objc selector ref: systemFontSize
10001f54a:	4c 89 ff	movq	%r15, %rdi
10001f54d:	41 ff d5	callq	*%r13
10001f550:	48 8b 35 11 2e 03 00	movq	208401(%rip), %rsi ## Objc selector ref: systemFontOfSize:
10001f557:	4c 89 ff	movq	%r15, %rdi
10001f55a:	41 ff d5	callq	*%r13
10001f55d:	48 8b 35 e4 28 03 00	movq	207076(%rip), %rsi ## Objc selector ref: setFont:
10001f564:	48 8b 7d c8	movq	-56(%rbp), %rdi
10001f568:	48 89 c2	movq	%rax, %rdx
10001f56b:	41 ff d5	callq	*%r13
10001f56e:	4d 8b 3c 1e	movq	(%r14,%rbx), %r15
10001f572:	48 8b 3d a7 30 03 00	movq	209063(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
10001f579:	48 8b 35 60 20 03 00	movq	204896(%rip), %rsi ## Objc selector ref: labelColor
10001f580:	41 ff d5	callq	*%r13
10001f583:	48 89 c3	movq	%rax, %rbx
10001f586:	48 8b 35 6b 20 03 00	movq	204907(%rip), %rsi ## Objc selector ref: length
10001f58d:	48 8b 7d c0	movq	-64(%rbp), %rdi
10001f591:	41 ff d5	callq	*%r13
10001f594:	48 8b 35 6d 2b 03 00	movq	207725(%rip), %rsi ## Objc selector ref: setTextColor:range:
10001f59b:	4c 89 ff	movq	%r15, %rdi
10001f59e:	48 89 da	movq	%rbx, %rdx
10001f5a1:	31 c9	xorl	%ecx, %ecx
10001f5a3:	49 89 c0	movq	%rax, %r8
10001f5a6:	41 ff d5	callq	*%r13
10001f5a9:	4c 89 e7	movq	%r12, %rdi
10001f5ac:	e8 61 f9 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f5b1:	48 8b 05 38 3c 03 00	movq	212024(%rip), %rax
10001f5b8:	8b 4d d4	movl	-44(%rbp), %ecx
10001f5bb:	41 89 0c 06	movl	%ecx, (%r14,%rax)
10001f5bf:	48 8b 1d 1a 3c 03 00	movq	211994(%rip), %rbx
10001f5c6:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
10001f5ca:	48 85 ff	testq	%rdi, %rdi
10001f5cd:	74 05	je	0x10001f5d4
10001f5cf:	e8 3e f9 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f5d4:	48 8b 7d b8	movq	-72(%rbp), %rdi
10001f5d8:	e8 3b f9 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10001f5dd:	49 89 04 1e	movq	%rax, (%r14,%rbx)
10001f5e1:	48 83 c4 28	addq	$40, %rsp
10001f5e5:	5b	popq	%rbx
10001f5e6:	41 5c	popq	%r12
10001f5e8:	41 5d	popq	%r13
10001f5ea:	41 5e	popq	%r14
10001f5ec:	41 5f	popq	%r15
10001f5ee:	5d	popq	%rbp
10001f5ef:	c3	retq
10001f5f0:	55	pushq	%rbp
10001f5f1:	48 89 e5	movq	%rsp, %rbp
10001f5f4:	48 8b 15 6d 2e 03 00	movq	208493(%rip), %rdx ## Objc selector ref: updateTag:
10001f5fb:	48 8b 35 6e 23 03 00	movq	205678(%rip), %rsi ## Objc selector ref: performSelector:withObject:afterDelay:
10001f602:	0f 57 c0	xorps	%xmm0, %xmm0
10001f605:	48 89 f9	movq	%rdi, %rcx
10001f608:	ff 15 12 d6 01 00	callq	*120338(%rip) ## Objc message: +[NSColor performSelector:withObject:afterDelay:]
10001f60e:	b8 01 00 00 00	movl	$1, %eax
10001f613:	5d	popq	%rbp
10001f614:	c3	retq
10001f615:	55	pushq	%rbp
10001f616:	48 89 e5	movq	%rsp, %rbp
10001f619:	41 57	pushq	%r15
10001f61b:	41 56	pushq	%r14
10001f61d:	41 55	pushq	%r13
10001f61f:	41 54	pushq	%r12
10001f621:	53	pushq	%rbx
10001f622:	50	pushq	%rax
10001f623:	49 89 fe	movq	%rdi, %r14
10001f626:	4c 8b 25 bb 3b 03 00	movq	211899(%rip), %r12
10001f62d:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10001f631:	48 8b 35 e0 1c 03 00	movq	204000(%rip), %rsi ## Objc selector ref: hasMarkedText
10001f638:	ff 15 e2 d5 01 00	callq	*120290(%rip) ## Objc message: -[%rdi hasMarkedText]
10001f63e:	3c 01	cmpb	$1, %al
10001f640:	75 0f	jne	0x10001f651
10001f642:	48 83 c4 08	addq	$8, %rsp
10001f646:	5b	popq	%rbx
10001f647:	41 5c	popq	%r12
10001f649:	41 5d	popq	%r13
10001f64b:	41 5e	popq	%r14
10001f64d:	41 5f	popq	%r15
10001f64f:	5d	popq	%rbp
10001f650:	c3	retq
10001f651:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
10001f655:	48 8b 35 e4 25 03 00	movq	206308(%rip), %rsi ## Objc selector ref: selectedRange
10001f65c:	4c 8b 3d bd d5 01 00	movq	120253(%rip), %r15 ## Objc message: -[%rdi selectedRange]
10001f663:	41 ff d7	callq	*%r15
10001f666:	48 89 c3	movq	%rax, %rbx
10001f669:	48 89 55 d0	movq	%rdx, -48(%rbp)
10001f66d:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
10001f671:	48 8b 35 50 2c 03 00	movq	207952(%rip), %rsi ## Objc selector ref: string
10001f678:	41 ff d7	callq	*%r15
10001f67b:	48 8b 35 b6 19 03 00	movq	203190(%rip), %rsi ## Objc selector ref: dataUsingEncoding:allowLossyConversion:
10001f682:	ba 01 00 00 00	movl	$1, %edx
10001f687:	48 89 c7	movq	%rax, %rdi
10001f68a:	b9 01 00 00 00	movl	$1, %ecx
10001f68f:	41 ff d7	callq	*%r15
10001f692:	49 89 c5	movq	%rax, %r13
10001f695:	48 8b 3d 2c 2f 03 00	movq	208684(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10001f69c:	e8 1d fe 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10001f6a1:	48 8b 35 98 1d 03 00	movq	204184(%rip), %rsi ## Objc selector ref: initWithData:encoding:
10001f6a8:	b9 01 00 00 00	movl	$1, %ecx
10001f6ad:	48 89 c7	movq	%rax, %rdi
10001f6b0:	4c 89 ea	movq	%r13, %rdx
10001f6b3:	41 ff d7	callq	*%r15
10001f6b6:	48 89 c7	movq	%rax, %rdi
10001f6b9:	e8 0c fe 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001f6be:	49 89 c5	movq	%rax, %r13
10001f6c1:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
10001f6c5:	48 8b 35 1c 2a 03 00	movq	207388(%rip), %rsi ## Objc selector ref: setString:
10001f6cc:	48 89 c2	movq	%rax, %rdx
10001f6cf:	41 ff d7	callq	*%r15
10001f6d2:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
10001f6d6:	48 8b 35 eb 2b 03 00	movq	207851(%rip), %rsi ## Objc selector ref: string
10001f6dd:	41 ff d7	callq	*%r15
10001f6e0:	48 8b 35 11 1f 03 00	movq	204561(%rip), %rsi ## Objc selector ref: length
10001f6e7:	48 89 c7	movq	%rax, %rdi
10001f6ea:	41 ff d7	callq	*%r15
10001f6ed:	48 39 c3	cmpq	%rax, %rbx
10001f6f0:	48 0f 43 d8	cmovaeq	%rax, %rbx
10001f6f4:	48 8b 75 d0	movq	-48(%rbp), %rsi
10001f6f8:	48 8d 14 33	leaq	(%rbx,%rsi), %rdx
10001f6fc:	48 89 c1	movq	%rax, %rcx
10001f6ff:	48 29 d9	subq	%rbx, %rcx
10001f702:	48 39 c2	cmpq	%rax, %rdx
10001f705:	48 0f 46 ce	cmovbeq	%rsi, %rcx
10001f709:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
10001f70d:	48 8b 35 a4 29 03 00	movq	207268(%rip), %rsi ## Objc selector ref: setSelectedRange:
10001f714:	48 89 da	movq	%rbx, %rdx
10001f717:	41 ff d7	callq	*%r15
10001f71a:	48 8b 35 a7 14 03 00	movq	201895(%rip), %rsi ## Objc selector ref: UTF8String
10001f721:	4c 89 ef	movq	%r13, %rdi
10001f724:	41 ff d7	callq	*%r15
10001f727:	48 89 c3	movq	%rax, %rbx
10001f72a:	48 85 c0	testq	%rax, %rax
10001f72d:	74 0a	je	0x10001f739
10001f72f:	48 89 df	movq	%rbx, %rdi
10001f732:	e8 05 fe 00 00	callq	0x10002f53c ## symbol stub for: _strlen
10001f737:	eb 02	jmp	0x10001f73b
10001f739:	31 c0	xorl	%eax, %eax
10001f73b:	48 89 45 d0	movq	%rax, -48(%rbp)
10001f73f:	48 8b 05 aa 3a 03 00	movq	211626(%rip), %rax
10001f746:	41 8b 3c 06	movl	(%r14,%rax), %edi
10001f74a:	e8 05 fb 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001f74f:	49 89 c5	movq	%rax, %r13
10001f752:	48 8b 05 87 3a 03 00	movq	211591(%rip), %rax
10001f759:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001f75d:	4c 89 ee	movq	%r13, %rsi
10001f760:	e8 19 fb 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001f765:	48 85 c0	testq	%rax, %rax
10001f768:	74 6a	je	0x10001f7d4
10001f76a:	49 89 c4	movq	%rax, %r12
10001f76d:	31 ff	xorl	%edi, %edi
10001f76f:	31 f6	xorl	%esi, %esi
10001f771:	48 89 c2	movq	%rax, %rdx
10001f774:	e8 1b f7 00 00	callq	0x10002ee94 ## symbol stub for: _CFDataCreateMutableCopy
10001f779:	49 89 c7	movq	%rax, %r15
10001f77c:	4c 89 e7	movq	%r12, %rdi
10001f77f:	e8 8e f7 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f784:	4d 85 ff	testq	%r15, %r15
10001f787:	74 4b	je	0x10001f7d4
10001f789:	49 89 dc	movq	%rbx, %r12
10001f78c:	48 8b 5d d0	movq	-48(%rbp), %rbx
10001f790:	48 8d 73 09	leaq	9(%rbx), %rsi
10001f794:	4c 89 ff	movq	%r15, %rdi
10001f797:	e8 16 f7 00 00	callq	0x10002eeb2 ## symbol stub for: _CFDataSetLength
10001f79c:	4c 89 ff	movq	%r15, %rdi
10001f79f:	e8 08 f7 00 00	callq	0x10002eeac ## symbol stub for: _CFDataGetMutableBytePtr
10001f7a4:	48 8d 78 08	leaq	8(%rax), %rdi
10001f7a8:	48 ff c3	incq	%rbx
10001f7ab:	4c 89 e6	movq	%r12, %rsi
10001f7ae:	48 89 da	movq	%rbx, %rdx
10001f7b1:	e8 02 fd 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
10001f7b6:	48 8b 05 23 3a 03 00	movq	211491(%rip), %rax
10001f7bd:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10001f7c1:	4c 89 ee	movq	%r13, %rsi
10001f7c4:	4c 89 fa	movq	%r15, %rdx
10001f7c7:	e8 e8 fa 00 00	callq	0x10002f2b4 ## symbol stub for: _ColorSyncProfileSetTag
10001f7cc:	4c 89 ff	movq	%r15, %rdi
10001f7cf:	e8 3e f7 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f7d4:	4c 89 ef	movq	%r13, %rdi
10001f7d7:	48 83 c4 08	addq	$8, %rsp
10001f7db:	5b	popq	%rbx
10001f7dc:	41 5c	popq	%r12
10001f7de:	41 5d	popq	%r13
10001f7e0:	41 5e	popq	%r14
10001f7e2:	41 5f	popq	%r15
10001f7e4:	5d	popq	%rbp
10001f7e5:	e9 28 f7 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
10001f7ea:	55	pushq	%rbp
10001f7eb:	48 89 e5	movq	%rsp, %rbp
10001f7ee:	48 83 ec 10	subq	$16, %rsp
10001f7f2:	48 8d 45 f0	leaq	-16(%rbp), %rax
10001f7f6:	48 89 38	movq	%rdi, (%rax)
10001f7f9:	48 8b 0d 40 30 03 00	movq	208960(%rip), %rcx ## Objc class ref: CurvTag
10001f800:	48 89 48 08	movq	%rcx, 8(%rax)
10001f804:	48 8b 35 45 18 03 00	movq	202821(%rip), %rsi ## Objc selector ref: dealloc
10001f80b:	48 89 c7	movq	%rax, %rdi
10001f80e:	e8 c9 fc 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001f813:	48 83 c4 10	addq	$16, %rsp
10001f817:	5d	popq	%rbp
10001f818:	c3	retq
10001f819:	55	pushq	%rbp
10001f81a:	48 89 e5	movq	%rsp, %rbp
10001f81d:	31 c0	xorl	%eax, %eax
10001f81f:	81 f9 76 72 75 63	cmpl	$1668641398, %ecx
10001f825:	0f 94 c0	sete	%al
10001f828:	5d	popq	%rbp
10001f829:	c3	retq
10001f82a:	55	pushq	%rbp
10001f82b:	48 89 e5	movq	%rsp, %rbp
10001f82e:	41 56	pushq	%r14
10001f830:	53	pushq	%rbx
10001f831:	81 fa 43 52 54 62	cmpl	$1649693251, %edx
10001f837:	74 19	je	0x10001f852
10001f839:	81 fa 43 52 54 72	cmpl	$1918128707, %edx
10001f83f:	74 1a	je	0x10001f85b
10001f841:	81 fa 43 52 54 67	cmpl	$1733579331, %edx
10001f847:	75 1b	jne	0x10001f864
10001f849:	48 8d 1d d0 f1 01 00	leaq	127440(%rip), %rbx ## Objc cfstring ref: @"Green tone response curve"
10001f850:	eb 19	jmp	0x10001f86b
10001f852:	48 8d 1d e7 f1 01 00	leaq	127463(%rip), %rbx ## Objc cfstring ref: @"Blue tone response curve"
10001f859:	eb 10	jmp	0x10001f86b
10001f85b:	48 8d 1d 9e f1 01 00	leaq	127390(%rip), %rbx ## Objc cfstring ref: @"Red tone response curve"
10001f862:	eb 07	jmp	0x10001f86b
10001f864:	48 8d 1d f5 f1 01 00	leaq	127477(%rip), %rbx ## Objc cfstring ref: @"Tone response curve"
10001f86b:	48 8b 3d 2e 2d 03 00	movq	208174(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001f872:	48 8b 35 6f 1e 03 00	movq	204399(%rip), %rsi ## Objc selector ref: mainBundle
10001f879:	4c 8b 35 a0 d3 01 00	movq	119712(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001f880:	41 ff d6	callq	*%r14
10001f883:	48 8b 35 d6 1d 03 00	movq	204246(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001f88a:	48 8d 0d 0f d6 01 00	leaq	120335(%rip), %rcx ## Objc cfstring ref: @""
10001f891:	48 89 c7	movq	%rax, %rdi
10001f894:	48 89 da	movq	%rbx, %rdx
10001f897:	45 31 c0	xorl	%r8d, %r8d
10001f89a:	4c 89 f0	movq	%r14, %rax
10001f89d:	5b	popq	%rbx
10001f89e:	41 5e	popq	%r14
10001f8a0:	5d	popq	%rbp
10001f8a1:	ff e0	jmpq	*%rax
10001f8a3:	55	pushq	%rbp
10001f8a4:	48 89 e5	movq	%rsp, %rbp
10001f8a7:	41 57	pushq	%r15
10001f8a9:	41 56	pushq	%r14
10001f8ab:	41 55	pushq	%r13
10001f8ad:	41 54	pushq	%r12
10001f8af:	53	pushq	%rbx
10001f8b0:	48 83 ec 18	subq	$24, %rsp
10001f8b4:	41 89 cd	movl	%ecx, %r13d
10001f8b7:	49 89 d6	movq	%rdx, %r14
10001f8ba:	49 89 ff	movq	%rdi, %r15
10001f8bd:	89 cf	movl	%ecx, %edi
10001f8bf:	e8 90 f9 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001f8c4:	48 89 c3	movq	%rax, %rbx
10001f8c7:	4c 89 f7	movq	%r14, %rdi
10001f8ca:	48 89 c6	movq	%rax, %rsi
10001f8cd:	e8 ac f9 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001f8d2:	49 89 c6	movq	%rax, %r14
10001f8d5:	48 89 df	movq	%rbx, %rdi
10001f8d8:	e8 35 f6 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f8dd:	4d 85 f6	testq	%r14, %r14
10001f8e0:	0f 84 32 01 00 00	je	0x10001fa18
10001f8e6:	4c 89 f7	movq	%r14, %rdi
10001f8e9:	e8 b8 f5 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001f8ee:	48 83 f8 0e	cmpq	$14, %rax
10001f8f2:	0f 82 2f 01 00 00	jb	0x10001fa27
10001f8f8:	31 ff	xorl	%edi, %edi
10001f8fa:	31 f6	xorl	%esi, %esi
10001f8fc:	4c 89 f2	movq	%r14, %rdx
10001f8ff:	e8 90 f5 00 00	callq	0x10002ee94 ## symbol stub for: _CFDataCreateMutableCopy
10001f904:	48 85 c0	testq	%rax, %rax
10001f907:	0f 84 1a 01 00 00	je	0x10001fa27
10001f90d:	48 89 c3	movq	%rax, %rbx
10001f910:	4c 89 f7	movq	%r14, %rdi
10001f913:	e8 8e f5 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001f918:	48 89 df	movq	%rbx, %rdi
10001f91b:	48 89 c6	movq	%rax, %rsi
10001f91e:	e8 8f f5 00 00	callq	0x10002eeb2 ## symbol stub for: _CFDataSetLength
10001f923:	48 89 df	movq	%rbx, %rdi
10001f926:	e8 81 f5 00 00	callq	0x10002eeac ## symbol stub for: _CFDataGetMutableBytePtr
10001f92b:	49 89 c4	movq	%rax, %r12
10001f92e:	4c 89 f7	movq	%r14, %rdi
10001f931:	e8 dc f5 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001f936:	4d 85 e4	testq	%r12, %r12
10001f939:	0f 84 d9 00 00 00	je	0x10001fa18
10001f93f:	48 89 5d d0	movq	%rbx, -48(%rbp)
10001f943:	41 8b 44 24 08	movl	8(%r12), %eax
10001f948:	0f c8	bswapl	%eax
10001f94a:	31 c9	xorl	%ecx, %ecx
10001f94c:	41 81 fd 43 52 54 72	cmpl	$1918128707, %r13d
10001f953:	be 06 00 00 00	movl	$6, %esi
10001f958:	0f 44 f1	cmovel	%ecx, %esi
10001f95b:	41 81 fd 43 52 54 67	cmpl	$1733579331, %r13d
10001f962:	ba 01 00 00 00	movl	$1, %edx
10001f967:	0f 45 d6	cmovnel	%esi, %edx
10001f96a:	41 81 fd 43 52 54 62	cmpl	$1649693251, %r13d
10001f971:	b9 02 00 00 00	movl	$2, %ecx
10001f976:	0f 44 d1	cmovel	%ecx, %edx
10001f979:	41 89 44 24 08	movl	%eax, 8(%r12)
10001f97e:	48 8b 1d 73 38 03 00	movq	211059(%rip), %rbx
10001f985:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10001f989:	48 8b 35 00 12 03 00	movq	201216(%rip), %rsi ## Objc selector ref: SetPlotColor:
10001f990:	4c 8b 2d 89 d2 01 00	movq	119433(%rip), %r13 ## Objc message: -[%rdi SetPlotColor:]
10001f997:	41 ff d5	callq	*%r13
10001f99a:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10001f99e:	4c 89 e3	movq	%r12, %rbx
10001f9a1:	48 83 c3 0c	addq	$12, %rbx
10001f9a5:	41 8b 4c 24 08	movl	8(%r12), %ecx
10001f9aa:	48 8b 35 e7 11 03 00	movq	201191(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
10001f9b1:	48 89 da	movq	%rbx, %rdx
10001f9b4:	41 b8 02 00 00 00	movl	$2, %r8d
10001f9ba:	41 ff d5	callq	*%r13
10001f9bd:	41 8b 44 24 08	movl	8(%r12), %eax
10001f9c2:	83 f8 01	cmpl	$1, %eax
10001f9c5:	74 68	je	0x10001fa2f
10001f9c7:	85 c0	testl	%eax, %eax
10001f9c9:	0f 85 87 01 00 00	jne	0x10001fb56
10001f9cf:	48 8b 05 2a 38 03 00	movq	210986(%rip), %rax
10001f9d6:	49 8b 1c 07	movq	(%r15,%rax), %rbx
10001f9da:	48 8b 3d bf 2b 03 00	movq	207807(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001f9e1:	48 8b 35 00 1d 03 00	movq	204032(%rip), %rsi ## Objc selector ref: mainBundle
10001f9e8:	41 ff d5	callq	*%r13
10001f9eb:	48 8b 35 6e 1c 03 00	movq	203886(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001f9f2:	48 8d 15 87 f0 01 00	leaq	127111(%rip), %rdx ## Objc cfstring ref: @"Linear"
10001f9f9:	48 8d 0d a0 d4 01 00	leaq	119968(%rip), %rcx ## Objc cfstring ref: @""
10001fa00:	48 89 c7	movq	%rax, %rdi
10001fa03:	45 31 c0	xorl	%r8d, %r8d
10001fa06:	41 ff d5	callq	*%r13
10001fa09:	48 8b 35 e0 26 03 00	movq	206560(%rip), %rsi ## Objc selector ref: setStringValue:
10001fa10:	48 89 df	movq	%rbx, %rdi
10001fa13:	e9 a0 01 00 00	jmp	0x10001fbb8
10001fa18:	48 83 c4 18	addq	$24, %rsp
10001fa1c:	5b	popq	%rbx
10001fa1d:	41 5c	popq	%r12
10001fa1f:	41 5d	popq	%r13
10001fa21:	41 5e	popq	%r14
10001fa23:	41 5f	popq	%r15
10001fa25:	5d	popq	%rbp
10001fa26:	c3	retq
10001fa27:	4c 89 f7	movq	%r14, %rdi
10001fa2a:	e9 93 01 00 00	jmp	0x10001fbc2
10001fa2f:	0f b7 03	movzwl	(%rbx), %eax
10001fa32:	66 c1 c0 08	rolw	$8, %ax
10001fa36:	0f b7 c0	movzwl	%ax, %eax
10001fa39:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
10001fa3d:	f2 0f 59 05 0b 86 01 00	mulsd	99851(%rip), %xmm0
10001fa45:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
10001fa4a:	48 8b 3d a7 2b 03 00	movq	207783(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumberFormatter
10001fa51:	e8 6e fa 00 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10001fa56:	48 89 c7	movq	%rax, %rdi
10001fa59:	e8 6c fa 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10001fa5e:	48 89 c3	movq	%rax, %rbx
10001fa61:	48 8b 35 e8 23 03 00	movq	205800(%rip), %rsi ## Objc selector ref: setFormat:
10001fa68:	48 8d 15 31 f0 01 00	leaq	127025(%rip), %rdx ## Objc cfstring ref: @"#0.000"
10001fa6f:	48 89 c7	movq	%rax, %rdi
10001fa72:	41 ff d5	callq	*%r13
10001fa75:	48 8b 35 14 22 03 00	movq	205332(%rip), %rsi ## Objc selector ref: setAllowsFloats:
10001fa7c:	48 89 df	movq	%rbx, %rdi
10001fa7f:	ba 01 00 00 00	movl	$1, %edx
10001fa84:	41 ff d5	callq	*%r13
10001fa87:	48 8b 35 fa 23 03 00	movq	205818(%rip), %rsi ## Objc selector ref: setHasThousandSeparators:
10001fa8e:	48 89 df	movq	%rbx, %rdi
10001fa91:	31 d2	xorl	%edx, %edx
10001fa93:	41 ff d5	callq	*%r13
10001fa96:	48 8b 3d f3 2a 03 00	movq	207603(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10001fa9d:	48 8b 35 0c 28 03 00	movq	206860(%rip), %rsi ## Objc selector ref: standardUserDefaults
10001faa4:	41 ff d5	callq	*%r13
10001faa7:	48 8b 35 ca 1d 03 00	movq	204234(%rip), %rsi ## Objc selector ref: objectForKey:
10001faae:	48 8d 15 2b eb 01 00	leaq	125739(%rip), %rdx ## Objc cfstring ref: @"NSDecimalSeparator"
10001fab5:	48 89 c7	movq	%rax, %rdi
10001fab8:	41 ff d5	callq	*%r13
10001fabb:	48 8b 35 a6 22 03 00	movq	205478(%rip), %rsi ## Objc selector ref: setDecimalSeparator:
10001fac2:	48 89 df	movq	%rbx, %rdi
10001fac5:	48 89 c2	movq	%rax, %rdx
10001fac8:	41 ff d5	callq	*%r13
10001facb:	48 8b 05 2e 37 03 00	movq	210734(%rip), %rax
10001fad2:	4d 8b 3c 07	movq	(%r15,%rax), %r15
10001fad6:	4c 8b 25 eb 2a 03 00	movq	207595(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSString
10001fadd:	48 8b 3d bc 2a 03 00	movq	207548(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001fae4:	48 8b 35 fd 1b 03 00	movq	203773(%rip), %rsi ## Objc selector ref: mainBundle
10001faeb:	41 ff d5	callq	*%r13
10001faee:	48 8b 35 6b 1b 03 00	movq	203627(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001faf5:	48 8d 15 c4 ef 01 00	leaq	126916(%rip), %rdx ## Objc cfstring ref: @"Gamma %@"
10001fafc:	48 8d 0d 9d d3 01 00	leaq	119709(%rip), %rcx ## Objc cfstring ref: @""
10001fb03:	48 89 c7	movq	%rax, %rdi
10001fb06:	45 31 c0	xorl	%r8d, %r8d
10001fb09:	41 ff d5	callq	*%r13
10001fb0c:	49 89 c6	movq	%rax, %r14
10001fb0f:	48 8b 3d da 2a 03 00	movq	207578(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10001fb16:	48 8b 35 f3 1c 03 00	movq	204019(%rip), %rsi ## Objc selector ref: numberWithDouble:
10001fb1d:	f2 0f 10 45 c8	movsd	-56(%rbp), %xmm0
10001fb22:	41 ff d5	callq	*%r13
10001fb25:	48 8b 35 d4 27 03 00	movq	206804(%rip), %rsi ## Objc selector ref: stringForObjectValue:
10001fb2c:	48 89 df	movq	%rbx, %rdi
10001fb2f:	48 89 c2	movq	%rax, %rdx
10001fb32:	41 ff d5	callq	*%r13
10001fb35:	48 8b 35 ec 27 03 00	movq	206828(%rip), %rsi ## Objc selector ref: stringWithFormat:
10001fb3c:	4c 89 e7	movq	%r12, %rdi
10001fb3f:	4c 89 f2	movq	%r14, %rdx
10001fb42:	48 89 c1	movq	%rax, %rcx
10001fb45:	31 c0	xorl	%eax, %eax
10001fb47:	41 ff d5	callq	*%r13
10001fb4a:	48 8b 35 9f 25 03 00	movq	206239(%rip), %rsi ## Objc selector ref: setStringValue:
10001fb51:	4c 89 ff	movq	%r15, %rdi
10001fb54:	eb 62	jmp	0x10001fbb8
10001fb56:	48 8b 05 a3 36 03 00	movq	210595(%rip), %rax
10001fb5d:	4d 8b 34 07	movq	(%r15,%rax), %r14
10001fb61:	48 8b 1d 60 2a 03 00	movq	207456(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
10001fb68:	48 8b 3d 31 2a 03 00	movq	207409(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001fb6f:	48 8b 35 72 1b 03 00	movq	203634(%rip), %rsi ## Objc selector ref: mainBundle
10001fb76:	41 ff d5	callq	*%r13
10001fb79:	48 8b 35 e0 1a 03 00	movq	203488(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001fb80:	48 8d 15 59 ef 01 00	leaq	126809(%rip), %rdx ## Objc cfstring ref: @"%d Points"
10001fb87:	48 8d 0d 12 d3 01 00	leaq	119570(%rip), %rcx ## Objc cfstring ref: @""
10001fb8e:	48 89 c7	movq	%rax, %rdi
10001fb91:	45 31 c0	xorl	%r8d, %r8d
10001fb94:	41 ff d5	callq	*%r13
10001fb97:	41 8b 4c 24 08	movl	8(%r12), %ecx
10001fb9c:	48 8b 35 85 27 03 00	movq	206725(%rip), %rsi ## Objc selector ref: stringWithFormat:
10001fba3:	48 89 df	movq	%rbx, %rdi
10001fba6:	48 89 c2	movq	%rax, %rdx
10001fba9:	31 c0	xorl	%eax, %eax
10001fbab:	41 ff d5	callq	*%r13
10001fbae:	48 8b 35 3b 25 03 00	movq	206139(%rip), %rsi ## Objc selector ref: setStringValue:
10001fbb5:	4c 89 f7	movq	%r14, %rdi
10001fbb8:	48 89 c2	movq	%rax, %rdx
10001fbbb:	41 ff d5	callq	*%r13
10001fbbe:	48 8b 7d d0	movq	-48(%rbp), %rdi
10001fbc2:	48 83 c4 18	addq	$24, %rsp
10001fbc6:	5b	popq	%rbx
10001fbc7:	41 5c	popq	%r12
10001fbc9:	41 5d	popq	%r13
10001fbcb:	41 5e	popq	%r14
10001fbcd:	41 5f	popq	%r15
10001fbcf:	5d	popq	%rbp
10001fbd0:	e9 3d f3 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
10001fbd5:	90	nop
10001fbd6:	90	nop
10001fbd7:	90	nop
10001fbd8:	55	pushq	%rbp
10001fbd9:	48 89 e5	movq	%rsp, %rbp
10001fbdc:	41 56	pushq	%r14
10001fbde:	53	pushq	%rbx
10001fbdf:	48 83 ec 10	subq	$16, %rsp
10001fbe3:	48 89 fb	movq	%rdi, %rbx
10001fbe6:	48 8b 05 1b 36 03 00	movq	210459(%rip), %rax
10001fbed:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001fbf1:	4c 8b 35 60 d0 01 00	movq	118880(%rip), %r14 ## literal pool symbol address: _objc_release
10001fbf8:	41 ff d6	callq	*%r14
10001fbfb:	48 8b 05 0e 36 03 00	movq	210446(%rip), %rax
10001fc02:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fc06:	41 ff d6	callq	*%r14
10001fc09:	48 8b 05 08 36 03 00	movq	210440(%rip), %rax
10001fc10:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fc14:	41 ff d6	callq	*%r14
10001fc17:	48 8b 05 02 36 03 00	movq	210434(%rip), %rax
10001fc1e:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fc22:	41 ff d6	callq	*%r14
10001fc25:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10001fc29:	48 89 1f	movq	%rbx, (%rdi)
10001fc2c:	48 8b 05 15 2c 03 00	movq	207893(%rip), %rax ## Objc class ref: ParaTag
10001fc33:	48 89 47 08	movq	%rax, 8(%rdi)
10001fc37:	48 8b 35 12 14 03 00	movq	201746(%rip), %rsi ## Objc selector ref: dealloc
10001fc3e:	e8 99 f8 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10001fc43:	48 83 c4 10	addq	$16, %rsp
10001fc47:	5b	popq	%rbx
10001fc48:	41 5e	popq	%r14
10001fc4a:	5d	popq	%rbp
10001fc4b:	c3	retq
10001fc4c:	55	pushq	%rbp
10001fc4d:	48 89 e5	movq	%rsp, %rbp
10001fc50:	41 57	pushq	%r15
10001fc52:	41 56	pushq	%r14
10001fc54:	41 55	pushq	%r13
10001fc56:	41 54	pushq	%r12
10001fc58:	53	pushq	%rbx
10001fc59:	50	pushq	%rax
10001fc5a:	48 89 fb	movq	%rdi, %rbx
10001fc5d:	48 8b 05 c4 35 03 00	movq	210372(%rip), %rax
10001fc64:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10001fc68:	4c 8b 35 a9 26 03 00	movq	206505(%rip), %r14 ## Objc selector ref: stringValue
10001fc6f:	4c 8b 25 aa cf 01 00	movq	118698(%rip), %r12 ## Objc message: -[%rdi stringValue]
10001fc76:	4c 89 f6	movq	%r14, %rsi
10001fc79:	41 ff d4	callq	*%r12
10001fc7c:	4c 8b 3d dd cf 01 00	movq	118749(%rip), %r15 ## literal pool symbol address: _objc_retain
10001fc83:	48 89 c7	movq	%rax, %rdi
10001fc86:	41 ff d7	callq	*%r15
10001fc89:	48 8b 0d 78 35 03 00	movq	210296(%rip), %rcx
10001fc90:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001fc94:	48 8b 05 95 35 03 00	movq	210325(%rip), %rax
10001fc9b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fc9f:	4c 89 f6	movq	%r14, %rsi
10001fca2:	41 ff d4	callq	*%r12
10001fca5:	48 89 c7	movq	%rax, %rdi
10001fca8:	41 ff d7	callq	*%r15
10001fcab:	48 8b 0d 5e 35 03 00	movq	210270(%rip), %rcx
10001fcb2:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001fcb6:	48 8b 05 7b 35 03 00	movq	210299(%rip), %rax
10001fcbd:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fcc1:	4c 89 f6	movq	%r14, %rsi
10001fcc4:	41 ff d4	callq	*%r12
10001fcc7:	48 89 c7	movq	%rax, %rdi
10001fcca:	41 ff d7	callq	*%r15
10001fccd:	48 8b 0d 44 35 03 00	movq	210244(%rip), %rcx
10001fcd4:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001fcd8:	4c 8b 2d 61 35 03 00	movq	210273(%rip), %r13
10001fcdf:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10001fce3:	4c 89 f6	movq	%r14, %rsi
10001fce6:	41 ff d4	callq	*%r12
10001fce9:	48 89 c7	movq	%rax, %rdi
10001fcec:	41 ff d7	callq	*%r15
10001fcef:	48 8b 0d 2a 35 03 00	movq	210218(%rip), %rcx
10001fcf6:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001fcfa:	48 8b 05 47 35 03 00	movq	210247(%rip), %rax
10001fd01:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd05:	48 8b 0d 44 35 03 00	movq	210244(%rip), %rcx
10001fd0c:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10001fd10:	48 8b 05 41 35 03 00	movq	210241(%rip), %rax
10001fd17:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd1b:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
10001fd20:	48 8b 05 39 35 03 00	movq	210233(%rip), %rax
10001fd27:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd2b:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
10001fd30:	48 8b 05 31 35 03 00	movq	210225(%rip), %rax
10001fd37:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd3b:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
10001fd40:	48 8b 05 29 35 03 00	movq	210217(%rip), %rax
10001fd47:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd4b:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
10001fd50:	48 8b 05 21 35 03 00	movq	210209(%rip), %rax
10001fd57:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd5b:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
10001fd60:	48 8b 05 19 35 03 00	movq	210201(%rip), %rax
10001fd67:	48 8b 04 03	movq	(%rbx,%rax), %rax
10001fd6b:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
10001fd70:	48 8b 3d f9 28 03 00	movq	207097(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFont
10001fd77:	48 8b 35 1a 15 03 00	movq	202010(%rip), %rsi ## Objc selector ref: fontWithName:size:
10001fd7e:	48 8d 15 bb e9 01 00	leaq	125371(%rip), %rdx ## Objc cfstring ref: @"Menlo"
10001fd85:	f2 0f 10 05 2b 86 01 00	movsd	99883(%rip), %xmm0
10001fd8d:	41 ff d4	callq	*%r12
10001fd90:	49 89 c6	movq	%rax, %r14
10001fd93:	48 8b 05 96 34 03 00	movq	210070(%rip), %rax
10001fd9a:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fd9e:	4c 8b 3d a3 20 03 00	movq	204963(%rip), %r15 ## Objc selector ref: setFont:
10001fda5:	4c 89 fe	movq	%r15, %rsi
10001fda8:	4c 89 f2	movq	%r14, %rdx
10001fdab:	41 ff d4	callq	*%r12
10001fdae:	48 8b 05 83 34 03 00	movq	210051(%rip), %rax
10001fdb5:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10001fdb9:	4c 89 fe	movq	%r15, %rsi
10001fdbc:	4c 89 f2	movq	%r14, %rdx
10001fdbf:	41 ff d4	callq	*%r12
10001fdc2:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10001fdc6:	4c 89 fe	movq	%r15, %rsi
10001fdc9:	4c 89 f2	movq	%r14, %rdx
10001fdcc:	4c 89 e0	movq	%r12, %rax
10001fdcf:	48 83 c4 08	addq	$8, %rsp
10001fdd3:	5b	popq	%rbx
10001fdd4:	41 5c	popq	%r12
10001fdd6:	41 5d	popq	%r13
10001fdd8:	41 5e	popq	%r14
10001fdda:	41 5f	popq	%r15
10001fddc:	5d	popq	%rbp
10001fddd:	ff e0	jmpq	*%rax
10001fddf:	55	pushq	%rbp
10001fde0:	48 89 e5	movq	%rsp, %rbp
10001fde3:	31 c0	xorl	%eax, %eax
10001fde5:	81 f9 61 72 61 70	cmpl	$1885434465, %ecx
10001fdeb:	0f 94 c0	sete	%al
10001fdee:	5d	popq	%rbp
10001fdef:	c3	retq
10001fdf0:	55	pushq	%rbp
10001fdf1:	48 89 e5	movq	%rsp, %rbp
10001fdf4:	41 56	pushq	%r14
10001fdf6:	53	pushq	%rbx
10001fdf7:	81 fa 43 52 54 62	cmpl	$1649693251, %edx
10001fdfd:	74 19	je	0x10001fe18
10001fdff:	81 fa 43 52 54 72	cmpl	$1918128707, %edx
10001fe05:	74 1a	je	0x10001fe21
10001fe07:	81 fa 43 52 54 67	cmpl	$1733579331, %edx
10001fe0d:	75 1b	jne	0x10001fe2a
10001fe0f:	48 8d 1d 0a ed 01 00	leaq	126218(%rip), %rbx ## Objc cfstring ref: @"Green parametric tone response curve"
10001fe16:	eb 19	jmp	0x10001fe31
10001fe18:	48 8d 1d 21 ed 01 00	leaq	126241(%rip), %rbx ## Objc cfstring ref: @"Blue parametric tone response curve"
10001fe1f:	eb 10	jmp	0x10001fe31
10001fe21:	48 8d 1d d8 ec 01 00	leaq	126168(%rip), %rbx ## Objc cfstring ref: @"Red parametric tone response curve"
10001fe28:	eb 07	jmp	0x10001fe31
10001fe2a:	48 8d 1d 2f ed 01 00	leaq	126255(%rip), %rbx ## Objc cfstring ref: @"Parametric tone response curve"
10001fe31:	48 8b 3d 68 27 03 00	movq	206696(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10001fe38:	48 8b 35 a9 18 03 00	movq	202921(%rip), %rsi ## Objc selector ref: mainBundle
10001fe3f:	4c 8b 35 da cd 01 00	movq	118234(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10001fe46:	41 ff d6	callq	*%r14
10001fe49:	48 8b 35 10 18 03 00	movq	202768(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10001fe50:	48 8d 0d 49 d0 01 00	leaq	118857(%rip), %rcx ## Objc cfstring ref: @""
10001fe57:	48 89 c7	movq	%rax, %rdi
10001fe5a:	48 89 da	movq	%rbx, %rdx
10001fe5d:	45 31 c0	xorl	%r8d, %r8d
10001fe60:	4c 89 f0	movq	%r14, %rax
10001fe63:	5b	popq	%rbx
10001fe64:	41 5e	popq	%r14
10001fe66:	5d	popq	%rbp
10001fe67:	ff e0	jmpq	*%rax
10001fe69:	55	pushq	%rbp
10001fe6a:	48 89 e5	movq	%rsp, %rbp
10001fe6d:	41 57	pushq	%r15
10001fe6f:	41 56	pushq	%r14
10001fe71:	41 55	pushq	%r13
10001fe73:	41 54	pushq	%r12
10001fe75:	53	pushq	%rbx
10001fe76:	48 83 ec 68	subq	$104, %rsp
10001fe7a:	41 89 cf	movl	%ecx, %r15d
10001fe7d:	49 89 d4	movq	%rdx, %r12
10001fe80:	49 89 fe	movq	%rdi, %r14
10001fe83:	48 8b 05 8e c9 01 00	movq	117134(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10001fe8a:	48 8b 00	movq	(%rax), %rax
10001fe8d:	48 89 45 d0	movq	%rax, -48(%rbp)
10001fe91:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10001fe95:	66 0f 11 45 bc	movupd	%xmm0, -68(%rbp)
10001fe9a:	66 0f 29 45 b0	movapd	%xmm0, -80(%rbp)
10001fe9f:	66 0f 29 45 a0	movapd	%xmm0, -96(%rbp)
10001fea4:	89 cf	movl	%ecx, %edi
10001fea6:	e8 a9 f3 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10001feab:	48 89 c3	movq	%rax, %rbx
10001feae:	4c 89 e7	movq	%r12, %rdi
10001feb1:	48 89 c6	movq	%rax, %rsi
10001feb4:	e8 c5 f3 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10001feb9:	49 89 c5	movq	%rax, %r13
10001febc:	48 89 df	movq	%rbx, %rdi
10001febf:	e8 4e f0 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001fec4:	4d 85 ed	testq	%r13, %r13
10001fec7:	0f 84 05 08 00 00	je	0x1000206d2
10001fecd:	4c 89 ef	movq	%r13, %rdi
10001fed0:	e8 d1 ef 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001fed5:	48 83 f8 0f	cmpq	$15, %rax
10001fed9:	0f 86 f8 02 00 00	jbe	0x1000201d7
10001fedf:	4c 89 ef	movq	%r13, %rdi
10001fee2:	e8 bf ef 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001fee7:	41 bc 2c 00 00 00	movl	$44, %r12d
10001feed:	48 83 f8 2c	cmpq	$44, %rax
10001fef1:	77 0b	ja	0x10001fefe
10001fef3:	4c 89 ef	movq	%r13, %rdi
10001fef6:	e8 ab ef 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001fefb:	49 89 c4	movq	%rax, %r12
10001fefe:	4c 89 ef	movq	%r13, %rdi
10001ff01:	e8 9a ef 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10001ff06:	48 8d 7d a0	leaq	-96(%rbp), %rdi
10001ff0a:	b9 2c 00 00 00	movl	$44, %ecx
10001ff0f:	48 89 c6	movq	%rax, %rsi
10001ff12:	4c 89 e2	movq	%r12, %rdx
10001ff15:	e8 8a f4 00 00	callq	0x10002f3a4 ## symbol stub for: ___memcpy_chk
10001ff1a:	4c 89 ef	movq	%r13, %rdi
10001ff1d:	e8 84 ef 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10001ff22:	49 89 c4	movq	%rax, %r12
10001ff25:	48 83 c0 f4	addq	$-12, %rax
10001ff29:	41 83 c4 f7	addl	$-9, %r12d
10001ff2d:	48 85 c0	testq	%rax, %rax
10001ff30:	44 0f 49 e0	cmovnsl	%eax, %r12d
10001ff34:	41 c1 ec 02	shrl	$2, %r12d
10001ff38:	4c 89 ef	movq	%r13, %rdi
10001ff3b:	e8 d2 ef 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10001ff40:	41 81 e4 ff ff 00 00	andl	$65535, %r12d
10001ff47:	0f 84 85 07 00 00	je	0x1000206d2
10001ff4d:	44 89 7d 98	movl	%r15d, -104(%rbp)
10001ff51:	4c 89 75 80	movq	%r14, -128(%rbp)
10001ff55:	48 8d 45 ac	leaq	-84(%rbp), %rax
10001ff59:	0f b7 40 fc	movzwl	-4(%rax), %eax
10001ff5d:	66 c1 c0 08	rolw	$8, %ax
10001ff61:	66 89 45 88	movw	%ax, -120(%rbp)
10001ff65:	44 89 e0	movl	%r12d, %eax
10001ff68:	31 c9	xorl	%ecx, %ecx
10001ff6a:	8b 54 8d ac	movl	-84(%rbp,%rcx,4), %edx
10001ff6e:	0f ca	bswapl	%edx
10001ff70:	89 54 8d ac	movl	%edx, -84(%rbp,%rcx,4)
10001ff74:	48 ff c1	incq	%rcx
10001ff77:	48 39 c8	cmpq	%rcx, %rax
10001ff7a:	75 ee	jne	0x10001ff6a
10001ff7c:	48 8b 1d 2d 1e 03 00	movq	204333(%rip), %rbx ## Objc selector ref: setDoubleValue:
10001ff83:	41 83 fc 02	cmpl	$2, %r12d
10001ff87:	41 be 01 00 00 00	movl	$1, %r14d
10001ff8d:	4c 89 65 90	movq	%r12, -112(%rbp)
10001ff91:	45 0f 43 f4	cmovael	%r12d, %r14d
10001ff95:	4c 8b 2d b4 32 03 00	movq	209588(%rip), %r13
10001ff9c:	4c 03 6d 80	addq	-128(%rbp), %r13
10001ffa0:	45 31 ff	xorl	%r15d, %r15d
10001ffa3:	4c 8b 25 76 cc 01 00	movq	117878(%rip), %r12 ## Objc message: -[%rdi setDoubleValue:]
10001ffaa:	4b 8b 7c fd 00	movq	(%r13,%r15,8), %rdi
10001ffaf:	0f 57 c0	xorps	%xmm0, %xmm0
10001ffb2:	f2 42 0f 2a 44 bd ac	cvtsi2sdl	-84(%rbp,%r15,4), %xmm0
10001ffb9:	f2 0f 59 05 9f 80 01 00	mulsd	98463(%rip), %xmm0
10001ffc1:	48 89 de	movq	%rbx, %rsi
10001ffc4:	41 ff d4	callq	*%r12
10001ffc7:	49 ff c7	incq	%r15
10001ffca:	4d 39 fe	cmpq	%r15, %r14
10001ffcd:	75 db	jne	0x10001ffaa
10001ffcf:	31 d2	xorl	%edx, %edx
10001ffd1:	48 8b 5d 90	movq	-112(%rbp), %rbx
10001ffd5:	83 fb 02	cmpl	$2, %ebx
10001ffd8:	0f 93 c2	setae	%dl
10001ffdb:	48 8b 35 de 1d 03 00	movq	204254(%rip), %rsi ## Objc selector ref: setEnableParam1:
10001ffe2:	4c 8b 75 80	movq	-128(%rbp), %r14
10001ffe6:	4c 89 f7	movq	%r14, %rdi
10001ffe9:	4d 89 e5	movq	%r12, %r13
10001ffec:	41 ff d4	callq	*%r12
10001ffef:	31 d2	xorl	%edx, %edx
10001fff1:	83 fb 03	cmpl	$3, %ebx
10001fff4:	0f 93 c2	setae	%dl
10001fff7:	48 8b 35 ca 1d 03 00	movq	204234(%rip), %rsi ## Objc selector ref: setEnableParam2:
10001fffe:	4c 89 f7	movq	%r14, %rdi
100020001:	41 ff d4	callq	*%r12
100020004:	31 d2	xorl	%edx, %edx
100020006:	83 fb 04	cmpl	$4, %ebx
100020009:	0f 93 c2	setae	%dl
10002000c:	48 8b 35 bd 1d 03 00	movq	204221(%rip), %rsi ## Objc selector ref: setEnableParam3:
100020013:	4c 89 f7	movq	%r14, %rdi
100020016:	41 ff d4	callq	*%r12
100020019:	31 d2	xorl	%edx, %edx
10002001b:	83 fb 05	cmpl	$5, %ebx
10002001e:	0f 93 c2	setae	%dl
100020021:	48 8b 35 b0 1d 03 00	movq	204208(%rip), %rsi ## Objc selector ref: setEnableParam4:
100020028:	4c 89 f7	movq	%r14, %rdi
10002002b:	41 ff d4	callq	*%r12
10002002e:	31 d2	xorl	%edx, %edx
100020030:	83 fb 06	cmpl	$6, %ebx
100020033:	0f 93 c2	setae	%dl
100020036:	48 8b 35 a3 1d 03 00	movq	204195(%rip), %rsi ## Objc selector ref: setEnableParam5:
10002003d:	4c 89 f7	movq	%r14, %rdi
100020040:	41 ff d4	callq	*%r12
100020043:	31 d2	xorl	%edx, %edx
100020045:	83 fb 07	cmpl	$7, %ebx
100020048:	0f 93 c2	setae	%dl
10002004b:	48 8b 35 96 1d 03 00	movq	204182(%rip), %rsi ## Objc selector ref: setEnableParam6:
100020052:	4c 89 f7	movq	%r14, %rdi
100020055:	41 ff d4	callq	*%r12
100020058:	31 c0	xorl	%eax, %eax
10002005a:	8b 55 98	movl	-104(%rbp), %edx
10002005d:	81 fa 43 52 54 72	cmpl	$1918128707, %edx
100020063:	b9 06 00 00 00	movl	$6, %ecx
100020068:	0f 44 c8	cmovel	%eax, %ecx
10002006b:	81 fa 43 52 54 67	cmpl	$1733579331, %edx
100020071:	b8 01 00 00 00	movl	$1, %eax
100020076:	0f 45 c1	cmovnel	%ecx, %eax
100020079:	81 fa 43 52 54 62	cmpl	$1649693251, %edx
10002007f:	b9 02 00 00 00	movl	$2, %ecx
100020084:	0f 45 c8	cmovnel	%eax, %ecx
100020087:	89 4d 90	movl	%ecx, -112(%rbp)
10002008a:	48 8b 05 97 31 03 00	movq	209303(%rip), %rax
100020091:	4d 8b 3c 06	movq	(%r14,%rax), %r15
100020095:	48 8b 3d 2c 25 03 00	movq	206124(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002009c:	48 8b 05 65 31 03 00	movq	209253(%rip), %rax
1000200a3:	49 8b 14 06	movq	(%r14,%rax), %rdx
1000200a7:	0f b7 5d 88	movzwl	-120(%rbp), %ebx
1000200ab:	48 8b 35 76 22 03 00	movq	205430(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000200b2:	89 d9	movl	%ebx, %ecx
1000200b4:	31 c0	xorl	%eax, %eax
1000200b6:	41 ff d4	callq	*%r12
1000200b9:	4c 8b 25 30 20 03 00	movq	204848(%rip), %r12 ## Objc selector ref: setStringValue:
1000200c0:	4c 89 ff	movq	%r15, %rdi
1000200c3:	4c 89 e6	movq	%r12, %rsi
1000200c6:	48 89 c2	movq	%rax, %rdx
1000200c9:	41 ff d5	callq	*%r13
1000200cc:	48 8b 3d 65 26 03 00	movq	206437(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSProcessInfo
1000200d3:	48 8b 35 e6 18 03 00	movq	202982(%rip), %rsi ## Objc selector ref: processInfo
1000200da:	41 ff d5	callq	*%r13
1000200dd:	48 8b 35 2c 0c 03 00	movq	199724(%rip), %rsi ## Objc selector ref: arguments
1000200e4:	48 89 c7	movq	%rax, %rdi
1000200e7:	41 ff d5	callq	*%r13
1000200ea:	48 8b 35 27 0e 03 00	movq	200231(%rip), %rsi ## Objc selector ref: componentsJoinedByString:
1000200f1:	48 8d 15 88 ea 01 00	leaq	125576(%rip), %rdx ## Objc cfstring ref: @":"
1000200f8:	48 89 c7	movq	%rax, %rdi
1000200fb:	41 ff d5	callq	*%r13
1000200fe:	66 83 fb 04	cmpw	$4, %bx
100020102:	48 89 5d 88	movq	%rbx, -120(%rbp)
100020106:	0f 87 f5 00 00 00	ja	0x100020201
10002010c:	48 8d 05 e5 05 00 00	leaq	1509(%rip), %rax
100020113:	48 63 0c 98	movslq	(%rax,%rbx,4), %rcx
100020117:	48 01 c1	addq	%rax, %rcx
10002011a:	ff e1	jmpq	*%rcx
10002011c:	48 8b 05 0d 31 03 00	movq	209165(%rip), %rax
100020123:	49 8d 0c 06	leaq	(%r14,%rax), %rcx
100020127:	48 89 4d 98	movq	%rcx, -104(%rbp)
10002012b:	49 8b 1c 06	movq	(%r14,%rax), %rbx
10002012f:	48 8b 3d 6a 24 03 00	movq	205930(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020136:	48 8b 35 ab 15 03 00	movq	202155(%rip), %rsi ## Objc selector ref: mainBundle
10002013d:	41 ff d5	callq	*%r13
100020140:	4c 8b 3d 19 15 03 00	movq	202009(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100020147:	48 8d 15 d2 eb 01 00	leaq	125906(%rip), %rdx ## Objc cfstring ref: @"CSU_para_0_1"
10002014e:	48 8d 0d 4b cd 01 00	leaq	118091(%rip), %rcx ## Objc cfstring ref: @""
100020155:	48 89 c7	movq	%rax, %rdi
100020158:	4c 89 fe	movq	%r15, %rsi
10002015b:	45 31 c0	xorl	%r8d, %r8d
10002015e:	41 ff d5	callq	*%r13
100020161:	48 89 df	movq	%rbx, %rdi
100020164:	4c 89 e6	movq	%r12, %rsi
100020167:	48 89 c2	movq	%rax, %rdx
10002016a:	41 ff d5	callq	*%r13
10002016d:	48 8b 05 c4 30 03 00	movq	209092(%rip), %rax
100020174:	49 8b 1c 06	movq	(%r14,%rax), %rbx
100020178:	48 8b 3d 21 24 03 00	movq	205857(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002017f:	48 8b 35 62 15 03 00	movq	202082(%rip), %rsi ## Objc selector ref: mainBundle
100020186:	41 ff d5	callq	*%r13
100020189:	48 8d 15 b0 eb 01 00	leaq	125872(%rip), %rdx ## Objc cfstring ref: @"CSU_para_0_2"
100020190:	48 89 c7	movq	%rax, %rdi
100020193:	4c 89 fe	movq	%r15, %rsi
100020196:	48 8d 0d 03 cd 01 00	leaq	118019(%rip), %rcx ## Objc cfstring ref: @""
10002019d:	45 31 c0	xorl	%r8d, %r8d
1000201a0:	41 ff d5	callq	*%r13
1000201a3:	48 89 df	movq	%rbx, %rdi
1000201a6:	4c 89 e6	movq	%r12, %rsi
1000201a9:	48 89 c2	movq	%rax, %rdx
1000201ac:	41 ff d5	callq	*%r13
1000201af:	48 8b 05 8a 30 03 00	movq	209034(%rip), %rax
1000201b6:	4d 8b 3c 06	movq	(%r14,%rax), %r15
1000201ba:	48 8b 3d df 23 03 00	movq	205791(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000201c1:	48 8b 35 20 15 03 00	movq	202016(%rip), %rsi ## Objc selector ref: mainBundle
1000201c8:	41 ff d5	callq	*%r13
1000201cb:	48 8d 15 8e eb 01 00	leaq	125838(%rip), %rdx ## Objc cfstring ref: @"CSU_para_0_3"
1000201d2:	e9 5a 03 00 00	jmp	0x100020531
1000201d7:	48 8b 05 3a c6 01 00	movq	116282(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
1000201de:	48 8b 00	movq	(%rax), %rax
1000201e1:	48 3b 45 d0	cmpq	-48(%rbp), %rax
1000201e5:	0f 85 06 05 00 00	jne	0x1000206f1
1000201eb:	4c 89 ef	movq	%r13, %rdi
1000201ee:	48 83 c4 68	addq	$104, %rsp
1000201f2:	5b	popq	%rbx
1000201f3:	41 5c	popq	%r12
1000201f5:	41 5d	popq	%r13
1000201f7:	41 5e	popq	%r14
1000201f9:	41 5f	popq	%r15
1000201fb:	5d	popq	%rbp
1000201fc:	e9 11 ed 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100020201:	48 8b 05 28 30 03 00	movq	208936(%rip), %rax
100020208:	49 8d 1c 06	leaq	(%r14,%rax), %rbx
10002020c:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100020210:	4c 8d 3d 89 cc 01 00	leaq	117897(%rip), %r15 ## Objc cfstring ref: @""
100020217:	4c 89 e6	movq	%r12, %rsi
10002021a:	4c 89 fa	movq	%r15, %rdx
10002021d:	41 ff d5	callq	*%r13
100020220:	48 8b 05 11 30 03 00	movq	208913(%rip), %rax
100020227:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10002022b:	4c 89 e6	movq	%r12, %rsi
10002022e:	4c 89 fa	movq	%r15, %rdx
100020231:	41 ff d5	callq	*%r13
100020234:	48 8b 05 05 30 03 00	movq	208901(%rip), %rax
10002023b:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10002023f:	4c 89 e6	movq	%r12, %rsi
100020242:	4c 89 fa	movq	%r15, %rdx
100020245:	e9 0b 03 00 00	jmp	0x100020555
10002024a:	48 8b 05 df 2f 03 00	movq	208863(%rip), %rax
100020251:	49 8d 0c 06	leaq	(%r14,%rax), %rcx
100020255:	48 89 4d 98	movq	%rcx, -104(%rbp)
100020259:	49 8b 1c 06	movq	(%r14,%rax), %rbx
10002025d:	48 8b 3d 3c 23 03 00	movq	205628(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020264:	48 8b 35 7d 14 03 00	movq	201853(%rip), %rsi ## Objc selector ref: mainBundle
10002026b:	41 ff d5	callq	*%r13
10002026e:	4c 8b 3d eb 13 03 00	movq	201707(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100020275:	48 8d 15 44 ea 01 00	leaq	125508(%rip), %rdx ## Objc cfstring ref: @"CSU_para_1_1"
10002027c:	48 8d 0d 1d cc 01 00	leaq	117789(%rip), %rcx ## Objc cfstring ref: @""
100020283:	48 89 c7	movq	%rax, %rdi
100020286:	4c 89 fe	movq	%r15, %rsi
100020289:	45 31 c0	xorl	%r8d, %r8d
10002028c:	41 ff d5	callq	*%r13
10002028f:	48 89 df	movq	%rbx, %rdi
100020292:	4c 89 e6	movq	%r12, %rsi
100020295:	48 89 c2	movq	%rax, %rdx
100020298:	41 ff d5	callq	*%r13
10002029b:	48 8b 05 96 2f 03 00	movq	208790(%rip), %rax
1000202a2:	49 8b 1c 06	movq	(%r14,%rax), %rbx
1000202a6:	48 8b 3d f3 22 03 00	movq	205555(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000202ad:	48 8b 35 34 14 03 00	movq	201780(%rip), %rsi ## Objc selector ref: mainBundle
1000202b4:	41 ff d5	callq	*%r13
1000202b7:	48 8d 15 22 ea 01 00	leaq	125474(%rip), %rdx ## Objc cfstring ref: @"CSU_para_1_2"
1000202be:	48 89 c7	movq	%rax, %rdi
1000202c1:	4c 89 fe	movq	%r15, %rsi
1000202c4:	48 8d 0d d5 cb 01 00	leaq	117717(%rip), %rcx ## Objc cfstring ref: @""
1000202cb:	45 31 c0	xorl	%r8d, %r8d
1000202ce:	41 ff d5	callq	*%r13
1000202d1:	48 89 df	movq	%rbx, %rdi
1000202d4:	4c 89 e6	movq	%r12, %rsi
1000202d7:	48 89 c2	movq	%rax, %rdx
1000202da:	41 ff d5	callq	*%r13
1000202dd:	48 8b 05 5c 2f 03 00	movq	208732(%rip), %rax
1000202e4:	4d 8b 3c 06	movq	(%r14,%rax), %r15
1000202e8:	48 8b 3d b1 22 03 00	movq	205489(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000202ef:	48 8b 35 f2 13 03 00	movq	201714(%rip), %rsi ## Objc selector ref: mainBundle
1000202f6:	41 ff d5	callq	*%r13
1000202f9:	48 8d 15 00 ea 01 00	leaq	125440(%rip), %rdx ## Objc cfstring ref: @"CSU_para_1_3"
100020300:	e9 2c 02 00 00	jmp	0x100020531
100020305:	48 8b 05 24 2f 03 00	movq	208676(%rip), %rax
10002030c:	49 8d 0c 06	leaq	(%r14,%rax), %rcx
100020310:	48 89 4d 98	movq	%rcx, -104(%rbp)
100020314:	49 8b 1c 06	movq	(%r14,%rax), %rbx
100020318:	48 8b 3d 81 22 03 00	movq	205441(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002031f:	48 8b 35 c2 13 03 00	movq	201666(%rip), %rsi ## Objc selector ref: mainBundle
100020326:	41 ff d5	callq	*%r13
100020329:	4c 8b 3d 30 13 03 00	movq	201520(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100020330:	48 8d 15 29 e9 01 00	leaq	125225(%rip), %rdx ## Objc cfstring ref: @"CSU_para_2_1"
100020337:	48 8d 0d 62 cb 01 00	leaq	117602(%rip), %rcx ## Objc cfstring ref: @""
10002033e:	48 89 c7	movq	%rax, %rdi
100020341:	4c 89 fe	movq	%r15, %rsi
100020344:	45 31 c0	xorl	%r8d, %r8d
100020347:	41 ff d5	callq	*%r13
10002034a:	48 89 df	movq	%rbx, %rdi
10002034d:	4c 89 e6	movq	%r12, %rsi
100020350:	48 89 c2	movq	%rax, %rdx
100020353:	41 ff d5	callq	*%r13
100020356:	48 8b 05 db 2e 03 00	movq	208603(%rip), %rax
10002035d:	49 8b 1c 06	movq	(%r14,%rax), %rbx
100020361:	48 8b 3d 38 22 03 00	movq	205368(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020368:	48 8b 35 79 13 03 00	movq	201593(%rip), %rsi ## Objc selector ref: mainBundle
10002036f:	41 ff d5	callq	*%r13
100020372:	48 8d 15 07 e9 01 00	leaq	125191(%rip), %rdx ## Objc cfstring ref: @"CSU_para_2_2"
100020379:	48 89 c7	movq	%rax, %rdi
10002037c:	4c 89 fe	movq	%r15, %rsi
10002037f:	48 8d 0d 1a cb 01 00	leaq	117530(%rip), %rcx ## Objc cfstring ref: @""
100020386:	45 31 c0	xorl	%r8d, %r8d
100020389:	41 ff d5	callq	*%r13
10002038c:	48 89 df	movq	%rbx, %rdi
10002038f:	4c 89 e6	movq	%r12, %rsi
100020392:	48 89 c2	movq	%rax, %rdx
100020395:	41 ff d5	callq	*%r13
100020398:	48 8b 05 a1 2e 03 00	movq	208545(%rip), %rax
10002039f:	4d 8b 3c 06	movq	(%r14,%rax), %r15
1000203a3:	48 8b 3d f6 21 03 00	movq	205302(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000203aa:	48 8b 35 37 13 03 00	movq	201527(%rip), %rsi ## Objc selector ref: mainBundle
1000203b1:	41 ff d5	callq	*%r13
1000203b4:	48 8d 15 e5 e8 01 00	leaq	125157(%rip), %rdx ## Objc cfstring ref: @"CSU_para_2_3"
1000203bb:	e9 71 01 00 00	jmp	0x100020531
1000203c0:	48 8b 05 69 2e 03 00	movq	208489(%rip), %rax
1000203c7:	49 8d 0c 06	leaq	(%r14,%rax), %rcx
1000203cb:	48 89 4d 98	movq	%rcx, -104(%rbp)
1000203cf:	49 8b 1c 06	movq	(%r14,%rax), %rbx
1000203d3:	48 8b 3d c6 21 03 00	movq	205254(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000203da:	48 8b 35 07 13 03 00	movq	201479(%rip), %rsi ## Objc selector ref: mainBundle
1000203e1:	41 ff d5	callq	*%r13
1000203e4:	4c 8b 3d 75 12 03 00	movq	201333(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
1000203eb:	48 8d 15 0e e8 01 00	leaq	124942(%rip), %rdx ## Objc cfstring ref: @"CSU_para_3_1"
1000203f2:	48 8d 0d a7 ca 01 00	leaq	117415(%rip), %rcx ## Objc cfstring ref: @""
1000203f9:	48 89 c7	movq	%rax, %rdi
1000203fc:	4c 89 fe	movq	%r15, %rsi
1000203ff:	45 31 c0	xorl	%r8d, %r8d
100020402:	41 ff d5	callq	*%r13
100020405:	48 89 df	movq	%rbx, %rdi
100020408:	4c 89 e6	movq	%r12, %rsi
10002040b:	48 89 c2	movq	%rax, %rdx
10002040e:	41 ff d5	callq	*%r13
100020411:	48 8b 05 20 2e 03 00	movq	208416(%rip), %rax
100020418:	49 8b 1c 06	movq	(%r14,%rax), %rbx
10002041c:	48 8b 3d 7d 21 03 00	movq	205181(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020423:	48 8b 35 be 12 03 00	movq	201406(%rip), %rsi ## Objc selector ref: mainBundle
10002042a:	41 ff d5	callq	*%r13
10002042d:	48 8d 15 ec e7 01 00	leaq	124908(%rip), %rdx ## Objc cfstring ref: @"CSU_para_3_2"
100020434:	48 89 c7	movq	%rax, %rdi
100020437:	4c 89 fe	movq	%r15, %rsi
10002043a:	48 8d 0d 5f ca 01 00	leaq	117343(%rip), %rcx ## Objc cfstring ref: @""
100020441:	45 31 c0	xorl	%r8d, %r8d
100020444:	41 ff d5	callq	*%r13
100020447:	48 89 df	movq	%rbx, %rdi
10002044a:	4c 89 e6	movq	%r12, %rsi
10002044d:	48 89 c2	movq	%rax, %rdx
100020450:	41 ff d5	callq	*%r13
100020453:	48 8b 05 e6 2d 03 00	movq	208358(%rip), %rax
10002045a:	4d 8b 3c 06	movq	(%r14,%rax), %r15
10002045e:	48 8b 3d 3b 21 03 00	movq	205115(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020465:	48 8b 35 7c 12 03 00	movq	201340(%rip), %rsi ## Objc selector ref: mainBundle
10002046c:	41 ff d5	callq	*%r13
10002046f:	48 8d 15 ca e7 01 00	leaq	124874(%rip), %rdx ## Objc cfstring ref: @"CSU_para_3_3"
100020476:	e9 b6 00 00 00	jmp	0x100020531
10002047b:	48 8b 05 ae 2d 03 00	movq	208302(%rip), %rax
100020482:	49 8d 0c 06	leaq	(%r14,%rax), %rcx
100020486:	48 89 4d 98	movq	%rcx, -104(%rbp)
10002048a:	49 8b 1c 06	movq	(%r14,%rax), %rbx
10002048e:	48 8b 3d 0b 21 03 00	movq	205067(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020495:	48 8b 35 4c 12 03 00	movq	201292(%rip), %rsi ## Objc selector ref: mainBundle
10002049c:	41 ff d5	callq	*%r13
10002049f:	4c 8b 3d ba 11 03 00	movq	201146(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
1000204a6:	48 8d 15 f3 e6 01 00	leaq	124659(%rip), %rdx ## Objc cfstring ref: @"CSU_para_4_1"
1000204ad:	48 8d 0d ec c9 01 00	leaq	117228(%rip), %rcx ## Objc cfstring ref: @""
1000204b4:	48 89 c7	movq	%rax, %rdi
1000204b7:	4c 89 fe	movq	%r15, %rsi
1000204ba:	45 31 c0	xorl	%r8d, %r8d
1000204bd:	41 ff d5	callq	*%r13
1000204c0:	48 89 df	movq	%rbx, %rdi
1000204c3:	4c 89 e6	movq	%r12, %rsi
1000204c6:	48 89 c2	movq	%rax, %rdx
1000204c9:	41 ff d5	callq	*%r13
1000204cc:	48 8b 05 65 2d 03 00	movq	208229(%rip), %rax
1000204d3:	49 8b 1c 06	movq	(%r14,%rax), %rbx
1000204d7:	48 8b 3d c2 20 03 00	movq	204994(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000204de:	48 8b 35 03 12 03 00	movq	201219(%rip), %rsi ## Objc selector ref: mainBundle
1000204e5:	41 ff d5	callq	*%r13
1000204e8:	48 8d 15 d1 e6 01 00	leaq	124625(%rip), %rdx ## Objc cfstring ref: @"CSU_para_4_2"
1000204ef:	48 89 c7	movq	%rax, %rdi
1000204f2:	4c 89 fe	movq	%r15, %rsi
1000204f5:	48 8d 0d a4 c9 01 00	leaq	117156(%rip), %rcx ## Objc cfstring ref: @""
1000204fc:	45 31 c0	xorl	%r8d, %r8d
1000204ff:	41 ff d5	callq	*%r13
100020502:	48 89 df	movq	%rbx, %rdi
100020505:	4c 89 e6	movq	%r12, %rsi
100020508:	48 89 c2	movq	%rax, %rdx
10002050b:	41 ff d5	callq	*%r13
10002050e:	48 8b 05 2b 2d 03 00	movq	208171(%rip), %rax
100020515:	4d 8b 3c 06	movq	(%r14,%rax), %r15
100020519:	48 8b 3d 80 20 03 00	movq	204928(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020520:	48 8b 35 c1 11 03 00	movq	201153(%rip), %rsi ## Objc selector ref: mainBundle
100020527:	41 ff d5	callq	*%r13
10002052a:	48 8d 15 af e6 01 00	leaq	124591(%rip), %rdx ## Objc cfstring ref: @"CSU_para_4_3"
100020531:	48 89 c7	movq	%rax, %rdi
100020534:	48 8b 35 25 11 03 00	movq	200997(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002053b:	48 8d 0d 5e c9 01 00	leaq	117086(%rip), %rcx ## Objc cfstring ref: @""
100020542:	48 8b 5d 98	movq	-104(%rbp), %rbx
100020546:	45 31 c0	xorl	%r8d, %r8d
100020549:	41 ff d5	callq	*%r13
10002054c:	4c 89 ff	movq	%r15, %rdi
10002054f:	4c 89 e6	movq	%r12, %rsi
100020552:	48 89 c2	movq	%rax, %rdx
100020555:	41 ff d5	callq	*%r13
100020558:	48 89 5d 98	movq	%rbx, -104(%rbp)
10002055c:	48 8b 3b	movq	(%rbx), %rdi
10002055f:	48 8b 35 ea 07 03 00	movq	198634(%rip), %rsi ## Objc selector ref: attributedStringValue
100020566:	ff 15 b4 c6 01 00	callq	*116404(%rip) ## Objc message: +[NSBundle attributedStringValue]
10002056c:	48 85 c0	testq	%rax, %rax
10002056f:	0f 84 2f 01 00 00	je	0x1000206a4
100020575:	48 89 c3	movq	%rax, %rbx
100020578:	48 8b 35 79 10 03 00	movq	200825(%rip), %rsi ## Objc selector ref: length
10002057f:	48 89 c7	movq	%rax, %rdi
100020582:	ff 15 98 c6 01 00	callq	*116376(%rip) ## Objc message: -[%rdi length]
100020588:	48 85 c0	testq	%rax, %rax
10002058b:	0f 84 13 01 00 00	je	0x1000206a4
100020591:	48 8b 35 30 1d 03 00	movq	204080(%rip), %rsi ## Objc selector ref: string
100020598:	48 89 df	movq	%rbx, %rdi
10002059b:	41 ff d5	callq	*%r13
10002059e:	48 8b 35 9b 14 03 00	movq	201883(%rip), %rsi ## Objc selector ref: rangeOfString:
1000205a5:	48 8d 15 d4 e7 01 00	leaq	124884(%rip), %rdx ## Objc cfstring ref: @"y"
1000205ac:	48 89 c7	movq	%rax, %rdi
1000205af:	41 ff d5	callq	*%r13
1000205b2:	48 85 c0	testq	%rax, %rax
1000205b5:	0f 84 e9 00 00 00	je	0x1000206a4
1000205bb:	48 85 d2	testq	%rdx, %rdx
1000205be:	0f 84 e0 00 00 00	je	0x1000206a4
1000205c4:	49 89 c7	movq	%rax, %r15
1000205c7:	48 8b 3d 72 21 03 00	movq	205170(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSMutableAttributedString
1000205ce:	49 89 d4	movq	%rdx, %r12
1000205d1:	e8 e8 ee 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000205d6:	48 8b 35 3b 0e 03 00	movq	200251(%rip), %rsi ## Objc selector ref: initWithAttributedString:
1000205dd:	48 89 c7	movq	%rax, %rdi
1000205e0:	48 89 da	movq	%rbx, %rdx
1000205e3:	ff 15 37 c6 01 00	callq	*116279(%rip) ## Objc message: +[NSMutableAttributedString initWithAttributedString:]
1000205e9:	48 85 c0	testq	%rax, %rax
1000205ec:	0f 84 b2 00 00 00	je	0x1000206a4
1000205f2:	4c 89 e3	movq	%r12, %rbx
1000205f5:	49 89 c4	movq	%rax, %r12
1000205f8:	48 8b 3d c9 1f 03 00	movq	204745(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000205ff:	48 8b 35 2a 1d 03 00	movq	204074(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
100020606:	48 8d 15 bb 9e 01 00	leaq	106171(%rip), %rdx ## literal pool for: "\316\263"
10002060d:	41 ff d5	callq	*%r13
100020610:	48 8b 35 f9 14 03 00	movq	201977(%rip), %rsi ## Objc selector ref: replaceCharactersInRange:withString:
100020617:	4c 89 e7	movq	%r12, %rdi
10002061a:	4c 89 fa	movq	%r15, %rdx
10002061d:	48 89 d9	movq	%rbx, %rcx
100020620:	49 89 c0	movq	%rax, %r8
100020623:	41 ff d5	callq	*%r13
100020626:	48 8b 35 2b 1d 03 00	movq	204075(%rip), %rsi ## Objc selector ref: superscriptRange:
10002062d:	4c 89 e7	movq	%r12, %rdi
100020630:	4c 89 fa	movq	%r15, %rdx
100020633:	48 89 d9	movq	%rbx, %rcx
100020636:	41 ff d5	callq	*%r13
100020639:	48 8b 05 28 c0 01 00	movq	114728(%rip), %rax ## literal pool symbol address: _NSFontAttributeName
100020640:	48 8b 00	movq	(%rax), %rax
100020643:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
10002064a:	48 8b 3d 1f 20 03 00	movq	204831(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFont
100020651:	48 8b 35 40 0c 03 00	movq	199744(%rip), %rsi ## Objc selector ref: fontWithName:size:
100020658:	48 8d 15 41 e7 01 00	leaq	124737(%rip), %rdx ## Objc cfstring ref: @"Symbol"
10002065f:	f2 0f 10 05 79 8c 01 00	movsd	101497(%rip), %xmm0
100020667:	41 ff d5	callq	*%r13
10002066a:	48 8b 35 bf 05 03 00	movq	198079(%rip), %rsi ## Objc selector ref: addAttribute:value:range:
100020671:	4c 89 e7	movq	%r12, %rdi
100020674:	48 8b 95 78 ff ff ff	movq	-136(%rbp), %rdx
10002067b:	48 89 c1	movq	%rax, %rcx
10002067e:	4d 89 f8	movq	%r15, %r8
100020681:	49 89 d9	movq	%rbx, %r9
100020684:	41 ff d5	callq	*%r13
100020687:	48 8b 45 98	movq	-104(%rbp), %rax
10002068b:	48 8b 38	movq	(%rax), %rdi
10002068e:	48 8b 35 13 16 03 00	movq	202259(%rip), %rsi ## Objc selector ref: setAttributedStringValue:
100020695:	4c 89 e2	movq	%r12, %rdx
100020698:	41 ff d5	callq	*%r13
10002069b:	4c 89 e7	movq	%r12, %rdi
10002069e:	ff 15 b4 c5 01 00	callq	*116148(%rip) ## literal pool symbol address: _objc_release
1000206a4:	48 8b 1d dd 2b 03 00	movq	207837(%rip), %rbx
1000206ab:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000206af:	48 8b 35 da 04 03 00	movq	197850(%rip), %rsi ## Objc selector ref: SetPlotColor:
1000206b6:	8b 55 90	movl	-112(%rbp), %edx
1000206b9:	41 ff d5	callq	*%r13
1000206bc:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000206c0:	48 8b 35 e9 04 03 00	movq	197865(%rip), %rsi ## Objc selector ref: SetPlotPara:Type:
1000206c7:	48 8d 55 ac	leaq	-84(%rbp), %rdx
1000206cb:	48 8b 4d 88	movq	-120(%rbp), %rcx
1000206cf:	41 ff d5	callq	*%r13
1000206d2:	48 8b 05 3f c1 01 00	movq	115007(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
1000206d9:	48 8b 00	movq	(%rax), %rax
1000206dc:	48 3b 45 d0	cmpq	-48(%rbp), %rax
1000206e0:	75 0f	jne	0x1000206f1
1000206e2:	48 83 c4 68	addq	$104, %rsp
1000206e6:	5b	popq	%rbx
1000206e7:	41 5c	popq	%r12
1000206e9:	41 5d	popq	%r13
1000206eb:	41 5e	popq	%r14
1000206ed:	41 5f	popq	%r15
1000206ef:	5d	popq	%rbp
1000206f0:	c3	retq
1000206f1:	e8 ba ec 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
1000206f6:	66 90	nop
24 fa ff ff	.long 4294965796	@ KIND_JUMP_TABLE32
52 fb ff ff	.long 4294966098	@ KIND_JUMP_TABLE32
0d fc ff ff	.long 4294966285	@ KIND_JUMP_TABLE32
c8 fc ff ff	.long 4294966472	@ KIND_JUMP_TABLE32
83 fd ff ff	.long 4294966659	@ KIND_JUMP_TABLE32
10002070c:	55	pushq	%rbp
10002070d:	48 89 e5	movq	%rsp, %rbp
100020710:	48 8b 05 79 2b 03 00	movq	207737(%rip), %rax
100020717:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002071b:	5d	popq	%rbp
10002071c:	c3	retq
10002071d:	55	pushq	%rbp
10002071e:	48 89 e5	movq	%rsp, %rbp
100020721:	48 8b 05 68 2b 03 00	movq	207720(%rip), %rax
100020728:	88 14 07	movb	%dl, (%rdi,%rax)
10002072b:	5d	popq	%rbp
10002072c:	c3	retq
10002072d:	55	pushq	%rbp
10002072e:	48 89 e5	movq	%rsp, %rbp
100020731:	48 8b 05 60 2b 03 00	movq	207712(%rip), %rax
100020738:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002073c:	5d	popq	%rbp
10002073d:	c3	retq
10002073e:	55	pushq	%rbp
10002073f:	48 89 e5	movq	%rsp, %rbp
100020742:	48 8b 05 4f 2b 03 00	movq	207695(%rip), %rax
100020749:	88 14 07	movb	%dl, (%rdi,%rax)
10002074c:	5d	popq	%rbp
10002074d:	c3	retq
10002074e:	55	pushq	%rbp
10002074f:	48 89 e5	movq	%rsp, %rbp
100020752:	48 8b 05 47 2b 03 00	movq	207687(%rip), %rax
100020759:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002075d:	5d	popq	%rbp
10002075e:	c3	retq
10002075f:	55	pushq	%rbp
100020760:	48 89 e5	movq	%rsp, %rbp
100020763:	48 8b 05 36 2b 03 00	movq	207670(%rip), %rax
10002076a:	88 14 07	movb	%dl, (%rdi,%rax)
10002076d:	5d	popq	%rbp
10002076e:	c3	retq
10002076f:	55	pushq	%rbp
100020770:	48 89 e5	movq	%rsp, %rbp
100020773:	48 8b 05 2e 2b 03 00	movq	207662(%rip), %rax
10002077a:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002077e:	5d	popq	%rbp
10002077f:	c3	retq
100020780:	55	pushq	%rbp
100020781:	48 89 e5	movq	%rsp, %rbp
100020784:	48 8b 05 1d 2b 03 00	movq	207645(%rip), %rax
10002078b:	88 14 07	movb	%dl, (%rdi,%rax)
10002078e:	5d	popq	%rbp
10002078f:	c3	retq
100020790:	55	pushq	%rbp
100020791:	48 89 e5	movq	%rsp, %rbp
100020794:	48 8b 05 15 2b 03 00	movq	207637(%rip), %rax
10002079b:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002079f:	5d	popq	%rbp
1000207a0:	c3	retq
1000207a1:	55	pushq	%rbp
1000207a2:	48 89 e5	movq	%rsp, %rbp
1000207a5:	48 8b 05 04 2b 03 00	movq	207620(%rip), %rax
1000207ac:	88 14 07	movb	%dl, (%rdi,%rax)
1000207af:	5d	popq	%rbp
1000207b0:	c3	retq
1000207b1:	55	pushq	%rbp
1000207b2:	48 89 e5	movq	%rsp, %rbp
1000207b5:	48 8b 05 fc 2a 03 00	movq	207612(%rip), %rax
1000207bc:	0f be 04 07	movsbl	(%rdi,%rax), %eax
1000207c0:	5d	popq	%rbp
1000207c1:	c3	retq
1000207c2:	55	pushq	%rbp
1000207c3:	48 89 e5	movq	%rsp, %rbp
1000207c6:	48 8b 05 eb 2a 03 00	movq	207595(%rip), %rax
1000207cd:	88 14 07	movb	%dl, (%rdi,%rax)
1000207d0:	5d	popq	%rbp
1000207d1:	c3	retq
1000207d2:	55	pushq	%rbp
1000207d3:	48 89 e5	movq	%rsp, %rbp
1000207d6:	53	pushq	%rbx
1000207d7:	48 83 ec 18	subq	$24, %rsp
1000207db:	48 89 fb	movq	%rdi, %rbx
1000207de:	48 8b 05 db 2a 03 00	movq	207579(%rip), %rax
1000207e5:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000207e9:	48 85 ff	testq	%rdi, %rdi
1000207ec:	74 05	je	0x1000207f3
1000207ee:	e8 e1 eb 00 00	callq	0x10002f3d4 ## symbol stub for: _free
1000207f3:	48 8d 7d e8	leaq	-24(%rbp), %rdi
1000207f7:	48 89 1f	movq	%rbx, (%rdi)
1000207fa:	48 8b 05 4f 20 03 00	movq	204879(%rip), %rax ## Objc class ref: NumsTag
100020801:	48 89 47 08	movq	%rax, 8(%rdi)
100020805:	48 8b 35 44 08 03 00	movq	198724(%rip), %rsi ## Objc selector ref: dealloc
10002080c:	e8 cb ec 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100020811:	48 83 c4 18	addq	$24, %rsp
100020815:	5b	popq	%rbx
100020816:	5d	popq	%rbp
100020817:	c3	retq
100020818:	55	pushq	%rbp
100020819:	48 89 e5	movq	%rsp, %rbp
10002081c:	b0 01	movb	$1, %al
10002081e:	81 f9 37 30 69 75	cmpl	$1969827895, %ecx
100020824:	7f 1a	jg	0x100020840
100020826:	81 f9 32 33 66 73	cmpl	$1936077618, %ecx
10002082c:	74 33	je	0x100020861
10002082e:	81 f9 36 31 66 75	cmpl	$1969631542, %ecx
100020834:	74 2b	je	0x100020861
100020836:	81 f9 32 33 66 75	cmpl	$1969632050, %ecx
10002083c:	74 23	je	0x100020861
10002083e:	eb 18	jmp	0x100020858
100020840:	81 f9 38 30 69 75	cmpl	$1969827896, %ecx
100020846:	74 19	je	0x100020861
100020848:	81 f9 36 31 69 75	cmpl	$1969828150, %ecx
10002084e:	74 11	je	0x100020861
100020850:	81 f9 32 33 69 75	cmpl	$1969828658, %ecx
100020856:	74 09	je	0x100020861
100020858:	81 f9 34 36 69 75	cmpl	$1969829428, %ecx
10002085e:	0f 94 c0	sete	%al
100020861:	0f b6 c0	movzbl	%al, %eax
100020864:	5d	popq	%rbp
100020865:	c3	retq
100020866:	55	pushq	%rbp
100020867:	48 89 e5	movq	%rsp, %rbp
10002086a:	41 56	pushq	%r14
10002086c:	53	pushq	%rbx
10002086d:	81 f9 37 30 69 75	cmpl	$1969827895, %ecx
100020873:	7e 21	jle	0x100020896
100020875:	81 f9 31 33 69 75	cmpl	$1969828657, %ecx
10002087b:	7f 3a	jg	0x1000208b7
10002087d:	81 f9 38 30 69 75	cmpl	$1969827896, %ecx
100020883:	74 4b	je	0x1000208d0
100020885:	81 f9 36 31 69 75	cmpl	$1969828150, %ecx
10002088b:	75 5e	jne	0x1000208eb
10002088d:	4c 8d 35 4c e5 01 00	leaq	124236(%rip), %r14 ## Objc cfstring ref: @"Unsigned 16-bit integers"
100020894:	eb 63	jmp	0x1000208f9
100020896:	81 f9 32 33 66 73	cmpl	$1936077618, %ecx
10002089c:	74 3b	je	0x1000208d9
10002089e:	81 f9 36 31 66 75	cmpl	$1969631542, %ecx
1000208a4:	74 4c	je	0x1000208f2
1000208a6:	81 f9 32 33 66 75	cmpl	$1969632050, %ecx
1000208ac:	75 3d	jne	0x1000208eb
1000208ae:	4c 8d 35 cb e5 01 00	leaq	124363(%rip), %r14 ## Objc cfstring ref: @"Unsigned 16.16-bit fixed values"
1000208b5:	eb 42	jmp	0x1000208f9
1000208b7:	81 f9 32 33 69 75	cmpl	$1969828658, %ecx
1000208bd:	74 23	je	0x1000208e2
1000208bf:	81 f9 34 36 69 75	cmpl	$1969829428, %ecx
1000208c5:	75 24	jne	0x1000208eb
1000208c7:	4c 8d 35 52 e5 01 00	leaq	124242(%rip), %r14 ## Objc cfstring ref: @"Unsigned 64-bit integers"
1000208ce:	eb 29	jmp	0x1000208f9
1000208d0:	4c 8d 35 e9 e4 01 00	leaq	124137(%rip), %r14 ## Objc cfstring ref: @"Unsigned 8-bit integers"
1000208d7:	eb 20	jmp	0x1000208f9
1000208d9:	4c 8d 35 80 e5 01 00	leaq	124288(%rip), %r14 ## Objc cfstring ref: @"Signed 15.16-bit fixed values"
1000208e0:	eb 17	jmp	0x1000208f9
1000208e2:	4c 8d 35 17 e5 01 00	leaq	124183(%rip), %r14 ## Objc cfstring ref: @"Unsigned 32-bit integers"
1000208e9:	eb 0e	jmp	0x1000208f9
1000208eb:	31 c0	xorl	%eax, %eax
1000208ed:	5b	popq	%rbx
1000208ee:	41 5e	popq	%r14
1000208f0:	5d	popq	%rbp
1000208f1:	c3	retq
1000208f2:	4c 8d 35 47 e5 01 00	leaq	124231(%rip), %r14 ## Objc cfstring ref: @"Unsigned 1.15-bit fixed values"
1000208f9:	48 8b 3d a0 1c 03 00	movq	203936(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100020900:	48 8b 35 e1 0d 03 00	movq	200161(%rip), %rsi ## Objc selector ref: mainBundle
100020907:	48 8b 1d 12 c3 01 00	movq	115474(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002090e:	ff d3	callq	*%rbx
100020910:	48 8b 35 49 0d 03 00	movq	200009(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100020917:	48 8d 0d 82 c5 01 00	leaq	116098(%rip), %rcx ## Objc cfstring ref: @""
10002091e:	48 89 c7	movq	%rax, %rdi
100020921:	4c 89 f2	movq	%r14, %rdx
100020924:	45 31 c0	xorl	%r8d, %r8d
100020927:	48 89 d8	movq	%rbx, %rax
10002092a:	5b	popq	%rbx
10002092b:	41 5e	popq	%r14
10002092d:	5d	popq	%rbp
10002092e:	ff e0	jmpq	*%rax
100020930:	55	pushq	%rbp
100020931:	48 89 e5	movq	%rsp, %rbp
100020934:	41 57	pushq	%r15
100020936:	41 56	pushq	%r14
100020938:	41 55	pushq	%r13
10002093a:	41 54	pushq	%r12
10002093c:	53	pushq	%rbx
10002093d:	48 83 ec 18	subq	$24, %rsp
100020941:	45 89 c4	movl	%r8d, %r12d
100020944:	49 89 d6	movq	%rdx, %r14
100020947:	49 89 fd	movq	%rdi, %r13
10002094a:	89 4d d0	movl	%ecx, -48(%rbp)
10002094d:	89 cf	movl	%ecx, %edi
10002094f:	e8 00 e9 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
100020954:	48 89 c3	movq	%rax, %rbx
100020957:	4c 89 f7	movq	%r14, %rdi
10002095a:	48 89 c6	movq	%rax, %rsi
10002095d:	e8 1c e9 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
100020962:	49 89 c7	movq	%rax, %r15
100020965:	48 89 df	movq	%rbx, %rdi
100020968:	e8 a5 e5 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002096d:	48 8b 1d 4c 29 03 00	movq	207180(%rip), %rbx
100020974:	49 c7 44 1d 00 00 00 00 00	movq	$0, (%r13,%rbx)
10002097d:	4d 85 ff	testq	%r15, %r15
100020980:	0f 84 84 00 00 00	je	0x100020a0a
100020986:	44 89 65 d4	movl	%r12d, -44(%rbp)
10002098a:	4c 89 ff	movq	%r15, %rdi
10002098d:	e8 14 e5 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100020992:	48 89 45 c8	movq	%rax, -56(%rbp)
100020996:	4c 8d 70 f8	leaq	-8(%rax), %r14
10002099a:	4c 89 f7	movq	%r14, %rdi
10002099d:	e8 10 eb 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
1000209a2:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
1000209a7:	48 85 c0	testq	%rax, %rax
1000209aa:	74 1a	je	0x1000209c6
1000209ac:	49 89 c4	movq	%rax, %r12
1000209af:	4c 89 ff	movq	%r15, %rdi
1000209b2:	e8 e9 e4 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
1000209b7:	48 8d 70 08	leaq	8(%rax), %rsi
1000209bb:	4c 89 e7	movq	%r12, %rdi
1000209be:	4c 89 f2	movq	%r14, %rdx
1000209c1:	e8 f2 ea 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
1000209c6:	4c 89 ff	movq	%r15, %rdi
1000209c9:	e8 44 e5 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000209ce:	49 83 7c 1d 00 00	cmpq	$0, (%r13,%rbx)
1000209d4:	8b 4d d4	movl	-44(%rbp), %ecx
1000209d7:	74 31	je	0x100020a0a
1000209d9:	48 8b 05 e8 28 03 00	movq	207080(%rip), %rax
1000209e0:	41 89 4c 05 00	movl	%ecx, (%r13,%rax)
1000209e5:	45 31 ff	xorl	%r15d, %r15d
1000209e8:	81 f9 37 30 69 75	cmpl	$1969827895, %ecx
1000209ee:	7e 29	jle	0x100020a19
1000209f0:	81 f9 31 33 69 75	cmpl	$1969828657, %ecx
1000209f6:	7f 3b	jg	0x100020a33
1000209f8:	81 f9 38 30 69 75	cmpl	$1969827896, %ecx
1000209fe:	74 5b	je	0x100020a5b
100020a00:	81 f9 36 31 69 75	cmpl	$1969828150, %ecx
100020a06:	74 4b	je	0x100020a53
100020a08:	eb 57	jmp	0x100020a61
100020a0a:	48 83 c4 18	addq	$24, %rsp
100020a0e:	5b	popq	%rbx
100020a0f:	41 5c	popq	%r12
100020a11:	41 5d	popq	%r13
100020a13:	41 5e	popq	%r14
100020a15:	41 5f	popq	%r15
100020a17:	5d	popq	%rbp
100020a18:	c3	retq
100020a19:	81 f9 32 33 66 73	cmpl	$1936077618, %ecx
100020a1f:	74 2a	je	0x100020a4b
100020a21:	81 f9 36 31 66 75	cmpl	$1969631542, %ecx
100020a27:	74 2a	je	0x100020a53
100020a29:	81 f9 32 33 66 75	cmpl	$1969632050, %ecx
100020a2f:	74 1a	je	0x100020a4b
100020a31:	eb 2e	jmp	0x100020a61
100020a33:	81 f9 32 33 69 75	cmpl	$1969828658, %ecx
100020a39:	74 10	je	0x100020a4b
100020a3b:	81 f9 34 36 69 75	cmpl	$1969829428, %ecx
100020a41:	75 1e	jne	0x100020a61
100020a43:	41 bf 08 00 00 00	movl	$8, %r15d
100020a49:	eb 16	jmp	0x100020a61
100020a4b:	41 bf 04 00 00 00	movl	$4, %r15d
100020a51:	eb 0e	jmp	0x100020a61
100020a53:	41 bf 02 00 00 00	movl	$2, %r15d
100020a59:	eb 06	jmp	0x100020a61
100020a5b:	41 bf 01 00 00 00	movl	$1, %r15d
100020a61:	48 8b 35 10 06 03 00	movq	198160(%rip), %rsi ## Objc selector ref: describeTagType:dataType:dataSize:
100020a68:	4c 8b 35 b1 c1 01 00	movq	115121(%rip), %r14 ## Objc message: -[%rdi describeTagType:dataType:dataSize:]
100020a6f:	4c 89 ef	movq	%r13, %rdi
100020a72:	8b 55 d0	movl	-48(%rbp), %edx
100020a75:	48 8b 5d c8	movq	-56(%rbp), %rbx
100020a79:	49 89 d8	movq	%rbx, %r8
100020a7c:	41 ff d6	callq	*%r14
100020a7f:	49 89 c4	movq	%rax, %r12
100020a82:	48 8b 05 47 28 03 00	movq	206919(%rip), %rax
100020a89:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100020a8e:	48 8b 35 eb 18 03 00	movq	202987(%rip), %rsi ## Objc selector ref: tableColumnWithIdentifier:
100020a95:	48 8d 15 04 df 01 00	leaq	122628(%rip), %rdx ## Objc cfstring ref: @"Value"
100020a9c:	41 ff d6	callq	*%r14
100020a9f:	48 8b 35 8a 08 03 00	movq	198794(%rip), %rsi ## Objc selector ref: headerCell
100020aa6:	48 89 c7	movq	%rax, %rdi
100020aa9:	41 ff d6	callq	*%r14
100020aac:	48 8b 35 3d 16 03 00	movq	202301(%rip), %rsi ## Objc selector ref: setStringValue:
100020ab3:	48 89 c7	movq	%rax, %rdi
100020ab6:	4c 89 e2	movq	%r12, %rdx
100020ab9:	41 ff d6	callq	*%r14
100020abc:	48 89 d8	movq	%rbx, %rax
100020abf:	31 d2	xorl	%edx, %edx
100020ac1:	49 f7 f7	divq	%r15
100020ac4:	48 8b 0d 0d 28 03 00	movq	206861(%rip), %rcx
100020acb:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100020ad0:	48 8b 1d f9 27 03 00	movq	206841(%rip), %rbx
100020ad7:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100020adc:	48 8b 35 0d 0d 03 00	movq	199949(%rip), %rsi ## Objc selector ref: noteNumberOfRowsChanged
100020ae3:	41 ff d6	callq	*%r14
100020ae6:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
100020aeb:	48 8b 35 be 0f 03 00	movq	200638(%rip), %rsi ## Objc selector ref: reloadData
100020af2:	4c 89 f0	movq	%r14, %rax
100020af5:	48 83 c4 18	addq	$24, %rsp
100020af9:	5b	popq	%rbx
100020afa:	41 5c	popq	%r12
100020afc:	41 5d	popq	%r13
100020afe:	41 5e	popq	%r14
100020b00:	41 5f	popq	%r15
100020b02:	5d	popq	%rbp
100020b03:	ff e0	jmpq	*%rax
100020b05:	55	pushq	%rbp
100020b06:	48 89 e5	movq	%rsp, %rbp
100020b09:	48 8b 05 c8 27 03 00	movq	206792(%rip), %rax
100020b10:	48 8b 04 07	movq	(%rdi,%rax), %rax
100020b14:	5d	popq	%rbp
100020b15:	c3	retq
100020b16:	55	pushq	%rbp
100020b17:	48 89 e5	movq	%rsp, %rbp
100020b1a:	41 57	pushq	%r15
100020b1c:	41 56	pushq	%r14
100020b1e:	53	pushq	%rbx
100020b1f:	50	pushq	%rax
100020b20:	4d 89 c7	movq	%r8, %r15
100020b23:	49 89 fe	movq	%rdi, %r14
100020b26:	48 8b 35 1b 08 03 00	movq	198683(%rip), %rsi ## Objc selector ref: identifier
100020b2d:	48 8b 1d ec c0 01 00	movq	114924(%rip), %rbx ## Objc message: -[%rdi identifier]
100020b34:	48 89 cf	movq	%rcx, %rdi
100020b37:	ff d3	callq	*%rbx
100020b39:	48 8b 35 48 0a 03 00	movq	199240(%rip), %rsi ## Objc selector ref: isEqualToString:
100020b40:	48 8d 15 b9 c5 01 00	leaq	116153(%rip), %rdx ## Objc cfstring ref: @"#"
100020b47:	48 89 c7	movq	%rax, %rdi
100020b4a:	ff d3	callq	*%rbx
100020b4c:	84 c0	testb	%al, %al
100020b4e:	74 24	je	0x100020b74
100020b50:	48 8b 3d 99 1a 03 00	movq	203417(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020b57:	49 ff c7	incq	%r15
100020b5a:	48 8b 35 cf 0c 03 00	movq	199887(%rip), %rsi ## Objc selector ref: numberWithLong:
100020b61:	4c 89 fa	movq	%r15, %rdx
100020b64:	48 83 c4 08	addq	$8, %rsp
100020b68:	5b	popq	%rbx
100020b69:	41 5e	popq	%r14
100020b6b:	41 5f	popq	%r15
100020b6d:	5d	popq	%rbp
100020b6e:	ff 25 ac c0 01 00	jmpq	*114860(%rip) ## Objc message: +[NSNumber numberWithLong:]
100020b74:	48 8b 05 4d 27 03 00	movq	206669(%rip), %rax
100020b7b:	41 8b 04 06	movl	(%r14,%rax), %eax
100020b7f:	3d 37 30 69 75	cmpl	$1969827895, %eax
100020b84:	7e 47	jle	0x100020bcd
100020b86:	3d 31 33 69 75	cmpl	$1969828657, %eax
100020b8b:	7f 79	jg	0x100020c06
100020b8d:	3d 38 30 69 75	cmpl	$1969827896, %eax
100020b92:	0f 84 a9 00 00 00	je	0x100020c41
100020b98:	3d 36 31 69 75	cmpl	$1969828150, %eax
100020b9d:	0f 85 16 01 00 00	jne	0x100020cb9
100020ba3:	48 8b 3d 46 1a 03 00	movq	203334(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020baa:	48 8b 05 0f 27 03 00	movq	206607(%rip), %rax
100020bb1:	49 8b 04 06	movq	(%r14,%rax), %rax
100020bb5:	42 0f b7 04 78	movzwl	(%rax,%r15,2), %eax
100020bba:	66 c1 c0 08	rolw	$8, %ax
100020bbe:	48 8b 35 8b 0c 03 00	movq	199819(%rip), %rsi ## Objc selector ref: numberWithUnsignedShort:
100020bc5:	0f b7 d0	movzwl	%ax, %edx
100020bc8:	e9 92 00 00 00	jmp	0x100020c5f
100020bcd:	3d 32 33 66 73	cmpl	$1936077618, %eax
100020bd2:	0f 84 97 00 00 00	je	0x100020c6f
100020bd8:	3d 36 31 66 75	cmpl	$1969631542, %eax
100020bdd:	0f 84 e3 00 00 00	je	0x100020cc6
100020be3:	3d 32 33 66 75	cmpl	$1969632050, %eax
100020be8:	0f 85 cb 00 00 00	jne	0x100020cb9
100020bee:	48 8b 05 cb 26 03 00	movq	206539(%rip), %rax
100020bf5:	49 8b 04 06	movq	(%r14,%rax), %rax
100020bf9:	42 8b 04 b8	movl	(%rax,%r15,4), %eax
100020bfd:	0f c8	bswapl	%eax
100020bff:	f2 48 0f 2a c0	cvtsi2sd	%rax, %xmm0
100020c04:	eb 7e	jmp	0x100020c84
100020c06:	3d 32 33 69 75	cmpl	$1969828658, %eax
100020c0b:	0f 84 84 00 00 00	je	0x100020c95
100020c11:	3d 34 36 69 75	cmpl	$1969829428, %eax
100020c16:	0f 85 9d 00 00 00	jne	0x100020cb9
100020c1c:	48 8b 3d cd 19 03 00	movq	203213(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020c23:	48 8b 05 96 26 03 00	movq	206486(%rip), %rax
100020c2a:	49 8b 04 06	movq	(%r14,%rax), %rax
100020c2e:	4a 8b 14 f8	movq	(%rax,%r15,8), %rdx
100020c32:	48 0f ca	bswapq	%rdx
100020c35:	48 8b 35 0c 0c 03 00	movq	199692(%rip), %rsi ## Objc selector ref: numberWithUnsignedLongLong:
100020c3c:	e9 23 ff ff ff	jmp	0x100020b64
100020c41:	48 8b 3d a8 19 03 00	movq	203176(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020c48:	48 8b 05 71 26 03 00	movq	206449(%rip), %rax
100020c4f:	49 8b 04 06	movq	(%r14,%rax), %rax
100020c53:	42 0f b6 14 38	movzbl	(%rax,%r15), %edx
100020c58:	48 8b 35 d9 0b 03 00	movq	199641(%rip), %rsi ## Objc selector ref: numberWithUnsignedChar:
100020c5f:	48 83 c4 08	addq	$8, %rsp
100020c63:	5b	popq	%rbx
100020c64:	41 5e	popq	%r14
100020c66:	41 5f	popq	%r15
100020c68:	5d	popq	%rbp
100020c69:	ff 25 b1 bf 01 00	jmpq	*114609(%rip) ## Objc message: +[NSNumber numberWithUnsignedChar:]
100020c6f:	48 8b 05 4a 26 03 00	movq	206410(%rip), %rax
100020c76:	49 8b 04 06	movq	(%r14,%rax), %rax
100020c7a:	42 8b 04 b8	movl	(%rax,%r15,4), %eax
100020c7e:	0f c8	bswapl	%eax
100020c80:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
100020c84:	48 8b 3d 65 19 03 00	movq	203109(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020c8b:	f2 0f 59 05 cd 73 01 00	mulsd	95181(%rip), %xmm0
100020c93:	eb 5b	jmp	0x100020cf0
100020c95:	48 8b 3d 54 19 03 00	movq	203092(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020c9c:	48 8b 05 1d 26 03 00	movq	206365(%rip), %rax
100020ca3:	49 8b 04 06	movq	(%r14,%rax), %rax
100020ca7:	42 8b 14 b8	movl	(%rax,%r15,4), %edx
100020cab:	0f ca	bswapl	%edx
100020cad:	48 8b 35 8c 0b 03 00	movq	199564(%rip), %rsi ## Objc selector ref: numberWithUnsignedLong:
100020cb4:	e9 ab fe ff ff	jmp	0x100020b64
100020cb9:	31 c0	xorl	%eax, %eax
100020cbb:	48 83 c4 08	addq	$8, %rsp
100020cbf:	5b	popq	%rbx
100020cc0:	41 5e	popq	%r14
100020cc2:	41 5f	popq	%r15
100020cc4:	5d	popq	%rbp
100020cc5:	c3	retq
100020cc6:	48 8b 05 f3 25 03 00	movq	206323(%rip), %rax
100020ccd:	49 8b 04 06	movq	(%r14,%rax), %rax
100020cd1:	42 0f b7 04 78	movzwl	(%rax,%r15,2), %eax
100020cd6:	66 c1 c0 08	rolw	$8, %ax
100020cda:	0f b7 c0	movzwl	%ax, %eax
100020cdd:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
100020ce1:	48 8b 3d 08 19 03 00	movq	203016(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100020ce8:	f2 0f 59 05 38 77 01 00	mulsd	96056(%rip), %xmm0
100020cf0:	48 8b 35 19 0b 03 00	movq	199449(%rip), %rsi ## Objc selector ref: numberWithDouble:
100020cf7:	48 83 c4 08	addq	$8, %rsp
100020cfb:	5b	popq	%rbx
100020cfc:	41 5e	popq	%r14
100020cfe:	41 5f	popq	%r15
100020d00:	5d	popq	%rbp
100020d01:	ff 25 19 bf 01 00	jmpq	*114457(%rip) ## Objc message: +[NSNumber numberWithDouble:]
100020d07:	55	pushq	%rbp
100020d08:	48 89 e5	movq	%rsp, %rbp
100020d0b:	5d	popq	%rbp
100020d0c:	c3	retq
100020d0d:	55	pushq	%rbp
100020d0e:	48 89 e5	movq	%rsp, %rbp
100020d11:	41 56	pushq	%r14
100020d13:	53	pushq	%rbx
100020d14:	48 83 ec 70	subq	$112, %rsp
100020d18:	48 89 fb	movq	%rdi, %rbx
100020d1b:	48 8d 7d a0	leaq	-96(%rbp), %rdi
100020d1f:	48 89 1f	movq	%rbx, (%rdi)
100020d22:	48 8b 05 2f 1b 03 00	movq	203567(%rip), %rax ## Objc class ref: AutoWrappingTextField
100020d29:	48 89 47 08	movq	%rax, 8(%rdi)
100020d2d:	48 8b 35 3c 11 03 00	movq	201020(%rip), %rsi ## Objc selector ref: setFrameSize:
100020d34:	e8 a3 e7 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setFrameSize:]
100020d39:	48 8b 35 f8 07 03 00	movq	198648(%rip), %rsi ## Objc selector ref: invalidateIntrinsicContentSize
100020d40:	48 89 df	movq	%rbx, %rdi
100020d43:	ff 15 d7 be 01 00	callq	*114391(%rip) ## Objc message: -[%rdi invalidateIntrinsicContentSize]
100020d49:	48 85 db	testq	%rbx, %rbx
100020d4c:	74 46	je	0x100020d94
100020d4e:	48 8b 15 4b 05 03 00	movq	197963(%rip), %rdx ## Objc selector ref: frame
100020d55:	4c 8d 75 b0	leaq	-80(%rbp), %r14
100020d59:	4c 89 f7	movq	%r14, %rdi
100020d5c:	48 89 de	movq	%rbx, %rsi
100020d5f:	e8 7e e7 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100020d64:	48 8b 15 55 ff 02 00	movq	196437(%rip), %rdx ## Objc selector ref: alignmentRectForFrame:
100020d6b:	41 0f 10 06	movups	(%r14), %xmm0
100020d6f:	41 0f 10 4e 10	movups	16(%r14), %xmm1
100020d74:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100020d79:	0f 11 04 24	movups	%xmm0, (%rsp)
100020d7d:	4c 8d 75 d0	leaq	-48(%rbp), %r14
100020d81:	4c 89 f7	movq	%r14, %rdi
100020d84:	48 89 de	movq	%rbx, %rsi
100020d87:	e8 56 e7 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
100020d8c:	f2 41 0f 10 46 10	movsd	16(%r14), %xmm0
100020d92:	eb 16	jmp	0x100020daa
100020d94:	0f 57 c0	xorps	%xmm0, %xmm0
100020d97:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
100020d9b:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
100020d9f:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
100020da3:	0f 29 45 e0	movaps	%xmm0, -32(%rbp)
100020da7:	0f 57 c0	xorps	%xmm0, %xmm0
100020daa:	48 8b 35 6f 12 03 00	movq	201327(%rip), %rsi ## Objc selector ref: setPreferredMaxLayoutWidth:
100020db1:	48 89 df	movq	%rbx, %rdi
100020db4:	ff 15 66 be 01 00	callq	*114278(%rip) ## Objc message: -[%rdi setPreferredMaxLayoutWidth:]
100020dba:	48 83 c4 70	addq	$112, %rsp
100020dbe:	5b	popq	%rbx
100020dbf:	41 5e	popq	%r14
100020dc1:	5d	popq	%rbp
100020dc2:	c3	retq
100020dc3:	55	pushq	%rbp
100020dc4:	48 89 e5	movq	%rsp, %rbp
100020dc7:	41 57	pushq	%r15
100020dc9:	41 56	pushq	%r14
100020dcb:	41 55	pushq	%r13
100020dcd:	41 54	pushq	%r12
100020dcf:	53	pushq	%rbx
100020dd0:	48 83 ec 28	subq	$40, %rsp
100020dd4:	48 89 fb	movq	%rdi, %rbx
100020dd7:	48 8b 3d 4a 18 03 00	movq	202826(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBezierPath
100020dde:	48 8b 35 ab ff 02 00	movq	196523(%rip), %rsi ## Objc selector ref: bezierPath
100020de5:	4c 8b 35 34 be 01 00	movq	114228(%rip), %r14 ## Objc message: +[NSBezierPath bezierPath]
100020dec:	41 ff d6	callq	*%r14
100020def:	49 89 c5	movq	%rax, %r13
100020df2:	48 8b 35 d7 15 03 00	movq	202199(%rip), %rsi ## Objc selector ref: title
100020df9:	48 89 df	movq	%rbx, %rdi
100020dfc:	41 ff d6	callq	*%r14
100020dff:	48 8b 35 c2 fd 02 00	movq	196034(%rip), %rsi ## Objc selector ref: UTF8String
100020e06:	48 89 c7	movq	%rax, %rdi
100020e09:	41 ff d6	callq	*%r14
100020e0c:	44 8a 20	movb	(%rax), %r12b
100020e0f:	48 8b 35 52 07 03 00	movq	198482(%rip), %rsi ## Objc selector ref: isEnabled
100020e16:	48 89 df	movq	%rbx, %rdi
100020e19:	41 ff d6	callq	*%r14
100020e1c:	41 89 c7	movl	%eax, %r15d
100020e1f:	48 8b 35 0a 00 03 00	movq	196618(%rip), %rsi ## Objc selector ref: cell
100020e26:	48 89 df	movq	%rbx, %rdi
100020e29:	41 ff d6	callq	*%r14
100020e2c:	48 8b 35 65 07 03 00	movq	198501(%rip), %rsi ## Objc selector ref: isHighlighted
100020e33:	48 89 c7	movq	%rax, %rdi
100020e36:	41 ff d6	callq	*%r14
100020e39:	89 c3	movl	%eax, %ebx
100020e3b:	48 8b 35 3e 13 03 00	movq	201534(%rip), %rsi ## Objc selector ref: setWindingRule:
100020e42:	ba 01 00 00 00	movl	$1, %edx
100020e47:	4c 89 ef	movq	%r13, %rdi
100020e4a:	41 ff d6	callq	*%r14
100020e4d:	48 8b 35 84 fe 02 00	movq	196228(%rip), %rsi ## Objc selector ref: appendBezierPathWithOvalInRect:
100020e54:	0f 10 05 e5 84 01 00	movups	99557(%rip), %xmm0
100020e5b:	0f 11 44 24 10	movups	%xmm0, 16(%rsp)
100020e60:	0f 10 05 c9 84 01 00	movups	99529(%rip), %xmm0
100020e67:	0f 11 04 24	movups	%xmm0, (%rsp)
100020e6b:	4c 89 ef	movq	%r13, %rdi
100020e6e:	41 ff d6	callq	*%r14
100020e71:	41 80 fc 3b	cmpb	$59, %r12b
100020e75:	0f 8e 91 00 00 00	jle	0x100020f0c
100020e7b:	41 80 fc 78	cmpb	$120, %r12b
100020e7f:	0f 84 2b 01 00 00	je	0x100020fb0
100020e85:	41 80 fc 3e	cmpb	$62, %r12b
100020e89:	0f 84 71 02 00 00	je	0x100021100
100020e8f:	41 80 fc 3c	cmpb	$60, %r12b
100020e93:	0f 85 2d 04 00 00	jne	0x1000212c6
100020e99:	48 8b 35 f8 08 03 00	movq	198904(%rip), %rsi ## Objc selector ref: moveToPoint:
100020ea0:	f2 0f 10 05 c8 70 01 00	movsd	94408(%rip), %xmm0
100020ea8:	f2 0f 10 0d 40 84 01 00	movsd	99392(%rip), %xmm1
100020eb0:	4c 89 ef	movq	%r13, %rdi
100020eb3:	48 8b 05 66 bd 01 00	movq	114022(%rip), %rax ## Objc message: -[%rdi moveToPoint:]
100020eba:	41 89 dc	movl	%ebx, %r12d
100020ebd:	48 89 c3	movq	%rax, %rbx
100020ec0:	ff d0	callq	*%rax
100020ec2:	4c 8b 35 47 07 03 00	movq	198471(%rip), %r14 ## Objc selector ref: lineToPoint:
100020ec9:	f2 0f 10 05 2f 84 01 00	movsd	99375(%rip), %xmm0
100020ed1:	f2 0f 10 0d 7f 70 01 00	movsd	94335(%rip), %xmm1
100020ed9:	4c 89 ef	movq	%r13, %rdi
100020edc:	4c 89 f6	movq	%r14, %rsi
100020edf:	ff d3	callq	*%rbx
100020ee1:	f2 0f 10 0d 1f 84 01 00	movsd	99359(%rip), %xmm1
100020ee9:	4c 89 ef	movq	%r13, %rdi
100020eec:	4c 89 f6	movq	%r14, %rsi
100020eef:	f2 0f 10 05 09 84 01 00	movsd	99337(%rip), %xmm0
100020ef7:	ff d3	callq	*%rbx
100020ef9:	4c 89 ef	movq	%r13, %rdi
100020efc:	4c 89 f6	movq	%r14, %rsi
100020eff:	f2 0f 10 05 69 70 01 00	movsd	94313(%rip), %xmm0
100020f07:	e9 62 02 00 00	jmp	0x10002116e
100020f0c:	41 80 fc 2b	cmpb	$43, %r12b
100020f10:	0f 84 6a 02 00 00	je	0x100021180
100020f16:	41 80 fc 2d	cmpb	$45, %r12b
100020f1a:	0f 85 a6 03 00 00	jne	0x1000212c6
100020f20:	48 8b 35 71 08 03 00	movq	198769(%rip), %rsi ## Objc selector ref: moveToPoint:
100020f27:	f2 0f 10 05 41 70 01 00	movsd	94273(%rip), %xmm0
100020f2f:	f2 0f 10 0d b1 83 01 00	movsd	99249(%rip), %xmm1
100020f37:	4c 89 ef	movq	%r13, %rdi
100020f3a:	41 89 dc	movl	%ebx, %r12d
100020f3d:	48 8b 1d dc bc 01 00	movq	113884(%rip), %rbx ## Objc message: -[%rdi moveToPoint:]
100020f44:	ff d3	callq	*%rbx
100020f46:	4c 8b 35 c3 06 03 00	movq	198339(%rip), %r14 ## Objc selector ref: lineToPoint:
100020f4d:	f2 0f 10 05 33 70 01 00	movsd	94259(%rip), %xmm0
100020f55:	4c 89 ef	movq	%r13, %rdi
100020f58:	4c 89 f6	movq	%r14, %rsi
100020f5b:	f2 0f 10 0d 85 83 01 00	movsd	99205(%rip), %xmm1
100020f63:	ff d3	callq	*%rbx
100020f65:	f2 0f 10 0d f3 6f 01 00	movsd	94195(%rip), %xmm1
100020f6d:	4c 89 ef	movq	%r13, %rdi
100020f70:	4c 89 f6	movq	%r14, %rsi
100020f73:	f2 0f 10 05 0d 70 01 00	movsd	94221(%rip), %xmm0
100020f7b:	ff d3	callq	*%rbx
100020f7d:	4c 89 ef	movq	%r13, %rdi
100020f80:	4c 89 f6	movq	%r14, %rsi
100020f83:	f2 0f 10 05 e5 6f 01 00	movsd	94181(%rip), %xmm0
100020f8b:	f2 0f 10 0d cd 6f 01 00	movsd	94157(%rip), %xmm1
100020f93:	ff d3	callq	*%rbx
100020f95:	4c 89 ef	movq	%r13, %rdi
100020f98:	4c 89 f6	movq	%r14, %rsi
100020f9b:	f2 0f 10 05 cd 6f 01 00	movsd	94157(%rip), %xmm0
100020fa3:	f2 0f 10 0d 3d 83 01 00	movsd	99133(%rip), %xmm1
100020fab:	e9 c6 01 00 00	jmp	0x100021176
100020fb0:	48 8b 35 e1 07 03 00	movq	198625(%rip), %rsi ## Objc selector ref: moveToPoint:
100020fb7:	f2 0f 10 05 29 83 01 00	movsd	99113(%rip), %xmm0
100020fbf:	f2 0f 10 0d 29 83 01 00	movsd	99113(%rip), %xmm1
100020fc7:	4c 89 ef	movq	%r13, %rdi
100020fca:	41 89 de	movl	%ebx, %r14d
100020fcd:	48 8b 1d 4c bc 01 00	movq	113740(%rip), %rbx ## Objc message: -[%rdi moveToPoint:]
100020fd4:	ff d3	callq	*%rbx
100020fd6:	4c 8b 25 33 06 03 00	movq	198195(%rip), %r12 ## Objc selector ref: lineToPoint:
100020fdd:	f2 0f 10 05 73 6f 01 00	movsd	94067(%rip), %xmm0
100020fe5:	f2 0f 10 0d 0b 83 01 00	movsd	99083(%rip), %xmm1
100020fed:	4c 89 ef	movq	%r13, %rdi
100020ff0:	4c 89 e6	movq	%r12, %rsi
100020ff3:	ff d3	callq	*%rbx
100020ff5:	4c 89 ef	movq	%r13, %rdi
100020ff8:	4c 89 e6	movq	%r12, %rsi
100020ffb:	f2 0f 10 05 f5 82 01 00	movsd	99061(%rip), %xmm0
100021003:	f2 0f 10 0d 4d 6f 01 00	movsd	94029(%rip), %xmm1
10002100b:	ff d3	callq	*%rbx
10002100d:	4c 89 ef	movq	%r13, %rdi
100021010:	4c 89 e6	movq	%r12, %rsi
100021013:	f2 0f 10 05 d5 82 01 00	movsd	99029(%rip), %xmm0
10002101b:	f2 0f 10 0d c5 82 01 00	movsd	99013(%rip), %xmm1
100021023:	ff d3	callq	*%rbx
100021025:	f2 0f 10 05 d3 82 01 00	movsd	99027(%rip), %xmm0
10002102d:	4c 89 ef	movq	%r13, %rdi
100021030:	4c 89 e6	movq	%r12, %rsi
100021033:	f2 0f 10 0d 1d 6f 01 00	movsd	93981(%rip), %xmm1
10002103b:	ff d3	callq	*%rbx
10002103d:	f2 0f 10 05 c3 82 01 00	movsd	99011(%rip), %xmm0
100021045:	4c 89 ef	movq	%r13, %rdi
100021048:	4c 89 e6	movq	%r12, %rsi
10002104b:	f2 0f 10 0d a5 82 01 00	movsd	98981(%rip), %xmm1
100021053:	ff d3	callq	*%rbx
100021055:	f2 0f 10 05 03 6f 01 00	movsd	93955(%rip), %xmm0
10002105d:	4c 89 ef	movq	%r13, %rdi
100021060:	4c 89 e6	movq	%r12, %rsi
100021063:	f2 0f 10 0d 85 82 01 00	movsd	98949(%rip), %xmm1
10002106b:	ff d3	callq	*%rbx
10002106d:	4c 89 ef	movq	%r13, %rdi
100021070:	4c 89 e6	movq	%r12, %rsi
100021073:	f2 0f 10 05 8d 82 01 00	movsd	98957(%rip), %xmm0
10002107b:	f2 0f 10 0d 7d 82 01 00	movsd	98941(%rip), %xmm1
100021083:	ff d3	callq	*%rbx
100021085:	4c 89 ef	movq	%r13, %rdi
100021088:	4c 89 e6	movq	%r12, %rsi
10002108b:	f2 0f 10 05 6d 82 01 00	movsd	98925(%rip), %xmm0
100021093:	f2 0f 10 0d 6d 82 01 00	movsd	98925(%rip), %xmm1
10002109b:	ff d3	callq	*%rbx
10002109d:	4c 89 ef	movq	%r13, %rdi
1000210a0:	4c 89 e6	movq	%r12, %rsi
1000210a3:	f2 0f 10 05 45 82 01 00	movsd	98885(%rip), %xmm0
1000210ab:	f2 0f 10 0d ad 6e 01 00	movsd	93869(%rip), %xmm1
1000210b3:	ff d3	callq	*%rbx
1000210b5:	4c 89 ef	movq	%r13, %rdi
1000210b8:	4c 89 e6	movq	%r12, %rsi
1000210bb:	f2 0f 10 05 35 82 01 00	movsd	98869(%rip), %xmm0
1000210c3:	f2 0f 10 0d 3d 82 01 00	movsd	98877(%rip), %xmm1
1000210cb:	ff d3	callq	*%rbx
1000210cd:	4c 89 ef	movq	%r13, %rdi
1000210d0:	4c 89 e6	movq	%r12, %rsi
1000210d3:	f2 0f 10 05 7d 6e 01 00	movsd	93821(%rip), %xmm0
1000210db:	f2 0f 10 0d 1d 82 01 00	movsd	98845(%rip), %xmm1
1000210e3:	ff d3	callq	*%rbx
1000210e5:	4c 89 ef	movq	%r13, %rdi
1000210e8:	4c 89 e6	movq	%r12, %rsi
1000210eb:	f2 0f 10 05 f5 81 01 00	movsd	98805(%rip), %xmm0
1000210f3:	f2 0f 10 0d f5 81 01 00	movsd	98805(%rip), %xmm1
1000210fb:	e9 c1 01 00 00	jmp	0x1000212c1
100021100:	48 8b 35 91 06 03 00	movq	198289(%rip), %rsi ## Objc selector ref: moveToPoint:
100021107:	f2 0f 10 05 79 6e 01 00	movsd	93817(%rip), %xmm0
10002110f:	f2 0f 10 0d d9 81 01 00	movsd	98777(%rip), %xmm1
100021117:	4c 89 ef	movq	%r13, %rdi
10002111a:	48 8b 05 ff ba 01 00	movq	113407(%rip), %rax ## Objc message: -[%rdi moveToPoint:]
100021121:	41 89 dc	movl	%ebx, %r12d
100021124:	48 89 c3	movq	%rax, %rbx
100021127:	ff d0	callq	*%rax
100021129:	4c 8b 35 e0 04 03 00	movq	197856(%rip), %r14 ## Objc selector ref: lineToPoint:
100021130:	f2 0f 10 05 c0 81 01 00	movsd	98752(%rip), %xmm0
100021138:	f2 0f 10 0d 18 6e 01 00	movsd	93720(%rip), %xmm1
100021140:	4c 89 ef	movq	%r13, %rdi
100021143:	4c 89 f6	movq	%r14, %rsi
100021146:	ff d3	callq	*%rbx
100021148:	f2 0f 10 0d b8 81 01 00	movsd	98744(%rip), %xmm1
100021150:	4c 89 ef	movq	%r13, %rdi
100021153:	4c 89 f6	movq	%r14, %rsi
100021156:	f2 0f 10 05 9a 81 01 00	movsd	98714(%rip), %xmm0
10002115e:	ff d3	callq	*%rbx
100021160:	4c 89 ef	movq	%r13, %rdi
100021163:	4c 89 f6	movq	%r14, %rsi
100021166:	f2 0f 10 05 1a 6e 01 00	movsd	93722(%rip), %xmm0
10002116e:	f2 0f 10 0d 7a 81 01 00	movsd	98682(%rip), %xmm1
100021176:	ff d3	callq	*%rbx
100021178:	44 89 e3	movl	%r12d, %ebx
10002117b:	e9 46 01 00 00	jmp	0x1000212c6
100021180:	48 8b 35 11 06 03 00	movq	198161(%rip), %rsi ## Objc selector ref: moveToPoint:
100021187:	f2 0f 10 05 e1 6d 01 00	movsd	93665(%rip), %xmm0
10002118f:	f2 0f 10 0d 51 81 01 00	movsd	98641(%rip), %xmm1
100021197:	4c 89 ef	movq	%r13, %rdi
10002119a:	41 89 de	movl	%ebx, %r14d
10002119d:	48 8b 1d 7c ba 01 00	movq	113276(%rip), %rbx ## Objc message: -[%rdi moveToPoint:]
1000211a4:	ff d3	callq	*%rbx
1000211a6:	4c 8b 25 63 04 03 00	movq	197731(%rip), %r12 ## Objc selector ref: lineToPoint:
1000211ad:	4c 89 ef	movq	%r13, %rdi
1000211b0:	4c 89 e6	movq	%r12, %rsi
1000211b3:	f2 0f 10 05 2d 81 01 00	movsd	98605(%rip), %xmm0
1000211bb:	0f 28 c8	movaps	%xmm0, %xmm1
1000211be:	ff d3	callq	*%rbx
1000211c0:	4c 89 ef	movq	%r13, %rdi
1000211c3:	4c 89 e6	movq	%r12, %rsi
1000211c6:	f2 0f 10 05 1a 81 01 00	movsd	98586(%rip), %xmm0
1000211ce:	f2 0f 10 0d 9a 6d 01 00	movsd	93594(%rip), %xmm1
1000211d6:	ff d3	callq	*%rbx
1000211d8:	f2 0f 10 05 80 6d 01 00	movsd	93568(%rip), %xmm0
1000211e0:	4c 89 ef	movq	%r13, %rdi
1000211e3:	4c 89 e6	movq	%r12, %rsi
1000211e6:	f2 0f 10 0d 82 6d 01 00	movsd	93570(%rip), %xmm1
1000211ee:	ff d3	callq	*%rbx
1000211f0:	4c 89 ef	movq	%r13, %rdi
1000211f3:	4c 89 e6	movq	%r12, %rsi
1000211f6:	f2 0f 10 05 62 6d 01 00	movsd	93538(%rip), %xmm0
1000211fe:	f2 0f 10 0d e2 80 01 00	movsd	98530(%rip), %xmm1
100021206:	ff d3	callq	*%rbx
100021208:	f2 0f 10 05 78 6d 01 00	movsd	93560(%rip), %xmm0
100021210:	4c 89 ef	movq	%r13, %rdi
100021213:	4c 89 e6	movq	%r12, %rsi
100021216:	f2 0f 10 0d ca 80 01 00	movsd	98506(%rip), %xmm1
10002121e:	ff d3	callq	*%rbx
100021220:	4c 89 ef	movq	%r13, %rdi
100021223:	4c 89 e6	movq	%r12, %rsi
100021226:	f2 0f 10 05 5a 6d 01 00	movsd	93530(%rip), %xmm0
10002122e:	f2 0f 10 0d 2a 6d 01 00	movsd	93482(%rip), %xmm1
100021236:	ff d3	callq	*%rbx
100021238:	4c 89 ef	movq	%r13, %rdi
10002123b:	4c 89 e6	movq	%r12, %rsi
10002123e:	f2 0f 10 05 1a 6d 01 00	movsd	93466(%rip), %xmm0
100021246:	0f 28 c8	movaps	%xmm0, %xmm1
100021249:	ff d3	callq	*%rbx
10002124b:	4c 89 ef	movq	%r13, %rdi
10002124e:	4c 89 e6	movq	%r12, %rsi
100021251:	f2 0f 10 05 07 6d 01 00	movsd	93447(%rip), %xmm0
100021259:	f2 0f 10 0d 27 6d 01 00	movsd	93479(%rip), %xmm1
100021261:	ff d3	callq	*%rbx
100021263:	4c 89 ef	movq	%r13, %rdi
100021266:	4c 89 e6	movq	%r12, %rsi
100021269:	f2 0f 10 05 77 80 01 00	movsd	98423(%rip), %xmm0
100021271:	f2 0f 10 0d 0f 6d 01 00	movsd	93455(%rip), %xmm1
100021279:	ff d3	callq	*%rbx
10002127b:	4c 89 ef	movq	%r13, %rdi
10002127e:	4c 89 e6	movq	%r12, %rsi
100021281:	f2 0f 10 05 5f 80 01 00	movsd	98399(%rip), %xmm0
100021289:	f2 0f 10 0d cf 6c 01 00	movsd	93391(%rip), %xmm1
100021291:	ff d3	callq	*%rbx
100021293:	4c 89 ef	movq	%r13, %rdi
100021296:	4c 89 e6	movq	%r12, %rsi
100021299:	f2 0f 10 05 cf 6c 01 00	movsd	93391(%rip), %xmm0
1000212a1:	f2 0f 10 0d b7 6c 01 00	movsd	93367(%rip), %xmm1
1000212a9:	ff d3	callq	*%rbx
1000212ab:	4c 89 ef	movq	%r13, %rdi
1000212ae:	4c 89 e6	movq	%r12, %rsi
1000212b1:	f2 0f 10 05 b7 6c 01 00	movsd	93367(%rip), %xmm0
1000212b9:	f2 0f 10 0d 27 80 01 00	movsd	98343(%rip), %xmm1
1000212c1:	ff d3	callq	*%rbx
1000212c3:	44 89 f3	movl	%r14d, %ebx
1000212c6:	31 c0	xorl	%eax, %eax
1000212c8:	84 db	testb	%bl, %bl
1000212ca:	0f 94 c1	sete	%cl
1000212cd:	45 84 ff	testb	%r15b, %r15b
1000212d0:	74 10	je	0x1000212e2
1000212d2:	88 c8	movb	%cl, %al
1000212d4:	48 8d 0d 45 80 01 00	leaq	98373(%rip), %rcx
1000212db:	f2 0f 10 0c c1	movsd	(%rcx,%rax,8), %xmm1
1000212e0:	eb 08	jmp	0x1000212ea
1000212e2:	f2 0f 10 0d 26 80 01 00	movsd	98342(%rip), %xmm1
1000212ea:	48 8b 3d 2f 13 03 00	movq	201519(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
1000212f1:	48 8b 35 f8 fb 02 00	movq	195576(%rip), %rsi ## Objc selector ref: colorWithDeviceWhite:alpha:
1000212f8:	0f 57 c0	xorps	%xmm0, %xmm0
1000212fb:	48 8b 1d 1e b9 01 00	movq	112926(%rip), %rbx ## Objc message: +[NSColor colorWithDeviceWhite:alpha:]
100021302:	ff d3	callq	*%rbx
100021304:	48 8b 35 65 09 03 00	movq	199013(%rip), %rsi ## Objc selector ref: set
10002130b:	48 89 c7	movq	%rax, %rdi
10002130e:	ff d3	callq	*%rbx
100021310:	48 8b 35 09 ff 02 00	movq	196361(%rip), %rsi ## Objc selector ref: fill
100021317:	4c 89 ef	movq	%r13, %rdi
10002131a:	48 89 d8	movq	%rbx, %rax
10002131d:	48 83 c4 28	addq	$40, %rsp
100021321:	5b	popq	%rbx
100021322:	41 5c	popq	%r12
100021324:	41 5d	popq	%r13
100021326:	41 5e	popq	%r14
100021328:	41 5f	popq	%r15
10002132a:	5d	popq	%rbp
10002132b:	ff e0	jmpq	*%rax
10002132d:	55	pushq	%rbp
10002132e:	48 89 e5	movq	%rsp, %rbp
100021331:	53	pushq	%rbx
100021332:	48 83 ec 18	subq	$24, %rsp
100021336:	48 89 fb	movq	%rdi, %rbx
100021339:	48 8b 05 a0 1f 03 00	movq	204704(%rip), %rax
100021340:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100021344:	48 85 ff	testq	%rdi, %rdi
100021347:	74 05	je	0x10002134e
100021349:	e8 c4 db 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002134e:	48 8b 05 93 1f 03 00	movq	204691(%rip), %rax
100021355:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100021359:	48 85 ff	testq	%rdi, %rdi
10002135c:	74 05	je	0x100021363
10002135e:	e8 af db 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100021363:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100021367:	48 89 1f	movq	%rbx, (%rdi)
10002136a:	48 8b 05 ef 14 03 00	movq	201967(%rip), %rax ## Objc class ref: MlucTag
100021371:	48 89 47 08	movq	%rax, 8(%rdi)
100021375:	48 8b 35 d4 fc 02 00	movq	195796(%rip), %rsi ## Objc selector ref: dealloc
10002137c:	e8 5b e1 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100021381:	48 83 c4 18	addq	$24, %rsp
100021385:	5b	popq	%rbx
100021386:	5d	popq	%rbp
100021387:	c3	retq
100021388:	55	pushq	%rbp
100021389:	48 89 e5	movq	%rsp, %rbp
10002138c:	31 c0	xorl	%eax, %eax
10002138e:	81 f9 63 75 6c 6d	cmpl	$1835824483, %ecx
100021394:	0f 94 c0	sete	%al
100021397:	5d	popq	%rbp
100021398:	c3	retq
100021399:	55	pushq	%rbp
10002139a:	48 89 e5	movq	%rsp, %rbp
10002139d:	41 56	pushq	%r14
10002139f:	53	pushq	%rbx
1000213a0:	81 fa 6c 63 73 64	cmpl	$1685283692, %edx
1000213a6:	7f 21	jg	0x1000213c9
1000213a8:	81 fa 63 73 65 64	cmpl	$1684370275, %edx
1000213ae:	74 3a	je	0x1000213ea
1000213b0:	81 fa 64 64 6d 64	cmpl	$1684890724, %edx
1000213b6:	74 3b	je	0x1000213f3
1000213b8:	81 fa 64 6e 6d 64	cmpl	$1684893284, %edx
1000213be:	75 4e	jne	0x10002140e
1000213c0:	4c 8d 35 19 db 01 00	leaq	121625(%rip), %r14 ## Objc cfstring ref: @"Multi-localized device manufacturer description strings"
1000213c7:	eb 4c	jmp	0x100021415
1000213c9:	81 fa 64 65 75 76	cmpl	$1987405156, %edx
1000213cf:	74 2b	je	0x1000213fc
1000213d1:	81 fa 64 72 63 73	cmpl	$1935897188, %edx
1000213d7:	74 2c	je	0x100021405
1000213d9:	81 fa 6d 63 73 64	cmpl	$1685283693, %edx
1000213df:	75 2d	jne	0x10002140e
1000213e1:	4c 8d 35 d8 da 01 00	leaq	121560(%rip), %r14 ## Objc cfstring ref: @"Apple multi-localized description strings"
1000213e8:	eb 2b	jmp	0x100021415
1000213ea:	4c 8d 35 af da 01 00	leaq	121519(%rip), %r14 ## Objc cfstring ref: @"Multi-localized description strings"
1000213f1:	eb 22	jmp	0x100021415
1000213f3:	4c 8d 35 06 db 01 00	leaq	121606(%rip), %r14 ## Objc cfstring ref: @"Multi-localized device model description strings"
1000213fa:	eb 19	jmp	0x100021415
1000213fc:	4c 8d 35 3d db 01 00	leaq	121661(%rip), %r14 ## Objc cfstring ref: @"Multi-localized viewing conditions description strings"
100021403:	eb 10	jmp	0x100021415
100021405:	4c 8d 35 14 db 01 00	leaq	121620(%rip), %r14 ## Objc cfstring ref: @"Multi-localized screening description strings"
10002140c:	eb 07	jmp	0x100021415
10002140e:	4c 8d 35 4b db 01 00	leaq	121675(%rip), %r14 ## Objc cfstring ref: @"Multi-localized strings"
100021415:	48 8b 3d 84 11 03 00	movq	201092(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002141c:	48 8b 35 c5 02 03 00	movq	197317(%rip), %rsi ## Objc selector ref: mainBundle
100021423:	48 8b 1d f6 b7 01 00	movq	112630(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002142a:	ff d3	callq	*%rbx
10002142c:	48 8b 35 2d 02 03 00	movq	197165(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100021433:	48 8d 0d 66 ba 01 00	leaq	113254(%rip), %rcx ## Objc cfstring ref: @""
10002143a:	48 89 c7	movq	%rax, %rdi
10002143d:	4c 89 f2	movq	%r14, %rdx
100021440:	45 31 c0	xorl	%r8d, %r8d
100021443:	48 89 d8	movq	%rbx, %rax
100021446:	5b	popq	%rbx
100021447:	41 5e	popq	%r14
100021449:	5d	popq	%rbp
10002144a:	ff e0	jmpq	*%rax
10002144c:	55	pushq	%rbp
10002144d:	48 89 e5	movq	%rsp, %rbp
100021450:	41 57	pushq	%r15
100021452:	41 56	pushq	%r14
100021454:	41 55	pushq	%r13
100021456:	41 54	pushq	%r12
100021458:	53	pushq	%rbx
100021459:	48 83 ec 18	subq	$24, %rsp
10002145d:	48 89 d3	movq	%rdx, %rbx
100021460:	49 89 fc	movq	%rdi, %r12
100021463:	89 4d d4	movl	%ecx, -44(%rbp)
100021466:	89 cf	movl	%ecx, %edi
100021468:	e8 e7 dd 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10002146d:	48 8b 0d 74 1e 03 00	movq	204404(%rip), %rcx
100021474:	49 89 04 0c	movq	%rax, (%r12,%rcx)
100021478:	48 89 5d c8	movq	%rbx, -56(%rbp)
10002147c:	48 89 df	movq	%rbx, %rdi
10002147f:	48 89 c6	movq	%rax, %rsi
100021482:	e8 f1 dd 00 00	callq	0x10002f278 ## symbol stub for: _ColorSyncProfileCopyLocalizedStringDictionary
100021487:	48 89 c3	movq	%rax, %rbx
10002148a:	4c 8b 35 5f 1e 03 00	movq	204383(%rip), %r14
100021491:	31 c0	xorl	%eax, %eax
100021493:	4b 89 04 34	movq	%rax, (%r12,%r14)
100021497:	4c 8b 3d 5a 1e 03 00	movq	204378(%rip), %r15
10002149e:	4b 89 04 3c	movq	%rax, (%r12,%r15)
1000214a2:	48 85 db	testq	%rbx, %rbx
1000214a5:	0f 84 b1 00 00 00	je	0x10002155c
1000214ab:	31 ff	xorl	%edi, %edi
1000214ad:	31 f6	xorl	%esi, %esi
1000214af:	48 89 da	movq	%rbx, %rdx
1000214b2:	e8 13 da 00 00	callq	0x10002eeca ## symbol stub for: _CFDictionaryCreateMutableCopy
1000214b7:	4b 89 04 34	movq	%rax, (%r12,%r14)
1000214bb:	48 89 df	movq	%rbx, %rdi
1000214be:	e8 4f da 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000214c3:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000214c7:	48 85 ff	testq	%rdi, %rdi
1000214ca:	0f 84 11 01 00 00	je	0x1000215e1
1000214d0:	e8 fb d9 00 00	callq	0x10002eed0 ## symbol stub for: _CFDictionaryGetCount
1000214d5:	48 8d 34 c5 08 00 00 00	leaq	8(,%rax,8), %rsi
1000214dd:	bf 01 00 00 00	movl	$1, %edi
1000214e2:	e8 d5 de 00 00	callq	0x10002f3bc ## symbol stub for: _calloc
1000214e7:	48 85 c0	testq	%rax, %rax
1000214ea:	74 70	je	0x10002155c
1000214ec:	48 89 c3	movq	%rax, %rbx
1000214ef:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000214f3:	48 89 c6	movq	%rax, %rsi
1000214f6:	31 d2	xorl	%edx, %edx
1000214f8:	e8 d9 d9 00 00	callq	0x10002eed6 ## symbol stub for: _CFDictionaryGetKeysAndValues
1000214fd:	48 8b 15 84 b4 01 00	movq	111748(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
100021504:	31 ff	xorl	%edi, %edi
100021506:	31 f6	xorl	%esi, %esi
100021508:	e8 39 d9 00 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
10002150d:	4b 89 04 3c	movq	%rax, (%r12,%r15)
100021511:	48 85 c0	testq	%rax, %rax
100021514:	74 46	je	0x10002155c
100021516:	49 89 c5	movq	%rax, %r13
100021519:	48 8b 33	movq	(%rbx), %rsi
10002151c:	48 85 f6	testq	%rsi, %rsi
10002151f:	74 1c	je	0x10002153d
100021521:	48 83 c3 08	addq	$8, %rbx
100021525:	4c 89 ef	movq	%r13, %rdi
100021528:	e8 07 d9 00 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
10002152d:	48 8b 33	movq	(%rbx), %rsi
100021530:	48 83 c3 08	addq	$8, %rbx
100021534:	4f 8b 2c 3c	movq	(%r12,%r15), %r13
100021538:	48 85 f6	testq	%rsi, %rsi
10002153b:	75 e8	jne	0x100021525
10002153d:	4c 89 ef	movq	%r13, %rdi
100021540:	e8 0d d9 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021545:	48 8d 0d a4 00 00 00	leaq	164(%rip), %rcx
10002154c:	4c 89 ef	movq	%r13, %rdi
10002154f:	31 f6	xorl	%esi, %esi
100021551:	48 89 c2	movq	%rax, %rdx
100021554:	45 31 c0	xorl	%r8d, %r8d
100021557:	e8 1a d9 00 00	callq	0x10002ee76 ## symbol stub for: _CFArraySortValues
10002155c:	4b 83 3c 34 00	cmpq	$0, (%r12,%r14)
100021561:	74 7e	je	0x1000215e1
100021563:	4b 83 3c 3c 00	cmpq	$0, (%r12,%r15)
100021568:	74 77	je	0x1000215e1
10002156a:	48 8b 1d 6f 1d 03 00	movq	204143(%rip), %rbx
100021571:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100021575:	48 85 ff	testq	%rdi, %rdi
100021578:	74 05	je	0x10002157f
10002157a:	e8 93 d9 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002157f:	48 8b 7d c8	movq	-56(%rbp), %rdi
100021583:	e8 90 d9 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100021588:	49 89 04 1c	movq	%rax, (%r12,%rbx)
10002158c:	48 8b 05 6d 1d 03 00	movq	204141(%rip), %rax
100021593:	8b 4d d4	movl	-44(%rbp), %ecx
100021596:	41 89 0c 04	movl	%ecx, (%r12,%rax)
10002159a:	4c 8b 35 67 1d 03 00	movq	204135(%rip), %r14
1000215a1:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000215a5:	48 8b 35 44 02 03 00	movq	197188(%rip), %rsi ## Objc selector ref: noteNumberOfRowsChanged
1000215ac:	48 8b 1d 6d b6 01 00	movq	112237(%rip), %rbx ## Objc message: -[%rdi noteNumberOfRowsChanged]
1000215b3:	ff d3	callq	*%rbx
1000215b5:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000215b9:	48 8b 35 f0 04 03 00	movq	197872(%rip), %rsi ## Objc selector ref: reloadData
1000215c0:	ff d3	callq	*%rbx
1000215c2:	48 8b 35 c7 0d 03 00	movq	200135(%rip), %rsi ## Objc selector ref: tableViewSelectionDidChange:
1000215c9:	4c 89 e7	movq	%r12, %rdi
1000215cc:	31 d2	xorl	%edx, %edx
1000215ce:	48 89 d8	movq	%rbx, %rax
1000215d1:	48 83 c4 18	addq	$24, %rsp
1000215d5:	5b	popq	%rbx
1000215d6:	41 5c	popq	%r12
1000215d8:	41 5d	popq	%r13
1000215da:	41 5e	popq	%r14
1000215dc:	41 5f	popq	%r15
1000215de:	5d	popq	%rbp
1000215df:	ff e0	jmpq	*%rax
1000215e1:	48 83 c4 18	addq	$24, %rsp
1000215e5:	5b	popq	%rbx
1000215e6:	41 5c	popq	%r12
1000215e8:	41 5d	popq	%r13
1000215ea:	41 5e	popq	%r14
1000215ec:	41 5f	popq	%r15
1000215ee:	5d	popq	%rbp
1000215ef:	c3	retq
1000215f0:	55	pushq	%rbp
1000215f1:	48 89 e5	movq	%rsp, %rbp
1000215f4:	ba 01 00 00 00	movl	$1, %edx
1000215f9:	5d	popq	%rbp
1000215fa:	e9 25 d9 00 00	jmp	0x10002ef24 ## symbol stub for: _CFStringCompare
1000215ff:	55	pushq	%rbp
100021600:	48 89 e5	movq	%rsp, %rbp
100021603:	41 57	pushq	%r15
100021605:	41 56	pushq	%r14
100021607:	53	pushq	%rbx
100021608:	50	pushq	%rax
100021609:	48 89 fb	movq	%rdi, %rbx
10002160c:	48 8b 05 cd 1c 03 00	movq	203981(%rip), %rax
100021613:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100021617:	48 8b 05 ca 1c 03 00	movq	203978(%rip), %rax
10002161e:	48 8b 34 03	movq	(%rbx,%rax), %rsi
100021622:	48 8b 05 c7 1c 03 00	movq	203975(%rip), %rax
100021629:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10002162d:	e8 7c dc 00 00	callq	0x10002f2ae ## symbol stub for: _ColorSyncProfileSetLocalizedStringDictionary
100021632:	4c 8b 35 cf 1c 03 00	movq	203983(%rip), %r14
100021639:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
10002163d:	48 8b 35 ac 01 03 00	movq	197036(%rip), %rsi ## Objc selector ref: noteNumberOfRowsChanged
100021644:	4c 8b 3d d5 b5 01 00	movq	112085(%rip), %r15 ## Objc message: -[%rdi noteNumberOfRowsChanged]
10002164b:	41 ff d7	callq	*%r15
10002164e:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100021652:	48 8b 35 57 04 03 00	movq	197719(%rip), %rsi ## Objc selector ref: reloadData
100021659:	4c 89 f8	movq	%r15, %rax
10002165c:	48 83 c4 08	addq	$8, %rsp
100021660:	5b	popq	%rbx
100021661:	41 5e	popq	%r14
100021663:	41 5f	popq	%r15
100021665:	5d	popq	%rbp
100021666:	ff e0	jmpq	*%rax
100021668:	55	pushq	%rbp
100021669:	48 89 e5	movq	%rsp, %rbp
10002166c:	41 57	pushq	%r15
10002166e:	41 56	pushq	%r14
100021670:	41 55	pushq	%r13
100021672:	41 54	pushq	%r12
100021674:	53	pushq	%rbx
100021675:	50	pushq	%rax
100021676:	48 89 fb	movq	%rdi, %rbx
100021679:	4c 8b 25 88 1c 03 00	movq	203912(%rip), %r12
100021680:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
100021684:	4c 8b 35 25 04 03 00	movq	197669(%rip), %r14 ## Objc selector ref: reloadData
10002168b:	4c 89 f6	movq	%r14, %rsi
10002168e:	ff 15 8c b5 01 00	callq	*112012(%rip) ## Objc message: -[%rdi reloadData]
100021694:	4c 8b 2d 5d 1c 03 00	movq	203869(%rip), %r13
10002169b:	4a 83 3c 2b 00	cmpq	$0, (%rbx,%r13)
1000216a0:	74 1b	je	0x1000216bd
1000216a2:	4c 8b 3d 47 1c 03 00	movq	203847(%rip), %r15
1000216a9:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000216ad:	48 8d 35 cc d8 01 00	leaq	121036(%rip), %rsi ## Objc cfstring ref: @"??_??"
1000216b4:	e8 ff d7 00 00	callq	0x10002eeb8 ## symbol stub for: _CFDictionaryContainsKey
1000216b9:	84 c0	testb	%al, %al
1000216bb:	74 0f	je	0x1000216cc
1000216bd:	48 83 c4 08	addq	$8, %rsp
1000216c1:	5b	popq	%rbx
1000216c2:	41 5c	popq	%r12
1000216c4:	41 5d	popq	%r13
1000216c6:	41 5e	popq	%r14
1000216c8:	41 5f	popq	%r15
1000216ca:	5d	popq	%rbp
1000216cb:	c3	retq
1000216cc:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000216d0:	4c 8d 3d a9 d8 01 00	leaq	121001(%rip), %r15 ## Objc cfstring ref: @"??_??"
1000216d7:	48 8d 15 c2 b7 01 00	leaq	112578(%rip), %rdx ## Objc cfstring ref: @""
1000216de:	4c 89 fe	movq	%r15, %rsi
1000216e1:	e8 08 d8 00 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
1000216e6:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
1000216ea:	4c 89 fe	movq	%r15, %rsi
1000216ed:	e8 42 d7 00 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
1000216f2:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
1000216f6:	48 8b 35 f3 00 03 00	movq	196851(%rip), %rsi ## Objc selector ref: noteNumberOfRowsChanged
1000216fd:	ff 15 1d b5 01 00	callq	*111901(%rip) ## Objc message: -[%rdi noteNumberOfRowsChanged]
100021703:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100021707:	4c 89 f6	movq	%r14, %rsi
10002170a:	ff 15 10 b5 01 00	callq	*111888(%rip) ## Objc message: -[%rdi noteNumberOfRowsChanged]
100021710:	4e 8b 34 23	movq	(%rbx,%r12), %r14
100021714:	4c 8b 3d c5 0e 03 00	movq	200389(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSIndexSet
10002171b:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10002171f:	e8 2e d7 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021724:	48 8d 50 ff	leaq	-1(%rax), %rdx
100021728:	48 8b 35 d1 fc 02 00	movq	195793(%rip), %rsi ## Objc selector ref: indexSetWithIndex:
10002172f:	4c 89 ff	movq	%r15, %rdi
100021732:	ff 15 e8 b4 01 00	callq	*111848(%rip) ## Objc message: +[NSIndexSet indexSetWithIndex:]
100021738:	48 8b 35 e1 04 03 00	movq	197857(%rip), %rsi ## Objc selector ref: selectRowIndexes:byExtendingSelection:
10002173f:	4c 89 f7	movq	%r14, %rdi
100021742:	48 89 c2	movq	%rax, %rdx
100021745:	31 c9	xorl	%ecx, %ecx
100021747:	ff 15 d3 b4 01 00	callq	*111827(%rip) ## Objc message: -[%rdi selectRowIndexes:byExtendingSelection:]
10002174d:	48 8b 35 3c 0c 03 00	movq	199740(%rip), %rsi ## Objc selector ref: tableViewSelectionDidChange:
100021754:	48 89 df	movq	%rbx, %rdi
100021757:	31 d2	xorl	%edx, %edx
100021759:	ff 15 c1 b4 01 00	callq	*111809(%rip) ## Objc message: -[%rdi tableViewSelectionDidChange:]
10002175f:	4e 8b 34 23	movq	(%rbx,%r12), %r14
100021763:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100021767:	e8 e6 d6 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10002176c:	48 8d 48 ff	leaq	-1(%rax), %rcx
100021770:	48 8b 35 39 fa 02 00	movq	195129(%rip), %rsi ## Objc selector ref: editColumn:row:withEvent:select:
100021777:	4c 89 f7	movq	%r14, %rdi
10002177a:	31 d2	xorl	%edx, %edx
10002177c:	45 31 c0	xorl	%r8d, %r8d
10002177f:	41 b9 01 00 00 00	movl	$1, %r9d
100021785:	48 8b 05 94 b4 01 00	movq	111764(%rip), %rax ## Objc message: -[%rdi editColumn:row:withEvent:select:]
10002178c:	48 83 c4 08	addq	$8, %rsp
100021790:	5b	popq	%rbx
100021791:	41 5c	popq	%r12
100021793:	41 5d	popq	%r13
100021795:	41 5e	popq	%r14
100021797:	41 5f	popq	%r15
100021799:	5d	popq	%rbp
10002179a:	ff e0	jmpq	*%rax
10002179c:	55	pushq	%rbp
10002179d:	48 89 e5	movq	%rsp, %rbp
1000217a0:	41 57	pushq	%r15
1000217a2:	41 56	pushq	%r14
1000217a4:	41 55	pushq	%r13
1000217a6:	41 54	pushq	%r12
1000217a8:	53	pushq	%rbx
1000217a9:	50	pushq	%rax
1000217aa:	48 89 fb	movq	%rdi, %rbx
1000217ad:	4c 8b 35 54 1b 03 00	movq	203604(%rip), %r14
1000217b4:	4a 8b 3c 37	movq	(%rdi,%r14), %rdi
1000217b8:	48 8b 35 f1 02 03 00	movq	197361(%rip), %rsi ## Objc selector ref: reloadData
1000217bf:	ff 15 5b b4 01 00	callq	*111707(%rip) ## Objc message: -[%rdi reloadData]
1000217c5:	4c 8b 25 2c 1b 03 00	movq	203564(%rip), %r12
1000217cc:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
1000217d1:	74 63	je	0x100021836
1000217d3:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000217d7:	48 8b 35 6a 04 03 00	movq	197738(%rip), %rsi ## Objc selector ref: selectedRow
1000217de:	4c 8b 2d 3b b4 01 00	movq	111675(%rip), %r13 ## Objc message: -[%rdi selectedRow]
1000217e5:	41 ff d5	callq	*%r13
1000217e8:	49 89 c6	movq	%rax, %r14
1000217eb:	48 8b 05 fe 1a 03 00	movq	203518(%rip), %rax
1000217f2:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
1000217f6:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
1000217fa:	4c 89 f6	movq	%r14, %rsi
1000217fd:	e8 5c d6 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100021802:	4c 89 ff	movq	%r15, %rdi
100021805:	48 89 c6	movq	%rax, %rsi
100021808:	e8 db d6 00 00	callq	0x10002eee8 ## symbol stub for: _CFDictionaryRemoveValue
10002180d:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100021811:	4c 89 f6	movq	%r14, %rsi
100021814:	e8 51 d6 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
100021819:	48 8b 35 40 0c 03 00	movq	199744(%rip), %rsi ## Objc selector ref: updateTag
100021820:	48 89 df	movq	%rbx, %rdi
100021823:	4c 89 e8	movq	%r13, %rax
100021826:	48 83 c4 08	addq	$8, %rsp
10002182a:	5b	popq	%rbx
10002182b:	41 5c	popq	%r12
10002182d:	41 5d	popq	%r13
10002182f:	41 5e	popq	%r14
100021831:	41 5f	popq	%r15
100021833:	5d	popq	%rbp
100021834:	ff e0	jmpq	*%rax
100021836:	48 83 c4 08	addq	$8, %rsp
10002183a:	5b	popq	%rbx
10002183b:	41 5c	popq	%r12
10002183d:	41 5d	popq	%r13
10002183f:	41 5e	popq	%r14
100021841:	41 5f	popq	%r15
100021843:	5d	popq	%rbp
100021844:	c3	retq
100021845:	55	pushq	%rbp
100021846:	48 89 e5	movq	%rsp, %rbp
100021849:	48 8b 05 a8 1a 03 00	movq	203432(%rip), %rax
100021850:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100021854:	48 85 ff	testq	%rdi, %rdi
100021857:	74 06	je	0x10002185f
100021859:	5d	popq	%rbp
10002185a:	e9 f3 d5 00 00	jmp	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10002185f:	31 c0	xorl	%eax, %eax
100021861:	5d	popq	%rbp
100021862:	c3	retq
100021863:	55	pushq	%rbp
100021864:	48 89 e5	movq	%rsp, %rbp
100021867:	41 57	pushq	%r15
100021869:	41 56	pushq	%r14
10002186b:	41 55	pushq	%r13
10002186d:	41 54	pushq	%r12
10002186f:	53	pushq	%rbx
100021870:	50	pushq	%rax
100021871:	4d 89 c6	movq	%r8, %r14
100021874:	49 89 ff	movq	%rdi, %r15
100021877:	48 8b 35 ca fa 02 00	movq	195274(%rip), %rsi ## Objc selector ref: identifier
10002187e:	4c 8b 2d 9b b3 01 00	movq	111515(%rip), %r13 ## Objc message: -[%rdi identifier]
100021885:	48 89 cf	movq	%rcx, %rdi
100021888:	41 ff d5	callq	*%r13
10002188b:	48 89 c3	movq	%rax, %rbx
10002188e:	4c 8b 25 f3 fc 02 00	movq	195827(%rip), %r12 ## Objc selector ref: isEqualToString:
100021895:	48 8d 15 04 d7 01 00	leaq	120580(%rip), %rdx ## Objc cfstring ref: @"language"
10002189c:	48 89 c7	movq	%rax, %rdi
10002189f:	4c 89 e6	movq	%r12, %rsi
1000218a2:	41 ff d5	callq	*%r13
1000218a5:	84 c0	testb	%al, %al
1000218a7:	74 66	je	0x10002190f
1000218a9:	48 8b 05 48 1a 03 00	movq	203336(%rip), %rax
1000218b0:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000218b4:	48 85 ff	testq	%rdi, %rdi
1000218b7:	0f 84 31 01 00 00	je	0x1000219ee
1000218bd:	4c 89 f6	movq	%r14, %rsi
1000218c0:	e8 99 d5 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
1000218c5:	48 8b 35 54 f6 02 00	movq	194132(%rip), %rsi ## Objc selector ref: componentsSeparatedByString:
1000218cc:	48 8d 15 ed d6 01 00	leaq	120557(%rip), %rdx ## Objc cfstring ref: @"_"
1000218d3:	48 89 c7	movq	%rax, %rdi
1000218d6:	ff 15 44 b3 01 00	callq	*111428(%rip) ## Objc message: -[%rdi componentsSeparatedByString:]
1000218dc:	48 85 c0	testq	%rax, %rax
1000218df:	0f 84 09 01 00 00	je	0x1000219ee
1000218e5:	48 89 c3	movq	%rax, %rbx
1000218e8:	48 8b 35 d1 f6 02 00	movq	194257(%rip), %rsi ## Objc selector ref: count
1000218ef:	48 89 c7	movq	%rax, %rdi
1000218f2:	ff 15 28 b3 01 00	callq	*111400(%rip) ## Objc message: -[%rdi count]
1000218f8:	48 85 c0	testq	%rax, %rax
1000218fb:	0f 84 ed 00 00 00	je	0x1000219ee
100021901:	48 8b 35 58 ff 02 00	movq	196440(%rip), %rsi ## Objc selector ref: objectAtIndex:
100021908:	48 89 df	movq	%rbx, %rdi
10002190b:	31 d2	xorl	%edx, %edx
10002190d:	eb 7b	jmp	0x10002198a
10002190f:	48 8d 15 ca d6 01 00	leaq	120522(%rip), %rdx ## Objc cfstring ref: @"region"
100021916:	48 89 df	movq	%rbx, %rdi
100021919:	4c 89 e6	movq	%r12, %rsi
10002191c:	ff 15 fe b2 01 00	callq	*111358(%rip) ## Objc message: -[%rdi objectAtIndex:]
100021922:	84 c0	testb	%al, %al
100021924:	74 78	je	0x10002199e
100021926:	48 8b 05 cb 19 03 00	movq	203211(%rip), %rax
10002192d:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100021931:	48 85 ff	testq	%rdi, %rdi
100021934:	0f 84 b4 00 00 00	je	0x1000219ee
10002193a:	4c 89 f6	movq	%r14, %rsi
10002193d:	e8 1c d5 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100021942:	48 8b 35 d7 f5 02 00	movq	194007(%rip), %rsi ## Objc selector ref: componentsSeparatedByString:
100021949:	48 8d 15 70 d6 01 00	leaq	120432(%rip), %rdx ## Objc cfstring ref: @"_"
100021950:	48 89 c7	movq	%rax, %rdi
100021953:	ff 15 c7 b2 01 00	callq	*111303(%rip) ## Objc message: -[%rdi componentsSeparatedByString:]
100021959:	48 85 c0	testq	%rax, %rax
10002195c:	0f 84 8c 00 00 00	je	0x1000219ee
100021962:	48 89 c3	movq	%rax, %rbx
100021965:	48 8b 35 54 f6 02 00	movq	194132(%rip), %rsi ## Objc selector ref: count
10002196c:	48 89 c7	movq	%rax, %rdi
10002196f:	ff 15 ab b2 01 00	callq	*111275(%rip) ## Objc message: -[%rdi count]
100021975:	48 83 f8 02	cmpq	$2, %rax
100021979:	72 73	jb	0x1000219ee
10002197b:	48 8b 35 de fe 02 00	movq	196318(%rip), %rsi ## Objc selector ref: objectAtIndex:
100021982:	ba 01 00 00 00	movl	$1, %edx
100021987:	48 89 df	movq	%rbx, %rdi
10002198a:	48 83 c4 08	addq	$8, %rsp
10002198e:	5b	popq	%rbx
10002198f:	41 5c	popq	%r12
100021991:	41 5d	popq	%r13
100021993:	41 5e	popq	%r14
100021995:	41 5f	popq	%r15
100021997:	5d	popq	%rbp
100021998:	ff 25 82 b2 01 00	jmpq	*111234(%rip) ## Objc message: -[%rdi objectAtIndex:]
10002199e:	48 8d 15 5b d6 01 00	leaq	120411(%rip), %rdx ## Objc cfstring ref: @"string"
1000219a5:	48 89 df	movq	%rbx, %rdi
1000219a8:	4c 89 e6	movq	%r12, %rsi
1000219ab:	ff 15 6f b2 01 00	callq	*111215(%rip) ## Objc message: -[%rdi objectAtIndex:]
1000219b1:	84 c0	testb	%al, %al
1000219b3:	74 39	je	0x1000219ee
1000219b5:	48 8b 05 3c 19 03 00	movq	203068(%rip), %rax
1000219bc:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000219c0:	48 85 ff	testq	%rdi, %rdi
1000219c3:	74 29	je	0x1000219ee
1000219c5:	4c 89 f6	movq	%r14, %rsi
1000219c8:	e8 91 d4 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
1000219cd:	48 8b 0d 1c 19 03 00	movq	203036(%rip), %rcx
1000219d4:	49 8b 3c 0f	movq	(%r15,%rcx), %rdi
1000219d8:	48 89 c6	movq	%rax, %rsi
1000219db:	48 83 c4 08	addq	$8, %rsp
1000219df:	5b	popq	%rbx
1000219e0:	41 5c	popq	%r12
1000219e2:	41 5d	popq	%r13
1000219e4:	41 5e	popq	%r14
1000219e6:	41 5f	popq	%r15
1000219e8:	5d	popq	%rbp
1000219e9:	e9 f4 d4 00 00	jmp	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
1000219ee:	31 c0	xorl	%eax, %eax
1000219f0:	48 83 c4 08	addq	$8, %rsp
1000219f4:	5b	popq	%rbx
1000219f5:	41 5c	popq	%r12
1000219f7:	41 5d	popq	%r13
1000219f9:	41 5e	popq	%r14
1000219fb:	41 5f	popq	%r15
1000219fd:	5d	popq	%rbp
1000219fe:	c3	retq
1000219ff:	55	pushq	%rbp
100021a00:	48 89 e5	movq	%rsp, %rbp
100021a03:	41 57	pushq	%r15
100021a05:	41 56	pushq	%r14
100021a07:	41 55	pushq	%r13
100021a09:	41 54	pushq	%r12
100021a0b:	53	pushq	%rbx
100021a0c:	48 83 ec 38	subq	$56, %rsp
100021a10:	4d 89 cd	movq	%r9, %r13
100021a13:	49 89 cf	movq	%rcx, %r15
100021a16:	49 89 fc	movq	%rdi, %r12
100021a19:	48 8b 35 28 f9 02 00	movq	194856(%rip), %rsi ## Objc selector ref: identifier
100021a20:	4c 89 c7	movq	%r8, %rdi
100021a23:	ff 15 f7 b1 01 00	callq	*111095(%rip) ## Objc message: -[%rdi identifier]
100021a29:	48 8b 1d c8 18 03 00	movq	202952(%rip), %rbx
100021a30:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100021a34:	48 85 ff	testq	%rdi, %rdi
100021a37:	0f 84 2c 01 00 00	je	0x100021b69
100021a3d:	49 89 c6	movq	%rax, %r14
100021a40:	e8 0d d4 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021a45:	4c 39 e8	cmpq	%r13, %rax
100021a48:	0f 8e 1b 01 00 00	jle	0x100021b69
100021a4e:	48 8b 35 33 fb 02 00	movq	195379(%rip), %rsi ## Objc selector ref: isEqualToString:
100021a55:	48 8d 15 44 d5 01 00	leaq	120132(%rip), %rdx ## Objc cfstring ref: @"language"
100021a5c:	4c 89 f7	movq	%r14, %rdi
100021a5f:	ff 15 bb b1 01 00	callq	*111035(%rip) ## Objc message: -[%rdi isEqualToString:]
100021a65:	84 c0	testb	%al, %al
100021a67:	0f 84 0b 01 00 00	je	0x100021b78
100021a6d:	b0 01	movb	$1, %al
100021a6f:	48 89 45 a0	movq	%rax, -96(%rbp)
100021a73:	48 8b 35 7e fb 02 00	movq	195454(%rip), %rsi ## Objc selector ref: length
100021a7a:	4c 89 ff	movq	%r15, %rdi
100021a7d:	ff 15 9d b1 01 00	callq	*111005(%rip) ## Objc message: -[%rdi length]
100021a83:	48 83 f8 02	cmpq	$2, %rax
100021a87:	0f 82 f1 00 00 00	jb	0x100021b7e
100021a8d:	4c 89 75 d0	movq	%r14, -48(%rbp)
100021a91:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100021a95:	4c 89 6d c0	movq	%r13, -64(%rbp)
100021a99:	4c 89 ee	movq	%r13, %rsi
100021a9c:	e8 bd d3 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100021aa1:	48 8b 35 78 f4 02 00	movq	193656(%rip), %rsi ## Objc selector ref: componentsSeparatedByString:
100021aa8:	48 8d 15 11 d5 01 00	leaq	120081(%rip), %rdx ## Objc cfstring ref: @"_"
100021aaf:	48 8b 1d 6a b1 01 00	movq	110954(%rip), %rbx ## Objc message: -[%rdi componentsSeparatedByString:]
100021ab6:	48 89 45 b0	movq	%rax, -80(%rbp)
100021aba:	48 89 c7	movq	%rax, %rdi
100021abd:	ff d3	callq	*%rbx
100021abf:	49 89 c6	movq	%rax, %r14
100021ac2:	48 8b 35 7f 08 03 00	movq	198783(%rip), %rsi ## Objc selector ref: substringToIndex:
100021ac9:	ba 02 00 00 00	movl	$2, %edx
100021ace:	4c 89 7d c8	movq	%r15, -56(%rbp)
100021ad2:	4c 89 ff	movq	%r15, %rdi
100021ad5:	ff d3	callq	*%rbx
100021ad7:	49 89 c5	movq	%rax, %r13
100021ada:	4c 8b 3d e7 0a 03 00	movq	199399(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSString
100021ae1:	48 8b 35 78 fd 02 00	movq	195960(%rip), %rsi ## Objc selector ref: objectAtIndex:
100021ae8:	ba 01 00 00 00	movl	$1, %edx
100021aed:	4c 89 f7	movq	%r14, %rdi
100021af0:	ff d3	callq	*%rbx
100021af2:	48 8b 35 2f 08 03 00	movq	198703(%rip), %rsi ## Objc selector ref: stringWithFormat:
100021af9:	48 8d 15 20 d5 01 00	leaq	120096(%rip), %rdx ## Objc cfstring ref: @"%@_%@"
100021b00:	4c 89 ff	movq	%r15, %rdi
100021b03:	4c 89 e9	movq	%r13, %rcx
100021b06:	49 89 c0	movq	%rax, %r8
100021b09:	31 c0	xorl	%eax, %eax
100021b0b:	ff d3	callq	*%rbx
100021b0d:	49 89 c7	movq	%rax, %r15
100021b10:	48 8b 35 f1 f2 02 00	movq	193265(%rip), %rsi ## Objc selector ref: cStringUsingEncoding:
100021b17:	ba 01 00 00 00	movl	$1, %edx
100021b1c:	4c 89 ef	movq	%r13, %rdi
100021b1f:	ff d3	callq	*%rbx
100021b21:	48 85 c0	testq	%rax, %rax
100021b24:	74 2e	je	0x100021b54
100021b26:	49 89 c5	movq	%rax, %r13
100021b29:	48 8b 05 c8 17 03 00	movq	202696(%rip), %rax
100021b30:	4d 8b 34 04	movq	(%r12,%rax), %r14
100021b34:	4c 89 f7	movq	%r14, %rdi
100021b37:	e8 16 d3 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021b3c:	4c 89 f7	movq	%r14, %rdi
100021b3f:	31 f6	xorl	%esi, %esi
100021b41:	48 89 c2	movq	%rax, %rdx
100021b44:	4c 89 f9	movq	%r15, %rcx
100021b47:	e8 ee d2 00 00	callq	0x10002ee3a ## symbol stub for: _CFArrayContainsValue
100021b4c:	84 c0	testb	%al, %al
100021b4e:	0f 84 b2 01 00 00	je	0x100021d06
100021b54:	4c 8b 7d c8	movq	-56(%rbp), %r15
100021b58:	4c 8b 6d c0	movq	-64(%rbp), %r13
100021b5c:	48 8b 1d 95 17 03 00	movq	202645(%rip), %rbx
100021b63:	4c 8b 75 d0	movq	-48(%rbp), %r14
100021b67:	eb 15	jmp	0x100021b7e
100021b69:	48 83 c4 38	addq	$56, %rsp
100021b6d:	5b	popq	%rbx
100021b6e:	41 5c	popq	%r12
100021b70:	41 5d	popq	%r13
100021b72:	41 5e	popq	%r14
100021b74:	41 5f	popq	%r15
100021b76:	5d	popq	%rbp
100021b77:	c3	retq
100021b78:	b0 01	movb	$1, %al
100021b7a:	48 89 45 a0	movq	%rax, -96(%rbp)
100021b7e:	48 8d 15 5b d4 01 00	leaq	119899(%rip), %rdx ## Objc cfstring ref: @"region"
100021b85:	4c 89 f7	movq	%r14, %rdi
100021b88:	48 8b 35 f9 f9 02 00	movq	195065(%rip), %rsi ## Objc selector ref: isEqualToString:
100021b8f:	ff 15 8b b0 01 00	callq	*110731(%rip) ## Objc message: +[NSString isEqualToString:]
100021b95:	84 c0	testb	%al, %al
100021b97:	0f 84 0a 01 00 00	je	0x100021ca7
100021b9d:	48 8b 35 54 fa 02 00	movq	195156(%rip), %rsi ## Objc selector ref: length
100021ba4:	4c 89 ff	movq	%r15, %rdi
100021ba7:	ff 15 73 b0 01 00	callq	*110707(%rip) ## Objc message: -[%rdi length]
100021bad:	48 83 f8 02	cmpq	$2, %rax
100021bb1:	0f 82 f0 00 00 00	jb	0x100021ca7
100021bb7:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100021bbb:	4c 89 ee	movq	%r13, %rsi
100021bbe:	e8 9b d2 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100021bc3:	48 8b 35 56 f3 02 00	movq	193366(%rip), %rsi ## Objc selector ref: componentsSeparatedByString:
100021bca:	48 8d 15 ef d3 01 00	leaq	119791(%rip), %rdx ## Objc cfstring ref: @"_"
100021bd1:	4c 89 6d c0	movq	%r13, -64(%rbp)
100021bd5:	48 8b 1d 44 b0 01 00	movq	110660(%rip), %rbx ## Objc message: -[%rdi componentsSeparatedByString:]
100021bdc:	48 89 45 a8	movq	%rax, -88(%rbp)
100021be0:	48 89 c7	movq	%rax, %rdi
100021be3:	ff d3	callq	*%rbx
100021be5:	4c 89 75 d0	movq	%r14, -48(%rbp)
100021be9:	49 89 c6	movq	%rax, %r14
100021bec:	48 8b 35 55 07 03 00	movq	198485(%rip), %rsi ## Objc selector ref: substringToIndex:
100021bf3:	ba 02 00 00 00	movl	$2, %edx
100021bf8:	4c 89 ff	movq	%r15, %rdi
100021bfb:	ff d3	callq	*%rbx
100021bfd:	48 89 d9	movq	%rbx, %rcx
100021c00:	49 89 c5	movq	%rax, %r13
100021c03:	4c 89 7d c8	movq	%r15, -56(%rbp)
100021c07:	4c 8b 3d ba 09 03 00	movq	199098(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSString
100021c0e:	48 8b 35 4b fc 02 00	movq	195659(%rip), %rsi ## Objc selector ref: objectAtIndex:
100021c15:	4c 89 f7	movq	%r14, %rdi
100021c18:	4c 8b 75 d0	movq	-48(%rbp), %r14
100021c1c:	48 8b 1d d5 16 03 00	movq	202453(%rip), %rbx
100021c23:	31 d2	xorl	%edx, %edx
100021c25:	ff d1	callq	*%rcx
100021c27:	48 8b 35 fa 06 03 00	movq	198394(%rip), %rsi ## Objc selector ref: stringWithFormat:
100021c2e:	48 8d 15 eb d3 01 00	leaq	119787(%rip), %rdx ## Objc cfstring ref: @"%@_%@"
100021c35:	4c 89 ff	movq	%r15, %rdi
100021c38:	4c 8b 7d c8	movq	-56(%rbp), %r15
100021c3c:	48 89 c1	movq	%rax, %rcx
100021c3f:	4d 89 e8	movq	%r13, %r8
100021c42:	31 c0	xorl	%eax, %eax
100021c44:	ff 15 d6 af 01 00	callq	*110550(%rip) ## Objc message: +[NSString stringWithFormat:]
100021c4a:	48 89 45 b0	movq	%rax, -80(%rbp)
100021c4e:	48 8b 35 b3 f1 02 00	movq	192947(%rip), %rsi ## Objc selector ref: cStringUsingEncoding:
100021c55:	ba 01 00 00 00	movl	$1, %edx
100021c5a:	4c 89 ef	movq	%r13, %rdi
100021c5d:	ff 15 bd af 01 00	callq	*110525(%rip) ## Objc message: -[%rdi cStringUsingEncoding:]
100021c63:	4c 8b 6d c0	movq	-64(%rbp), %r13
100021c67:	48 89 45 b8	movq	%rax, -72(%rbp)
100021c6b:	48 85 c0	testq	%rax, %rax
100021c6e:	74 37	je	0x100021ca7
100021c70:	48 8b 05 81 16 03 00	movq	202369(%rip), %rax
100021c77:	4d 8b 34 04	movq	(%r12,%rax), %r14
100021c7b:	4c 89 f7	movq	%r14, %rdi
100021c7e:	e8 cf d1 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021c83:	4c 89 f7	movq	%r14, %rdi
100021c86:	4c 8b 75 d0	movq	-48(%rbp), %r14
100021c8a:	48 8b 1d 67 16 03 00	movq	202343(%rip), %rbx
100021c91:	31 f6	xorl	%esi, %esi
100021c93:	48 89 c2	movq	%rax, %rdx
100021c96:	48 8b 4d b0	movq	-80(%rbp), %rcx
100021c9a:	e8 9b d1 00 00	callq	0x10002ee3a ## symbol stub for: _CFArrayContainsValue
100021c9f:	84 c0	testb	%al, %al
100021ca1:	0f 84 84 00 00 00	je	0x100021d2b
100021ca7:	48 8d 15 52 d3 01 00	leaq	119634(%rip), %rdx ## Objc cfstring ref: @"string"
100021cae:	4c 89 f7	movq	%r14, %rdi
100021cb1:	48 8b 35 d0 f8 02 00	movq	194768(%rip), %rsi ## Objc selector ref: isEqualToString:
100021cb8:	ff 15 62 af 01 00	callq	*110434(%rip) ## Objc message: -[%rdi isEqualToString:]
100021cbe:	84 c0	testb	%al, %al
100021cc0:	74 27	je	0x100021ce9
100021cc2:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100021cc6:	4c 89 ee	movq	%r13, %rsi
100021cc9:	e8 90 d1 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100021cce:	48 8b 0d 1b 16 03 00	movq	202267(%rip), %rcx
100021cd5:	49 8b 3c 0c	movq	(%r12,%rcx), %rdi
100021cd9:	48 89 c6	movq	%rax, %rsi
100021cdc:	4c 89 fa	movq	%r15, %rdx
100021cdf:	e8 0a d2 00 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100021ce4:	e9 45 02 00 00	jmp	0x100021f2e
100021ce9:	80 7d a0 00	cmpb	$0, -96(%rbp)
100021ced:	0f 84 3b 02 00 00	je	0x100021f2e
100021cf3:	48 83 c4 38	addq	$56, %rsp
100021cf7:	5b	popq	%rbx
100021cf8:	41 5c	popq	%r12
100021cfa:	41 5d	popq	%r13
100021cfc:	41 5e	popq	%r14
100021cfe:	41 5f	popq	%r15
100021d00:	5d	popq	%rbp
100021d01:	e9 d2 d5 00 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
100021d06:	41 0f be 7d 00	movsbl	(%r13), %edi
100021d0b:	85 ff	testl	%edi, %edi
100021d0d:	4c 89 7d a8	movq	%r15, -88(%rbp)
100021d11:	4c 89 6d b8	movq	%r13, -72(%rbp)
100021d15:	78 33	js	0x100021d4a
100021d17:	89 f9	movl	%edi, %ecx
100021d19:	48 8b 15 90 aa 01 00	movq	109200(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
100021d20:	b8 00 01 00 00	movl	$256, %eax
100021d25:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
100021d29:	eb 29	jmp	0x100021d54
100021d2b:	48 8b 45 b8	movq	-72(%rbp), %rax
100021d2f:	0f be 38	movsbl	(%rax), %edi
100021d32:	85 ff	testl	%edi, %edi
100021d34:	78 59	js	0x100021d8f
100021d36:	89 f9	movl	%edi, %ecx
100021d38:	48 8b 15 71 aa 01 00	movq	109169(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
100021d3f:	b8 00 01 00 00	movl	$256, %eax
100021d44:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
100021d48:	eb 4f	jmp	0x100021d99
100021d4a:	be 00 01 00 00	movl	$256, %esi
100021d4f:	e8 4a d6 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
100021d54:	4c 8b 7d c8	movq	-56(%rbp), %r15
100021d58:	4c 8b 6d c0	movq	-64(%rbp), %r13
100021d5c:	48 8b 1d 95 15 03 00	movq	202133(%rip), %rbx
100021d63:	4c 8b 75 d0	movq	-48(%rbp), %r14
100021d67:	85 c0	testl	%eax, %eax
100021d69:	0f 84 0f fe ff ff	je	0x100021b7e
100021d6f:	48 8b 45 b8	movq	-72(%rbp), %rax
100021d73:	0f be 78 01	movsbl	1(%rax), %edi
100021d77:	85 ff	testl	%edi, %edi
100021d79:	78 4d	js	0x100021dc8
100021d7b:	89 f9	movl	%edi, %ecx
100021d7d:	48 8b 15 2c aa 01 00	movq	109100(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
100021d84:	b8 00 01 00 00	movl	$256, %eax
100021d89:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
100021d8d:	eb 43	jmp	0x100021dd2
100021d8f:	be 00 01 00 00	movl	$256, %esi
100021d94:	e8 05 d6 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
100021d99:	85 c0	testl	%eax, %eax
100021d9b:	0f 84 06 ff ff ff	je	0x100021ca7
100021da1:	48 8b 45 b8	movq	-72(%rbp), %rax
100021da5:	0f be 78 01	movsbl	1(%rax), %edi
100021da9:	85 ff	testl	%edi, %edi
100021dab:	0f 88 bb 00 00 00	js	0x100021e6c
100021db1:	89 f9	movl	%edi, %ecx
100021db3:	48 8b 15 f6 a9 01 00	movq	109046(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
100021dba:	b8 00 01 00 00	movl	$256, %eax
100021dbf:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
100021dc3:	e9 ae 00 00 00	jmp	0x100021e76
100021dc8:	be 00 01 00 00	movl	$256, %esi
100021dcd:	e8 cc d5 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
100021dd2:	85 c0	testl	%eax, %eax
100021dd4:	0f 84 a4 fd ff ff	je	0x100021b7e
100021dda:	4c 8b 3d 0f 15 03 00	movq	201999(%rip), %r15
100021de1:	4f 8b 34 3c	movq	(%r12,%r15), %r14
100021de5:	4c 89 f7	movq	%r14, %rdi
100021de8:	48 8b 5d b0	movq	-80(%rbp), %rbx
100021dec:	48 89 de	movq	%rbx, %rsi
100021def:	e8 ee d0 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100021df4:	4c 89 f7	movq	%r14, %rdi
100021df7:	4c 8b 75 a8	movq	-88(%rbp), %r14
100021dfb:	4c 89 f6	movq	%r14, %rsi
100021dfe:	48 89 c2	movq	%rax, %rdx
100021e01:	e8 e8 d0 00 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100021e06:	4b 8b 3c 3c	movq	(%r12,%r15), %rdi
100021e0a:	4c 8b 7d c8	movq	-56(%rbp), %r15
100021e0e:	48 89 de	movq	%rbx, %rsi
100021e11:	e8 d2 d0 00 00	callq	0x10002eee8 ## symbol stub for: _CFDictionaryRemoveValue
100021e16:	48 8b 05 db 14 03 00	movq	201947(%rip), %rax
100021e1d:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100021e21:	4c 89 ee	movq	%r13, %rsi
100021e24:	4c 89 f2	movq	%r14, %rdx
100021e27:	e8 44 d0 00 00	callq	0x10002ee70 ## symbol stub for: _CFArraySetValueAtIndex
100021e2c:	48 8b 05 c5 14 03 00	movq	201925(%rip), %rax
100021e33:	4d 8b 34 04	movq	(%r12,%rax), %r14
100021e37:	4c 89 f7	movq	%r14, %rdi
100021e3a:	e8 13 d0 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021e3f:	48 8d 0d aa f7 ff ff	leaq	-2134(%rip), %rcx
100021e46:	31 d2	xorl	%edx, %edx
100021e48:	48 89 55 a0	movq	%rdx, -96(%rbp)
100021e4c:	4c 89 f7	movq	%r14, %rdi
100021e4f:	4c 8b 75 d0	movq	-48(%rbp), %r14
100021e53:	48 8b 1d 9e 14 03 00	movq	201886(%rip), %rbx
100021e5a:	31 f6	xorl	%esi, %esi
100021e5c:	48 89 c2	movq	%rax, %rdx
100021e5f:	45 31 c0	xorl	%r8d, %r8d
100021e62:	e8 0f d0 00 00	callq	0x10002ee76 ## symbol stub for: _CFArraySortValues
100021e67:	e9 12 fd ff ff	jmp	0x100021b7e
100021e6c:	be 00 01 00 00	movl	$256, %esi
100021e71:	e8 28 d5 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
100021e76:	85 c0	testl	%eax, %eax
100021e78:	48 8b 45 b0	movq	-80(%rbp), %rax
100021e7c:	0f 84 25 fe ff ff	je	0x100021ca7
100021e82:	48 8b 0d 67 14 03 00	movq	201831(%rip), %rcx
100021e89:	4d 8b 34 0c	movq	(%r12,%rcx), %r14
100021e8d:	4c 89 f7	movq	%r14, %rdi
100021e90:	48 8b 5d a8	movq	-88(%rbp), %rbx
100021e94:	48 89 de	movq	%rbx, %rsi
100021e97:	49 89 c7	movq	%rax, %r15
100021e9a:	e8 43 d0 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100021e9f:	4c 89 f7	movq	%r14, %rdi
100021ea2:	4c 89 fe	movq	%r15, %rsi
100021ea5:	4d 89 fe	movq	%r15, %r14
100021ea8:	48 89 c2	movq	%rax, %rdx
100021eab:	e8 3e d0 00 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100021eb0:	48 8b 05 39 14 03 00	movq	201785(%rip), %rax
100021eb7:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100021ebb:	4c 8b 7d c8	movq	-56(%rbp), %r15
100021ebf:	48 89 de	movq	%rbx, %rsi
100021ec2:	e8 21 d0 00 00	callq	0x10002eee8 ## symbol stub for: _CFDictionaryRemoveValue
100021ec7:	48 8b 05 2a 14 03 00	movq	201770(%rip), %rax
100021ece:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100021ed2:	4c 89 ee	movq	%r13, %rsi
100021ed5:	4c 89 f2	movq	%r14, %rdx
100021ed8:	e8 93 cf 00 00	callq	0x10002ee70 ## symbol stub for: _CFArraySetValueAtIndex
100021edd:	48 8b 05 14 14 03 00	movq	201748(%rip), %rax
100021ee4:	4d 8b 34 04	movq	(%r12,%rax), %r14
100021ee8:	4c 89 f7	movq	%r14, %rdi
100021eeb:	e8 62 cf 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100021ef0:	48 8d 0d f9 f6 ff ff	leaq	-2311(%rip), %rcx
100021ef7:	4c 89 f7	movq	%r14, %rdi
100021efa:	48 8b 1d f7 13 03 00	movq	201719(%rip), %rbx
100021f01:	31 f6	xorl	%esi, %esi
100021f03:	48 89 c2	movq	%rax, %rdx
100021f06:	45 31 c0	xorl	%r8d, %r8d
100021f09:	e8 68 cf 00 00	callq	0x10002ee76 ## symbol stub for: _CFArraySortValues
100021f0e:	48 8d 15 eb d0 01 00	leaq	119019(%rip), %rdx ## Objc cfstring ref: @"string"
100021f15:	48 8b 7d d0	movq	-48(%rbp), %rdi
100021f19:	48 8b 35 68 f6 02 00	movq	194152(%rip), %rsi ## Objc selector ref: isEqualToString:
100021f20:	ff 15 fa ac 01 00	callq	*109818(%rip) ## Objc message: -[%rdi isEqualToString:]
100021f26:	84 c0	testb	%al, %al
100021f28:	0f 85 94 fd ff ff	jne	0x100021cc2
100021f2e:	48 8b 35 2b 05 03 00	movq	197931(%rip), %rsi ## Objc selector ref: updateTag
100021f35:	4c 89 e7	movq	%r12, %rdi
100021f38:	48 83 c4 38	addq	$56, %rsp
100021f3c:	5b	popq	%rbx
100021f3d:	41 5c	popq	%r12
100021f3f:	41 5d	popq	%r13
100021f41:	41 5e	popq	%r14
100021f43:	41 5f	popq	%r15
100021f45:	5d	popq	%rbp
100021f46:	ff 25 d4 ac 01 00	jmpq	*109780(%rip) ## Objc message: -[%rdi updateTag]
100021f4c:	55	pushq	%rbp
100021f4d:	48 89 e5	movq	%rsp, %rbp
100021f50:	41 56	pushq	%r14
100021f52:	53	pushq	%rbx
100021f53:	48 8b 05 b6 13 03 00	movq	201654(%rip), %rax
100021f5a:	48 8b 1c 07	movq	(%rdi,%rax), %rbx
100021f5e:	48 8b 05 a3 13 03 00	movq	201635(%rip), %rax
100021f65:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100021f69:	48 8b 35 d8 fc 02 00	movq	195800(%rip), %rsi ## Objc selector ref: selectedRow
100021f70:	4c 8b 35 a9 ac 01 00	movq	109737(%rip), %r14 ## Objc message: -[%rdi selectedRow]
100021f77:	41 ff d6	callq	*%r14
100021f7a:	31 d2	xorl	%edx, %edx
100021f7c:	48 85 c0	testq	%rax, %rax
100021f7f:	0f 99 c2	setns	%dl
100021f82:	48 8b 35 67 fe 02 00	movq	196199(%rip), %rsi ## Objc selector ref: setEnabled:
100021f89:	48 89 df	movq	%rbx, %rdi
100021f8c:	4c 89 f0	movq	%r14, %rax
100021f8f:	5b	popq	%rbx
100021f90:	41 5e	popq	%r14
100021f92:	5d	popq	%rbp
100021f93:	ff e0	jmpq	*%rax
100021f95:	55	pushq	%rbp
100021f96:	48 89 e5	movq	%rsp, %rbp
100021f99:	53	pushq	%rbx
100021f9a:	48 83 ec 18	subq	$24, %rsp
100021f9e:	48 89 fb	movq	%rdi, %rbx
100021fa1:	48 8b 05 78 13 03 00	movq	201592(%rip), %rax
100021fa8:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100021fac:	e8 23 d4 00 00	callq	0x10002f3d4 ## symbol stub for: _free
100021fb1:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100021fb5:	48 89 1f	movq	%rbx, (%rdi)
100021fb8:	48 8b 05 a9 08 03 00	movq	198825(%rip), %rax ## Objc class ref: VcgtTag
100021fbf:	48 89 47 08	movq	%rax, 8(%rdi)
100021fc3:	48 8b 35 86 f0 02 00	movq	192646(%rip), %rsi ## Objc selector ref: dealloc
100021fca:	e8 0d d5 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100021fcf:	48 83 c4 18	addq	$24, %rsp
100021fd3:	5b	popq	%rbx
100021fd4:	5d	popq	%rbp
100021fd5:	c3	retq
100021fd6:	55	pushq	%rbp
100021fd7:	48 89 e5	movq	%rsp, %rbp
100021fda:	b8 74 67 63 76	movl	$1986226036, %eax
100021fdf:	31 c2	xorl	%eax, %edx
100021fe1:	31 c1	xorl	%eax, %ecx
100021fe3:	31 c0	xorl	%eax, %eax
100021fe5:	09 d1	orl	%edx, %ecx
100021fe7:	0f 94 c0	sete	%al
100021fea:	5d	popq	%rbp
100021feb:	c3	retq
100021fec:	55	pushq	%rbp
100021fed:	48 89 e5	movq	%rsp, %rbp
100021ff0:	53	pushq	%rbx
100021ff1:	50	pushq	%rax
100021ff2:	48 8b 3d a7 05 03 00	movq	198055(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100021ff9:	48 8b 35 e8 f6 02 00	movq	194280(%rip), %rsi ## Objc selector ref: mainBundle
100022000:	48 8b 1d 19 ac 01 00	movq	109593(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100022007:	ff d3	callq	*%rbx
100022009:	48 8b 35 50 f6 02 00	movq	194128(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100022010:	48 8d 15 29 d0 01 00	leaq	118825(%rip), %rdx ## Objc cfstring ref: @"Apple display video card table"
100022017:	48 8d 0d 82 ae 01 00	leaq	110210(%rip), %rcx ## Objc cfstring ref: @""
10002201e:	48 89 c7	movq	%rax, %rdi
100022021:	45 31 c0	xorl	%r8d, %r8d
100022024:	48 89 d8	movq	%rbx, %rax
100022027:	48 83 c4 08	addq	$8, %rsp
10002202b:	5b	popq	%rbx
10002202c:	5d	popq	%rbp
10002202d:	ff e0	jmpq	*%rax
10002202f:	55	pushq	%rbp
100022030:	48 89 e5	movq	%rsp, %rbp
100022033:	41 57	pushq	%r15
100022035:	41 56	pushq	%r14
100022037:	41 55	pushq	%r13
100022039:	41 54	pushq	%r12
10002203b:	53	pushq	%rbx
10002203c:	50	pushq	%rax
10002203d:	49 89 d6	movq	%rdx, %r14
100022040:	49 89 fc	movq	%rdi, %r12
100022043:	89 cf	movl	%ecx, %edi
100022045:	e8 0a d2 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10002204a:	48 89 c3	movq	%rax, %rbx
10002204d:	4c 89 f7	movq	%r14, %rdi
100022050:	48 89 c6	movq	%rax, %rsi
100022053:	e8 26 d2 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
100022058:	49 89 c7	movq	%rax, %r15
10002205b:	48 89 df	movq	%rbx, %rdi
10002205e:	e8 af ce 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100022063:	4d 85 ff	testq	%r15, %r15
100022066:	0f 84 80 00 00 00	je	0x1000220ec
10002206c:	4c 89 ff	movq	%r15, %rdi
10002206f:	e8 32 ce 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100022074:	48 89 c7	movq	%rax, %rdi
100022077:	e8 36 d4 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10002207c:	4c 8b 2d 9d 12 03 00	movq	201373(%rip), %r13
100022083:	4b 89 04 2c	movq	%rax, (%r12,%r13)
100022087:	48 85 c0	testq	%rax, %rax
10002208a:	74 6f	je	0x1000220fb
10002208c:	49 89 c6	movq	%rax, %r14
10002208f:	4c 89 ff	movq	%r15, %rdi
100022092:	e8 09 ce 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100022097:	48 89 c3	movq	%rax, %rbx
10002209a:	4c 89 ff	movq	%r15, %rdi
10002209d:	e8 04 ce 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
1000220a2:	4f 8b 2c 2c	movq	(%r12,%r13), %r13
1000220a6:	4c 89 f7	movq	%r14, %rdi
1000220a9:	48 89 de	movq	%rbx, %rsi
1000220ac:	48 89 c2	movq	%rax, %rdx
1000220af:	e8 04 d4 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
1000220b4:	4c 89 ff	movq	%r15, %rdi
1000220b7:	e8 56 ce 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000220bc:	4d 85 ed	testq	%r13, %r13
1000220bf:	74 2b	je	0x1000220ec
1000220c1:	41 8b 45 08	movl	8(%r13), %eax
1000220c5:	89 c1	movl	%eax, %ecx
1000220c7:	0f c9	bswapl	%ecx
1000220c9:	41 89 4d 08	movl	%ecx, 8(%r13)
1000220cd:	3d 00 00 00 01	cmpl	$16777216, %eax
1000220d2:	74 3d	je	0x100022111
1000220d4:	85 c0	testl	%eax, %eax
1000220d6:	75 6d	jne	0x100022145
1000220d8:	66 41 c1 45 0c 08	rolw	$8, 12(%r13)
1000220de:	66 41 c1 45 0e 08	rolw	$8, 14(%r13)
1000220e4:	66 41 c1 45 10 08	rolw	$8, 16(%r13)
1000220ea:	eb 59	jmp	0x100022145
1000220ec:	48 83 c4 08	addq	$8, %rsp
1000220f0:	5b	popq	%rbx
1000220f1:	41 5c	popq	%r12
1000220f3:	41 5d	popq	%r13
1000220f5:	41 5e	popq	%r14
1000220f7:	41 5f	popq	%r15
1000220f9:	5d	popq	%rbp
1000220fa:	c3	retq
1000220fb:	4c 89 ff	movq	%r15, %rdi
1000220fe:	48 83 c4 08	addq	$8, %rsp
100022102:	5b	popq	%rbx
100022103:	41 5c	popq	%r12
100022105:	41 5d	popq	%r13
100022107:	41 5e	popq	%r14
100022109:	41 5f	popq	%r15
10002210b:	5d	popq	%rbp
10002210c:	e9 01 ce 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100022111:	66 0f 6f 05 a7 71 01 00	movdqa	94631(%rip), %xmm0
100022119:	f3 41 0f 6f 4d 0c	movdqu	12(%r13), %xmm1
10002211f:	f3 41 0f 6f 55 1c	movdqu	28(%r13), %xmm2
100022125:	66 0f 38 00 c8	pshufb	%xmm0, %xmm1
10002212a:	f3 41 0f 7f 4d 0c	movdqu	%xmm1, 12(%r13)
100022130:	66 0f 38 00 d0	pshufb	%xmm0, %xmm2
100022135:	f3 41 0f 7f 55 1c	movdqu	%xmm2, 28(%r13)
10002213b:	41 8b 45 2c	movl	44(%r13), %eax
10002213f:	0f c8	bswapl	%eax
100022141:	41 89 45 2c	movl	%eax, 44(%r13)
100022145:	48 8b 1d dc 11 03 00	movq	201180(%rip), %rbx
10002214c:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100022150:	48 8b 35 71 f9 02 00	movq	194929(%rip), %rsi ## Objc selector ref: removeAllItems
100022157:	ff 15 c3 aa 01 00	callq	*109251(%rip) ## Objc message: -[%rdi removeAllItems]
10002215d:	41 83 7d 08 00	cmpl	$0, 8(%r13)
100022162:	75 5b	jne	0x1000221bf
100022164:	66 41 83 7d 0c 01	cmpw	$1, 12(%r13)
10002216a:	75 53	jne	0x1000221bf
10002216c:	4d 8b 34 1c	movq	(%r12,%rbx), %r14
100022170:	48 8b 3d 29 04 03 00	movq	197673(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022177:	48 8b 35 6a f5 02 00	movq	193898(%rip), %rsi ## Objc selector ref: mainBundle
10002217e:	48 8b 1d 9b aa 01 00	movq	109211(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100022185:	48 89 75 d0	movq	%rsi, -48(%rbp)
100022189:	ff d3	callq	*%rbx
10002218b:	4c 8b 3d ce f4 02 00	movq	193742(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
100022192:	48 8d 15 87 bd 01 00	leaq	114055(%rip), %rdx ## Objc cfstring ref: @"Gray"
100022199:	48 8d 0d 00 ad 01 00	leaq	109824(%rip), %rcx ## Objc cfstring ref: @""
1000221a0:	48 89 c7	movq	%rax, %rdi
1000221a3:	4c 89 fe	movq	%r15, %rsi
1000221a6:	45 31 c0	xorl	%r8d, %r8d
1000221a9:	ff d3	callq	*%rbx
1000221ab:	48 8b 35 ae ea 02 00	movq	191150(%rip), %rsi ## Objc selector ref: addItemWithTitle:
1000221b2:	4c 89 f7	movq	%r14, %rdi
1000221b5:	48 89 c2	movq	%rax, %rdx
1000221b8:	ff d3	callq	*%rbx
1000221ba:	e9 dd 00 00 00	jmp	0x10002229c
1000221bf:	49 8b 1c 1c	movq	(%r12,%rbx), %rbx
1000221c3:	48 8b 3d d6 03 03 00	movq	197590(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000221ca:	48 8b 35 17 f5 02 00	movq	193815(%rip), %rsi ## Objc selector ref: mainBundle
1000221d1:	4c 8b 35 48 aa 01 00	movq	109128(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
1000221d8:	41 ff d6	callq	*%r14
1000221db:	4c 8b 3d 7e f4 02 00	movq	193662(%rip), %r15 ## Objc selector ref: localizedStringForKey:value:table:
1000221e2:	48 8d 15 57 c7 01 00	leaq	116567(%rip), %rdx ## Objc cfstring ref: @"Red"
1000221e9:	48 8d 0d b0 ac 01 00	leaq	109744(%rip), %rcx ## Objc cfstring ref: @""
1000221f0:	48 89 c7	movq	%rax, %rdi
1000221f3:	4c 89 fe	movq	%r15, %rsi
1000221f6:	45 31 c0	xorl	%r8d, %r8d
1000221f9:	41 ff d6	callq	*%r14
1000221fc:	48 8b 35 5d ea 02 00	movq	191069(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100022203:	48 89 df	movq	%rbx, %rdi
100022206:	48 89 c2	movq	%rax, %rdx
100022209:	41 ff d6	callq	*%r14
10002220c:	48 8b 05 15 11 03 00	movq	200981(%rip), %rax
100022213:	49 8b 1c 04	movq	(%r12,%rax), %rbx
100022217:	48 8b 3d 82 03 03 00	movq	197506(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002221e:	48 8b 35 c3 f4 02 00	movq	193731(%rip), %rsi ## Objc selector ref: mainBundle
100022225:	41 ff d6	callq	*%r14
100022228:	48 8d 15 31 ce 01 00	leaq	118321(%rip), %rdx ## Objc cfstring ref: @"Green"
10002222f:	48 89 c7	movq	%rax, %rdi
100022232:	4c 89 fe	movq	%r15, %rsi
100022235:	48 8d 0d 64 ac 01 00	leaq	109668(%rip), %rcx ## Objc cfstring ref: @""
10002223c:	45 31 c0	xorl	%r8d, %r8d
10002223f:	41 ff d6	callq	*%r14
100022242:	48 89 df	movq	%rbx, %rdi
100022245:	48 8b 35 14 ea 02 00	movq	190996(%rip), %rsi ## Objc selector ref: addItemWithTitle:
10002224c:	48 89 c2	movq	%rax, %rdx
10002224f:	41 ff d6	callq	*%r14
100022252:	48 8b 05 cf 10 03 00	movq	200911(%rip), %rax
100022259:	49 8b 1c 04	movq	(%r12,%rax), %rbx
10002225d:	48 8b 3d 3c 03 03 00	movq	197436(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022264:	48 8b 35 7d f4 02 00	movq	193661(%rip), %rsi ## Objc selector ref: mainBundle
10002226b:	48 89 75 d0	movq	%rsi, -48(%rbp)
10002226f:	41 ff d6	callq	*%r14
100022272:	48 8d 15 07 ce 01 00	leaq	118279(%rip), %rdx ## Objc cfstring ref: @"Blue"
100022279:	48 89 c7	movq	%rax, %rdi
10002227c:	4c 89 fe	movq	%r15, %rsi
10002227f:	48 8d 0d 1a ac 01 00	leaq	109594(%rip), %rcx ## Objc cfstring ref: @""
100022286:	45 31 c0	xorl	%r8d, %r8d
100022289:	41 ff d6	callq	*%r14
10002228c:	48 89 df	movq	%rbx, %rdi
10002228f:	48 8b 35 ca e9 02 00	movq	190922(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100022296:	48 89 c2	movq	%rax, %rdx
100022299:	41 ff d6	callq	*%r14
10002229c:	41 83 7d 08 00	cmpl	$0, 8(%r13)
1000222a1:	48 8b 05 88 10 03 00	movq	200840(%rip), %rax
1000222a8:	4d 8b 2c 04	movq	(%r12,%rax), %r13
1000222ac:	48 8b 3d ed 02 03 00	movq	197357(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000222b3:	4c 8b 35 66 a9 01 00	movq	108902(%rip), %r14 ## Objc message: +[NSBundle addItemWithTitle:]
1000222ba:	48 8d 05 df cd 01 00	leaq	118239(%rip), %rax ## Objc cfstring ref: @"Count:"
1000222c1:	48 8d 1d f8 cd 01 00	leaq	118264(%rip), %rbx ## Objc cfstring ref: @"Gamma:"
1000222c8:	48 0f 44 d8	cmoveq	%rax, %rbx
1000222cc:	48 8b 75 d0	movq	-48(%rbp), %rsi
1000222d0:	41 ff d6	callq	*%r14
1000222d3:	48 8d 0d c6 ab 01 00	leaq	109510(%rip), %rcx ## Objc cfstring ref: @""
1000222da:	48 89 c7	movq	%rax, %rdi
1000222dd:	4c 89 fe	movq	%r15, %rsi
1000222e0:	48 89 da	movq	%rbx, %rdx
1000222e3:	45 31 c0	xorl	%r8d, %r8d
1000222e6:	41 ff d6	callq	*%r14
1000222e9:	48 8b 35 00 fe 02 00	movq	196096(%rip), %rsi ## Objc selector ref: setStringValue:
1000222f0:	4c 89 ef	movq	%r13, %rdi
1000222f3:	48 89 c2	movq	%rax, %rdx
1000222f6:	41 ff d6	callq	*%r14
1000222f9:	48 8b 05 28 10 03 00	movq	200744(%rip), %rax
100022300:	49 8b 14 04	movq	(%r12,%rax), %rdx
100022304:	48 8b 35 75 f6 02 00	movq	194165(%rip), %rsi ## Objc selector ref: popHit:
10002230b:	4c 89 e7	movq	%r12, %rdi
10002230e:	4c 89 f0	movq	%r14, %rax
100022311:	48 83 c4 08	addq	$8, %rsp
100022315:	5b	popq	%rbx
100022316:	41 5c	popq	%r12
100022318:	41 5d	popq	%r13
10002231a:	41 5e	popq	%r14
10002231c:	41 5f	popq	%r15
10002231e:	5d	popq	%rbp
10002231f:	ff e0	jmpq	*%rax
100022321:	55	pushq	%rbp
100022322:	48 89 e5	movq	%rsp, %rbp
100022325:	41 57	pushq	%r15
100022327:	41 56	pushq	%r14
100022329:	41 55	pushq	%r13
10002232b:	41 54	pushq	%r12
10002232d:	53	pushq	%rbx
10002232e:	48 83 ec 28	subq	$40, %rsp
100022332:	49 89 ff	movq	%rdi, %r15
100022335:	48 8b 35 b4 f0 02 00	movq	192692(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
10002233c:	48 89 d7	movq	%rdx, %rdi
10002233f:	ff 15 db a8 01 00	callq	*108763(%rip) ## Objc message: -[%rdi indexOfSelectedItem]
100022345:	48 8b 0d d4 0f 03 00	movq	200660(%rip), %rcx
10002234c:	49 8b 3c 0f	movq	(%r15,%rcx), %rdi
100022350:	83 7f 08 00	cmpl	$0, 8(%rdi)
100022354:	48 89 45 c0	movq	%rax, -64(%rbp)
100022358:	74 2e	je	0x100022388
10002235a:	48 83 f8 02	cmpq	$2, %rax
10002235e:	0f 84 cf 00 00 00	je	0x100022433
100022364:	48 83 f8 01	cmpq	$1, %rax
100022368:	0f 84 d3 00 00 00	je	0x100022441
10002236e:	48 85 c0	testq	%rax, %rax
100022371:	0f 85 e5 00 00 00	jne	0x10002245c
100022377:	48 8d 4f 10	leaq	16(%rdi), %rcx
10002237b:	48 8d 57 0c	leaq	12(%rdi), %rdx
10002237f:	48 83 c7 14	addq	$20, %rdi
100022383:	e9 cb 00 00 00	jmp	0x100022453
100022388:	48 8d 4f 0c	leaq	12(%rdi), %rcx
10002238c:	0f b7 57 0c	movzwl	12(%rdi), %edx
100022390:	66 89 55 d4	movw	%dx, -44(%rbp)
100022394:	44 0f b7 77 0e	movzwl	14(%rdi), %r14d
100022399:	0f b7 57 10	movzwl	16(%rdi), %edx
10002239d:	83 fa 01	cmpl	$1, %edx
1000223a0:	48 89 4d b8	movq	%rcx, -72(%rbp)
1000223a4:	89 55 cc	movl	%edx, -52(%rbp)
1000223a7:	49 89 c5	movq	%rax, %r13
1000223aa:	0f 84 71 01 00 00	je	0x100022521
1000223b0:	4d 0f af ee	imulq	%r14, %r13
1000223b4:	66 83 fa 02	cmpw	$2, %dx
1000223b8:	0f 85 ce 01 00 00	jne	0x10002258c
1000223be:	4a 8d 14 69	leaq	(%rcx,%r13,2), %rdx
1000223c2:	0f b7 4a 06	movzwl	6(%rdx), %ecx
1000223c6:	46 0f b7 64 72 04	movzwl	4(%rdx,%r14,2), %r12d
1000223cc:	66 c1 c1 08	rolw	$8, %cx
1000223d0:	66 41 c1 c4 08	rolw	$8, %r12w
1000223d5:	48 8b 15 5c 0f 03 00	movq	200540(%rip), %rdx
1000223dc:	49 8b 3c 17	movq	(%r15,%rdx), %rdi
1000223e0:	0f b7 c9	movzwl	%cx, %ecx
1000223e3:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000223e7:	f2 0f 5e 05 51 5c 01 00	divsd	89169(%rip), %xmm0
1000223ef:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000223f3:	48 8b 1d 3e fa 02 00	movq	195134(%rip), %rbx ## Objc selector ref: setFloatValue:
1000223fa:	48 89 de	movq	%rbx, %rsi
1000223fd:	ff 15 1d a8 01 00	callq	*108573(%rip) ## Objc message: -[%rdi setFloatValue:]
100022403:	48 8b 05 36 0f 03 00	movq	200502(%rip), %rax
10002240a:	41 0f b7 cc	movzwl	%r12w, %ecx
10002240e:	0f 57 c0	xorps	%xmm0, %xmm0
100022411:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100022415:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100022419:	f2 0f 5e 05 1f 5c 01 00	divsd	89119(%rip), %xmm0
100022421:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022425:	48 89 de	movq	%rbx, %rsi
100022428:	ff 15 f2 a7 01 00	callq	*108530(%rip) ## Objc message: -[%rdi setFloatValue:]
10002242e:	e9 59 01 00 00	jmp	0x10002258c
100022433:	48 8d 4f 28	leaq	40(%rdi), %rcx
100022437:	48 8d 77 2c	leaq	44(%rdi), %rsi
10002243b:	48 83 c7 24	addq	$36, %rdi
10002243f:	eb 0c	jmp	0x10002244d
100022441:	48 8d 4f 1c	leaq	28(%rdi), %rcx
100022445:	48 8d 77 20	leaq	32(%rdi), %rsi
100022449:	48 83 c7 18	addq	$24, %rdi
10002244d:	48 89 fa	movq	%rdi, %rdx
100022450:	48 89 f7	movq	%rsi, %rdi
100022453:	8b 09	movl	(%rcx), %ecx
100022455:	8b 1f	movl	(%rdi), %ebx
100022457:	44 8b 2a	movl	(%rdx), %r13d
10002245a:	eb 0a	jmp	0x100022466
10002245c:	41 bd 00 00 01 00	movl	$65536, %r13d
100022462:	31 db	xorl	%ebx, %ebx
100022464:	31 c9	xorl	%ecx, %ecx
100022466:	89 4d d4	movl	%ecx, -44(%rbp)
100022469:	48 8b 05 c8 0e 03 00	movq	200392(%rip), %rax
100022470:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100022474:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100022478:	f2 0f 59 05 e0 5b 01 00	mulsd	89056(%rip), %xmm0
100022480:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022484:	4c 8b 35 ad f9 02 00	movq	194989(%rip), %r14 ## Objc selector ref: setFloatValue:
10002248b:	4c 8b 25 8e a7 01 00	movq	108430(%rip), %r12 ## Objc message: -[%rdi setFloatValue:]
100022492:	4c 89 f6	movq	%r14, %rsi
100022495:	41 ff d4	callq	*%r12
100022498:	48 8b 05 a1 0e 03 00	movq	200353(%rip), %rax
10002249f:	0f 57 c0	xorps	%xmm0, %xmm0
1000224a2:	f2 0f 2a c3	cvtsi2sd	%ebx, %xmm0
1000224a6:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000224aa:	f2 0f 59 05 ae 5b 01 00	mulsd	89006(%rip), %xmm0
1000224b2:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000224b6:	4c 89 f6	movq	%r14, %rsi
1000224b9:	41 ff d4	callq	*%r12
1000224bc:	48 8b 05 85 0e 03 00	movq	200325(%rip), %rax
1000224c3:	0f 57 c0	xorps	%xmm0, %xmm0
1000224c6:	f2 41 0f 2a c5	cvtsi2sd	%r13d, %xmm0
1000224cb:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000224cf:	f2 0f 59 05 89 5b 01 00	mulsd	88969(%rip), %xmm0
1000224d7:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000224db:	4c 89 f6	movq	%r14, %rsi
1000224de:	41 ff d4	callq	*%r12
1000224e1:	4c 8b 35 68 0e 03 00	movq	200296(%rip), %r14
1000224e8:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
1000224ec:	48 8b 35 9d e6 02 00	movq	190109(%rip), %rsi ## Objc selector ref: SetPlotColor:
1000224f3:	48 8b 55 c0	movq	-64(%rbp), %rdx
1000224f7:	41 ff d4	callq	*%r12
1000224fa:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
1000224fe:	48 8b 35 9b e6 02 00	movq	190107(%rip), %rsi ## Objc selector ref: SetPlotGamma:Min:Max:
100022505:	44 89 ea	movl	%r13d, %edx
100022508:	8b 4d d4	movl	-44(%rbp), %ecx
10002250b:	41 89 d8	movl	%ebx, %r8d
10002250e:	4c 89 e0	movq	%r12, %rax
100022511:	48 83 c4 28	addq	$40, %rsp
100022515:	5b	popq	%rbx
100022516:	41 5c	popq	%r12
100022518:	41 5d	popq	%r13
10002251a:	41 5e	popq	%r14
10002251c:	41 5f	popq	%r15
10002251e:	5d	popq	%rbp
10002251f:	ff e0	jmpq	*%rax
100022521:	4d 0f af ee	imulq	%r14, %r13
100022525:	4a 8d 14 29	leaq	(%rcx,%r13), %rdx
100022529:	42 0f b6 4c 29 06	movzbl	6(%rcx,%r13), %ecx
10002252f:	41 0f b6 54 16 05	movzbl	5(%r14,%rdx), %edx
100022535:	89 55 d0	movl	%edx, -48(%rbp)
100022538:	48 8b 15 f9 0d 03 00	movq	200185(%rip), %rdx
10002253f:	49 8b 3c 17	movq	(%r15,%rdx), %rdi
100022543:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100022547:	f2 0f 5e 05 f9 5a 01 00	divsd	88825(%rip), %xmm0
10002254f:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022553:	48 8b 1d de f8 02 00	movq	194782(%rip), %rbx ## Objc selector ref: setFloatValue:
10002255a:	4c 8b 25 bf a6 01 00	movq	108223(%rip), %r12 ## Objc message: -[%rdi setFloatValue:]
100022561:	48 89 de	movq	%rbx, %rsi
100022564:	41 ff d4	callq	*%r12
100022567:	48 8b 05 d2 0d 03 00	movq	200146(%rip), %rax
10002256e:	0f 57 c0	xorps	%xmm0, %xmm0
100022571:	f2 0f 2a 45 d0	cvtsi2sdl	-48(%rbp), %xmm0
100022576:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002257a:	f2 0f 5e 05 c6 5a 01 00	divsd	88774(%rip), %xmm0
100022582:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022586:	48 89 de	movq	%rbx, %rsi
100022589:	41 ff d4	callq	*%r12
10002258c:	48 8b 05 b5 0d 03 00	movq	200117(%rip), %rax
100022593:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100022597:	48 8b 35 62 f9 02 00	movq	194914(%rip), %rsi ## Objc selector ref: setIntValue:
10002259e:	48 8b 1d 7b a6 01 00	movq	108155(%rip), %rbx ## Objc message: -[%rdi setIntValue:]
1000225a5:	44 89 f2	movl	%r14d, %edx
1000225a8:	ff d3	callq	*%rbx
1000225aa:	66 83 7d d4 01	cmpw	$1, -44(%rbp)
1000225af:	4c 8b 25 9a 0d 03 00	movq	200090(%rip), %r12
1000225b6:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
1000225ba:	ba 06 00 00 00	movl	$6, %edx
1000225bf:	0f 45 55 c0	cmovnel	-64(%rbp), %edx
1000225c3:	48 8b 35 c6 e5 02 00	movq	189894(%rip), %rsi ## Objc selector ref: SetPlotColor:
1000225ca:	ff d3	callq	*%rbx
1000225cc:	4b 8b 3c 27	movq	(%r15,%r12), %rdi
1000225d0:	44 8b 45 cc	movl	-52(%rbp), %r8d
1000225d4:	44 89 c0	movl	%r8d, %eax
1000225d7:	49 0f af c5	imulq	%r13, %rax
1000225db:	48 8b 4d b8	movq	-72(%rbp), %rcx
1000225df:	48 8d 14 01	leaq	(%rcx,%rax), %rdx
1000225e3:	48 83 c2 06	addq	$6, %rdx
1000225e7:	48 8b 35 aa e5 02 00	movq	189866(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
1000225ee:	44 89 f1	movl	%r14d, %ecx
1000225f1:	48 89 d8	movq	%rbx, %rax
1000225f4:	48 83 c4 28	addq	$40, %rsp
1000225f8:	5b	popq	%rbx
1000225f9:	41 5c	popq	%r12
1000225fb:	41 5d	popq	%r13
1000225fd:	41 5e	popq	%r14
1000225ff:	41 5f	popq	%r15
100022601:	5d	popq	%rbp
100022602:	ff e0	jmpq	*%rax
100022604:	55	pushq	%rbp
100022605:	48 89 e5	movq	%rsp, %rbp
100022608:	b8 64 6f 6d 6d	movl	$1835888484, %eax
10002260d:	31 c1	xorl	%eax, %ecx
10002260f:	31 c2	xorl	%eax, %edx
100022611:	09 ca	orl	%ecx, %edx
100022613:	41 83 f0 28	xorl	$40, %r8d
100022617:	31 c0	xorl	%eax, %eax
100022619:	41 09 d0	orl	%edx, %r8d
10002261c:	0f 94 c0	sete	%al
10002261f:	5d	popq	%rbp
100022620:	c3	retq
100022621:	55	pushq	%rbp
100022622:	48 89 e5	movq	%rsp, %rbp
100022625:	53	pushq	%rbx
100022626:	50	pushq	%rax
100022627:	48 8b 3d 72 ff 02 00	movq	196466(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002262e:	48 8b 35 b3 f0 02 00	movq	192691(%rip), %rsi ## Objc selector ref: mainBundle
100022635:	48 8b 1d e4 a5 01 00	movq	108004(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002263c:	ff d3	callq	*%rbx
10002263e:	48 8b 35 1b f0 02 00	movq	192539(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100022645:	48 8d 15 94 ca 01 00	leaq	117396(%rip), %rdx ## Objc cfstring ref: @"Apple display make and model information"
10002264c:	48 8d 0d 4d a8 01 00	leaq	108621(%rip), %rcx ## Objc cfstring ref: @""
100022653:	48 89 c7	movq	%rax, %rdi
100022656:	45 31 c0	xorl	%r8d, %r8d
100022659:	48 89 d8	movq	%rbx, %rax
10002265c:	48 83 c4 08	addq	$8, %rsp
100022660:	5b	popq	%rbx
100022661:	5d	popq	%rbp
100022662:	ff e0	jmpq	*%rax
100022664:	55	pushq	%rbp
100022665:	48 89 e5	movq	%rsp, %rbp
100022668:	41 57	pushq	%r15
10002266a:	41 56	pushq	%r14
10002266c:	41 55	pushq	%r13
10002266e:	41 54	pushq	%r12
100022670:	53	pushq	%rbx
100022671:	50	pushq	%rax
100022672:	49 89 d6	movq	%rdx, %r14
100022675:	49 89 fc	movq	%rdi, %r12
100022678:	89 cf	movl	%ecx, %edi
10002267a:	e8 d5 cb 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10002267f:	48 89 c3	movq	%rax, %rbx
100022682:	4c 89 f7	movq	%r14, %rdi
100022685:	48 89 c6	movq	%rax, %rsi
100022688:	e8 f1 cb 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10002268d:	49 89 c7	movq	%rax, %r15
100022690:	48 89 df	movq	%rbx, %rdi
100022693:	e8 7a c8 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100022698:	4d 85 ff	testq	%r15, %r15
10002269b:	0f 84 51 01 00 00	je	0x1000227f2
1000226a1:	4c 89 e3	movq	%r12, %rbx
1000226a4:	4c 89 ff	movq	%r15, %rdi
1000226a7:	e8 fa c7 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
1000226ac:	45 31 e4	xorl	%r12d, %r12d
1000226af:	b9 00 00 00 00	movl	$0, %ecx
1000226b4:	41 bd 00 00 00 00	movl	$0, %r13d
1000226ba:	41 be 00 00 00 00	movl	$0, %r14d
1000226c0:	48 83 f8 28	cmpq	$40, %rax
1000226c4:	72 17	jb	0x1000226dd
1000226c6:	4c 89 ff	movq	%r15, %rdi
1000226c9:	e8 d2 c7 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
1000226ce:	44 8b 70 08	movl	8(%rax), %r14d
1000226d2:	44 8b 68 0c	movl	12(%rax), %r13d
1000226d6:	44 8b 60 10	movl	16(%rax), %r12d
1000226da:	8b 48 14	movl	20(%rax), %ecx
1000226dd:	89 4d d4	movl	%ecx, -44(%rbp)
1000226e0:	4c 89 ff	movq	%r15, %rdi
1000226e3:	e8 2a c8 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000226e8:	48 8b 05 69 0c 03 00	movq	199785(%rip), %rax
1000226ef:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
1000226f3:	48 8b 3d ce fe 02 00	movq	196302(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000226fa:	41 0f ce	bswapl	%r14d
1000226fd:	48 8b 35 24 fc 02 00	movq	195620(%rip), %rsi ## Objc selector ref: stringWithFormat:
100022704:	48 8d 15 f5 c9 01 00	leaq	117237(%rip), %rdx ## Objc cfstring ref: @"%08X"
10002270b:	44 89 f1	movl	%r14d, %ecx
10002270e:	31 c0	xorl	%eax, %eax
100022710:	ff 15 0a a5 01 00	callq	*107786(%rip) ## Objc message: +[NSString stringWithFormat:]
100022716:	48 8b 35 d3 f9 02 00	movq	195027(%rip), %rsi ## Objc selector ref: setStringValue:
10002271d:	4c 89 ff	movq	%r15, %rdi
100022720:	48 89 c2	movq	%rax, %rdx
100022723:	ff 15 f7 a4 01 00	callq	*107767(%rip) ## Objc message: -[%rdi setStringValue:]
100022729:	48 8b 05 30 0c 03 00	movq	199728(%rip), %rax
100022730:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
100022734:	48 8b 3d 8d fe 02 00	movq	196237(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002273b:	41 0f cd	bswapl	%r13d
10002273e:	4c 8b 35 e3 fb 02 00	movq	195555(%rip), %r14 ## Objc selector ref: stringWithFormat:
100022745:	4c 89 f6	movq	%r14, %rsi
100022748:	48 8d 15 b1 c9 01 00	leaq	117169(%rip), %rdx ## Objc cfstring ref: @"%08X"
10002274f:	44 89 e9	movl	%r13d, %ecx
100022752:	31 c0	xorl	%eax, %eax
100022754:	ff 15 c6 a4 01 00	callq	*107718(%rip) ## Objc message: +[NSString stringWithFormat:]
10002275a:	4c 89 ff	movq	%r15, %rdi
10002275d:	48 8b 35 8c f9 02 00	movq	194956(%rip), %rsi ## Objc selector ref: setStringValue:
100022764:	49 89 f5	movq	%rsi, %r13
100022767:	48 89 c2	movq	%rax, %rdx
10002276a:	ff 15 b0 a4 01 00	callq	*107696(%rip) ## Objc message: -[%rdi setStringValue:]
100022770:	48 8b 05 f1 0b 03 00	movq	199665(%rip), %rax
100022777:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002277b:	48 8b 3d 46 fe 02 00	movq	196166(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100022782:	41 0f cc	bswapl	%r12d
100022785:	4c 89 f6	movq	%r14, %rsi
100022788:	48 8d 15 71 c9 01 00	leaq	117105(%rip), %rdx ## Objc cfstring ref: @"%08X"
10002278f:	44 89 e1	movl	%r12d, %ecx
100022792:	31 c0	xorl	%eax, %eax
100022794:	ff 15 86 a4 01 00	callq	*107654(%rip) ## Objc message: +[NSString setStringValue:]
10002279a:	4c 89 ff	movq	%r15, %rdi
10002279d:	4c 89 ee	movq	%r13, %rsi
1000227a0:	48 89 c2	movq	%rax, %rdx
1000227a3:	ff 15 77 a4 01 00	callq	*107639(%rip) ## Objc message: -[%rdi setStringValue:]
1000227a9:	48 8b 05 c0 0b 03 00	movq	199616(%rip), %rax
1000227b0:	48 8b 1c 03	movq	(%rbx,%rax), %rbx
1000227b4:	48 8b 3d 0d fe 02 00	movq	196109(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000227bb:	8b 4d d4	movl	-44(%rbp), %ecx
1000227be:	0f c9	bswapl	%ecx
1000227c0:	4c 89 f6	movq	%r14, %rsi
1000227c3:	48 8d 15 36 c9 01 00	leaq	117046(%rip), %rdx ## Objc cfstring ref: @"%08X"
1000227ca:	31 c0	xorl	%eax, %eax
1000227cc:	ff 15 4e a4 01 00	callq	*107598(%rip) ## Objc message: +[NSString setStringValue:]
1000227d2:	48 89 df	movq	%rbx, %rdi
1000227d5:	4c 89 ee	movq	%r13, %rsi
1000227d8:	48 89 c2	movq	%rax, %rdx
1000227db:	48 8b 05 3e a4 01 00	movq	107582(%rip), %rax ## Objc message: -[%rdi setStringValue:]
1000227e2:	48 83 c4 08	addq	$8, %rsp
1000227e6:	5b	popq	%rbx
1000227e7:	41 5c	popq	%r12
1000227e9:	41 5d	popq	%r13
1000227eb:	41 5e	popq	%r14
1000227ed:	41 5f	popq	%r15
1000227ef:	5d	popq	%rbp
1000227f0:	ff e0	jmpq	*%rax
1000227f2:	48 83 c4 08	addq	$8, %rsp
1000227f6:	5b	popq	%rbx
1000227f7:	41 5c	popq	%r12
1000227f9:	41 5d	popq	%r13
1000227fb:	41 5e	popq	%r14
1000227fd:	41 5f	popq	%r15
1000227ff:	5d	popq	%rbp
100022800:	c3	retq
100022801:	55	pushq	%rbp
100022802:	48 89 e5	movq	%rsp, %rbp
100022805:	53	pushq	%rbx
100022806:	48 83 ec 18	subq	$24, %rsp
10002280a:	48 89 fb	movq	%rdi, %rbx
10002280d:	48 8b 05 64 0b 03 00	movq	199524(%rip), %rax
100022814:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100022818:	e8 b7 cb 00 00	callq	0x10002f3d4 ## symbol stub for: _free
10002281d:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100022821:	48 89 1f	movq	%rbx, (%rdi)
100022824:	48 8b 05 45 00 03 00	movq	196677(%rip), %rax ## Objc class ref: NdinTag
10002282b:	48 89 47 08	movq	%rax, 8(%rdi)
10002282f:	48 8b 35 1a e8 02 00	movq	190490(%rip), %rsi ## Objc selector ref: dealloc
100022836:	e8 a1 cc 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10002283b:	48 83 c4 18	addq	$24, %rsp
10002283f:	5b	popq	%rbx
100022840:	5d	popq	%rbp
100022841:	c3	retq
100022842:	55	pushq	%rbp
100022843:	48 89 e5	movq	%rsp, %rbp
100022846:	b8 6e 69 64 6e	movl	$1852074350, %eax
10002284b:	31 c2	xorl	%eax, %edx
10002284d:	31 c1	xorl	%eax, %ecx
10002284f:	31 c0	xorl	%eax, %eax
100022851:	09 d1	orl	%edx, %ecx
100022853:	0f 94 c0	sete	%al
100022856:	5d	popq	%rbp
100022857:	c3	retq
100022858:	55	pushq	%rbp
100022859:	48 89 e5	movq	%rsp, %rbp
10002285c:	53	pushq	%rbx
10002285d:	50	pushq	%rax
10002285e:	48 8b 3d 3b fd 02 00	movq	195899(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022865:	48 8b 35 7c ee 02 00	movq	192124(%rip), %rsi ## Objc selector ref: mainBundle
10002286c:	48 8b 1d ad a3 01 00	movq	107437(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100022873:	ff d3	callq	*%rbx
100022875:	48 8b 35 e4 ed 02 00	movq	191972(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002287c:	48 8d 15 9d c8 01 00	leaq	116893(%rip), %rdx ## Objc cfstring ref: @"Apple display native information"
100022883:	48 8d 0d 16 a6 01 00	leaq	108054(%rip), %rcx ## Objc cfstring ref: @""
10002288a:	48 89 c7	movq	%rax, %rdi
10002288d:	45 31 c0	xorl	%r8d, %r8d
100022890:	48 89 d8	movq	%rbx, %rax
100022893:	48 83 c4 08	addq	$8, %rsp
100022897:	5b	popq	%rbx
100022898:	5d	popq	%rbp
100022899:	ff e0	jmpq	*%rax
10002289b:	55	pushq	%rbp
10002289c:	48 89 e5	movq	%rsp, %rbp
10002289f:	41 57	pushq	%r15
1000228a1:	41 56	pushq	%r14
1000228a3:	41 55	pushq	%r13
1000228a5:	41 54	pushq	%r12
1000228a7:	53	pushq	%rbx
1000228a8:	48 83 ec 28	subq	$40, %rsp
1000228ac:	49 89 d6	movq	%rdx, %r14
1000228af:	49 89 ff	movq	%rdi, %r15
1000228b2:	89 cf	movl	%ecx, %edi
1000228b4:	e8 9b c9 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
1000228b9:	48 89 c3	movq	%rax, %rbx
1000228bc:	4c 89 f7	movq	%r14, %rdi
1000228bf:	48 89 c6	movq	%rax, %rsi
1000228c2:	e8 b7 c9 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
1000228c7:	49 89 c4	movq	%rax, %r12
1000228ca:	48 89 df	movq	%rbx, %rdi
1000228cd:	e8 40 c6 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000228d2:	4d 85 e4	testq	%r12, %r12
1000228d5:	0f 84 28 03 00 00	je	0x100022c03
1000228db:	4c 89 e7	movq	%r12, %rdi
1000228de:	e8 c3 c5 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
1000228e3:	48 89 c7	movq	%rax, %rdi
1000228e6:	e8 c7 cb 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
1000228eb:	4c 8b 2d 86 0a 03 00	movq	199302(%rip), %r13
1000228f2:	4b 89 04 2f	movq	%rax, (%r15,%r13)
1000228f6:	48 85 c0	testq	%rax, %rax
1000228f9:	0f 84 13 03 00 00	je	0x100022c12
1000228ff:	49 89 c6	movq	%rax, %r14
100022902:	4c 89 e7	movq	%r12, %rdi
100022905:	e8 96 c5 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10002290a:	48 89 c3	movq	%rax, %rbx
10002290d:	4c 89 e7	movq	%r12, %rdi
100022910:	e8 91 c5 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100022915:	4f 8b 2c 2f	movq	(%r15,%r13), %r13
100022919:	4c 89 f7	movq	%r14, %rdi
10002291c:	48 89 de	movq	%rbx, %rsi
10002291f:	48 89 c2	movq	%rax, %rdx
100022922:	e8 91 cb 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
100022927:	4c 89 e7	movq	%r12, %rdi
10002292a:	e8 e3 c5 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002292f:	4d 85 ed	testq	%r13, %r13
100022932:	0f 84 cb 02 00 00	je	0x100022c03
100022938:	4c 89 7d d0	movq	%r15, -48(%rbp)
10002293c:	41 8b 45 08	movl	8(%r13), %eax
100022940:	0f c8	bswapl	%eax
100022942:	41 89 45 08	movl	%eax, 8(%r13)
100022946:	49 8d 4d 0c	leaq	12(%r13), %rcx
10002294a:	48 89 4d b0	movq	%rcx, -80(%rbp)
10002294e:	b9 03 00 00 00	movl	$3, %ecx
100022953:	41 8b 54 8d 00	movl	(%r13,%rcx,4), %edx
100022958:	0f ca	bswapl	%edx
10002295a:	41 89 54 8d 00	movl	%edx, (%r13,%rcx,4)
10002295f:	48 ff c1	incq	%rcx
100022962:	48 83 f9 0e	cmpq	$14, %rcx
100022966:	75 eb	jne	0x100022953
100022968:	83 f8 36	cmpl	$54, %eax
10002296b:	4c 8b 75 d0	movq	-48(%rbp), %r14
10002296f:	72 12	jb	0x100022983
100022971:	66 41 c1 45 38 08	rolw	$8, 56(%r13)
100022977:	66 41 c1 45 3a 08	rolw	$8, 58(%r13)
10002297d:	66 41 c1 45 3c 08	rolw	$8, 60(%r13)
100022983:	48 8b 05 f6 09 03 00	movq	199158(%rip), %rax
10002298a:	49 8b 3c 06	movq	(%r14,%rax), %rdi
10002298e:	f2 41 0f 2a 45 0c	cvtsi2sdl	12(%r13), %xmm0
100022994:	f2 0f 5e 05 a4 56 01 00	divsd	87716(%rip), %xmm0
10002299c:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000229a0:	48 8b 1d 91 f4 02 00	movq	193681(%rip), %rbx ## Objc selector ref: setFloatValue:
1000229a7:	4c 8b 25 72 a2 01 00	movq	107122(%rip), %r12 ## Objc message: -[%rdi setFloatValue:]
1000229ae:	48 89 de	movq	%rbx, %rsi
1000229b1:	41 ff d4	callq	*%r12
1000229b4:	48 8b 05 cd 09 03 00	movq	199117(%rip), %rax
1000229bb:	0f 57 c0	xorps	%xmm0, %xmm0
1000229be:	f2 41 0f 2a 45 10	cvtsi2sdl	16(%r13), %xmm0
1000229c4:	49 8b 3c 06	movq	(%r14,%rax), %rdi
1000229c8:	f2 0f 5e 05 70 56 01 00	divsd	87664(%rip), %xmm0
1000229d0:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
1000229d4:	48 89 de	movq	%rbx, %rsi
1000229d7:	41 ff d4	callq	*%r12
1000229da:	48 8b 05 af 09 03 00	movq	199087(%rip), %rax
1000229e1:	49 8b 3c 06	movq	(%r14,%rax), %rdi
1000229e5:	0f 57 c0	xorps	%xmm0, %xmm0
1000229e8:	f2 41 0f 2a 45 14	cvtsi2sdl	20(%r13), %xmm0
1000229ee:	49 8d 45 14	leaq	20(%r13), %rax
1000229f2:	48 89 45 b8	movq	%rax, -72(%rbp)
1000229f6:	f2 0f 5e 05 42 56 01 00	divsd	87618(%rip), %xmm0
1000229fe:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022a02:	48 89 de	movq	%rbx, %rsi
100022a05:	41 ff d4	callq	*%r12
100022a08:	48 8b 05 89 09 03 00	movq	199049(%rip), %rax
100022a0f:	0f 57 c0	xorps	%xmm0, %xmm0
100022a12:	f2 41 0f 2a 45 18	cvtsi2sdl	24(%r13), %xmm0
100022a18:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100022a1c:	f2 0f 5e 05 1c 56 01 00	divsd	87580(%rip), %xmm0
100022a24:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022a28:	48 89 de	movq	%rbx, %rsi
100022a2b:	41 ff d4	callq	*%r12
100022a2e:	48 8b 05 6b 09 03 00	movq	199019(%rip), %rax
100022a35:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100022a39:	0f 57 c0	xorps	%xmm0, %xmm0
100022a3c:	f2 41 0f 2a 45 1c	cvtsi2sdl	28(%r13), %xmm0
100022a42:	49 8d 45 1c	leaq	28(%r13), %rax
100022a46:	48 89 45 c0	movq	%rax, -64(%rbp)
100022a4a:	f2 0f 5e 05 ee 55 01 00	divsd	87534(%rip), %xmm0
100022a52:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022a56:	48 89 de	movq	%rbx, %rsi
100022a59:	41 ff d4	callq	*%r12
100022a5c:	48 8b 05 45 09 03 00	movq	198981(%rip), %rax
100022a63:	0f 57 c0	xorps	%xmm0, %xmm0
100022a66:	f2 41 0f 2a 45 20	cvtsi2sdl	32(%r13), %xmm0
100022a6c:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100022a70:	f2 0f 5e 05 c8 55 01 00	divsd	87496(%rip), %xmm0
100022a78:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022a7c:	48 89 de	movq	%rbx, %rsi
100022a7f:	41 ff d4	callq	*%r12
100022a82:	48 8b 05 27 09 03 00	movq	198951(%rip), %rax
100022a89:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100022a8d:	0f 57 c0	xorps	%xmm0, %xmm0
100022a90:	f2 41 0f 2a 45 24	cvtsi2sdl	36(%r13), %xmm0
100022a96:	49 8d 45 24	leaq	36(%r13), %rax
100022a9a:	48 89 45 c8	movq	%rax, -56(%rbp)
100022a9e:	f2 0f 5e 05 9a 55 01 00	divsd	87450(%rip), %xmm0
100022aa6:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022aaa:	48 89 de	movq	%rbx, %rsi
100022aad:	41 ff d4	callq	*%r12
100022ab0:	48 8b 05 01 09 03 00	movq	198913(%rip), %rax
100022ab7:	0f 57 c0	xorps	%xmm0, %xmm0
100022aba:	f2 41 0f 2a 45 28	cvtsi2sdl	40(%r13), %xmm0
100022ac0:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100022ac4:	f2 0f 5e 05 74 55 01 00	divsd	87412(%rip), %xmm0
100022acc:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022ad0:	48 89 de	movq	%rbx, %rsi
100022ad3:	41 ff d4	callq	*%r12
100022ad6:	48 8b 1d e3 08 03 00	movq	198883(%rip), %rbx
100022add:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022ae1:	48 8b 35 c0 e0 02 00	movq	188608(%rip), %rsi ## Objc selector ref: SetPlotNone
100022ae8:	41 ff d4	callq	*%r12
100022aeb:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022aef:	4c 8b 3d 4a e0 02 00	movq	188490(%rip), %r15 ## Objc selector ref: AddPlotXY:index:
100022af6:	4c 89 fe	movq	%r15, %rsi
100022af9:	48 8b 55 b0	movq	-80(%rbp), %rdx
100022afd:	31 c9	xorl	%ecx, %ecx
100022aff:	41 ff d4	callq	*%r12
100022b02:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b06:	4c 89 fe	movq	%r15, %rsi
100022b09:	48 8b 55 b8	movq	-72(%rbp), %rdx
100022b0d:	b9 01 00 00 00	movl	$1, %ecx
100022b12:	41 ff d4	callq	*%r12
100022b15:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b19:	4c 89 fe	movq	%r15, %rsi
100022b1c:	48 8b 55 c0	movq	-64(%rbp), %rdx
100022b20:	b9 02 00 00 00	movl	$2, %ecx
100022b25:	41 ff d4	callq	*%r12
100022b28:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b2c:	4c 89 fe	movq	%r15, %rsi
100022b2f:	48 8b 55 c8	movq	-56(%rbp), %rdx
100022b33:	b9 08 00 00 00	movl	$8, %ecx
100022b38:	41 ff d4	callq	*%r12
100022b3b:	48 8b 1d 86 08 03 00	movq	198790(%rip), %rbx
100022b42:	48 8b 35 b7 ec 02 00	movq	191671(%rip), %rsi ## Objc selector ref: numberOfItems
100022b49:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b4d:	41 ff d4	callq	*%r12
100022b50:	48 83 f8 04	cmpq	$4, %rax
100022b54:	7c 31	jl	0x100022b87
100022b56:	4c 8b 25 93 ef 02 00	movq	192403(%rip), %r12 ## Objc selector ref: removeItemAtIndex:
100022b5d:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b61:	ba 03 00 00 00	movl	$3, %edx
100022b66:	4c 89 e6	movq	%r12, %rsi
100022b69:	4c 8b 3d b0 a0 01 00	movq	106672(%rip), %r15 ## Objc message: -[%rdi removeItemAtIndex:]
100022b70:	41 ff d7	callq	*%r15
100022b73:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022b77:	48 8b 35 82 ec 02 00	movq	191618(%rip), %rsi ## Objc selector ref: numberOfItems
100022b7e:	41 ff d7	callq	*%r15
100022b81:	48 83 f8 03	cmpq	$3, %rax
100022b85:	7f d6	jg	0x100022b5d
100022b87:	41 83 7d 08 36	cmpl	$54, 8(%r13)
100022b8c:	48 8b 0d 8d a0 01 00	movq	106637(%rip), %rcx ## Objc message: -[%rdi numberOfItems]
100022b93:	0f 82 77 01 00 00	jb	0x100022d10
100022b99:	41 0f b7 45 38	movzwl	56(%r13), %eax
100022b9e:	66 83 f8 03	cmpw	$3, %ax
100022ba2:	0f 84 80 00 00 00	je	0x100022c28
100022ba8:	66 83 f8 01	cmpw	$1, %ax
100022bac:	0f 85 5e 01 00 00	jne	0x100022d10
100022bb2:	48 8b 45 d0	movq	-48(%rbp), %rax
100022bb6:	4c 8b 34 18	movq	(%rax,%rbx), %r14
100022bba:	48 8b 3d df f9 02 00	movq	195039(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022bc1:	48 8b 35 20 eb 02 00	movq	191264(%rip), %rsi ## Objc selector ref: mainBundle
100022bc8:	49 89 cc	movq	%rcx, %r12
100022bcb:	ff d1	callq	*%rcx
100022bcd:	48 8b 35 8c ea 02 00	movq	191116(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100022bd4:	48 8d 15 65 c5 01 00	leaq	116069(%rip), %rdx ## Objc cfstring ref: @"Gray Table"
100022bdb:	48 8d 0d be a2 01 00	leaq	107198(%rip), %rcx ## Objc cfstring ref: @""
100022be2:	48 89 c7	movq	%rax, %rdi
100022be5:	45 31 c0	xorl	%r8d, %r8d
100022be8:	41 ff d4	callq	*%r12
100022beb:	48 8b 35 6e e0 02 00	movq	188526(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100022bf2:	4c 89 f7	movq	%r14, %rdi
100022bf5:	48 89 c2	movq	%rax, %rdx
100022bf8:	41 ff d4	callq	*%r12
100022bfb:	4c 89 e1	movq	%r12, %rcx
100022bfe:	e9 0d 01 00 00	jmp	0x100022d10
100022c03:	48 83 c4 28	addq	$40, %rsp
100022c07:	5b	popq	%rbx
100022c08:	41 5c	popq	%r12
100022c0a:	41 5d	popq	%r13
100022c0c:	41 5e	popq	%r14
100022c0e:	41 5f	popq	%r15
100022c10:	5d	popq	%rbp
100022c11:	c3	retq
100022c12:	4c 89 e7	movq	%r12, %rdi
100022c15:	48 83 c4 28	addq	$40, %rsp
100022c19:	5b	popq	%rbx
100022c1a:	41 5c	popq	%r12
100022c1c:	41 5d	popq	%r13
100022c1e:	41 5e	popq	%r14
100022c20:	41 5f	popq	%r15
100022c22:	5d	popq	%rbp
100022c23:	e9 ea c2 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100022c28:	4c 8b 7d d0	movq	-48(%rbp), %r15
100022c2c:	48 8b 05 95 07 03 00	movq	198549(%rip), %rax
100022c33:	4d 8b 24 07	movq	(%r15,%rax), %r12
100022c37:	48 8b 3d 62 f9 02 00	movq	194914(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022c3e:	48 8b 35 a3 ea 02 00	movq	191139(%rip), %rsi ## Objc selector ref: mainBundle
100022c45:	49 89 ce	movq	%rcx, %r14
100022c48:	ff d1	callq	*%rcx
100022c4a:	4c 8b 2d 0f ea 02 00	movq	190991(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
100022c51:	48 8d 15 08 c5 01 00	leaq	115976(%rip), %rdx ## Objc cfstring ref: @"Red Table"
100022c58:	48 8d 0d 41 a2 01 00	leaq	107073(%rip), %rcx ## Objc cfstring ref: @""
100022c5f:	48 89 c7	movq	%rax, %rdi
100022c62:	4c 89 ee	movq	%r13, %rsi
100022c65:	45 31 c0	xorl	%r8d, %r8d
100022c68:	41 ff d6	callq	*%r14
100022c6b:	48 8b 1d ee df 02 00	movq	188398(%rip), %rbx ## Objc selector ref: addItemWithTitle:
100022c72:	4c 89 e7	movq	%r12, %rdi
100022c75:	48 89 de	movq	%rbx, %rsi
100022c78:	48 89 c2	movq	%rax, %rdx
100022c7b:	41 ff d6	callq	*%r14
100022c7e:	48 8b 05 43 07 03 00	movq	198467(%rip), %rax
100022c85:	4d 8b 24 07	movq	(%r15,%rax), %r12
100022c89:	48 8b 3d 10 f9 02 00	movq	194832(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022c90:	48 8b 35 51 ea 02 00	movq	191057(%rip), %rsi ## Objc selector ref: mainBundle
100022c97:	41 ff d6	callq	*%r14
100022c9a:	48 8d 15 df c4 01 00	leaq	115935(%rip), %rdx ## Objc cfstring ref: @"Green Table"
100022ca1:	48 89 c7	movq	%rax, %rdi
100022ca4:	4c 89 ee	movq	%r13, %rsi
100022ca7:	48 8d 0d f2 a1 01 00	leaq	106994(%rip), %rcx ## Objc cfstring ref: @""
100022cae:	45 31 c0	xorl	%r8d, %r8d
100022cb1:	41 ff d6	callq	*%r14
100022cb4:	4c 89 e7	movq	%r12, %rdi
100022cb7:	48 89 de	movq	%rbx, %rsi
100022cba:	48 89 c2	movq	%rax, %rdx
100022cbd:	41 ff d6	callq	*%r14
100022cc0:	48 8b 05 01 07 03 00	movq	198401(%rip), %rax
100022cc7:	4d 8b 24 07	movq	(%r15,%rax), %r12
100022ccb:	48 8b 3d ce f8 02 00	movq	194766(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022cd2:	48 8b 35 0f ea 02 00	movq	190991(%rip), %rsi ## Objc selector ref: mainBundle
100022cd9:	41 ff d6	callq	*%r14
100022cdc:	48 8d 15 bd c4 01 00	leaq	115901(%rip), %rdx ## Objc cfstring ref: @"Blue Table"
100022ce3:	48 89 c7	movq	%rax, %rdi
100022ce6:	4c 89 ee	movq	%r13, %rsi
100022ce9:	48 8d 0d b0 a1 01 00	leaq	106928(%rip), %rcx ## Objc cfstring ref: @""
100022cf0:	45 31 c0	xorl	%r8d, %r8d
100022cf3:	41 ff d6	callq	*%r14
100022cf6:	4c 89 e7	movq	%r12, %rdi
100022cf9:	48 8b 1d c8 06 03 00	movq	198344(%rip), %rbx
100022d00:	48 8b 35 59 df 02 00	movq	188249(%rip), %rsi ## Objc selector ref: addItemWithTitle:
100022d07:	48 89 c2	movq	%rax, %rdx
100022d0a:	41 ff d6	callq	*%r14
100022d0d:	4c 89 f1	movq	%r14, %rcx
100022d10:	4c 8b 75 d0	movq	-48(%rbp), %r14
100022d14:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100022d18:	48 8b 35 e9 ee 02 00	movq	192233(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100022d1f:	31 d2	xorl	%edx, %edx
100022d21:	49 89 cf	movq	%rcx, %r15
100022d24:	ff d1	callq	*%rcx
100022d26:	49 8b 14 1e	movq	(%r14,%rbx), %rdx
100022d2a:	48 8b 35 4f ec 02 00	movq	191567(%rip), %rsi ## Objc selector ref: popHit:
100022d31:	4c 89 f7	movq	%r14, %rdi
100022d34:	4c 89 f8	movq	%r15, %rax
100022d37:	48 83 c4 28	addq	$40, %rsp
100022d3b:	5b	popq	%rbx
100022d3c:	41 5c	popq	%r12
100022d3e:	41 5d	popq	%r13
100022d40:	41 5e	popq	%r14
100022d42:	41 5f	popq	%r15
100022d44:	5d	popq	%rbp
100022d45:	ff e0	jmpq	*%rax
100022d47:	55	pushq	%rbp
100022d48:	48 89 e5	movq	%rsp, %rbp
100022d4b:	41 57	pushq	%r15
100022d4d:	41 56	pushq	%r14
100022d4f:	41 55	pushq	%r13
100022d51:	41 54	pushq	%r12
100022d53:	53	pushq	%rbx
100022d54:	48 83 ec 18	subq	$24, %rsp
100022d58:	49 89 fd	movq	%rdi, %r13
100022d5b:	48 8b 35 8e e6 02 00	movq	190094(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100022d62:	48 89 d7	movq	%rdx, %rdi
100022d65:	ff 15 b5 9e 01 00	callq	*106165(%rip) ## Objc message: +[NSBundle indexOfSelectedItem]
100022d6b:	48 89 c3	movq	%rax, %rbx
100022d6e:	48 8b 05 03 06 03 00	movq	198147(%rip), %rax
100022d75:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
100022d7a:	83 fb 03	cmpl	$3, %ebx
100022d7d:	7c 17	jl	0x100022d96
100022d7f:	41 83 7c 24 08 37	cmpl	$55, 8(%r12)
100022d85:	73 38	jae	0x100022dbf
100022d87:	48 83 c4 18	addq	$24, %rsp
100022d8b:	5b	popq	%rbx
100022d8c:	41 5c	popq	%r12
100022d8e:	41 5d	popq	%r13
100022d90:	41 5e	popq	%r14
100022d92:	41 5f	popq	%r15
100022d94:	5d	popq	%rbp
100022d95:	c3	retq
100022d96:	83 fb 02	cmpl	$2, %ebx
100022d99:	0f 84 c1 00 00 00	je	0x100022e60
100022d9f:	83 fb 01	cmpl	$1, %ebx
100022da2:	0f 84 be 00 00 00	je	0x100022e66
100022da8:	41 be 00 00 01 00	movl	$65536, %r14d
100022dae:	85 db	testl	%ebx, %ebx
100022db0:	0f 85 b8 00 00 00	jne	0x100022e6e
100022db6:	49 83 c4 2c	addq	$44, %r12
100022dba:	e9 ab 00 00 00	jmp	0x100022e6a
100022dbf:	4c 63 f3	movslq	%ebx, %r14
100022dc2:	49 83 c6 fd	addq	$-3, %r14
100022dc6:	66 41 83 7c 24 38 01	cmpw	$1, 56(%r12)
100022dcd:	b8 06 00 00 00	movl	$6, %eax
100022dd2:	41 0f 45 c6	cmovnel	%r14d, %eax
100022dd6:	89 45 cc	movl	%eax, -52(%rbp)
100022dd9:	41 0f b7 5c 24 3a	movzwl	58(%r12), %ebx
100022ddf:	41 0f b7 44 24 3c	movzwl	60(%r12), %eax
100022de5:	83 f8 01	cmpl	$1, %eax
100022de8:	89 45 d0	movl	%eax, -48(%rbp)
100022deb:	0f 84 6d 01 00 00	je	0x100022f5e
100022df1:	66 83 f8 02	cmpw	$2, %ax
100022df5:	0f 85 d2 01 00 00	jne	0x100022fcd
100022dfb:	4d 63 f6	movslq	%r14d, %r14
100022dfe:	4c 0f af f3	imulq	%rbx, %r14
100022e02:	4b 8d 04 74	leaq	(%r12,%r14,2), %rax
100022e06:	0f b7 48 3e	movzwl	62(%rax), %ecx
100022e0a:	0f b7 44 58 3c	movzwl	60(%rax,%rbx,2), %eax
100022e0f:	89 45 d4	movl	%eax, -44(%rbp)
100022e12:	48 8b 05 b7 05 03 00	movq	198071(%rip), %rax
100022e19:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022e1e:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100022e22:	f2 0f 5e 05 16 52 01 00	divsd	86550(%rip), %xmm0
100022e2a:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022e2e:	48 8b 35 03 f0 02 00	movq	192515(%rip), %rsi ## Objc selector ref: setFloatValue:
100022e35:	4c 8b 3d e4 9d 01 00	movq	105956(%rip), %r15 ## Objc message: -[%rdi setFloatValue:]
100022e3c:	41 ff d7	callq	*%r15
100022e3f:	48 8b 05 92 05 03 00	movq	198034(%rip), %rax
100022e46:	0f 57 c0	xorps	%xmm0, %xmm0
100022e49:	f2 0f 2a 45 d4	cvtsi2sdl	-44(%rbp), %xmm0
100022e4e:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022e53:	f2 0f 5e 05 e5 51 01 00	divsd	86501(%rip), %xmm0
100022e5b:	e9 5d 01 00 00	jmp	0x100022fbd
100022e60:	49 83 c4 34	addq	$52, %r12
100022e64:	eb 04	jmp	0x100022e6a
100022e66:	49 83 c4 30	addq	$48, %r12
100022e6a:	45 8b 34 24	movl	(%r12), %r14d
100022e6e:	48 8b 05 5b 05 03 00	movq	197979(%rip), %rax
100022e75:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022e7a:	4c 8b 3d b7 ef 02 00	movq	192439(%rip), %r15 ## Objc selector ref: setFloatValue:
100022e81:	4c 8b 25 98 9d 01 00	movq	105880(%rip), %r12 ## Objc message: -[%rdi setFloatValue:]
100022e88:	0f 57 c0	xorps	%xmm0, %xmm0
100022e8b:	4c 89 fe	movq	%r15, %rsi
100022e8e:	41 ff d4	callq	*%r12
100022e91:	48 8b 05 40 05 03 00	movq	197952(%rip), %rax
100022e98:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022e9d:	f3 0f 10 05 ef 50 01 00	movss	86255(%rip), %xmm0
100022ea5:	4c 89 fe	movq	%r15, %rsi
100022ea8:	41 ff d4	callq	*%r12
100022eab:	48 8b 05 2e 05 03 00	movq	197934(%rip), %rax
100022eb2:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022eb7:	0f 57 c0	xorps	%xmm0, %xmm0
100022eba:	f2 41 0f 2a c6	cvtsi2sd	%r14d, %xmm0
100022ebf:	f2 0f 59 05 99 51 01 00	mulsd	86425(%rip), %xmm0
100022ec7:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022ecb:	4c 89 fe	movq	%r15, %rsi
100022ece:	41 ff d4	callq	*%r12
100022ed1:	48 8b 05 10 05 03 00	movq	197904(%rip), %rax
100022ed8:	4d 8b 7c 05 00	movq	(%r13,%rax), %r15
100022edd:	48 8b 3d bc f6 02 00	movq	194236(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100022ee4:	48 8b 35 fd e7 02 00	movq	190461(%rip), %rsi ## Objc selector ref: mainBundle
100022eeb:	41 ff d4	callq	*%r12
100022eee:	48 8b 35 6b e7 02 00	movq	190315(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100022ef5:	48 8d 15 c4 c1 01 00	leaq	115140(%rip), %rdx ## Objc cfstring ref: @"Gamma:"
100022efc:	48 8d 0d 9d 9f 01 00	leaq	106397(%rip), %rcx ## Objc cfstring ref: @""
100022f03:	48 89 c7	movq	%rax, %rdi
100022f06:	45 31 c0	xorl	%r8d, %r8d
100022f09:	41 ff d4	callq	*%r12
100022f0c:	48 8b 35 dd f1 02 00	movq	192989(%rip), %rsi ## Objc selector ref: setStringValue:
100022f13:	4c 89 ff	movq	%r15, %rdi
100022f16:	48 89 c2	movq	%rax, %rdx
100022f19:	41 ff d4	callq	*%r12
100022f1c:	4c 8b 3d cd 04 03 00	movq	197837(%rip), %r15
100022f23:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100022f28:	48 8b 35 61 dc 02 00	movq	187489(%rip), %rsi ## Objc selector ref: SetPlotColor:
100022f2f:	89 da	movl	%ebx, %edx
100022f31:	41 ff d4	callq	*%r12
100022f34:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100022f39:	48 8b 35 60 dc 02 00	movq	187488(%rip), %rsi ## Objc selector ref: SetPlotGamma:Min:Max:
100022f40:	44 89 f2	movl	%r14d, %edx
100022f43:	31 c9	xorl	%ecx, %ecx
100022f45:	41 b8 00 00 01 00	movl	$65536, %r8d
100022f4b:	4c 89 e0	movq	%r12, %rax
100022f4e:	48 83 c4 18	addq	$24, %rsp
100022f52:	5b	popq	%rbx
100022f53:	41 5c	popq	%r12
100022f55:	41 5d	popq	%r13
100022f57:	41 5e	popq	%r14
100022f59:	41 5f	popq	%r15
100022f5b:	5d	popq	%rbp
100022f5c:	ff e0	jmpq	*%rax
100022f5e:	4c 0f af f3	imulq	%rbx, %r14
100022f62:	4b 8d 04 34	leaq	(%r12,%r14), %rax
100022f66:	43 0f b6 4c 34 3e	movzbl	62(%r12,%r14), %ecx
100022f6c:	0f b6 44 03 3d	movzbl	61(%rbx,%rax), %eax
100022f71:	89 45 d4	movl	%eax, -44(%rbp)
100022f74:	48 8b 05 55 04 03 00	movq	197717(%rip), %rax
100022f7b:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022f80:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100022f84:	f2 0f 5e 05 bc 50 01 00	divsd	86204(%rip), %xmm0
100022f8c:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022f90:	48 8b 35 a1 ee 02 00	movq	192161(%rip), %rsi ## Objc selector ref: setFloatValue:
100022f97:	4c 8b 3d 82 9c 01 00	movq	105602(%rip), %r15 ## Objc message: +[NSBundle setFloatValue:]
100022f9e:	41 ff d7	callq	*%r15
100022fa1:	48 8b 05 30 04 03 00	movq	197680(%rip), %rax
100022fa8:	0f 57 c0	xorps	%xmm0, %xmm0
100022fab:	f2 0f 2a 45 d4	cvtsi2sdl	-44(%rbp), %xmm0
100022fb0:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022fb5:	f2 0f 5e 05 8b 50 01 00	divsd	86155(%rip), %xmm0
100022fbd:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100022fc1:	48 8b 35 70 ee 02 00	movq	192112(%rip), %rsi ## Objc selector ref: setFloatValue:
100022fc8:	41 ff d7	callq	*%r15
100022fcb:	eb 04	jmp	0x100022fd1
100022fcd:	44 0f af f3	imull	%ebx, %r14d
100022fd1:	48 8b 05 08 04 03 00	movq	197640(%rip), %rax
100022fd8:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100022fdd:	48 8b 35 1c ef 02 00	movq	192284(%rip), %rsi ## Objc selector ref: setIntValue:
100022fe4:	4c 8b 3d 35 9c 01 00	movq	105525(%rip), %r15 ## Objc message: -[%rdi setIntValue:]
100022feb:	48 89 5d c0	movq	%rbx, -64(%rbp)
100022fef:	89 da	movl	%ebx, %edx
100022ff1:	41 ff d7	callq	*%r15
100022ff4:	48 8b 05 ed 03 03 00	movq	197613(%rip), %rax
100022ffb:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
100023000:	48 8b 3d 99 f5 02 00	movq	193945(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023007:	48 8b 35 da e6 02 00	movq	190170(%rip), %rsi ## Objc selector ref: mainBundle
10002300e:	41 ff d7	callq	*%r15
100023011:	48 8b 35 48 e6 02 00	movq	190024(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023018:	48 8d 15 81 c0 01 00	leaq	114817(%rip), %rdx ## Objc cfstring ref: @"Count:"
10002301f:	48 8d 0d 7a 9e 01 00	leaq	106106(%rip), %rcx ## Objc cfstring ref: @""
100023026:	48 89 c7	movq	%rax, %rdi
100023029:	45 31 c0	xorl	%r8d, %r8d
10002302c:	41 ff d7	callq	*%r15
10002302f:	48 8b 35 ba f0 02 00	movq	192698(%rip), %rsi ## Objc selector ref: setStringValue:
100023036:	48 89 df	movq	%rbx, %rdi
100023039:	48 89 c2	movq	%rax, %rdx
10002303c:	41 ff d7	callq	*%r15
10002303f:	48 8b 1d aa 03 03 00	movq	197546(%rip), %rbx
100023046:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
10002304b:	48 8b 35 3e db 02 00	movq	187198(%rip), %rsi ## Objc selector ref: SetPlotColor:
100023052:	8b 55 cc	movl	-52(%rbp), %edx
100023055:	41 ff d7	callq	*%r15
100023058:	49 8b 7c 1d 00	movq	(%r13,%rbx), %rdi
10002305d:	44 8b 45 d0	movl	-48(%rbp), %r8d
100023061:	45 0f af f0	imull	%r8d, %r14d
100023065:	49 63 c6	movslq	%r14d, %rax
100023068:	49 8d 14 04	leaq	(%r12,%rax), %rdx
10002306c:	48 83 c2 3e	addq	$62, %rdx
100023070:	48 8b 35 21 db 02 00	movq	187169(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
100023077:	48 8b 4d c0	movq	-64(%rbp), %rcx
10002307b:	4c 89 f8	movq	%r15, %rax
10002307e:	48 83 c4 18	addq	$24, %rsp
100023082:	5b	popq	%rbx
100023083:	41 5c	popq	%r12
100023085:	41 5d	popq	%r13
100023087:	41 5e	popq	%r14
100023089:	41 5f	popq	%r15
10002308b:	5d	popq	%rbp
10002308c:	ff e0	jmpq	*%rax
10002308e:	55	pushq	%rbp
10002308f:	48 89 e5	movq	%rsp, %rbp
100023092:	81 f1 6d 69 74 64	xorl	$1685350765, %ecx
100023098:	41 83 f0 14	xorl	$20, %r8d
10002309c:	31 c0	xorl	%eax, %eax
10002309e:	41 09 c8	orl	%ecx, %r8d
1000230a1:	0f 94 c0	sete	%al
1000230a4:	5d	popq	%rbp
1000230a5:	c3	retq
1000230a6:	55	pushq	%rbp
1000230a7:	48 89 e5	movq	%rsp, %rbp
1000230aa:	41 56	pushq	%r14
1000230ac:	53	pushq	%rbx
1000230ad:	89 d3	movl	%edx, %ebx
1000230af:	48 8b 3d ea f4 02 00	movq	193770(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000230b6:	48 8b 35 2b e6 02 00	movq	189995(%rip), %rsi ## Objc selector ref: mainBundle
1000230bd:	4c 8b 35 5c 9b 01 00	movq	105308(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
1000230c4:	41 ff d6	callq	*%r14
1000230c7:	81 fb 74 6c 61 63	cmpl	$1667329140, %ebx
1000230cd:	48 8b 35 8c e5 02 00	movq	189836(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000230d4:	48 8d 0d e5 c0 01 00	leaq	114917(%rip), %rcx ## Objc cfstring ref: @"Calibration date and time"
1000230db:	48 8d 15 fe c0 01 00	leaq	114942(%rip), %rdx ## Objc cfstring ref: @"Date and time"
1000230e2:	48 0f 44 d1	cmoveq	%rcx, %rdx
1000230e6:	48 8d 0d b3 9d 01 00	leaq	105907(%rip), %rcx ## Objc cfstring ref: @""
1000230ed:	48 89 c7	movq	%rax, %rdi
1000230f0:	45 31 c0	xorl	%r8d, %r8d
1000230f3:	4c 89 f0	movq	%r14, %rax
1000230f6:	5b	popq	%rbx
1000230f7:	41 5e	popq	%r14
1000230f9:	5d	popq	%rbp
1000230fa:	ff e0	jmpq	*%rax
1000230fc:	55	pushq	%rbp
1000230fd:	48 89 e5	movq	%rsp, %rbp
100023100:	41 57	pushq	%r15
100023102:	41 56	pushq	%r14
100023104:	41 55	pushq	%r13
100023106:	41 54	pushq	%r12
100023108:	53	pushq	%rbx
100023109:	48 83 ec 28	subq	$40, %rsp
10002310d:	49 89 d7	movq	%rdx, %r15
100023110:	49 89 fe	movq	%rdi, %r14
100023113:	89 cf	movl	%ecx, %edi
100023115:	e8 3a c1 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
10002311a:	48 89 c3	movq	%rax, %rbx
10002311d:	4c 89 ff	movq	%r15, %rdi
100023120:	48 89 c6	movq	%rax, %rsi
100023123:	e8 56 c1 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
100023128:	49 89 c7	movq	%rax, %r15
10002312b:	48 89 df	movq	%rbx, %rdi
10002312e:	e8 df bd 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100023133:	4d 85 ff	testq	%r15, %r15
100023136:	74 3d	je	0x100023175
100023138:	4c 89 75 c8	movq	%r14, -56(%rbp)
10002313c:	4c 89 ff	movq	%r15, %rdi
10002313f:	e8 62 bd 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100023144:	48 83 f8 14	cmpq	$20, %rax
100023148:	72 3a	jb	0x100023184
10002314a:	4c 89 ff	movq	%r15, %rdi
10002314d:	e8 4e bd 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100023152:	44 0f b7 68 08	movzwl	8(%rax), %r13d
100023157:	44 0f b7 60 0a	movzwl	10(%rax), %r12d
10002315c:	0f b7 58 0c	movzwl	12(%rax), %ebx
100023160:	44 0f b7 70 0e	movzwl	14(%rax), %r14d
100023165:	0f b7 48 10	movzwl	16(%rax), %ecx
100023169:	89 4d d0	movl	%ecx, -48(%rbp)
10002316c:	0f b7 40 12	movzwl	18(%rax), %eax
100023170:	89 45 d4	movl	%eax, -44(%rbp)
100023173:	eb 28	jmp	0x10002319d
100023175:	48 83 c4 28	addq	$40, %rsp
100023179:	5b	popq	%rbx
10002317a:	41 5c	popq	%r12
10002317c:	41 5d	popq	%r13
10002317e:	41 5e	popq	%r14
100023180:	41 5f	popq	%r15
100023182:	5d	popq	%rbp
100023183:	c3	retq
100023184:	31 db	xorl	%ebx, %ebx
100023186:	45 31 f6	xorl	%r14d, %r14d
100023189:	c7 45 d0 00 00 00 00	movl	$0, -48(%rbp)
100023190:	c7 45 d4 00 00 00 00	movl	$0, -44(%rbp)
100023197:	45 31 e4	xorl	%r12d, %r12d
10002319a:	45 31 ed	xorl	%r13d, %r13d
10002319d:	4c 89 ff	movq	%r15, %rdi
1000231a0:	e8 6d bd 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000231a5:	48 8b 05 4c 02 03 00	movq	197196(%rip), %rax
1000231ac:	48 8b 4d c8	movq	-56(%rbp), %rcx
1000231b0:	48 8b 04 01	movq	(%rcx,%rax), %rax
1000231b4:	48 89 45 c8	movq	%rax, -56(%rbp)
1000231b8:	48 8b 05 69 f5 02 00	movq	193897(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSCalendarDate
1000231bf:	48 89 45 b0	movq	%rax, -80(%rbp)
1000231c3:	66 41 c1 c5 08	rolw	$8, %r13w
1000231c8:	66 41 c1 c4 08	rolw	$8, %r12w
1000231cd:	41 0f b7 c5	movzwl	%r13w, %eax
1000231d1:	48 89 45 c0	movq	%rax, -64(%rbp)
1000231d5:	41 0f b7 c4	movzwl	%r12w, %eax
1000231d9:	48 89 45 b8	movq	%rax, -72(%rbp)
1000231dd:	66 c1 c3 08	rolw	$8, %bx
1000231e1:	44 0f b7 e3	movzwl	%bx, %r12d
1000231e5:	66 41 c1 c6 08	rolw	$8, %r14w
1000231ea:	45 0f b7 f6	movzwl	%r14w, %r14d
1000231ee:	8b 45 d0	movl	-48(%rbp), %eax
1000231f1:	66 c1 c0 08	rolw	$8, %ax
1000231f5:	8b 4d d4	movl	-44(%rbp), %ecx
1000231f8:	66 c1 c1 08	rolw	$8, %cx
1000231fc:	44 0f b7 e8	movzwl	%ax, %r13d
100023200:	0f b7 d9	movzwl	%cx, %ebx
100023203:	48 8b 3d 26 f5 02 00	movq	193830(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSTimeZone
10002320a:	48 8b 35 37 e4 02 00	movq	189495(%rip), %rsi ## Objc selector ref: localTimeZone
100023211:	4c 8b 3d 08 9a 01 00	movq	104968(%rip), %r15 ## Objc message: +[NSTimeZone localTimeZone]
100023218:	41 ff d7	callq	*%r15
10002321b:	48 8b 35 26 de 02 00	movq	187942(%rip), %rsi ## Objc selector ref: dateWithYear:month:day:hour:minute:second:timeZone:
100023222:	48 83 ec 08	subq	$8, %rsp
100023226:	48 8b 7d b0	movq	-80(%rbp), %rdi
10002322a:	48 8b 55 c0	movq	-64(%rbp), %rdx
10002322e:	48 8b 4d b8	movq	-72(%rbp), %rcx
100023232:	4d 89 e0	movq	%r12, %r8
100023235:	4d 89 f1	movq	%r14, %r9
100023238:	50	pushq	%rax
100023239:	53	pushq	%rbx
10002323a:	41 55	pushq	%r13
10002323c:	41 ff d7	callq	*%r15
10002323f:	48 83 c4 20	addq	$32, %rsp
100023243:	48 8b 35 9e ed 02 00	movq	191902(%rip), %rsi ## Objc selector ref: setObjectValue:
10002324a:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002324e:	48 89 c2	movq	%rax, %rdx
100023251:	4c 89 f8	movq	%r15, %rax
100023254:	48 83 c4 28	addq	$40, %rsp
100023258:	5b	popq	%rbx
100023259:	41 5c	popq	%r12
10002325b:	41 5d	popq	%r13
10002325d:	41 5e	popq	%r14
10002325f:	41 5f	popq	%r15
100023261:	5d	popq	%rbp
100023262:	ff e0	jmpq	*%rax
100023264:	55	pushq	%rbp
100023265:	48 89 e5	movq	%rsp, %rbp
100023268:	53	pushq	%rbx
100023269:	48 83 ec 18	subq	$24, %rsp
10002326d:	48 89 fb	movq	%rdi, %rbx
100023270:	48 8b 05 89 01 03 00	movq	197001(%rip), %rax
100023277:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002327b:	48 85 ff	testq	%rdi, %rdi
10002327e:	74 05	je	0x100023285
100023280:	e8 4f c1 00 00	callq	0x10002f3d4 ## symbol stub for: _free
100023285:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100023289:	48 89 1f	movq	%rbx, (%rdi)
10002328c:	48 8b 05 e5 f5 02 00	movq	194021(%rip), %rax ## Objc class ref: MbaTag
100023293:	48 89 47 08	movq	%rax, 8(%rdi)
100023297:	48 8b 35 b2 dd 02 00	movq	187826(%rip), %rsi ## Objc selector ref: dealloc
10002329e:	e8 39 c2 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
1000232a3:	48 83 c4 18	addq	$24, %rsp
1000232a7:	5b	popq	%rbx
1000232a8:	5d	popq	%rbp
1000232a9:	c3	retq
1000232aa:	55	pushq	%rbp
1000232ab:	48 89 e5	movq	%rsp, %rbp
1000232ae:	81 f9 20 42 41 6d	cmpl	$1832993312, %ecx
1000232b4:	0f 94 c0	sete	%al
1000232b7:	81 f9 20 41 42 6d	cmpl	$1833058592, %ecx
1000232bd:	0f 94 c1	sete	%cl
1000232c0:	08 c1	orb	%al, %cl
1000232c2:	0f b6 c1	movzbl	%cl, %eax
1000232c5:	5d	popq	%rbp
1000232c6:	c3	retq
1000232c7:	55	pushq	%rbp
1000232c8:	48 89 e5	movq	%rsp, %rbp
1000232cb:	41 56	pushq	%r14
1000232cd:	53	pushq	%rbx
1000232ce:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
1000232d4:	7f 30	jg	0x100023306
1000232d6:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
1000232dc:	7e 51	jle	0x10002332f
1000232de:	81 fa 32 42 32 41	cmpl	$1093812786, %edx
1000232e4:	74 7b	je	0x100023361
1000232e6:	81 fa 30 41 32 42	cmpl	$1110589744, %edx
1000232ec:	74 7c	je	0x10002336a
1000232ee:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
1000232f4:	0f 85 9d 00 00 00	jne	0x100023397
1000232fa:	4c 8d 35 7f bf 01 00	leaq	114559(%rip), %r14 ## Objc cfstring ref: @"Intent-1, PCS to device conversion table"
100023301:	e9 98 00 00 00	jmp	0x10002339e
100023306:	81 fa 2f 65 72 70	cmpl	$1886545199, %edx
10002330c:	7e 3a	jle	0x100023348
10002330e:	81 fa 30 65 72 70	cmpl	$1886545200, %edx
100023314:	74 5d	je	0x100023373
100023316:	81 fa 31 65 72 70	cmpl	$1886545201, %edx
10002331c:	74 5e	je	0x10002337c
10002331e:	81 fa 32 65 72 70	cmpl	$1886545202, %edx
100023324:	75 71	jne	0x100023397
100023326:	4c 8d 35 f3 bf 01 00	leaq	114675(%rip), %r14 ## Objc cfstring ref: @"Intent-2, PCS to PCS preview table"
10002332d:	eb 6f	jmp	0x10002339e
10002332f:	81 fa 30 42 32 41	cmpl	$1093812784, %edx
100023335:	74 4e	je	0x100023385
100023337:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
10002333d:	75 58	jne	0x100023397
10002333f:	4c 8d 35 da be 01 00	leaq	114394(%rip), %r14 ## Objc cfstring ref: @"Intent-1, device to PCS conversion table"
100023346:	eb 56	jmp	0x10002339e
100023348:	81 fa 32 41 32 42	cmpl	$1110589746, %edx
10002334e:	74 3e	je	0x10002338e
100023350:	81 fa 74 6d 61 67	cmpl	$1734438260, %edx
100023356:	75 3f	jne	0x100023397
100023358:	4c 8d 35 61 bf 01 00	leaq	114529(%rip), %r14 ## Objc cfstring ref: @"PCS to gamut check table"
10002335f:	eb 3d	jmp	0x10002339e
100023361:	4c 8d 35 d8 be 01 00	leaq	114392(%rip), %r14 ## Objc cfstring ref: @"Intent-2, device to PCS conversion table"
100023368:	eb 34	jmp	0x10002339e
10002336a:	4c 8d 35 ef be 01 00	leaq	114415(%rip), %r14 ## Objc cfstring ref: @"Intent-0, PCS to device conversion table"
100023371:	eb 2b	jmp	0x10002339e
100023373:	4c 8d 35 66 bf 01 00	leaq	114534(%rip), %r14 ## Objc cfstring ref: @"Intent-0, PCS to PCS preview table"
10002337a:	eb 22	jmp	0x10002339e
10002337c:	4c 8d 35 7d bf 01 00	leaq	114557(%rip), %r14 ## Objc cfstring ref: @"Intent-1, PCS to PCS preview table"
100023383:	eb 19	jmp	0x10002339e
100023385:	4c 8d 35 74 be 01 00	leaq	114292(%rip), %r14 ## Objc cfstring ref: @"Intent-0, device to PCS conversion table"
10002338c:	eb 10	jmp	0x10002339e
10002338e:	4c 8d 35 0b bf 01 00	leaq	114443(%rip), %r14 ## Objc cfstring ref: @"Intent-2, PCS to device conversion table"
100023395:	eb 07	jmp	0x10002339e
100023397:	4c 8d 35 a2 bf 01 00	leaq	114594(%rip), %r14 ## Objc cfstring ref: @"Multi-function conversion table"
10002339e:	48 8b 3d fb f1 02 00	movq	193019(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
1000233a5:	48 8b 35 3c e3 02 00	movq	189244(%rip), %rsi ## Objc selector ref: mainBundle
1000233ac:	48 8b 1d 6d 98 01 00	movq	104557(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
1000233b3:	ff d3	callq	*%rbx
1000233b5:	48 8b 35 a4 e2 02 00	movq	189092(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000233bc:	48 8d 0d dd 9a 01 00	leaq	105181(%rip), %rcx ## Objc cfstring ref: @""
1000233c3:	48 89 c7	movq	%rax, %rdi
1000233c6:	4c 89 f2	movq	%r14, %rdx
1000233c9:	45 31 c0	xorl	%r8d, %r8d
1000233cc:	48 89 d8	movq	%rbx, %rax
1000233cf:	5b	popq	%rbx
1000233d0:	41 5e	popq	%r14
1000233d2:	5d	popq	%rbp
1000233d3:	ff e0	jmpq	*%rax
1000233d5:	55	pushq	%rbp
1000233d6:	48 89 e5	movq	%rsp, %rbp
1000233d9:	41 57	pushq	%r15
1000233db:	41 56	pushq	%r14
1000233dd:	41 55	pushq	%r13
1000233df:	41 54	pushq	%r12
1000233e1:	53	pushq	%rbx
1000233e2:	48 83 ec 48	subq	$72, %rsp
1000233e6:	44 89 45 cc	movl	%r8d, -52(%rbp)
1000233ea:	89 4d d0	movl	%ecx, -48(%rbp)
1000233ed:	49 89 d4	movq	%rdx, %r12
1000233f0:	49 89 fe	movq	%rdi, %r14
1000233f3:	4c 8b 3d 0e 00 03 00	movq	196622(%rip), %r15
1000233fa:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
1000233fe:	48 8b 35 f3 e3 02 00	movq	189427(%rip), %rsi ## Objc selector ref: numberOfColumns
100023405:	ff 15 15 98 01 00	callq	*104469(%rip) ## Objc message: -[%rdi numberOfColumns]
10002340b:	48 83 f8 03	cmpq	$3, %rax
10002340f:	75 5e	jne	0x10002346f
100023411:	4b 8b 1c 3e	movq	(%r14,%r15), %rbx
100023415:	48 8b 35 1c da 02 00	movq	186908(%rip), %rsi ## Objc selector ref: cellAtRow:column:
10002341c:	4c 8b 2d fd 97 01 00	movq	104445(%rip), %r13 ## Objc message: -[%rdi cellAtRow:column:]
100023423:	b9 01 00 00 00	movl	$1, %ecx
100023428:	48 89 df	movq	%rbx, %rdi
10002342b:	31 d2	xorl	%edx, %edx
10002342d:	41 ff d5	callq	*%r13
100023430:	48 8b 35 39 ec 02 00	movq	191545(%rip), %rsi ## Objc selector ref: setPrototype:
100023437:	48 89 df	movq	%rbx, %rdi
10002343a:	48 89 c2	movq	%rax, %rdx
10002343d:	41 ff d5	callq	*%r13
100023440:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100023444:	48 8b 35 fd d7 02 00	movq	186365(%rip), %rsi ## Objc selector ref: addColumn
10002344b:	41 ff d5	callq	*%r13
10002344e:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100023452:	48 8b 35 0f ee 02 00	movq	192015(%rip), %rsi ## Objc selector ref: sizeToCells
100023459:	41 ff d5	callq	*%r13
10002345c:	4b 8b 3c 3e	movq	(%r14,%r15), %rdi
100023460:	48 8b 35 61 eb 02 00	movq	191329(%rip), %rsi ## Objc selector ref: setNeedsDisplay:
100023467:	ba 01 00 00 00	movl	$1, %edx
10002346c:	41 ff d5	callq	*%r13
10002346f:	4c 89 e7	movq	%r12, %rdi
100023472:	e8 fb bd 00 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
100023477:	48 85 c0	testq	%rax, %rax
10002347a:	74 6b	je	0x1000234e7
10002347c:	48 89 c3	movq	%rax, %rbx
10002347f:	48 89 c7	movq	%rax, %rdi
100023482:	e8 19 ba 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100023487:	44 8b 68 10	movl	16(%rax), %r13d
10002348b:	8b 40 14	movl	20(%rax), %eax
10002348e:	89 45 d4	movl	%eax, -44(%rbp)
100023491:	48 89 df	movq	%rbx, %rdi
100023494:	e8 79 ba 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100023499:	8b 7d d0	movl	-48(%rbp), %edi
10002349c:	e8 b3 bd 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
1000234a1:	48 89 c3	movq	%rax, %rbx
1000234a4:	4c 89 e7	movq	%r12, %rdi
1000234a7:	48 89 c6	movq	%rax, %rsi
1000234aa:	e8 cf bd 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
1000234af:	49 89 c7	movq	%rax, %r15
1000234b2:	48 89 df	movq	%rbx, %rdi
1000234b5:	e8 58 ba 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000234ba:	4d 85 ff	testq	%r15, %r15
1000234bd:	74 19	je	0x1000234d8
1000234bf:	4c 89 ff	movq	%r15, %rdi
1000234c2:	e8 df b9 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
1000234c7:	48 8b 0d 42 ff 02 00	movq	196418(%rip), %rcx
1000234ce:	49 89 04 0e	movq	%rax, (%r14,%rcx)
1000234d2:	48 83 f8 22	cmpq	$34, %rax
1000234d6:	73 30	jae	0x100023508
1000234d8:	48 83 c4 48	addq	$72, %rsp
1000234dc:	5b	popq	%rbx
1000234dd:	41 5c	popq	%r12
1000234df:	41 5d	popq	%r13
1000234e1:	41 5e	popq	%r14
1000234e3:	41 5f	popq	%r15
1000234e5:	5d	popq	%rbp
1000234e6:	c3	retq
1000234e7:	48 8d 3d 72 b2 01 00	leaq	111218(%rip), %rdi ## Objc cfstring ref: @"ColorSyncProfileCopyHeader in thread failed
"
1000234ee:	31 c0	xorl	%eax, %eax
1000234f0:	e8 07 be 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
1000234f5:	48 83 c4 48	addq	$72, %rsp
1000234f9:	5b	popq	%rbx
1000234fa:	41 5c	popq	%r12
1000234fc:	41 5d	popq	%r13
1000234fe:	41 5e	popq	%r14
100023500:	41 5f	popq	%r15
100023502:	5d	popq	%rbp
100023503:	e9 d0 bd 00 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
100023508:	44 89 6d b0	movl	%r13d, -80(%rbp)
10002350c:	48 89 c7	movq	%rax, %rdi
10002350f:	e8 9e bf 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
100023514:	48 8b 1d e5 fe 02 00	movq	196325(%rip), %rbx
10002351b:	49 89 04 1e	movq	%rax, (%r14,%rbx)
10002351f:	48 85 c0	testq	%rax, %rax
100023522:	0f 84 95 00 00 00	je	0x1000235bd
100023528:	49 89 c5	movq	%rax, %r13
10002352b:	4c 89 ff	movq	%r15, %rdi
10002352e:	e8 6d b9 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100023533:	48 8b 0d d6 fe 02 00	movq	196310(%rip), %rcx
10002353a:	49 8b 14 0e	movq	(%r14,%rcx), %rdx
10002353e:	49 8b 1c 1e	movq	(%r14,%rbx), %rbx
100023542:	4c 89 ef	movq	%r13, %rdi
100023545:	48 89 c6	movq	%rax, %rsi
100023548:	e8 6b bf 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
10002354d:	4c 89 ff	movq	%r15, %rdi
100023550:	e8 bd b9 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100023555:	48 85 db	testq	%rbx, %rbx
100023558:	0f 84 7a ff ff ff	je	0x1000234d8
10002355e:	48 8d 53 0c	leaq	12(%rbx), %rdx
100023562:	f3 0f 6f 43 0c	movdqu	12(%rbx), %xmm0
100023567:	66 0f 38 00 05 50 5d 01 00	pshufb	89424(%rip), %xmm0
100023570:	f3 0f 7f 43 0c	movdqu	%xmm0, 12(%rbx)
100023575:	8b 43 1c	movl	28(%rbx), %eax
100023578:	0f c8	bswapl	%eax
10002357a:	89 43 1c	movl	%eax, 28(%rbx)
10002357d:	0f b6 43 08	movzbl	8(%rbx), %eax
100023581:	4c 8b 2d 90 fe 02 00	movq	196240(%rip), %r13
100023588:	43 89 04 2e	movl	%eax, (%r14,%r13)
10002358c:	0f b6 43 09	movzbl	9(%rbx), %eax
100023590:	48 8b 0d 89 fe 02 00	movq	196233(%rip), %rcx
100023597:	41 89 04 0e	movl	%eax, (%r14,%rcx)
10002359b:	8b 73 1c	movl	28(%rbx), %esi
10002359e:	48 85 f6	testq	%rsi, %rsi
1000235a1:	74 30	je	0x1000235d3
1000235a3:	48 8b 05 66 fe 02 00	movq	196198(%rip), %rax
1000235aa:	49 39 34 06	cmpq	%rsi, (%r14,%rax)
1000235ae:	76 23	jbe	0x1000235d3
1000235b0:	48 8b 05 49 fe 02 00	movq	196169(%rip), %rax
1000235b7:	49 03 34 06	addq	(%r14,%rax), %rsi
1000235bb:	eb 18	jmp	0x1000235d5
1000235bd:	4c 89 ff	movq	%r15, %rdi
1000235c0:	48 83 c4 48	addq	$72, %rsp
1000235c4:	5b	popq	%rbx
1000235c5:	41 5c	popq	%r12
1000235c7:	41 5d	popq	%r13
1000235c9:	41 5e	popq	%r14
1000235cb:	41 5f	popq	%r15
1000235cd:	5d	popq	%rbp
1000235ce:	e9 3f b9 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
1000235d3:	31 f6	xorl	%esi, %esi
1000235d5:	8b 0a	movl	(%rdx), %ecx
1000235d7:	48 85 c9	testq	%rcx, %rcx
1000235da:	74 1e	je	0x1000235fa
1000235dc:	48 8b 05 2d fe 02 00	movq	196141(%rip), %rax
1000235e3:	49 39 0c 06	cmpq	%rcx, (%r14,%rax)
1000235e7:	76 11	jbe	0x1000235fa
1000235e9:	48 8b 05 10 fe 02 00	movq	196112(%rip), %rax
1000235f0:	49 03 0c 06	addq	(%r14,%rax), %rcx
1000235f4:	48 89 4d c0	movq	%rcx, -64(%rbp)
1000235f8:	eb 06	jmp	0x100023600
1000235fa:	31 c0	xorl	%eax, %eax
1000235fc:	48 89 45 c0	movq	%rax, -64(%rbp)
100023600:	8b 7b 14	movl	20(%rbx), %edi
100023603:	48 85 ff	testq	%rdi, %rdi
100023606:	74 1a	je	0x100023622
100023608:	48 8b 05 01 fe 02 00	movq	196097(%rip), %rax
10002360f:	49 39 3c 06	cmpq	%rdi, (%r14,%rax)
100023613:	76 0d	jbe	0x100023622
100023615:	48 8b 05 e4 fd 02 00	movq	196068(%rip), %rax
10002361c:	49 03 3c 06	addq	(%r14,%rax), %rdi
100023620:	eb 02	jmp	0x100023624
100023622:	31 ff	xorl	%edi, %edi
100023624:	8b 43 18	movl	24(%rbx), %eax
100023627:	48 85 c0	testq	%rax, %rax
10002362a:	74 23	je	0x10002364f
10002362c:	48 8b 0d dd fd 02 00	movq	196061(%rip), %rcx
100023633:	49 39 04 0e	cmpq	%rax, (%r14,%rcx)
100023637:	76 16	jbe	0x10002364f
100023639:	48 8b 0d c0 fd 02 00	movq	196032(%rip), %rcx
100023640:	49 03 04 0e	addq	(%r14,%rcx), %rax
100023644:	48 8b 0d dd fd 02 00	movq	196061(%rip), %rcx
10002364b:	49 89 04 0e	movq	%rax, (%r14,%rcx)
10002364f:	8b 45 d0	movl	-48(%rbp), %eax
100023652:	25 00 ff ff ff	andl	$4294967040, %eax
100023657:	3d 00 65 72 70	cmpl	$1886545152, %eax
10002365c:	48 89 55 b8	movq	%rdx, -72(%rbp)
100023660:	48 89 75 a0	movq	%rsi, -96(%rbp)
100023664:	48 89 7d 98	movq	%rdi, -104(%rbp)
100023668:	74 2c	je	0x100023696
10002366a:	3d 00 41 32 42	cmpl	$1110589696, %eax
10002366f:	74 44	je	0x1000236b5
100023671:	3d 00 42 32 41	cmpl	$1093812736, %eax
100023676:	75 5f	jne	0x1000236d7
100023678:	48 8b 0d b1 fd 02 00	movq	196017(%rip), %rcx
10002367f:	49 8d 04 0e	leaq	(%r14,%rcx), %rax
100023683:	8b 55 b0	movl	-80(%rbp), %edx
100023686:	41 89 14 0e	movl	%edx, (%r14,%rcx)
10002368a:	4c 8b 3d a7 fd 02 00	movq	196007(%rip), %r15
100023691:	8b 4d d4	movl	-44(%rbp), %ecx
100023694:	eb 3b	jmp	0x1000236d1
100023696:	48 8b 0d 93 fd 02 00	movq	195987(%rip), %rcx
10002369d:	49 8d 04 0e	leaq	(%r14,%rcx), %rax
1000236a1:	8b 55 d4	movl	-44(%rbp), %edx
1000236a4:	41 89 14 0e	movl	%edx, (%r14,%rcx)
1000236a8:	4c 8b 3d 89 fd 02 00	movq	195977(%rip), %r15
1000236af:	43 89 14 3e	movl	%edx, (%r14,%r15)
1000236b3:	eb 6a	jmp	0x10002371f
1000236b5:	48 8b 0d 74 fd 02 00	movq	195956(%rip), %rcx
1000236bc:	49 8d 04 0e	leaq	(%r14,%rcx), %rax
1000236c0:	8b 55 d4	movl	-44(%rbp), %edx
1000236c3:	41 89 14 0e	movl	%edx, (%r14,%rcx)
1000236c7:	4c 8b 3d 6a fd 02 00	movq	195946(%rip), %r15
1000236ce:	8b 4d b0	movl	-80(%rbp), %ecx
1000236d1:	43 89 0c 3e	movl	%ecx, (%r14,%r15)
1000236d5:	eb 48	jmp	0x10002371f
1000236d7:	81 7d d0 74 6d 61 67	cmpl	$1734438260, -48(%rbp)
1000236de:	75 23	jne	0x100023703
1000236e0:	48 8b 0d 49 fd 02 00	movq	195913(%rip), %rcx
1000236e7:	49 8d 04 0e	leaq	(%r14,%rcx), %rax
1000236eb:	8b 55 d4	movl	-44(%rbp), %edx
1000236ee:	41 89 14 0e	movl	%edx, (%r14,%rcx)
1000236f2:	4c 8b 3d 3f fd 02 00	movq	195903(%rip), %r15
1000236f9:	43 c7 04 3e 74 6d 61 67	movl	$1734438260, (%r14,%r15)
100023701:	eb 1c	jmp	0x10002371f
100023703:	4c 8b 3d 2e fd 02 00	movq	195886(%rip), %r15
10002370a:	31 c9	xorl	%ecx, %ecx
10002370c:	43 89 0c 3e	movl	%ecx, (%r14,%r15)
100023710:	48 8b 15 19 fd 02 00	movq	195865(%rip), %rdx
100023717:	49 8d 04 16	leaq	(%r14,%rdx), %rax
10002371b:	41 89 0c 16	movl	%ecx, (%r14,%rdx)
10002371f:	8b 38	movl	(%rax), %edi
100023721:	e8 54 02 00 00	callq	0x10002397a
100023726:	47 8b 2c 2e	movl	(%r14,%r13), %r13d
10002372a:	4c 39 e8	cmpq	%r13, %rax
10002372d:	0f 85 a5 fd ff ff	jne	0x1000234d8
100023733:	43 8b 3c 3e	movl	(%r14,%r15), %edi
100023737:	e8 3e 02 00 00	callq	0x10002397a
10002373c:	48 8b 0d dd fc 02 00	movq	195805(%rip), %rcx
100023743:	41 8b 0c 0e	movl	(%r14,%rcx), %ecx
100023747:	48 39 c8	cmpq	%rcx, %rax
10002374a:	0f 85 88 fd ff ff	jne	0x1000234d8
100023750:	48 89 4d b0	movq	%rcx, -80(%rbp)
100023754:	48 8d 43 1c	leaq	28(%rbx), %rax
100023758:	48 8b 3d e1 fc 02 00	movq	195809(%rip), %rdi
10002375f:	81 7d cc 20 42 41 6d	cmpl	$1832993312, -52(%rbp)
100023766:	75 25	jne	0x10002378d
100023768:	48 8b 4d a0	movq	-96(%rbp), %rcx
10002376c:	49 89 0c 3e	movq	%rcx, (%r14,%rdi)
100023770:	48 8b 0d d1 fc 02 00	movq	195793(%rip), %rcx
100023777:	49 8d 14 0e	leaq	(%r14,%rcx), %rdx
10002377b:	48 89 55 a8	movq	%rdx, -88(%rbp)
10002377f:	48 8b 55 c0	movq	-64(%rbp), %rdx
100023783:	49 89 14 0e	movq	%rdx, (%r14,%rcx)
100023787:	48 8b 4d b8	movq	-72(%rbp), %rcx
10002378b:	eb 26	jmp	0x1000237b3
10002378d:	48 89 c1	movq	%rax, %rcx
100023790:	48 8b 45 c0	movq	-64(%rbp), %rax
100023794:	49 89 04 3e	movq	%rax, (%r14,%rdi)
100023798:	48 8b 05 a9 fc 02 00	movq	195753(%rip), %rax
10002379f:	49 8d 14 06	leaq	(%r14,%rax), %rdx
1000237a3:	48 89 55 a8	movq	%rdx, -88(%rbp)
1000237a7:	48 8b 55 a0	movq	-96(%rbp), %rdx
1000237ab:	49 89 14 06	movq	%rdx, (%r14,%rax)
1000237af:	48 8b 45 b8	movq	-72(%rbp), %rax
1000237b3:	8b 09	movl	(%rcx), %ecx
1000237b5:	89 4d b8	movl	%ecx, -72(%rbp)
1000237b8:	8b 30	movl	(%rax), %esi
1000237ba:	49 8b 3c 3e	movq	(%r14,%rdi), %rdi
1000237be:	48 8b 05 4b fc 02 00	movq	195659(%rip), %rax
1000237c5:	4d 8b 3c 06	movq	(%r14,%rax), %r15
1000237c9:	44 89 ea	movl	%r13d, %edx
1000237cc:	4c 89 f9	movq	%r15, %rcx
1000237cf:	e8 9c 03 00 00	callq	0x100023b70
1000237d4:	48 8b 0d 65 fc 02 00	movq	195685(%rip), %rcx
1000237db:	49 89 04 0e	movq	%rax, (%r14,%rcx)
1000237df:	8b 73 14	movl	20(%rbx), %esi
1000237e2:	48 8b 7d 98	movq	-104(%rbp), %rdi
1000237e6:	ba 03 00 00 00	movl	$3, %edx
1000237eb:	4c 89 f9	movq	%r15, %rcx
1000237ee:	e8 7d 03 00 00	callq	0x100023b70
1000237f3:	49 89 c5	movq	%rax, %r13
1000237f6:	48 8b 5d a8	movq	-88(%rbp), %rbx
1000237fa:	48 8b 3b	movq	(%rbx), %rdi
1000237fd:	8b 75 b8	movl	-72(%rbp), %esi
100023800:	48 8b 55 b0	movq	-80(%rbp), %rdx
100023804:	4c 89 f9	movq	%r15, %rcx
100023807:	e8 64 03 00 00	callq	0x100023b70
10002380c:	48 89 03	movq	%rax, (%rbx)
10002380f:	48 8b 05 3a fc 02 00	movq	195642(%rip), %rax
100023816:	8b 4d d4	movl	-44(%rbp), %ecx
100023819:	41 89 0c 06	movl	%ecx, (%r14,%rax)
10002381d:	48 8b 05 34 fc 02 00	movq	195636(%rip), %rax
100023824:	41 c7 04 06 03 00 00 00	movl	$3, (%r14,%rax)
10002382c:	48 8b 05 2d fc 02 00	movq	195629(%rip), %rax
100023833:	4d 89 2c 06	movq	%r13, (%r14,%rax)
100023837:	48 8b 05 2a fc 02 00	movq	195626(%rip), %rax
10002383e:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100023842:	48 8b 35 ff e7 02 00	movq	190463(%rip), %rsi ## Objc selector ref: setProfile:tagType:
100023849:	4c 89 e2	movq	%r12, %rdx
10002384c:	8b 4d d0	movl	-48(%rbp), %ecx
10002384f:	ff 15 cb 93 01 00	callq	*103371(%rip) ## Objc message: -[%rdi setProfile:tagType:]
100023855:	4c 8b 2d 14 fc 02 00	movq	195604(%rip), %r13
10002385c:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
100023860:	4c 8b 3d 91 db 02 00	movq	187281(%rip), %r15 ## Objc selector ref: indexOfTabViewItemWithIdentifier:
100023867:	48 8d 15 f2 ba 01 00	leaq	113394(%rip), %rdx ## Objc cfstring ref: @"2"
10002386e:	4c 89 fe	movq	%r15, %rsi
100023871:	ff 15 a9 93 01 00	callq	*103337(%rip) ## Objc message: -[%rdi indexOfTabViewItemWithIdentifier:]
100023877:	48 89 c3	movq	%rax, %rbx
10002387a:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10002387e:	48 8d 15 fb ba 01 00	leaq	113403(%rip), %rdx ## Objc cfstring ref: @"4"
100023885:	4c 89 fe	movq	%r15, %rsi
100023888:	ff 15 92 93 01 00	callq	*103314(%rip) ## Objc message: -[%rdi indexOfTabViewItemWithIdentifier:]
10002388e:	49 89 c4	movq	%rax, %r12
100023891:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
100023895:	48 63 d3	movslq	%ebx, %rdx
100023898:	48 8b 35 d9 ea 02 00	movq	191193(%rip), %rsi ## Objc selector ref: tabViewItemAtIndex:
10002389f:	ff 15 7b 93 01 00	callq	*103291(%rip) ## Objc message: -[%rdi tabViewItemAtIndex:]
1000238a5:	48 8b 1d b4 93 01 00	movq	103348(%rip), %rbx ## literal pool symbol address: _objc_retain
1000238ac:	48 89 c7	movq	%rax, %rdi
1000238af:	ff d3	callq	*%rbx
1000238b1:	49 89 c7	movq	%rax, %r15
1000238b4:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
1000238b8:	49 63 d4	movslq	%r12d, %rdx
1000238bb:	48 8b 35 b6 ea 02 00	movq	191158(%rip), %rsi ## Objc selector ref: tabViewItemAtIndex:
1000238c2:	ff 15 58 93 01 00	callq	*103256(%rip) ## Objc message: -[%rdi tabViewItemAtIndex:]
1000238c8:	48 89 c7	movq	%rax, %rdi
1000238cb:	ff d3	callq	*%rbx
1000238cd:	49 89 c5	movq	%rax, %r13
1000238d0:	48 8b 1d 99 fb 02 00	movq	195481(%rip), %rbx
1000238d7:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000238db:	4c 8b 25 26 e2 02 00	movq	188966(%rip), %r12 ## Objc selector ref: removeTabViewItem:
1000238e2:	4c 89 e6	movq	%r12, %rsi
1000238e5:	4c 89 fa	movq	%r15, %rdx
1000238e8:	ff 15 32 93 01 00	callq	*103218(%rip) ## Objc message: -[%rdi removeTabViewItem:]
1000238ee:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
1000238f2:	4c 89 e6	movq	%r12, %rsi
1000238f5:	4c 89 ea	movq	%r13, %rdx
1000238f8:	ff 15 22 93 01 00	callq	*103202(%rip) ## Objc message: -[%rdi removeTabViewItem:]
1000238fe:	81 7d cc 20 42 41 6d	cmpl	$1832993312, -52(%rbp)
100023905:	49 8b 3c 1e	movq	(%r14,%rbx), %rdi
100023909:	4c 8b 25 f0 db 02 00	movq	187376(%rip), %r12 ## Objc selector ref: insertTabViewItem:atIndex:
100023910:	4c 89 fa	movq	%r15, %rdx
100023913:	49 0f 44 d5	cmoveq	%r13, %rdx
100023917:	4c 89 eb	movq	%r13, %rbx
10002391a:	49 0f 44 df	cmoveq	%r15, %rbx
10002391e:	b9 01 00 00 00	movl	$1, %ecx
100023923:	4c 89 e6	movq	%r12, %rsi
100023926:	ff 15 f4 92 01 00	callq	*103156(%rip) ## Objc message: -[%rdi insertTabViewItem:atIndex:]
10002392c:	48 8b 05 3d fb 02 00	movq	195389(%rip), %rax
100023933:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100023937:	b9 03 00 00 00	movl	$3, %ecx
10002393c:	4c 89 e6	movq	%r12, %rsi
10002393f:	48 89 da	movq	%rbx, %rdx
100023942:	ff 15 d8 92 01 00	callq	*103128(%rip) ## Objc message: -[%rdi insertTabViewItem:atIndex:]
100023948:	48 8b 1d 09 93 01 00	movq	103177(%rip), %rbx ## literal pool symbol address: _objc_release
10002394f:	4c 89 ff	movq	%r15, %rdi
100023952:	ff d3	callq	*%rbx
100023954:	4c 89 ef	movq	%r13, %rdi
100023957:	ff d3	callq	*%rbx
100023959:	48 8b 35 58 d2 02 00	movq	184920(%rip), %rsi ## Objc selector ref: SetupUI
100023960:	4c 89 f7	movq	%r14, %rdi
100023963:	48 8b 05 b6 92 01 00	movq	103094(%rip), %rax ## Objc message: -[%rdi SetupUI]
10002396a:	48 83 c4 48	addq	$72, %rsp
10002396e:	5b	popq	%rbx
10002396f:	41 5c	popq	%r12
100023971:	41 5d	popq	%r13
100023973:	41 5e	popq	%r14
100023975:	41 5f	popq	%r15
100023977:	5d	popq	%rbp
100023978:	ff e0	jmpq	*%rax
10002397a:	55	pushq	%rbp
10002397b:	48 89 e5	movq	%rsp, %rbp
10002397e:	31 c0	xorl	%eax, %eax
100023980:	81 ff 51 4c 43 44	cmpl	$1145261137, %edi
100023986:	7f 42	jg	0x1000239ca
100023988:	81 ff 51 4c 43 38	cmpl	$943934545, %edi
10002398e:	7e 77	jle	0x100023a07
100023990:	81 ff 51 4c 43 42	cmpl	$1111706705, %edi
100023996:	0f 8e da 00 00 00	jle	0x100023a76
10002399c:	81 ff 1f 59 4d 43	cmpl	$1129142559, %edi
1000239a2:	0f 8f 5b 01 00 00	jg	0x100023b03
1000239a8:	81 ff 52 4c 43 42	cmpl	$1111706706, %edi
1000239ae:	0f 84 84 01 00 00	je	0x100023b38
1000239b4:	81 ff 52 4c 43 43	cmpl	$1128483922, %edi
1000239ba:	0f 85 76 01 00 00	jne	0x100023b36
1000239c0:	b8 0c 00 00 00	movl	$12, %eax
1000239c5:	e9 6c 01 00 00	jmp	0x100023b36
1000239ca:	81 ff 1f 62 61 4c	cmpl	$1281450527, %edi
1000239d0:	7e 6a	jle	0x100023a3c
1000239d2:	81 ff 1f 5a 59 58	cmpl	$1482250783, %edi
1000239d8:	0f 8e c6 00 00 00	jle	0x100023aa4
1000239de:	81 ff 1f 79 78 59	cmpl	$1501067551, %edi
1000239e4:	0f 8f 30 01 00 00	jg	0x100023b1a
1000239ea:	81 ff 20 5a 59 58	cmpl	$1482250784, %edi
1000239f0:	0f 84 3b 01 00 00	je	0x100023b31
1000239f6:	81 ff 72 62 43 59	cmpl	$1497588338, %edi
1000239fc:	0f 84 2f 01 00 00	je	0x100023b31
100023a02:	e9 2f 01 00 00	jmp	0x100023b36
100023a07:	81 ff 51 4c 43 35	cmpl	$893602897, %edi
100023a0d:	0f 8f af 00 00 00	jg	0x100023ac2
100023a13:	81 ff 52 4c 43 32	cmpl	$843271250, %edi
100023a19:	0f 84 20 01 00 00	je	0x100023b3f
100023a1f:	81 ff 52 4c 43 33	cmpl	$860048466, %edi
100023a25:	0f 84 06 01 00 00	je	0x100023b31
100023a2b:	81 ff 52 4c 43 34	cmpl	$876825682, %edi
100023a31:	0f 84 dc 00 00 00	je	0x100023b13
100023a37:	e9 fa 00 00 00	jmp	0x100023b36
100023a3c:	81 ff 58 41 52 47	cmpl	$1196573016, %edi
100023a42:	0f 8f a1 00 00 00	jg	0x100023ae9
100023a48:	81 ff 52 4c 43 44	cmpl	$1145261138, %edi
100023a4e:	0f 84 f2 00 00 00	je	0x100023b46
100023a54:	81 ff 52 4c 43 45	cmpl	$1162038354, %edi
100023a5a:	0f 84 ed 00 00 00	je	0x100023b4d
100023a60:	81 ff 52 4c 43 46	cmpl	$1178815570, %edi
100023a66:	0f 85 ca 00 00 00	jne	0x100023b36
100023a6c:	b8 0f 00 00 00	movl	$15, %eax
100023a71:	e9 c0 00 00 00	jmp	0x100023b36
100023a76:	81 ff 52 4c 43 38	cmpl	$943934546, %edi
100023a7c:	0f 84 d2 00 00 00	je	0x100023b54
100023a82:	81 ff 52 4c 43 39	cmpl	$960711762, %edi
100023a88:	0f 84 cd 00 00 00	je	0x100023b5b
100023a8e:	81 ff 52 4c 43 41	cmpl	$1094929490, %edi
100023a94:	0f 85 9c 00 00 00	jne	0x100023b36
100023a9a:	b8 0a 00 00 00	movl	$10, %eax
100023a9f:	e9 92 00 00 00	jmp	0x100023b36
100023aa4:	81 ff 20 62 61 4c	cmpl	$1281450528, %edi
100023aaa:	0f 84 81 00 00 00	je	0x100023b31
100023ab0:	81 ff 20 76 75 4c	cmpl	$1282766368, %edi
100023ab6:	74 79	je	0x100023b31
100023ab8:	81 ff 20 42 47 52	cmpl	$1380401696, %edi
100023abe:	74 71	je	0x100023b31
100023ac0:	eb 74	jmp	0x100023b36
100023ac2:	81 ff 52 4c 43 35	cmpl	$893602898, %edi
100023ac8:	0f 84 94 00 00 00	je	0x100023b62
100023ace:	81 ff 52 4c 43 36	cmpl	$910380114, %edi
100023ad4:	0f 84 8f 00 00 00	je	0x100023b69
100023ada:	81 ff 52 4c 43 37	cmpl	$927157330, %edi
100023ae0:	75 54	jne	0x100023b36
100023ae2:	b8 07 00 00 00	movl	$7, %eax
100023ae7:	eb 4d	jmp	0x100023b36
100023ae9:	81 ff 59 41 52 47	cmpl	$1196573017, %edi
100023aef:	74 39	je	0x100023b2a
100023af1:	81 ff 20 53 4c 48	cmpl	$1212961568, %edi
100023af7:	74 38	je	0x100023b31
100023af9:	81 ff 20 56 53 48	cmpl	$1213421088, %edi
100023aff:	74 30	je	0x100023b31
100023b01:	eb 33	jmp	0x100023b36
100023b03:	81 ff 20 59 4d 43	cmpl	$1129142560, %edi
100023b09:	74 26	je	0x100023b31
100023b0b:	81 ff 4b 59 4d 43	cmpl	$1129142603, %edi
100023b11:	75 23	jne	0x100023b36
100023b13:	b8 04 00 00 00	movl	$4, %eax
100023b18:	eb 1c	jmp	0x100023b36
100023b1a:	81 ff 20 79 78 59	cmpl	$1501067552, %edi
100023b20:	74 0f	je	0x100023b31
100023b22:	81 ff 74 6d 61 67	cmpl	$1734438260, %edi
100023b28:	75 0c	jne	0x100023b36
100023b2a:	b8 01 00 00 00	movl	$1, %eax
100023b2f:	eb 05	jmp	0x100023b36
100023b31:	b8 03 00 00 00	movl	$3, %eax
100023b36:	5d	popq	%rbp
100023b37:	c3	retq
100023b38:	b8 0b 00 00 00	movl	$11, %eax
100023b3d:	eb f7	jmp	0x100023b36
100023b3f:	b8 02 00 00 00	movl	$2, %eax
100023b44:	eb f0	jmp	0x100023b36
100023b46:	b8 0d 00 00 00	movl	$13, %eax
100023b4b:	eb e9	jmp	0x100023b36
100023b4d:	b8 0e 00 00 00	movl	$14, %eax
100023b52:	eb e2	jmp	0x100023b36
100023b54:	b8 08 00 00 00	movl	$8, %eax
100023b59:	eb db	jmp	0x100023b36
100023b5b:	b8 09 00 00 00	movl	$9, %eax
100023b60:	eb d4	jmp	0x100023b36
100023b62:	b8 05 00 00 00	movl	$5, %eax
100023b67:	eb cd	jmp	0x100023b36
100023b69:	b8 06 00 00 00	movl	$6, %eax
100023b6e:	eb c6	jmp	0x100023b36
100023b70:	55	pushq	%rbp
100023b71:	48 89 e5	movq	%rsp, %rbp
100023b74:	31 c0	xorl	%eax, %eax
100023b76:	48 85 ff	testq	%rdi, %rdi
100023b79:	74 68	je	0x100023be3
100023b7b:	85 f6	testl	%esi, %esi
100023b7d:	74 64	je	0x100023be3
100023b7f:	85 d2	testl	%edx, %edx
100023b81:	74 5d	je	0x100023be0
100023b83:	41 89 d1	movl	%edx, %r9d
100023b86:	89 f0	movl	%esi, %eax
100023b88:	48 29 c1	subq	%rax, %rcx
100023b8b:	31 c0	xorl	%eax, %eax
100023b8d:	4c 8d 05 bc 57 01 00	leaq	87996(%rip), %r8
100023b94:	48 89 fe	movq	%rdi, %rsi
100023b97:	8b 16	movl	(%rsi), %edx
100023b99:	0f ca	bswapl	%edx
100023b9b:	81 fa 61 72 61 70	cmpl	$1885434465, %edx
100023ba1:	74 16	je	0x100023bb9
100023ba3:	81 fa 76 72 75 63	cmpl	$1668641398, %edx
100023ba9:	75 38	jne	0x100023be3
100023bab:	8b 56 08	movl	8(%rsi), %edx
100023bae:	0f ca	bswapl	%edx
100023bb0:	ff c2	incl	%edx
100023bb2:	d1 ea	shrl	%edx
100023bb4:	83 c2 03	addl	$3, %edx
100023bb7:	eb 16	jmp	0x100023bcf
100023bb9:	0f b7 56 08	movzwl	8(%rsi), %edx
100023bbd:	66 c1 c2 08	rolw	$8, %dx
100023bc1:	66 83 fa 04	cmpw	$4, %dx
100023bc5:	77 1c	ja	0x100023be3
100023bc7:	48 0f bf d2	movswq	%dx, %rdx
100023bcb:	49 8b 14 d0	movq	(%r8,%rdx,8), %rdx
100023bcf:	48 39 d1	cmpq	%rdx, %rcx
100023bd2:	72 0f	jb	0x100023be3
100023bd4:	48 29 d1	subq	%rdx, %rcx
100023bd7:	48 8d 34 96	leaq	(%rsi,%rdx,4), %rsi
100023bdb:	49 ff c9	decq	%r9
100023bde:	75 b7	jne	0x100023b97
100023be0:	48 89 f8	movq	%rdi, %rax
100023be3:	5d	popq	%rbp
100023be4:	c3	retq
100023be5:	55	pushq	%rbp
100023be6:	48 89 e5	movq	%rsp, %rbp
100023be9:	41 57	pushq	%r15
100023beb:	41 56	pushq	%r14
100023bed:	53	pushq	%rbx
100023bee:	50	pushq	%rax
100023bef:	89 cb	movl	%ecx, %ebx
100023bf1:	81 fa 1f 42 47 52	cmpl	$1380401695, %edx
100023bf7:	7e 4a	jle	0x100023c43
100023bf9:	81 fa 1f 79 78 59	cmpl	$1501067551, %edx
100023bff:	7f 6f	jg	0x100023c70
100023c01:	81 fa 20 42 47 52	cmpl	$1380401696, %edx
100023c07:	0f 84 1b 01 00 00	je	0x100023d28
100023c0d:	81 fa 20 5a 59 58	cmpl	$1482250784, %edx
100023c13:	74 7f	je	0x100023c94
100023c15:	81 fa 72 62 43 59	cmpl	$1497588338, %edx
100023c1b:	0f 85 3a 02 00 00	jne	0x100023e5b
100023c21:	83 fb 03	cmpl	$3, %ebx
100023c24:	0f 83 31 02 00 00	jae	0x100023e5b
100023c2a:	48 63 c3	movslq	%ebx, %rax
100023c2d:	48 8d 0d 8c 91 01 00	leaq	102796(%rip), %rcx
100023c34:	48 8b 04 c1	movq	(%rcx,%rax,8), %rax
100023c38:	48 83 c4 08	addq	$8, %rsp
100023c3c:	5b	popq	%rbx
100023c3d:	41 5e	popq	%r14
100023c3f:	41 5f	popq	%r15
100023c41:	5d	popq	%rbp
100023c42:	c3	retq
100023c43:	81 fa 58 41 52 47	cmpl	$1196573016, %edx
100023c49:	0f 8e 81 00 00 00	jle	0x100023cd0
100023c4f:	81 fa 59 41 52 47	cmpl	$1196573017, %edx
100023c55:	0f 84 11 01 00 00	je	0x100023d6c
100023c5b:	81 fa 20 62 61 4c	cmpl	$1281450528, %edx
100023c61:	74 31	je	0x100023c94
100023c63:	81 fa 20 76 75 4c	cmpl	$1282766368, %edx
100023c69:	74 29	je	0x100023c94
100023c6b:	e9 eb 01 00 00	jmp	0x100023e5b
100023c70:	81 fa 42 47 52 73	cmpl	$1934772034, %edx
100023c76:	0f 84 ac 00 00 00	je	0x100023d28
100023c7c:	81 fa 74 6d 61 67	cmpl	$1734438260, %edx
100023c82:	0f 84 16 01 00 00	je	0x100023d9e
100023c88:	81 fa 20 79 78 59	cmpl	$1501067552, %edx
100023c8e:	0f 85 c7 01 00 00	jne	0x100023e5b
100023c94:	83 fb 02	cmpl	$2, %ebx
100023c97:	0f 8f be 01 00 00	jg	0x100023e5b
100023c9d:	48 8b 3d 24 e9 02 00	movq	190756(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100023ca4:	c1 e3 03	shll	$3, %ebx
100023ca7:	b1 18	movb	$24, %cl
100023ca9:	28 d9	subb	%bl, %cl
100023cab:	d3 ea	shrl	%cl, %edx
100023cad:	0f b6 ca	movzbl	%dl, %ecx
100023cb0:	48 8b 35 71 e6 02 00	movq	190065(%rip), %rsi ## Objc selector ref: stringWithFormat:
100023cb7:	48 8d 15 e2 b6 01 00	leaq	112354(%rip), %rdx ## Objc cfstring ref: @"%c"
100023cbe:	31 c0	xorl	%eax, %eax
100023cc0:	48 83 c4 08	addq	$8, %rsp
100023cc4:	5b	popq	%rbx
100023cc5:	41 5e	popq	%r14
100023cc7:	41 5f	popq	%r15
100023cc9:	5d	popq	%rbp
100023cca:	ff 25 50 8f 01 00	jmpq	*102224(%rip) ## Objc message: +[NSString stringWithFormat:]
100023cd0:	81 fa 20 59 4d 43	cmpl	$1129142560, %edx
100023cd6:	74 0c	je	0x100023ce4
100023cd8:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
100023cde:	0f 85 77 01 00 00	jne	0x100023e5b
100023ce4:	83 fb 02	cmpl	$2, %ebx
100023ce7:	0f 84 e3 00 00 00	je	0x100023dd0
100023ced:	83 fb 01	cmpl	$1, %ebx
100023cf0:	0f 84 04 01 00 00	je	0x100023dfa
100023cf6:	85 db	testl	%ebx, %ebx
100023cf8:	0f 85 26 01 00 00	jne	0x100023e24
100023cfe:	48 8b 3d 9b e8 02 00	movq	190619(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023d05:	48 8b 35 dc d9 02 00	movq	186844(%rip), %rsi ## Objc selector ref: mainBundle
100023d0c:	48 8b 1d 0d 8f 01 00	movq	102157(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023d13:	ff d3	callq	*%rbx
100023d15:	48 8b 35 44 d9 02 00	movq	186692(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023d1c:	48 8d 15 1d b7 01 00	leaq	112413(%rip), %rdx ## Objc cfstring ref: @"Cyan"
100023d23:	e9 df 01 00 00	jmp	0x100023f07
100023d28:	83 fb 02	cmpl	$2, %ebx
100023d2b:	0f 84 8a 01 00 00	je	0x100023ebb
100023d31:	83 fb 01	cmpl	$1, %ebx
100023d34:	0f 84 a8 01 00 00	je	0x100023ee2
100023d3a:	85 db	testl	%ebx, %ebx
100023d3c:	0f 85 19 01 00 00	jne	0x100023e5b
100023d42:	48 8b 3d 57 e8 02 00	movq	190551(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023d49:	48 8b 35 98 d9 02 00	movq	186776(%rip), %rsi ## Objc selector ref: mainBundle
100023d50:	48 8b 1d c9 8e 01 00	movq	102089(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023d57:	ff d3	callq	*%rbx
100023d59:	48 8b 35 00 d9 02 00	movq	186624(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023d60:	48 8d 15 d9 ab 01 00	leaq	109529(%rip), %rdx ## Objc cfstring ref: @"Red"
100023d67:	e9 9b 01 00 00	jmp	0x100023f07
100023d6c:	85 db	testl	%ebx, %ebx
100023d6e:	0f 85 e7 00 00 00	jne	0x100023e5b
100023d74:	48 8b 3d 25 e8 02 00	movq	190501(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023d7b:	48 8b 35 66 d9 02 00	movq	186726(%rip), %rsi ## Objc selector ref: mainBundle
100023d82:	48 8b 1d 97 8e 01 00	movq	102039(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023d89:	ff d3	callq	*%rbx
100023d8b:	48 8b 35 ce d8 02 00	movq	186574(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023d92:	48 8d 15 87 a1 01 00	leaq	106887(%rip), %rdx ## Objc cfstring ref: @"Gray"
100023d99:	e9 69 01 00 00	jmp	0x100023f07
100023d9e:	85 db	testl	%ebx, %ebx
100023da0:	0f 85 b5 00 00 00	jne	0x100023e5b
100023da6:	48 8b 3d f3 e7 02 00	movq	190451(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023dad:	48 8b 35 34 d9 02 00	movq	186676(%rip), %rsi ## Objc selector ref: mainBundle
100023db4:	48 8b 1d 65 8e 01 00	movq	101989(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023dbb:	ff d3	callq	*%rbx
100023dbd:	48 8b 35 9c d8 02 00	movq	186524(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023dc4:	48 8d 15 55 b6 01 00	leaq	112213(%rip), %rdx ## Objc cfstring ref: @"Gamut"
100023dcb:	e9 37 01 00 00	jmp	0x100023f07
100023dd0:	48 8b 3d c9 e7 02 00	movq	190409(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023dd7:	48 8b 35 0a d9 02 00	movq	186634(%rip), %rsi ## Objc selector ref: mainBundle
100023dde:	48 8b 1d 3b 8e 01 00	movq	101947(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023de5:	ff d3	callq	*%rbx
100023de7:	48 8b 35 72 d8 02 00	movq	186482(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023dee:	48 8d 15 8b b6 01 00	leaq	112267(%rip), %rdx ## Objc cfstring ref: @"Yellow"
100023df5:	e9 0d 01 00 00	jmp	0x100023f07
100023dfa:	48 8b 3d 9f e7 02 00	movq	190367(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023e01:	48 8b 35 e0 d8 02 00	movq	186592(%rip), %rsi ## Objc selector ref: mainBundle
100023e08:	48 8b 1d 11 8e 01 00	movq	101905(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023e0f:	ff d3	callq	*%rbx
100023e11:	48 8b 35 48 d8 02 00	movq	186440(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023e18:	48 8d 15 41 b6 01 00	leaq	112193(%rip), %rdx ## Objc cfstring ref: @"Magenta"
100023e1f:	e9 e3 00 00 00	jmp	0x100023f07
100023e24:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
100023e2a:	75 2f	jne	0x100023e5b
100023e2c:	83 fb 03	cmpl	$3, %ebx
100023e2f:	75 2a	jne	0x100023e5b
100023e31:	48 8b 3d 68 e7 02 00	movq	190312(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023e38:	48 8b 35 a9 d8 02 00	movq	186537(%rip), %rsi ## Objc selector ref: mainBundle
100023e3f:	48 8b 1d da 8d 01 00	movq	101850(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023e46:	ff d3	callq	*%rbx
100023e48:	48 8b 35 11 d8 02 00	movq	186385(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023e4f:	48 8d 15 2a ab 01 00	leaq	109354(%rip), %rdx ## Objc cfstring ref: @"Black"
100023e56:	e9 ac 00 00 00	jmp	0x100023f07
100023e5b:	4c 8b 35 66 e7 02 00	movq	190310(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSString
100023e62:	48 8b 3d 37 e7 02 00	movq	190263(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023e69:	48 8b 35 78 d8 02 00	movq	186488(%rip), %rsi ## Objc selector ref: mainBundle
100023e70:	4c 8b 3d a9 8d 01 00	movq	101801(%rip), %r15 ## Objc message: +[NSBundle mainBundle]
100023e77:	41 ff d7	callq	*%r15
100023e7a:	48 8b 35 df d7 02 00	movq	186335(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023e81:	48 8d 15 18 b6 01 00	leaq	112152(%rip), %rdx ## Objc cfstring ref: @"Color %d"
100023e88:	48 8d 0d 11 90 01 00	leaq	102417(%rip), %rcx ## Objc cfstring ref: @""
100023e8f:	48 89 c7	movq	%rax, %rdi
100023e92:	45 31 c0	xorl	%r8d, %r8d
100023e95:	41 ff d7	callq	*%r15
100023e98:	ff c3	incl	%ebx
100023e9a:	48 8b 35 87 e4 02 00	movq	189575(%rip), %rsi ## Objc selector ref: stringWithFormat:
100023ea1:	4c 89 f7	movq	%r14, %rdi
100023ea4:	48 89 c2	movq	%rax, %rdx
100023ea7:	89 d9	movl	%ebx, %ecx
100023ea9:	31 c0	xorl	%eax, %eax
100023eab:	4d 89 f8	movq	%r15, %r8
100023eae:	48 83 c4 08	addq	$8, %rsp
100023eb2:	5b	popq	%rbx
100023eb3:	41 5e	popq	%r14
100023eb5:	41 5f	popq	%r15
100023eb7:	5d	popq	%rbp
100023eb8:	41 ff e0	jmpq	*%r8
100023ebb:	48 8b 3d de e6 02 00	movq	190174(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023ec2:	48 8b 35 1f d8 02 00	movq	186399(%rip), %rsi ## Objc selector ref: mainBundle
100023ec9:	48 8b 1d 50 8d 01 00	movq	101712(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023ed0:	ff d3	callq	*%rbx
100023ed2:	48 8b 35 87 d7 02 00	movq	186247(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023ed9:	48 8d 15 a0 b1 01 00	leaq	111008(%rip), %rdx ## Objc cfstring ref: @"Blue"
100023ee0:	eb 25	jmp	0x100023f07
100023ee2:	48 8b 3d b7 e6 02 00	movq	190135(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100023ee9:	48 8b 35 f8 d7 02 00	movq	186360(%rip), %rsi ## Objc selector ref: mainBundle
100023ef0:	48 8b 1d 29 8d 01 00	movq	101673(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100023ef7:	ff d3	callq	*%rbx
100023ef9:	48 8b 35 60 d7 02 00	movq	186208(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100023f00:	48 8d 15 59 b1 01 00	leaq	110937(%rip), %rdx ## Objc cfstring ref: @"Green"
100023f07:	48 8d 0d 92 8f 01 00	leaq	102290(%rip), %rcx ## Objc cfstring ref: @""
100023f0e:	48 89 c7	movq	%rax, %rdi
100023f11:	45 31 c0	xorl	%r8d, %r8d
100023f14:	48 89 d8	movq	%rbx, %rax
100023f17:	48 83 c4 08	addq	$8, %rsp
100023f1b:	5b	popq	%rbx
100023f1c:	41 5e	popq	%r14
100023f1e:	41 5f	popq	%r15
100023f20:	5d	popq	%rbp
100023f21:	ff e0	jmpq	*%rax
100023f23:	55	pushq	%rbp
100023f24:	48 89 e5	movq	%rsp, %rbp
100023f27:	41 57	pushq	%r15
100023f29:	41 56	pushq	%r14
100023f2b:	41 55	pushq	%r13
100023f2d:	41 54	pushq	%r12
100023f2f:	53	pushq	%rbx
100023f30:	48 83 ec 18	subq	$24, %rsp
100023f34:	45 89 c6	movl	%r8d, %r14d
100023f37:	41 89 cc	movl	%ecx, %r12d
100023f3a:	49 89 ff	movq	%rdi, %r15
100023f3d:	48 8b 35 84 db 02 00	movq	187268(%rip), %rsi ## Objc selector ref: removeAllItems
100023f44:	48 89 55 d0	movq	%rdx, -48(%rbp)
100023f48:	48 89 d7	movq	%rdx, %rdi
100023f4b:	ff 15 cf 8c 01 00	callq	*101583(%rip) ## Objc message: -[%rdi removeAllItems]
100023f51:	45 85 e4	testl	%r12d, %r12d
100023f54:	74 49	je	0x100023f9f
100023f56:	45 85 f6	testl	%r14d, %r14d
100023f59:	7e 44	jle	0x100023f9f
100023f5b:	45 31 ed	xorl	%r13d, %r13d
100023f5e:	48 8b 0d fb cc 02 00	movq	183547(%rip), %rcx ## Objc selector ref: addItemWithTitle:
100023f65:	48 89 4d c8	movq	%rcx, -56(%rbp)
100023f69:	4c 89 ff	movq	%r15, %rdi
100023f6c:	48 8b 35 95 e3 02 00	movq	189333(%rip), %rsi ## Objc selector ref: stringForSpace:channel:
100023f73:	44 89 e2	movl	%r12d, %edx
100023f76:	44 89 e9	movl	%r13d, %ecx
100023f79:	44 89 f3	movl	%r14d, %ebx
100023f7c:	4c 8b 35 9d 8c 01 00	movq	101533(%rip), %r14 ## Objc message: -[%rdi stringForSpace:channel:]
100023f83:	41 ff d6	callq	*%r14
100023f86:	48 8b 7d d0	movq	-48(%rbp), %rdi
100023f8a:	48 8b 75 c8	movq	-56(%rbp), %rsi
100023f8e:	48 89 c2	movq	%rax, %rdx
100023f91:	41 ff d6	callq	*%r14
100023f94:	41 89 de	movl	%ebx, %r14d
100023f97:	41 ff c5	incl	%r13d
100023f9a:	44 39 eb	cmpl	%r13d, %ebx
100023f9d:	75 ca	jne	0x100023f69
100023f9f:	48 8b 35 5a d8 02 00	movq	186458(%rip), %rsi ## Objc selector ref: numberOfItems
100023fa6:	48 8b 1d 73 8c 01 00	movq	101491(%rip), %rbx ## Objc message: -[%rdi numberOfItems]
100023fad:	4c 8b 65 d0	movq	-48(%rbp), %r12
100023fb1:	4c 89 e7	movq	%r12, %rdi
100023fb4:	ff d3	callq	*%rbx
100023fb6:	31 d2	xorl	%edx, %edx
100023fb8:	48 85 c0	testq	%rax, %rax
100023fbb:	0f 9f c2	setg	%dl
100023fbe:	48 8b 35 2b de 02 00	movq	187947(%rip), %rsi ## Objc selector ref: setEnabled:
100023fc5:	4c 89 e7	movq	%r12, %rdi
100023fc8:	48 89 d8	movq	%rbx, %rax
100023fcb:	48 83 c4 18	addq	$24, %rsp
100023fcf:	5b	popq	%rbx
100023fd0:	41 5c	popq	%r12
100023fd2:	41 5d	popq	%r13
100023fd4:	41 5e	popq	%r14
100023fd6:	41 5f	popq	%r15
100023fd8:	5d	popq	%rbp
100023fd9:	ff e0	jmpq	*%rax
100023fdb:	55	pushq	%rbp
100023fdc:	48 89 e5	movq	%rsp, %rbp
100023fdf:	41 57	pushq	%r15
100023fe1:	41 56	pushq	%r14
100023fe3:	41 55	pushq	%r13
100023fe5:	41 54	pushq	%r12
100023fe7:	53	pushq	%rbx
100023fe8:	48 83 ec 68	subq	$104, %rsp
100023fec:	49 89 fc	movq	%rdi, %r12
100023fef:	48 8b 05 0a f4 02 00	movq	193546(%rip), %rax
100023ff6:	4c 8b 2c 07	movq	(%rdi,%rax), %r13
100023ffa:	41 8b 5d 10	movl	16(%r13), %ebx
100023ffe:	48 85 db	testq	%rbx, %rbx
100024001:	74 15	je	0x100024018
100024003:	48 8d 43 30	leaq	48(%rbx), %rax
100024007:	48 8b 0d 02 f4 02 00	movq	193538(%rip), %rcx
10002400e:	49 3b 04 0c	cmpq	(%r12,%rcx), %rax
100024012:	0f 86 95 01 00 00	jbe	0x1000241ad
100024018:	4c 8b 2d e9 f3 02 00	movq	193513(%rip), %r13
10002401f:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100024023:	48 8b 35 c6 dd 02 00	movq	187846(%rip), %rsi ## Objc selector ref: setEnabled:
10002402a:	48 8b 1d ef 8b 01 00	movq	101359(%rip), %rbx ## Objc message: -[%rdi setEnabled:]
100024031:	31 d2	xorl	%edx, %edx
100024033:	ff d3	callq	*%rbx
100024035:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100024039:	4c 8b 35 f8 cd 02 00	movq	183800(%rip), %r14 ## Objc selector ref: cellAtRow:column:
100024040:	4c 89 f6	movq	%r14, %rsi
100024043:	31 d2	xorl	%edx, %edx
100024045:	31 c9	xorl	%ecx, %ecx
100024047:	ff d3	callq	*%rbx
100024049:	4c 8b 3d 60 dd 02 00	movq	187744(%rip), %r15 ## Objc selector ref: setDoubleValue:
100024050:	f2 0f 10 05 b0 3f 01 00	movsd	81840(%rip), %xmm0
100024058:	48 89 c7	movq	%rax, %rdi
10002405b:	4c 89 fe	movq	%r15, %rsi
10002405e:	ff d3	callq	*%rbx
100024060:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100024064:	b9 01 00 00 00	movl	$1, %ecx
100024069:	4c 89 f6	movq	%r14, %rsi
10002406c:	31 d2	xorl	%edx, %edx
10002406e:	ff d3	callq	*%rbx
100024070:	0f 57 c0	xorps	%xmm0, %xmm0
100024073:	48 89 c7	movq	%rax, %rdi
100024076:	4c 89 fe	movq	%r15, %rsi
100024079:	ff d3	callq	*%rbx
10002407b:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
10002407f:	b9 02 00 00 00	movl	$2, %ecx
100024084:	4c 89 f6	movq	%r14, %rsi
100024087:	31 d2	xorl	%edx, %edx
100024089:	ff d3	callq	*%rbx
10002408b:	0f 57 c0	xorps	%xmm0, %xmm0
10002408e:	48 89 c7	movq	%rax, %rdi
100024091:	4c 89 fe	movq	%r15, %rsi
100024094:	ff d3	callq	*%rbx
100024096:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
10002409a:	ba 01 00 00 00	movl	$1, %edx
10002409f:	4c 89 f6	movq	%r14, %rsi
1000240a2:	31 c9	xorl	%ecx, %ecx
1000240a4:	ff d3	callq	*%rbx
1000240a6:	0f 57 c0	xorps	%xmm0, %xmm0
1000240a9:	48 89 c7	movq	%rax, %rdi
1000240ac:	4c 89 fe	movq	%r15, %rsi
1000240af:	ff d3	callq	*%rbx
1000240b1:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000240b5:	ba 01 00 00 00	movl	$1, %edx
1000240ba:	b9 01 00 00 00	movl	$1, %ecx
1000240bf:	4c 89 f6	movq	%r14, %rsi
1000240c2:	ff d3	callq	*%rbx
1000240c4:	48 89 c7	movq	%rax, %rdi
1000240c7:	4c 89 fe	movq	%r15, %rsi
1000240ca:	f2 0f 10 05 36 3f 01 00	movsd	81718(%rip), %xmm0
1000240d2:	ff d3	callq	*%rbx
1000240d4:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000240d8:	ba 01 00 00 00	movl	$1, %edx
1000240dd:	b9 02 00 00 00	movl	$2, %ecx
1000240e2:	4c 89 f6	movq	%r14, %rsi
1000240e5:	ff d3	callq	*%rbx
1000240e7:	0f 57 c0	xorps	%xmm0, %xmm0
1000240ea:	48 89 c7	movq	%rax, %rdi
1000240ed:	4c 89 fe	movq	%r15, %rsi
1000240f0:	ff d3	callq	*%rbx
1000240f2:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000240f6:	ba 02 00 00 00	movl	$2, %edx
1000240fb:	4c 89 f6	movq	%r14, %rsi
1000240fe:	31 c9	xorl	%ecx, %ecx
100024100:	ff d3	callq	*%rbx
100024102:	0f 57 c0	xorps	%xmm0, %xmm0
100024105:	48 89 c7	movq	%rax, %rdi
100024108:	4c 89 fe	movq	%r15, %rsi
10002410b:	ff d3	callq	*%rbx
10002410d:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100024111:	ba 02 00 00 00	movl	$2, %edx
100024116:	b9 01 00 00 00	movl	$1, %ecx
10002411b:	4c 89 f6	movq	%r14, %rsi
10002411e:	ff d3	callq	*%rbx
100024120:	0f 57 c0	xorps	%xmm0, %xmm0
100024123:	48 89 c7	movq	%rax, %rdi
100024126:	4c 89 fe	movq	%r15, %rsi
100024129:	ff d3	callq	*%rbx
10002412b:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
10002412f:	ba 02 00 00 00	movl	$2, %edx
100024134:	b9 02 00 00 00	movl	$2, %ecx
100024139:	4c 89 f6	movq	%r14, %rsi
10002413c:	ff d3	callq	*%rbx
10002413e:	48 89 c7	movq	%rax, %rdi
100024141:	4c 89 fe	movq	%r15, %rsi
100024144:	f2 0f 10 05 bc 3e 01 00	movsd	81596(%rip), %xmm0
10002414c:	ff d3	callq	*%rbx
10002414e:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
100024152:	b9 03 00 00 00	movl	$3, %ecx
100024157:	4c 89 f6	movq	%r14, %rsi
10002415a:	31 d2	xorl	%edx, %edx
10002415c:	ff d3	callq	*%rbx
10002415e:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100024162:	48 89 c7	movq	%rax, %rdi
100024165:	4c 89 fe	movq	%r15, %rsi
100024168:	ff d3	callq	*%rbx
10002416a:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
10002416e:	ba 01 00 00 00	movl	$1, %edx
100024173:	b9 03 00 00 00	movl	$3, %ecx
100024178:	4c 89 f6	movq	%r14, %rsi
10002417b:	ff d3	callq	*%rbx
10002417d:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100024181:	48 89 c7	movq	%rax, %rdi
100024184:	4c 89 fe	movq	%r15, %rsi
100024187:	ff d3	callq	*%rbx
100024189:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
10002418d:	ba 02 00 00 00	movl	$2, %edx
100024192:	b9 03 00 00 00	movl	$3, %ecx
100024197:	4c 89 f6	movq	%r14, %rsi
10002419a:	ff d3	callq	*%rbx
10002419c:	66 0f 57 c0	xorpd	%xmm0, %xmm0
1000241a0:	48 89 c7	movq	%rax, %rdi
1000241a3:	4c 89 fe	movq	%r15, %rsi
1000241a6:	ff d3	callq	*%rbx
1000241a8:	e9 0f 03 00 00	jmp	0x1000244bc
1000241ad:	48 8b 05 54 f2 02 00	movq	193108(%rip), %rax
1000241b4:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000241b8:	49 89 c7	movq	%rax, %r15
1000241bb:	48 8b 35 2e dc 02 00	movq	187438(%rip), %rsi ## Objc selector ref: setEnabled:
1000241c2:	4c 8b 35 57 8a 01 00	movq	100951(%rip), %r14 ## Objc message: -[%rdi setEnabled:]
1000241c9:	ba 01 00 00 00	movl	$1, %edx
1000241ce:	41 ff d6	callq	*%r14
1000241d1:	4b 8b 3c 3c	movq	(%r12,%r15), %rdi
1000241d5:	48 8b 35 5c cc 02 00	movq	183388(%rip), %rsi ## Objc selector ref: cellAtRow:column:
1000241dc:	31 d2	xorl	%edx, %edx
1000241de:	31 c9	xorl	%ecx, %ecx
1000241e0:	41 ff d6	callq	*%r14
1000241e3:	41 8b 4c 1d 00	movl	(%r13,%rbx), %ecx
1000241e8:	0f c9	bswapl	%ecx
1000241ea:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000241ee:	f2 0f 59 05 6a 3e 01 00	mulsd	81514(%rip), %xmm0
1000241f6:	4c 8b 3d b3 db 02 00	movq	187315(%rip), %r15 ## Objc selector ref: setDoubleValue:
1000241fd:	48 89 c7	movq	%rax, %rdi
100024200:	4c 89 fe	movq	%r15, %rsi
100024203:	41 ff d6	callq	*%r14
100024206:	48 8b 05 fb f1 02 00	movq	193019(%rip), %rax
10002420d:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100024211:	b9 01 00 00 00	movl	$1, %ecx
100024216:	48 8b 35 1b cc 02 00	movq	183323(%rip), %rsi ## Objc selector ref: cellAtRow:column:
10002421d:	31 d2	xorl	%edx, %edx
10002421f:	41 ff d6	callq	*%r14
100024222:	41 8b 4c 1d 04	movl	4(%r13,%rbx), %ecx
100024227:	0f c9	bswapl	%ecx
100024229:	0f 57 c0	xorps	%xmm0, %xmm0
10002422c:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100024230:	f2 0f 59 05 28 3e 01 00	mulsd	81448(%rip), %xmm0
100024238:	48 89 c7	movq	%rax, %rdi
10002423b:	4c 89 fe	movq	%r15, %rsi
10002423e:	41 ff d6	callq	*%r14
100024241:	48 8b 05 c0 f1 02 00	movq	192960(%rip), %rax
100024248:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002424c:	b9 02 00 00 00	movl	$2, %ecx
100024251:	48 8b 35 e0 cb 02 00	movq	183264(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100024258:	49 89 f7	movq	%rsi, %r15
10002425b:	31 d2	xorl	%edx, %edx
10002425d:	41 ff d6	callq	*%r14
100024260:	41 8b 4c 1d 08	movl	8(%r13,%rbx), %ecx
100024265:	0f c9	bswapl	%ecx
100024267:	0f 57 c0	xorps	%xmm0, %xmm0
10002426a:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
10002426e:	f2 0f 59 05 ea 3d 01 00	mulsd	81386(%rip), %xmm0
100024276:	48 89 c7	movq	%rax, %rdi
100024279:	48 8b 35 30 db 02 00	movq	187184(%rip), %rsi ## Objc selector ref: setDoubleValue:
100024280:	41 ff d6	callq	*%r14
100024283:	48 8b 05 7e f1 02 00	movq	192894(%rip), %rax
10002428a:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002428e:	ba 01 00 00 00	movl	$1, %edx
100024293:	4c 89 fe	movq	%r15, %rsi
100024296:	31 c9	xorl	%ecx, %ecx
100024298:	41 ff d6	callq	*%r14
10002429b:	41 8b 4c 1d 0c	movl	12(%r13,%rbx), %ecx
1000242a0:	0f c9	bswapl	%ecx
1000242a2:	0f 57 c0	xorps	%xmm0, %xmm0
1000242a5:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000242a9:	f2 0f 59 05 af 3d 01 00	mulsd	81327(%rip), %xmm0
1000242b1:	48 89 c7	movq	%rax, %rdi
1000242b4:	48 8b 35 f5 da 02 00	movq	187125(%rip), %rsi ## Objc selector ref: setDoubleValue:
1000242bb:	49 89 f7	movq	%rsi, %r15
1000242be:	41 ff d6	callq	*%r14
1000242c1:	48 8b 05 40 f1 02 00	movq	192832(%rip), %rax
1000242c8:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000242cc:	ba 01 00 00 00	movl	$1, %edx
1000242d1:	b9 01 00 00 00	movl	$1, %ecx
1000242d6:	48 8b 35 5b cb 02 00	movq	183131(%rip), %rsi ## Objc selector ref: cellAtRow:column:
1000242dd:	41 ff d6	callq	*%r14
1000242e0:	41 8b 4c 1d 10	movl	16(%r13,%rbx), %ecx
1000242e5:	0f c9	bswapl	%ecx
1000242e7:	0f 57 c0	xorps	%xmm0, %xmm0
1000242ea:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000242ee:	f2 0f 59 05 6a 3d 01 00	mulsd	81258(%rip), %xmm0
1000242f6:	48 89 c7	movq	%rax, %rdi
1000242f9:	4c 89 fe	movq	%r15, %rsi
1000242fc:	41 ff d6	callq	*%r14
1000242ff:	48 8b 05 02 f1 02 00	movq	192770(%rip), %rax
100024306:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002430a:	ba 01 00 00 00	movl	$1, %edx
10002430f:	b9 02 00 00 00	movl	$2, %ecx
100024314:	48 8b 35 1d cb 02 00	movq	183069(%rip), %rsi ## Objc selector ref: cellAtRow:column:
10002431b:	49 89 f7	movq	%rsi, %r15
10002431e:	41 ff d6	callq	*%r14
100024321:	41 8b 4c 1d 14	movl	20(%r13,%rbx), %ecx
100024326:	0f c9	bswapl	%ecx
100024328:	0f 57 c0	xorps	%xmm0, %xmm0
10002432b:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
10002432f:	f2 0f 59 05 29 3d 01 00	mulsd	81193(%rip), %xmm0
100024337:	48 89 c7	movq	%rax, %rdi
10002433a:	48 8b 35 6f da 02 00	movq	186991(%rip), %rsi ## Objc selector ref: setDoubleValue:
100024341:	41 ff d6	callq	*%r14
100024344:	48 8b 05 bd f0 02 00	movq	192701(%rip), %rax
10002434b:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002434f:	ba 02 00 00 00	movl	$2, %edx
100024354:	4c 89 fe	movq	%r15, %rsi
100024357:	31 c9	xorl	%ecx, %ecx
100024359:	41 ff d6	callq	*%r14
10002435c:	41 8b 4c 1d 18	movl	24(%r13,%rbx), %ecx
100024361:	0f c9	bswapl	%ecx
100024363:	0f 57 c0	xorps	%xmm0, %xmm0
100024366:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
10002436a:	f2 0f 59 05 ee 3c 01 00	mulsd	81134(%rip), %xmm0
100024372:	48 89 c7	movq	%rax, %rdi
100024375:	48 8b 35 34 da 02 00	movq	186932(%rip), %rsi ## Objc selector ref: setDoubleValue:
10002437c:	49 89 f7	movq	%rsi, %r15
10002437f:	41 ff d6	callq	*%r14
100024382:	48 8b 05 7f f0 02 00	movq	192639(%rip), %rax
100024389:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002438d:	ba 02 00 00 00	movl	$2, %edx
100024392:	b9 01 00 00 00	movl	$1, %ecx
100024397:	48 8b 35 9a ca 02 00	movq	182938(%rip), %rsi ## Objc selector ref: cellAtRow:column:
10002439e:	41 ff d6	callq	*%r14
1000243a1:	41 8b 4c 1d 1c	movl	28(%r13,%rbx), %ecx
1000243a6:	0f c9	bswapl	%ecx
1000243a8:	0f 57 c0	xorps	%xmm0, %xmm0
1000243ab:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000243af:	f2 0f 59 05 a9 3c 01 00	mulsd	81065(%rip), %xmm0
1000243b7:	48 89 c7	movq	%rax, %rdi
1000243ba:	4c 89 fe	movq	%r15, %rsi
1000243bd:	41 ff d6	callq	*%r14
1000243c0:	48 8b 05 41 f0 02 00	movq	192577(%rip), %rax
1000243c7:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000243cb:	ba 02 00 00 00	movl	$2, %edx
1000243d0:	b9 02 00 00 00	movl	$2, %ecx
1000243d5:	48 8b 35 5c ca 02 00	movq	182876(%rip), %rsi ## Objc selector ref: cellAtRow:column:
1000243dc:	41 ff d6	callq	*%r14
1000243df:	41 8b 4c 1d 20	movl	32(%r13,%rbx), %ecx
1000243e4:	0f c9	bswapl	%ecx
1000243e6:	0f 57 c0	xorps	%xmm0, %xmm0
1000243e9:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000243ed:	f2 0f 59 05 6b 3c 01 00	mulsd	81003(%rip), %xmm0
1000243f5:	48 89 c7	movq	%rax, %rdi
1000243f8:	4c 89 fe	movq	%r15, %rsi
1000243fb:	41 ff d6	callq	*%r14
1000243fe:	48 8b 05 03 f0 02 00	movq	192515(%rip), %rax
100024405:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100024409:	b9 03 00 00 00	movl	$3, %ecx
10002440e:	48 8b 35 23 ca 02 00	movq	182819(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100024415:	49 89 f7	movq	%rsi, %r15
100024418:	31 d2	xorl	%edx, %edx
10002441a:	41 ff d6	callq	*%r14
10002441d:	41 8b 4c 1d 24	movl	36(%r13,%rbx), %ecx
100024422:	0f c9	bswapl	%ecx
100024424:	0f 57 c0	xorps	%xmm0, %xmm0
100024427:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
10002442b:	f2 0f 59 05 2d 3c 01 00	mulsd	80941(%rip), %xmm0
100024433:	48 89 c7	movq	%rax, %rdi
100024436:	48 8b 35 73 d9 02 00	movq	186739(%rip), %rsi ## Objc selector ref: setDoubleValue:
10002443d:	41 ff d6	callq	*%r14
100024440:	48 8b 05 c1 ef 02 00	movq	192449(%rip), %rax
100024447:	49 8b 3c 04	movq	(%r12,%rax), %rdi
10002444b:	ba 01 00 00 00	movl	$1, %edx
100024450:	b9 03 00 00 00	movl	$3, %ecx
100024455:	4c 89 fe	movq	%r15, %rsi
100024458:	41 ff d6	callq	*%r14
10002445b:	41 8b 4c 1d 28	movl	40(%r13,%rbx), %ecx
100024460:	0f c9	bswapl	%ecx
100024462:	0f 57 c0	xorps	%xmm0, %xmm0
100024465:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100024469:	f2 0f 59 05 ef 3b 01 00	mulsd	80879(%rip), %xmm0
100024471:	48 89 c7	movq	%rax, %rdi
100024474:	48 8b 35 35 d9 02 00	movq	186677(%rip), %rsi ## Objc selector ref: setDoubleValue:
10002447b:	41 ff d6	callq	*%r14
10002447e:	48 8b 05 83 ef 02 00	movq	192387(%rip), %rax
100024485:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100024489:	ba 02 00 00 00	movl	$2, %edx
10002448e:	b9 03 00 00 00	movl	$3, %ecx
100024493:	4c 89 fe	movq	%r15, %rsi
100024496:	41 ff d6	callq	*%r14
100024499:	41 8b 4c 1d 2c	movl	44(%r13,%rbx), %ecx
10002449e:	0f c9	bswapl	%ecx
1000244a0:	0f 57 c0	xorps	%xmm0, %xmm0
1000244a3:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
1000244a7:	f2 0f 59 05 b1 3b 01 00	mulsd	80817(%rip), %xmm0
1000244af:	48 89 c7	movq	%rax, %rdi
1000244b2:	48 8b 35 f7 d8 02 00	movq	186615(%rip), %rsi ## Objc selector ref: setDoubleValue:
1000244b9:	41 ff d6	callq	*%r14
1000244bc:	4c 89 e3	movq	%r12, %rbx
1000244bf:	4c 8b 35 b2 ef 02 00	movq	192434(%rip), %r14
1000244c6:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000244ca:	4c 8b 2d 1f cf 02 00	movq	184095(%rip), %r13 ## Objc selector ref: indexOfSelectedItem
1000244d1:	4c 89 ee	movq	%r13, %rsi
1000244d4:	ff 15 46 87 01 00	callq	*100166(%rip) ## Objc message: -[%rdi indexOfSelectedItem]
1000244da:	49 89 c4	movq	%rax, %r12
1000244dd:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
1000244e1:	48 8b 05 48 ef 02 00	movq	192328(%rip), %rax
1000244e8:	8b 0c 03	movl	(%rbx,%rax), %ecx
1000244eb:	4c 8b 3d 4e ef 02 00	movq	192334(%rip), %r15
1000244f2:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
1000244f7:	74 0d	je	0x100024506
1000244f9:	48 8b 05 18 ef 02 00	movq	192280(%rip), %rax
100024500:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100024504:	eb 03	jmp	0x100024509
100024506:	45 31 c0	xorl	%r8d, %r8d
100024509:	48 8b 35 00 d2 02 00	movq	184832(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100024510:	48 89 df	movq	%rbx, %rdi
100024513:	ff 15 07 87 01 00	callq	*100103(%rip) ## Objc message: -[%rdi makeItemsForPopup:withSpace:chanCount:]
100024519:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
10002451e:	74 24	je	0x100024544
100024520:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100024524:	48 8b 05 ed ee 02 00	movq	192237(%rip), %rax
10002452b:	8b 14 03	movl	(%rbx,%rax), %edx
10002452e:	ff ca	decl	%edx
100024530:	49 39 d4	cmpq	%rdx, %r12
100024533:	49 0f 42 d4	cmovbq	%r12, %rdx
100024537:	48 8b 35 ca d6 02 00	movq	186058(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
10002453e:	ff 15 dc 86 01 00	callq	*100060(%rip) ## Objc message: -[%rdi selectItemAtIndex:]
100024544:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
100024548:	48 8b 35 99 cf 02 00	movq	184217(%rip), %rsi ## Objc selector ref: inputPopHit:
10002454f:	48 89 df	movq	%rbx, %rdi
100024552:	ff 15 c8 86 01 00	callq	*100040(%rip) ## Objc message: -[%rdi inputPopHit:]
100024558:	4c 8b 35 21 ef 02 00	movq	192289(%rip), %r14
10002455f:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
100024563:	48 8b 05 e6 ee 02 00	movq	192230(%rip), %rax
10002456a:	8b 0c 03	movl	(%rbx,%rax), %ecx
10002456d:	4c 8b 3d ec ee 02 00	movq	192236(%rip), %r15
100024574:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
100024579:	74 0d	je	0x100024588
10002457b:	48 8b 05 d6 ee 02 00	movq	192214(%rip), %rax
100024582:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100024586:	eb 03	jmp	0x10002458b
100024588:	45 31 c0	xorl	%r8d, %r8d
10002458b:	48 89 df	movq	%rbx, %rdi
10002458e:	48 8b 35 7b d1 02 00	movq	184699(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100024595:	ff 15 85 86 01 00	callq	*99973(%rip) ## Objc message: -[%rdi makeItemsForPopup:withSpace:chanCount:]
10002459b:	4a 83 3c 3b 00	cmpq	$0, (%rbx,%r15)
1000245a0:	74 13	je	0x1000245b5
1000245a2:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000245a6:	48 8b 35 5b d6 02 00	movq	185947(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
1000245ad:	31 d2	xorl	%edx, %edx
1000245af:	ff 15 6b 86 01 00	callq	*99947(%rip) ## Objc message: -[%rdi selectItemAtIndex:]
1000245b5:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
1000245b9:	48 8b 35 78 d1 02 00	movq	184696(%rip), %rsi ## Objc selector ref: matrixPopHit:
1000245c0:	4c 8b 35 59 86 01 00	movq	99929(%rip), %r14 ## Objc message: -[%rdi matrixPopHit:]
1000245c7:	48 89 df	movq	%rbx, %rdi
1000245ca:	41 ff d6	callq	*%r14
1000245cd:	4c 8b 3d b4 ee 02 00	movq	192180(%rip), %r15
1000245d4:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000245d8:	4c 89 ee	movq	%r13, %rsi
1000245db:	41 ff d6	callq	*%r14
1000245de:	49 89 c5	movq	%rax, %r13
1000245e1:	4a 8b 14 3b	movq	(%rbx,%r15), %rdx
1000245e5:	48 8b 05 4c ee 02 00	movq	192076(%rip), %rax
1000245ec:	8b 0c 03	movl	(%rbx,%rax), %ecx
1000245ef:	4c 8b 25 52 ee 02 00	movq	192082(%rip), %r12
1000245f6:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
1000245fb:	74 0d	je	0x10002460a
1000245fd:	48 8b 05 1c ee 02 00	movq	192028(%rip), %rax
100024604:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100024608:	eb 03	jmp	0x10002460d
10002460a:	45 31 c0	xorl	%r8d, %r8d
10002460d:	48 89 df	movq	%rbx, %rdi
100024610:	48 8b 35 f9 d0 02 00	movq	184569(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100024617:	ff 15 03 86 01 00	callq	*99843(%rip) ## Objc message: -[%rdi makeItemsForPopup:withSpace:chanCount:]
10002461d:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
100024622:	74 24	je	0x100024648
100024624:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100024628:	48 8b 05 f1 ed 02 00	movq	191985(%rip), %rax
10002462f:	8b 14 03	movl	(%rbx,%rax), %edx
100024632:	ff ca	decl	%edx
100024634:	49 39 d5	cmpq	%rdx, %r13
100024637:	49 0f 42 d5	cmovbq	%r13, %rdx
10002463b:	48 8b 35 c6 d5 02 00	movq	185798(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100024642:	ff 15 d8 85 01 00	callq	*99800(%rip) ## Objc message: -[%rdi selectItemAtIndex:]
100024648:	4a 8b 14 3b	movq	(%rbx,%r15), %rdx
10002464c:	48 8b 35 c5 d2 02 00	movq	185029(%rip), %rsi ## Objc selector ref: outputPopHit:
100024653:	48 89 df	movq	%rbx, %rdi
100024656:	ff 15 c4 85 01 00	callq	*99780(%rip) ## Objc message: -[%rdi outputPopHit:]
10002465c:	48 8b 05 2d ee 02 00	movq	192045(%rip), %rax
100024663:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024667:	48 8b 0d 2a ee 02 00	movq	192042(%rip), %rcx
10002466e:	48 8d 14 0b	leaq	(%rbx,%rcx), %rdx
100024672:	48 89 55 d0	movq	%rdx, -48(%rbp)
100024676:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002467a:	48 8b 05 1f ee 02 00	movq	192031(%rip), %rax
100024681:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024685:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
10002468a:	48 8b 05 17 ee 02 00	movq	192023(%rip), %rax
100024691:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024695:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
10002469a:	48 8b 05 0f ee 02 00	movq	192015(%rip), %rax
1000246a1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246a5:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
1000246aa:	48 8b 05 07 ee 02 00	movq	192007(%rip), %rax
1000246b1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246b5:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
1000246ba:	48 8b 05 ff ed 02 00	movq	191999(%rip), %rax
1000246c1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246c5:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
1000246ca:	48 8b 05 f7 ed 02 00	movq	191991(%rip), %rax
1000246d1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246d5:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
1000246da:	48 8b 05 ef ed 02 00	movq	191983(%rip), %rax
1000246e1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246e5:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
1000246ea:	48 8b 05 e7 ed 02 00	movq	191975(%rip), %rax
1000246f1:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000246f5:	48 8b 0d e4 ed 02 00	movq	191972(%rip), %rcx
1000246fc:	48 8d 14 0b	leaq	(%rbx,%rcx), %rdx
100024700:	48 89 55 c0	movq	%rdx, -64(%rbp)
100024704:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100024708:	48 8b 05 d9 ed 02 00	movq	191961(%rip), %rax
10002470f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024713:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
100024718:	48 8b 05 d1 ed 02 00	movq	191953(%rip), %rax
10002471f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024723:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
100024728:	48 8b 05 c9 ed 02 00	movq	191945(%rip), %rax
10002472f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024733:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
100024738:	48 8b 05 c1 ed 02 00	movq	191937(%rip), %rax
10002473f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024743:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
100024748:	48 8b 05 b9 ed 02 00	movq	191929(%rip), %rax
10002474f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024753:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
100024758:	48 8b 05 b1 ed 02 00	movq	191921(%rip), %rax
10002475f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024763:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
100024768:	48 8b 05 a9 ed 02 00	movq	191913(%rip), %rax
10002476f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024773:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
100024778:	48 8b 05 a1 ed 02 00	movq	191905(%rip), %rax
10002477f:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024783:	48 8b 0d 9e ed 02 00	movq	191902(%rip), %rcx
10002478a:	49 89 de	movq	%rbx, %r14
10002478d:	48 8d 14 0b	leaq	(%rbx,%rcx), %rdx
100024791:	48 89 55 c8	movq	%rdx, -56(%rbp)
100024795:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100024799:	48 8b 05 90 ed 02 00	movq	191888(%rip), %rax
1000247a0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247a4:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
1000247a9:	48 8b 05 88 ed 02 00	movq	191880(%rip), %rax
1000247b0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247b4:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
1000247b9:	48 8b 05 80 ed 02 00	movq	191872(%rip), %rax
1000247c0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247c4:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
1000247c9:	48 8b 05 78 ed 02 00	movq	191864(%rip), %rax
1000247d0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247d4:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
1000247d9:	48 8b 05 70 ed 02 00	movq	191856(%rip), %rax
1000247e0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247e4:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
1000247e9:	48 8b 05 68 ed 02 00	movq	191848(%rip), %rax
1000247f0:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000247f4:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
1000247f9:	48 8b 05 60 ed 02 00	movq	191840(%rip), %rax
100024800:	48 8b 04 03	movq	(%rbx,%rax), %rax
100024804:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
100024809:	4c 8b 3d 08 ec 02 00	movq	191496(%rip), %r15
100024810:	4c 8b 25 89 d6 02 00	movq	185993(%rip), %r12 ## Objc selector ref: setHidden:
100024817:	bb 01 00 00 00	movl	$1, %ebx
10002481c:	4c 8b 2d fd 83 01 00	movq	99325(%rip), %r13 ## Objc message: -[%rdi setHidden:]
100024823:	43 8b 04 3e	movl	(%r14,%r15), %eax
100024827:	ff c8	decl	%eax
100024829:	31 d2	xorl	%edx, %edx
10002482b:	48 39 c3	cmpq	%rax, %rbx
10002482e:	0f 97 c2	seta	%dl
100024831:	48 8b 45 d0	movq	-48(%rbp), %rax
100024835:	48 8b 3c d8	movq	(%rax,%rbx,8), %rdi
100024839:	4c 89 e6	movq	%r12, %rsi
10002483c:	41 ff d5	callq	*%r13
10002483f:	43 8b 04 3e	movl	(%r14,%r15), %eax
100024843:	ff c8	decl	%eax
100024845:	31 d2	xorl	%edx, %edx
100024847:	48 39 c3	cmpq	%rax, %rbx
10002484a:	0f 97 c2	seta	%dl
10002484d:	48 8b 45 c0	movq	-64(%rbp), %rax
100024851:	48 8b 3c d8	movq	(%rax,%rbx,8), %rdi
100024855:	4c 89 e6	movq	%r12, %rsi
100024858:	41 ff d5	callq	*%r13
10002485b:	43 8b 04 3e	movl	(%r14,%r15), %eax
10002485f:	ff c8	decl	%eax
100024861:	31 d2	xorl	%edx, %edx
100024863:	48 39 c3	cmpq	%rax, %rbx
100024866:	0f 97 c2	seta	%dl
100024869:	48 8b 45 c8	movq	-56(%rbp), %rax
10002486d:	48 8b 3c d8	movq	(%rax,%rbx,8), %rdi
100024871:	4c 89 e6	movq	%r12, %rsi
100024874:	41 ff d5	callq	*%r13
100024877:	48 ff c3	incq	%rbx
10002487a:	48 83 fb 08	cmpq	$8, %rbx
10002487e:	75 a3	jne	0x100024823
100024880:	4c 89 75 a0	movq	%r14, -96(%rbp)
100024884:	48 8b 05 8d d8 02 00	movq	186509(%rip), %rax ## Objc selector ref: setTitle:
10002488b:	48 89 45 80	movq	%rax, -128(%rbp)
10002488f:	48 8b 05 92 eb 02 00	movq	191378(%rip), %rax
100024896:	48 89 45 a8	movq	%rax, -88(%rbp)
10002489a:	48 8b 05 17 d7 02 00	movq	186135(%rip), %rax ## Objc selector ref: setMinValue:
1000248a1:	48 89 45 88	movq	%rax, -120(%rbp)
1000248a5:	48 8b 05 ec d6 02 00	movq	186092(%rip), %rax ## Objc selector ref: setMaxValue:
1000248ac:	48 89 45 b0	movq	%rax, -80(%rbp)
1000248b0:	48 8b 05 49 d6 02 00	movq	185929(%rip), %rax ## Objc selector ref: setIntValue:
1000248b7:	48 89 45 b8	movq	%rax, -72(%rbp)
1000248bb:	48 8b 05 2e d5 02 00	movq	185646(%rip), %rax ## Objc selector ref: setEnabled:
1000248c2:	48 89 45 98	movq	%rax, -104(%rbp)
1000248c6:	48 8b 05 d3 da 02 00	movq	187091(%rip), %rax ## Objc selector ref: takeIntValueFrom:
1000248cd:	48 89 45 90	movq	%rax, -112(%rbp)
1000248d1:	45 31 ff	xorl	%r15d, %r15d
1000248d4:	4c 8b 65 d0	movq	-48(%rbp), %r12
1000248d8:	4b 8b 1c fc	movq	(%r12,%r15,8), %rbx
1000248dc:	4c 8b 65 a0	movq	-96(%rbp), %r12
1000248e0:	48 8b 05 49 eb 02 00	movq	191305(%rip), %rax
1000248e7:	41 8b 14 04	movl	(%r12,%rax), %edx
1000248eb:	4c 89 e7	movq	%r12, %rdi
1000248ee:	48 8b 35 13 da 02 00	movq	186899(%rip), %rsi ## Objc selector ref: stringForSpace:channel:
1000248f5:	44 89 f9	movl	%r15d, %ecx
1000248f8:	41 ff d5	callq	*%r13
1000248fb:	48 89 df	movq	%rbx, %rdi
1000248fe:	48 8b 75 80	movq	-128(%rbp), %rsi
100024902:	48 89 c2	movq	%rax, %rdx
100024905:	41 ff d5	callq	*%r13
100024908:	4c 8b 75 a8	movq	-88(%rbp), %r14
10002490c:	4b 8b 04 34	movq	(%r12,%r14), %rax
100024910:	48 89 85 78 ff ff ff	movq	%rax, -136(%rbp)
100024917:	48 8b 5d c8	movq	-56(%rbp), %rbx
10002491b:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
10002491f:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100024923:	48 8b 75 88	movq	-120(%rbp), %rsi
100024927:	41 ff d5	callq	*%r13
10002492a:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
10002492e:	48 83 bd 78 ff ff ff 00	cmpq	$0, -136(%rbp)
100024936:	74 41	je	0x100024979
100024938:	4b 8b 04 34	movq	(%r12,%r14), %rax
10002493c:	42 0f b6 04 38	movzbl	(%rax,%r15), %eax
100024941:	ff c8	decl	%eax
100024943:	0f 57 c0	xorps	%xmm0, %xmm0
100024946:	f2 0f 2a c0	cvtsi2sd	%eax, %xmm0
10002494a:	48 8b 75 b0	movq	-80(%rbp), %rsi
10002494e:	41 ff d5	callq	*%r13
100024951:	48 8b 45 c8	movq	-56(%rbp), %rax
100024955:	4a 8b 3c f8	movq	(%rax,%r15,8), %rdi
100024959:	4b 8b 04 34	movq	(%r12,%r14), %rax
10002495d:	42 0f b6 14 38	movzbl	(%rax,%r15), %edx
100024962:	d1 ea	shrl	%edx
100024964:	48 8b 75 b8	movq	-72(%rbp), %rsi
100024968:	41 ff d5	callq	*%r13
10002496b:	4c 8b 65 d0	movq	-48(%rbp), %r12
10002496f:	48 8b 5d c0	movq	-64(%rbp), %rbx
100024973:	48 8b 45 c8	movq	-56(%rbp), %rax
100024977:	eb 53	jmp	0x1000249cc
100024979:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10002497d:	48 8b 75 b0	movq	-80(%rbp), %rsi
100024981:	41 ff d5	callq	*%r13
100024984:	4c 8b 75 c8	movq	-56(%rbp), %r14
100024988:	4b 8b 3c fe	movq	(%r14,%r15,8), %rdi
10002498c:	48 8b 75 b8	movq	-72(%rbp), %rsi
100024990:	31 d2	xorl	%edx, %edx
100024992:	41 ff d5	callq	*%r13
100024995:	48 8b 45 d0	movq	-48(%rbp), %rax
100024999:	4a 8b 3c f8	movq	(%rax,%r15,8), %rdi
10002499d:	4c 8b 65 98	movq	-104(%rbp), %r12
1000249a1:	4c 89 e6	movq	%r12, %rsi
1000249a4:	31 d2	xorl	%edx, %edx
1000249a6:	41 ff d5	callq	*%r13
1000249a9:	4b 8b 3c fe	movq	(%r14,%r15,8), %rdi
1000249ad:	4c 89 e6	movq	%r12, %rsi
1000249b0:	31 d2	xorl	%edx, %edx
1000249b2:	41 ff d5	callq	*%r13
1000249b5:	48 8b 5d c0	movq	-64(%rbp), %rbx
1000249b9:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
1000249bd:	4c 89 e6	movq	%r12, %rsi
1000249c0:	31 d2	xorl	%edx, %edx
1000249c2:	41 ff d5	callq	*%r13
1000249c5:	4c 8b 65 d0	movq	-48(%rbp), %r12
1000249c9:	4c 89 f0	movq	%r14, %rax
1000249cc:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
1000249d0:	4a 8b 14 f8	movq	(%rax,%r15,8), %rdx
1000249d4:	48 8b 75 90	movq	-112(%rbp), %rsi
1000249d8:	41 ff d5	callq	*%r13
1000249db:	49 ff c7	incq	%r15
1000249de:	49 83 ff 08	cmpq	$8, %r15
1000249e2:	0f 85 f0 fe ff ff	jne	0x1000248d8
1000249e8:	4c 8b 35 79 eb 02 00	movq	191353(%rip), %r14
1000249ef:	48 8b 5d a0	movq	-96(%rbp), %rbx
1000249f3:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
1000249f7:	48 8b 35 f2 c9 02 00	movq	182770(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
1000249fe:	ff 15 1c 82 01 00	callq	*98844(%rip) ## Objc message: -[%rdi indexOfSelectedItem]
100024a04:	49 89 c7	movq	%rax, %r15
100024a07:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
100024a0b:	48 8b 05 26 ea 02 00	movq	191014(%rip), %rax
100024a12:	8b 0c 03	movl	(%rbx,%rax), %ecx
100024a15:	4c 8b 65 a8	movq	-88(%rbp), %r12
100024a19:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
100024a1e:	74 0d	je	0x100024a2d
100024a20:	48 8b 05 f9 e9 02 00	movq	190969(%rip), %rax
100024a27:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100024a2b:	eb 03	jmp	0x100024a30
100024a2d:	45 31 c0	xorl	%r8d, %r8d
100024a30:	48 89 df	movq	%rbx, %rdi
100024a33:	48 8b 35 d6 cc 02 00	movq	183510(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100024a3a:	ff 15 e0 81 01 00	callq	*98784(%rip) ## Objc message: -[%rdi makeItemsForPopup:withSpace:chanCount:]
100024a40:	4a 83 3c 23 00	cmpq	$0, (%rbx,%r12)
100024a45:	74 24	je	0x100024a6b
100024a47:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100024a4b:	48 8b 05 ce e9 02 00	movq	190926(%rip), %rax
100024a52:	8b 14 03	movl	(%rbx,%rax), %edx
100024a55:	ff ca	decl	%edx
100024a57:	49 39 d7	cmpq	%rdx, %r15
100024a5a:	49 0f 42 d7	cmovbq	%r15, %rdx
100024a5e:	48 8b 35 a3 d1 02 00	movq	184739(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100024a65:	ff 15 b5 81 01 00	callq	*98741(%rip) ## Objc message: -[%rdi selectItemAtIndex:]
100024a6b:	48 8b 05 1e ea 02 00	movq	191006(%rip), %rax
100024a72:	48 8b 14 03	movq	(%rbx,%rax), %rdx
100024a76:	48 8b 35 43 c4 02 00	movq	181315(%rip), %rsi ## Objc selector ref: colorRadioHit:
100024a7d:	48 89 df	movq	%rbx, %rdi
100024a80:	48 83 c4 68	addq	$104, %rsp
100024a84:	5b	popq	%rbx
100024a85:	41 5c	popq	%r12
100024a87:	41 5d	popq	%r13
100024a89:	41 5e	popq	%r14
100024a8b:	41 5f	popq	%r15
100024a8d:	5d	popq	%rbp
100024a8e:	ff 25 8c 81 01 00	jmpq	*98700(%rip) ## Objc message: -[%rdi colorRadioHit:]
100024a94:	55	pushq	%rbp
100024a95:	48 89 e5	movq	%rsp, %rbp
100024a98:	41 57	pushq	%r15
100024a9a:	41 56	pushq	%r14
100024a9c:	41 55	pushq	%r13
100024a9e:	41 54	pushq	%r12
100024aa0:	53	pushq	%rbx
100024aa1:	48 83 ec 38	subq	$56, %rsp
100024aa5:	4d 89 ce	movq	%r9, %r14
100024aa8:	48 89 cb	movq	%rcx, %rbx
100024aab:	41 89 d7	movl	%edx, %r15d
100024aae:	48 8b 05 63 7d 01 00	movq	97635(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100024ab5:	48 8b 00	movq	(%rax), %rax
100024ab8:	48 89 45 d0	movq	%rax, -48(%rbp)
100024abc:	41 81 f8 20 42 47 52	cmpl	$1380401696, %r8d
100024ac3:	b8 06 00 00 00	movl	$6, %eax
100024ac8:	0f 44 c2	cmovel	%edx, %eax
100024acb:	41 8d 57 03	leal	3(%r15), %edx
100024acf:	41 81 f8 4b 59 4d 43	cmpl	$1129142603, %r8d
100024ad6:	0f 45 d0	cmovnel	%eax, %edx
100024ad9:	48 8b 35 b0 c0 02 00	movq	180400(%rip), %rsi ## Objc selector ref: SetPlotColor:
100024ae0:	4c 8b 25 39 81 01 00	movq	98617(%rip), %r12 ## Objc message: -[%rdi SetPlotColor:]
100024ae7:	4c 89 cf	movq	%r9, %rdi
100024aea:	41 ff d4	callq	*%r12
100024aed:	48 8b 35 b4 c0 02 00	movq	180404(%rip), %rsi ## Objc selector ref: SetPlotNone
100024af4:	4c 89 f7	movq	%r14, %rdi
100024af7:	41 ff d4	callq	*%r12
100024afa:	48 85 db	testq	%rbx, %rbx
100024afd:	0f 84 bc 00 00 00	je	0x100024bbf
100024b03:	45 85 ff	testl	%r15d, %r15d
100024b06:	0f 88 b3 00 00 00	js	0x100024bbf
100024b0c:	48 8b 05 9d c0 02 00	movq	180381(%rip), %rax ## Objc selector ref: SetPlotPara:Type:
100024b13:	48 89 45 a8	movq	%rax, -88(%rbp)
100024b17:	45 31 ed	xorl	%r13d, %r13d
100024b1a:	48 8b 05 77 c0 02 00	movq	180343(%rip), %rax ## Objc selector ref: SetPlotData:entryCount:entrySize:
100024b21:	48 89 45 a0	movq	%rax, -96(%rbp)
100024b25:	8b 03	movl	(%rbx), %eax
100024b27:	8b 4b 08	movl	8(%rbx), %ecx
100024b2a:	3d 63 75 72 76	cmpl	$1987212643, %eax
100024b2f:	74 53	je	0x100024b84
100024b31:	3d 70 61 72 61	cmpl	$1634886000, %eax
100024b36:	0f 85 83 00 00 00	jne	0x100024bbf
100024b3c:	66 c1 c1 08	rolw	$8, %cx
100024b40:	66 83 f9 04	cmpw	$4, %cx
100024b44:	77 79	ja	0x100024bbf
100024b46:	48 0f bf c1	movswq	%cx, %rax
100024b4a:	48 8d 15 ff 47 01 00	leaq	83967(%rip), %rdx
100024b51:	48 8b 04 c2	movq	(%rdx,%rax,8), %rax
100024b55:	45 39 fd	cmpl	%r15d, %r13d
100024b58:	7c 3b	jl	0x100024b95
100024b5a:	83 c0 fd	addl	$-3, %eax
100024b5d:	31 d2	xorl	%edx, %edx
100024b5f:	8b 74 93 0c	movl	12(%rbx,%rdx,4), %esi
100024b63:	0f ce	bswapl	%esi
100024b65:	89 74 95 b0	movl	%esi, -80(%rbp,%rdx,4)
100024b69:	48 ff c2	incq	%rdx
100024b6c:	48 39 d0	cmpq	%rdx, %rax
100024b6f:	75 ee	jne	0x100024b5f
100024b71:	0f b7 c9	movzwl	%cx, %ecx
100024b74:	4c 89 f7	movq	%r14, %rdi
100024b77:	48 8b 75 a8	movq	-88(%rbp), %rsi
100024b7b:	48 8d 55 b0	leaq	-80(%rbp), %rdx
100024b7f:	41 ff d4	callq	*%r12
100024b82:	eb 2b	jmp	0x100024baf
100024b84:	0f c9	bswapl	%ecx
100024b86:	45 39 fd	cmpl	%r15d, %r13d
100024b89:	7d 10	jge	0x100024b9b
100024b8b:	ff c1	incl	%ecx
100024b8d:	d1 e9	shrl	%ecx
100024b8f:	83 c1 03	addl	$3, %ecx
100024b92:	48 89 c8	movq	%rcx, %rax
100024b95:	48 8d 1c 83	leaq	(%rbx,%rax,4), %rbx
100024b99:	eb 14	jmp	0x100024baf
100024b9b:	48 8d 53 0c	leaq	12(%rbx), %rdx
100024b9f:	4c 89 f7	movq	%r14, %rdi
100024ba2:	48 8b 75 a0	movq	-96(%rbp), %rsi
100024ba6:	41 b8 02 00 00 00	movl	$2, %r8d
100024bac:	41 ff d4	callq	*%r12
100024baf:	41 8d 45 01	leal	1(%r13), %eax
100024bb3:	45 39 fd	cmpl	%r15d, %r13d
100024bb6:	41 89 c5	movl	%eax, %r13d
100024bb9:	0f 85 66 ff ff ff	jne	0x100024b25
100024bbf:	48 8b 05 52 7c 01 00	movq	97362(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100024bc6:	48 8b 00	movq	(%rax), %rax
100024bc9:	48 3b 45 d0	cmpq	-48(%rbp), %rax
100024bcd:	75 0f	jne	0x100024bde
100024bcf:	48 83 c4 38	addq	$56, %rsp
100024bd3:	5b	popq	%rbx
100024bd4:	41 5c	popq	%r12
100024bd6:	41 5d	popq	%r13
100024bd8:	41 5e	popq	%r14
100024bda:	41 5f	popq	%r15
100024bdc:	5d	popq	%rbp
100024bdd:	c3	retq
100024bde:	e8 cd a7 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100024be3:	55	pushq	%rbp
100024be4:	48 89 e5	movq	%rsp, %rbp
100024be7:	41 57	pushq	%r15
100024be9:	41 56	pushq	%r14
100024beb:	41 55	pushq	%r13
100024bed:	41 54	pushq	%r12
100024bef:	53	pushq	%rbx
100024bf0:	48 83 ec 28	subq	$40, %rsp
100024bf4:	49 89 fd	movq	%rdi, %r13
100024bf7:	48 8b 05 72 e9 02 00	movq	190834(%rip), %rax
100024bfe:	4c 63 24 07	movslq	(%rdi,%rax), %r12
100024c02:	48 8b 05 5f e9 02 00	movq	190815(%rip), %rax
100024c09:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100024c0d:	48 8b 35 dc c7 02 00	movq	182236(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100024c14:	48 8b 1d 05 80 01 00	movq	98309(%rip), %rbx ## Objc message: -[%rdi indexOfSelectedItem]
100024c1b:	ff d3	callq	*%rbx
100024c1d:	49 89 c6	movq	%rax, %r14
100024c20:	48 8b 05 11 e8 02 00	movq	190481(%rip), %rax
100024c27:	41 8b 44 05 00	movl	(%r13,%rax), %eax
100024c2c:	3d 20 42 47 52	cmpl	$1380401696, %eax
100024c31:	b9 06 00 00 00	movl	$6, %ecx
100024c36:	41 0f 44 ce	cmovel	%r14d, %ecx
100024c3a:	41 8d 56 03	leal	3(%r14), %edx
100024c3e:	3d 4b 59 4d 43	cmpl	$1129142603, %eax
100024c43:	0f 45 d1	cmovnel	%ecx, %edx
100024c46:	4c 8b 3d 2b e9 02 00	movq	190763(%rip), %r15
100024c4d:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100024c52:	48 8b 35 37 bf 02 00	movq	180023(%rip), %rsi ## Objc selector ref: SetPlotColor:
100024c59:	ff d3	callq	*%rbx
100024c5b:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100024c60:	48 8b 35 41 bf 02 00	movq	180033(%rip), %rsi ## Objc selector ref: SetPlotNone
100024c67:	ff d3	callq	*%rbx
100024c69:	48 8b 05 b8 e7 02 00	movq	190392(%rip), %rax
100024c70:	49 8b 44 05 00	movq	(%r13,%rax), %rax
100024c75:	48 89 45 c8	movq	%rax, -56(%rbp)
100024c79:	48 85 c0	testq	%rax, %rax
100024c7c:	0f 84 78 01 00 00	je	0x100024dfa
100024c82:	48 8b 05 8f e7 02 00	movq	190351(%rip), %rax
100024c89:	41 8b 5c 05 00	movl	(%r13,%rax), %ebx
100024c8e:	ff cb	decl	%ebx
100024c90:	83 fb 0e	cmpl	$14, %ebx
100024c93:	0f 87 61 01 00 00	ja	0x100024dfa
100024c99:	48 8b 05 b8 e7 02 00	movq	190392(%rip), %rax
100024ca0:	41 8b 44 05 00	movl	(%r13,%rax), %eax
100024ca5:	ff c8	decl	%eax
100024ca7:	83 f8 0e	cmpl	$14, %eax
100024caa:	0f 87 4a 01 00 00	ja	0x100024dfa
100024cb0:	48 8b 05 69 e7 02 00	movq	190313(%rip), %rax
100024cb7:	41 8b 44 05 00	movl	(%r13,%rax), %eax
100024cbc:	ff c8	decl	%eax
100024cbe:	83 f8 0e	cmpl	$14, %eax
100024cc1:	0f 87 33 01 00 00	ja	0x100024dfa
100024cc7:	4c 89 75 c0	movq	%r14, -64(%rbp)
100024ccb:	48 8b 4d c8	movq	-56(%rbp), %rcx
100024ccf:	0f b6 41 10	movzbl	16(%rcx), %eax
100024cd3:	48 89 45 d0	movq	%rax, -48(%rbp)
100024cd7:	48 8b 05 4a e8 02 00	movq	190538(%rip), %rax
100024cde:	4c 01 e8	addq	%r13, %rax
100024ce1:	48 89 45 b0	movq	%rax, -80(%rbp)
100024ce5:	41 bf 01 00 00 00	movl	$1, %r15d
100024ceb:	45 31 f6	xorl	%r14d, %r14d
100024cee:	48 8b 05 1b c8 02 00	movq	182299(%rip), %rax ## Objc selector ref: intValue
100024cf5:	48 89 45 b8	movq	%rax, -72(%rbp)
100024cf9:	b8 00 00 00 00	movl	$0, %eax
100024cfe:	41 39 dc	cmpl	%ebx, %r12d
100024d01:	89 db	movl	%ebx, %ebx
100024d03:	74 1e	je	0x100024d23
100024d05:	48 8b 45 b0	movq	-80(%rbp), %rax
100024d09:	48 8b 3c d8	movq	(%rax,%rbx,8), %rdi
100024d0d:	48 8b 75 b8	movq	-72(%rbp), %rsi
100024d11:	ff 15 09 7f 01 00	callq	*98057(%rip) ## Objc message: -[%rdi intValue]
100024d17:	48 8b 0d 0a e7 02 00	movq	190218(%rip), %rcx
100024d1e:	49 8b 4c 0d 00	movq	(%r13,%rcx), %rcx
100024d23:	41 0f af c7	imull	%r15d, %eax
100024d27:	41 01 c6	addl	%eax, %r14d
100024d2a:	0f b6 04 19	movzbl	(%rcx,%rbx), %eax
100024d2e:	44 0f af f8	imull	%eax, %r15d
100024d32:	ff cb	decl	%ebx
100024d34:	79 c3	jns	0x100024cf9
100024d36:	48 8b 05 e3 e6 02 00	movq	190179(%rip), %rax
100024d3d:	45 8b 7c 05 00	movl	(%r13,%rax), %r15d
100024d42:	44 89 e0	movl	%r12d, %eax
100024d45:	f7 d0	notl	%eax
100024d47:	44 89 fb	movl	%r15d, %ebx
100024d4a:	48 8b 15 c7 e6 02 00	movq	190151(%rip), %rdx
100024d51:	41 03 44 15 00	addl	(%r13,%rdx), %eax
100024d56:	74 16	je	0x100024d6e
100024d58:	89 c0	movl	%eax, %eax
100024d5a:	31 d2	xorl	%edx, %edx
100024d5c:	44 89 fb	movl	%r15d, %ebx
100024d5f:	0f b6 34 11	movzbl	(%rcx,%rdx), %esi
100024d63:	0f af de	imull	%esi, %ebx
100024d66:	48 ff c2	incq	%rdx
100024d69:	48 39 d0	cmpq	%rdx, %rax
100024d6c:	75 f1	jne	0x100024d5f
100024d6e:	46 0f b6 24 21	movzbl	(%rcx,%r12), %r12d
100024d73:	48 8b 7d d0	movq	-48(%rbp), %rdi
100024d77:	4c 89 e6	movq	%r12, %rsi
100024d7a:	e8 3d a6 00 00	callq	0x10002f3bc ## symbol stub for: _calloc
100024d7f:	48 89 c2	movq	%rax, %rdx
100024d82:	4d 85 e4	testq	%r12, %r12
100024d85:	74 3a	je	0x100024dc1
100024d87:	45 0f af fe	imull	%r14d, %r15d
100024d8b:	44 03 7d c0	addl	-64(%rbp), %r15d
100024d8f:	31 c0	xorl	%eax, %eax
100024d91:	45 89 ff	movl	%r15d, %r15d
100024d94:	80 7d d0 02	cmpb	$2, -48(%rbp)
100024d98:	75 10	jne	0x100024daa
100024d9a:	48 8b 4d c8	movq	-56(%rbp), %rcx
100024d9e:	42 0f b7 4c 79 14	movzwl	20(%rcx,%r15,2), %ecx
100024da4:	66 89 0c 42	movw	%cx, (%rdx,%rax,2)
100024da8:	eb 0c	jmp	0x100024db6
100024daa:	48 8b 4d c8	movq	-56(%rbp), %rcx
100024dae:	42 8a 4c 39 14	movb	20(%rcx,%r15), %cl
100024db3:	88 0c 02	movb	%cl, (%rdx,%rax)
100024db6:	41 01 df	addl	%ebx, %r15d
100024db9:	48 ff c0	incq	%rax
100024dbc:	49 39 c4	cmpq	%rax, %r12
100024dbf:	75 d0	jne	0x100024d91
100024dc1:	48 8b 05 b0 e7 02 00	movq	190384(%rip), %rax
100024dc8:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100024dcd:	48 8b 35 c4 bd 02 00	movq	179652(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
100024dd4:	48 89 d3	movq	%rdx, %rbx
100024dd7:	44 89 e1	movl	%r12d, %ecx
100024dda:	4c 8b 45 d0	movq	-48(%rbp), %r8
100024dde:	ff 15 3c 7e 01 00	callq	*97852(%rip) ## Objc message: -[%rdi SetPlotData:entryCount:entrySize:]
100024de4:	48 89 df	movq	%rbx, %rdi
100024de7:	48 83 c4 28	addq	$40, %rsp
100024deb:	5b	popq	%rbx
100024dec:	41 5c	popq	%r12
100024dee:	41 5d	popq	%r13
100024df0:	41 5e	popq	%r14
100024df2:	41 5f	popq	%r15
100024df4:	5d	popq	%rbp
100024df5:	e9 da a5 00 00	jmp	0x10002f3d4 ## symbol stub for: _free
100024dfa:	48 83 c4 28	addq	$40, %rsp
100024dfe:	5b	popq	%rbx
100024dff:	41 5c	popq	%r12
100024e01:	41 5d	popq	%r13
100024e03:	41 5e	popq	%r14
100024e05:	41 5f	popq	%r15
100024e07:	5d	popq	%rbp
100024e08:	c3	retq
100024e09:	55	pushq	%rbp
100024e0a:	48 89 e5	movq	%rsp, %rbp
100024e0d:	41 56	pushq	%r14
100024e0f:	53	pushq	%rbx
100024e10:	48 89 fb	movq	%rdi, %rbx
100024e13:	48 8b 35 d6 c5 02 00	movq	181718(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100024e1a:	4c 8b 35 ff 7d 01 00	movq	97791(%rip), %r14 ## Objc message: -[%rdi indexOfSelectedItem]
100024e21:	48 89 d7	movq	%rdx, %rdi
100024e24:	41 ff d6	callq	*%r14
100024e27:	48 8b 0d 12 e6 02 00	movq	189970(%rip), %rcx
100024e2e:	48 8b 0c 0b	movq	(%rbx,%rcx), %rcx
100024e32:	48 8b 15 f7 e5 02 00	movq	189943(%rip), %rdx
100024e39:	44 8b 04 13	movl	(%rbx,%rdx), %r8d
100024e3d:	48 8b 15 3c e7 02 00	movq	190268(%rip), %rdx
100024e44:	4c 8b 0c 13	movq	(%rbx,%rdx), %r9
100024e48:	48 8b 35 89 bd 02 00	movq	179593(%rip), %rsi ## Objc selector ref: UpdateCurveView:startPtr:space:plotView:
100024e4f:	48 89 df	movq	%rbx, %rdi
100024e52:	89 c2	movl	%eax, %edx
100024e54:	4c 89 f0	movq	%r14, %rax
100024e57:	5b	popq	%rbx
100024e58:	41 5e	popq	%r14
100024e5a:	5d	popq	%rbp
100024e5b:	ff e0	jmpq	*%rax
100024e5d:	55	pushq	%rbp
100024e5e:	48 89 e5	movq	%rsp, %rbp
100024e61:	41 56	pushq	%r14
100024e63:	53	pushq	%rbx
100024e64:	48 89 fb	movq	%rdi, %rbx
100024e67:	48 8b 35 82 c5 02 00	movq	181634(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100024e6e:	4c 8b 35 ab 7d 01 00	movq	97707(%rip), %r14 ## Objc message: -[%rdi indexOfSelectedItem]
100024e75:	48 89 d7	movq	%rdx, %rdi
100024e78:	41 ff d6	callq	*%r14
100024e7b:	48 8b 0d de e5 02 00	movq	189918(%rip), %rcx
100024e82:	48 8b 0c 0b	movq	(%rbx,%rcx), %rcx
100024e86:	48 8b 15 c3 e5 02 00	movq	189891(%rip), %rdx
100024e8d:	44 8b 04 13	movl	(%rbx,%rdx), %r8d
100024e91:	48 8b 15 f0 e6 02 00	movq	190192(%rip), %rdx
100024e98:	4c 8b 0c 13	movq	(%rbx,%rdx), %r9
100024e9c:	48 8b 35 35 bd 02 00	movq	179509(%rip), %rsi ## Objc selector ref: UpdateCurveView:startPtr:space:plotView:
100024ea3:	48 89 df	movq	%rbx, %rdi
100024ea6:	89 c2	movl	%eax, %edx
100024ea8:	4c 89 f0	movq	%r14, %rax
100024eab:	5b	popq	%rbx
100024eac:	41 5e	popq	%r14
100024eae:	5d	popq	%rbp
100024eaf:	ff e0	jmpq	*%rax
100024eb1:	55	pushq	%rbp
100024eb2:	48 89 e5	movq	%rsp, %rbp
100024eb5:	41 56	pushq	%r14
100024eb7:	53	pushq	%rbx
100024eb8:	48 89 fb	movq	%rdi, %rbx
100024ebb:	48 8b 35 2e c5 02 00	movq	181550(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100024ec2:	4c 8b 35 57 7d 01 00	movq	97623(%rip), %r14 ## Objc message: -[%rdi indexOfSelectedItem]
100024ec9:	48 89 d7	movq	%rdx, %rdi
100024ecc:	41 ff d6	callq	*%r14
100024ecf:	48 8b 0d 72 e5 02 00	movq	189810(%rip), %rcx
100024ed6:	48 8b 0c 0b	movq	(%rbx,%rcx), %rcx
100024eda:	48 8b 15 57 e5 02 00	movq	189783(%rip), %rdx
100024ee1:	44 8b 04 13	movl	(%rbx,%rdx), %r8d
100024ee5:	48 8b 15 a4 e6 02 00	movq	190116(%rip), %rdx
100024eec:	4c 8b 0c 13	movq	(%rbx,%rdx), %r9
100024ef0:	48 8b 35 e1 bc 02 00	movq	179425(%rip), %rsi ## Objc selector ref: UpdateCurveView:startPtr:space:plotView:
100024ef7:	48 89 df	movq	%rbx, %rdi
100024efa:	89 c2	movl	%eax, %edx
100024efc:	4c 89 f0	movq	%r14, %rax
100024eff:	5b	popq	%rbx
100024f00:	41 5e	popq	%r14
100024f02:	5d	popq	%rbp
100024f03:	ff e0	jmpq	*%rax
100024f05:	55	pushq	%rbp
100024f06:	48 89 e5	movq	%rsp, %rbp
100024f09:	48 8b 35 c0 bc 02 00	movq	179392(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
100024f10:	5d	popq	%rbp
100024f11:	ff 25 09 7d 01 00	jmpq	*97545(%rip) ## Objc message: -[%rdi UpdateColorCurveView]
100024f17:	55	pushq	%rbp
100024f18:	48 89 e5	movq	%rsp, %rbp
100024f1b:	41 57	pushq	%r15
100024f1d:	41 56	pushq	%r14
100024f1f:	41 55	pushq	%r13
100024f21:	41 54	pushq	%r12
100024f23:	53	pushq	%rbx
100024f24:	50	pushq	%rax
100024f25:	49 89 fc	movq	%rdi, %r12
100024f28:	48 8b 05 f9 e4 02 00	movq	189689(%rip), %rax
100024f2f:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
100024f34:	0f 84 e8 00 00 00	je	0x100025022
100024f3a:	48 8b 35 57 d4 02 00	movq	185431(%rip), %rsi ## Objc selector ref: tag
100024f41:	4c 8b 35 d8 7c 01 00	movq	97496(%rip), %r14 ## Objc message: -[%rdi tag]
100024f48:	48 89 d7	movq	%rdx, %rdi
100024f4b:	41 ff d6	callq	*%r14
100024f4e:	48 8b 35 1b e6 02 00	movq	189979(%rip), %rsi
100024f55:	48 8b 0d 3c e5 02 00	movq	189756(%rip), %rcx
100024f5c:	4d 8d 2c 0c	leaq	(%r12,%rcx), %r13
100024f60:	31 d2	xorl	%edx, %edx
100024f62:	ff c8	decl	%eax
100024f64:	41 89 04 34	movl	%eax, (%r12,%rsi)
100024f68:	48 8b 35 71 d1 02 00	movq	184689(%rip), %rsi ## Objc selector ref: setState:
100024f6f:	49 8b 3c 0c	movq	(%r12,%rcx), %rdi
100024f73:	0f 94 c2	sete	%dl
100024f76:	49 89 f7	movq	%rsi, %r15
100024f79:	4c 89 f3	movq	%r14, %rbx
100024f7c:	41 ff d6	callq	*%r14
100024f7f:	41 be 01 00 00 00	movl	$1, %r14d
100024f85:	48 8b 05 e4 e5 02 00	movq	189924(%rip), %rax
100024f8c:	41 8b 04 04	movl	(%r12,%rax), %eax
100024f90:	4b 8b 7c f5 00	movq	(%r13,%r14,8), %rdi
100024f95:	31 d2	xorl	%edx, %edx
100024f97:	49 39 c6	cmpq	%rax, %r14
100024f9a:	0f 94 c2	sete	%dl
100024f9d:	4c 89 fe	movq	%r15, %rsi
100024fa0:	ff d3	callq	*%rbx
100024fa2:	49 ff c6	incq	%r14
100024fa5:	49 83 fe 08	cmpq	$8, %r14
100024fa9:	75 da	jne	0x100024f85
100024fab:	48 8b 0d 3e ce 02 00	movq	183870(%rip), %rcx ## Objc selector ref: setEnabled:
100024fb2:	48 8b 1d 6f e5 02 00	movq	189807(%rip), %rbx
100024fb9:	4c 01 e3	addq	%r12, %rbx
100024fbc:	48 8b 05 ad e5 02 00	movq	189869(%rip), %rax
100024fc3:	45 31 ff	xorl	%r15d, %r15d
100024fc6:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
100024fca:	49 89 c5	movq	%rax, %r13
100024fcd:	41 8b 04 04	movl	(%r12,%rax), %eax
100024fd1:	31 d2	xorl	%edx, %edx
100024fd3:	49 39 c7	cmpq	%rax, %r15
100024fd6:	0f 95 c2	setne	%dl
100024fd9:	49 89 ce	movq	%rcx, %r14
100024fdc:	48 89 ce	movq	%rcx, %rsi
100024fdf:	ff 15 3b 7c 01 00	callq	*97339(%rip) ## Objc message: -[%rdi setEnabled:]
100024fe5:	4c 89 e8	movq	%r13, %rax
100024fe8:	4c 89 f1	movq	%r14, %rcx
100024feb:	49 ff c7	incq	%r15
100024fee:	49 83 ff 08	cmpq	$8, %r15
100024ff2:	75 d2	jne	0x100024fc6
100024ff4:	4c 8b 3d e5 e4 02 00	movq	189669(%rip), %r15
100024ffb:	4d 01 e7	addq	%r12, %r15
100024ffe:	31 db	xorl	%ebx, %ebx
100025000:	49 8b 3c df	movq	(%r15,%rbx,8), %rdi
100025004:	43 8b 04 2c	movl	(%r12,%r13), %eax
100025008:	31 d2	xorl	%edx, %edx
10002500a:	48 39 c3	cmpq	%rax, %rbx
10002500d:	0f 95 c2	setne	%dl
100025010:	4c 89 f6	movq	%r14, %rsi
100025013:	ff 15 07 7c 01 00	callq	*97287(%rip) ## Objc message: -[%rdi setEnabled:]
100025019:	48 ff c3	incq	%rbx
10002501c:	48 83 fb 08	cmpq	$8, %rbx
100025020:	75 de	jne	0x100025000
100025022:	48 8b 35 a7 bb 02 00	movq	179111(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
100025029:	4c 89 e7	movq	%r12, %rdi
10002502c:	48 83 c4 08	addq	$8, %rsp
100025030:	5b	popq	%rbx
100025031:	41 5c	popq	%r12
100025033:	41 5d	popq	%r13
100025035:	41 5e	popq	%r14
100025037:	41 5f	popq	%r15
100025039:	5d	popq	%rbp
10002503a:	ff 25 e0 7b 01 00	jmpq	*97248(%rip) ## Objc message: -[%rdi UpdateColorCurveView]
100025040:	55	pushq	%rbp
100025041:	48 89 e5	movq	%rsp, %rbp
100025044:	41 57	pushq	%r15
100025046:	41 56	pushq	%r14
100025048:	53	pushq	%rbx
100025049:	50	pushq	%rax
10002504a:	48 89 d3	movq	%rdx, %rbx
10002504d:	49 89 fe	movq	%rdi, %r14
100025050:	48 8b 35 41 d3 02 00	movq	185153(%rip), %rsi ## Objc selector ref: tag
100025057:	4c 8b 3d c2 7b 01 00	movq	97218(%rip), %r15 ## Objc message: -[%rdi tag]
10002505e:	48 89 d7	movq	%rdx, %rdi
100025061:	41 ff d7	callq	*%r15
100025064:	48 8b 0d 75 e4 02 00	movq	189557(%rip), %rcx
10002506b:	4c 01 f1	addq	%r14, %rcx
10002506e:	48 c1 e0 20	shlq	$32, %rax
100025072:	48 ba 00 00 00 00 ff ff ff ff	movabsq	$-4294967296, %rdx
10002507c:	48 01 c2	addq	%rax, %rdx
10002507f:	48 c1 fa 1d	sarq	$29, %rdx
100025083:	48 8b 3c 0a	movq	(%rdx,%rcx), %rdi
100025087:	48 8b 35 12 d3 02 00	movq	185106(%rip), %rsi ## Objc selector ref: takeIntValueFrom:
10002508e:	48 89 da	movq	%rbx, %rdx
100025091:	41 ff d7	callq	*%r15
100025094:	48 8b 35 35 bb 02 00	movq	178997(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
10002509b:	4c 89 f7	movq	%r14, %rdi
10002509e:	4c 89 f8	movq	%r15, %rax
1000250a1:	48 83 c4 08	addq	$8, %rsp
1000250a5:	5b	popq	%rbx
1000250a6:	41 5e	popq	%r14
1000250a8:	41 5f	popq	%r15
1000250aa:	5d	popq	%rbp
1000250ab:	ff e0	jmpq	*%rax
1000250ad:	55	pushq	%rbp
1000250ae:	48 89 e5	movq	%rsp, %rbp
1000250b1:	81 f1 77 65 69 76	xorl	$1986618743, %ecx
1000250b7:	41 83 f0 24	xorl	$36, %r8d
1000250bb:	31 c0	xorl	%eax, %eax
1000250bd:	41 09 c8	orl	%ecx, %r8d
1000250c0:	0f 94 c0	sete	%al
1000250c3:	5d	popq	%rbp
1000250c4:	c3	retq
1000250c5:	55	pushq	%rbp
1000250c6:	48 89 e5	movq	%rsp, %rbp
1000250c9:	48 8d 05 d0 7d 01 00	leaq	97744(%rip), %rax ## Objc cfstring ref: @""
1000250d0:	5d	popq	%rbp
1000250d1:	c3	retq
1000250d2:	55	pushq	%rbp
1000250d3:	48 89 e5	movq	%rsp, %rbp
1000250d6:	41 57	pushq	%r15
1000250d8:	41 56	pushq	%r14
1000250da:	41 54	pushq	%r12
1000250dc:	53	pushq	%rbx
1000250dd:	48 83 ec 20	subq	$32, %rsp
1000250e1:	49 89 d6	movq	%rdx, %r14
1000250e4:	49 89 ff	movq	%rdi, %r15
1000250e7:	bf 77 65 69 76	movl	$1986618743, %edi
1000250ec:	e8 63 a1 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
1000250f1:	48 89 c3	movq	%rax, %rbx
1000250f4:	4c 89 f7	movq	%r14, %rdi
1000250f7:	48 89 c6	movq	%rax, %rsi
1000250fa:	e8 7f a1 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
1000250ff:	49 89 c4	movq	%rax, %r12
100025102:	48 89 df	movq	%rbx, %rdi
100025105:	e8 08 9e 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002510a:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10002510e:	66 0f 29 45 c0	movapd	%xmm0, -64(%rbp)
100025113:	66 0f 57 c0	xorpd	%xmm0, %xmm0
100025117:	f3 0f 11 45 dc	movss	%xmm0, -36(%rbp)
10002511c:	4d 85 e4	testq	%r12, %r12
10002511f:	0f 84 9a 00 00 00	je	0x1000251bf
100025125:	4c 89 e7	movq	%r12, %rdi
100025128:	e8 79 9d 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
10002512d:	0f 57 db	xorps	%xmm3, %xmm3
100025130:	48 83 f8 24	cmpq	$36, %rax
100025134:	0f 85 88 00 00 00	jne	0x1000251c2
10002513a:	4c 89 e7	movq	%r12, %rdi
10002513d:	e8 5e 9d 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100025142:	8b 48 08	movl	8(%rax), %ecx
100025145:	8b 50 0c	movl	12(%rax), %edx
100025148:	44 8b 70 20	movl	32(%rax), %r14d
10002514c:	0f c9	bswapl	%ecx
10002514e:	0f ca	bswapl	%edx
100025150:	0f 57 c0	xorps	%xmm0, %xmm0
100025153:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025157:	f2 0f 10 0d 01 2f 01 00	movsd	77569(%rip), %xmm1
10002515f:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100025163:	0f 57 db	xorps	%xmm3, %xmm3
100025166:	f2 0f 5a d8	cvtsd2ss	%xmm0, %xmm3
10002516a:	0f 57 c0	xorps	%xmm0, %xmm0
10002516d:	f2 0f 2a c2	cvtsi2sd	%edx, %xmm0
100025171:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
100025175:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100025179:	f3 0f 11 45 dc	movss	%xmm0, -36(%rbp)
10002517e:	f3 0f 6f 40 10	movdqu	16(%rax), %xmm0
100025183:	66 0f 38 00 05 34 41 01 00	pshufb	82228(%rip), %xmm0
10002518c:	f3 0f e6 c8	cvtdq2pd	%xmm0, %xmm1
100025190:	41 0f ce	bswapl	%r14d
100025193:	66 0f 70 c0 ee	pshufd	$238, %xmm0, %xmm0
100025198:	f3 0f e6 c0	cvtdq2pd	%xmm0, %xmm0
10002519c:	66 0f 28 15 dc 41 01 00	movapd	82396(%rip), %xmm2
1000251a4:	66 0f 59 ca	mulpd	%xmm2, %xmm1
1000251a8:	66 0f 5a c9	cvtpd2ps	%xmm1, %xmm1
1000251ac:	66 0f 59 c2	mulpd	%xmm2, %xmm0
1000251b0:	66 0f 5a c0	cvtpd2ps	%xmm0, %xmm0
1000251b4:	66 0f 14 c8	unpcklpd	%xmm0, %xmm1
1000251b8:	66 0f 29 4d c0	movapd	%xmm1, -64(%rbp)
1000251bd:	eb 03	jmp	0x1000251c2
1000251bf:	0f 57 db	xorps	%xmm3, %xmm3
1000251c2:	f3 0f 11 5d d8	movss	%xmm3, -40(%rbp)
1000251c7:	4c 89 e7	movq	%r12, %rdi
1000251ca:	e8 43 9d 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000251cf:	48 8b 05 c2 e3 02 00	movq	189378(%rip), %rax
1000251d6:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000251da:	48 8b 1d 57 cc 02 00	movq	183383(%rip), %rbx ## Objc selector ref: setFloatValue:
1000251e1:	4c 8b 25 38 7a 01 00	movq	96824(%rip), %r12 ## Objc message: -[%rdi setFloatValue:]
1000251e8:	48 89 de	movq	%rbx, %rsi
1000251eb:	f3 0f 10 45 d8	movss	-40(%rbp), %xmm0
1000251f0:	41 ff d4	callq	*%r12
1000251f3:	48 8b 05 a6 e3 02 00	movq	189350(%rip), %rax
1000251fa:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000251fe:	48 89 de	movq	%rbx, %rsi
100025201:	f3 0f 10 45 dc	movss	-36(%rbp), %xmm0
100025206:	41 ff d4	callq	*%r12
100025209:	48 8b 05 98 e3 02 00	movq	189336(%rip), %rax
100025210:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100025214:	48 89 de	movq	%rbx, %rsi
100025217:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10002521b:	41 ff d4	callq	*%r12
10002521e:	48 8b 05 8b e3 02 00	movq	189323(%rip), %rax
100025225:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100025229:	f3 0f 16 45 c0	movshdup	-64(%rbp), %xmm0
10002522e:	48 89 de	movq	%rbx, %rsi
100025231:	41 ff d4	callq	*%r12
100025234:	48 8b 05 7d e3 02 00	movq	189309(%rip), %rax
10002523b:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002523f:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
100025243:	0f 12 c0	movhlps	%xmm0, %xmm0
100025246:	48 89 de	movq	%rbx, %rsi
100025249:	41 ff d4	callq	*%r12
10002524c:	48 8b 05 6d e3 02 00	movq	189293(%rip), %rax
100025253:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100025257:	0f 28 45 c0	movaps	-64(%rbp), %xmm0
10002525b:	0f c6 c0 ff	shufps	$255, %xmm0, %xmm0
10002525f:	48 89 de	movq	%rbx, %rsi
100025262:	41 ff d4	callq	*%r12
100025265:	41 8d 46 f7	leal	-9(%r14), %eax
100025269:	31 c9	xorl	%ecx, %ecx
10002526b:	83 f8 f8	cmpl	$-8, %eax
10002526e:	44 0f 42 f1	cmovbl	%ecx, %r14d
100025272:	48 8b 3d 4f d3 02 00	movq	185167(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100025279:	48 8b 35 a8 d0 02 00	movq	184488(%rip), %rsi ## Objc selector ref: stringWithFormat:
100025280:	48 8d 15 39 a2 01 00	leaq	107065(%rip), %rdx ## Objc cfstring ref: @"Illuminant%d"
100025287:	44 89 f1	movl	%r14d, %ecx
10002528a:	31 c0	xorl	%eax, %eax
10002528c:	41 ff d4	callq	*%r12
10002528f:	48 89 c3	movq	%rax, %rbx
100025292:	48 8b 3d 07 d3 02 00	movq	185095(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025299:	48 8b 35 48 c4 02 00	movq	181320(%rip), %rsi ## Objc selector ref: mainBundle
1000252a0:	41 ff d4	callq	*%r12
1000252a3:	48 8b 35 b6 c3 02 00	movq	181174(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
1000252aa:	48 8d 0d ef 7b 01 00	leaq	97263(%rip), %rcx ## Objc cfstring ref: @""
1000252b1:	48 89 c7	movq	%rax, %rdi
1000252b4:	48 89 da	movq	%rbx, %rdx
1000252b7:	45 31 c0	xorl	%r8d, %r8d
1000252ba:	41 ff d4	callq	*%r12
1000252bd:	48 8b 0d 04 e3 02 00	movq	189188(%rip), %rcx
1000252c4:	49 8b 3c 0f	movq	(%r15,%rcx), %rdi
1000252c8:	48 8b 35 21 ce 02 00	movq	183841(%rip), %rsi ## Objc selector ref: setStringValue:
1000252cf:	48 89 c2	movq	%rax, %rdx
1000252d2:	4c 89 e0	movq	%r12, %rax
1000252d5:	48 83 c4 20	addq	$32, %rsp
1000252d9:	5b	popq	%rbx
1000252da:	41 5c	popq	%r12
1000252dc:	41 5e	popq	%r14
1000252de:	41 5f	popq	%r15
1000252e0:	5d	popq	%rbp
1000252e1:	ff e0	jmpq	*%rax
1000252e3:	55	pushq	%rbp
1000252e4:	48 89 e5	movq	%rsp, %rbp
1000252e7:	53	pushq	%rbx
1000252e8:	48 83 ec 18	subq	$24, %rsp
1000252ec:	48 89 fb	movq	%rdi, %rbx
1000252ef:	48 8b 05 da e2 02 00	movq	189146(%rip), %rax
1000252f6:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000252fa:	48 85 ff	testq	%rdi, %rdi
1000252fd:	74 05	je	0x100025304
1000252ff:	e8 d0 a0 00 00	callq	0x10002f3d4 ## symbol stub for: _free
100025304:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100025308:	48 89 1f	movq	%rbx, (%rdi)
10002530b:	48 8b 05 6e d5 02 00	movq	185710(%rip), %rax ## Objc class ref: MftTag
100025312:	48 89 47 08	movq	%rax, 8(%rdi)
100025316:	48 8b 35 33 bd 02 00	movq	179507(%rip), %rsi ## Objc selector ref: dealloc
10002531d:	e8 ba a1 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100025322:	48 83 c4 18	addq	$24, %rsp
100025326:	5b	popq	%rbx
100025327:	5d	popq	%rbp
100025328:	c3	retq
100025329:	55	pushq	%rbp
10002532a:	48 89 e5	movq	%rsp, %rbp
10002532d:	81 c1 cf 8b 99 92	addl	$2459536335, %ecx
100025333:	31 c0	xorl	%eax, %eax
100025335:	83 f9 02	cmpl	$2, %ecx
100025338:	0f 92 c0	setb	%al
10002533b:	5d	popq	%rbp
10002533c:	c3	retq
10002533d:	55	pushq	%rbp
10002533e:	48 89 e5	movq	%rsp, %rbp
100025341:	41 56	pushq	%r14
100025343:	53	pushq	%rbx
100025344:	81 f9 31 74 66 6d	cmpl	$1835430961, %ecx
10002534a:	74 54	je	0x1000253a0
10002534c:	81 f9 32 74 66 6d	cmpl	$1835430962, %ecx
100025352:	0f 85 8c 00 00 00	jne	0x1000253e4
100025358:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
10002535e:	0f 8f 87 00 00 00	jg	0x1000253eb
100025364:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
10002536a:	0f 8e f3 00 00 00	jle	0x100025463
100025370:	81 fa 32 42 32 41	cmpl	$1093812786, %edx
100025376:	0f 84 6c 01 00 00	je	0x1000254e8
10002537c:	81 fa 30 41 32 42	cmpl	$1110589744, %edx
100025382:	0f 84 69 01 00 00	je	0x1000254f1
100025388:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
10002538e:	0f 85 b7 01 00 00	jne	0x10002554b
100025394:	4c 8d 35 c5 a1 01 00	leaq	106949(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 16-bit, PCS to device conversion table"
10002539b:	e9 c4 01 00 00	jmp	0x100025564
1000253a0:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
1000253a6:	7f 7f	jg	0x100025427
1000253a8:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
1000253ae:	0f 8e d3 00 00 00	jle	0x100025487
1000253b4:	81 fa 32 42 32 41	cmpl	$1093812786, %edx
1000253ba:	0f 84 3a 01 00 00	je	0x1000254fa
1000253c0:	81 fa 30 41 32 42	cmpl	$1110589744, %edx
1000253c6:	0f 84 37 01 00 00	je	0x100025503
1000253cc:	81 fa 31 41 32 42	cmpl	$1110589745, %edx
1000253d2:	0f 85 85 01 00 00	jne	0x10002555d
1000253d8:	4c 8d 35 e1 a2 01 00	leaq	107233(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 8-bit, PCS to device conversion table"
1000253df:	e9 80 01 00 00	jmp	0x100025564
1000253e4:	31 c0	xorl	%eax, %eax
1000253e6:	5b	popq	%rbx
1000253e7:	41 5e	popq	%r14
1000253e9:	5d	popq	%rbp
1000253ea:	c3	retq
1000253eb:	81 fa 2f 65 72 70	cmpl	$1886545199, %edx
1000253f1:	0f 8e b4 00 00 00	jle	0x1000254ab
1000253f7:	81 fa 30 65 72 70	cmpl	$1886545200, %edx
1000253fd:	0f 84 09 01 00 00	je	0x10002550c
100025403:	81 fa 31 65 72 70	cmpl	$1886545201, %edx
100025409:	0f 84 06 01 00 00	je	0x100025515
10002540f:	81 fa 32 65 72 70	cmpl	$1886545202, %edx
100025415:	0f 85 30 01 00 00	jne	0x10002554b
10002541b:	4c 8d 35 de a1 01 00	leaq	106974(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 16-bit, PCS to PCS preview table"
100025422:	e9 3d 01 00 00	jmp	0x100025564
100025427:	81 fa 2f 65 72 70	cmpl	$1886545199, %edx
10002542d:	0f 8e 9c 00 00 00	jle	0x1000254cf
100025433:	81 fa 30 65 72 70	cmpl	$1886545200, %edx
100025439:	0f 84 df 00 00 00	je	0x10002551e
10002543f:	81 fa 31 65 72 70	cmpl	$1886545201, %edx
100025445:	0f 84 dc 00 00 00	je	0x100025527
10002544b:	81 fa 32 65 72 70	cmpl	$1886545202, %edx
100025451:	0f 85 06 01 00 00	jne	0x10002555d
100025457:	4c 8d 35 02 a3 01 00	leaq	107266(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 8-bit, PCS to PCS preview table"
10002545e:	e9 01 01 00 00	jmp	0x100025564
100025463:	81 fa 30 42 32 41	cmpl	$1093812784, %edx
100025469:	0f 84 c1 00 00 00	je	0x100025530
10002546f:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
100025475:	0f 85 d0 00 00 00	jne	0x10002554b
10002547b:	4c 8d 35 7e a0 01 00	leaq	106622(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 16-bit, device to PCS conversion table"
100025482:	e9 dd 00 00 00	jmp	0x100025564
100025487:	81 fa 30 42 32 41	cmpl	$1093812784, %edx
10002548d:	0f 84 a6 00 00 00	je	0x100025539
100025493:	81 fa 31 42 32 41	cmpl	$1093812785, %edx
100025499:	0f 85 be 00 00 00	jne	0x10002555d
10002549f:	4c 8d 35 ba a1 01 00	leaq	106938(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 8-bit, device to PCS conversion table"
1000254a6:	e9 b9 00 00 00	jmp	0x100025564
1000254ab:	81 fa 32 41 32 42	cmpl	$1110589746, %edx
1000254b1:	0f 84 8b 00 00 00	je	0x100025542
1000254b7:	81 fa 74 6d 61 67	cmpl	$1734438260, %edx
1000254bd:	0f 85 88 00 00 00	jne	0x10002554b
1000254c3:	4c 8d 35 d6 a0 01 00	leaq	106710(%rip), %r14 ## Objc cfstring ref: @"16-bit, PCS to gamut check table"
1000254ca:	e9 95 00 00 00	jmp	0x100025564
1000254cf:	81 fa 32 41 32 42	cmpl	$1110589746, %edx
1000254d5:	74 7d	je	0x100025554
1000254d7:	81 fa 74 6d 61 67	cmpl	$1734438260, %edx
1000254dd:	75 7e	jne	0x10002555d
1000254df:	4c 8d 35 1a a2 01 00	leaq	107034(%rip), %r14 ## Objc cfstring ref: @"8-bit, PCS to gamut check table"
1000254e6:	eb 7c	jmp	0x100025564
1000254e8:	4c 8d 35 31 a0 01 00	leaq	106545(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 16-bit, device to PCS conversion table"
1000254ef:	eb 73	jmp	0x100025564
1000254f1:	4c 8d 35 48 a0 01 00	leaq	106568(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 16-bit, PCS to device conversion table"
1000254f8:	eb 6a	jmp	0x100025564
1000254fa:	4c 8d 35 7f a1 01 00	leaq	106879(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 8-bit, device to PCS conversion table"
100025501:	eb 61	jmp	0x100025564
100025503:	4c 8d 35 96 a1 01 00	leaq	106902(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 8-bit, PCS to device conversion table"
10002550a:	eb 58	jmp	0x100025564
10002550c:	4c 8d 35 ad a0 01 00	leaq	106669(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 16-bit, PCS to PCS preview table"
100025513:	eb 4f	jmp	0x100025564
100025515:	4c 8d 35 c4 a0 01 00	leaq	106692(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 16-bit, PCS to PCS preview table"
10002551c:	eb 46	jmp	0x100025564
10002551e:	4c 8d 35 fb a1 01 00	leaq	107003(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 8-bit, PCS to PCS preview table"
100025525:	eb 3d	jmp	0x100025564
100025527:	4c 8d 35 12 a2 01 00	leaq	107026(%rip), %r14 ## Objc cfstring ref: @"Intent-1, 8-bit, PCS to PCS preview table"
10002552e:	eb 34	jmp	0x100025564
100025530:	4c 8d 35 a9 9f 01 00	leaq	106409(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 16-bit, device to PCS conversion table"
100025537:	eb 2b	jmp	0x100025564
100025539:	4c 8d 35 00 a1 01 00	leaq	106752(%rip), %r14 ## Objc cfstring ref: @"Intent-0, 8-bit, device to PCS conversion table"
100025540:	eb 22	jmp	0x100025564
100025542:	4c 8d 35 37 a0 01 00	leaq	106551(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 16-bit, PCS to device conversion table"
100025549:	eb 19	jmp	0x100025564
10002554b:	4c 8d 35 ce a0 01 00	leaq	106702(%rip), %r14 ## Objc cfstring ref: @"16-bit conversion table"
100025552:	eb 10	jmp	0x100025564
100025554:	4c 8d 35 85 a1 01 00	leaq	106885(%rip), %r14 ## Objc cfstring ref: @"Intent-2, 8-bit, PCS to device conversion table"
10002555b:	eb 07	jmp	0x100025564
10002555d:	4c 8d 35 1c a2 01 00	leaq	107036(%rip), %r14 ## Objc cfstring ref: @"8-bit conversion table"
100025564:	48 8b 3d 35 d0 02 00	movq	184373(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002556b:	48 8b 35 76 c1 02 00	movq	180598(%rip), %rsi ## Objc selector ref: mainBundle
100025572:	48 8b 1d a7 76 01 00	movq	95911(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025579:	ff d3	callq	*%rbx
10002557b:	48 8b 35 de c0 02 00	movq	180446(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025582:	48 8d 0d 17 79 01 00	leaq	96535(%rip), %rcx ## Objc cfstring ref: @""
100025589:	48 89 c7	movq	%rax, %rdi
10002558c:	4c 89 f2	movq	%r14, %rdx
10002558f:	45 31 c0	xorl	%r8d, %r8d
100025592:	48 89 d8	movq	%rbx, %rax
100025595:	5b	popq	%rbx
100025596:	41 5e	popq	%r14
100025598:	5d	popq	%rbp
100025599:	ff e0	jmpq	*%rax
10002559b:	55	pushq	%rbp
10002559c:	48 89 e5	movq	%rsp, %rbp
10002559f:	41 57	pushq	%r15
1000255a1:	41 56	pushq	%r14
1000255a3:	41 55	pushq	%r13
1000255a5:	41 54	pushq	%r12
1000255a7:	53	pushq	%rbx
1000255a8:	48 83 ec 18	subq	$24, %rsp
1000255ac:	45 89 c4	movl	%r8d, %r12d
1000255af:	41 89 ce	movl	%ecx, %r14d
1000255b2:	49 89 d7	movq	%rdx, %r15
1000255b5:	49 89 fd	movq	%rdi, %r13
1000255b8:	48 89 d7	movq	%rdx, %rdi
1000255bb:	e8 b2 9c 00 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
1000255c0:	48 85 c0	testq	%rax, %rax
1000255c3:	0f 84 f7 00 00 00	je	0x1000256c0
1000255c9:	48 89 c3	movq	%rax, %rbx
1000255cc:	44 89 65 cc	movl	%r12d, -52(%rbp)
1000255d0:	48 89 c7	movq	%rax, %rdi
1000255d3:	e8 c8 98 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
1000255d8:	8b 48 10	movl	16(%rax), %ecx
1000255db:	89 4d d0	movl	%ecx, -48(%rbp)
1000255de:	8b 40 14	movl	20(%rax), %eax
1000255e1:	89 45 d4	movl	%eax, -44(%rbp)
1000255e4:	48 89 df	movq	%rbx, %rdi
1000255e7:	e8 26 99 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000255ec:	44 89 f7	movl	%r14d, %edi
1000255ef:	e8 60 9c 00 00	callq	0x10002f254 ## symbol stub for: _ColorSyncCreateSignatureFromFourCharCode
1000255f4:	48 89 c3	movq	%rax, %rbx
1000255f7:	4c 89 7d c0	movq	%r15, -64(%rbp)
1000255fb:	4c 89 ff	movq	%r15, %rdi
1000255fe:	48 89 c6	movq	%rax, %rsi
100025601:	e8 78 9c 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
100025606:	49 89 c4	movq	%rax, %r12
100025609:	48 89 df	movq	%rbx, %rdi
10002560c:	e8 01 99 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100025611:	4d 85 e4	testq	%r12, %r12
100025614:	0f 84 c7 00 00 00	je	0x1000256e1
10002561a:	44 89 75 c8	movl	%r14d, -56(%rbp)
10002561e:	4c 89 e7	movq	%r12, %rdi
100025621:	e8 80 98 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100025626:	48 89 c7	movq	%rax, %rdi
100025629:	e8 84 9e 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
10002562e:	48 8b 1d 9b df 02 00	movq	188315(%rip), %rbx
100025635:	49 89 44 1d 00	movq	%rax, (%r13,%rbx)
10002563a:	48 85 c0	testq	%rax, %rax
10002563d:	0f 84 ad 00 00 00	je	0x1000256f0
100025643:	49 89 c6	movq	%rax, %r14
100025646:	4c 89 e7	movq	%r12, %rdi
100025649:	e8 52 98 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10002564e:	49 89 c7	movq	%rax, %r15
100025651:	4c 89 e7	movq	%r12, %rdi
100025654:	e8 4d 98 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100025659:	49 8b 5c 1d 00	movq	(%r13,%rbx), %rbx
10002565e:	4c 89 f7	movq	%r14, %rdi
100025661:	4c 89 fe	movq	%r15, %rsi
100025664:	48 89 c2	movq	%rax, %rdx
100025667:	e8 4c 9e 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
10002566c:	4c 89 e7	movq	%r12, %rdi
10002566f:	e8 9e 98 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100025674:	48 85 db	testq	%rbx, %rbx
100025677:	8b 75 c8	movl	-56(%rbp), %esi
10002567a:	74 65	je	0x1000256e1
10002567c:	89 f2	movl	%esi, %edx
10002567e:	81 e2 00 ff ff ff	andl	$4294967040, %edx
100025684:	48 8d 05 55 df 02 00	leaq	188245(%rip), %rax
10002568b:	48 8d 0d 46 df 02 00	leaq	188230(%rip), %rcx
100025692:	81 fa 00 42 32 41	cmpl	$1093812736, %edx
100025698:	74 6c	je	0x100025706
10002569a:	81 fa 00 65 72 70	cmpl	$1886545152, %edx
1000256a0:	44 8b 4d cc	movl	-52(%rbp), %r9d
1000256a4:	4c 8b 3d 25 df 02 00	movq	188197(%rip), %r15
1000256ab:	74 6c	je	0x100025719
1000256ad:	81 fa 00 41 32 42	cmpl	$1110589696, %edx
1000256b3:	75 6b	jne	0x100025720
1000256b5:	8b 55 d4	movl	-44(%rbp), %edx
1000256b8:	8b 75 d0	movl	-48(%rbp), %esi
1000256bb:	e9 8c 00 00 00	jmp	0x10002574c
1000256c0:	48 8d 3d 99 90 01 00	leaq	102553(%rip), %rdi ## Objc cfstring ref: @"ColorSyncProfileCopyHeader in thread failed
"
1000256c7:	31 c0	xorl	%eax, %eax
1000256c9:	e8 2e 9c 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
1000256ce:	48 83 c4 18	addq	$24, %rsp
1000256d2:	5b	popq	%rbx
1000256d3:	41 5c	popq	%r12
1000256d5:	41 5d	popq	%r13
1000256d7:	41 5e	popq	%r14
1000256d9:	41 5f	popq	%r15
1000256db:	5d	popq	%rbp
1000256dc:	e9 f7 9b 00 00	jmp	0x10002f2d8 ## symbol stub for: _NSBeep
1000256e1:	48 83 c4 18	addq	$24, %rsp
1000256e5:	5b	popq	%rbx
1000256e6:	41 5c	popq	%r12
1000256e8:	41 5d	popq	%r13
1000256ea:	41 5e	popq	%r14
1000256ec:	41 5f	popq	%r15
1000256ee:	5d	popq	%rbp
1000256ef:	c3	retq
1000256f0:	4c 89 e7	movq	%r12, %rdi
1000256f3:	48 83 c4 18	addq	$24, %rsp
1000256f7:	5b	popq	%rbx
1000256f8:	41 5c	popq	%r12
1000256fa:	41 5d	popq	%r13
1000256fc:	41 5e	popq	%r14
1000256fe:	41 5f	popq	%r15
100025700:	5d	popq	%rbp
100025701:	e9 0c 98 00 00	jmp	0x10002ef12 ## symbol stub for: _CFRelease
100025706:	8b 55 d0	movl	-48(%rbp), %edx
100025709:	8b 75 d4	movl	-44(%rbp), %esi
10002570c:	44 8b 4d cc	movl	-52(%rbp), %r9d
100025710:	4c 8b 3d b9 de 02 00	movq	188089(%rip), %r15
100025717:	eb 33	jmp	0x10002574c
100025719:	8b 75 d4	movl	-44(%rbp), %esi
10002571c:	89 f2	movl	%esi, %edx
10002571e:	eb 2c	jmp	0x10002574c
100025720:	31 ff	xorl	%edi, %edi
100025722:	81 fe 74 6d 61 67	cmpl	$1734438260, %esi
100025728:	48 8d 05 a9 de 02 00	leaq	188073(%rip), %rax
10002572f:	4c 8d 05 aa de 02 00	leaq	188074(%rip), %r8
100025736:	4c 89 c1	movq	%r8, %rcx
100025739:	48 0f 44 c8	cmoveq	%rax, %rcx
10002573d:	8b 55 d4	movl	-44(%rbp), %edx
100025740:	0f 45 d7	cmovnel	%edi, %edx
100025743:	49 0f 44 c0	cmoveq	%r8, %rax
100025747:	0f 44 fe	cmovel	%esi, %edi
10002574a:	89 fe	movl	%edi, %esi
10002574c:	48 8b 09	movq	(%rcx), %rcx
10002574f:	41 89 54 0d 00	movl	%edx, (%r13,%rcx)
100025754:	48 8b 00	movq	(%rax), %rax
100025757:	41 89 74 05 00	movl	%esi, (%r13,%rax)
10002575c:	0f b6 43 0a	movzbl	10(%rbx), %eax
100025760:	48 8b 0d 81 de 02 00	movq	188033(%rip), %rcx
100025767:	41 89 44 0d 00	movl	%eax, (%r13,%rcx)
10002576c:	0f b6 43 08	movzbl	8(%rbx), %eax
100025770:	48 8b 15 79 de 02 00	movq	188025(%rip), %rdx
100025777:	41 89 44 15 00	movl	%eax, (%r13,%rdx)
10002577c:	0f b6 43 09	movzbl	9(%rbx), %eax
100025780:	4c 8b 15 71 de 02 00	movq	188017(%rip), %r10
100025787:	43 89 44 15 00	movl	%eax, (%r13,%r10)
10002578c:	41 81 f9 32 74 66 6d	cmpl	$1835430962, %r9d
100025793:	75 30	jne	0x1000257c5
100025795:	0f b7 43 30	movzwl	48(%rbx), %eax
100025799:	66 c1 c0 08	rolw	$8, %ax
10002579d:	0f b7 c0	movzwl	%ax, %eax
1000257a0:	48 8b 3d 59 de 02 00	movq	187993(%rip), %rdi
1000257a7:	41 89 44 3d 00	movl	%eax, (%r13,%rdi)
1000257ac:	0f b7 43 32	movzwl	50(%rbx), %eax
1000257b0:	66 c1 c0 08	rolw	$8, %ax
1000257b4:	0f b7 c0	movzwl	%ax, %eax
1000257b7:	41 b9 34 00 00 00	movl	$52, %r9d
1000257bd:	41 bb 02 00 00 00	movl	$2, %r11d
1000257c3:	eb 21	jmp	0x1000257e6
1000257c5:	48 8b 3d 34 de 02 00	movq	187956(%rip), %rdi
1000257cc:	41 c7 44 3d 00 00 01 00 00	movl	$256, (%r13,%rdi)
1000257d5:	41 b9 30 00 00 00	movl	$48, %r9d
1000257db:	41 bb 01 00 00 00	movl	$1, %r11d
1000257e1:	b8 00 01 00 00	movl	$256, %eax
1000257e6:	48 8b 35 1b de 02 00	movq	187931(%rip), %rsi
1000257ed:	41 89 44 35 00	movl	%eax, (%r13,%rsi)
1000257f2:	48 8b 05 17 de 02 00	movq	187927(%rip), %rax
1000257f9:	45 89 5c 05 00	movl	%r11d, (%r13,%rax)
1000257fe:	41 8b 54 15 00	movl	(%r13,%rdx), %edx
100025803:	85 d2	testl	%edx, %edx
100025805:	74 1c	je	0x100025823
100025807:	41 8b 44 0d 00	movl	(%r13,%rcx), %eax
10002580c:	bb 01 00 00 00	movl	$1, %ebx
100025811:	66 b9 01 00	movw	$1, %cx
100025815:	0f af d8	imull	%eax, %ebx
100025818:	0f b7 f1	movzwl	%cx, %esi
10002581b:	ff c1	incl	%ecx
10002581d:	39 f2	cmpl	%esi, %edx
10002581f:	77 f4	ja	0x100025815
100025821:	eb 05	jmp	0x100025828
100025823:	bb 01 00 00 00	movl	$1, %ebx
100025828:	47 8b 74 15 00	movl	(%r13,%r10), %r14d
10002582d:	41 8b 7c 3d 00	movl	(%r13,%rdi), %edi
100025832:	41 0f af fb	imull	%r11d, %edi
100025836:	41 89 fa	movl	%edi, %r10d
100025839:	44 0f af d2	imull	%edx, %r10d
10002583d:	85 d2	testl	%edx, %edx
10002583f:	74 30	je	0x100025871
100025841:	45 89 cc	movl	%r9d, %r12d
100025844:	48 8b 05 cd dd 02 00	movq	187853(%rip), %rax
10002584b:	4c 01 e8	addq	%r13, %rax
10002584e:	31 f6	xorl	%esi, %esi
100025850:	4b 8b 4c 3d 00	movq	(%r13,%r15), %rcx
100025855:	4c 01 e1	addq	%r12, %rcx
100025858:	41 89 f8	movl	%edi, %r8d
10002585b:	44 0f af c6	imull	%esi, %r8d
10002585f:	49 01 c8	addq	%rcx, %r8
100025862:	89 f1	movl	%esi, %ecx
100025864:	4c 89 04 c8	movq	%r8, (%rax,%rcx,8)
100025868:	ff c6	incl	%esi
10002586a:	0f b7 f6	movzwl	%si, %esi
10002586d:	39 f2	cmpl	%esi, %edx
10002586f:	77 df	ja	0x100025850
100025871:	45 01 ca	addl	%r9d, %r10d
100025874:	45 85 f6	testl	%r14d, %r14d
100025877:	74 49	je	0x1000258c2
100025879:	41 0f af db	imull	%r11d, %ebx
10002587d:	41 0f af de	imull	%r14d, %ebx
100025881:	44 01 d3	addl	%r10d, %ebx
100025884:	89 da	movl	%ebx, %edx
100025886:	48 8b 05 7b dd 02 00	movq	187771(%rip), %rax
10002588d:	41 8b 7c 05 00	movl	(%r13,%rax), %edi
100025892:	48 8b 0d 87 dd 02 00	movq	187783(%rip), %rcx
100025899:	4c 01 e9	addq	%r13, %rcx
10002589c:	31 c0	xorl	%eax, %eax
10002589e:	4b 8b 74 3d 00	movq	(%r13,%r15), %rsi
1000258a3:	48 01 d6	addq	%rdx, %rsi
1000258a6:	89 c3	movl	%eax, %ebx
1000258a8:	41 0f af db	imull	%r11d, %ebx
1000258ac:	0f af df	imull	%edi, %ebx
1000258af:	48 01 f3	addq	%rsi, %rbx
1000258b2:	89 c6	movl	%eax, %esi
1000258b4:	48 89 1c f1	movq	%rbx, (%rcx,%rsi,8)
1000258b8:	ff c0	incl	%eax
1000258ba:	0f b7 c0	movzwl	%ax, %eax
1000258bd:	41 39 c6	cmpl	%eax, %r14d
1000258c0:	77 dc	ja	0x10002589e
1000258c2:	44 89 d0	movl	%r10d, %eax
1000258c5:	4b 03 44 3d 00	addq	(%r13,%r15), %rax
1000258ca:	48 8b 0d 57 dd 02 00	movq	187735(%rip), %rcx
1000258d1:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
1000258d6:	48 8b 05 53 dd 02 00	movq	187731(%rip), %rax
1000258dd:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
1000258e2:	48 8b 35 5f c7 02 00	movq	182111(%rip), %rsi ## Objc selector ref: setProfile:tagType:
1000258e9:	48 8b 1d 30 73 01 00	movq	95024(%rip), %rbx ## Objc message: -[%rdi setProfile:tagType:]
1000258f0:	48 8b 55 c0	movq	-64(%rbp), %rdx
1000258f4:	8b 4d c8	movl	-56(%rbp), %ecx
1000258f7:	ff d3	callq	*%rbx
1000258f9:	48 8b 35 b8 b2 02 00	movq	176824(%rip), %rsi ## Objc selector ref: SetupUI
100025900:	4c 89 ef	movq	%r13, %rdi
100025903:	48 89 d8	movq	%rbx, %rax
100025906:	48 83 c4 18	addq	$24, %rsp
10002590a:	5b	popq	%rbx
10002590b:	41 5c	popq	%r12
10002590d:	41 5d	popq	%r13
10002590f:	41 5e	popq	%r14
100025911:	41 5f	popq	%r15
100025913:	5d	popq	%rbp
100025914:	ff e0	jmpq	*%rax
100025916:	55	pushq	%rbp
100025917:	48 89 e5	movq	%rsp, %rbp
10002591a:	41 57	pushq	%r15
10002591c:	41 56	pushq	%r14
10002591e:	53	pushq	%rbx
10002591f:	50	pushq	%rax
100025920:	89 cb	movl	%ecx, %ebx
100025922:	81 fa 1f 42 47 52	cmpl	$1380401695, %edx
100025928:	7e 4a	jle	0x100025974
10002592a:	81 fa 1f 79 78 59	cmpl	$1501067551, %edx
100025930:	7f 6f	jg	0x1000259a1
100025932:	81 fa 20 42 47 52	cmpl	$1380401696, %edx
100025938:	0f 84 1b 01 00 00	je	0x100025a59
10002593e:	81 fa 20 5a 59 58	cmpl	$1482250784, %edx
100025944:	74 7f	je	0x1000259c5
100025946:	81 fa 72 62 43 59	cmpl	$1497588338, %edx
10002594c:	0f 85 3a 02 00 00	jne	0x100025b8c
100025952:	83 fb 03	cmpl	$3, %ebx
100025955:	0f 83 31 02 00 00	jae	0x100025b8c
10002595b:	48 63 c3	movslq	%ebx, %rax
10002595e:	48 8d 0d 73 74 01 00	leaq	95347(%rip), %rcx
100025965:	48 8b 04 c1	movq	(%rcx,%rax,8), %rax
100025969:	48 83 c4 08	addq	$8, %rsp
10002596d:	5b	popq	%rbx
10002596e:	41 5e	popq	%r14
100025970:	41 5f	popq	%r15
100025972:	5d	popq	%rbp
100025973:	c3	retq
100025974:	81 fa 58 41 52 47	cmpl	$1196573016, %edx
10002597a:	0f 8e 81 00 00 00	jle	0x100025a01
100025980:	81 fa 59 41 52 47	cmpl	$1196573017, %edx
100025986:	0f 84 11 01 00 00	je	0x100025a9d
10002598c:	81 fa 20 62 61 4c	cmpl	$1281450528, %edx
100025992:	74 31	je	0x1000259c5
100025994:	81 fa 20 76 75 4c	cmpl	$1282766368, %edx
10002599a:	74 29	je	0x1000259c5
10002599c:	e9 eb 01 00 00	jmp	0x100025b8c
1000259a1:	81 fa 42 47 52 73	cmpl	$1934772034, %edx
1000259a7:	0f 84 ac 00 00 00	je	0x100025a59
1000259ad:	81 fa 74 6d 61 67	cmpl	$1734438260, %edx
1000259b3:	0f 84 16 01 00 00	je	0x100025acf
1000259b9:	81 fa 20 79 78 59	cmpl	$1501067552, %edx
1000259bf:	0f 85 c7 01 00 00	jne	0x100025b8c
1000259c5:	83 fb 02	cmpl	$2, %ebx
1000259c8:	0f 8f be 01 00 00	jg	0x100025b8c
1000259ce:	48 8b 3d f3 cb 02 00	movq	183283(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
1000259d5:	c1 e3 03	shll	$3, %ebx
1000259d8:	b1 18	movb	$24, %cl
1000259da:	28 d9	subb	%bl, %cl
1000259dc:	d3 ea	shrl	%cl, %edx
1000259de:	0f b6 ca	movzbl	%dl, %ecx
1000259e1:	48 8b 35 40 c9 02 00	movq	182592(%rip), %rsi ## Objc selector ref: stringWithFormat:
1000259e8:	48 8d 15 b1 99 01 00	leaq	104881(%rip), %rdx ## Objc cfstring ref: @"%c"
1000259ef:	31 c0	xorl	%eax, %eax
1000259f1:	48 83 c4 08	addq	$8, %rsp
1000259f5:	5b	popq	%rbx
1000259f6:	41 5e	popq	%r14
1000259f8:	41 5f	popq	%r15
1000259fa:	5d	popq	%rbp
1000259fb:	ff 25 1f 72 01 00	jmpq	*94751(%rip) ## Objc message: +[NSString stringWithFormat:]
100025a01:	81 fa 20 59 4d 43	cmpl	$1129142560, %edx
100025a07:	74 0c	je	0x100025a15
100025a09:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
100025a0f:	0f 85 77 01 00 00	jne	0x100025b8c
100025a15:	83 fb 02	cmpl	$2, %ebx
100025a18:	0f 84 e3 00 00 00	je	0x100025b01
100025a1e:	83 fb 01	cmpl	$1, %ebx
100025a21:	0f 84 04 01 00 00	je	0x100025b2b
100025a27:	85 db	testl	%ebx, %ebx
100025a29:	0f 85 26 01 00 00	jne	0x100025b55
100025a2f:	48 8b 3d 6a cb 02 00	movq	183146(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025a36:	48 8b 35 ab bc 02 00	movq	179371(%rip), %rsi ## Objc selector ref: mainBundle
100025a3d:	48 8b 1d dc 71 01 00	movq	94684(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025a44:	ff d3	callq	*%rbx
100025a46:	48 8b 35 13 bc 02 00	movq	179219(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025a4d:	48 8d 15 ec 99 01 00	leaq	104940(%rip), %rdx ## Objc cfstring ref: @"Cyan"
100025a54:	e9 df 01 00 00	jmp	0x100025c38
100025a59:	83 fb 02	cmpl	$2, %ebx
100025a5c:	0f 84 8a 01 00 00	je	0x100025bec
100025a62:	83 fb 01	cmpl	$1, %ebx
100025a65:	0f 84 a8 01 00 00	je	0x100025c13
100025a6b:	85 db	testl	%ebx, %ebx
100025a6d:	0f 85 19 01 00 00	jne	0x100025b8c
100025a73:	48 8b 3d 26 cb 02 00	movq	183078(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025a7a:	48 8b 35 67 bc 02 00	movq	179303(%rip), %rsi ## Objc selector ref: mainBundle
100025a81:	48 8b 1d 98 71 01 00	movq	94616(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025a88:	ff d3	callq	*%rbx
100025a8a:	48 8b 35 cf bb 02 00	movq	179151(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025a91:	48 8d 15 a8 8e 01 00	leaq	102056(%rip), %rdx ## Objc cfstring ref: @"Red"
100025a98:	e9 9b 01 00 00	jmp	0x100025c38
100025a9d:	85 db	testl	%ebx, %ebx
100025a9f:	0f 85 e7 00 00 00	jne	0x100025b8c
100025aa5:	48 8b 3d f4 ca 02 00	movq	183028(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025aac:	48 8b 35 35 bc 02 00	movq	179253(%rip), %rsi ## Objc selector ref: mainBundle
100025ab3:	48 8b 1d 66 71 01 00	movq	94566(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025aba:	ff d3	callq	*%rbx
100025abc:	48 8b 35 9d bb 02 00	movq	179101(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025ac3:	48 8d 15 56 84 01 00	leaq	99414(%rip), %rdx ## Objc cfstring ref: @"Gray"
100025aca:	e9 69 01 00 00	jmp	0x100025c38
100025acf:	85 db	testl	%ebx, %ebx
100025ad1:	0f 85 b5 00 00 00	jne	0x100025b8c
100025ad7:	48 8b 3d c2 ca 02 00	movq	182978(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025ade:	48 8b 35 03 bc 02 00	movq	179203(%rip), %rsi ## Objc selector ref: mainBundle
100025ae5:	48 8b 1d 34 71 01 00	movq	94516(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025aec:	ff d3	callq	*%rbx
100025aee:	48 8b 35 6b bb 02 00	movq	179051(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025af5:	48 8d 15 24 99 01 00	leaq	104740(%rip), %rdx ## Objc cfstring ref: @"Gamut"
100025afc:	e9 37 01 00 00	jmp	0x100025c38
100025b01:	48 8b 3d 98 ca 02 00	movq	182936(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025b08:	48 8b 35 d9 bb 02 00	movq	179161(%rip), %rsi ## Objc selector ref: mainBundle
100025b0f:	48 8b 1d 0a 71 01 00	movq	94474(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025b16:	ff d3	callq	*%rbx
100025b18:	48 8b 35 41 bb 02 00	movq	179009(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025b1f:	48 8d 15 5a 99 01 00	leaq	104794(%rip), %rdx ## Objc cfstring ref: @"Yellow"
100025b26:	e9 0d 01 00 00	jmp	0x100025c38
100025b2b:	48 8b 3d 6e ca 02 00	movq	182894(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025b32:	48 8b 35 af bb 02 00	movq	179119(%rip), %rsi ## Objc selector ref: mainBundle
100025b39:	48 8b 1d e0 70 01 00	movq	94432(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025b40:	ff d3	callq	*%rbx
100025b42:	48 8b 35 17 bb 02 00	movq	178967(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025b49:	48 8d 15 10 99 01 00	leaq	104720(%rip), %rdx ## Objc cfstring ref: @"Magenta"
100025b50:	e9 e3 00 00 00	jmp	0x100025c38
100025b55:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
100025b5b:	75 2f	jne	0x100025b8c
100025b5d:	83 fb 03	cmpl	$3, %ebx
100025b60:	75 2a	jne	0x100025b8c
100025b62:	48 8b 3d 37 ca 02 00	movq	182839(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025b69:	48 8b 35 78 bb 02 00	movq	179064(%rip), %rsi ## Objc selector ref: mainBundle
100025b70:	48 8b 1d a9 70 01 00	movq	94377(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025b77:	ff d3	callq	*%rbx
100025b79:	48 8b 35 e0 ba 02 00	movq	178912(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025b80:	48 8d 15 f9 8d 01 00	leaq	101881(%rip), %rdx ## Objc cfstring ref: @"Black"
100025b87:	e9 ac 00 00 00	jmp	0x100025c38
100025b8c:	4c 8b 35 35 ca 02 00	movq	182837(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSString
100025b93:	48 8b 3d 06 ca 02 00	movq	182790(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025b9a:	48 8b 35 47 bb 02 00	movq	179015(%rip), %rsi ## Objc selector ref: mainBundle
100025ba1:	4c 8b 3d 78 70 01 00	movq	94328(%rip), %r15 ## Objc message: +[NSBundle mainBundle]
100025ba8:	41 ff d7	callq	*%r15
100025bab:	48 8b 35 ae ba 02 00	movq	178862(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025bb2:	48 8d 15 e7 98 01 00	leaq	104679(%rip), %rdx ## Objc cfstring ref: @"Color %d"
100025bb9:	48 8d 0d e0 72 01 00	leaq	94944(%rip), %rcx ## Objc cfstring ref: @""
100025bc0:	48 89 c7	movq	%rax, %rdi
100025bc3:	45 31 c0	xorl	%r8d, %r8d
100025bc6:	41 ff d7	callq	*%r15
100025bc9:	ff c3	incl	%ebx
100025bcb:	48 8b 35 56 c7 02 00	movq	182102(%rip), %rsi ## Objc selector ref: stringWithFormat:
100025bd2:	4c 89 f7	movq	%r14, %rdi
100025bd5:	48 89 c2	movq	%rax, %rdx
100025bd8:	89 d9	movl	%ebx, %ecx
100025bda:	31 c0	xorl	%eax, %eax
100025bdc:	4d 89 f8	movq	%r15, %r8
100025bdf:	48 83 c4 08	addq	$8, %rsp
100025be3:	5b	popq	%rbx
100025be4:	41 5e	popq	%r14
100025be6:	41 5f	popq	%r15
100025be8:	5d	popq	%rbp
100025be9:	41 ff e0	jmpq	*%r8
100025bec:	48 8b 3d ad c9 02 00	movq	182701(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025bf3:	48 8b 35 ee ba 02 00	movq	178926(%rip), %rsi ## Objc selector ref: mainBundle
100025bfa:	48 8b 1d 1f 70 01 00	movq	94239(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025c01:	ff d3	callq	*%rbx
100025c03:	48 8b 35 56 ba 02 00	movq	178774(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025c0a:	48 8d 15 6f 94 01 00	leaq	103535(%rip), %rdx ## Objc cfstring ref: @"Blue"
100025c11:	eb 25	jmp	0x100025c38
100025c13:	48 8b 3d 86 c9 02 00	movq	182662(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100025c1a:	48 8b 35 c7 ba 02 00	movq	178887(%rip), %rsi ## Objc selector ref: mainBundle
100025c21:	48 8b 1d f8 6f 01 00	movq	94200(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
100025c28:	ff d3	callq	*%rbx
100025c2a:	48 8b 35 2f ba 02 00	movq	178735(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100025c31:	48 8d 15 28 94 01 00	leaq	103464(%rip), %rdx ## Objc cfstring ref: @"Green"
100025c38:	48 8d 0d 61 72 01 00	leaq	94817(%rip), %rcx ## Objc cfstring ref: @""
100025c3f:	48 89 c7	movq	%rax, %rdi
100025c42:	45 31 c0	xorl	%r8d, %r8d
100025c45:	48 89 d8	movq	%rbx, %rax
100025c48:	48 83 c4 08	addq	$8, %rsp
100025c4c:	5b	popq	%rbx
100025c4d:	41 5e	popq	%r14
100025c4f:	41 5f	popq	%r15
100025c51:	5d	popq	%rbp
100025c52:	ff e0	jmpq	*%rax
100025c54:	55	pushq	%rbp
100025c55:	48 89 e5	movq	%rsp, %rbp
100025c58:	41 57	pushq	%r15
100025c5a:	41 56	pushq	%r14
100025c5c:	41 55	pushq	%r13
100025c5e:	41 54	pushq	%r12
100025c60:	53	pushq	%rbx
100025c61:	48 83 ec 18	subq	$24, %rsp
100025c65:	45 89 c6	movl	%r8d, %r14d
100025c68:	89 cb	movl	%ecx, %ebx
100025c6a:	49 89 ff	movq	%rdi, %r15
100025c6d:	48 8b 35 54 be 02 00	movq	179796(%rip), %rsi ## Objc selector ref: removeAllItems
100025c74:	48 89 55 c8	movq	%rdx, -56(%rbp)
100025c78:	48 89 d7	movq	%rdx, %rdi
100025c7b:	ff 15 9f 6f 01 00	callq	*94111(%rip) ## Objc message: -[%rdi removeAllItems]
100025c81:	45 85 f6	testl	%r14d, %r14d
100025c84:	7e 43	jle	0x100025cc9
100025c86:	45 31 ed	xorl	%r13d, %r13d
100025c89:	48 8b 0d d0 af 02 00	movq	176080(%rip), %rcx ## Objc selector ref: addItemWithTitle:
100025c90:	48 89 4d d0	movq	%rcx, -48(%rbp)
100025c94:	4c 89 ff	movq	%r15, %rdi
100025c97:	48 8b 35 6a c6 02 00	movq	181866(%rip), %rsi ## Objc selector ref: stringForSpace:channel:
100025c9e:	89 da	movl	%ebx, %edx
100025ca0:	44 89 e9	movl	%r13d, %ecx
100025ca3:	45 89 f4	movl	%r14d, %r12d
100025ca6:	4c 8b 35 73 6f 01 00	movq	94067(%rip), %r14 ## Objc message: -[%rdi stringForSpace:channel:]
100025cad:	41 ff d6	callq	*%r14
100025cb0:	48 8b 7d c8	movq	-56(%rbp), %rdi
100025cb4:	48 8b 75 d0	movq	-48(%rbp), %rsi
100025cb8:	48 89 c2	movq	%rax, %rdx
100025cbb:	41 ff d6	callq	*%r14
100025cbe:	45 89 e6	movl	%r12d, %r14d
100025cc1:	41 ff c5	incl	%r13d
100025cc4:	45 39 ec	cmpl	%r13d, %r12d
100025cc7:	75 cb	jne	0x100025c94
100025cc9:	48 83 c4 18	addq	$24, %rsp
100025ccd:	5b	popq	%rbx
100025cce:	41 5c	popq	%r12
100025cd0:	41 5d	popq	%r13
100025cd2:	41 5e	popq	%r14
100025cd4:	41 5f	popq	%r15
100025cd6:	5d	popq	%rbp
100025cd7:	c3	retq
100025cd8:	55	pushq	%rbp
100025cd9:	48 89 e5	movq	%rsp, %rbp
100025cdc:	41 57	pushq	%r15
100025cde:	41 56	pushq	%r14
100025ce0:	41 55	pushq	%r13
100025ce2:	41 54	pushq	%r12
100025ce4:	53	pushq	%rbx
100025ce5:	48 83 ec 48	subq	$72, %rsp
100025ce9:	48 89 fb	movq	%rdi, %rbx
100025cec:	48 8b 05 dd d8 02 00	movq	186589(%rip), %rax
100025cf3:	4c 8b 2c 07	movq	(%rdi,%rax), %r13
100025cf7:	48 8b 05 3a d9 02 00	movq	186682(%rip), %rax
100025cfe:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100025d02:	49 89 c4	movq	%rax, %r12
100025d05:	48 8b 35 2c b1 02 00	movq	176428(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025d0c:	4c 8b 3d 0d 6f 01 00	movq	93965(%rip), %r15 ## Objc message: -[%rdi cellAtRow:column:]
100025d13:	31 d2	xorl	%edx, %edx
100025d15:	31 c9	xorl	%ecx, %ecx
100025d17:	41 ff d7	callq	*%r15
100025d1a:	41 8b 4d 0c	movl	12(%r13), %ecx
100025d1e:	0f c9	bswapl	%ecx
100025d20:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025d24:	f2 0f 59 05 34 23 01 00	mulsd	74548(%rip), %xmm0
100025d2c:	4c 8b 35 7d c0 02 00	movq	180349(%rip), %r14 ## Objc selector ref: setDoubleValue:
100025d33:	48 89 c7	movq	%rax, %rdi
100025d36:	4c 89 f6	movq	%r14, %rsi
100025d39:	41 ff d7	callq	*%r15
100025d3c:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100025d40:	41 bc 01 00 00 00	movl	$1, %r12d
100025d46:	b9 01 00 00 00	movl	$1, %ecx
100025d4b:	48 8b 35 e6 b0 02 00	movq	176358(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025d52:	31 d2	xorl	%edx, %edx
100025d54:	41 ff d7	callq	*%r15
100025d57:	41 8b 4d 10	movl	16(%r13), %ecx
100025d5b:	0f c9	bswapl	%ecx
100025d5d:	0f 57 c0	xorps	%xmm0, %xmm0
100025d60:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025d64:	f2 0f 59 05 f4 22 01 00	mulsd	74484(%rip), %xmm0
100025d6c:	48 89 c7	movq	%rax, %rdi
100025d6f:	4c 89 f6	movq	%r14, %rsi
100025d72:	41 ff d7	callq	*%r15
100025d75:	48 8b 05 bc d8 02 00	movq	186556(%rip), %rax
100025d7c:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025d80:	b9 02 00 00 00	movl	$2, %ecx
100025d85:	48 8b 35 ac b0 02 00	movq	176300(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025d8c:	49 89 f6	movq	%rsi, %r14
100025d8f:	31 d2	xorl	%edx, %edx
100025d91:	41 ff d7	callq	*%r15
100025d94:	41 8b 4d 14	movl	20(%r13), %ecx
100025d98:	0f c9	bswapl	%ecx
100025d9a:	0f 57 c0	xorps	%xmm0, %xmm0
100025d9d:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025da1:	f2 0f 59 05 b7 22 01 00	mulsd	74423(%rip), %xmm0
100025da9:	48 89 c7	movq	%rax, %rdi
100025dac:	48 8b 35 fd bf 02 00	movq	180221(%rip), %rsi ## Objc selector ref: setDoubleValue:
100025db3:	41 ff d7	callq	*%r15
100025db6:	48 8b 05 7b d8 02 00	movq	186491(%rip), %rax
100025dbd:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025dc1:	ba 01 00 00 00	movl	$1, %edx
100025dc6:	4c 89 f6	movq	%r14, %rsi
100025dc9:	31 c9	xorl	%ecx, %ecx
100025dcb:	41 ff d7	callq	*%r15
100025dce:	41 8b 4d 18	movl	24(%r13), %ecx
100025dd2:	0f c9	bswapl	%ecx
100025dd4:	0f 57 c0	xorps	%xmm0, %xmm0
100025dd7:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025ddb:	f2 0f 59 05 7d 22 01 00	mulsd	74365(%rip), %xmm0
100025de3:	48 89 c7	movq	%rax, %rdi
100025de6:	48 8b 35 c3 bf 02 00	movq	180163(%rip), %rsi ## Objc selector ref: setDoubleValue:
100025ded:	49 89 f6	movq	%rsi, %r14
100025df0:	41 ff d7	callq	*%r15
100025df3:	48 8b 05 3e d8 02 00	movq	186430(%rip), %rax
100025dfa:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025dfe:	ba 01 00 00 00	movl	$1, %edx
100025e03:	b9 01 00 00 00	movl	$1, %ecx
100025e08:	48 8b 35 29 b0 02 00	movq	176169(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025e0f:	41 ff d7	callq	*%r15
100025e12:	41 8b 4d 1c	movl	28(%r13), %ecx
100025e16:	0f c9	bswapl	%ecx
100025e18:	0f 57 c0	xorps	%xmm0, %xmm0
100025e1b:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025e1f:	f2 0f 59 05 39 22 01 00	mulsd	74297(%rip), %xmm0
100025e27:	48 89 c7	movq	%rax, %rdi
100025e2a:	4c 89 f6	movq	%r14, %rsi
100025e2d:	41 ff d7	callq	*%r15
100025e30:	48 8b 05 01 d8 02 00	movq	186369(%rip), %rax
100025e37:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025e3b:	ba 01 00 00 00	movl	$1, %edx
100025e40:	b9 02 00 00 00	movl	$2, %ecx
100025e45:	48 8b 35 ec af 02 00	movq	176108(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025e4c:	49 89 f6	movq	%rsi, %r14
100025e4f:	41 ff d7	callq	*%r15
100025e52:	41 8b 4d 20	movl	32(%r13), %ecx
100025e56:	0f c9	bswapl	%ecx
100025e58:	0f 57 c0	xorps	%xmm0, %xmm0
100025e5b:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025e5f:	f2 0f 59 05 f9 21 01 00	mulsd	74233(%rip), %xmm0
100025e67:	48 89 c7	movq	%rax, %rdi
100025e6a:	48 8b 35 3f bf 02 00	movq	180031(%rip), %rsi ## Objc selector ref: setDoubleValue:
100025e71:	41 ff d7	callq	*%r15
100025e74:	48 8b 05 bd d7 02 00	movq	186301(%rip), %rax
100025e7b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025e7f:	ba 02 00 00 00	movl	$2, %edx
100025e84:	4c 89 f6	movq	%r14, %rsi
100025e87:	31 c9	xorl	%ecx, %ecx
100025e89:	41 ff d7	callq	*%r15
100025e8c:	41 8b 4d 24	movl	36(%r13), %ecx
100025e90:	0f c9	bswapl	%ecx
100025e92:	0f 57 c0	xorps	%xmm0, %xmm0
100025e95:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025e99:	f2 0f 59 05 bf 21 01 00	mulsd	74175(%rip), %xmm0
100025ea1:	48 89 c7	movq	%rax, %rdi
100025ea4:	48 8b 35 05 bf 02 00	movq	179973(%rip), %rsi ## Objc selector ref: setDoubleValue:
100025eab:	49 89 f6	movq	%rsi, %r14
100025eae:	41 ff d7	callq	*%r15
100025eb1:	48 8b 05 80 d7 02 00	movq	186240(%rip), %rax
100025eb8:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025ebc:	ba 02 00 00 00	movl	$2, %edx
100025ec1:	b9 01 00 00 00	movl	$1, %ecx
100025ec6:	48 8b 35 6b af 02 00	movq	175979(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025ecd:	41 ff d7	callq	*%r15
100025ed0:	41 8b 4d 28	movl	40(%r13), %ecx
100025ed4:	0f c9	bswapl	%ecx
100025ed6:	0f 57 c0	xorps	%xmm0, %xmm0
100025ed9:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025edd:	f2 0f 59 05 7b 21 01 00	mulsd	74107(%rip), %xmm0
100025ee5:	48 89 c7	movq	%rax, %rdi
100025ee8:	4c 89 f6	movq	%r14, %rsi
100025eeb:	41 ff d7	callq	*%r15
100025eee:	48 8b 05 43 d7 02 00	movq	186179(%rip), %rax
100025ef5:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025ef9:	ba 02 00 00 00	movl	$2, %edx
100025efe:	b9 02 00 00 00	movl	$2, %ecx
100025f03:	48 8b 35 2e af 02 00	movq	175918(%rip), %rsi ## Objc selector ref: cellAtRow:column:
100025f0a:	41 ff d7	callq	*%r15
100025f0d:	41 8b 4d 2c	movl	44(%r13), %ecx
100025f11:	0f c9	bswapl	%ecx
100025f13:	0f 57 c0	xorps	%xmm0, %xmm0
100025f16:	f2 0f 2a c1	cvtsi2sd	%ecx, %xmm0
100025f1a:	f2 0f 59 05 3e 21 01 00	mulsd	74046(%rip), %xmm0
100025f22:	48 89 c7	movq	%rax, %rdi
100025f25:	4c 89 f6	movq	%r14, %rsi
100025f28:	41 ff d7	callq	*%r15
100025f2b:	4c 8b 2d 0e d7 02 00	movq	186126(%rip), %r13
100025f32:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100025f36:	48 8b 35 b3 b4 02 00	movq	177331(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100025f3d:	41 ff d7	callq	*%r15
100025f40:	49 89 c6	movq	%rax, %r14
100025f43:	4a 8b 14 2b	movq	(%rbx,%r13), %rdx
100025f47:	48 8b 05 8a d6 02 00	movq	185994(%rip), %rax
100025f4e:	8b 0c 03	movl	(%rbx,%rax), %ecx
100025f51:	4c 8b 2d 98 d6 02 00	movq	186008(%rip), %r13
100025f58:	46 8b 04 2b	movl	(%rbx,%r13), %r8d
100025f5c:	48 8b 35 ad b7 02 00	movq	178093(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100025f63:	48 89 df	movq	%rbx, %rdi
100025f66:	41 ff d7	callq	*%r15
100025f69:	48 8b 05 d0 d6 02 00	movq	186064(%rip), %rax
100025f70:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025f74:	42 8b 14 2b	movl	(%rbx,%r13), %edx
100025f78:	ff ca	decl	%edx
100025f7a:	44 39 f2	cmpl	%r14d, %edx
100025f7d:	41 0f 43 d6	cmovael	%r14d, %edx
100025f81:	48 8b 35 80 bc 02 00	movq	179328(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100025f88:	41 ff d7	callq	*%r15
100025f8b:	48 8b 05 ae d6 02 00	movq	186030(%rip), %rax
100025f92:	48 8b 14 03	movq	(%rbx,%rax), %rdx
100025f96:	48 8b 35 4b b5 02 00	movq	177483(%rip), %rsi ## Objc selector ref: inputPopHit:
100025f9d:	48 89 df	movq	%rbx, %rdi
100025fa0:	41 ff d7	callq	*%r15
100025fa3:	4c 8b 2d 9e d6 02 00	movq	186014(%rip), %r13
100025faa:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
100025fae:	48 8b 35 3b b4 02 00	movq	177211(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100025fb5:	41 ff d7	callq	*%r15
100025fb8:	49 89 c6	movq	%rax, %r14
100025fbb:	4a 8b 14 2b	movq	(%rbx,%r13), %rdx
100025fbf:	48 8b 05 1a d6 02 00	movq	185882(%rip), %rax
100025fc6:	8b 0c 03	movl	(%rbx,%rax), %ecx
100025fc9:	4c 8b 2d 28 d6 02 00	movq	185896(%rip), %r13
100025fd0:	46 8b 04 2b	movl	(%rbx,%r13), %r8d
100025fd4:	48 89 df	movq	%rbx, %rdi
100025fd7:	48 8b 35 32 b7 02 00	movq	177970(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
100025fde:	41 ff d7	callq	*%r15
100025fe1:	48 8b 05 60 d6 02 00	movq	185952(%rip), %rax
100025fe8:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
100025fec:	42 8b 14 2b	movl	(%rbx,%r13), %edx
100025ff0:	ff ca	decl	%edx
100025ff2:	44 39 f2	cmpl	%r14d, %edx
100025ff5:	41 0f 43 d6	cmovael	%r14d, %edx
100025ff9:	48 8b 35 08 bc 02 00	movq	179208(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100026000:	41 ff d7	callq	*%r15
100026003:	48 8b 05 3e d6 02 00	movq	185918(%rip), %rax
10002600a:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10002600e:	48 8b 35 03 b9 02 00	movq	178435(%rip), %rsi ## Objc selector ref: outputPopHit:
100026015:	48 89 df	movq	%rbx, %rdi
100026018:	41 ff d7	callq	*%r15
10002601b:	48 8b 05 2e d6 02 00	movq	185902(%rip), %rax
100026022:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026026:	48 8b 0d 2b d6 02 00	movq	185899(%rip), %rcx
10002602d:	48 8d 34 0b	leaq	(%rbx,%rcx), %rsi
100026031:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100026035:	48 8b 05 24 d6 02 00	movq	185892(%rip), %rax
10002603c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026040:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
100026045:	48 8b 05 1c d6 02 00	movq	185884(%rip), %rax
10002604c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026050:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
100026055:	48 8b 05 14 d6 02 00	movq	185876(%rip), %rax
10002605c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026060:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
100026065:	48 8b 05 0c d6 02 00	movq	185868(%rip), %rax
10002606c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026070:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
100026075:	48 8b 05 04 d6 02 00	movq	185860(%rip), %rax
10002607c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026080:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
100026085:	48 8b 05 fc d5 02 00	movq	185852(%rip), %rax
10002608c:	48 8b 04 03	movq	(%rbx,%rax), %rax
100026090:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
100026095:	48 8b 05 f4 d5 02 00	movq	185844(%rip), %rax
10002609c:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260a0:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
1000260a5:	48 8b 05 ec d5 02 00	movq	185836(%rip), %rax
1000260ac:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260b0:	48 8b 0d e9 d5 02 00	movq	185833(%rip), %rcx
1000260b7:	48 8d 14 0b	leaq	(%rbx,%rcx), %rdx
1000260bb:	48 89 55 c0	movq	%rdx, -64(%rbp)
1000260bf:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
1000260c3:	48 8b 05 de d5 02 00	movq	185822(%rip), %rax
1000260ca:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260ce:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
1000260d3:	48 8b 05 d6 d5 02 00	movq	185814(%rip), %rax
1000260da:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260de:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
1000260e3:	48 8b 05 ce d5 02 00	movq	185806(%rip), %rax
1000260ea:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260ee:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
1000260f3:	48 8b 05 c6 d5 02 00	movq	185798(%rip), %rax
1000260fa:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000260fe:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
100026103:	48 8b 05 be d5 02 00	movq	185790(%rip), %rax
10002610a:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002610e:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
100026113:	48 8b 05 b6 d5 02 00	movq	185782(%rip), %rax
10002611a:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002611e:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
100026123:	48 8b 05 ae d5 02 00	movq	185774(%rip), %rax
10002612a:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002612e:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
100026133:	48 8b 05 a6 d5 02 00	movq	185766(%rip), %rax
10002613a:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002613e:	48 8b 0d a3 d5 02 00	movq	185763(%rip), %rcx
100026145:	48 8d 14 0b	leaq	(%rbx,%rcx), %rdx
100026149:	48 89 55 c8	movq	%rdx, -56(%rbp)
10002614d:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
100026151:	48 8b 05 98 d5 02 00	movq	185752(%rip), %rax
100026158:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002615c:	48 89 44 0b 08	movq	%rax, 8(%rbx,%rcx)
100026161:	48 8b 05 90 d5 02 00	movq	185744(%rip), %rax
100026168:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002616c:	48 89 44 0b 10	movq	%rax, 16(%rbx,%rcx)
100026171:	48 8b 05 88 d5 02 00	movq	185736(%rip), %rax
100026178:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002617c:	48 89 44 0b 18	movq	%rax, 24(%rbx,%rcx)
100026181:	48 8b 05 80 d5 02 00	movq	185728(%rip), %rax
100026188:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002618c:	48 89 44 0b 20	movq	%rax, 32(%rbx,%rcx)
100026191:	48 8b 05 78 d5 02 00	movq	185720(%rip), %rax
100026198:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002619c:	48 89 44 0b 28	movq	%rax, 40(%rbx,%rcx)
1000261a1:	48 8b 05 70 d5 02 00	movq	185712(%rip), %rax
1000261a8:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000261ac:	48 89 44 0b 30	movq	%rax, 48(%rbx,%rcx)
1000261b1:	48 8b 05 68 d5 02 00	movq	185704(%rip), %rax
1000261b8:	48 8b 04 03	movq	(%rbx,%rax), %rax
1000261bc:	48 89 44 0b 38	movq	%rax, 56(%rbx,%rcx)
1000261c1:	4c 8b 2d d8 bc 02 00	movq	179416(%rip), %r13 ## Objc selector ref: setHidden:
1000261c8:	48 89 75 d0	movq	%rsi, -48(%rbp)
1000261cc:	4c 8b 3d 1d d4 02 00	movq	185373(%rip), %r15
1000261d3:	42 8b 04 3b	movl	(%rbx,%r15), %eax
1000261d7:	ff c8	decl	%eax
1000261d9:	31 d2	xorl	%edx, %edx
1000261db:	49 39 c4	cmpq	%rax, %r12
1000261de:	0f 97 c2	seta	%dl
1000261e1:	4a 8b 3c e6	movq	(%rsi,%r12,8), %rdi
1000261e5:	4c 89 ee	movq	%r13, %rsi
1000261e8:	49 89 de	movq	%rbx, %r14
1000261eb:	48 8b 1d 2e 6a 01 00	movq	92718(%rip), %rbx ## Objc message: -[%rdi setHidden:]
1000261f2:	ff d3	callq	*%rbx
1000261f4:	43 8b 04 3e	movl	(%r14,%r15), %eax
1000261f8:	ff c8	decl	%eax
1000261fa:	31 d2	xorl	%edx, %edx
1000261fc:	49 39 c4	cmpq	%rax, %r12
1000261ff:	0f 97 c2	seta	%dl
100026202:	48 8b 45 c0	movq	-64(%rbp), %rax
100026206:	4a 8b 3c e0	movq	(%rax,%r12,8), %rdi
10002620a:	4c 89 ee	movq	%r13, %rsi
10002620d:	ff d3	callq	*%rbx
10002620f:	43 8b 04 3e	movl	(%r14,%r15), %eax
100026213:	ff c8	decl	%eax
100026215:	31 d2	xorl	%edx, %edx
100026217:	49 39 c4	cmpq	%rax, %r12
10002621a:	0f 97 c2	seta	%dl
10002621d:	48 8b 45 c8	movq	-56(%rbp), %rax
100026221:	4a 8b 3c e0	movq	(%rax,%r12,8), %rdi
100026225:	4c 89 ee	movq	%r13, %rsi
100026228:	ff d3	callq	*%rbx
10002622a:	48 8b 75 d0	movq	-48(%rbp), %rsi
10002622e:	4c 89 f3	movq	%r14, %rbx
100026231:	49 ff c4	incq	%r12
100026234:	49 83 fc 08	cmpq	$8, %r12
100026238:	75 92	jne	0x1000261cc
10002623a:	48 8b 05 d7 be 02 00	movq	179927(%rip), %rax ## Objc selector ref: setTitle:
100026241:	48 89 45 90	movq	%rax, -112(%rbp)
100026245:	48 8b 05 6c bd 02 00	movq	179564(%rip), %rax ## Objc selector ref: setMinValue:
10002624c:	48 89 45 98	movq	%rax, -104(%rbp)
100026250:	48 8b 05 91 d3 02 00	movq	185233(%rip), %rax
100026257:	48 89 45 a0	movq	%rax, -96(%rbp)
10002625b:	48 8b 05 36 bd 02 00	movq	179510(%rip), %rax ## Objc selector ref: setMaxValue:
100026262:	48 89 45 a8	movq	%rax, -88(%rbp)
100026266:	48 8b 05 93 bc 02 00	movq	179347(%rip), %rax ## Objc selector ref: setIntValue:
10002626d:	48 89 45 b0	movq	%rax, -80(%rbp)
100026271:	48 8b 05 28 c1 02 00	movq	180520(%rip), %rax ## Objc selector ref: takeIntValueFrom:
100026278:	48 89 45 b8	movq	%rax, -72(%rbp)
10002627c:	45 31 ff	xorl	%r15d, %r15d
10002627f:	4c 8b 6d c8	movq	-56(%rbp), %r13
100026283:	4a 8b 1c fe	movq	(%rsi,%r15,8), %rbx
100026287:	48 8b 05 4a d3 02 00	movq	185162(%rip), %rax
10002628e:	41 8b 14 06	movl	(%r14,%rax), %edx
100026292:	4c 89 f7	movq	%r14, %rdi
100026295:	48 8b 35 6c c0 02 00	movq	180332(%rip), %rsi ## Objc selector ref: stringForSpace:channel:
10002629c:	44 89 f9	movl	%r15d, %ecx
10002629f:	4c 8b 25 7a 69 01 00	movq	92538(%rip), %r12 ## Objc message: -[%rdi stringForSpace:channel:]
1000262a6:	41 ff d4	callq	*%r12
1000262a9:	48 89 df	movq	%rbx, %rdi
1000262ac:	4c 89 f3	movq	%r14, %rbx
1000262af:	48 8b 75 90	movq	-112(%rbp), %rsi
1000262b3:	48 89 c2	movq	%rax, %rdx
1000262b6:	41 ff d4	callq	*%r12
1000262b9:	4b 8b 7c fd 00	movq	(%r13,%r15,8), %rdi
1000262be:	66 0f 57 c0	xorpd	%xmm0, %xmm0
1000262c2:	48 8b 75 98	movq	-104(%rbp), %rsi
1000262c6:	41 ff d4	callq	*%r12
1000262c9:	4b 8b 7c fd 00	movq	(%r13,%r15,8), %rdi
1000262ce:	4c 8b 65 a0	movq	-96(%rbp), %r12
1000262d2:	43 8b 04 26	movl	(%r14,%r12), %eax
1000262d6:	ff c8	decl	%eax
1000262d8:	0f 57 c0	xorps	%xmm0, %xmm0
1000262db:	f2 48 0f 2a c0	cvtsi2sd	%rax, %xmm0
1000262e0:	48 8b 75 a8	movq	-88(%rbp), %rsi
1000262e4:	ff 15 36 69 01 00	callq	*92470(%rip) ## Objc message: -[%rdi stringForSpace:channel:]
1000262ea:	4b 8b 7c fd 00	movq	(%r13,%r15,8), %rdi
1000262ef:	43 8b 14 26	movl	(%r14,%r12), %edx
1000262f3:	d1 ea	shrl	%edx
1000262f5:	48 8b 75 b0	movq	-80(%rbp), %rsi
1000262f9:	4c 8b 25 20 69 01 00	movq	92448(%rip), %r12 ## Objc message: -[%rdi stringForSpace:channel:]
100026300:	41 ff d4	callq	*%r12
100026303:	48 8b 45 c0	movq	-64(%rbp), %rax
100026307:	4a 8b 3c f8	movq	(%rax,%r15,8), %rdi
10002630b:	4b 8b 54 fd 00	movq	(%r13,%r15,8), %rdx
100026310:	48 8b 75 b8	movq	-72(%rbp), %rsi
100026314:	41 ff d4	callq	*%r12
100026317:	48 8b 75 d0	movq	-48(%rbp), %rsi
10002631b:	49 ff c7	incq	%r15
10002631e:	49 83 ff 08	cmpq	$8, %r15
100026322:	0f 85 5b ff ff ff	jne	0x100026283
100026328:	4c 8b 35 f9 d3 02 00	movq	185337(%rip), %r14
10002632f:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100026333:	48 8b 35 b6 b0 02 00	movq	176310(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
10002633a:	4c 8b 2d df 68 01 00	movq	92383(%rip), %r13 ## Objc message: -[%rdi indexOfSelectedItem]
100026341:	41 ff d5	callq	*%r13
100026344:	49 89 c7	movq	%rax, %r15
100026347:	4a 8b 14 33	movq	(%rbx,%r14), %rdx
10002634b:	48 8b 05 8e d2 02 00	movq	184974(%rip), %rax
100026352:	8b 0c 03	movl	(%rbx,%rax), %ecx
100026355:	4c 8b 25 9c d2 02 00	movq	184988(%rip), %r12
10002635c:	46 8b 04 23	movl	(%rbx,%r12), %r8d
100026360:	48 89 df	movq	%rbx, %rdi
100026363:	48 8b 35 a6 b3 02 00	movq	177062(%rip), %rsi ## Objc selector ref: makeItemsForPopup:withSpace:chanCount:
10002636a:	41 ff d5	callq	*%r13
10002636d:	4a 8b 3c 33	movq	(%rbx,%r14), %rdi
100026371:	42 8b 14 23	movl	(%rbx,%r12), %edx
100026375:	ff ca	decl	%edx
100026377:	44 39 fa	cmpl	%r15d, %edx
10002637a:	41 0f 43 d7	cmovael	%r15d, %edx
10002637e:	48 8b 35 83 b8 02 00	movq	178307(%rip), %rsi ## Objc selector ref: selectItemAtIndex:
100026385:	41 ff d5	callq	*%r13
100026388:	48 8b 05 c1 d2 02 00	movq	185025(%rip), %rax
10002638f:	48 8b 14 03	movq	(%rbx,%rax), %rdx
100026393:	48 8b 35 26 ab 02 00	movq	174886(%rip), %rsi ## Objc selector ref: colorRadioHit:
10002639a:	48 89 df	movq	%rbx, %rdi
10002639d:	4c 89 e8	movq	%r13, %rax
1000263a0:	48 83 c4 48	addq	$72, %rsp
1000263a4:	5b	popq	%rbx
1000263a5:	41 5c	popq	%r12
1000263a7:	41 5d	popq	%r13
1000263a9:	41 5e	popq	%r14
1000263ab:	41 5f	popq	%r15
1000263ad:	5d	popq	%rbp
1000263ae:	ff e0	jmpq	*%rax
1000263b0:	55	pushq	%rbp
1000263b1:	48 89 e5	movq	%rsp, %rbp
1000263b4:	41 57	pushq	%r15
1000263b6:	41 56	pushq	%r14
1000263b8:	41 55	pushq	%r13
1000263ba:	41 54	pushq	%r12
1000263bc:	53	pushq	%rbx
1000263bd:	48 83 ec 38	subq	$56, %rsp
1000263c1:	49 89 fc	movq	%rdi, %r12
1000263c4:	48 8b 05 65 d3 02 00	movq	185189(%rip), %rax
1000263cb:	8b 04 07	movl	(%rdi,%rax), %eax
1000263ce:	48 89 45 d0	movq	%rax, -48(%rbp)
1000263d2:	48 8b 05 4f d3 02 00	movq	185167(%rip), %rax
1000263d9:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
1000263dd:	48 8b 35 0c b0 02 00	movq	176140(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
1000263e4:	ff 15 36 68 01 00	callq	*92214(%rip) ## Objc message: -[%rdi indexOfSelectedItem]
1000263ea:	48 89 45 c0	movq	%rax, -64(%rbp)
1000263ee:	48 8b 05 33 d2 02 00	movq	184883(%rip), %rax
1000263f5:	49 8b 04 04	movq	(%r12,%rax), %rax
1000263f9:	48 89 45 b8	movq	%rax, -72(%rbp)
1000263fd:	48 8b 05 dc d1 02 00	movq	184796(%rip), %rax
100026404:	41 8b 04 04	movl	(%r12,%rax), %eax
100026408:	89 45 cc	movl	%eax, -52(%rbp)
10002640b:	48 8b 05 de d1 02 00	movq	184798(%rip), %rax
100026412:	41 8b 04 04	movl	(%r12,%rax), %eax
100026416:	41 89 c5	movl	%eax, %r13d
100026419:	41 ff cd	decl	%r13d
10002641c:	78 6e	js	0x10002648c
10002641e:	48 8b 05 c3 d2 02 00	movq	185027(%rip), %rax
100026425:	4c 01 e0	addq	%r12, %rax
100026428:	48 89 45 a8	movq	%rax, -88(%rbp)
10002642c:	48 8b 05 dd b0 02 00	movq	176349(%rip), %rax ## Objc selector ref: intValue
100026433:	48 89 45 b0	movq	%rax, -80(%rbp)
100026437:	41 bf 01 00 00 00	movl	$1, %r15d
10002643d:	45 31 f6	xorl	%r14d, %r14d
100026440:	48 8b 1d a1 d1 02 00	movq	184737(%rip), %rbx
100026447:	48 8b 55 d0	movq	-48(%rbp), %rdx
10002644b:	b8 00 00 00 00	movl	$0, %eax
100026450:	44 39 ea	cmpl	%r13d, %edx
100026453:	74 19	je	0x10002646e
100026455:	44 89 e8	movl	%r13d, %eax
100026458:	48 8b 4d a8	movq	-88(%rbp), %rcx
10002645c:	48 8b 3c c1	movq	(%rcx,%rax,8), %rdi
100026460:	48 8b 75 b0	movq	-80(%rbp), %rsi
100026464:	ff 15 b6 67 01 00	callq	*92086(%rip) ## Objc message: -[%rdi intValue]
10002646a:	48 8b 55 d0	movq	-48(%rbp), %rdx
10002646e:	41 0f af c7	imull	%r15d, %eax
100026472:	41 01 c6	addl	%eax, %r14d
100026475:	45 0f af 3c 1c	imull	(%r12,%rbx), %r15d
10002647a:	41 ff cd	decl	%r13d
10002647d:	79 cc	jns	0x10002644b
10002647f:	48 8b 05 6a d1 02 00	movq	184682(%rip), %rax
100026486:	41 8b 04 04	movl	(%r12,%rax), %eax
10002648a:	eb 07	jmp	0x100026493
10002648c:	45 31 f6	xorl	%r14d, %r14d
10002648f:	48 8b 55 d0	movq	-48(%rbp), %rdx
100026493:	48 8b 0d 5e d1 02 00	movq	184670(%rip), %rcx
10002649a:	45 8b 2c 0c	movl	(%r12,%rcx), %r13d
10002649e:	f7 d2	notl	%edx
1000264a0:	48 8b 0d 41 d1 02 00	movq	184641(%rip), %rcx
1000264a7:	41 8b 1c 0c	movl	(%r12,%rcx), %ebx
1000264ab:	45 89 ef	movl	%r13d, %r15d
1000264ae:	01 c2	addl	%eax, %edx
1000264b0:	0f 84 84 00 00 00	je	0x10002653a
1000264b6:	8d 42 03	leal	3(%rdx), %eax
1000264b9:	83 e0 fc	andl	$-4, %eax
1000264bc:	ff ca	decl	%edx
1000264be:	66 0f 6e c2	movd	%edx, %xmm0
1000264c2:	66 0f 6f 0d c6 2e 01 00	movdqa	77510(%rip), %xmm1
1000264ca:	66 41 0f 3a 22 cd 00	pinsrd	$0, %r13d, %xmm1
1000264d1:	66 0f 70 c0 00	pshufd	$0, %xmm0, %xmm0
1000264d6:	66 0f 6e d3	movd	%ebx, %xmm2
1000264da:	66 0f 70 da 00	pshufd	$0, %xmm2, %xmm3
1000264df:	b9 04 00 00 00	movl	$4, %ecx
1000264e4:	66 0f 6f d1	movdqa	%xmm1, %xmm2
1000264e8:	66 0f 6f cb	movdqa	%xmm3, %xmm1
1000264ec:	66 0f 38 40 ca	pmulld	%xmm2, %xmm1
1000264f1:	89 ca	movl	%ecx, %edx
1000264f3:	83 c1 fc	addl	$-4, %ecx
1000264f6:	01 c2	addl	%eax, %edx
1000264f8:	83 c2 fc	addl	$-4, %edx
1000264fb:	83 fa 04	cmpl	$4, %edx
1000264fe:	75 e4	jne	0x1000264e4
100026500:	f7 d9	negl	%ecx
100026502:	66 0f 6e d9	movd	%ecx, %xmm3
100026506:	66 0f 70 db 00	pshufd	$0, %xmm3, %xmm3
10002650b:	66 0f eb 1d 8d 20 01 00	por	73869(%rip), %xmm3
100026513:	66 0f 38 3b c3	pminud	%xmm3, %xmm0
100026518:	66 0f 76 c3	pcmpeqd	%xmm3, %xmm0
10002651c:	66 0f 38 14 d1	blendvps	%xmm0, %xmm1, %xmm2
100026521:	66 0f 70 c2 ee	pshufd	$238, %xmm2, %xmm0
100026526:	66 0f 38 40 c2	pmulld	%xmm2, %xmm0
10002652b:	66 0f 70 c8 55	pshufd	$85, %xmm0, %xmm1
100026530:	66 0f 38 40 c8	pmulld	%xmm0, %xmm1
100026535:	66 41 0f 7e cf	movd	%xmm1, %r15d
10002653a:	48 8b 05 cf d0 02 00	movq	184527(%rip), %rax
100026541:	49 63 3c 04	movslq	(%r12,%rax), %rdi
100026545:	48 89 de	movq	%rbx, %rsi
100026548:	e8 6f 8e 00 00	callq	0x10002f3bc ## symbol stub for: _calloc
10002654d:	48 8b 35 bc d0 02 00	movq	184508(%rip), %rsi
100026554:	48 89 da	movq	%rbx, %rdx
100026557:	48 89 c3	movq	%rax, %rbx
10002655a:	48 85 d2	testq	%rdx, %rdx
10002655d:	74 39	je	0x100026598
10002655f:	45 0f af ee	imull	%r14d, %r13d
100026563:	44 03 6d c0	addl	-64(%rbp), %r13d
100026567:	31 c0	xorl	%eax, %eax
100026569:	41 83 3c 34 02	cmpl	$2, (%r12,%rsi)
10002656e:	45 89 ed	movl	%r13d, %r13d
100026571:	75 0f	jne	0x100026582
100026573:	48 8b 4d b8	movq	-72(%rbp), %rcx
100026577:	42 0f b7 0c 69	movzwl	(%rcx,%r13,2), %ecx
10002657c:	66 89 0c 43	movw	%cx, (%rbx,%rax,2)
100026580:	eb 0b	jmp	0x10002658d
100026582:	48 8b 4d b8	movq	-72(%rbp), %rcx
100026586:	42 8a 0c 29	movb	(%rcx,%r13), %cl
10002658a:	88 0c 03	movb	%cl, (%rbx,%rax)
10002658d:	45 01 fd	addl	%r15d, %r13d
100026590:	48 ff c0	incq	%rax
100026593:	48 39 c2	cmpq	%rax, %rdx
100026596:	75 d1	jne	0x100026569
100026598:	8b 4d cc	movl	-52(%rbp), %ecx
10002659b:	81 f9 20 42 47 52	cmpl	$1380401696, %ecx
1000265a1:	ba 06 00 00 00	movl	$6, %edx
1000265a6:	48 8b 45 c0	movq	-64(%rbp), %rax
1000265aa:	0f 44 d0	cmovel	%eax, %edx
1000265ad:	83 c0 03	addl	$3, %eax
1000265b0:	81 f9 4b 59 4d 43	cmpl	$1129142603, %ecx
1000265b6:	0f 44 d0	cmovel	%eax, %edx
1000265b9:	4c 8b 35 78 d1 02 00	movq	184696(%rip), %r14
1000265c0:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000265c4:	49 89 f5	movq	%rsi, %r13
1000265c7:	48 8b 35 c2 a5 02 00	movq	173506(%rip), %rsi ## Objc selector ref: SetPlotColor:
1000265ce:	4c 8b 3d 4b 66 01 00	movq	91723(%rip), %r15 ## Objc message: -[%rdi SetPlotColor:]
1000265d5:	41 ff d7	callq	*%r15
1000265d8:	4b 8b 3c 34	movq	(%r12,%r14), %rdi
1000265dc:	48 8b 05 05 d0 02 00	movq	184325(%rip), %rax
1000265e3:	41 8b 0c 04	movl	(%r12,%rax), %ecx
1000265e7:	47 8b 04 2c	movl	(%r12,%r13), %r8d
1000265eb:	48 8b 35 a6 a5 02 00	movq	173478(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
1000265f2:	48 89 da	movq	%rbx, %rdx
1000265f5:	41 ff d7	callq	*%r15
1000265f8:	48 89 df	movq	%rbx, %rdi
1000265fb:	48 83 c4 38	addq	$56, %rsp
1000265ff:	5b	popq	%rbx
100026600:	41 5c	popq	%r12
100026602:	41 5d	popq	%r13
100026604:	41 5e	popq	%r14
100026606:	41 5f	popq	%r15
100026608:	5d	popq	%rbp
100026609:	e9 c6 8d 00 00	jmp	0x10002f3d4 ## symbol stub for: _free
10002660e:	55	pushq	%rbp
10002660f:	48 89 e5	movq	%rsp, %rbp
100026612:	41 57	pushq	%r15
100026614:	41 56	pushq	%r14
100026616:	41 54	pushq	%r12
100026618:	53	pushq	%rbx
100026619:	48 89 fb	movq	%rdi, %rbx
10002661c:	48 8b 35 cd ad 02 00	movq	175565(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
100026623:	4c 8b 25 f6 65 01 00	movq	91638(%rip), %r12 ## Objc message: -[%rdi indexOfSelectedItem]
10002662a:	48 89 d7	movq	%rdx, %rdi
10002662d:	41 ff d4	callq	*%r12
100026630:	49 89 c6	movq	%rax, %r14
100026633:	48 8b 05 9e cf 02 00	movq	184222(%rip), %rax
10002663a:	8b 04 03	movl	(%rbx,%rax), %eax
10002663d:	3d 20 42 47 52	cmpl	$1380401696, %eax
100026642:	b9 06 00 00 00	movl	$6, %ecx
100026647:	41 0f 44 ce	cmovel	%r14d, %ecx
10002664b:	41 8d 56 03	leal	3(%r14), %edx
10002664f:	3d 4b 59 4d 43	cmpl	$1129142603, %eax
100026654:	0f 45 d1	cmovnel	%ecx, %edx
100026657:	4c 8b 3d e2 d0 02 00	movq	184546(%rip), %r15
10002665e:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100026662:	48 8b 35 27 a5 02 00	movq	173351(%rip), %rsi ## Objc selector ref: SetPlotColor:
100026669:	41 ff d4	callq	*%r12
10002666c:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100026670:	48 8b 05 a1 cf 02 00	movq	184225(%rip), %rax
100026677:	48 01 d8	addq	%rbx, %rax
10002667a:	49 63 ce	movslq	%r14d, %rcx
10002667d:	48 8b 14 c8	movq	(%rax,%rcx,8), %rdx
100026681:	48 8b 05 78 cf 02 00	movq	184184(%rip), %rax
100026688:	8b 0c 03	movl	(%rbx,%rax), %ecx
10002668b:	48 8b 05 7e cf 02 00	movq	184190(%rip), %rax
100026692:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100026696:	48 8b 35 fb a4 02 00	movq	173307(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
10002669d:	4c 89 e0	movq	%r12, %rax
1000266a0:	5b	popq	%rbx
1000266a1:	41 5c	popq	%r12
1000266a3:	41 5e	popq	%r14
1000266a5:	41 5f	popq	%r15
1000266a7:	5d	popq	%rbp
1000266a8:	ff e0	jmpq	*%rax
1000266aa:	55	pushq	%rbp
1000266ab:	48 89 e5	movq	%rsp, %rbp
1000266ae:	41 57	pushq	%r15
1000266b0:	41 56	pushq	%r14
1000266b2:	41 54	pushq	%r12
1000266b4:	53	pushq	%rbx
1000266b5:	48 89 fb	movq	%rdi, %rbx
1000266b8:	48 8b 35 31 ad 02 00	movq	175409(%rip), %rsi ## Objc selector ref: indexOfSelectedItem
1000266bf:	4c 8b 25 5a 65 01 00	movq	91482(%rip), %r12 ## Objc message: -[%rdi indexOfSelectedItem]
1000266c6:	48 89 d7	movq	%rdx, %rdi
1000266c9:	41 ff d4	callq	*%r12
1000266cc:	49 89 c6	movq	%rax, %r14
1000266cf:	48 8b 05 0a cf 02 00	movq	184074(%rip), %rax
1000266d6:	8b 04 03	movl	(%rbx,%rax), %eax
1000266d9:	3d 20 42 47 52	cmpl	$1380401696, %eax
1000266de:	b9 06 00 00 00	movl	$6, %ecx
1000266e3:	41 0f 44 ce	cmovel	%r14d, %ecx
1000266e7:	41 8d 56 03	leal	3(%r14), %edx
1000266eb:	3d 4b 59 4d 43	cmpl	$1129142603, %eax
1000266f0:	0f 45 d1	cmovnel	%ecx, %edx
1000266f3:	4c 8b 3d 4e d0 02 00	movq	184398(%rip), %r15
1000266fa:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
1000266fe:	48 8b 35 8b a4 02 00	movq	173195(%rip), %rsi ## Objc selector ref: SetPlotColor:
100026705:	41 ff d4	callq	*%r12
100026708:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002670c:	48 8b 05 0d cf 02 00	movq	184077(%rip), %rax
100026713:	48 01 d8	addq	%rbx, %rax
100026716:	49 63 ce	movslq	%r14d, %rcx
100026719:	48 8b 14 c8	movq	(%rax,%rcx,8), %rdx
10002671d:	48 8b 05 e4 ce 02 00	movq	184036(%rip), %rax
100026724:	8b 0c 03	movl	(%rbx,%rax), %ecx
100026727:	48 8b 05 e2 ce 02 00	movq	184034(%rip), %rax
10002672e:	44 8b 04 03	movl	(%rbx,%rax), %r8d
100026732:	48 8b 35 5f a4 02 00	movq	173151(%rip), %rsi ## Objc selector ref: SetPlotData:entryCount:entrySize:
100026739:	4c 89 e0	movq	%r12, %rax
10002673c:	5b	popq	%rbx
10002673d:	41 5c	popq	%r12
10002673f:	41 5e	popq	%r14
100026741:	41 5f	popq	%r15
100026743:	5d	popq	%rbp
100026744:	ff e0	jmpq	*%rax
100026746:	55	pushq	%rbp
100026747:	48 89 e5	movq	%rsp, %rbp
10002674a:	48 8b 35 7f a4 02 00	movq	173183(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
100026751:	5d	popq	%rbp
100026752:	ff 25 c8 64 01 00	jmpq	*91336(%rip) ## Objc message: -[%rdi UpdateColorCurveView]
100026758:	55	pushq	%rbp
100026759:	48 89 e5	movq	%rsp, %rbp
10002675c:	41 57	pushq	%r15
10002675e:	41 56	pushq	%r14
100026760:	41 55	pushq	%r13
100026762:	41 54	pushq	%r12
100026764:	53	pushq	%rbx
100026765:	50	pushq	%rax
100026766:	49 89 fc	movq	%rdi, %r12
100026769:	48 8b 35 28 bc 02 00	movq	179240(%rip), %rsi ## Objc selector ref: tag
100026770:	4c 8b 35 a9 64 01 00	movq	91305(%rip), %r14 ## Objc message: -[%rdi tag]
100026777:	48 89 d7	movq	%rdx, %rdi
10002677a:	41 ff d6	callq	*%r14
10002677d:	48 8b 35 ac cf 02 00	movq	184236(%rip), %rsi
100026784:	48 8b 0d cd ce 02 00	movq	184013(%rip), %rcx
10002678b:	4d 8d 2c 0c	leaq	(%r12,%rcx), %r13
10002678f:	31 d2	xorl	%edx, %edx
100026791:	ff c8	decl	%eax
100026793:	41 89 04 34	movl	%eax, (%r12,%rsi)
100026797:	48 8b 35 42 b9 02 00	movq	178498(%rip), %rsi ## Objc selector ref: setState:
10002679e:	49 8b 3c 0c	movq	(%r12,%rcx), %rdi
1000267a2:	0f 94 c2	sete	%dl
1000267a5:	49 89 f7	movq	%rsi, %r15
1000267a8:	4c 89 f3	movq	%r14, %rbx
1000267ab:	41 ff d6	callq	*%r14
1000267ae:	41 be 01 00 00 00	movl	$1, %r14d
1000267b4:	48 8b 05 75 cf 02 00	movq	184181(%rip), %rax
1000267bb:	41 8b 04 04	movl	(%r12,%rax), %eax
1000267bf:	4b 8b 7c f5 00	movq	(%r13,%r14,8), %rdi
1000267c4:	31 d2	xorl	%edx, %edx
1000267c6:	49 39 c6	cmpq	%rax, %r14
1000267c9:	0f 94 c2	sete	%dl
1000267cc:	4c 89 fe	movq	%r15, %rsi
1000267cf:	ff d3	callq	*%rbx
1000267d1:	49 ff c6	incq	%r14
1000267d4:	49 83 fe 08	cmpq	$8, %r14
1000267d8:	75 da	jne	0x1000267b4
1000267da:	48 8b 0d 0f b6 02 00	movq	177679(%rip), %rcx ## Objc selector ref: setEnabled:
1000267e1:	48 8b 1d 00 cf 02 00	movq	184064(%rip), %rbx
1000267e8:	4c 01 e3	addq	%r12, %rbx
1000267eb:	48 8b 05 3e cf 02 00	movq	184126(%rip), %rax
1000267f2:	45 31 ff	xorl	%r15d, %r15d
1000267f5:	4a 8b 3c fb	movq	(%rbx,%r15,8), %rdi
1000267f9:	49 89 c5	movq	%rax, %r13
1000267fc:	41 8b 04 04	movl	(%r12,%rax), %eax
100026800:	31 d2	xorl	%edx, %edx
100026802:	49 39 c7	cmpq	%rax, %r15
100026805:	0f 95 c2	setne	%dl
100026808:	49 89 ce	movq	%rcx, %r14
10002680b:	48 89 ce	movq	%rcx, %rsi
10002680e:	ff 15 0c 64 01 00	callq	*91148(%rip) ## Objc message: -[%rdi setEnabled:]
100026814:	4c 89 e8	movq	%r13, %rax
100026817:	4c 89 f1	movq	%r14, %rcx
10002681a:	49 ff c7	incq	%r15
10002681d:	49 83 ff 08	cmpq	$8, %r15
100026821:	75 d2	jne	0x1000267f5
100026823:	4c 8b 3d 76 ce 02 00	movq	183926(%rip), %r15
10002682a:	4d 01 e7	addq	%r12, %r15
10002682d:	31 db	xorl	%ebx, %ebx
10002682f:	49 8b 3c df	movq	(%r15,%rbx,8), %rdi
100026833:	43 8b 04 2c	movl	(%r12,%r13), %eax
100026837:	31 d2	xorl	%edx, %edx
100026839:	48 39 c3	cmpq	%rax, %rbx
10002683c:	0f 95 c2	setne	%dl
10002683f:	4c 89 f6	movq	%r14, %rsi
100026842:	ff 15 d8 63 01 00	callq	*91096(%rip) ## Objc message: -[%rdi setEnabled:]
100026848:	48 ff c3	incq	%rbx
10002684b:	48 83 fb 08	cmpq	$8, %rbx
10002684f:	75 de	jne	0x10002682f
100026851:	48 8b 35 78 a3 02 00	movq	172920(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
100026858:	4c 89 e7	movq	%r12, %rdi
10002685b:	48 83 c4 08	addq	$8, %rsp
10002685f:	5b	popq	%rbx
100026860:	41 5c	popq	%r12
100026862:	41 5d	popq	%r13
100026864:	41 5e	popq	%r14
100026866:	41 5f	popq	%r15
100026868:	5d	popq	%rbp
100026869:	ff 25 b1 63 01 00	jmpq	*91057(%rip) ## Objc message: -[%rdi UpdateColorCurveView]
10002686f:	55	pushq	%rbp
100026870:	48 89 e5	movq	%rsp, %rbp
100026873:	41 57	pushq	%r15
100026875:	41 56	pushq	%r14
100026877:	53	pushq	%rbx
100026878:	50	pushq	%rax
100026879:	48 89 d3	movq	%rdx, %rbx
10002687c:	49 89 fe	movq	%rdi, %r14
10002687f:	48 8b 35 12 bb 02 00	movq	178962(%rip), %rsi ## Objc selector ref: tag
100026886:	4c 8b 3d 93 63 01 00	movq	91027(%rip), %r15 ## Objc message: -[%rdi tag]
10002688d:	48 89 d7	movq	%rdx, %rdi
100026890:	41 ff d7	callq	*%r15
100026893:	48 8b 0d 06 ce 02 00	movq	183814(%rip), %rcx
10002689a:	4c 01 f1	addq	%r14, %rcx
10002689d:	48 c1 e0 20	shlq	$32, %rax
1000268a1:	48 ba 00 00 00 00 ff ff ff ff	movabsq	$-4294967296, %rdx
1000268ab:	48 01 c2	addq	%rax, %rdx
1000268ae:	48 c1 fa 1d	sarq	$29, %rdx
1000268b2:	48 8b 3c 0a	movq	(%rdx,%rcx), %rdi
1000268b6:	48 8b 35 e3 ba 02 00	movq	178915(%rip), %rsi ## Objc selector ref: takeIntValueFrom:
1000268bd:	48 89 da	movq	%rbx, %rdx
1000268c0:	41 ff d7	callq	*%r15
1000268c3:	48 8b 35 06 a3 02 00	movq	172806(%rip), %rsi ## Objc selector ref: UpdateColorCurveView
1000268ca:	4c 89 f7	movq	%r14, %rdi
1000268cd:	4c 89 f8	movq	%r15, %rax
1000268d0:	48 83 c4 08	addq	$8, %rsp
1000268d4:	5b	popq	%rbx
1000268d5:	41 5e	popq	%r14
1000268d7:	41 5f	popq	%r15
1000268d9:	5d	popq	%rbp
1000268da:	ff e0	jmpq	*%rax
1000268dc:	55	pushq	%rbp
1000268dd:	48 89 e5	movq	%rsp, %rbp
1000268e0:	53	pushq	%rbx
1000268e1:	50	pushq	%rax
1000268e2:	48 89 d3	movq	%rdx, %rbx
1000268e5:	e8 d4 8b 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
1000268ea:	48 8b 35 af ab 02 00	movq	175023(%rip), %rsi ## Objc selector ref: initWithRef:
1000268f1:	48 89 c7	movq	%rax, %rdi
1000268f4:	48 89 da	movq	%rbx, %rdx
1000268f7:	ff 15 23 63 01 00	callq	*90915(%rip) ## Objc message: -[%rdi initWithRef:]
1000268fd:	48 89 c7	movq	%rax, %rdi
100026900:	48 83 c4 08	addq	$8, %rsp
100026904:	5b	popq	%rbx
100026905:	5d	popq	%rbp
100026906:	e9 bf 8b 00 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
10002690b:	55	pushq	%rbp
10002690c:	48 89 e5	movq	%rsp, %rbp
10002690f:	53	pushq	%rbx
100026910:	50	pushq	%rax
100026911:	48 89 d3	movq	%rdx, %rbx
100026914:	e8 a5 8b 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100026919:	48 8b 35 98 ab 02 00	movq	175000(%rip), %rsi ## Objc selector ref: initWithURL:
100026920:	48 89 c7	movq	%rax, %rdi
100026923:	48 89 da	movq	%rbx, %rdx
100026926:	ff 15 f4 62 01 00	callq	*90868(%rip) ## Objc message: -[%rdi initWithURL:]
10002692c:	48 89 c7	movq	%rax, %rdi
10002692f:	48 83 c4 08	addq	$8, %rsp
100026933:	5b	popq	%rbx
100026934:	5d	popq	%rbp
100026935:	e9 90 8b 00 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
10002693a:	55	pushq	%rbp
10002693b:	48 89 e5	movq	%rsp, %rbp
10002693e:	53	pushq	%rbx
10002693f:	50	pushq	%rax
100026940:	48 89 d3	movq	%rdx, %rbx
100026943:	e8 76 8b 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100026948:	48 8b 35 29 ab 02 00	movq	174889(%rip), %rsi ## Objc selector ref: initWithInfo:
10002694f:	48 89 c7	movq	%rax, %rdi
100026952:	48 89 da	movq	%rbx, %rdx
100026955:	ff 15 c5 62 01 00	callq	*90821(%rip) ## Objc message: -[%rdi initWithInfo:]
10002695b:	48 89 c7	movq	%rax, %rdi
10002695e:	48 83 c4 08	addq	$8, %rsp
100026962:	5b	popq	%rbx
100026963:	5d	popq	%rbp
100026964:	e9 61 8b 00 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
100026969:	55	pushq	%rbp
10002696a:	48 89 e5	movq	%rsp, %rbp
10002696d:	53	pushq	%rbx
10002696e:	50	pushq	%rax
10002696f:	89 d3	movl	%edx, %ebx
100026971:	e8 48 8b 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100026976:	48 8b 35 2b ab 02 00	movq	174891(%rip), %rsi ## Objc selector ref: initWithSpace:
10002697d:	48 89 c7	movq	%rax, %rdi
100026980:	89 da	movl	%ebx, %edx
100026982:	ff 15 98 62 01 00	callq	*90776(%rip) ## Objc message: -[%rdi initWithSpace:]
100026988:	48 89 c7	movq	%rax, %rdi
10002698b:	48 83 c4 08	addq	$8, %rsp
10002698f:	5b	popq	%rbx
100026990:	5d	popq	%rbp
100026991:	e9 34 8b 00 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
100026996:	55	pushq	%rbp
100026997:	48 89 e5	movq	%rsp, %rbp
10002699a:	41 57	pushq	%r15
10002699c:	41 56	pushq	%r14
10002699e:	53	pushq	%rbx
10002699f:	48 83 ec 18	subq	$24, %rsp
1000269a3:	49 89 d6	movq	%rdx, %r14
1000269a6:	48 8d 45 d8	leaq	-40(%rbp), %rax
1000269aa:	48 89 38	movq	%rdi, (%rax)
1000269ad:	48 8b 0d d4 be 02 00	movq	179924(%rip), %rcx ## Objc class ref: CSProfile
1000269b4:	48 89 48 08	movq	%rcx, 8(%rax)
1000269b8:	48 8b 35 51 aa 02 00	movq	174673(%rip), %rsi ## Objc selector ref: init
1000269bf:	48 89 c7	movq	%rax, %rdi
1000269c2:	e8 15 8b 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
1000269c7:	48 85 c0	testq	%rax, %rax
1000269ca:	0f 84 0b 01 00 00	je	0x100026adb
1000269d0:	48 89 c3	movq	%rax, %rbx
1000269d3:	4c 89 f7	movq	%r14, %rdi
1000269d6:	e8 b5 88 00 00	callq	0x10002f290 ## symbol stub for: _ColorSyncProfileCreateMutableCopy
1000269db:	48 89 83 98 00 00 00	movq	%rax, 152(%rbx)
1000269e2:	48 85 c0	testq	%rax, %rax
1000269e5:	0f 84 d5 00 00 00	je	0x100026ac0
1000269eb:	45 31 ff	xorl	%r15d, %r15d
1000269ee:	4c 89 f7	movq	%r14, %rdi
1000269f1:	31 f6	xorl	%esi, %esi
1000269f3:	e8 b0 88 00 00	callq	0x10002f2a8 ## symbol stub for: _ColorSyncProfileGetURL
1000269f8:	48 85 c0	testq	%rax, %rax
1000269fb:	74 0b	je	0x100026a08
1000269fd:	48 89 c7	movq	%rax, %rdi
100026a00:	e8 13 85 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100026a05:	49 89 c7	movq	%rax, %r15
100026a08:	4c 89 bb 88 00 00 00	movq	%r15, 136(%rbx)
100026a0f:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026a16:	e8 57 88 00 00	callq	0x10002f272 ## symbol stub for: _ColorSyncProfileCopyHeader
100026a1b:	48 85 c0	testq	%rax, %rax
100026a1e:	0f 84 9c 00 00 00	je	0x100026ac0
100026a24:	49 89 c6	movq	%rax, %r14
100026a27:	48 89 c7	movq	%rax, %rdi
100026a2a:	e8 71 84 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100026a2f:	0f 10 00	movups	(%rax), %xmm0
100026a32:	0f 10 48 10	movups	16(%rax), %xmm1
100026a36:	0f 10 50 20	movups	32(%rax), %xmm2
100026a3a:	0f 10 58 30	movups	48(%rax), %xmm3
100026a3e:	0f 11 43 08	movups	%xmm0, 8(%rbx)
100026a42:	0f 11 4b 18	movups	%xmm1, 24(%rbx)
100026a46:	0f 11 53 28	movups	%xmm2, 40(%rbx)
100026a4a:	0f 11 5b 38	movups	%xmm3, 56(%rbx)
100026a4e:	0f 10 40 40	movups	64(%rax), %xmm0
100026a52:	0f 11 43 48	movups	%xmm0, 72(%rbx)
100026a56:	0f 10 40 50	movups	80(%rax), %xmm0
100026a5a:	0f 11 43 58	movups	%xmm0, 88(%rbx)
100026a5e:	0f 10 40 60	movups	96(%rax), %xmm0
100026a62:	0f 11 43 68	movups	%xmm0, 104(%rbx)
100026a66:	0f 10 40 70	movups	112(%rax), %xmm0
100026a6a:	0f 11 43 78	movups	%xmm0, 120(%rbx)
100026a6e:	4c 89 f7	movq	%r14, %rdi
100026a71:	e8 9c 84 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026a76:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026a7d:	e8 ea 87 00 00	callq	0x10002f26c ## symbol stub for: _ColorSyncProfileCopyDescriptionString
100026a82:	48 89 83 90 00 00 00	movq	%rax, 144(%rbx)
100026a89:	48 85 c0	testq	%rax, %rax
100026a8c:	74 32	je	0x100026ac0
100026a8e:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026a95:	e8 08 88 00 00	callq	0x10002f2a2 ## symbol stub for: _ColorSyncProfileGetMD5
100026a9a:	48 89 83 a0 00 00 00	movq	%rax, 160(%rbx)
100026aa1:	48 89 93 a8 00 00 00	movq	%rdx, 168(%rbx)
100026aa8:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026aaf:	31 f6	xorl	%esi, %esi
100026ab1:	31 d2	xorl	%edx, %edx
100026ab3:	e8 02 88 00 00	callq	0x10002f2ba ## symbol stub for: _ColorSyncProfileVerify
100026ab8:	88 83 b8 00 00 00	movb	%al, 184(%rbx)
100026abe:	eb 1d	jmp	0x100026add
100026ac0:	48 8d 3d d9 8c 01 00	leaq	101593(%rip), %rdi ## Objc cfstring ref: @"initializeWithRef failed
"
100026ac7:	31 c0	xorl	%eax, %eax
100026ac9:	e8 2e 88 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
100026ace:	e8 05 88 00 00	callq	0x10002f2d8 ## symbol stub for: _NSBeep
100026ad3:	48 89 df	movq	%rbx, %rdi
100026ad6:	e8 ef 89 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100026adb:	31 db	xorl	%ebx, %ebx
100026add:	48 89 d8	movq	%rbx, %rax
100026ae0:	48 83 c4 18	addq	$24, %rsp
100026ae4:	5b	popq	%rbx
100026ae5:	41 5e	popq	%r14
100026ae7:	41 5f	popq	%r15
100026ae9:	5d	popq	%rbp
100026aea:	c3	retq
100026aeb:	55	pushq	%rbp
100026aec:	48 89 e5	movq	%rsp, %rbp
100026aef:	48 8b 35 ea a9 02 00	movq	174570(%rip), %rsi ## Objc selector ref: initializeWithRef:
100026af6:	5d	popq	%rbp
100026af7:	ff 25 23 61 01 00	jmpq	*90403(%rip) ## Objc message: -[%rdi initializeWithRef:]
100026afd:	55	pushq	%rbp
100026afe:	48 89 e5	movq	%rsp, %rbp
100026b01:	41 56	pushq	%r14
100026b03:	53	pushq	%rbx
100026b04:	49 89 fe	movq	%rdi, %r14
100026b07:	48 85 d2	testq	%rdx, %rdx
100026b0a:	74 35	je	0x100026b41
100026b0c:	48 89 d7	movq	%rdx, %rdi
100026b0f:	31 f6	xorl	%esi, %esi
100026b11:	e8 86 87 00 00	callq	0x10002f29c ## symbol stub for: _ColorSyncProfileCreateWithURL
100026b16:	48 85 c0	testq	%rax, %rax
100026b19:	74 26	je	0x100026b41
100026b1b:	48 89 c3	movq	%rax, %rbx
100026b1e:	48 8b 35 bb a9 02 00	movq	174523(%rip), %rsi ## Objc selector ref: initializeWithRef:
100026b25:	4c 89 f7	movq	%r14, %rdi
100026b28:	48 89 c2	movq	%rax, %rdx
100026b2b:	ff 15 ef 60 01 00	callq	*90351(%rip) ## Objc message: -[%rdi initializeWithRef:]
100026b31:	49 89 c6	movq	%rax, %r14
100026b34:	48 89 df	movq	%rbx, %rdi
100026b37:	e8 d6 83 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026b3c:	4c 89 f0	movq	%r14, %rax
100026b3f:	eb 1d	jmp	0x100026b5e
100026b41:	48 8d 3d 78 8c 01 00	leaq	101496(%rip), %rdi ## Objc cfstring ref: @"initWithPath failed
"
100026b48:	31 c0	xorl	%eax, %eax
100026b4a:	e8 ad 87 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
100026b4f:	e8 84 87 00 00	callq	0x10002f2d8 ## symbol stub for: _NSBeep
100026b54:	4c 89 f7	movq	%r14, %rdi
100026b57:	e8 6e 89 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100026b5c:	31 c0	xorl	%eax, %eax
100026b5e:	5b	popq	%rbx
100026b5f:	41 5e	popq	%r14
100026b61:	5d	popq	%rbp
100026b62:	c3	retq
100026b63:	55	pushq	%rbp
100026b64:	48 89 e5	movq	%rsp, %rbp
100026b67:	41 56	pushq	%r14
100026b69:	53	pushq	%rbx
100026b6a:	48 83 ec 10	subq	$16, %rsp
100026b6e:	49 89 d6	movq	%rdx, %r14
100026b71:	48 8d 45 e0	leaq	-32(%rbp), %rax
100026b75:	48 89 38	movq	%rdi, (%rax)
100026b78:	48 8b 0d 09 bd 02 00	movq	179465(%rip), %rcx ## Objc class ref: CSProfile
100026b7f:	48 89 48 08	movq	%rcx, 8(%rax)
100026b83:	48 8b 35 86 a8 02 00	movq	174214(%rip), %rsi ## Objc selector ref: init
100026b8a:	48 89 c7	movq	%rax, %rdi
100026b8d:	e8 4a 89 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] init]
100026b92:	48 89 c3	movq	%rax, %rbx
100026b95:	48 85 c0	testq	%rax, %rax
100026b98:	0f 84 d4 00 00 00	je	0x100026c72
100026b9e:	48 8b 05 c3 5e 01 00	movq	89795(%rip), %rax ## literal pool symbol address: _kColorSyncProfileHeader
100026ba5:	48 8b 30	movq	(%rax), %rsi
100026ba8:	4c 89 f7	movq	%r14, %rdi
100026bab:	e8 32 83 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100026bb0:	48 85 c0	testq	%rax, %rax
100026bb3:	74 47	je	0x100026bfc
100026bb5:	48 89 c7	movq	%rax, %rdi
100026bb8:	e8 e3 82 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100026bbd:	0f 10 00	movups	(%rax), %xmm0
100026bc0:	0f 10 48 10	movups	16(%rax), %xmm1
100026bc4:	0f 10 50 20	movups	32(%rax), %xmm2
100026bc8:	0f 10 58 30	movups	48(%rax), %xmm3
100026bcc:	0f 11 43 08	movups	%xmm0, 8(%rbx)
100026bd0:	0f 11 4b 18	movups	%xmm1, 24(%rbx)
100026bd4:	0f 11 53 28	movups	%xmm2, 40(%rbx)
100026bd8:	0f 11 5b 38	movups	%xmm3, 56(%rbx)
100026bdc:	0f 10 40 40	movups	64(%rax), %xmm0
100026be0:	0f 11 43 48	movups	%xmm0, 72(%rbx)
100026be4:	0f 10 40 50	movups	80(%rax), %xmm0
100026be8:	0f 11 43 58	movups	%xmm0, 88(%rbx)
100026bec:	0f 10 40 60	movups	96(%rax), %xmm0
100026bf0:	0f 11 43 68	movups	%xmm0, 104(%rbx)
100026bf4:	0f 10 40 70	movups	112(%rax), %xmm0
100026bf8:	0f 11 43 78	movups	%xmm0, 120(%rbx)
100026bfc:	48 8b 05 75 5e 01 00	movq	89717(%rip), %rax ## literal pool symbol address: _kColorSyncProfileURL
100026c03:	48 8b 30	movq	(%rax), %rsi
100026c06:	4c 89 f7	movq	%r14, %rdi
100026c09:	e8 d4 82 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100026c0e:	48 89 83 88 00 00 00	movq	%rax, 136(%rbx)
100026c15:	48 85 c0	testq	%rax, %rax
100026c18:	74 08	je	0x100026c22
100026c1a:	48 89 c7	movq	%rax, %rdi
100026c1d:	e8 f6 82 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100026c22:	48 8b 05 37 5e 01 00	movq	89655(%rip), %rax ## literal pool symbol address: _kColorSyncProfileDescription
100026c29:	48 8b 30	movq	(%rax), %rsi
100026c2c:	4c 89 f7	movq	%r14, %rdi
100026c2f:	e8 ae 82 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100026c34:	48 89 83 90 00 00 00	movq	%rax, 144(%rbx)
100026c3b:	48 85 c0	testq	%rax, %rax
100026c3e:	74 09	je	0x100026c49
100026c40:	48 89 c7	movq	%rax, %rdi
100026c43:	ff 15 17 60 01 00	callq	*90135(%rip) ## literal pool symbol address: _objc_retain
100026c49:	48 8b 05 20 5e 01 00	movq	89632(%rip), %rax ## literal pool symbol address: _kColorSyncProfileMD5Digest
100026c50:	48 8b 30	movq	(%rax), %rsi
100026c53:	4c 89 f7	movq	%r14, %rdi
100026c56:	e8 87 82 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100026c5b:	48 85 c0	testq	%rax, %rax
100026c5e:	74 12	je	0x100026c72
100026c60:	48 89 c7	movq	%rax, %rdi
100026c63:	e8 38 82 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
100026c68:	0f 10 00	movups	(%rax), %xmm0
100026c6b:	0f 11 83 a0 00 00 00	movups	%xmm0, 160(%rbx)
100026c72:	48 89 d8	movq	%rbx, %rax
100026c75:	48 83 c4 10	addq	$16, %rsp
100026c79:	5b	popq	%rbx
100026c7a:	41 5e	popq	%r14
100026c7c:	5d	popq	%rbp
100026c7d:	c3	retq
100026c7e:	55	pushq	%rbp
100026c7f:	48 89 e5	movq	%rsp, %rbp
100026c82:	41 56	pushq	%r14
100026c84:	53	pushq	%rbx
100026c85:	49 89 fe	movq	%rdi, %r14
100026c88:	81 fa 1f 62 61 4c	cmpl	$1281450527, %edx
100026c8e:	7e 21	jle	0x100026cb1
100026c90:	81 fa 20 62 61 4c	cmpl	$1281450528, %edx
100026c96:	74 32	je	0x100026cca
100026c98:	81 fa 20 5a 59 58	cmpl	$1482250784, %edx
100026c9e:	74 33	je	0x100026cd3
100026ca0:	81 fa 20 42 47 52	cmpl	$1380401696, %edx
100026ca6:	75 6b	jne	0x100026d13
100026ca8:	48 8b 05 f9 5d 01 00	movq	89593(%rip), %rax ## literal pool symbol address: _kColorSyncSRGBProfile
100026caf:	eb 32	jmp	0x100026ce3
100026cb1:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
100026cb7:	74 23	je	0x100026cdc
100026cb9:	81 fa 59 41 52 47	cmpl	$1196573017, %edx
100026cbf:	75 52	jne	0x100026d13
100026cc1:	48 8b 05 78 5d 01 00	movq	89464(%rip), %rax ## literal pool symbol address: _kColorSyncGenericGrayGamma22Profile
100026cc8:	eb 19	jmp	0x100026ce3
100026cca:	48 8b 05 77 5d 01 00	movq	89463(%rip), %rax ## literal pool symbol address: _kColorSyncGenericLabProfile
100026cd1:	eb 10	jmp	0x100026ce3
100026cd3:	48 8b 05 76 5d 01 00	movq	89462(%rip), %rax ## literal pool symbol address: _kColorSyncGenericXYZProfile
100026cda:	eb 07	jmp	0x100026ce3
100026cdc:	48 8b 05 55 5d 01 00	movq	89429(%rip), %rax ## literal pool symbol address: _kColorSyncGenericCMYKProfile
100026ce3:	48 8b 38	movq	(%rax), %rdi
100026ce6:	e8 ab 85 00 00	callq	0x10002f296 ## symbol stub for: _ColorSyncProfileCreateWithName
100026ceb:	48 85 c0	testq	%rax, %rax
100026cee:	74 23	je	0x100026d13
100026cf0:	48 89 c3	movq	%rax, %rbx
100026cf3:	48 8b 35 e6 a7 02 00	movq	174054(%rip), %rsi ## Objc selector ref: initializeWithRef:
100026cfa:	4c 89 f7	movq	%r14, %rdi
100026cfd:	48 89 c2	movq	%rax, %rdx
100026d00:	ff 15 1a 5f 01 00	callq	*89882(%rip) ## Objc message: -[%rdi initializeWithRef:]
100026d06:	48 89 df	movq	%rbx, %rdi
100026d09:	e8 04 82 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026d0e:	4c 89 f3	movq	%r14, %rbx
100026d11:	eb 1d	jmp	0x100026d30
100026d13:	48 8d 3d c6 8a 01 00	leaq	101062(%rip), %rdi ## Objc cfstring ref: @"initWithSpace failed
"
100026d1a:	31 db	xorl	%ebx, %ebx
100026d1c:	31 c0	xorl	%eax, %eax
100026d1e:	e8 d9 85 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
100026d23:	e8 b0 85 00 00	callq	0x10002f2d8 ## symbol stub for: _NSBeep
100026d28:	4c 89 f7	movq	%r14, %rdi
100026d2b:	e8 9a 87 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100026d30:	48 89 d8	movq	%rbx, %rax
100026d33:	5b	popq	%rbx
100026d34:	41 5e	popq	%r14
100026d36:	5d	popq	%rbp
100026d37:	c3	retq
100026d38:	55	pushq	%rbp
100026d39:	48 89 e5	movq	%rsp, %rbp
100026d3c:	41 57	pushq	%r15
100026d3e:	41 56	pushq	%r14
100026d40:	41 54	pushq	%r12
100026d42:	53	pushq	%rbx
100026d43:	49 89 d6	movq	%rdx, %r14
100026d46:	48 89 fb	movq	%rdi, %rbx
100026d49:	48 8b 35 10 a8 02 00	movq	174096(%rip), %rsi ## Objc selector ref: isDirty
100026d50:	ff 15 ca 5e 01 00	callq	*89802(%rip) ## Objc message: -[%rdi isDirty]
100026d56:	84 c0	testb	%al, %al
100026d58:	74 6a	je	0x100026dc4
100026d5a:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026d61:	45 31 ff	xorl	%r15d, %r15d
100026d64:	31 f6	xorl	%esi, %esi
100026d66:	e8 fb 84 00 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
100026d6b:	48 85 c0	testq	%rax, %rax
100026d6e:	0f 84 9a 00 00 00	je	0x100026e0e
100026d74:	49 89 c4	movq	%rax, %r12
100026d77:	45 31 ff	xorl	%r15d, %r15d
100026d7a:	48 89 c7	movq	%rax, %rdi
100026d7d:	31 f6	xorl	%esi, %esi
100026d7f:	e8 06 85 00 00	callq	0x10002f28a ## symbol stub for: _ColorSyncProfileCreate
100026d84:	48 85 c0	testq	%rax, %rax
100026d87:	74 7d	je	0x100026e06
100026d89:	48 89 c3	movq	%rax, %rbx
100026d8c:	48 8b 3d 55 b8 02 00	movq	178261(%rip), %rdi ## Objc class ref: CSProfile
100026d93:	48 8b 35 2e 9f 02 00	movq	171822(%rip), %rsi ## Objc selector ref: allocWithZone:
100026d9a:	4c 8b 3d 7f 5e 01 00	movq	89727(%rip), %r15 ## Objc message: +[CSProfile allocWithZone:]
100026da1:	4c 89 f2	movq	%r14, %rdx
100026da4:	41 ff d7	callq	*%r15
100026da7:	48 8b 35 f2 a6 02 00	movq	173810(%rip), %rsi ## Objc selector ref: initWithRef:
100026dae:	48 89 c7	movq	%rax, %rdi
100026db1:	48 89 da	movq	%rbx, %rdx
100026db4:	41 ff d7	callq	*%r15
100026db7:	49 89 c7	movq	%rax, %r15
100026dba:	48 89 df	movq	%rbx, %rdi
100026dbd:	e8 50 81 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026dc2:	eb 42	jmp	0x100026e06
100026dc4:	48 8b bb 88 00 00 00	movq	136(%rbx), %rdi
100026dcb:	31 f6	xorl	%esi, %esi
100026dcd:	e8 ca 84 00 00	callq	0x10002f29c ## symbol stub for: _ColorSyncProfileCreateWithURL
100026dd2:	49 89 c4	movq	%rax, %r12
100026dd5:	48 85 c0	testq	%rax, %rax
100026dd8:	74 40	je	0x100026e1a
100026dda:	48 8b 3d 07 b8 02 00	movq	178183(%rip), %rdi ## Objc class ref: CSProfile
100026de1:	48 8b 35 e0 9e 02 00	movq	171744(%rip), %rsi ## Objc selector ref: allocWithZone:
100026de8:	48 8b 1d 31 5e 01 00	movq	89649(%rip), %rbx ## Objc message: +[CSProfile allocWithZone:]
100026def:	4c 89 f2	movq	%r14, %rdx
100026df2:	ff d3	callq	*%rbx
100026df4:	48 8b 35 a5 a6 02 00	movq	173733(%rip), %rsi ## Objc selector ref: initWithRef:
100026dfb:	48 89 c7	movq	%rax, %rdi
100026dfe:	4c 89 e2	movq	%r12, %rdx
100026e01:	ff d3	callq	*%rbx
100026e03:	49 89 c7	movq	%rax, %r15
100026e06:	4c 89 e7	movq	%r12, %rdi
100026e09:	e8 04 81 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026e0e:	4c 89 f8	movq	%r15, %rax
100026e11:	5b	popq	%rbx
100026e12:	41 5c	popq	%r12
100026e14:	41 5e	popq	%r14
100026e16:	41 5f	popq	%r15
100026e18:	5d	popq	%rbp
100026e19:	c3	retq
100026e1a:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100026e21:	45 31 ff	xorl	%r15d, %r15d
100026e24:	31 f6	xorl	%esi, %esi
100026e26:	e8 3b 84 00 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
100026e2b:	48 85 c0	testq	%rax, %rax
100026e2e:	74 de	je	0x100026e0e
100026e30:	48 89 c3	movq	%rax, %rbx
100026e33:	45 31 ff	xorl	%r15d, %r15d
100026e36:	48 89 c7	movq	%rax, %rdi
100026e39:	31 f6	xorl	%esi, %esi
100026e3b:	e8 4a 84 00 00	callq	0x10002f28a ## symbol stub for: _ColorSyncProfileCreate
100026e40:	49 89 c4	movq	%rax, %r12
100026e43:	48 89 df	movq	%rbx, %rdi
100026e46:	e8 c7 80 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026e4b:	4d 85 e4	testq	%r12, %r12
100026e4e:	75 8a	jne	0x100026dda
100026e50:	eb bc	jmp	0x100026e0e
100026e52:	55	pushq	%rbp
100026e53:	48 89 e5	movq	%rsp, %rbp
100026e56:	53	pushq	%rbx
100026e57:	48 83 ec 18	subq	$24, %rsp
100026e5b:	48 89 fb	movq	%rdi, %rbx
100026e5e:	48 8b 35 2b a0 02 00	movq	172075(%rip), %rsi ## Objc selector ref: close
100026e65:	ff 15 b5 5d 01 00	callq	*89525(%rip) ## Objc message: -[%rdi close]
100026e6b:	48 8b bb 90 00 00 00	movq	144(%rbx), %rdi
100026e72:	ff 15 e0 5d 01 00	callq	*89568(%rip) ## literal pool symbol address: _objc_release
100026e78:	48 8b bb 88 00 00 00	movq	136(%rbx), %rdi
100026e7f:	48 85 ff	testq	%rdi, %rdi
100026e82:	74 05	je	0x100026e89
100026e84:	e8 89 80 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100026e89:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100026e8d:	48 89 1f	movq	%rbx, (%rdi)
100026e90:	48 8b 05 f1 b9 02 00	movq	178673(%rip), %rax ## Objc class ref: CSProfile
100026e97:	48 89 47 08	movq	%rax, 8(%rdi)
100026e9b:	48 8b 35 ae a1 02 00	movq	172462(%rip), %rsi ## Objc selector ref: dealloc
100026ea2:	e8 35 86 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100026ea7:	48 83 c4 18	addq	$24, %rsp
100026eab:	5b	popq	%rbx
100026eac:	5d	popq	%rbp
100026ead:	c3	retq
100026eae:	55	pushq	%rbp
100026eaf:	48 89 e5	movq	%rsp, %rbp
100026eb2:	48 83 ec 10	subq	$16, %rsp
100026eb6:	48 8b 87 90 00 00 00	movq	144(%rdi), %rax
100026ebd:	48 85 c0	testq	%rax, %rax
100026ec0:	75 21	jne	0x100026ee3
100026ec2:	48 8d 45 f0	leaq	-16(%rbp), %rax
100026ec6:	48 89 38	movq	%rdi, (%rax)
100026ec9:	48 8b 0d b8 b9 02 00	movq	178616(%rip), %rcx ## Objc class ref: CSProfile
100026ed0:	48 89 48 08	movq	%rcx, 8(%rax)
100026ed4:	48 8b 35 a5 a1 02 00	movq	172453(%rip), %rsi ## Objc selector ref: description
100026edb:	48 89 c7	movq	%rax, %rdi
100026ede:	e8 f9 85 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] description]
100026ee3:	48 83 c4 10	addq	$16, %rsp
100026ee7:	5d	popq	%rbp
100026ee8:	c3	retq
100026ee9:	55	pushq	%rbp
100026eea:	48 89 e5	movq	%rsp, %rbp
100026eed:	41 57	pushq	%r15
100026eef:	41 56	pushq	%r14
100026ef1:	41 55	pushq	%r13
100026ef3:	41 54	pushq	%r12
100026ef5:	53	pushq	%rbx
100026ef6:	48 81 ec 58 04 00 00	subq	$1112, %rsp
100026efd:	49 89 d7	movq	%rdx, %r15
100026f00:	48 89 fb	movq	%rdi, %rbx
100026f03:	48 8b 05 0e 59 01 00	movq	88334(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100026f0a:	48 8b 00	movq	(%rax), %rax
100026f0d:	48 89 45 d0	movq	%rax, -48(%rbp)
100026f11:	48 8b 35 e0 a6 02 00	movq	173792(%rip), %rsi ## Objc selector ref: length
100026f18:	48 89 d7	movq	%rdx, %rdi
100026f1b:	ff 15 ff 5c 01 00	callq	*89343(%rip) ## Objc message: -[%rdi length]
100026f21:	49 89 c6	movq	%rax, %r14
100026f24:	4c 8d a5 c0 fb ff ff	leaq	-1088(%rbp), %r12
100026f2b:	be 01 04 00 00	movl	$1025, %esi
100026f30:	4c 89 e7	movq	%r12, %rdi
100026f33:	e8 5a 84 00 00	callq	0x10002f392 ## symbol stub for: ___bzero
100026f38:	ba 00 04 00 00	movl	$1024, %edx
100026f3d:	4c 89 ff	movq	%r15, %rdi
100026f40:	4c 89 e6	movq	%r12, %rsi
100026f43:	b9 00 06 00 00	movl	$1536, %ecx
100026f48:	e8 fb 7f 00 00	callq	0x10002ef48 ## symbol stub for: _CFStringGetCString
100026f4d:	84 c0	testb	%al, %al
100026f4f:	75 2c	jne	0x100026f7d
100026f51:	48 83 ec 08	subq	$8, %rsp
100026f55:	4c 89 ff	movq	%r15, %rdi
100026f58:	31 f6	xorl	%esi, %esi
100026f5a:	4c 89 f2	movq	%r14, %rdx
100026f5d:	b9 00 06 00 00	movl	$1536, %ecx
100026f62:	41 b8 3f 00 00 00	movl	$63, %r8d
100026f68:	45 31 c9	xorl	%r9d, %r9d
100026f6b:	6a 00	pushq	$0
100026f6d:	68 00 04 00 00	pushq	$1024
100026f72:	41 54	pushq	%r12
100026f74:	e8 c9 7f 00 00	callq	0x10002ef42 ## symbol stub for: _CFStringGetBytes
100026f79:	48 83 c4 20	addq	$32, %rsp
100026f7d:	48 89 9d 90 fb ff ff	movq	%rbx, -1136(%rbp)
100026f84:	4c 8b a3 98 00 00 00	movq	152(%rbx), %r12
100026f8b:	48 8d bd c0 fb ff ff	leaq	-1088(%rbp), %rdi
100026f92:	e8 a5 85 00 00	callq	0x10002f53c ## symbol stub for: _strlen
100026f97:	49 89 c5	movq	%rax, %r13
100026f9a:	4c 8d 70 5b	leaq	91(%rax), %r14
100026f9e:	31 ff	xorl	%edi, %edi
100026fa0:	4c 89 f6	movq	%r14, %rsi
100026fa3:	e8 e6 7e 00 00	callq	0x10002ee8e ## symbol stub for: _CFDataCreateMutable
100026fa8:	48 85 c0	testq	%rax, %rax
100026fab:	74 7e	je	0x10002702b
100026fad:	48 89 c3	movq	%rax, %rbx
100026fb0:	4c 89 a5 98 fb ff ff	movq	%r12, -1128(%rbp)
100026fb7:	48 89 c7	movq	%rax, %rdi
100026fba:	4c 89 f6	movq	%r14, %rsi
100026fbd:	e8 f0 7e 00 00	callq	0x10002eeb2 ## symbol stub for: _CFDataSetLength
100026fc2:	48 89 df	movq	%rbx, %rdi
100026fc5:	e8 e2 7e 00 00	callq	0x10002eeac ## symbol stub for: _CFDataGetMutableBytePtr
100026fca:	48 85 c0	testq	%rax, %rax
100026fcd:	74 54	je	0x100027023
100026fcf:	49 89 c4	movq	%rax, %r12
100026fd2:	49 ff c5	incq	%r13
100026fd5:	48 89 c7	movq	%rax, %rdi
100026fd8:	4c 89 f6	movq	%r14, %rsi
100026fdb:	e8 b2 83 00 00	callq	0x10002f392 ## symbol stub for: ___bzero
100026fe0:	41 c7 04 24 64 65 73 63	movl	$1668506980, (%r12)
100026fe8:	44 89 e8	movl	%r13d, %eax
100026feb:	0f c8	bswapl	%eax
100026fed:	41 89 44 24 08	movl	%eax, 8(%r12)
100026ff2:	4d 85 ed	testq	%r13, %r13
100026ff5:	74 16	je	0x10002700d
100026ff7:	49 83 c4 0c	addq	$12, %r12
100026ffb:	48 8d b5 c0 fb ff ff	leaq	-1088(%rbp), %rsi
100027002:	4c 89 e7	movq	%r12, %rdi
100027005:	4c 89 ea	movq	%r13, %rdx
100027008:	e8 ab 84 00 00	callq	0x10002f4b8 ## symbol stub for: _memcpy
10002700d:	48 8d 35 6c 88 01 00	leaq	100460(%rip), %rsi ## Objc cfstring ref: @"desc"
100027014:	48 8b bd 98 fb ff ff	movq	-1128(%rbp), %rdi
10002701b:	48 89 da	movq	%rbx, %rdx
10002701e:	e8 91 82 00 00	callq	0x10002f2b4 ## symbol stub for: _ColorSyncProfileSetTag
100027023:	48 89 df	movq	%rbx, %rdi
100027026:	e8 e7 7e 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002702b:	48 8d b5 c0 fb ff ff	leaq	-1088(%rbp), %rsi
100027032:	31 ff	xorl	%edi, %edi
100027034:	ba 00 06 00 00	movl	$1536, %edx
100027039:	e8 fe 7e 00 00	callq	0x10002ef3c ## symbol stub for: _CFStringCreateWithCString
10002703e:	49 89 c4	movq	%rax, %r12
100027041:	48 8d 9d 88 fb ff ff	leaq	-1144(%rbp), %rbx
100027048:	4c 8d b5 8c fb ff ff	leaq	-1140(%rbp), %r14
10002704f:	48 89 df	movq	%rbx, %rdi
100027052:	4c 89 f6	movq	%r14, %rsi
100027055:	e8 2c 83 00 00	callq	0x10002f386 ## symbol stub for: __CFBundleGetLanguageAndRegionCodes
10002705a:	8b 3b	movl	(%rbx), %edi
10002705c:	41 8b 36	movl	(%r14), %esi
10002705f:	ba ff ff ff ff	movl	$4294967295, %edx
100027064:	b9 ff ff 00 00	movl	$65535, %ecx
100027069:	e8 14 7e 00 00	callq	0x10002ee82 ## symbol stub for: _CFBundleCopyLocalizationForLocalizationInfo
10002706e:	48 85 c0	testq	%rax, %rax
100027071:	0f 84 97 00 00 00	je	0x10002710e
100027077:	49 89 c6	movq	%rax, %r14
10002707a:	4c 8d ad b0 fb ff ff	leaq	-1104(%rbp), %r13
100027081:	49 89 45 00	movq	%rax, (%r13)
100027085:	48 8d 35 74 87 01 00	leaq	100212(%rip), %rsi ## Objc cfstring ref: @"en_US"
10002708c:	49 89 75 08	movq	%rsi, 8(%r13)
100027090:	48 8d 9d a0 fb ff ff	leaq	-1120(%rbp), %rbx
100027097:	4c 89 3b	movq	%r15, (%rbx)
10002709a:	4c 89 63 08	movq	%r12, 8(%rbx)
10002709e:	48 89 c7	movq	%rax, %rdi
1000270a1:	e8 4e 7e 00 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
1000270a6:	49 83 fc 01	cmpq	$1, %r12
1000270aa:	ba 02 00 00 00	movl	$2, %edx
1000270af:	48 83 da 00	sbbq	$0, %rdx
1000270b3:	84 c0	testb	%al, %al
1000270b5:	b9 01 00 00 00	movl	$1, %ecx
1000270ba:	48 0f 44 ca	cmoveq	%rdx, %rcx
1000270be:	4c 8b 05 cb 58 01 00	movq	88267(%rip), %r8 ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
1000270c5:	4c 8b 0d cc 58 01 00	movq	88268(%rip), %r9 ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
1000270cc:	31 ff	xorl	%edi, %edi
1000270ce:	4c 89 ee	movq	%r13, %rsi
1000270d1:	48 89 da	movq	%rbx, %rdx
1000270d4:	e8 e5 7d 00 00	callq	0x10002eebe ## symbol stub for: _CFDictionaryCreate
1000270d9:	48 89 c3	movq	%rax, %rbx
1000270dc:	48 8b 85 90 fb ff ff	movq	-1136(%rbp), %rax
1000270e3:	48 8b b8 98 00 00 00	movq	152(%rax), %rdi
1000270ea:	48 8d 35 2f 87 01 00	leaq	100143(%rip), %rsi ## Objc cfstring ref: @"dscm"
1000270f1:	48 89 da	movq	%rbx, %rdx
1000270f4:	e8 b5 81 00 00	callq	0x10002f2ae ## symbol stub for: _ColorSyncProfileSetLocalizedStringDictionary
1000270f9:	48 85 db	testq	%rbx, %rbx
1000270fc:	74 08	je	0x100027106
1000270fe:	48 89 df	movq	%rbx, %rdi
100027101:	e8 0c 7e 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027106:	4c 89 f7	movq	%r14, %rdi
100027109:	e8 04 7e 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002710e:	4d 85 e4	testq	%r12, %r12
100027111:	74 08	je	0x10002711b
100027113:	4c 89 e7	movq	%r12, %rdi
100027116:	e8 f7 7d 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002711b:	48 8b 05 f6 56 01 00	movq	87798(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100027122:	48 8b 00	movq	(%rax), %rax
100027125:	48 3b 45 d0	cmpq	-48(%rbp), %rax
100027129:	75 12	jne	0x10002713d
10002712b:	48 81 c4 58 04 00 00	addq	$1112, %rsp
100027132:	5b	popq	%rbx
100027133:	41 5c	popq	%r12
100027135:	41 5d	popq	%r13
100027137:	41 5e	popq	%r14
100027139:	41 5f	popq	%r15
10002713b:	5d	popq	%rbp
10002713c:	c3	retq
10002713d:	e8 6e 82 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100027142:	55	pushq	%rbp
100027143:	48 89 e5	movq	%rsp, %rbp
100027146:	8b 47 08	movl	8(%rdi), %eax
100027149:	5d	popq	%rbp
10002714a:	c3	retq
10002714b:	55	pushq	%rbp
10002714c:	48 89 e5	movq	%rsp, %rbp
10002714f:	b8 00 00 f0 ff	movl	$4293918720, %eax
100027154:	23 47 10	andl	16(%rdi), %eax
100027157:	5d	popq	%rbp
100027158:	c3	retq
100027159:	55	pushq	%rbp
10002715a:	48 89 e5	movq	%rsp, %rbp
10002715d:	53	pushq	%rbx
10002715e:	50	pushq	%rax
10002715f:	48 8b 35 9a a8 02 00	movq	174234(%rip), %rsi ## Objc selector ref: profVers
100027166:	48 8b 1d b3 5a 01 00	movq	88755(%rip), %rbx ## Objc message: -[%rdi profVers]
10002716d:	ff d3	callq	*%rbx
10002716f:	48 8b 3d 52 b4 02 00	movq	177234(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
100027176:	89 c1	movl	%eax, %ecx
100027178:	c1 e9 18	shrl	$24, %ecx
10002717b:	41 89 c0	movl	%eax, %r8d
10002717e:	41 c1 e8 14	shrl	$20, %r8d
100027182:	41 83 e0 0f	andl	$15, %r8d
100027186:	c1 e8 10	shrl	$16, %eax
100027189:	83 e0 0f	andl	$15, %eax
10002718c:	48 8b 35 95 b1 02 00	movq	176533(%rip), %rsi ## Objc selector ref: stringWithFormat:
100027193:	48 8d 15 66 74 01 00	leaq	95334(%rip), %rdx ## Objc cfstring ref: @"%d.%d.%d"
10002719a:	41 89 c1	movl	%eax, %r9d
10002719d:	31 c0	xorl	%eax, %eax
10002719f:	49 89 db	movq	%rbx, %r11
1000271a2:	48 83 c4 08	addq	$8, %rsp
1000271a6:	5b	popq	%rbx
1000271a7:	5d	popq	%rbp
1000271a8:	41 ff e3	jmpq	*%r11
1000271ab:	55	pushq	%rbp
1000271ac:	48 89 e5	movq	%rsp, %rbp
1000271af:	8b 47 18	movl	24(%rdi), %eax
1000271b2:	5d	popq	%rbp
1000271b3:	c3	retq
1000271b4:	55	pushq	%rbp
1000271b5:	48 89 e5	movq	%rsp, %rbp
1000271b8:	41 56	pushq	%r14
1000271ba:	53	pushq	%rbx
1000271bb:	48 8b 1d 06 b4 02 00	movq	177158(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
1000271c2:	48 8b 35 27 a8 02 00	movq	174119(%rip), %rsi ## Objc selector ref: profSpace
1000271c9:	4c 8b 35 50 5a 01 00	movq	88656(%rip), %r14 ## Objc message: +[NSString profSpace]
1000271d0:	41 ff d6	callq	*%r14
1000271d3:	48 8b 35 16 b1 02 00	movq	176406(%rip), %rsi ## Objc selector ref: stringForDataType:
1000271da:	48 89 df	movq	%rbx, %rdi
1000271dd:	89 c2	movl	%eax, %edx
1000271df:	4c 89 f0	movq	%r14, %rax
1000271e2:	5b	popq	%rbx
1000271e3:	41 5e	popq	%r14
1000271e5:	5d	popq	%rbp
1000271e6:	ff e0	jmpq	*%rax
1000271e8:	55	pushq	%rbp
1000271e9:	48 89 e5	movq	%rsp, %rbp
1000271ec:	8b 47 14	movl	20(%rdi), %eax
1000271ef:	5d	popq	%rbp
1000271f0:	c3	retq
1000271f1:	55	pushq	%rbp
1000271f2:	48 89 e5	movq	%rsp, %rbp
1000271f5:	41 56	pushq	%r14
1000271f7:	53	pushq	%rbx
1000271f8:	48 8b 1d c9 b3 02 00	movq	177097(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
1000271ff:	48 8b 35 c2 a7 02 00	movq	174018(%rip), %rsi ## Objc selector ref: profClass
100027206:	4c 8b 35 13 5a 01 00	movq	88595(%rip), %r14 ## Objc message: +[NSString profClass]
10002720d:	41 ff d6	callq	*%r14
100027210:	48 8b 35 d1 b0 02 00	movq	176337(%rip), %rsi ## Objc selector ref: stringForClassType:
100027217:	48 89 df	movq	%rbx, %rdi
10002721a:	89 c2	movl	%eax, %edx
10002721c:	4c 89 f0	movq	%r14, %rax
10002721f:	5b	popq	%rbx
100027220:	41 5e	popq	%r14
100027222:	5d	popq	%rbp
100027223:	ff e0	jmpq	*%rax
100027225:	55	pushq	%rbp
100027226:	48 89 e5	movq	%rsp, %rbp
100027229:	8b 47 1c	movl	28(%rdi), %eax
10002722c:	5d	popq	%rbp
10002722d:	c3	retq
10002722e:	55	pushq	%rbp
10002722f:	48 89 e5	movq	%rsp, %rbp
100027232:	41 56	pushq	%r14
100027234:	53	pushq	%rbx
100027235:	48 8b 1d 8c b3 02 00	movq	177036(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
10002723c:	48 8b 35 8d a7 02 00	movq	173965(%rip), %rsi ## Objc selector ref: profConnSpace
100027243:	4c 8b 35 d6 59 01 00	movq	88534(%rip), %r14 ## Objc message: +[NSString profConnSpace]
10002724a:	41 ff d6	callq	*%r14
10002724d:	48 8b 35 9c b0 02 00	movq	176284(%rip), %rsi ## Objc selector ref: stringForDataType:
100027254:	48 89 df	movq	%rbx, %rdi
100027257:	89 c2	movl	%eax, %edx
100027259:	4c 89 f0	movq	%r14, %rax
10002725c:	5b	popq	%rbx
10002725d:	41 5e	popq	%r14
10002725f:	5d	popq	%rbp
100027260:	ff e0	jmpq	*%rax
100027262:	55	pushq	%rbp
100027263:	48 89 e5	movq	%rsp, %rbp
100027266:	48 8b 87 a0 00 00 00	movq	160(%rdi), %rax
10002726d:	48 8b 97 a8 00 00 00	movq	168(%rdi), %rdx
100027274:	5d	popq	%rbp
100027275:	c3	retq
100027276:	55	pushq	%rbp
100027277:	48 89 e5	movq	%rsp, %rbp
10002727a:	0f be 87 b8 00 00 00	movsbl	184(%rdi), %eax
100027281:	5d	popq	%rbp
100027282:	c3	retq
100027283:	55	pushq	%rbp
100027284:	48 89 e5	movq	%rsp, %rbp
100027287:	41 57	pushq	%r15
100027289:	41 56	pushq	%r14
10002728b:	41 55	pushq	%r13
10002728d:	41 54	pushq	%r12
10002728f:	53	pushq	%rbx
100027290:	50	pushq	%rax
100027291:	4d 89 cf	movq	%r9, %r15
100027294:	4d 89 c6	movq	%r8, %r14
100027297:	49 89 cc	movq	%rcx, %r12
10002729a:	49 89 d5	movq	%rdx, %r13
10002729d:	48 89 fb	movq	%rdi, %rbx
1000272a0:	48 85 c9	testq	%rcx, %rcx
1000272a3:	74 08	je	0x1000272ad
1000272a5:	41 c7 04 24 00 00 00 00	movl	$0, (%r12)
1000272ad:	4d 85 f6	testq	%r14, %r14
1000272b0:	74 07	je	0x1000272b9
1000272b2:	41 c7 06 00 00 00 00	movl	$0, (%r14)
1000272b9:	4d 85 ff	testq	%r15, %r15
1000272bc:	74 07	je	0x1000272c5
1000272be:	49 c7 07 00 00 00 00	movq	$0, (%r15)
1000272c5:	48 8b 35 1c a7 02 00	movq	173852(%rip), %rsi ## Objc selector ref: profRef
1000272cc:	48 89 df	movq	%rbx, %rdi
1000272cf:	ff 15 4b 59 01 00	callq	*88395(%rip) ## Objc message: -[%rdi profRef]
1000272d5:	48 85 c0	testq	%rax, %rax
1000272d8:	0f 84 af 00 00 00	je	0x10002738d
1000272de:	48 8b bb b0 00 00 00	movq	176(%rbx), %rdi
1000272e5:	48 85 ff	testq	%rdi, %rdi
1000272e8:	75 1f	jne	0x100027309
1000272ea:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
1000272f1:	e8 8e 7f 00 00	callq	0x10002f284 ## symbol stub for: _ColorSyncProfileCopyTagSignatures
1000272f6:	48 89 c7	movq	%rax, %rdi
1000272f9:	48 89 83 b0 00 00 00	movq	%rax, 176(%rbx)
100027300:	48 85 c0	testq	%rax, %rax
100027303:	0f 84 84 00 00 00	je	0x10002738d
100027309:	e8 44 7b 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10002730e:	31 c9	xorl	%ecx, %ecx
100027310:	4d 85 ed	testq	%r13, %r13
100027313:	7e 7a	jle	0x10002738f
100027315:	4c 39 e8	cmpq	%r13, %rax
100027318:	7c 75	jl	0x10002738f
10002731a:	48 8b bb b0 00 00 00	movq	176(%rbx), %rdi
100027321:	49 ff cd	decq	%r13
100027324:	4c 89 ee	movq	%r13, %rsi
100027327:	e8 32 7b 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
10002732c:	49 89 c5	movq	%rax, %r13
10002732f:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100027336:	48 89 c6	movq	%rax, %rsi
100027339:	e8 40 7f 00 00	callq	0x10002f27e ## symbol stub for: _ColorSyncProfileCopyTag
10002733e:	48 85 c0	testq	%rax, %rax
100027341:	74 4a	je	0x10002738d
100027343:	48 89 c3	movq	%rax, %rbx
100027346:	4d 85 e4	testq	%r12, %r12
100027349:	74 0c	je	0x100027357
10002734b:	4c 89 ef	movq	%r13, %rdi
10002734e:	e8 07 7f 00 00	callq	0x10002f25a ## symbol stub for: _ColorSyncGetFourCharCodeFromSignature
100027353:	41 89 04 24	movl	%eax, (%r12)
100027357:	4d 85 ff	testq	%r15, %r15
10002735a:	74 0b	je	0x100027367
10002735c:	48 89 df	movq	%rbx, %rdi
10002735f:	e8 42 7b 00 00	callq	0x10002eea6 ## symbol stub for: _CFDataGetLength
100027364:	49 89 07	movq	%rax, (%r15)
100027367:	4d 85 f6	testq	%r14, %r14
10002736a:	74 15	je	0x100027381
10002736c:	49 83 3f 04	cmpq	$4, (%r15)
100027370:	72 0f	jb	0x100027381
100027372:	48 89 df	movq	%rbx, %rdi
100027375:	e8 26 7b 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
10002737a:	8b 00	movl	(%rax), %eax
10002737c:	0f c8	bswapl	%eax
10002737e:	41 89 06	movl	%eax, (%r14)
100027381:	48 89 df	movq	%rbx, %rdi
100027384:	e8 89 7b 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027389:	b1 01	movb	$1, %cl
10002738b:	eb 02	jmp	0x10002738f
10002738d:	31 c9	xorl	%ecx, %ecx
10002738f:	0f b6 c1	movzbl	%cl, %eax
100027392:	48 83 c4 08	addq	$8, %rsp
100027396:	5b	popq	%rbx
100027397:	41 5c	popq	%r12
100027399:	41 5d	popq	%r13
10002739b:	41 5e	popq	%r14
10002739d:	41 5f	popq	%r15
10002739f:	5d	popq	%rbp
1000273a0:	c3	retq
1000273a1:	55	pushq	%rbp
1000273a2:	48 89 e5	movq	%rsp, %rbp
1000273a5:	48 8b bf 88 00 00 00	movq	136(%rdi), %rdi
1000273ac:	48 8b 35 55 98 02 00	movq	170069(%rip), %rsi ## Objc selector ref: absoluteURL
1000273b3:	5d	popq	%rbp
1000273b4:	ff 25 66 58 01 00	jmpq	*88166(%rip) ## Objc message: -[%rdi absoluteURL]
1000273ba:	55	pushq	%rbp
1000273bb:	48 89 e5	movq	%rsp, %rbp
1000273be:	41 56	pushq	%r14
1000273c0:	53	pushq	%rbx
1000273c1:	48 89 fb	movq	%rdi, %rbx
1000273c4:	48 8b bf 88 00 00 00	movq	136(%rdi), %rdi
1000273cb:	48 85 ff	testq	%rdi, %rdi
1000273ce:	74 2c	je	0x1000273fc
1000273d0:	e8 25 7b 00 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
1000273d5:	49 89 c6	movq	%rax, %r14
1000273d8:	e8 8f 7b 00 00	callq	0x10002ef6c ## symbol stub for: _CFURLGetTypeID
1000273dd:	49 39 c6	cmpq	%rax, %r14
1000273e0:	75 1a	jne	0x1000273fc
1000273e2:	48 8b bb 88 00 00 00	movq	136(%rbx), %rdi
1000273e9:	31 f6	xorl	%esi, %esi
1000273eb:	e8 6a 7b 00 00	callq	0x10002ef5a ## symbol stub for: _CFURLCopyFileSystemPath
1000273f0:	48 89 c7	movq	%rax, %rdi
1000273f3:	5b	popq	%rbx
1000273f4:	41 5e	popq	%r14
1000273f6:	5d	popq	%rbp
1000273f7:	e9 ce 80 00 00	jmp	0x10002f4ca ## symbol stub for: _objc_autorelease
1000273fc:	48 8d 05 9d 5a 01 00	leaq	88733(%rip), %rax ## Objc cfstring ref: @""
100027403:	5b	popq	%rbx
100027404:	41 5e	popq	%r14
100027406:	5d	popq	%rbp
100027407:	c3	retq
100027408:	55	pushq	%rbp
100027409:	48 89 e5	movq	%rsp, %rbp
10002740c:	41 57	pushq	%r15
10002740e:	41 56	pushq	%r14
100027410:	53	pushq	%rbx
100027411:	50	pushq	%rax
100027412:	48 8b 35 c7 a5 02 00	movq	173511(%rip), %rsi ## Objc selector ref: profPathStr
100027419:	4c 8b 35 00 58 01 00	movq	88064(%rip), %r14 ## Objc message: -[%rdi profPathStr]
100027420:	41 ff d6	callq	*%r14
100027423:	48 8b 35 8e ae 02 00	movq	175758(%rip), %rsi ## Objc selector ref: standardizedPathWithTilde
10002742a:	48 89 c7	movq	%rax, %rdi
10002742d:	41 ff d6	callq	*%r14
100027430:	48 89 c3	movq	%rax, %rbx
100027433:	48 8b 35 e6 9e 02 00	movq	171750(%rip), %rsi ## Objc selector ref: hasPrefix:
10002743a:	48 8d 15 ff 83 01 00	leaq	99327(%rip), %rdx ## Objc cfstring ref: @"/automount/Network/"
100027441:	48 89 c7	movq	%rax, %rdi
100027444:	4d 89 f7	movq	%r14, %r15
100027447:	41 ff d6	callq	*%r14
10002744a:	84 c0	testb	%al, %al
10002744c:	74 3f	je	0x10002748d
10002744e:	4c 8b 35 73 b1 02 00	movq	176499(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSString
100027455:	48 8b 35 e4 ae 02 00	movq	175844(%rip), %rsi ## Objc selector ref: substringFromIndex:
10002745c:	ba 13 00 00 00	movl	$19, %edx
100027461:	48 89 df	movq	%rbx, %rdi
100027464:	41 ff d7	callq	*%r15
100027467:	48 8b 35 ba ae 02 00	movq	175802(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002746e:	48 8d 15 eb 83 01 00	leaq	99307(%rip), %rdx ## Objc cfstring ref: @"/Network/%@"
100027475:	4c 89 f7	movq	%r14, %rdi
100027478:	48 89 c1	movq	%rax, %rcx
10002747b:	31 c0	xorl	%eax, %eax
10002747d:	4d 89 f8	movq	%r15, %r8
100027480:	48 83 c4 08	addq	$8, %rsp
100027484:	5b	popq	%rbx
100027485:	41 5e	popq	%r14
100027487:	41 5f	popq	%r15
100027489:	5d	popq	%rbp
10002748a:	41 ff e0	jmpq	*%r8
10002748d:	48 89 d8	movq	%rbx, %rax
100027490:	48 83 c4 08	addq	$8, %rsp
100027494:	5b	popq	%rbx
100027495:	41 5e	popq	%r14
100027497:	41 5f	popq	%r15
100027499:	5d	popq	%rbp
10002749a:	c3	retq
10002749b:	55	pushq	%rbp
10002749c:	48 89 e5	movq	%rsp, %rbp
10002749f:	41 57	pushq	%r15
1000274a1:	41 56	pushq	%r14
1000274a3:	41 54	pushq	%r12
1000274a5:	53	pushq	%rbx
1000274a6:	48 83 ec 10	subq	$16, %rsp
1000274aa:	49 89 d6	movq	%rdx, %r14
1000274ad:	48 89 fb	movq	%rdi, %rbx
1000274b0:	e8 33 80 00 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
1000274b5:	4c 89 f7	movq	%r14, %rdi
1000274b8:	48 89 c6	movq	%rax, %rsi
1000274bb:	e8 2e 80 00 00	callq	0x10002f4ee ## symbol stub for: _objc_opt_isKindOfClass
1000274c0:	84 c0	testb	%al, %al
1000274c2:	74 3c	je	0x100027500
1000274c4:	4c 8b 3d 2d a5 02 00	movq	173357(%rip), %r15 ## Objc selector ref: profURL
1000274cb:	4c 8b 25 4e 57 01 00	movq	87886(%rip), %r12 ## Objc message: +[NSString profURL]
1000274d2:	48 89 df	movq	%rbx, %rdi
1000274d5:	4c 89 fe	movq	%r15, %rsi
1000274d8:	41 ff d4	callq	*%r12
1000274db:	48 89 c3	movq	%rax, %rbx
1000274de:	4c 89 f7	movq	%r14, %rdi
1000274e1:	4c 89 fe	movq	%r15, %rsi
1000274e4:	41 ff d4	callq	*%r12
1000274e7:	48 89 c6	movq	%rax, %rsi
1000274ea:	31 c0	xorl	%eax, %eax
1000274ec:	48 85 db	testq	%rbx, %rbx
1000274ef:	74 30	je	0x100027521
1000274f1:	48 85 f6	testq	%rsi, %rsi
1000274f4:	74 2b	je	0x100027521
1000274f6:	48 89 df	movq	%rbx, %rdi
1000274f9:	e8 f6 79 00 00	callq	0x10002eef4 ## symbol stub for: _CFEqual
1000274fe:	eb 21	jmp	0x100027521
100027500:	48 8d 7d d0	leaq	-48(%rbp), %rdi
100027504:	48 89 1f	movq	%rbx, (%rdi)
100027507:	48 8b 05 7a b3 02 00	movq	177018(%rip), %rax ## Objc class ref: CSProfile
10002750e:	48 89 47 08	movq	%rax, 8(%rdi)
100027512:	48 8b 35 57 a0 02 00	movq	172119(%rip), %rsi ## Objc selector ref: isEqual:
100027519:	4c 89 f2	movq	%r14, %rdx
10002751c:	e8 bb 7f 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] isEqual:]
100027521:	0f be c0	movsbl	%al, %eax
100027524:	48 83 c4 10	addq	$16, %rsp
100027528:	5b	popq	%rbx
100027529:	41 5c	popq	%r12
10002752b:	41 5e	popq	%r14
10002752d:	41 5f	popq	%r15
10002752f:	5d	popq	%rbp
100027530:	c3	retq
100027531:	55	pushq	%rbp
100027532:	48 89 e5	movq	%rsp, %rbp
100027535:	41 57	pushq	%r15
100027537:	41 56	pushq	%r14
100027539:	41 55	pushq	%r13
10002753b:	41 54	pushq	%r12
10002753d:	53	pushq	%rbx
10002753e:	48 83 ec 18	subq	$24, %rsp
100027542:	0f b7 47 22	movzwl	34(%rdi), %eax
100027546:	48 89 45 c8	movq	%rax, -56(%rbp)
10002754a:	44 0f b7 7f 24	movzwl	36(%rdi), %r15d
10002754f:	44 0f b7 6f 26	movzwl	38(%rdi), %r13d
100027554:	0f b7 47 28	movzwl	40(%rdi), %eax
100027558:	48 89 45 d0	movq	%rax, -48(%rbp)
10002755c:	0f b7 5f 2a	movzwl	42(%rdi), %ebx
100027560:	48 8b 05 c9 b1 02 00	movq	176585(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSTimeZone
100027567:	48 8b 35 da a0 02 00	movq	172250(%rip), %rsi ## Objc selector ref: localTimeZone
10002756e:	44 0f b7 77 20	movzwl	32(%rdi), %r14d
100027573:	4c 8b 25 a6 56 01 00	movq	87718(%rip), %r12 ## Objc message: +[NSTimeZone localTimeZone]
10002757a:	48 89 c7	movq	%rax, %rdi
10002757d:	41 ff d4	callq	*%r12
100027580:	41 8d 8e 6c 07 00 00	leal	1900(%r14), %ecx
100027587:	41 81 fe c8 00 00 00	cmpl	$200, %r14d
10002758e:	41 0f 43 ce	cmovael	%r14d, %ecx
100027592:	48 8b 3d 8f b1 02 00	movq	176527(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSCalendarDate
100027599:	0f b7 d1	movzwl	%cx, %edx
10002759c:	48 8b 35 a5 9a 02 00	movq	170661(%rip), %rsi ## Objc selector ref: dateWithYear:month:day:hour:minute:second:timeZone:
1000275a3:	48 83 ec 08	subq	$8, %rsp
1000275a7:	48 8b 4d c8	movq	-56(%rbp), %rcx
1000275ab:	4d 89 f8	movq	%r15, %r8
1000275ae:	4d 89 e9	movq	%r13, %r9
1000275b1:	50	pushq	%rax
1000275b2:	53	pushq	%rbx
1000275b3:	ff 75 d0	pushq	-48(%rbp)
1000275b6:	41 ff d4	callq	*%r12
1000275b9:	48 83 c4 38	addq	$56, %rsp
1000275bd:	5b	popq	%rbx
1000275be:	41 5c	popq	%r12
1000275c0:	41 5d	popq	%r13
1000275c2:	41 5e	popq	%r14
1000275c4:	41 5f	popq	%r15
1000275c6:	5d	popq	%rbp
1000275c7:	c3	retq
1000275c8:	55	pushq	%rbp
1000275c9:	48 89 e5	movq	%rsp, %rbp
1000275cc:	53	pushq	%rbx
1000275cd:	50	pushq	%rax
1000275ce:	48 89 fb	movq	%rdi, %rbx
1000275d1:	48 8b 35 c0 a2 02 00	movq	172736(%rip), %rsi ## Objc selector ref: open
1000275d8:	ff 15 42 56 01 00	callq	*87618(%rip) ## Objc message: +[NSCalendarDate open]
1000275de:	48 8b 83 98 00 00 00	movq	152(%rbx), %rax
1000275e5:	48 83 c4 08	addq	$8, %rsp
1000275e9:	5b	popq	%rbx
1000275ea:	5d	popq	%rbp
1000275eb:	c3	retq
1000275ec:	55	pushq	%rbp
1000275ed:	48 89 e5	movq	%rsp, %rbp
1000275f0:	41 56	pushq	%r14
1000275f2:	53	pushq	%rbx
1000275f3:	48 83 bf 98 00 00 00 00	cmpq	$0, 152(%rdi)
1000275fb:	75 50	jne	0x10002764d
1000275fd:	48 89 fb	movq	%rdi, %rbx
100027600:	48 8b bf 88 00 00 00	movq	136(%rdi), %rdi
100027607:	31 f6	xorl	%esi, %esi
100027609:	e8 8e 7c 00 00	callq	0x10002f29c ## symbol stub for: _ColorSyncProfileCreateWithURL
10002760e:	48 85 c0	testq	%rax, %rax
100027611:	74 30	je	0x100027643
100027613:	49 89 c6	movq	%rax, %r14
100027616:	48 89 c7	movq	%rax, %rdi
100027619:	e8 72 7c 00 00	callq	0x10002f290 ## symbol stub for: _ColorSyncProfileCreateMutableCopy
10002761e:	48 89 83 98 00 00 00	movq	%rax, 152(%rbx)
100027625:	48 89 c7	movq	%rax, %rdi
100027628:	e8 75 7c 00 00	callq	0x10002f2a2 ## symbol stub for: _ColorSyncProfileGetMD5
10002762d:	48 89 83 a0 00 00 00	movq	%rax, 160(%rbx)
100027634:	48 89 93 a8 00 00 00	movq	%rdx, 168(%rbx)
10002763b:	4c 89 f7	movq	%r14, %rdi
10002763e:	e8 cf 78 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027643:	48 83 bb 98 00 00 00 00	cmpq	$0, 152(%rbx)
10002764b:	74 05	je	0x100027652
10002764d:	5b	popq	%rbx
10002764e:	41 5e	popq	%r14
100027650:	5d	popq	%rbp
100027651:	c3	retq
100027652:	48 8d 3d 6e 37 01 00	leaq	79726(%rip), %rdi ## literal pool for: "open errored"
100027659:	5b	popq	%rbx
10002765a:	41 5e	popq	%r14
10002765c:	5d	popq	%rbp
10002765d:	e9 c8 7e 00 00	jmp	0x10002f52a ## symbol stub for: _puts
100027662:	55	pushq	%rbp
100027663:	48 89 e5	movq	%rsp, %rbp
100027666:	53	pushq	%rbx
100027667:	48 83 ec 18	subq	$24, %rsp
10002766b:	48 89 fb	movq	%rdi, %rbx
10002766e:	48 8b bf 98 00 00 00	movq	152(%rdi), %rdi
100027675:	48 85 ff	testq	%rdi, %rdi
100027678:	74 28	je	0x1000276a2
10002767a:	e8 23 7c 00 00	callq	0x10002f2a2 ## symbol stub for: _ColorSyncProfileGetMD5
10002767f:	48 89 45 e8	movq	%rax, -24(%rbp)
100027683:	48 89 55 f0	movq	%rdx, -16(%rbp)
100027687:	f3 0f 6f 83 a0 00 00 00	movdqu	160(%rbx), %xmm0
10002768f:	f3 0f 6f 4d e8	movdqu	-24(%rbp), %xmm1
100027694:	66 0f ef c8	pxor	%xmm0, %xmm1
100027698:	66 0f 38 17 c9	ptest	%xmm1, %xmm1
10002769d:	0f 95 c0	setne	%al
1000276a0:	eb 02	jmp	0x1000276a4
1000276a2:	31 c0	xorl	%eax, %eax
1000276a4:	0f b6 c0	movzbl	%al, %eax
1000276a7:	48 83 c4 18	addq	$24, %rsp
1000276ab:	5b	popq	%rbx
1000276ac:	5d	popq	%rbp
1000276ad:	c3	retq
1000276ae:	55	pushq	%rbp
1000276af:	48 89 e5	movq	%rsp, %rbp
1000276b2:	53	pushq	%rbx
1000276b3:	50	pushq	%rax
1000276b4:	48 89 fb	movq	%rdi, %rbx
1000276b7:	48 8b bf 98 00 00 00	movq	152(%rdi), %rdi
1000276be:	48 85 ff	testq	%rdi, %rdi
1000276c1:	74 05	je	0x1000276c8
1000276c3:	e8 4a 78 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000276c8:	48 c7 83 98 00 00 00 00 00 00 00	movq	$0, 152(%rbx)
1000276d3:	48 83 c4 08	addq	$8, %rsp
1000276d7:	5b	popq	%rbx
1000276d8:	5d	popq	%rbp
1000276d9:	c3	retq
1000276da:	55	pushq	%rbp
1000276db:	48 89 e5	movq	%rsp, %rbp
1000276de:	41 57	pushq	%r15
1000276e0:	41 56	pushq	%r14
1000276e2:	53	pushq	%rbx
1000276e3:	50	pushq	%rax
1000276e4:	48 83 bf 98 00 00 00 00	cmpq	$0, 152(%rdi)
1000276ec:	74 6c	je	0x10002775a
1000276ee:	48 89 fb	movq	%rdi, %rbx
1000276f1:	48 8b 35 68 9e 02 00	movq	171624(%rip), %rsi ## Objc selector ref: isDirty
1000276f8:	ff 15 22 55 01 00	callq	*87330(%rip) ## Objc message: -[%rdi isDirty]
1000276fe:	84 c0	testb	%al, %al
100027700:	74 58	je	0x10002775a
100027702:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100027709:	45 31 ff	xorl	%r15d, %r15d
10002770c:	31 f6	xorl	%esi, %esi
10002770e:	e8 53 7b 00 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
100027713:	48 85 c0	testq	%rax, %rax
100027716:	74 45	je	0x10002775d
100027718:	48 8b bb 88 00 00 00	movq	136(%rbx), %rdi
10002771f:	48 85 ff	testq	%rdi, %rdi
100027722:	74 36	je	0x10002775a
100027724:	49 89 c6	movq	%rax, %r14
100027727:	48 89 c6	movq	%rax, %rsi
10002772a:	31 d2	xorl	%edx, %edx
10002772c:	31 c9	xorl	%ecx, %ecx
10002772e:	e8 3f 78 00 00	callq	0x10002ef72 ## symbol stub for: _CFURLWriteDataAndPropertiesToResource
100027733:	4c 89 f7	movq	%r14, %rdi
100027736:	e8 d7 77 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002773b:	48 8b bb 98 00 00 00	movq	152(%rbx), %rdi
100027742:	e8 5b 7b 00 00	callq	0x10002f2a2 ## symbol stub for: _ColorSyncProfileGetMD5
100027747:	48 89 83 a0 00 00 00	movq	%rax, 160(%rbx)
10002774e:	48 89 93 a8 00 00 00	movq	%rdx, 168(%rbx)
100027755:	41 b7 01	movb	$1, %r15b
100027758:	eb 03	jmp	0x10002775d
10002775a:	45 31 ff	xorl	%r15d, %r15d
10002775d:	41 0f b6 c7	movzbl	%r15b, %eax
100027761:	48 83 c4 08	addq	$8, %rsp
100027765:	5b	popq	%rbx
100027766:	41 5e	popq	%r14
100027768:	41 5f	popq	%r15
10002776a:	5d	popq	%rbp
10002776b:	c3	retq
10002776c:	55	pushq	%rbp
10002776d:	48 89 e5	movq	%rsp, %rbp
100027770:	41 57	pushq	%r15
100027772:	41 56	pushq	%r14
100027774:	53	pushq	%rbx
100027775:	50	pushq	%rax
100027776:	31 db	xorl	%ebx, %ebx
100027778:	48 85 d2	testq	%rdx, %rdx
10002777b:	74 39	je	0x1000277b6
10002777d:	48 8b bf 98 00 00 00	movq	152(%rdi), %rdi
100027784:	48 85 ff	testq	%rdi, %rdi
100027787:	74 2d	je	0x1000277b6
100027789:	49 89 d6	movq	%rdx, %r14
10002778c:	31 db	xorl	%ebx, %ebx
10002778e:	31 f6	xorl	%esi, %esi
100027790:	e8 d1 7a 00 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
100027795:	48 85 c0	testq	%rax, %rax
100027798:	74 1c	je	0x1000277b6
10002779a:	49 89 c7	movq	%rax, %r15
10002779d:	4c 89 f7	movq	%r14, %rdi
1000277a0:	48 89 c6	movq	%rax, %rsi
1000277a3:	31 d2	xorl	%edx, %edx
1000277a5:	31 c9	xorl	%ecx, %ecx
1000277a7:	e8 c6 77 00 00	callq	0x10002ef72 ## symbol stub for: _CFURLWriteDataAndPropertiesToResource
1000277ac:	89 c3	movl	%eax, %ebx
1000277ae:	4c 89 ff	movq	%r15, %rdi
1000277b1:	e8 5c 77 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000277b6:	0f be c3	movsbl	%bl, %eax
1000277b9:	48 83 c4 08	addq	$8, %rsp
1000277bd:	5b	popq	%rbx
1000277be:	41 5e	popq	%r14
1000277c0:	41 5f	popq	%r15
1000277c2:	5d	popq	%rbp
1000277c3:	c3	retq
1000277c4:	55	pushq	%rbp
1000277c5:	48 89 e5	movq	%rsp, %rbp
1000277c8:	41 57	pushq	%r15
1000277ca:	41 56	pushq	%r14
1000277cc:	41 55	pushq	%r13
1000277ce:	41 54	pushq	%r12
1000277d0:	53	pushq	%rbx
1000277d1:	50	pushq	%rax
1000277d2:	31 db	xorl	%ebx, %ebx
1000277d4:	48 85 d2	testq	%rdx, %rdx
1000277d7:	0f 84 c7 00 00 00	je	0x1000278a4
1000277dd:	49 89 ff	movq	%rdi, %r15
1000277e0:	48 8b bf 98 00 00 00	movq	152(%rdi), %rdi
1000277e7:	48 85 ff	testq	%rdi, %rdi
1000277ea:	0f 84 b4 00 00 00	je	0x1000278a4
1000277f0:	49 89 d4	movq	%rdx, %r12
1000277f3:	31 db	xorl	%ebx, %ebx
1000277f5:	31 f6	xorl	%esi, %esi
1000277f7:	e8 6a 7a 00 00	callq	0x10002f266 ## symbol stub for: _ColorSyncProfileCopyData
1000277fc:	48 85 c0	testq	%rax, %rax
1000277ff:	0f 84 9f 00 00 00	je	0x1000278a4
100027805:	49 89 c6	movq	%rax, %r14
100027808:	4c 89 e7	movq	%r12, %rdi
10002780b:	48 89 c6	movq	%rax, %rsi
10002780e:	31 d2	xorl	%edx, %edx
100027810:	31 c9	xorl	%ecx, %ecx
100027812:	e8 5b 77 00 00	callq	0x10002ef72 ## symbol stub for: _CFURLWriteDataAndPropertiesToResource
100027817:	89 c3	movl	%eax, %ebx
100027819:	3c 01	cmpb	$1, %al
10002781b:	75 7f	jne	0x10002789c
10002781d:	31 db	xorl	%ebx, %ebx
10002781f:	4c 89 e7	movq	%r12, %rdi
100027822:	31 f6	xorl	%esi, %esi
100027824:	e8 73 7a 00 00	callq	0x10002f29c ## symbol stub for: _ColorSyncProfileCreateWithURL
100027829:	48 85 c0	testq	%rax, %rax
10002782c:	74 6e	je	0x10002789c
10002782e:	49 89 c5	movq	%rax, %r13
100027831:	48 89 c7	movq	%rax, %rdi
100027834:	e8 57 7a 00 00	callq	0x10002f290 ## symbol stub for: _ColorSyncProfileCreateMutableCopy
100027839:	48 85 c0	testq	%rax, %rax
10002783c:	74 54	je	0x100027892
10002783e:	48 89 c3	movq	%rax, %rbx
100027841:	49 8b bf 98 00 00 00	movq	152(%r15), %rdi
100027848:	e8 c5 76 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002784d:	49 89 9f 98 00 00 00	movq	%rbx, 152(%r15)
100027854:	49 8b bf 88 00 00 00	movq	136(%r15), %rdi
10002785b:	48 85 ff	testq	%rdi, %rdi
10002785e:	74 05	je	0x100027865
100027860:	e8 ad 76 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027865:	4c 89 e7	movq	%r12, %rdi
100027868:	e8 ab 76 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10002786d:	49 89 87 88 00 00 00	movq	%rax, 136(%r15)
100027874:	49 8b bf 98 00 00 00	movq	152(%r15), %rdi
10002787b:	e8 22 7a 00 00	callq	0x10002f2a2 ## symbol stub for: _ColorSyncProfileGetMD5
100027880:	49 89 87 a0 00 00 00	movq	%rax, 160(%r15)
100027887:	49 89 97 a8 00 00 00	movq	%rdx, 168(%r15)
10002788e:	b3 01	movb	$1, %bl
100027890:	eb 02	jmp	0x100027894
100027892:	31 db	xorl	%ebx, %ebx
100027894:	4c 89 ef	movq	%r13, %rdi
100027897:	e8 76 76 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002789c:	4c 89 f7	movq	%r14, %rdi
10002789f:	e8 6e 76 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000278a4:	0f be c3	movsbl	%bl, %eax
1000278a7:	48 83 c4 08	addq	$8, %rsp
1000278ab:	5b	popq	%rbx
1000278ac:	41 5c	popq	%r12
1000278ae:	41 5d	popq	%r13
1000278b0:	41 5e	popq	%r14
1000278b2:	41 5f	popq	%r15
1000278b4:	5d	popq	%rbp
1000278b5:	c3	retq
1000278b6:	55	pushq	%rbp
1000278b7:	48 89 e5	movq	%rsp, %rbp
1000278ba:	b8 01 00 00 00	movl	$1, %eax
1000278bf:	5d	popq	%rbp
1000278c0:	c3	retq
1000278c1:	55	pushq	%rbp
1000278c2:	48 89 e5	movq	%rsp, %rbp
1000278c5:	b8 01 00 00 00	movl	$1, %eax
1000278ca:	5d	popq	%rbp
1000278cb:	c3	retq
1000278cc:	55	pushq	%rbp
1000278cd:	48 89 e5	movq	%rsp, %rbp
1000278d0:	48 89 f8	movq	%rdi, %rax
1000278d3:	0f 28 45 10	movaps	16(%rbp), %xmm0
1000278d7:	0f 28 4d 20	movaps	32(%rbp), %xmm1
1000278db:	0f 11 4f 10	movups	%xmm1, 16(%rdi)
1000278df:	0f 11 07	movups	%xmm0, (%rdi)
1000278e2:	5d	popq	%rbp
1000278e3:	c3	retq
1000278e4:	55	pushq	%rbp
1000278e5:	48 89 e5	movq	%rsp, %rbp
1000278e8:	53	pushq	%rbx
1000278e9:	50	pushq	%rax
1000278ea:	48 8b 3d 2f ad 02 00	movq	175407(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSColor
1000278f1:	48 8b 35 f0 95 02 00	movq	169456(%rip), %rsi ## Objc selector ref: colorWithDeviceRed:green:blue:alpha:
1000278f8:	48 8b 1d 21 53 01 00	movq	86817(%rip), %rbx ## Objc message: +[NSColor colorWithDeviceRed:green:blue:alpha:]
1000278ff:	f2 0f 10 05 99 1a 01 00	movsd	72345(%rip), %xmm0
100027907:	0f 28 c8	movaps	%xmm0, %xmm1
10002790a:	0f 28 d0	movaps	%xmm0, %xmm2
10002790d:	0f 28 d8	movaps	%xmm0, %xmm3
100027910:	ff d3	callq	*%rbx
100027912:	48 8b 35 57 a3 02 00	movq	172887(%rip), %rsi ## Objc selector ref: set
100027919:	48 89 c7	movq	%rax, %rdi
10002791c:	ff d3	callq	*%rbx
10002791e:	48 83 c4 08	addq	$8, %rsp
100027922:	5b	popq	%rbx
100027923:	5d	popq	%rbp
100027924:	e9 df 79 00 00	jmp	0x10002f308 ## symbol stub for: _NSRectFill
100027929:	55	pushq	%rbp
10002792a:	48 89 e5	movq	%rsp, %rbp
10002792d:	41 57	pushq	%r15
10002792f:	41 56	pushq	%r14
100027931:	53	pushq	%rbx
100027932:	50	pushq	%rax
100027933:	49 89 d6	movq	%rdx, %r14
100027936:	48 8b 1d 7b ad 02 00	movq	175483(%rip), %rbx ## Objc class ref: FilterDocProfile
10002793d:	48 8b 35 1c ac 02 00	movq	175132(%rip), %rsi ## Objc selector ref: zone
100027944:	4c 8b 3d d5 52 01 00	movq	86741(%rip), %r15 ## Objc message: +[FilterDocProfile zone]
10002794b:	48 89 df	movq	%rbx, %rdi
10002794e:	41 ff d7	callq	*%r15
100027951:	48 8b 35 70 93 02 00	movq	168816(%rip), %rsi ## Objc selector ref: allocWithZone:
100027958:	48 89 df	movq	%rbx, %rdi
10002795b:	48 89 c2	movq	%rax, %rdx
10002795e:	41 ff d7	callq	*%r15
100027961:	48 8b 35 a8 9a 02 00	movq	170664(%rip), %rsi ## Objc selector ref: init
100027968:	48 89 c7	movq	%rax, %rdi
10002796b:	41 ff d7	callq	*%r15
10002796e:	48 89 c3	movq	%rax, %rbx
100027971:	48 85 c0	testq	%rax, %rax
100027974:	74 13	je	0x100027989
100027976:	48 8b 35 0b 9b 02 00	movq	170763(%rip), %rsi ## Objc selector ref: initWithIterateData:
10002797d:	48 89 df	movq	%rbx, %rdi
100027980:	4c 89 f2	movq	%r14, %rdx
100027983:	ff 15 97 52 01 00	callq	*86679(%rip) ## Objc message: -[%rdi initWithIterateData:]
100027989:	48 89 d8	movq	%rbx, %rax
10002798c:	48 83 c4 08	addq	$8, %rsp
100027990:	5b	popq	%rbx
100027991:	41 5e	popq	%r14
100027993:	41 5f	popq	%r15
100027995:	5d	popq	%rbp
100027996:	c3	retq
100027997:	55	pushq	%rbp
100027998:	48 89 e5	movq	%rsp, %rbp
10002799b:	41 57	pushq	%r15
10002799d:	41 56	pushq	%r14
10002799f:	53	pushq	%rbx
1000279a0:	50	pushq	%rax
1000279a1:	49 89 d6	movq	%rdx, %r14
1000279a4:	48 89 fb	movq	%rdi, %rbx
1000279a7:	48 8b 05 ba 50 01 00	movq	86202(%rip), %rax ## literal pool symbol address: _kColorSyncProfileHeader
1000279ae:	48 8b 30	movq	(%rax), %rsi
1000279b1:	48 89 d7	movq	%rdx, %rdi
1000279b4:	e8 29 75 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
1000279b9:	48 85 c0	testq	%rax, %rax
1000279bc:	74 19	je	0x1000279d7
1000279be:	48 89 c7	movq	%rax, %rdi
1000279c1:	e8 da 74 00 00	callq	0x10002eea0 ## symbol stub for: _CFDataGetBytePtr
1000279c6:	48 85 c0	testq	%rax, %rax
1000279c9:	74 0c	je	0x1000279d7
1000279cb:	8b 48 10	movl	16(%rax), %ecx
1000279ce:	89 4b 14	movl	%ecx, 20(%rbx)
1000279d1:	8b 40 0c	movl	12(%rax), %eax
1000279d4:	89 43 10	movl	%eax, 16(%rbx)
1000279d7:	48 8b 05 82 50 01 00	movq	86146(%rip), %rax ## literal pool symbol address: _kColorSyncProfileDescription
1000279de:	48 8b 30	movq	(%rax), %rsi
1000279e1:	4c 89 f7	movq	%r14, %rdi
1000279e4:	e8 f9 74 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
1000279e9:	48 89 43 18	movq	%rax, 24(%rbx)
1000279ed:	4c 8b 3d 6c 52 01 00	movq	86636(%rip), %r15 ## literal pool symbol address: _objc_retain
1000279f4:	48 89 c7	movq	%rax, %rdi
1000279f7:	41 ff d7	callq	*%r15
1000279fa:	48 8b 05 77 50 01 00	movq	86135(%rip), %rax ## literal pool symbol address: _kColorSyncProfileURL
100027a01:	48 8b 30	movq	(%rax), %rsi
100027a04:	4c 89 f7	movq	%r14, %rdi
100027a07:	e8 d6 74 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100027a0c:	48 89 43 20	movq	%rax, 32(%rbx)
100027a10:	48 89 c7	movq	%rax, %rdi
100027a13:	41 ff d7	callq	*%r15
100027a16:	48 89 d8	movq	%rbx, %rax
100027a19:	48 83 c4 08	addq	$8, %rsp
100027a1d:	5b	popq	%rbx
100027a1e:	41 5e	popq	%r14
100027a20:	41 5f	popq	%r15
100027a22:	5d	popq	%rbp
100027a23:	c3	retq
100027a24:	55	pushq	%rbp
100027a25:	48 89 e5	movq	%rsp, %rbp
100027a28:	41 56	pushq	%r14
100027a2a:	53	pushq	%rbx
100027a2b:	48 83 ec 10	subq	$16, %rsp
100027a2f:	48 89 fb	movq	%rdi, %rbx
100027a32:	48 8b 7f 08	movq	8(%rdi), %rdi
100027a36:	48 85 ff	testq	%rdi, %rdi
100027a39:	74 05	je	0x100027a40
100027a3b:	e8 d2 74 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027a40:	48 8b 7b 18	movq	24(%rbx), %rdi
100027a44:	4c 8b 35 0d 52 01 00	movq	86541(%rip), %r14 ## literal pool symbol address: _objc_release
100027a4b:	41 ff d6	callq	*%r14
100027a4e:	48 8b 7b 20	movq	32(%rbx), %rdi
100027a52:	41 ff d6	callq	*%r14
100027a55:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100027a59:	48 89 1f	movq	%rbx, (%rdi)
100027a5c:	48 8b 05 2d ae 02 00	movq	175661(%rip), %rax ## Objc class ref: FilterDocProfile
100027a63:	48 89 47 08	movq	%rax, 8(%rdi)
100027a67:	48 8b 35 e2 95 02 00	movq	169442(%rip), %rsi ## Objc selector ref: dealloc
100027a6e:	e8 69 7a 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100027a73:	48 83 c4 10	addq	$16, %rsp
100027a77:	5b	popq	%rbx
100027a78:	41 5e	popq	%r14
100027a7a:	5d	popq	%rbp
100027a7b:	c3	retq
100027a7c:	55	pushq	%rbp
100027a7d:	48 89 e5	movq	%rsp, %rbp
100027a80:	53	pushq	%rbx
100027a81:	50	pushq	%rax
100027a82:	48 8b 47 08	movq	8(%rdi), %rax
100027a86:	48 85 c0	testq	%rax, %rax
100027a89:	75 12	jne	0x100027a9d
100027a8b:	48 89 fb	movq	%rdi, %rbx
100027a8e:	48 8b 7f 20	movq	32(%rdi), %rdi
100027a92:	31 f6	xorl	%esi, %esi
100027a94:	e8 03 78 00 00	callq	0x10002f29c ## symbol stub for: _ColorSyncProfileCreateWithURL
100027a99:	48 89 43 08	movq	%rax, 8(%rbx)
100027a9d:	48 83 c4 08	addq	$8, %rsp
100027aa1:	5b	popq	%rbx
100027aa2:	5d	popq	%rbp
100027aa3:	c3	retq
100027aa4:	55	pushq	%rbp
100027aa5:	48 89 e5	movq	%rsp, %rbp
100027aa8:	8b 47 10	movl	16(%rdi), %eax
100027aab:	5d	popq	%rbp
100027aac:	c3	retq
100027aad:	55	pushq	%rbp
100027aae:	48 89 e5	movq	%rsp, %rbp
100027ab1:	8b 47 14	movl	20(%rdi), %eax
100027ab4:	5d	popq	%rbp
100027ab5:	c3	retq
100027ab6:	55	pushq	%rbp
100027ab7:	48 89 e5	movq	%rsp, %rbp
100027aba:	48 8b 47 18	movq	24(%rdi), %rax
100027abe:	5d	popq	%rbp
100027abf:	c3	retq
100027ac0:	55	pushq	%rbp
100027ac1:	48 89 e5	movq	%rsp, %rbp
100027ac4:	48 8b 47 20	movq	32(%rdi), %rax
100027ac8:	5d	popq	%rbp
100027ac9:	c3	retq
100027aca:	90	nop
100027acb:	90	nop
100027acc:	55	pushq	%rbp
100027acd:	48 89 e5	movq	%rsp, %rbp
100027ad0:	53	pushq	%rbx
100027ad1:	48 83 ec 18	subq	$24, %rsp
100027ad5:	48 89 fb	movq	%rdi, %rbx
100027ad8:	48 8b 05 e1 bc 02 00	movq	179425(%rip), %rax
100027adf:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100027ae3:	48 85 ff	testq	%rdi, %rdi
100027ae6:	74 05	je	0x100027aed
100027ae8:	e8 25 74 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027aed:	48 8d 7d e8	leaq	-24(%rbp), %rdi
100027af1:	48 89 1f	movq	%rbx, (%rdi)
100027af4:	48 8b 05 9d ad 02 00	movq	175517(%rip), %rax ## Objc class ref: FilterImageDoc
100027afb:	48 89 47 08	movq	%rax, 8(%rdi)
100027aff:	48 8b 35 4a 95 02 00	movq	169290(%rip), %rsi ## Objc selector ref: dealloc
100027b06:	e8 d1 79 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100027b0b:	48 83 c4 18	addq	$24, %rsp
100027b0f:	5b	popq	%rbx
100027b10:	5d	popq	%rbp
100027b11:	c3	retq
100027b12:	55	pushq	%rbp
100027b13:	48 89 e5	movq	%rsp, %rbp
100027b16:	41 57	pushq	%r15
100027b18:	41 56	pushq	%r14
100027b1a:	53	pushq	%rbx
100027b1b:	50	pushq	%rax
100027b1c:	49 89 d6	movq	%rdx, %r14
100027b1f:	e8 70 76 00 00	callq	0x10002f194 ## symbol stub for: _CGImageSourceCopyTypeIdentifiers
100027b24:	49 89 c7	movq	%rax, %r15
100027b27:	48 89 c7	movq	%rax, %rdi
100027b2a:	e8 23 73 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027b2f:	4c 89 ff	movq	%r15, %rdi
100027b32:	31 f6	xorl	%esi, %esi
100027b34:	48 89 c2	movq	%rax, %rdx
100027b37:	4c 89 f1	movq	%r14, %rcx
100027b3a:	e8 fb 72 00 00	callq	0x10002ee3a ## symbol stub for: _CFArrayContainsValue
100027b3f:	31 db	xorl	%ebx, %ebx
100027b41:	84 c0	testb	%al, %al
100027b43:	0f 95 c3	setne	%bl
100027b46:	4c 89 ff	movq	%r15, %rdi
100027b49:	e8 c4 73 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027b4e:	89 d8	movl	%ebx, %eax
100027b50:	48 83 c4 08	addq	$8, %rsp
100027b54:	5b	popq	%rbx
100027b55:	41 5e	popq	%r14
100027b57:	41 5f	popq	%r15
100027b59:	5d	popq	%rbp
100027b5a:	c3	retq
100027b5b:	55	pushq	%rbp
100027b5c:	48 89 e5	movq	%rsp, %rbp
100027b5f:	41 57	pushq	%r15
100027b61:	41 56	pushq	%r14
100027b63:	41 55	pushq	%r13
100027b65:	41 54	pushq	%r12
100027b67:	53	pushq	%rbx
100027b68:	48 83 ec 38	subq	$56, %rsp
100027b6c:	48 89 cb	movq	%rcx, %rbx
100027b6f:	49 89 d6	movq	%rdx, %r14
100027b72:	49 89 ff	movq	%rdi, %r15
100027b75:	48 8d 7d a0	leaq	-96(%rbp), %rdi
100027b79:	4c 89 3f	movq	%r15, (%rdi)
100027b7c:	48 8b 05 15 ad 02 00	movq	175381(%rip), %rax ## Objc class ref: FilterImageDoc
100027b83:	48 89 47 08	movq	%rax, 8(%rdi)
100027b87:	48 8b 35 c2 9e 02 00	movq	171714(%rip), %rsi ## Objc selector ref: readFromURL:ofType:error:
100027b8e:	e8 49 79 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] readFromURL:ofType:error:]
100027b93:	48 8b 35 b6 99 02 00	movq	170422(%rip), %rsi ## Objc selector ref: isAcceptedImageType:
100027b9a:	4c 89 ff	movq	%r15, %rdi
100027b9d:	48 89 da	movq	%rbx, %rdx
100027ba0:	ff 15 7a 50 01 00	callq	*86138(%rip) ## Objc message: -[%rdi isAcceptedImageType:]
100027ba6:	31 c9	xorl	%ecx, %ecx
100027ba8:	4d 85 f6	testq	%r14, %r14
100027bab:	0f 84 f6 01 00 00	je	0x100027da7
100027bb1:	84 c0	testb	%al, %al
100027bb3:	0f 84 ee 01 00 00	je	0x100027da7
100027bb9:	4c 89 7d c0	movq	%r15, -64(%rbp)
100027bbd:	4c 89 f7	movq	%r14, %rdi
100027bc0:	31 f6	xorl	%esi, %esi
100027bc2:	e8 d9 75 00 00	callq	0x10002f1a0 ## symbol stub for: _CGImageSourceCreateWithURL
100027bc7:	49 89 c4	movq	%rax, %r12
100027bca:	48 89 c7	movq	%rax, %rdi
100027bcd:	e8 da 75 00 00	callq	0x10002f1ac ## symbol stub for: _CGImageSourceGetType
100027bd2:	49 89 c5	movq	%rax, %r13
100027bd5:	48 8b 05 94 4d 01 00	movq	85396(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100027bdc:	48 8b 38	movq	(%rax), %rdi
100027bdf:	48 8b 15 a2 4d 01 00	movq	85410(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
100027be6:	48 89 7d b8	movq	%rdi, -72(%rbp)
100027bea:	31 f6	xorl	%esi, %esi
100027bec:	e8 55 72 00 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
100027bf1:	48 89 45 d0	movq	%rax, -48(%rbp)
100027bf5:	4c 89 e7	movq	%r12, %rdi
100027bf8:	e8 a9 75 00 00	callq	0x10002f1a6 ## symbol stub for: _CGImageSourceGetCount
100027bfd:	85 c0	testl	%eax, %eax
100027bff:	74 36	je	0x100027c37
100027c01:	41 89 c7	movl	%eax, %r15d
100027c04:	31 db	xorl	%ebx, %ebx
100027c06:	4c 89 e7	movq	%r12, %rdi
100027c09:	48 89 de	movq	%rbx, %rsi
100027c0c:	31 d2	xorl	%edx, %edx
100027c0e:	e8 87 75 00 00	callq	0x10002f19a ## symbol stub for: _CGImageSourceCreateImageAtIndex
100027c13:	48 85 c0	testq	%rax, %rax
100027c16:	74 17	je	0x100027c2f
100027c18:	49 89 c6	movq	%rax, %r14
100027c1b:	48 8b 7d d0	movq	-48(%rbp), %rdi
100027c1f:	48 89 c6	movq	%rax, %rsi
100027c22:	e8 0d 72 00 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
100027c27:	4c 89 f7	movq	%r14, %rdi
100027c2a:	e8 59 75 00 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100027c2f:	48 ff c3	incq	%rbx
100027c32:	49 39 df	cmpq	%rbx, %r15
100027c35:	75 cf	jne	0x100027c06
100027c37:	48 8b 5d d0	movq	-48(%rbp), %rbx
100027c3b:	48 85 db	testq	%rbx, %rbx
100027c3e:	74 15	je	0x100027c55
100027c40:	48 89 df	movq	%rbx, %rdi
100027c43:	e8 0a 72 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027c48:	48 85 c0	testq	%rax, %rax
100027c4b:	75 0e	jne	0x100027c5b
100027c4d:	48 89 df	movq	%rbx, %rdi
100027c50:	e8 bd 72 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027c55:	31 c0	xorl	%eax, %eax
100027c57:	48 89 45 d0	movq	%rax, -48(%rbp)
100027c5b:	48 8b 15 26 4d 01 00	movq	85286(%rip), %rdx ## literal pool symbol address: _kCFTypeArrayCallBacks
100027c62:	48 8b 7d b8	movq	-72(%rbp), %rdi
100027c66:	31 f6	xorl	%esi, %esi
100027c68:	e8 d9 71 00 00	callq	0x10002ee46 ## symbol stub for: _CFArrayCreateMutable
100027c6d:	48 89 45 b0	movq	%rax, -80(%rbp)
100027c71:	4c 89 65 c8	movq	%r12, -56(%rbp)
100027c75:	4c 89 e7	movq	%r12, %rdi
100027c78:	e8 29 75 00 00	callq	0x10002f1a6 ## symbol stub for: _CGImageSourceGetCount
100027c7d:	85 c0	testl	%eax, %eax
100027c7f:	0f 84 95 00 00 00	je	0x100027d1a
100027c85:	41 89 c6	movl	%eax, %r14d
100027c88:	45 31 ff	xorl	%r15d, %r15d
100027c8b:	4d 89 ec	movq	%r13, %r12
100027c8e:	48 8b 7d c8	movq	-56(%rbp), %rdi
100027c92:	4c 89 fe	movq	%r15, %rsi
100027c95:	31 d2	xorl	%edx, %edx
100027c97:	e8 f2 74 00 00	callq	0x10002f18e ## symbol stub for: _CGImageSourceCopyPropertiesAtIndex
100027c9c:	48 85 c0	testq	%rax, %rax
100027c9f:	74 1e	je	0x100027cbf
100027ca1:	49 89 c5	movq	%rax, %r13
100027ca4:	48 8b 7d b8	movq	-72(%rbp), %rdi
100027ca8:	31 f6	xorl	%esi, %esi
100027caa:	48 89 c2	movq	%rax, %rdx
100027cad:	e8 18 72 00 00	callq	0x10002eeca ## symbol stub for: _CFDictionaryCreateMutableCopy
100027cb2:	48 89 c3	movq	%rax, %rbx
100027cb5:	4c 89 ef	movq	%r13, %rdi
100027cb8:	e8 55 72 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027cbd:	eb 1c	jmp	0x100027cdb
100027cbf:	48 8b 7d b8	movq	-72(%rbp), %rdi
100027cc3:	31 f6	xorl	%esi, %esi
100027cc5:	48 8b 15 c4 4c 01 00	movq	85188(%rip), %rdx ## literal pool symbol address: _kCFTypeDictionaryKeyCallBacks
100027ccc:	48 8b 0d c5 4c 01 00	movq	85189(%rip), %rcx ## literal pool symbol address: _kCFTypeDictionaryValueCallBacks
100027cd3:	e8 ec 71 00 00	callq	0x10002eec4 ## symbol stub for: _CFDictionaryCreateMutable
100027cd8:	48 89 c3	movq	%rax, %rbx
100027cdb:	4d 89 e5	movq	%r12, %r13
100027cde:	48 85 db	testq	%rbx, %rbx
100027ce1:	74 2b	je	0x100027d0e
100027ce3:	4d 85 ed	testq	%r13, %r13
100027ce6:	74 12	je	0x100027cfa
100027ce8:	48 89 df	movq	%rbx, %rdi
100027ceb:	48 8d 35 4e 67 01 00	leaq	91982(%rip), %rsi ## Objc cfstring ref: @"FileFormat"
100027cf2:	4c 89 ea	movq	%r13, %rdx
100027cf5:	e8 f4 71 00 00	callq	0x10002eeee ## symbol stub for: _CFDictionarySetValue
100027cfa:	48 8b 7d b0	movq	-80(%rbp), %rdi
100027cfe:	48 89 de	movq	%rbx, %rsi
100027d01:	e8 2e 71 00 00	callq	0x10002ee34 ## symbol stub for: _CFArrayAppendValue
100027d06:	48 89 df	movq	%rbx, %rdi
100027d09:	e8 04 72 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027d0e:	49 ff c7	incq	%r15
100027d11:	4d 39 fe	cmpq	%r15, %r14
100027d14:	0f 85 71 ff ff ff	jne	0x100027c8b
100027d1a:	48 8b 5d b0	movq	-80(%rbp), %rbx
100027d1e:	48 85 db	testq	%rbx, %rbx
100027d21:	74 15	je	0x100027d38
100027d23:	48 89 df	movq	%rbx, %rdi
100027d26:	e8 27 71 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027d2b:	48 85 c0	testq	%rax, %rax
100027d2e:	75 0a	jne	0x100027d3a
100027d30:	48 89 df	movq	%rbx, %rdi
100027d33:	e8 da 71 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027d38:	31 db	xorl	%ebx, %ebx
100027d3a:	4c 8b 65 c0	movq	-64(%rbp), %r12
100027d3e:	4c 8b 7d d0	movq	-48(%rbp), %r15
100027d42:	48 8b 7d c8	movq	-56(%rbp), %rdi
100027d46:	48 8d 05 7b b0 02 00	leaq	176251(%rip), %rax
100027d4d:	48 8b 00	movq	(%rax), %rax
100027d50:	49 89 1c 04	movq	%rbx, (%r12,%rax)
100027d54:	48 85 ff	testq	%rdi, %rdi
100027d57:	74 05	je	0x100027d5e
100027d59:	e8 b4 71 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027d5e:	4d 85 ff	testq	%r15, %r15
100027d61:	74 42	je	0x100027da5
100027d63:	48 8b 3d ae a9 02 00	movq	174510(%rip), %rdi ## Objc class ref: FilterDoc
100027d6a:	48 8b 35 77 93 02 00	movq	168823(%rip), %rsi ## Objc selector ref: docTypeForImageType:
100027d71:	4c 8b 35 a8 4e 01 00	movq	85672(%rip), %r14 ## Objc message: +[FilterDoc docTypeForImageType:]
100027d78:	4c 89 ea	movq	%r13, %rdx
100027d7b:	41 ff d6	callq	*%r14
100027d7e:	48 8b 0d 43 ba 02 00	movq	178755(%rip), %rcx
100027d85:	41 89 04 0c	movl	%eax, (%r12,%rcx)
100027d89:	48 8b 35 20 a1 02 00	movq	172320(%rip), %rsi ## Objc selector ref: setImageArray:
100027d90:	4c 89 e7	movq	%r12, %rdi
100027d93:	4c 89 fa	movq	%r15, %rdx
100027d96:	41 ff d6	callq	*%r14
100027d99:	4c 89 ff	movq	%r15, %rdi
100027d9c:	e8 71 71 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027da1:	b1 01	movb	$1, %cl
100027da3:	eb 02	jmp	0x100027da7
100027da5:	31 c9	xorl	%ecx, %ecx
100027da7:	0f b6 c1	movzbl	%cl, %eax
100027daa:	48 83 c4 38	addq	$56, %rsp
100027dae:	5b	popq	%rbx
100027daf:	41 5c	popq	%r12
100027db1:	41 5d	popq	%r13
100027db3:	41 5e	popq	%r14
100027db5:	41 5f	popq	%r15
100027db7:	5d	popq	%rbp
100027db8:	c3	retq
100027db9:	55	pushq	%rbp
100027dba:	48 89 e5	movq	%rsp, %rbp
100027dbd:	41 57	pushq	%r15
100027dbf:	41 56	pushq	%r14
100027dc1:	41 55	pushq	%r13
100027dc3:	41 54	pushq	%r12
100027dc5:	53	pushq	%rbx
100027dc6:	48 83 ec 18	subq	$24, %rsp
100027dca:	48 85 c9	testq	%rcx, %rcx
100027dcd:	0f 84 14 01 00 00	je	0x100027ee7
100027dd3:	4d 89 c7	movq	%r8, %r15
100027dd6:	49 89 ce	movq	%rcx, %r14
100027dd9:	49 89 d4	movq	%rdx, %r12
100027ddc:	48 89 cf	movq	%rcx, %rdi
100027ddf:	e8 6e 70 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027de4:	48 85 c0	testq	%rax, %rax
100027de7:	0f 8e fa 00 00 00	jle	0x100027ee7
100027ded:	4c 89 f7	movq	%r14, %rdi
100027df0:	e8 5d 70 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027df5:	48 89 45 d0	movq	%rax, -48(%rbp)
100027df9:	4d 85 ff	testq	%r15, %r15
100027dfc:	74 24	je	0x100027e22
100027dfe:	4c 89 ff	movq	%r15, %rdi
100027e01:	e8 f4 70 00 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100027e06:	48 89 c3	movq	%rax, %rbx
100027e09:	e8 4a 70 00 00	callq	0x10002ee58 ## symbol stub for: _CFArrayGetTypeID
100027e0e:	48 39 c3	cmpq	%rax, %rbx
100027e11:	75 0f	jne	0x100027e22
100027e13:	4c 89 ff	movq	%r15, %rdi
100027e16:	31 f6	xorl	%esi, %esi
100027e18:	e8 41 70 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100027e1d:	48 89 c7	movq	%rax, %rdi
100027e20:	eb 1c	jmp	0x100027e3e
100027e22:	4c 89 ff	movq	%r15, %rdi
100027e25:	e8 d0 70 00 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100027e2a:	48 89 c3	movq	%rax, %rbx
100027e2d:	e8 aa 70 00 00	callq	0x10002eedc ## symbol stub for: _CFDictionaryGetTypeID
100027e32:	4c 89 ff	movq	%r15, %rdi
100027e35:	48 39 c3	cmpq	%rax, %rbx
100027e38:	0f 85 a9 00 00 00	jne	0x100027ee7
100027e3e:	48 85 ff	testq	%rdi, %rdi
100027e41:	0f 84 a0 00 00 00	je	0x100027ee7
100027e47:	48 8d 35 f2 65 01 00	leaq	91634(%rip), %rsi ## Objc cfstring ref: @"FileFormat"
100027e4e:	e8 8f 70 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
100027e53:	31 db	xorl	%ebx, %ebx
100027e55:	4c 89 e7	movq	%r12, %rdi
100027e58:	48 89 c6	movq	%rax, %rsi
100027e5b:	4c 8b 65 d0	movq	-48(%rbp), %r12
100027e5f:	4c 89 e2	movq	%r12, %rdx
100027e62:	31 c9	xorl	%ecx, %ecx
100027e64:	e8 b9 72 00 00	callq	0x10002f122 ## symbol stub for: _CGImageDestinationCreateWithURL
100027e69:	48 89 45 c8	movq	%rax, -56(%rbp)
100027e6d:	48 85 c0	testq	%rax, %rax
100027e70:	74 77	je	0x100027ee9
100027e72:	4d 85 e4	testq	%r12, %r12
100027e75:	7e 58	jle	0x100027ecf
100027e77:	31 db	xorl	%ebx, %ebx
100027e79:	4d 85 ff	testq	%r15, %r15
100027e7c:	74 2c	je	0x100027eaa
100027e7e:	4c 89 ff	movq	%r15, %rdi
100027e81:	e8 74 70 00 00	callq	0x10002eefa ## symbol stub for: _CFGetTypeID
100027e86:	49 89 c4	movq	%rax, %r12
100027e89:	e8 ca 6f 00 00	callq	0x10002ee58 ## symbol stub for: _CFArrayGetTypeID
100027e8e:	4d 89 fd	movq	%r15, %r13
100027e91:	49 39 c4	cmpq	%rax, %r12
100027e94:	4c 8b 65 d0	movq	-48(%rbp), %r12
100027e98:	75 13	jne	0x100027ead
100027e9a:	4c 89 ff	movq	%r15, %rdi
100027e9d:	48 89 de	movq	%rbx, %rsi
100027ea0:	e8 b9 6f 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100027ea5:	49 89 c5	movq	%rax, %r13
100027ea8:	eb 03	jmp	0x100027ead
100027eaa:	45 31 ed	xorl	%r13d, %r13d
100027ead:	4c 89 f7	movq	%r14, %rdi
100027eb0:	48 89 de	movq	%rbx, %rsi
100027eb3:	e8 a6 6f 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100027eb8:	48 8b 7d c8	movq	-56(%rbp), %rdi
100027ebc:	48 89 c6	movq	%rax, %rsi
100027ebf:	4c 89 ea	movq	%r13, %rdx
100027ec2:	e8 4f 72 00 00	callq	0x10002f116 ## symbol stub for: _CGImageDestinationAddImage
100027ec7:	48 ff c3	incq	%rbx
100027eca:	49 39 dc	cmpq	%rbx, %r12
100027ecd:	75 aa	jne	0x100027e79
100027ecf:	4c 8b 75 c8	movq	-56(%rbp), %r14
100027ed3:	4c 89 f7	movq	%r14, %rdi
100027ed6:	e8 4d 72 00 00	callq	0x10002f128 ## symbol stub for: _CGImageDestinationFinalize
100027edb:	89 c3	movl	%eax, %ebx
100027edd:	4c 89 f7	movq	%r14, %rdi
100027ee0:	e8 2d 70 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100027ee5:	eb 02	jmp	0x100027ee9
100027ee7:	31 db	xorl	%ebx, %ebx
100027ee9:	0f b6 c3	movzbl	%bl, %eax
100027eec:	48 83 c4 18	addq	$24, %rsp
100027ef0:	5b	popq	%rbx
100027ef1:	41 5c	popq	%r12
100027ef3:	41 5d	popq	%r13
100027ef5:	41 5e	popq	%r14
100027ef7:	41 5f	popq	%r15
100027ef9:	5d	popq	%rbp
100027efa:	c3	retq
100027efb:	55	pushq	%rbp
100027efc:	48 89 e5	movq	%rsp, %rbp
100027eff:	41 57	pushq	%r15
100027f01:	41 56	pushq	%r14
100027f03:	41 55	pushq	%r13
100027f05:	41 54	pushq	%r12
100027f07:	53	pushq	%rbx
100027f08:	48 83 ec 28	subq	$40, %rsp
100027f0c:	48 89 d3	movq	%rdx, %rbx
100027f0f:	49 89 fd	movq	%rdi, %r13
100027f12:	48 8b 35 37 96 02 00	movq	169527(%rip), %rsi ## Objc selector ref: isAcceptedImageType:
100027f19:	48 89 ca	movq	%rcx, %rdx
100027f1c:	ff 15 fe 4c 01 00	callq	*85246(%rip) ## Objc message: -[%rdi isAcceptedImageType:]
100027f22:	84 c0	testb	%al, %al
100027f24:	0f 84 d4 01 00 00	je	0x1000280fe
100027f2a:	48 8d 05 c7 ae 02 00	leaq	175815(%rip), %rax
100027f31:	48 8b 00	movq	(%rax), %rax
100027f34:	48 89 45 c0	movq	%rax, -64(%rbp)
100027f38:	49 83 7c 05 00 00	cmpq	$0, (%r13,%rax)
100027f3e:	4c 8b 35 7b b8 02 00	movq	178299(%rip), %r14
100027f45:	0f 84 86 00 00 00	je	0x100027fd1
100027f4b:	48 89 5d d0	movq	%rbx, -48(%rbp)
100027f4f:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100027f54:	e8 f9 6e 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100027f59:	48 89 45 c8	movq	%rax, -56(%rbp)
100027f5d:	48 85 c0	testq	%rax, %rax
100027f60:	7e 59	jle	0x100027fbb
100027f62:	4c 8b 25 7f 90 02 00	movq	168063(%rip), %r12 ## Objc selector ref: createToneMappedImage:
100027f69:	31 db	xorl	%ebx, %ebx
100027f6b:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100027f70:	48 89 de	movq	%rbx, %rsi
100027f73:	e8 e6 6e 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100027f78:	48 8b 4d c0	movq	-64(%rbp), %rcx
100027f7c:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
100027f81:	4c 89 e6	movq	%r12, %rsi
100027f84:	48 89 c2	movq	%rax, %rdx
100027f87:	ff 15 93 4c 01 00	callq	*85139(%rip) ## Objc message: -[%rdi createToneMappedImage:]
100027f8d:	48 85 c0	testq	%rax, %rax
100027f90:	74 20	je	0x100027fb2
100027f92:	49 89 c7	movq	%rax, %r15
100027f95:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100027f9a:	48 89 de	movq	%rbx, %rsi
100027f9d:	e8 c8 6e 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
100027fa2:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100027fa7:	48 89 de	movq	%rbx, %rsi
100027faa:	4c 89 fa	movq	%r15, %rdx
100027fad:	e8 b2 6e 00 00	callq	0x10002ee64 ## symbol stub for: _CFArrayInsertValueAtIndex
100027fb2:	48 ff c3	incq	%rbx
100027fb5:	48 39 5d c8	cmpq	%rbx, -56(%rbp)
100027fb9:	75 b0	jne	0x100027f6b
100027fbb:	48 8b 35 e6 9a 02 00	movq	170726(%rip), %rsi ## Objc selector ref: releaseToneMapping:
100027fc2:	4c 89 ef	movq	%r13, %rdi
100027fc5:	31 d2	xorl	%edx, %edx
100027fc7:	ff 15 53 4c 01 00	callq	*85075(%rip) ## Objc message: -[%rdi releaseToneMapping:]
100027fcd:	48 8b 5d d0	movq	-48(%rbp), %rbx
100027fd1:	4b 83 7c 35 00 00	cmpq	$0, (%r13,%r14)
100027fd7:	0f 84 c9 00 00 00	je	0x1000280a6
100027fdd:	48 8d 05 0c ae 02 00	leaq	175628(%rip), %rax
100027fe4:	4c 8b 38	movq	(%rax), %r15
100027fe7:	4b 8b 7c 3d 00	movq	(%r13,%r15), %rdi
100027fec:	48 85 ff	testq	%rdi, %rdi
100027fef:	0f 84 b1 00 00 00	je	0x1000280a6
100027ff5:	48 8b 35 24 8c 02 00	movq	166948(%rip), %rsi ## Objc selector ref: active
100027ffc:	ff 15 1e 4c 01 00	callq	*85022(%rip) ## Objc message: -[%rdi active]
100028002:	84 c0	testb	%al, %al
100028004:	0f 84 9c 00 00 00	je	0x1000280a6
10002800a:	4c 89 7d b8	movq	%r15, -72(%rbp)
10002800e:	48 89 5d d0	movq	%rbx, -48(%rbp)
100028012:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100028017:	e8 36 6e 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
10002801c:	48 89 45 c0	movq	%rax, -64(%rbp)
100028020:	48 85 c0	testq	%rax, %rax
100028023:	7e 67	jle	0x10002808c
100028025:	48 8d 05 ec ad 02 00	leaq	175596(%rip), %rax
10002802c:	48 8b 00	movq	(%rax), %rax
10002802f:	48 89 45 c8	movq	%rax, -56(%rbp)
100028033:	4c 8b 25 9e 8f 02 00	movq	167838(%rip), %r12 ## Objc selector ref: createCIFilteredImage:
10002803a:	31 db	xorl	%ebx, %ebx
10002803c:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100028041:	48 89 de	movq	%rbx, %rsi
100028044:	e8 15 6e 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100028049:	48 8b 4d c8	movq	-56(%rbp), %rcx
10002804d:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
100028052:	4c 89 e6	movq	%r12, %rsi
100028055:	48 89 c2	movq	%rax, %rdx
100028058:	ff 15 c2 4b 01 00	callq	*84930(%rip) ## Objc message: -[%rdi createCIFilteredImage:]
10002805e:	48 85 c0	testq	%rax, %rax
100028061:	74 20	je	0x100028083
100028063:	49 89 c7	movq	%rax, %r15
100028066:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10002806b:	48 89 de	movq	%rbx, %rsi
10002806e:	e8 f7 6d 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
100028073:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
100028078:	48 89 de	movq	%rbx, %rsi
10002807b:	4c 89 fa	movq	%r15, %rdx
10002807e:	e8 e1 6d 00 00	callq	0x10002ee64 ## symbol stub for: _CFArrayInsertValueAtIndex
100028083:	48 ff c3	incq	%rbx
100028086:	48 39 5d c0	cmpq	%rbx, -64(%rbp)
10002808a:	75 b0	jne	0x10002803c
10002808c:	48 8b 45 b8	movq	-72(%rbp), %rax
100028090:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
100028095:	48 8b 35 f4 8d 02 00	movq	167412(%rip), %rsi ## Objc selector ref: close
10002809c:	ff 15 7e 4b 01 00	callq	*84862(%rip) ## Objc message: -[%rdi close]
1000280a2:	48 8b 5d d0	movq	-48(%rbp), %rbx
1000280a6:	4b 8b 4c 35 00	movq	(%r13,%r14), %rcx
1000280ab:	48 8d 05 16 ad 02 00	leaq	175382(%rip), %rax
1000280b2:	48 8b 00	movq	(%rax), %rax
1000280b5:	4d 8b 44 05 00	movq	(%r13,%rax), %r8
1000280ba:	48 8b 35 7f a4 02 00	movq	173183(%rip), %rsi ## Objc selector ref: writeImageArrayToURL:imagearray:metadata:
1000280c1:	4c 89 ef	movq	%r13, %rdi
1000280c4:	48 89 da	movq	%rbx, %rdx
1000280c7:	ff 15 53 4b 01 00	callq	*84819(%rip) ## Objc message: -[%rdi writeImageArrayToURL:imagearray:metadata:]
1000280cd:	3c 01	cmpb	$1, %al
1000280cf:	75 2f	jne	0x100028100
1000280d1:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000280d6:	e8 3d 6e 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
1000280db:	4b 8b 54 35 00	movq	(%r13,%r14), %rdx
1000280e0:	48 8b 35 c9 9d 02 00	movq	171465(%rip), %rsi ## Objc selector ref: setImageArray:
1000280e7:	4c 89 ef	movq	%r13, %rdi
1000280ea:	ff 15 30 4b 01 00	callq	*84784(%rip) ## Objc message: -[%rdi setImageArray:]
1000280f0:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
1000280f5:	e8 18 6e 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000280fa:	b0 01	movb	$1, %al
1000280fc:	eb 02	jmp	0x100028100
1000280fe:	31 c0	xorl	%eax, %eax
100028100:	0f be c0	movsbl	%al, %eax
100028103:	48 83 c4 28	addq	$40, %rsp
100028107:	5b	popq	%rbx
100028108:	41 5c	popq	%r12
10002810a:	41 5d	popq	%r13
10002810c:	41 5e	popq	%r14
10002810e:	41 5f	popq	%r15
100028110:	5d	popq	%rbp
100028111:	c3	retq
100028112:	55	pushq	%rbp
100028113:	48 89 e5	movq	%rsp, %rbp
100028116:	53	pushq	%rbx
100028117:	50	pushq	%rax
100028118:	48 8b 35 31 96 02 00	movq	169521(%rip), %rsi ## Objc selector ref: metadata
10002811f:	48 8b 1d fa 4a 01 00	movq	84730(%rip), %rbx ## Objc message: -[%rdi metadata]
100028126:	ff d3	callq	*%rbx
100028128:	48 8b 0d a1 48 01 00	movq	84129(%rip), %rcx ## literal pool symbol address: _kCGImagePropertyDPIWidth
10002812f:	48 8b 11	movq	(%rcx), %rdx
100028132:	48 8b 35 3f 97 02 00	movq	169791(%rip), %rsi ## Objc selector ref: objectForKey:
100028139:	48 89 c7	movq	%rax, %rdi
10002813c:	ff d3	callq	*%rbx
10002813e:	48 8b 35 4b 91 02 00	movq	168267(%rip), %rsi ## Objc selector ref: floatValue
100028145:	48 89 c7	movq	%rax, %rdi
100028148:	ff d3	callq	*%rbx
10002814a:	0f 57 d2	xorps	%xmm2, %xmm2
10002814d:	f3 0f c2 d0 00	cmpeqss	%xmm0, %xmm2
100028152:	f3 0f 10 0d 4e 12 01 00	movss	70222(%rip), %xmm1
10002815a:	0f 54 ca	andps	%xmm2, %xmm1
10002815d:	0f 55 d0	andnps	%xmm0, %xmm2
100028160:	0f 56 ca	orps	%xmm2, %xmm1
100028163:	0f 28 c1	movaps	%xmm1, %xmm0
100028166:	48 83 c4 08	addq	$8, %rsp
10002816a:	5b	popq	%rbx
10002816b:	5d	popq	%rbp
10002816c:	c3	retq
10002816d:	55	pushq	%rbp
10002816e:	48 89 e5	movq	%rsp, %rbp
100028171:	53	pushq	%rbx
100028172:	50	pushq	%rax
100028173:	48 8b 35 d6 95 02 00	movq	169430(%rip), %rsi ## Objc selector ref: metadata
10002817a:	48 8b 1d 9f 4a 01 00	movq	84639(%rip), %rbx ## Objc message: -[%rdi metadata]
100028181:	ff d3	callq	*%rbx
100028183:	48 8b 0d 3e 48 01 00	movq	84030(%rip), %rcx ## literal pool symbol address: _kCGImagePropertyDPIHeight
10002818a:	48 8b 11	movq	(%rcx), %rdx
10002818d:	48 8b 35 e4 96 02 00	movq	169700(%rip), %rsi ## Objc selector ref: objectForKey:
100028194:	48 89 c7	movq	%rax, %rdi
100028197:	ff d3	callq	*%rbx
100028199:	48 8b 35 f0 90 02 00	movq	168176(%rip), %rsi ## Objc selector ref: floatValue
1000281a0:	48 89 c7	movq	%rax, %rdi
1000281a3:	ff d3	callq	*%rbx
1000281a5:	0f 57 d2	xorps	%xmm2, %xmm2
1000281a8:	f3 0f c2 d0 00	cmpeqss	%xmm0, %xmm2
1000281ad:	f3 0f 10 0d f3 11 01 00	movss	70131(%rip), %xmm1
1000281b5:	0f 54 ca	andps	%xmm2, %xmm1
1000281b8:	0f 55 d0	andnps	%xmm0, %xmm2
1000281bb:	0f 56 ca	orps	%xmm2, %xmm1
1000281be:	0f 28 c1	movaps	%xmm1, %xmm0
1000281c1:	48 83 c4 08	addq	$8, %rsp
1000281c5:	5b	popq	%rbx
1000281c6:	5d	popq	%rbp
1000281c7:	c3	retq
1000281c8:	55	pushq	%rbp
1000281c9:	48 89 e5	movq	%rsp, %rbp
1000281cc:	53	pushq	%rbx
1000281cd:	50	pushq	%rax
1000281ce:	48 8b 35 7b 95 02 00	movq	169339(%rip), %rsi ## Objc selector ref: metadata
1000281d5:	48 8b 1d 44 4a 01 00	movq	84548(%rip), %rbx ## Objc message: -[%rdi metadata]
1000281dc:	ff d3	callq	*%rbx
1000281de:	48 8b 0d f3 47 01 00	movq	83955(%rip), %rcx ## literal pool symbol address: _kCGImagePropertyOrientation
1000281e5:	48 8b 11	movq	(%rcx), %rdx
1000281e8:	48 8b 35 89 96 02 00	movq	169609(%rip), %rsi ## Objc selector ref: objectForKey:
1000281ef:	48 89 c7	movq	%rax, %rdi
1000281f2:	ff d3	callq	*%rbx
1000281f4:	48 8b 35 15 93 02 00	movq	168725(%rip), %rsi ## Objc selector ref: intValue
1000281fb:	48 89 c7	movq	%rax, %rdi
1000281fe:	ff d3	callq	*%rbx
100028200:	8d 48 f7	leal	-9(%rax), %ecx
100028203:	83 f9 f8	cmpl	$-8, %ecx
100028206:	b9 01 00 00 00	movl	$1, %ecx
10002820b:	0f 42 c1	cmovbl	%ecx, %eax
10002820e:	48 83 c4 08	addq	$8, %rsp
100028212:	5b	popq	%rbx
100028213:	5d	popq	%rbp
100028214:	c3	retq
100028215:	55	pushq	%rbp
100028216:	48 89 e5	movq	%rsp, %rbp
100028219:	41 57	pushq	%r15
10002821b:	41 56	pushq	%r14
10002821d:	41 54	pushq	%r12
10002821f:	53	pushq	%rbx
100028220:	48 81 ec b0 01 00 00	subq	$432, %rsp
100028227:	48 89 f3	movq	%rsi, %rbx
10002822a:	49 89 fe	movq	%rdi, %r14
10002822d:	48 8b 05 e4 45 01 00	movq	83428(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100028234:	48 8b 00	movq	(%rax), %rax
100028237:	48 89 45 d8	movq	%rax, -40(%rbp)
10002823b:	48 8b 35 de 8e 02 00	movq	167646(%rip), %rsi ## Objc selector ref: dpiWidth
100028242:	4c 8b 25 d7 49 01 00	movq	84439(%rip), %r12 ## Objc message: -[%rdi dpiWidth]
100028249:	48 89 df	movq	%rbx, %rdi
10002824c:	41 ff d4	callq	*%r12
10002824f:	0f 29 85 40 fe ff ff	movaps	%xmm0, -448(%rbp)
100028256:	48 8b 35 bb 8e 02 00	movq	167611(%rip), %rsi ## Objc selector ref: dpiHeight
10002825d:	48 89 df	movq	%rbx, %rdi
100028260:	41 ff d4	callq	*%r12
100028263:	0f 29 85 30 fe ff ff	movaps	%xmm0, -464(%rbp)
10002826a:	48 8b 35 87 96 02 00	movq	169607(%rip), %rsi ## Objc selector ref: orientation
100028271:	48 89 df	movq	%rbx, %rdi
100028274:	41 ff d4	callq	*%r12
100028277:	41 89 c7	movl	%eax, %r15d
10002827a:	48 8b 35 8f 8d 02 00	movq	167311(%rip), %rsi ## Objc selector ref: currentImage
100028281:	48 89 df	movq	%rbx, %rdi
100028284:	41 ff d4	callq	*%r12
100028287:	48 89 c3	movq	%rax, %rbx
10002828a:	0f 28 85 30 fe ff ff	movaps	-464(%rbp), %xmm0
100028291:	0f 28 c8	movaps	%xmm0, %xmm1
100028294:	0f 28 95 40 fe ff ff	movaps	-448(%rbp), %xmm2
10002829b:	66 0f 3a 21 ca 10	insertps	$16, %xmm2, %xmm1
1000282a1:	66 0f 3a 21 d0 10	insertps	$16, %xmm0, %xmm2
1000282a7:	0f 28 c2	movaps	%xmm2, %xmm0
1000282aa:	0f c2 c1 01	cmpltps	%xmm1, %xmm0
1000282ae:	0f 5e ca	divps	%xmm2, %xmm1
1000282b1:	0f 28 15 d8 0f 01 00	movaps	69592(%rip), %xmm2
1000282b8:	66 0f 38 14 d1	blendvps	%xmm0, %xmm1, %xmm2
1000282bd:	0f 29 95 40 fe ff ff	movaps	%xmm2, -448(%rbp)
1000282c4:	48 89 c7	movq	%rax, %rdi
1000282c7:	e8 b0 6e 00 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
1000282cc:	49 89 c4	movq	%rax, %r12
1000282cf:	48 89 df	movq	%rbx, %rdi
1000282d2:	e8 87 6e 00 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
1000282d7:	66 49 0f 6e c4	movq	%r12, %xmm0
1000282dc:	66 48 0f 6e c8	movq	%rax, %xmm1
1000282e1:	66 0f 6c c1	punpcklqdq	%xmm1, %xmm0
1000282e5:	66 0f 6f 0d c3 10 01 00	movdqa	69827(%rip), %xmm1
1000282ed:	66 0f db c8	pand	%xmm0, %xmm1
1000282f1:	66 0f 6f d0	movdqa	%xmm0, %xmm2
1000282f5:	66 0f 73 d2 01	psrlq	$1, %xmm2
1000282fa:	66 0f eb d1	por	%xmm1, %xmm2
1000282fe:	66 0f 70 c8 ed	pshufd	$237, %xmm0, %xmm1
100028303:	66 0f 38 15 c2	blendvpd	%xmm0, %xmm2, %xmm0
100028308:	66 48 0f 3a 16 c0 01	pextrq	$1, %xmm0, %rax
10002830f:	0f 57 d2	xorps	%xmm2, %xmm2
100028312:	f3 48 0f 2a d0	cvtsi2ss	%rax, %xmm2
100028317:	66 48 0f 7e c0	movq	%xmm0, %rax
10002831c:	f3 48 0f 2a d8	cvtsi2ss	%rax, %xmm3
100028321:	66 0f 3a 21 da 1c	insertps	$28, %xmm2, %xmm3
100028327:	0f 28 d3	movaps	%xmm3, %xmm2
10002832a:	0f 58 d3	addps	%xmm3, %xmm2
10002832d:	66 0f 6f c1	movdqa	%xmm1, %xmm0
100028331:	66 0f 38 14 da	blendvps	%xmm0, %xmm2, %xmm3
100028336:	0f 28 a5 40 fe ff ff	movaps	-448(%rbp), %xmm4
10002833d:	0f 59 dc	mulps	%xmm4, %xmm3
100028340:	66 0f ef c9	pxor	%xmm1, %xmm1
100028344:	f3 0f 7f 8d 58 fe ff ff	movdqu	%xmm1, -424(%rbp)
10002834c:	66 0f 7f 8d 70 fe ff ff	movdqa	%xmm1, -400(%rbp)
100028354:	f3 0f 7f 8d 88 fe ff ff	movdqu	%xmm1, -376(%rbp)
10002835c:	0f 5a c3	cvtps2pd	%xmm3, %xmm0
10002835f:	0f 13 85 a0 fe ff ff	movlps	%xmm0, -352(%rbp)
100028366:	31 c0	xorl	%eax, %eax
100028368:	48 89 85 a8 fe ff ff	movq	%rax, -344(%rbp)
10002836f:	f3 0f 7f 8d b8 fe ff ff	movdqu	%xmm1, -328(%rbp)
100028377:	0f 29 85 d0 fe ff ff	movaps	%xmm0, -304(%rbp)
10002837e:	f3 0f 7f 8d e8 fe ff ff	movdqu	%xmm1, -280(%rbp)
100028386:	48 89 85 00 ff ff ff	movq	%rax, -256(%rbp)
10002838d:	0f 17 85 08 ff ff ff	movhps	%xmm0, -248(%rbp)
100028394:	48 89 85 10 ff ff ff	movq	%rax, -240(%rbp)
10002839b:	0f 28 15 4e 02 01 00	movaps	66126(%rip), %xmm2
1000283a2:	0f 57 d4	xorps	%xmm4, %xmm2
1000283a5:	0f 5a d2	cvtps2pd	%xmm2, %xmm2
1000283a8:	66 0f 13 95 80 fe ff ff	movlpd	%xmm2, -384(%rbp)
1000283b0:	66 0f 13 95 b0 fe ff ff	movlpd	%xmm2, -336(%rbp)
1000283b8:	66 0f 17 95 c8 fe ff ff	movhpd	%xmm2, -312(%rbp)
1000283c0:	66 0f 17 95 f8 fe ff ff	movhpd	%xmm2, -264(%rbp)
1000283c8:	66 0f 11 95 18 ff ff ff	movupd	%xmm2, -232(%rbp)
1000283d0:	48 89 85 28 ff ff ff	movq	%rax, -216(%rbp)
1000283d7:	0f 28 d8	movaps	%xmm0, %xmm3
1000283da:	0f c6 d8 4e	shufps	$78, %xmm0, %xmm3
1000283de:	0f 29 9d 30 ff ff ff	movaps	%xmm3, -208(%rbp)
1000283e5:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
1000283ec:	66 0f 13 95 48 ff ff ff	movlpd	%xmm2, -184(%rbp)
1000283f4:	f3 0f 7f 8d 58 ff ff ff	movdqu	%xmm1, -168(%rbp)
1000283fc:	0f 13 85 68 ff ff ff	movlps	%xmm0, -152(%rbp)
100028403:	48 89 85 70 ff ff ff	movq	%rax, -144(%rbp)
10002840a:	0f 5a dc	cvtps2pd	%xmm4, %xmm3
10002840d:	66 0f 13 9d 50 fe ff ff	movlpd	%xmm3, -432(%rbp)
100028415:	66 0f 17 9d 68 fe ff ff	movhpd	%xmm3, -408(%rbp)
10002841d:	66 0f 17 9d 98 fe ff ff	movhpd	%xmm3, -360(%rbp)
100028425:	66 0f 13 9d e0 fe ff ff	movlpd	%xmm3, -288(%rbp)
10002842d:	66 0f 17 9d 50 ff ff ff	movhpd	%xmm3, -176(%rbp)
100028435:	66 0f 11 9d 78 ff ff ff	movupd	%xmm3, -136(%rbp)
10002843d:	f3 0f 7f 4d 88	movdqu	%xmm1, -120(%rbp)
100028442:	f3 0f 7f 4d 98	movdqu	%xmm1, -104(%rbp)
100028447:	f2 0f 10 d3	movsd	%xmm3, %xmm2
10002844b:	66 0f 11 55 a8	movupd	%xmm2, -88(%rbp)
100028450:	48 89 45 b8	movq	%rax, -72(%rbp)
100028454:	0f 17 45 c0	movhps	%xmm0, -64(%rbp)
100028458:	48 89 45 c8	movq	%rax, -56(%rbp)
10002845c:	41 ff cf	decl	%r15d
10002845f:	49 63 c7	movslq	%r15d, %rax
100028462:	48 8d 04 40	leaq	(%rax,%rax,2), %rax
100028466:	48 c1 e0 04	shlq	$4, %rax
10002846a:	0f 10 84 05 50 fe ff ff	movups	-432(%rbp,%rax), %xmm0
100028472:	0f 10 8c 05 60 fe ff ff	movups	-416(%rbp,%rax), %xmm1
10002847a:	0f 10 94 05 70 fe ff ff	movups	-400(%rbp,%rax), %xmm2
100028482:	41 0f 11 56 20	movups	%xmm2, 32(%r14)
100028487:	41 0f 11 4e 10	movups	%xmm1, 16(%r14)
10002848c:	41 0f 11 06	movups	%xmm0, (%r14)
100028490:	48 8b 05 81 43 01 00	movq	82817(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100028497:	48 8b 00	movq	(%rax), %rax
10002849a:	48 3b 45 d8	cmpq	-40(%rbp), %rax
10002849e:	75 13	jne	0x1000284b3
1000284a0:	4c 89 f0	movq	%r14, %rax
1000284a3:	48 81 c4 b0 01 00 00	addq	$432, %rsp
1000284aa:	5b	popq	%rbx
1000284ab:	41 5c	popq	%r12
1000284ad:	41 5e	popq	%r14
1000284af:	41 5f	popq	%r15
1000284b1:	5d	popq	%rbp
1000284b2:	c3	retq
1000284b3:	e8 f8 6e 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
1000284b8:	55	pushq	%rbp
1000284b9:	48 89 e5	movq	%rsp, %rbp
1000284bc:	48 89 f8	movq	%rdi, %rax
1000284bf:	48 8b 0d fa b2 02 00	movq	176890(%rip), %rcx
1000284c6:	48 8b 3c 0f	movq	(%rdi,%rcx), %rdi
1000284ca:	48 85 ff	testq	%rdi, %rdi
1000284cd:	74 1c	je	0x1000284eb
1000284cf:	48 8d 0d 4a aa 02 00	leaq	174666(%rip), %rcx
1000284d6:	48 8b 09	movq	(%rcx), %rcx
1000284d9:	48 8b 34 08	movq	(%rax,%rcx), %rsi
1000284dd:	48 85 f6	testq	%rsi, %rsi
1000284e0:	7e 09	jle	0x1000284eb
1000284e2:	48 ff ce	decq	%rsi
1000284e5:	5d	popq	%rbp
1000284e6:	e9 73 69 00 00	jmp	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
1000284eb:	31 c0	xorl	%eax, %eax
1000284ed:	5d	popq	%rbp
1000284ee:	c3	retq
1000284ef:	55	pushq	%rbp
1000284f0:	48 89 e5	movq	%rsp, %rbp
1000284f3:	48 8d 05 fe a8 02 00	leaq	174334(%rip), %rax
1000284fa:	48 8b 00	movq	(%rax), %rax
1000284fd:	48 8b 04 07	movq	(%rdi,%rax), %rax
100028501:	48 85 c0	testq	%rax, %rax
100028504:	48 0f 45 f8	cmovneq	%rax, %rdi
100028508:	48 8d 05 f9 93 02 00	leaq	168953(%rip), %rax ## Objc selector ref: originalImage
10002850f:	48 8d 0d c2 9e 02 00	leaq	171714(%rip), %rcx ## Objc selector ref: toneMappedImage
100028516:	48 0f 44 c8	cmoveq	%rax, %rcx
10002851a:	48 8b 31	movq	(%rcx), %rsi
10002851d:	5d	popq	%rbp
10002851e:	ff 25 fc 46 01 00	jmpq	*83708(%rip) ## Objc message: -[%rdi toneMappedImage]
100028524:	55	pushq	%rbp
100028525:	48 89 e5	movq	%rsp, %rbp
100028528:	53	pushq	%rbx
100028529:	50	pushq	%rax
10002852a:	48 8b 35 df 8a 02 00	movq	166623(%rip), %rsi ## Objc selector ref: currentImage
100028531:	ff 15 e9 46 01 00	callq	*83689(%rip) ## Objc message: -[%rdi currentImage]
100028537:	48 89 c3	movq	%rax, %rbx
10002853a:	48 89 c7	movq	%rax, %rdi
10002853d:	e8 40 6c 00 00	callq	0x10002f182 ## symbol stub for: _CGImageHasAlpha
100028542:	b1 01	movb	$1, %cl
100028544:	84 c0	testb	%al, %al
100028546:	75 0e	jne	0x100028556
100028548:	48 89 df	movq	%rbx, %rdi
10002854b:	e8 14 6c 00 00	callq	0x10002f164 ## symbol stub for: _CGImageGetMask
100028550:	48 85 c0	testq	%rax, %rax
100028553:	0f 95 c1	setne	%cl
100028556:	0f b6 c1	movzbl	%cl, %eax
100028559:	48 83 c4 08	addq	$8, %rsp
10002855d:	5b	popq	%rbx
10002855e:	5d	popq	%rbp
10002855f:	c3	retq
100028560:	55	pushq	%rbp
100028561:	48 89 e5	movq	%rsp, %rbp
100028564:	48 8b 35 a5 8a 02 00	movq	166565(%rip), %rsi ## Objc selector ref: currentImage
10002856b:	ff 15 af 46 01 00	callq	*83631(%rip) ## Objc message: -[%rdi currentImage]
100028571:	48 89 c7	movq	%rax, %rdi
100028574:	e8 d3 6b 00 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100028579:	48 89 c7	movq	%rax, %rdi
10002857c:	5d	popq	%rbp
10002857d:	e9 92 6a 00 00	jmp	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
100028582:	55	pushq	%rbp
100028583:	48 89 e5	movq	%rsp, %rbp
100028586:	48 8b 05 3b b2 02 00	movq	176699(%rip), %rax
10002858d:	8b 04 07	movl	(%rdi,%rax), %eax
100028590:	5d	popq	%rbp
100028591:	c3	retq
100028592:	55	pushq	%rbp
100028593:	48 89 e5	movq	%rsp, %rbp
100028596:	48 8b 35 73 8a 02 00	movq	166515(%rip), %rsi ## Objc selector ref: currentImage
10002859d:	5d	popq	%rbp
10002859e:	ff 25 7c 46 01 00	jmpq	*83580(%rip) ## Objc message: -[%rdi currentImage]
1000285a4:	55	pushq	%rbp
1000285a5:	48 89 e5	movq	%rsp, %rbp
1000285a8:	48 8d 05 71 a9 02 00	leaq	174449(%rip), %rax
1000285af:	48 8b 00	movq	(%rax), %rax
1000285b2:	48 8b 04 07	movq	(%rdi,%rax), %rax
1000285b6:	5d	popq	%rbp
1000285b7:	c3	retq
1000285b8:	55	pushq	%rbp
1000285b9:	48 89 e5	movq	%rsp, %rbp
1000285bc:	48 8d 05 5d a9 02 00	leaq	174429(%rip), %rax
1000285c3:	48 8b 00	movq	(%rax), %rax
1000285c6:	48 89 14 07	movq	%rdx, (%rdi,%rax)
1000285ca:	5d	popq	%rbp
1000285cb:	c3	retq
1000285cc:	55	pushq	%rbp
1000285cd:	48 89 e5	movq	%rsp, %rbp
1000285d0:	48 8d 05 09 aa 02 00	leaq	174601(%rip), %rax
1000285d7:	48 8b 00	movq	(%rax), %rax
1000285da:	48 8b 04 07	movq	(%rdi,%rax), %rax
1000285de:	5d	popq	%rbp
1000285df:	c3	retq
1000285e0:	55	pushq	%rbp
1000285e1:	48 89 e5	movq	%rsp, %rbp
1000285e4:	41 56	pushq	%r14
1000285e6:	53	pushq	%rbx
1000285e7:	48 85 d2	testq	%rdx, %rdx
1000285ea:	74 50	je	0x10002863c
1000285ec:	49 89 d6	movq	%rdx, %r14
1000285ef:	48 89 fb	movq	%rdi, %rbx
1000285f2:	48 8b 35 17 8a 02 00	movq	166423(%rip), %rsi ## Objc selector ref: currentImage
1000285f9:	ff 15 21 46 01 00	callq	*83489(%rip) ## Objc message: -[%rdi currentImage]
1000285ff:	48 85 c0	testq	%rax, %rax
100028602:	74 38	je	0x10002863c
100028604:	48 8b 05 b5 b1 02 00	movq	176565(%rip), %rax
10002860b:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002860f:	48 8d 05 0a a9 02 00	leaq	174346(%rip), %rax
100028616:	48 8b 00	movq	(%rax), %rax
100028619:	48 8b 34 03	movq	(%rbx,%rax), %rsi
10002861d:	48 ff ce	decq	%rsi
100028620:	4c 89 f2	movq	%r14, %rdx
100028623:	e8 48 68 00 00	callq	0x10002ee70 ## symbol stub for: _CFArraySetValueAtIndex
100028628:	48 8b 35 29 9e 02 00	movq	171561(%rip), %rsi ## Objc selector ref: updatePreview
10002862f:	48 89 df	movq	%rbx, %rdi
100028632:	5b	popq	%rbx
100028633:	41 5e	popq	%r14
100028635:	5d	popq	%rbp
100028636:	ff 25 e4 45 01 00	jmpq	*83428(%rip) ## Objc message: -[%rdi updatePreview]
10002863c:	5b	popq	%rbx
10002863d:	41 5e	popq	%r14
10002863f:	5d	popq	%rbp
100028640:	c3	retq
100028641:	55	pushq	%rbp
100028642:	48 89 e5	movq	%rsp, %rbp
100028645:	41 57	pushq	%r15
100028647:	41 56	pushq	%r14
100028649:	41 55	pushq	%r13
10002864b:	41 54	pushq	%r12
10002864d:	53	pushq	%rbx
10002864e:	50	pushq	%rax
10002864f:	49 89 d6	movq	%rdx, %r14
100028652:	48 89 fb	movq	%rdi, %rbx
100028655:	48 85 d2	testq	%rdx, %rdx
100028658:	74 08	je	0x100028662
10002865a:	4c 89 f7	movq	%r14, %rdi
10002865d:	e8 b6 68 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100028662:	4c 8b 25 57 b1 02 00	movq	176471(%rip), %r12
100028669:	4e 8b 3c 23	movq	(%rbx,%r12), %r15
10002866d:	4d 85 ff	testq	%r15, %r15
100028670:	74 08	je	0x10002867a
100028672:	4c 89 ff	movq	%r15, %rdi
100028675:	e8 98 68 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002867a:	31 c0	xorl	%eax, %eax
10002867c:	4e 89 34 23	movq	%r14, (%rbx,%r12)
100028680:	48 8d 0d 99 a8 02 00	leaq	174233(%rip), %rcx
100028687:	4c 8b 21	movq	(%rcx), %r12
10002868a:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002868e:	48 8d 0d 4b a9 02 00	leaq	174411(%rip), %rcx
100028695:	4c 8b 29	movq	(%rcx), %r13
100028698:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
10002869c:	4d 85 f6	testq	%r14, %r14
10002869f:	74 19	je	0x1000286ba
1000286a1:	4c 89 f7	movq	%r14, %rdi
1000286a4:	e8 a9 67 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
1000286a9:	4a 89 04 2b	movq	%rax, (%rbx,%r13)
1000286ad:	48 85 c0	testq	%rax, %rax
1000286b0:	7e 08	jle	0x1000286ba
1000286b2:	4a c7 04 23 01 00 00 00	movq	$1, (%rbx,%r12)
1000286ba:	4d 85 ff	testq	%r15, %r15
1000286bd:	74 1e	je	0x1000286dd
1000286bf:	48 8b 35 92 9d 02 00	movq	171410(%rip), %rsi ## Objc selector ref: updatePreview
1000286c6:	48 89 df	movq	%rbx, %rdi
1000286c9:	48 83 c4 08	addq	$8, %rsp
1000286cd:	5b	popq	%rbx
1000286ce:	41 5c	popq	%r12
1000286d0:	41 5d	popq	%r13
1000286d2:	41 5e	popq	%r14
1000286d4:	41 5f	popq	%r15
1000286d6:	5d	popq	%rbp
1000286d7:	ff 25 43 45 01 00	jmpq	*83267(%rip) ## Objc message: -[%rdi updatePreview]
1000286dd:	48 83 c4 08	addq	$8, %rsp
1000286e1:	5b	popq	%rbx
1000286e2:	41 5c	popq	%r12
1000286e4:	41 5d	popq	%r13
1000286e6:	41 5e	popq	%r14
1000286e8:	41 5f	popq	%r15
1000286ea:	5d	popq	%rbp
1000286eb:	c3	retq
1000286ec:	55	pushq	%rbp
1000286ed:	48 89 e5	movq	%rsp, %rbp
1000286f0:	41 57	pushq	%r15
1000286f2:	41 56	pushq	%r14
1000286f4:	41 55	pushq	%r13
1000286f6:	41 54	pushq	%r12
1000286f8:	53	pushq	%rbx
1000286f9:	48 83 ec 28	subq	$40, %rsp
1000286fd:	49 89 d4	movq	%rdx, %r12
100028700:	49 89 fe	movq	%rdi, %r14
100028703:	48 8b 35 46 94 02 00	movq	169030(%rip), %rsi ## Objc selector ref: retainCurrentFilter
10002870a:	48 8b 1d 0f 45 01 00	movq	83215(%rip), %rbx ## Objc message: -[%rdi retainCurrentFilter]
100028711:	ff d3	callq	*%rbx
100028713:	49 89 c5	movq	%rax, %r13
100028716:	48 8b 35 f3 88 02 00	movq	166131(%rip), %rsi ## Objc selector ref: currentImage
10002871d:	4c 89 f7	movq	%r14, %rdi
100028720:	ff d3	callq	*%rbx
100028722:	48 85 c0	testq	%rax, %rax
100028725:	74 47	je	0x10002876e
100028727:	49 89 c7	movq	%rax, %r15
10002872a:	4c 89 6d b8	movq	%r13, -72(%rbp)
10002872e:	4d 85 e4	testq	%r12, %r12
100028731:	74 52	je	0x100028785
100028733:	48 8b 35 b6 85 02 00	movq	165302(%rip), %rsi ## Objc selector ref: applyFilterToImage:filter:imageScaleFilter:
10002873a:	4c 89 f7	movq	%r14, %rdi
10002873d:	4c 89 fa	movq	%r15, %rdx
100028740:	4c 8b 6d b8	movq	-72(%rbp), %r13
100028744:	4c 89 e9	movq	%r13, %rcx
100028747:	4d 89 e0	movq	%r12, %r8
10002874a:	ff 15 d0 44 01 00	callq	*83152(%rip) ## Objc message: -[%rdi applyFilterToImage:filter:imageScaleFilter:]
100028750:	48 89 c3	movq	%rax, %rbx
100028753:	48 8b 35 4e 97 02 00	movq	169806(%rip), %rsi ## Objc selector ref: setImage:
10002875a:	4c 89 f7	movq	%r14, %rdi
10002875d:	48 89 da	movq	%rbx, %rdx
100028760:	ff 15 ba 44 01 00	callq	*83130(%rip) ## Objc message: -[%rdi setImage:]
100028766:	48 89 df	movq	%rbx, %rdi
100028769:	e8 1a 6a 00 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10002876e:	4c 89 ef	movq	%r13, %rdi
100028771:	48 83 c4 28	addq	$40, %rsp
100028775:	5b	popq	%rbx
100028776:	41 5c	popq	%r12
100028778:	41 5d	popq	%r13
10002877a:	41 5e	popq	%r14
10002877c:	41 5f	popq	%r15
10002877e:	5d	popq	%rbp
10002877f:	ff 25 d3 44 01 00	jmpq	*83155(%rip) ## literal pool symbol address: _objc_release
100028785:	4c 89 ff	movq	%r15, %rdi
100028788:	e8 bf 69 00 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
10002878d:	49 89 c5	movq	%rax, %r13
100028790:	48 89 c7	movq	%rax, %rdi
100028793:	e8 7c 68 00 00	callq	0x10002f014 ## symbol stub for: _CGColorSpaceGetModel
100028798:	89 c3	movl	%eax, %ebx
10002879a:	48 8b 35 2f 87 02 00	movq	165679(%rip), %rsi ## Objc selector ref: colorSpaceModel
1000287a1:	4c 89 f7	movq	%r14, %rdi
1000287a4:	ff 15 76 44 01 00	callq	*83062(%rip) ## Objc message: -[%rdi colorSpaceModel]
1000287aa:	83 fb 05	cmpl	$5, %ebx
1000287ad:	75 84	jne	0x100028733
1000287af:	83 f8 01	cmpl	$1, %eax
1000287b2:	0f 85 7b ff ff ff	jne	0x100028733
1000287b8:	4c 89 ef	movq	%r13, %rdi
1000287bb:	e8 42 68 00 00	callq	0x10002f002 ## symbol stub for: _CGColorSpaceGetBaseColorSpace
1000287c0:	48 89 c3	movq	%rax, %rbx
1000287c3:	4c 89 ef	movq	%r13, %rdi
1000287c6:	e8 43 68 00 00	callq	0x10002f00e ## symbol stub for: _CGColorSpaceGetColorTableCount
1000287cb:	48 89 45 c0	movq	%rax, -64(%rbp)
1000287cf:	48 8d 3c 85 00 00 00 00	leaq	(,%rax,4), %rdi
1000287d7:	48 89 7d d0	movq	%rdi, -48(%rbp)
1000287db:	e8 d2 6c 00 00	callq	0x10002f4b2 ## symbol stub for: _malloc
1000287e0:	48 89 45 c8	movq	%rax, -56(%rbp)
1000287e4:	48 85 c0	testq	%rax, %rax
1000287e7:	0f 84 46 ff ff ff	je	0x100028733
1000287ed:	4c 89 ef	movq	%r13, %rdi
1000287f0:	48 89 5d b0	movq	%rbx, -80(%rbp)
1000287f4:	48 8b 5d c8	movq	-56(%rbp), %rbx
1000287f8:	48 89 de	movq	%rbx, %rsi
1000287fb:	e8 08 68 00 00	callq	0x10002f008 ## symbol stub for: _CGColorSpaceGetColorTable
100028800:	4c 8b 6d c0	movq	-64(%rbp), %r13
100028804:	4a 8d 14 6d 00 00 00 00	leaq	(,%r13,2), %rdx
10002880c:	4c 01 ea	addq	%r13, %rdx
10002880f:	31 ff	xorl	%edi, %edi
100028811:	48 89 de	movq	%rbx, %rsi
100028814:	48 89 d3	movq	%rdx, %rbx
100028817:	31 c9	xorl	%ecx, %ecx
100028819:	e8 da 68 00 00	callq	0x10002f0f8 ## symbol stub for: _CGDataProviderCreateWithData
10002881e:	48 83 ec 08	subq	$8, %rsp
100028822:	be 01 00 00 00	movl	$1, %esi
100028827:	ba 08 00 00 00	movl	$8, %edx
10002882c:	b9 18 00 00 00	movl	$24, %ecx
100028831:	4c 89 ef	movq	%r13, %rdi
100028834:	49 89 d8	movq	%rbx, %r8
100028837:	4c 8b 4d b0	movq	-80(%rbp), %r9
10002883b:	31 db	xorl	%ebx, %ebx
10002883d:	53	pushq	%rbx
10002883e:	53	pushq	%rbx
10002883f:	31 db	xorl	%ebx, %ebx
100028841:	6a 00	pushq	$0
100028843:	50	pushq	%rax
100028844:	49 89 c5	movq	%rax, %r13
100028847:	53	pushq	%rbx
100028848:	e8 b7 68 00 00	callq	0x10002f104 ## symbol stub for: _CGImageCreate
10002884d:	48 83 c4 30	addq	$48, %rsp
100028851:	48 89 c3	movq	%rax, %rbx
100028854:	4c 89 ef	movq	%r13, %rdi
100028857:	e8 a2 68 00 00	callq	0x10002f0fe ## symbol stub for: _CGDataProviderRelease
10002885c:	48 85 db	testq	%rbx, %rbx
10002885f:	0f 84 ce fe ff ff	je	0x100028733
100028865:	48 8b 35 84 84 02 00	movq	164996(%rip), %rsi ## Objc selector ref: applyFilterToImage:filter:imageScaleFilter:
10002886c:	4c 89 f7	movq	%r14, %rdi
10002886f:	48 89 da	movq	%rbx, %rdx
100028872:	4c 8b 6d b8	movq	-72(%rbp), %r13
100028876:	4c 89 e9	movq	%r13, %rcx
100028879:	45 31 c0	xorl	%r8d, %r8d
10002887c:	ff 15 9e 43 01 00	callq	*82846(%rip) ## Objc message: -[%rdi applyFilterToImage:filter:imageScaleFilter:]
100028882:	48 89 c3	movq	%rax, %rbx
100028885:	be 01 00 00 00	movl	$1, %esi
10002888a:	b9 08 00 00 00	movl	$8, %ecx
10002888f:	48 89 c7	movq	%rax, %rdi
100028892:	31 d2	xorl	%edx, %edx
100028894:	4c 8b 45 d0	movq	-48(%rbp), %r8
100028898:	4c 8b 7d c8	movq	-56(%rbp), %r15
10002889c:	4d 89 f9	movq	%r15, %r9
10002889f:	e8 ae 68 00 00	callq	0x10002f152 ## symbol stub for: _CGImageGetData
1000288a4:	48 89 5d d0	movq	%rbx, -48(%rbp)
1000288a8:	48 89 df	movq	%rbx, %rdi
1000288ab:	e8 7e 68 00 00	callq	0x10002f12e ## symbol stub for: _CGImageGetAlphaInfo
1000288b0:	ff c8	decl	%eax
1000288b2:	83 f8 03	cmpl	$3, %eax
1000288b5:	4c 8b 65 c0	movq	-64(%rbp), %r12
1000288b9:	77 43	ja	0x1000288fe
1000288bb:	48 8d 0d 9a 00 00 00	leaq	154(%rip), %rcx
1000288c2:	48 63 14 81	movslq	(%rcx,%rax,4), %rdx
1000288c6:	48 01 ca	addq	%rcx, %rdx
1000288c9:	4c 89 f8	movq	%r15, %rax
1000288cc:	ff e2	jmpq	*%rdx
1000288ce:	4c 89 f8	movq	%r15, %rax
1000288d1:	48 ff c0	incq	%rax
1000288d4:	4d 85 e4	testq	%r12, %r12
1000288d7:	74 25	je	0x1000288fe
1000288d9:	31 c9	xorl	%ecx, %ecx
1000288db:	4c 89 fa	movq	%r15, %rdx
1000288de:	48 ff c0	incq	%rax
1000288e1:	be 03 00 00 00	movl	$3, %esi
1000288e6:	8a 58 ff	movb	-1(%rax), %bl
1000288e9:	88 1a	movb	%bl, (%rdx)
1000288eb:	48 ff c2	incq	%rdx
1000288ee:	48 ff c0	incq	%rax
1000288f1:	48 ff ce	decq	%rsi
1000288f4:	75 f0	jne	0x1000288e6
1000288f6:	48 ff c1	incq	%rcx
1000288f9:	4c 39 e1	cmpq	%r12, %rcx
1000288fc:	75 e0	jne	0x1000288de
1000288fe:	48 8b 7d d0	movq	-48(%rbp), %rdi
100028902:	e8 45 68 00 00	callq	0x10002f14c ## symbol stub for: _CGImageGetColorSpace
100028907:	49 ff cc	decq	%r12
10002890a:	48 89 c7	movq	%rax, %rdi
10002890d:	4c 89 e6	movq	%r12, %rsi
100028910:	4c 89 fa	movq	%r15, %rdx
100028913:	e8 c6 66 00 00	callq	0x10002efde ## symbol stub for: _CGColorSpaceCreateIndexed
100028918:	4d 89 fc	movq	%r15, %r12
10002891b:	49 89 c7	movq	%rax, %r15
10002891e:	4c 89 f7	movq	%r14, %rdi
100028921:	48 8b 35 e8 86 02 00	movq	165608(%rip), %rsi ## Objc selector ref: currentImage
100028928:	ff 15 f2 42 01 00	callq	*82674(%rip) ## Objc message: -[%rdi currentImage]
10002892e:	48 89 c7	movq	%rax, %rdi
100028931:	4c 89 fe	movq	%r15, %rsi
100028934:	e8 d1 67 00 00	callq	0x10002f10a ## symbol stub for: _CGImageCreateCopyWithColorSpace
100028939:	48 89 c3	movq	%rax, %rbx
10002893c:	48 8b 7d d0	movq	-48(%rbp), %rdi
100028940:	e8 43 68 00 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
100028945:	4c 89 ff	movq	%r15, %rdi
100028948:	e8 e5 66 00 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10002894d:	4c 89 e7	movq	%r12, %rdi
100028950:	e8 7f 6a 00 00	callq	0x10002f3d4 ## symbol stub for: _free
100028955:	e9 f9 fd ff ff	jmp	0x100028753
10002895a:	66 90	nop
78 ff ff ff	.long 4294967160	@ KIND_JUMP_TABLE32
72 ff ff ff	.long 4294967154	@ KIND_JUMP_TABLE32
78 ff ff ff	.long 4294967160	@ KIND_JUMP_TABLE32
72 ff ff ff	.long 4294967154	@ KIND_JUMP_TABLE32
10002896c:	55	pushq	%rbp
10002896d:	48 89 e5	movq	%rsp, %rbp
100028970:	41 57	pushq	%r15
100028972:	41 56	pushq	%r14
100028974:	41 55	pushq	%r13
100028976:	41 54	pushq	%r12
100028978:	53	pushq	%rbx
100028979:	48 83 ec 18	subq	$24, %rsp
10002897d:	48 8d 05 74 a4 02 00	leaq	173172(%rip), %rax
100028984:	48 8b 00	movq	(%rax), %rax
100028987:	48 89 45 c8	movq	%rax, -56(%rbp)
10002898b:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
100028990:	0f 84 8e 00 00 00	je	0x100028a24
100028996:	49 89 fc	movq	%rdi, %r12
100028999:	4c 8b 2d 20 ae 02 00	movq	175648(%rip), %r13
1000289a0:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
1000289a4:	e8 a9 64 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
1000289a9:	48 89 45 d0	movq	%rax, -48(%rbp)
1000289ad:	48 85 c0	testq	%rax, %rax
1000289b0:	7e 52	jle	0x100028a04
1000289b2:	4c 8b 3d 1f 9a 02 00	movq	170527(%rip), %r15 ## Objc selector ref: toneMappedImage
1000289b9:	31 db	xorl	%ebx, %ebx
1000289bb:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000289bf:	48 89 de	movq	%rbx, %rsi
1000289c2:	e8 97 64 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
1000289c7:	48 8b 45 c8	movq	-56(%rbp), %rax
1000289cb:	49 8b 3c 04	movq	(%r12,%rax), %rdi
1000289cf:	4c 89 fe	movq	%r15, %rsi
1000289d2:	ff 15 48 42 01 00	callq	*82504(%rip) ## Objc message: -[%rdi toneMappedImage]
1000289d8:	48 85 c0	testq	%rax, %rax
1000289db:	74 1e	je	0x1000289fb
1000289dd:	49 89 c6	movq	%rax, %r14
1000289e0:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000289e4:	48 89 de	movq	%rbx, %rsi
1000289e7:	e8 7e 64 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
1000289ec:	4b 8b 3c 2c	movq	(%r12,%r13), %rdi
1000289f0:	48 89 de	movq	%rbx, %rsi
1000289f3:	4c 89 f2	movq	%r14, %rdx
1000289f6:	e8 69 64 00 00	callq	0x10002ee64 ## symbol stub for: _CFArrayInsertValueAtIndex
1000289fb:	48 ff c3	incq	%rbx
1000289fe:	48 39 5d d0	cmpq	%rbx, -48(%rbp)
100028a02:	75 b7	jne	0x1000289bb
100028a04:	48 8b 35 9d 90 02 00	movq	168093(%rip), %rsi ## Objc selector ref: releaseToneMapping:
100028a0b:	4c 89 e7	movq	%r12, %rdi
100028a0e:	31 d2	xorl	%edx, %edx
100028a10:	48 83 c4 18	addq	$24, %rsp
100028a14:	5b	popq	%rbx
100028a15:	41 5c	popq	%r12
100028a17:	41 5d	popq	%r13
100028a19:	41 5e	popq	%r14
100028a1b:	41 5f	popq	%r15
100028a1d:	5d	popq	%rbp
100028a1e:	ff 25 fc 41 01 00	jmpq	*82428(%rip) ## Objc message: -[%rdi releaseToneMapping:]
100028a24:	48 83 c4 18	addq	$24, %rsp
100028a28:	5b	popq	%rbx
100028a29:	41 5c	popq	%r12
100028a2b:	41 5d	popq	%r13
100028a2d:	41 5e	popq	%r14
100028a2f:	41 5f	popq	%r15
100028a31:	5d	popq	%rbp
100028a32:	c3	retq
100028a33:	55	pushq	%rbp
100028a34:	48 89 e5	movq	%rsp, %rbp
100028a37:	48 8b 0d 8a ad 02 00	movq	175498(%rip), %rcx
100028a3e:	31 c0	xorl	%eax, %eax
100028a40:	83 3c 0f 03	cmpl	$3, (%rdi,%rcx)
100028a44:	0f 94 c0	sete	%al
100028a47:	5d	popq	%rbp
100028a48:	c3	retq
100028a49:	55	pushq	%rbp
100028a4a:	48 89 e5	movq	%rsp, %rbp
100028a4d:	41 57	pushq	%r15
100028a4f:	41 56	pushq	%r14
100028a51:	41 55	pushq	%r13
100028a53:	41 54	pushq	%r12
100028a55:	53	pushq	%rbx
100028a56:	48 83 ec 38	subq	$56, %rsp
100028a5a:	48 89 cb	movq	%rcx, %rbx
100028a5d:	41 89 d6	movl	%edx, %r14d
100028a60:	49 89 ff	movq	%rdi, %r15
100028a63:	48 83 f9 02	cmpq	$2, %rcx
100028a67:	75 21	jne	0x100028a8a
100028a69:	48 8b 05 00 3f 01 00	movq	81664(%rip), %rax ## literal pool symbol address: _kCFAllocatorDefault
100028a70:	48 8b 38	movq	(%rax), %rdi
100028a73:	4c 8b 2d 46 ad 02 00	movq	175430(%rip), %r13
100028a7a:	4b 8b 14 2f	movq	(%r15,%r13), %rdx
100028a7e:	31 f6	xorl	%esi, %esi
100028a80:	e8 c7 63 00 00	callq	0x10002ee4c ## symbol stub for: _CFArrayCreateMutableCopy
100028a85:	49 89 c4	movq	%rax, %r12
100028a88:	eb 0b	jmp	0x100028a95
100028a8a:	4c 8b 2d 2f ad 02 00	movq	175407(%rip), %r13
100028a91:	4f 8b 24 2f	movq	(%r15,%r13), %r12
100028a95:	4d 85 e4	testq	%r12, %r12
100028a98:	0f 84 77 01 00 00	je	0x100028c15
100028a9e:	48 8d 05 53 a3 02 00	leaq	172883(%rip), %rax
100028aa5:	48 8b 00	movq	(%rax), %rax
100028aa8:	48 89 45 d0	movq	%rax, -48(%rbp)
100028aac:	49 83 3c 07 00	cmpq	$0, (%r15,%rax)
100028ab1:	4c 89 7d b0	movq	%r15, -80(%rbp)
100028ab5:	4c 89 6d b8	movq	%r13, -72(%rbp)
100028ab9:	48 89 5d c0	movq	%rbx, -64(%rbp)
100028abd:	4c 89 75 c8	movq	%r14, -56(%rbp)
100028ac1:	0f 84 8a 00 00 00	je	0x100028b51
100028ac7:	4c 89 e7	movq	%r12, %rdi
100028aca:	e8 83 63 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100028acf:	48 85 c0	testq	%rax, %rax
100028ad2:	7e 59	jle	0x100028b2d
100028ad4:	49 89 c5	movq	%rax, %r13
100028ad7:	48 8b 1d 0a 85 02 00	movq	165130(%rip), %rbx ## Objc selector ref: createToneMappedImage:
100028ade:	45 31 f6	xorl	%r14d, %r14d
100028ae1:	4c 89 e7	movq	%r12, %rdi
100028ae4:	4c 89 f6	movq	%r14, %rsi
100028ae7:	e8 72 63 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100028aec:	48 8b 4d d0	movq	-48(%rbp), %rcx
100028af0:	49 8b 3c 0f	movq	(%r15,%rcx), %rdi
100028af4:	48 89 de	movq	%rbx, %rsi
100028af7:	48 89 c2	movq	%rax, %rdx
100028afa:	ff 15 20 41 01 00	callq	*82208(%rip) ## Objc message: -[%rdi createToneMappedImage:]
100028b00:	48 85 c0	testq	%rax, %rax
100028b03:	74 1c	je	0x100028b21
100028b05:	49 89 c7	movq	%rax, %r15
100028b08:	4c 89 e7	movq	%r12, %rdi
100028b0b:	4c 89 f6	movq	%r14, %rsi
100028b0e:	e8 57 63 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
100028b13:	4c 89 e7	movq	%r12, %rdi
100028b16:	4c 89 f6	movq	%r14, %rsi
100028b19:	4c 89 fa	movq	%r15, %rdx
100028b1c:	e8 43 63 00 00	callq	0x10002ee64 ## symbol stub for: _CFArrayInsertValueAtIndex
100028b21:	49 ff c6	incq	%r14
100028b24:	4d 39 f5	cmpq	%r14, %r13
100028b27:	4c 8b 7d b0	movq	-80(%rbp), %r15
100028b2b:	75 b4	jne	0x100028ae1
100028b2d:	48 8b 5d c0	movq	-64(%rbp), %rbx
100028b31:	48 83 fb 01	cmpq	$1, %rbx
100028b35:	4c 8b 6d b8	movq	-72(%rbp), %r13
100028b39:	4c 8b 75 c8	movq	-56(%rbp), %r14
100028b3d:	75 12	jne	0x100028b51
100028b3f:	48 8b 35 62 8f 02 00	movq	167778(%rip), %rsi ## Objc selector ref: releaseToneMapping:
100028b46:	4c 89 ff	movq	%r15, %rdi
100028b49:	31 d2	xorl	%edx, %edx
100028b4b:	ff 15 cf 40 01 00	callq	*82127(%rip) ## Objc message: -[%rdi releaseToneMapping:]
100028b51:	48 8d 05 98 a2 02 00	leaq	172696(%rip), %rax
100028b58:	48 8b 00	movq	(%rax), %rax
100028b5b:	48 89 45 a8	movq	%rax, -88(%rbp)
100028b5f:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100028b63:	48 85 ff	testq	%rdi, %rdi
100028b66:	0f 84 a9 00 00 00	je	0x100028c15
100028b6c:	48 8b 35 ad 80 02 00	movq	164013(%rip), %rsi ## Objc selector ref: active
100028b73:	ff 15 a7 40 01 00	callq	*82087(%rip) ## Objc message: -[%rdi active]
100028b79:	84 c0	testb	%al, %al
100028b7b:	0f 84 94 00 00 00	je	0x100028c15
100028b81:	4c 89 e7	movq	%r12, %rdi
100028b84:	e8 c9 62 00 00	callq	0x10002ee52 ## symbol stub for: _CFArrayGetCount
100028b89:	48 89 45 d0	movq	%rax, -48(%rbp)
100028b8d:	48 85 c0	testq	%rax, %rax
100028b90:	7e 5c	jle	0x100028bee
100028b92:	48 8d 05 7f a2 02 00	leaq	172671(%rip), %rax
100028b99:	4c 8b 28	movq	(%rax), %r13
100028b9c:	4c 8b 35 35 84 02 00	movq	164917(%rip), %r14 ## Objc selector ref: createCIFilteredImage:
100028ba3:	31 db	xorl	%ebx, %ebx
100028ba5:	4c 89 e7	movq	%r12, %rdi
100028ba8:	48 89 de	movq	%rbx, %rsi
100028bab:	e8 ae 62 00 00	callq	0x10002ee5e ## symbol stub for: _CFArrayGetValueAtIndex
100028bb0:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100028bb4:	4c 89 f6	movq	%r14, %rsi
100028bb7:	48 89 c2	movq	%rax, %rdx
100028bba:	ff 15 60 40 01 00	callq	*82016(%rip) ## Objc message: -[%rdi createCIFilteredImage:]
100028bc0:	48 85 c0	testq	%rax, %rax
100028bc3:	74 1c	je	0x100028be1
100028bc5:	49 89 c7	movq	%rax, %r15
100028bc8:	4c 89 e7	movq	%r12, %rdi
100028bcb:	48 89 de	movq	%rbx, %rsi
100028bce:	e8 97 62 00 00	callq	0x10002ee6a ## symbol stub for: _CFArrayRemoveValueAtIndex
100028bd3:	4c 89 e7	movq	%r12, %rdi
100028bd6:	48 89 de	movq	%rbx, %rsi
100028bd9:	4c 89 fa	movq	%r15, %rdx
100028bdc:	e8 83 62 00 00	callq	0x10002ee64 ## symbol stub for: _CFArrayInsertValueAtIndex
100028be1:	48 ff c3	incq	%rbx
100028be4:	48 39 5d d0	cmpq	%rbx, -48(%rbp)
100028be8:	4c 8b 7d b0	movq	-80(%rbp), %r15
100028bec:	75 b7	jne	0x100028ba5
100028bee:	48 8b 5d c0	movq	-64(%rbp), %rbx
100028bf2:	48 83 fb 01	cmpq	$1, %rbx
100028bf6:	4c 8b 6d b8	movq	-72(%rbp), %r13
100028bfa:	4c 8b 75 c8	movq	-56(%rbp), %r14
100028bfe:	75 15	jne	0x100028c15
100028c00:	48 8b 45 a8	movq	-88(%rbp), %rax
100028c04:	49 8b 3c 07	movq	(%r15,%rax), %rdi
100028c08:	48 8b 35 81 82 02 00	movq	164481(%rip), %rsi ## Objc selector ref: close
100028c0f:	ff 15 0b 40 01 00	callq	*81931(%rip) ## Objc message: -[%rdi close]
100028c15:	41 8d 46 fe	leal	-2(%r14), %eax
100028c19:	83 f8 02	cmpl	$2, %eax
100028c1c:	73 12	jae	0x100028c30
100028c1e:	4d 85 e4	testq	%r12, %r12
100028c21:	74 2b	je	0x100028c4e
100028c23:	4c 89 e7	movq	%r12, %rdi
100028c26:	e8 ed 62 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100028c2b:	4d 89 e6	movq	%r12, %r14
100028c2e:	eb 21	jmp	0x100028c51
100028c30:	41 83 fe 01	cmpl	$1, %r14d
100028c34:	75 18	jne	0x100028c4e
100028c36:	48 8b 35 3b 83 02 00	movq	164667(%rip), %rsi ## Objc selector ref: convertImageArrayToPDFDoc:
100028c3d:	4c 89 ff	movq	%r15, %rdi
100028c40:	4c 89 e2	movq	%r12, %rdx
100028c43:	ff 15 d7 3f 01 00	callq	*81879(%rip) ## Objc message: -[%rdi convertImageArrayToPDFDoc:]
100028c49:	49 89 c6	movq	%rax, %r14
100028c4c:	eb 03	jmp	0x100028c51
100028c4e:	45 31 f6	xorl	%r14d, %r14d
100028c51:	48 83 fb 02	cmpq	$2, %rbx
100028c55:	75 08	jne	0x100028c5f
100028c57:	4f 3b 24 2f	cmpq	(%r15,%r13), %r12
100028c5b:	75 2e	jne	0x100028c8b
100028c5d:	eb 34	jmp	0x100028c93
100028c5f:	48 83 fb 01	cmpq	$1, %rbx
100028c63:	75 2e	jne	0x100028c93
100028c65:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
100028c69:	48 85 ff	testq	%rdi, %rdi
100028c6c:	74 25	je	0x100028c93
100028c6e:	e8 a5 62 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100028c73:	4b 8b 14 2f	movq	(%r15,%r13), %rdx
100028c77:	48 8b 35 32 92 02 00	movq	168498(%rip), %rsi ## Objc selector ref: setImageArray:
100028c7e:	4c 89 ff	movq	%r15, %rdi
100028c81:	ff 15 99 3f 01 00	callq	*81817(%rip) ## Objc message: -[%rdi setImageArray:]
100028c87:	4f 8b 24 2f	movq	(%r15,%r13), %r12
100028c8b:	4c 89 e7	movq	%r12, %rdi
100028c8e:	e8 7f 62 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100028c93:	4c 89 f0	movq	%r14, %rax
100028c96:	48 83 c4 38	addq	$56, %rsp
100028c9a:	5b	popq	%rbx
100028c9b:	41 5c	popq	%r12
100028c9d:	41 5d	popq	%r13
100028c9f:	41 5e	popq	%r14
100028ca1:	41 5f	popq	%r15
100028ca3:	5d	popq	%rbp
100028ca4:	c3	retq
100028ca5:	55	pushq	%rbp
100028ca6:	48 89 e5	movq	%rsp, %rbp
100028ca9:	48 8b 35 90 98 02 00	movq	170128(%rip), %rsi ## Objc selector ref: writeImageArrayToURL:imagearray:metadata:
100028cb0:	5d	popq	%rbp
100028cb1:	ff 25 69 3f 01 00	jmpq	*81769(%rip) ## Objc message: -[%rdi writeImageArrayToURL:imagearray:metadata:]
100028cb7:	55	pushq	%rbp
100028cb8:	48 89 e5	movq	%rsp, %rbp
100028cbb:	53	pushq	%rbx
100028cbc:	48 83 ec 18	subq	$24, %rsp
100028cc0:	48 8b 35 49 83 02 00	movq	164681(%rip), %rsi ## Objc selector ref: currentImage
100028cc7:	ff 15 53 3f 01 00	callq	*81747(%rip) ## Objc message: -[%rdi currentImage]
100028ccd:	48 89 c3	movq	%rax, %rbx
100028cd0:	48 89 c7	movq	%rax, %rdi
100028cd3:	e8 a4 64 00 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
100028cd8:	66 48 0f 6e c0	movq	%rax, %xmm0
100028cdd:	66 0f 62 05 2b f9 00 00	punpckldq	63787(%rip), %xmm0
100028ce5:	66 0f 5c 05 33 f9 00 00	subpd	63795(%rip), %xmm0
100028ced:	66 0f 7c c0	haddpd	%xmm0, %xmm0
100028cf1:	66 0f 29 45 e0	movapd	%xmm0, -32(%rbp)
100028cf6:	48 89 df	movq	%rbx, %rdi
100028cf9:	e8 60 64 00 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
100028cfe:	66 48 0f 6e c8	movq	%rax, %xmm1
100028d03:	66 0f 62 0d 05 f9 00 00	punpckldq	63749(%rip), %xmm1
100028d0b:	66 0f 5c 0d 0d f9 00 00	subpd	63757(%rip), %xmm1
100028d13:	66 0f 7c c9	haddpd	%xmm1, %xmm1
100028d17:	0f 28 45 e0	movaps	-32(%rbp), %xmm0
100028d1b:	48 83 c4 18	addq	$24, %rsp
100028d1f:	5b	popq	%rbx
100028d20:	5d	popq	%rbp
100028d21:	c3	retq
100028d22:	55	pushq	%rbp
100028d23:	48 89 e5	movq	%rsp, %rbp
100028d26:	41 57	pushq	%r15
100028d28:	41 56	pushq	%r14
100028d2a:	41 54	pushq	%r12
100028d2c:	53	pushq	%rbx
100028d2d:	49 89 ff	movq	%rdi, %r15
100028d30:	e8 e7 63 00 00	callq	0x10002f11c ## symbol stub for: _CGImageDestinationCopyTypeIdentifiers
100028d35:	48 89 c7	movq	%rax, %rdi
100028d38:	e8 8d 67 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
100028d3d:	48 89 c3	movq	%rax, %rbx
100028d40:	4c 8b 35 c1 84 02 00	movq	165057(%rip), %r14 ## Objc selector ref: fileType
100028d47:	4c 8b 25 d2 3e 01 00	movq	81618(%rip), %r12 ## Objc message: -[%rdi fileType]
100028d4e:	4c 89 ff	movq	%r15, %rdi
100028d51:	4c 89 f6	movq	%r14, %rsi
100028d54:	41 ff d4	callq	*%r12
100028d57:	48 8b 35 7a 86 02 00	movq	165498(%rip), %rsi ## Objc selector ref: indexOfObject:
100028d5e:	48 89 df	movq	%rbx, %rdi
100028d61:	48 89 c2	movq	%rax, %rdx
100028d64:	41 ff d4	callq	*%r12
100028d67:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
100028d71:	48 39 c8	cmpq	%rcx, %rax
100028d74:	75 13	jne	0x100028d89
100028d76:	48 8b 05 13 3a 01 00	movq	80403(%rip), %rax ## literal pool symbol address: _UTTypeTIFF
100028d7d:	48 8b 00	movq	(%rax), %rax
100028d80:	5b	popq	%rbx
100028d81:	41 5c	popq	%r12
100028d83:	41 5e	popq	%r14
100028d85:	41 5f	popq	%r15
100028d87:	5d	popq	%rbp
100028d88:	c3	retq
100028d89:	4c 89 ff	movq	%r15, %rdi
100028d8c:	4c 89 f6	movq	%r14, %rsi
100028d8f:	5b	popq	%rbx
100028d90:	41 5c	popq	%r12
100028d92:	41 5e	popq	%r14
100028d94:	41 5f	popq	%r15
100028d96:	5d	popq	%rbp
100028d97:	ff 25 83 3e 01 00	jmpq	*81539(%rip) ## Objc message: -[%rdi indexOfObject:]
100028d9d:	55	pushq	%rbp
100028d9e:	48 89 e5	movq	%rsp, %rbp
100028da1:	48 8b 05 08 98 02 00	movq	169992(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSArray
100028da8:	48 8b 0d 11 aa 02 00	movq	174609(%rip), %rcx
100028daf:	48 8b 14 0f	movq	(%rdi,%rcx), %rdx
100028db3:	48 8b 35 6e 7f 02 00	movq	163694(%rip), %rsi ## Objc selector ref: arrayWithArray:
100028dba:	48 89 c7	movq	%rax, %rdi
100028dbd:	5d	popq	%rbp
100028dbe:	ff 25 5c 3e 01 00	jmpq	*81500(%rip) ## Objc message: +[NSArray arrayWithArray:]
100028dc4:	55	pushq	%rbp
100028dc5:	48 89 e5	movq	%rsp, %rbp
100028dc8:	41 57	pushq	%r15
100028dca:	41 56	pushq	%r14
100028dcc:	41 54	pushq	%r12
100028dce:	53	pushq	%rbx
100028dcf:	48 81 ec 80 00 00 00	subq	$128, %rsp
100028dd6:	49 89 fe	movq	%rdi, %r14
100028dd9:	48 8b 05 38 3a 01 00	movq	80440(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
100028de0:	48 8b 00	movq	(%rax), %rax
100028de3:	48 89 45 d8	movq	%rax, -40(%rbp)
100028de7:	48 8b 35 f2 96 02 00	movq	169714(%rip), %rsi ## Objc selector ref: wholeDocument
100028dee:	ff 15 2c 3e 01 00	callq	*81452(%rip) ## Objc message: -[%rdi wholeDocument]
100028df4:	48 85 c0	testq	%rax, %rax
100028df7:	74 19	je	0x100028e12
100028df9:	48 8d 0d a0 6a 01 00	leaq	92832(%rip), %rcx ## Objc cfstring ref: @"ImageArray"
100028e00:	48 89 4d a0	movq	%rcx, -96(%rbp)
100028e04:	48 89 85 60 ff ff ff	movq	%rax, -160(%rbp)
100028e0b:	bb 01 00 00 00	movl	$1, %ebx
100028e10:	eb 02	jmp	0x100028e14
100028e12:	31 db	xorl	%ebx, %ebx
100028e14:	48 8d 05 3d a0 02 00	leaq	172093(%rip), %rax
100028e1b:	4c 8b 20	movq	(%rax), %r12
100028e1e:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
100028e22:	4c 8b 3d 0f 8e 02 00	movq	167439(%rip), %r15 ## Objc selector ref: selectedItem
100028e29:	4c 89 fe	movq	%r15, %rsi
100028e2c:	ff 15 ee 3d 01 00	callq	*81390(%rip) ## Objc message: -[%rdi selectedItem]
100028e32:	48 85 c0	testq	%rax, %rax
100028e35:	74 24	je	0x100028e5b
100028e37:	48 8d 05 22 53 01 00	leaq	86818(%rip), %rax ## Objc cfstring ref: @"ProfileMode"
100028e3e:	48 89 44 dd a0	movq	%rax, -96(%rbp,%rbx,8)
100028e43:	4b 8b 3c 26	movq	(%r14,%r12), %rdi
100028e47:	4c 89 fe	movq	%r15, %rsi
100028e4a:	ff 15 d0 3d 01 00	callq	*81360(%rip) ## Objc message: -[%rdi selectedItem]
100028e50:	48 89 84 dd 60 ff ff ff	movq	%rax, -160(%rbp,%rbx,8)
100028e58:	48 ff c3	incq	%rbx
100028e5b:	48 8d 05 76 a0 02 00	leaq	172150(%rip), %rax
100028e62:	48 8b 00	movq	(%rax), %rax
100028e65:	49 8b 04 06	movq	(%r14,%rax), %rax
100028e69:	48 85 c0	testq	%rax, %rax
100028e6c:	74 17	je	0x100028e85
100028e6e:	48 8d 0d 0b 53 01 00	leaq	86795(%rip), %rcx ## Objc cfstring ref: @"Profile"
100028e75:	48 89 4c dd a0	movq	%rcx, -96(%rbp,%rbx,8)
100028e7a:	48 89 84 dd 60 ff ff ff	movq	%rax, -160(%rbp,%rbx,8)
100028e82:	48 ff c3	incq	%rbx
100028e85:	48 8d 05 34 9f 02 00	leaq	171828(%rip), %rax
100028e8c:	48 8b 00	movq	(%rax), %rax
100028e8f:	49 8b 04 06	movq	(%r14,%rax), %rax
100028e93:	48 85 c0	testq	%rax, %rax
100028e96:	74 17	je	0x100028eaf
100028e98:	48 8d 0d 21 52 01 00	leaq	86561(%rip), %rcx ## Objc cfstring ref: @"Filter"
100028e9f:	48 89 4c dd a0	movq	%rcx, -96(%rbp,%rbx,8)
100028ea4:	48 89 84 dd 60 ff ff ff	movq	%rax, -160(%rbp,%rbx,8)
100028eac:	48 ff c3	incq	%rbx
100028eaf:	48 8d 05 42 9f 02 00	leaq	171842(%rip), %rax
100028eb6:	48 8b 00	movq	(%rax), %rax
100028eb9:	49 8b 3c 06	movq	(%r14,%rax), %rdi
100028ebd:	48 85 ff	testq	%rdi, %rdi
100028ec0:	74 24	je	0x100028ee6
100028ec2:	48 8d 05 d7 44 01 00	leaq	83159(%rip), %rax ## Objc cfstring ref: @"ToneMapping"
100028ec9:	48 89 44 dd a0	movq	%rax, -96(%rbp,%rbx,8)
100028ece:	48 8b 35 ab 93 02 00	movq	168875(%rip), %rsi ## Objc selector ref: sliderValues
100028ed5:	ff 15 45 3d 01 00	callq	*81221(%rip) ## Objc message: -[%rdi sliderValues]
100028edb:	48 89 84 dd 60 ff ff ff	movq	%rax, -160(%rbp,%rbx,8)
100028ee3:	48 ff c3	incq	%rbx
100028ee6:	48 8d 05 d3 69 01 00	leaq	92627(%rip), %rax ## Objc cfstring ref: @"Intent"
100028eed:	48 89 44 dd a0	movq	%rax, -96(%rbp,%rbx,8)
100028ef2:	48 8b 3d f7 96 02 00	movq	169719(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100028ef9:	48 8d 05 70 9f 02 00	leaq	171888(%rip), %rax
100028f00:	48 8b 00	movq	(%rax), %rax
100028f03:	41 8b 14 06	movl	(%r14,%rax), %edx
100028f07:	48 8b 35 12 89 02 00	movq	166162(%rip), %rsi ## Objc selector ref: numberWithInt:
100028f0e:	4c 8b 3d 0b 3d 01 00	movq	81163(%rip), %r15 ## Objc message: +[NSNumber numberWithInt:]
100028f15:	41 ff d7	callq	*%r15
100028f18:	48 89 84 dd 60 ff ff ff	movq	%rax, -160(%rbp,%rbx,8)
100028f20:	48 8d 05 b9 69 01 00	leaq	92601(%rip), %rax ## Objc cfstring ref: @"BPC"
100028f27:	48 89 44 dd a8	movq	%rax, -88(%rbp,%rbx,8)
100028f2c:	48 8b 3d bd 96 02 00	movq	169661(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
100028f33:	48 8d 05 d6 9f 02 00	leaq	171990(%rip), %rax
100028f3a:	48 8b 00	movq	(%rax), %rax
100028f3d:	41 0f be 14 06	movsbl	(%r14,%rax), %edx
100028f42:	48 8b 35 bf 88 02 00	movq	166079(%rip), %rsi ## Objc selector ref: numberWithBool:
100028f49:	41 ff d7	callq	*%r15
100028f4c:	48 89 84 dd 68 ff ff ff	movq	%rax, -152(%rbp,%rbx,8)
100028f54:	48 83 c3 02	addq	$2, %rbx
100028f58:	48 8b 3d b9 96 02 00	movq	169657(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSDictionary
100028f5f:	48 8b 35 4a 81 02 00	movq	164170(%rip), %rsi ## Objc selector ref: dictionaryWithObjects:forKeys:count:
100028f66:	48 8d 95 60 ff ff ff	leaq	-160(%rbp), %rdx
100028f6d:	48 8d 4d a0	leaq	-96(%rbp), %rcx
100028f71:	49 89 d8	movq	%rbx, %r8
100028f74:	41 ff d7	callq	*%r15
100028f77:	48 8b 0d 9a 38 01 00	movq	80026(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
100028f7e:	48 8b 09	movq	(%rcx), %rcx
100028f81:	48 3b 4d d8	cmpq	-40(%rbp), %rcx
100028f85:	75 10	jne	0x100028f97
100028f87:	48 81 c4 80 00 00 00	addq	$128, %rsp
100028f8e:	5b	popq	%rbx
100028f8f:	41 5c	popq	%r12
100028f91:	41 5e	popq	%r14
100028f93:	41 5f	popq	%r15
100028f95:	5d	popq	%rbp
100028f96:	c3	retq
100028f97:	e8 14 64 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
100028f9c:	55	pushq	%rbp
100028f9d:	48 89 e5	movq	%rsp, %rbp
100028fa0:	48 8b 35 09 8f 02 00	movq	167689(%rip), %rsi ## Objc selector ref: setImageArray:
100028fa7:	5d	popq	%rbp
100028fa8:	ff 25 72 3c 01 00	jmpq	*81010(%rip) ## Objc message: +[NSDictionary setImageArray:]
100028fae:	55	pushq	%rbp
100028faf:	48 89 e5	movq	%rsp, %rbp
100028fb2:	41 57	pushq	%r15
100028fb4:	41 56	pushq	%r14
100028fb6:	41 55	pushq	%r13
100028fb8:	41 54	pushq	%r12
100028fba:	53	pushq	%rbx
100028fbb:	48 83 ec 48	subq	$72, %rsp
100028fbf:	48 89 d3	movq	%rdx, %rbx
100028fc2:	49 89 ff	movq	%rdi, %r15
100028fc5:	4c 8b 35 ac 88 02 00	movq	166060(%rip), %r14 ## Objc selector ref: objectForKey:
100028fcc:	48 8d 15 cd 68 01 00	leaq	92365(%rip), %rdx ## Objc cfstring ref: @"ImageArray"
100028fd3:	4c 8b 25 46 3c 01 00	movq	80966(%rip), %r12 ## Objc message: -[%rdi objectForKey:]
100028fda:	48 89 df	movq	%rbx, %rdi
100028fdd:	4c 89 f6	movq	%r14, %rsi
100028fe0:	41 ff d4	callq	*%r12
100028fe3:	49 89 c5	movq	%rax, %r13
100028fe6:	48 8d 15 73 51 01 00	leaq	86387(%rip), %rdx ## Objc cfstring ref: @"ProfileMode"
100028fed:	48 89 df	movq	%rbx, %rdi
100028ff0:	4c 89 f6	movq	%r14, %rsi
100028ff3:	41 ff d4	callq	*%r12
100028ff6:	48 89 45 b8	movq	%rax, -72(%rbp)
100028ffa:	48 8d 15 7f 51 01 00	leaq	86399(%rip), %rdx ## Objc cfstring ref: @"Profile"
100029001:	48 89 df	movq	%rbx, %rdi
100029004:	4c 89 f6	movq	%r14, %rsi
100029007:	41 ff d4	callq	*%r12
10002900a:	48 89 45 c0	movq	%rax, -64(%rbp)
10002900e:	48 8d 15 ab 50 01 00	leaq	86187(%rip), %rdx ## Objc cfstring ref: @"Filter"
100029015:	48 89 df	movq	%rbx, %rdi
100029018:	4c 89 f6	movq	%r14, %rsi
10002901b:	41 ff d4	callq	*%r12
10002901e:	48 89 45 c8	movq	%rax, -56(%rbp)
100029022:	48 8d 15 97 68 01 00	leaq	92311(%rip), %rdx ## Objc cfstring ref: @"Intent"
100029029:	48 89 df	movq	%rbx, %rdi
10002902c:	4c 89 f6	movq	%r14, %rsi
10002902f:	41 ff d4	callq	*%r12
100029032:	48 85 c0	testq	%rax, %rax
100029035:	74 15	je	0x10002904c
100029037:	48 8b 35 d2 84 02 00	movq	165074(%rip), %rsi ## Objc selector ref: intValue
10002903e:	48 89 c7	movq	%rax, %rdi
100029041:	ff 15 d9 3b 01 00	callq	*80857(%rip) ## Objc message: -[%rdi intValue]
100029047:	89 45 d4	movl	%eax, -44(%rbp)
10002904a:	eb 07	jmp	0x100029053
10002904c:	c7 45 d4 00 00 00 00	movl	$0, -44(%rbp)
100029053:	48 8d 15 86 68 01 00	leaq	92294(%rip), %rdx ## Objc cfstring ref: @"BPC"
10002905a:	48 89 df	movq	%rbx, %rdi
10002905d:	4c 89 f6	movq	%r14, %rsi
100029060:	ff 15 ba 3b 01 00	callq	*80826(%rip) ## Objc message: -[%rdi intValue]
100029066:	48 85 c0	testq	%rax, %rax
100029069:	4c 89 6d b0	movq	%r13, -80(%rbp)
10002906d:	74 15	je	0x100029084
10002906f:	48 8b 35 52 7d 02 00	movq	163154(%rip), %rsi ## Objc selector ref: boolValue
100029076:	48 89 c7	movq	%rax, %rdi
100029079:	ff 15 a1 3b 01 00	callq	*80801(%rip) ## Objc message: -[%rdi boolValue]
10002907f:	41 89 c5	movl	%eax, %r13d
100029082:	eb 03	jmp	0x100029087
100029084:	45 31 ed	xorl	%r13d, %r13d
100029087:	48 8d 15 12 43 01 00	leaq	82706(%rip), %rdx ## Objc cfstring ref: @"ToneMapping"
10002908e:	48 89 df	movq	%rbx, %rdi
100029091:	4c 89 f6	movq	%r14, %rsi
100029094:	ff 15 86 3b 01 00	callq	*80774(%rip) ## Objc message: -[%rdi boolValue]
10002909a:	49 89 c6	movq	%rax, %r14
10002909d:	48 85 c0	testq	%rax, %rax
1000290a0:	75 31	jne	0x1000290d3
1000290a2:	48 8d 05 4f 9d 02 00	leaq	171343(%rip), %rax
1000290a9:	48 8b 00	movq	(%rax), %rax
1000290ac:	49 83 3c 07 00	cmpq	$0, (%r15,%rax)
1000290b1:	74 20	je	0x1000290d3
1000290b3:	48 8d 7d 90	leaq	-112(%rbp), %rdi
1000290b7:	4c 89 3f	movq	%r15, (%rdi)
1000290ba:	48 8b 05 d7 97 02 00	movq	169943(%rip), %rax ## Objc class ref: FilterImageDoc
1000290c1:	48 89 47 08	movq	%rax, 8(%rdi)
1000290c5:	48 8b 35 dc 89 02 00	movq	166364(%rip), %rsi ## Objc selector ref: releaseToneMapping:
1000290cc:	31 d2	xorl	%edx, %edx
1000290ce:	e8 09 64 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] releaseToneMapping:]
1000290d3:	48 8b 35 76 8c 02 00	movq	167030(%rip), %rsi ## Objc selector ref: setCurrentFilter:
1000290da:	4c 89 ff	movq	%r15, %rdi
1000290dd:	48 8b 55 c8	movq	-56(%rbp), %rdx
1000290e1:	41 ff d4	callq	*%r12
1000290e4:	48 8d 05 6d 9d 02 00	leaq	171373(%rip), %rax
1000290eb:	48 8b 00	movq	(%rax), %rax
1000290ee:	49 8b 3c 07	movq	(%r15,%rax), %rdi
1000290f2:	48 8b 35 07 8b 02 00	movq	166663(%rip), %rsi ## Objc selector ref: selectItem:
1000290f9:	48 8b 55 b8	movq	-72(%rbp), %rdx
1000290fd:	41 ff d4	callq	*%r12
100029100:	48 8b 35 39 8f 02 00	movq	167737(%rip), %rsi ## Objc selector ref: setProfile:
100029107:	4c 89 ff	movq	%r15, %rdi
10002910a:	48 8b 55 c0	movq	-64(%rbp), %rdx
10002910e:	41 ff d4	callq	*%r12
100029111:	48 8d 05 f8 9d 02 00	leaq	171512(%rip), %rax
100029118:	48 8b 00	movq	(%rax), %rax
10002911b:	45 88 2c 07	movb	%r13b, (%r15,%rax)
10002911f:	48 8d 05 ba 9c 02 00	leaq	171194(%rip), %rax
100029126:	48 8b 00	movq	(%rax), %rax
100029129:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002912d:	48 63 5d d4	movslq	-44(%rbp), %rbx
100029131:	48 8b 35 d8 8a 02 00	movq	166616(%rip), %rsi ## Objc selector ref: selectItemWithTag:
100029138:	48 89 da	movq	%rbx, %rdx
10002913b:	41 ff d4	callq	*%r12
10002913e:	48 8b 35 c3 8d 02 00	movq	167363(%rip), %rsi ## Objc selector ref: setIntent:
100029145:	4c 89 ff	movq	%r15, %rdi
100029148:	89 da	movl	%ebx, %edx
10002914a:	41 ff d4	callq	*%r12
10002914d:	48 8b 35 1c 90 02 00	movq	167964(%rip), %rsi ## Objc selector ref: setWholeDocument:
100029154:	4c 89 ff	movq	%r15, %rdi
100029157:	48 8b 55 b0	movq	-80(%rbp), %rdx
10002915b:	41 ff d4	callq	*%r12
10002915e:	4d 85 f6	testq	%r14, %r14
100029161:	74 3c	je	0x10002919f
100029163:	48 8d 7d a0	leaq	-96(%rbp), %rdi
100029167:	4c 89 3f	movq	%r15, (%rdi)
10002916a:	48 8b 05 27 97 02 00	movq	169767(%rip), %rax ## Objc class ref: FilterImageDoc
100029171:	48 89 47 08	movq	%rax, 8(%rdi)
100029175:	48 8b 35 54 87 02 00	movq	165716(%rip), %rsi ## Objc selector ref: openToneMapping
10002917c:	e8 5b 63 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] openToneMapping]
100029181:	48 8d 05 70 9c 02 00	leaq	171120(%rip), %rax
100029188:	48 8b 00	movq	(%rax), %rax
10002918b:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002918f:	48 8b 35 42 8f 02 00	movq	167746(%rip), %rsi ## Objc selector ref: setSliders:
100029196:	4c 89 f2	movq	%r14, %rdx
100029199:	ff 15 81 3a 01 00	callq	*80513(%rip) ## Objc message: -[%rdi setSliders:]
10002919f:	48 83 c4 48	addq	$72, %rsp
1000291a3:	5b	popq	%rbx
1000291a4:	41 5c	popq	%r12
1000291a6:	41 5d	popq	%r13
1000291a8:	41 5e	popq	%r14
1000291aa:	41 5f	popq	%r15
1000291ac:	5d	popq	%rbp
1000291ad:	c3	retq
1000291ae:	55	pushq	%rbp
1000291af:	48 89 e5	movq	%rsp, %rbp
1000291b2:	41 57	pushq	%r15
1000291b4:	41 56	pushq	%r14
1000291b6:	41 55	pushq	%r13
1000291b8:	41 54	pushq	%r12
1000291ba:	53	pushq	%rbx
1000291bb:	48 83 ec 28	subq	$40, %rsp
1000291bf:	49 89 fc	movq	%rdi, %r12
1000291c2:	4c 8b 3d d7 87 02 00	movq	165847(%rip), %r15 ## Objc selector ref: printInfo
1000291c9:	48 8b 1d 50 3a 01 00	movq	80464(%rip), %rbx ## Objc message: -[%rdi printInfo]
1000291d0:	4c 89 fe	movq	%r15, %rsi
1000291d3:	ff d3	callq	*%rbx
1000291d5:	48 8b 35 a4 79 02 00	movq	162212(%rip), %rsi ## Objc selector ref: PMPrintSession
1000291dc:	48 89 c7	movq	%rax, %rdi
1000291df:	ff d3	callq	*%rbx
1000291e1:	49 89 c6	movq	%rax, %r14
1000291e4:	4c 89 e7	movq	%r12, %rdi
1000291e7:	4c 89 fe	movq	%r15, %rsi
1000291ea:	ff d3	callq	*%rbx
1000291ec:	48 8b 35 95 79 02 00	movq	162197(%rip), %rsi ## Objc selector ref: PMPrintSettings
1000291f3:	48 89 c7	movq	%rax, %rdi
1000291f6:	ff d3	callq	*%rbx
1000291f8:	49 89 c7	movq	%rax, %r15
1000291fb:	48 8d 5d b8	leaq	-72(%rbp), %rbx
1000291ff:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
100029206:	4c 89 f7	movq	%r14, %rdi
100029209:	48 89 de	movq	%rbx, %rsi
10002920c:	e8 3f 61 00 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
100029211:	48 8b 3b	movq	(%rbx), %rdi
100029214:	48 8d 75 c7	leaq	-57(%rbp), %rsi
100029218:	e8 0f 61 00 00	callq	0x10002f32c ## symbol stub for: _PMPrinterIsRemote
10002921d:	48 8b 3b	movq	(%rbx), %rdi
100029220:	48 8d 75 d6	leaq	-42(%rbp), %rsi
100029224:	e8 fd 60 00 00	callq	0x10002f326 ## symbol stub for: _PMPrinterIsPostScriptPrinter
100029229:	48 8b 3b	movq	(%rbx), %rdi
10002922c:	48 8d 35 4d 48 01 00	leaq	84045(%rip), %rsi ## Objc cfstring ref: @"AP_ApplicationColorMatching"
100029233:	48 8d 55 d7	leaq	-41(%rbp), %rdx
100029237:	e8 f6 60 00 00	callq	0x10002f332 ## symbol stub for: _PMPrinterSupportsMatchingMode
10002923c:	48 8b 1d 8d a5 02 00	movq	173453(%rip), %rbx
100029243:	49 8b 3c 1c	movq	(%r12,%rbx), %rdi
100029247:	48 85 ff	testq	%rdi, %rdi
10002924a:	74 05	je	0x100029251
10002924c:	e8 c1 5c 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
100029251:	49 c7 04 1c 00 00 00 00	movq	$0, (%r12,%rbx)
100029259:	31 db	xorl	%ebx, %ebx
10002925b:	48 83 7d b8 00	cmpq	$0, -72(%rbp)
100029260:	0f 84 3c 01 00 00	je	0x1000293a2
100029266:	80 7d d7 00	cmpb	$0, -41(%rbp)
10002926a:	0f 84 32 01 00 00	je	0x1000293a2
100029270:	48 c7 45 c8 00 00 00 00	movq	$0, -56(%rbp)
100029278:	48 8d 05 51 9b 02 00	leaq	170833(%rip), %rax
10002927f:	48 8b 00	movq	(%rax), %rax
100029282:	49 8b 3c 04	movq	(%r12,%rax), %rdi
100029286:	48 85 ff	testq	%rdi, %rdi
100029289:	74 16	je	0x1000292a1
10002928b:	48 8b 35 16 87 02 00	movq	165654(%rip), %rsi ## Objc selector ref: printMode
100029292:	ff 15 88 39 01 00	callq	*80264(%rip) ## Objc message: -[%rdi printMode]
100029298:	41 b5 01	movb	$1, %r13b
10002929b:	48 83 f8 01	cmpq	$1, %rax
10002929f:	75 15	jne	0x1000292b6
1000292a1:	48 8d 15 d8 47 01 00	leaq	83928(%rip), %rdx ## Objc cfstring ref: @"AP_ApplicationColorMatching"
1000292a8:	4c 89 f7	movq	%r14, %rdi
1000292ab:	4c 89 fe	movq	%r15, %rsi
1000292ae:	e8 a9 60 00 00	callq	0x10002f35c ## symbol stub for: _PMSessionSetColorMatchingMode
1000292b3:	45 31 ed	xorl	%r13d, %r13d
1000292b6:	48 8d 5d c8	leaq	-56(%rbp), %rbx
1000292ba:	4c 89 f7	movq	%r14, %rdi
1000292bd:	4c 89 fe	movq	%r15, %rsi
1000292c0:	48 89 da	movq	%rbx, %rdx
1000292c3:	e8 70 60 00 00	callq	0x10002f338 ## symbol stub for: _PMSessionCopyApplicationOutputIntentWithColorSyncProfiles
1000292c8:	48 83 3b 00	cmpq	$0, (%rbx)
1000292cc:	75 0f	jne	0x1000292dd
1000292ce:	48 8d 55 c8	leaq	-56(%rbp), %rdx
1000292d2:	4c 89 f7	movq	%r14, %rdi
1000292d5:	4c 89 fe	movq	%r15, %rsi
1000292d8:	e8 67 60 00 00	callq	0x10002f344 ## symbol stub for: _PMSessionCopyDefaultOutputIntentWithColorSyncProfiles
1000292dd:	45 84 ed	testb	%r13b, %r13b
1000292e0:	75 12	jne	0x1000292f4
1000292e2:	48 8d 15 17 66 01 00	leaq	91671(%rip), %rdx ## Objc cfstring ref: @"AP_VendorColorMatching"
1000292e9:	4c 89 f7	movq	%r14, %rdi
1000292ec:	4c 89 fe	movq	%r15, %rsi
1000292ef:	e8 68 60 00 00	callq	0x10002f35c ## symbol stub for: _PMSessionSetColorMatchingMode
1000292f4:	48 8b 7d c8	movq	-56(%rbp), %rdi
1000292f8:	48 85 ff	testq	%rdi, %rdi
1000292fb:	48 8b 1d ce a4 02 00	movq	173262(%rip), %rbx
100029302:	74 56	je	0x10002935a
100029304:	48 8d 35 15 66 01 00	leaq	91669(%rip), %rsi ## Objc cfstring ref: @"PMSessionCMYKOutputIntent"
10002930b:	e8 a8 5b 00 00	callq	0x10002eeb8 ## symbol stub for: _CFDictionaryContainsKey
100029310:	84 c0	testb	%al, %al
100029312:	74 15	je	0x100029329
100029314:	48 8b 35 b5 7b 02 00	movq	162741(%rip), %rsi ## Objc selector ref: colorSpaceModel
10002931b:	4c 89 e7	movq	%r12, %rdi
10002931e:	ff 15 fc 38 01 00	callq	*80124(%rip) ## Objc message: -[%rdi colorSpaceModel]
100029324:	83 f8 02	cmpl	$2, %eax
100029327:	74 61	je	0x10002938a
100029329:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002932d:	48 8d 35 0c 66 01 00	leaq	91660(%rip), %rsi ## Objc cfstring ref: @"PMSessionRGBOutputIntent"
100029334:	e8 7f 5b 00 00	callq	0x10002eeb8 ## symbol stub for: _CFDictionaryContainsKey
100029339:	84 c0	testb	%al, %al
10002933b:	74 21	je	0x10002935e
10002933d:	48 8b 35 8c 7b 02 00	movq	162700(%rip), %rsi ## Objc selector ref: colorSpaceModel
100029344:	4c 89 e7	movq	%r12, %rdi
100029347:	ff 15 d3 38 01 00	callq	*80083(%rip) ## Objc message: -[%rdi colorSpaceModel]
10002934d:	83 f8 01	cmpl	$1, %eax
100029350:	75 0c	jne	0x10002935e
100029352:	80 7d d6 00	cmpb	$0, -42(%rbp)
100029356:	75 2e	jne	0x100029386
100029358:	eb 30	jmp	0x10002938a
10002935a:	31 db	xorl	%ebx, %ebx
10002935c:	eb 44	jmp	0x1000293a2
10002935e:	48 8b 7d c8	movq	-56(%rbp), %rdi
100029362:	48 8d 35 f7 65 01 00	leaq	91639(%rip), %rsi ## Objc cfstring ref: @"PMSessionGrayOutputIntent"
100029369:	e8 4a 5b 00 00	callq	0x10002eeb8 ## symbol stub for: _CFDictionaryContainsKey
10002936e:	84 c0	testb	%al, %al
100029370:	74 14	je	0x100029386
100029372:	48 8b 35 57 7b 02 00	movq	162647(%rip), %rsi ## Objc selector ref: colorSpaceModel
100029379:	4c 89 e7	movq	%r12, %rdi
10002937c:	ff 15 9e 38 01 00	callq	*80030(%rip) ## Objc message: -[%rdi colorSpaceModel]
100029382:	85 c0	testl	%eax, %eax
100029384:	74 04	je	0x10002938a
100029386:	31 db	xorl	%ebx, %ebx
100029388:	eb 0f	jmp	0x100029399
10002938a:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002938e:	e8 85 5b 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
100029393:	49 89 04 1c	movq	%rax, (%r12,%rbx)
100029397:	b3 01	movb	$1, %bl
100029399:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002939d:	e8 70 5b 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000293a2:	0f b6 c3	movzbl	%bl, %eax
1000293a5:	48 83 c4 28	addq	$40, %rsp
1000293a9:	5b	popq	%rbx
1000293aa:	41 5c	popq	%r12
1000293ac:	41 5d	popq	%r13
1000293ae:	41 5e	popq	%r14
1000293b0:	41 5f	popq	%r15
1000293b2:	5d	popq	%rbp
1000293b3:	c3	retq
1000293b4:	55	pushq	%rbp
1000293b5:	48 89 e5	movq	%rsp, %rbp
1000293b8:	48 8b 05 11 a4 02 00	movq	173073(%rip), %rax
1000293bf:	48 8b 04 07	movq	(%rdi,%rax), %rax
1000293c3:	5d	popq	%rbp
1000293c4:	c3	retq
1000293c5:	55	pushq	%rbp
1000293c6:	48 89 e5	movq	%rsp, %rbp
1000293c9:	41 57	pushq	%r15
1000293cb:	41 56	pushq	%r14
1000293cd:	41 55	pushq	%r13
1000293cf:	41 54	pushq	%r12
1000293d1:	53	pushq	%rbx
1000293d2:	48 83 ec 78	subq	$120, %rsp
1000293d6:	48 89 4d b8	movq	%rcx, -72(%rbp)
1000293da:	49 89 fe	movq	%rdi, %r14
1000293dd:	48 8b 35 bc 85 02 00	movq	165308(%rip), %rsi ## Objc selector ref: printInfo
1000293e4:	4c 8b 25 35 38 01 00	movq	79925(%rip), %r12 ## Objc message: -[%rdi printInfo]
1000293eb:	49 89 f7	movq	%rsi, %r15
1000293ee:	41 ff d4	callq	*%r12
1000293f1:	48 89 c3	movq	%rax, %rbx
1000293f4:	48 8b 35 45 85 02 00	movq	165189(%rip), %rsi ## Objc selector ref: paperSize
1000293fb:	48 89 c7	movq	%rax, %rdi
1000293fe:	41 ff d4	callq	*%r12
100029401:	0f 57 d2	xorps	%xmm2, %xmm2
100029404:	0f 29 55 90	movaps	%xmm2, -112(%rbp)
100029408:	f2 0f 11 45 a0	movsd	%xmm0, -96(%rbp)
10002940d:	f2 0f 11 4d a8	movsd	%xmm1, -88(%rbp)
100029412:	48 8b 35 1f 8d 02 00	movq	167199(%rip), %rsi ## Objc selector ref: setTopMargin:
100029419:	0f 57 c0	xorps	%xmm0, %xmm0
10002941c:	48 89 df	movq	%rbx, %rdi
10002941f:	41 ff d4	callq	*%r12
100029422:	48 8b 35 27 8b 02 00	movq	166695(%rip), %rsi ## Objc selector ref: setLeftMargin:
100029429:	0f 57 c0	xorps	%xmm0, %xmm0
10002942c:	48 89 df	movq	%rbx, %rdi
10002942f:	41 ff d4	callq	*%r12
100029432:	48 8b 35 b7 88 02 00	movq	166071(%rip), %rsi ## Objc selector ref: setBottomMargin:
100029439:	0f 57 c0	xorps	%xmm0, %xmm0
10002943c:	48 89 df	movq	%rbx, %rdi
10002943f:	41 ff d4	callq	*%r12
100029442:	48 8b 35 37 8c 02 00	movq	166967(%rip), %rsi ## Objc selector ref: setRightMargin:
100029449:	0f 57 c0	xorps	%xmm0, %xmm0
10002944c:	48 89 df	movq	%rbx, %rdi
10002944f:	41 ff d4	callq	*%r12
100029452:	48 8b 3d ef 92 02 00	movq	168687(%rip), %rdi ## Objc class ref: FilterImagePrintView
100029459:	e8 60 60 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
10002945e:	48 8b 35 f3 7f 02 00	movq	163827(%rip), %rsi ## Objc selector ref: initWithFrame:document:
100029465:	0f 28 45 90	movaps	-112(%rbp), %xmm0
100029469:	0f 28 4d a0	movaps	-96(%rbp), %xmm1
10002946d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
100029472:	0f 11 04 24	movups	%xmm0, (%rsp)
100029476:	48 89 c7	movq	%rax, %rdi
100029479:	4c 89 f2	movq	%r14, %rdx
10002947c:	41 ff d4	callq	*%r12
10002947f:	48 8b 3d 82 91 02 00	movq	168322(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
100029486:	48 8b 35 23 85 02 00	movq	165155(%rip), %rsi ## Objc selector ref: printOperationWithView:printInfo:
10002948d:	48 89 45 c0	movq	%rax, -64(%rbp)
100029491:	48 89 c2	movq	%rax, %rdx
100029494:	48 89 d9	movq	%rbx, %rcx
100029497:	41 ff d4	callq	*%r12
10002949a:	48 89 45 c8	movq	%rax, -56(%rbp)
10002949e:	48 89 c7	movq	%rax, %rdi
1000294a1:	4c 89 fe	movq	%r15, %rsi
1000294a4:	41 ff d4	callq	*%r12
1000294a7:	48 8b 35 7a 8b 02 00	movq	166778(%rip), %rsi ## Objc selector ref: setPrintInfo:
1000294ae:	4c 89 f7	movq	%r14, %rdi
1000294b1:	48 89 c2	movq	%rax, %rdx
1000294b4:	41 ff d4	callq	*%r12
1000294b7:	4c 89 f7	movq	%r14, %rdi
1000294ba:	4c 89 fe	movq	%r15, %rsi
1000294bd:	41 ff d4	callq	*%r12
1000294c0:	48 8b 35 b9 76 02 00	movq	161465(%rip), %rsi ## Objc selector ref: PMPrintSession
1000294c7:	48 89 c7	movq	%rax, %rdi
1000294ca:	41 ff d4	callq	*%r12
1000294cd:	48 8d 5d 88	leaq	-120(%rbp), %rbx
1000294d1:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
1000294d8:	48 89 c7	movq	%rax, %rdi
1000294db:	48 89 de	movq	%rbx, %rsi
1000294de:	e8 6d 5e 00 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
1000294e3:	48 8b 3b	movq	(%rbx), %rdi
1000294e6:	48 8d 35 93 45 01 00	leaq	83347(%rip), %rsi ## Objc cfstring ref: @"AP_ApplicationColorMatching"
1000294ed:	4c 8d 7d d7	leaq	-41(%rbp), %r15
1000294f1:	4c 89 fa	movq	%r15, %rdx
1000294f4:	e8 39 5e 00 00	callq	0x10002f332 ## symbol stub for: _PMPrinterSupportsMatchingMode
1000294f9:	48 83 3b 00	cmpq	$0, (%rbx)
1000294fd:	0f 95 c0	setne	%al
100029500:	41 80 3f 00	cmpb	$0, (%r15)
100029504:	0f 95 c3	setne	%bl
100029507:	20 c3	andb	%al, %bl
100029509:	48 8b 35 00 79 02 00	movq	162048(%rip), %rsi ## Objc selector ref: canBePrintingTarget
100029510:	4c 89 f7	movq	%r14, %rdi
100029513:	41 ff d4	callq	*%r12
100029516:	41 89 c7	movl	%eax, %r15d
100029519:	48 8b 3d 80 91 02 00	movq	168320(%rip), %rdi ## Objc class ref: FilterDocPDEController
100029520:	e8 99 5f 00 00	callq	0x10002f4be ## symbol stub for: _objc_alloc
100029525:	48 8b 35 1c 7f 02 00	movq	163612(%rip), %rsi ## Objc selector ref: initWithFilterDoc:enableColorMatching:enablePrintTarget:
10002952c:	45 0f be c7	movsbl	%r15b, %r8d
100029530:	44 0f b6 fb	movzbl	%bl, %r15d
100029534:	48 89 c7	movq	%rax, %rdi
100029537:	4c 89 f2	movq	%r14, %rdx
10002953a:	44 89 f9	movl	%r15d, %ecx
10002953d:	41 ff d4	callq	*%r12
100029540:	48 89 c3	movq	%rax, %rbx
100029543:	48 8d 05 86 98 02 00	leaq	170118(%rip), %rax
10002954a:	4c 8b 28	movq	(%rax), %r13
10002954d:	4b 89 1c 2e	movq	%rbx, (%r14,%r13)
100029551:	48 8b 7d c8	movq	-56(%rbp), %rdi
100029555:	48 8b 35 44 84 02 00	movq	164932(%rip), %rsi ## Objc selector ref: printInfo
10002955c:	41 ff d4	callq	*%r12
10002955f:	48 8b 35 12 8b 02 00	movq	166674(%rip), %rsi ## Objc selector ref: setRepresentedObject:
100029566:	48 89 df	movq	%rbx, %rdi
100029569:	48 89 c2	movq	%rax, %rdx
10002956c:	41 ff d4	callq	*%r12
10002956f:	41 80 ff 01	cmpb	$1, %r15b
100029573:	75 36	jne	0x1000295ab
100029575:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
100029579:	48 8b 35 b0 8a 02 00	movq	166576(%rip), %rsi ## Objc selector ref: setPrintMode:
100029580:	31 d2	xorl	%edx, %edx
100029582:	41 ff d4	callq	*%r12
100029585:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
100029589:	48 8b 35 78 89 02 00	movq	166264(%rip), %rsi ## Objc selector ref: setIntent:
100029590:	ba 01 00 00 00	movl	$1, %edx
100029595:	41 ff d4	callq	*%r12
100029598:	4b 8b 3c 2e	movq	(%r14,%r13), %rdi
10002959c:	48 8b 35 25 87 02 00	movq	165669(%rip), %rsi ## Objc selector ref: setBPC:
1000295a3:	ba 01 00 00 00	movl	$1, %edx
1000295a8:	41 ff d4	callq	*%r12
1000295ab:	48 8b 45 b8	movq	-72(%rbp), %rax
1000295af:	48 85 c0	testq	%rax, %rax
1000295b2:	74 07	je	0x1000295bb
1000295b4:	48 c7 00 00 00 00 00	movq	$0, (%rax)
1000295bb:	48 8b 7d c0	movq	-64(%rbp), %rdi
1000295bf:	ff 15 93 36 01 00	callq	*79507(%rip) ## literal pool symbol address: _objc_release
1000295c5:	48 8b 45 c8	movq	-56(%rbp), %rax
1000295c9:	48 83 c4 78	addq	$120, %rsp
1000295cd:	5b	popq	%rbx
1000295ce:	41 5c	popq	%r12
1000295d0:	41 5d	popq	%r13
1000295d2:	41 5e	popq	%r14
1000295d4:	41 5f	popq	%r15
1000295d6:	5d	popq	%rbp
1000295d7:	c3	retq
1000295d8:	55	pushq	%rbp
1000295d9:	48 89 e5	movq	%rsp, %rbp
1000295dc:	41 57	pushq	%r15
1000295de:	41 56	pushq	%r14
1000295e0:	41 55	pushq	%r13
1000295e2:	41 54	pushq	%r12
1000295e4:	53	pushq	%rbx
1000295e5:	48 83 ec 38	subq	$56, %rsp
1000295e9:	4c 89 45 c0	movq	%r8, -64(%rbp)
1000295ed:	48 89 4d c8	movq	%rcx, -56(%rbp)
1000295f1:	49 89 d4	movq	%rdx, %r12
1000295f4:	48 89 fb	movq	%rdi, %rbx
1000295f7:	48 89 7d b8	movq	%rdi, -72(%rbp)
1000295fb:	4c 89 4d d0	movq	%r9, -48(%rbp)
1000295ff:	4c 8b 2d b2 83 02 00	movq	164786(%rip), %r13 ## Objc selector ref: printPanel
100029606:	4c 8b 35 13 36 01 00	movq	79379(%rip), %r14 ## Objc message: +[FilterDocPDEController printPanel]
10002960d:	48 89 d7	movq	%rdx, %rdi
100029610:	4c 89 ee	movq	%r13, %rsi
100029613:	41 ff d6	callq	*%r14
100029616:	48 8b 35 cb 82 02 00	movq	164555(%rip), %rsi ## Objc selector ref: options
10002961d:	48 89 c7	movq	%rax, %rdi
100029620:	41 ff d6	callq	*%r14
100029623:	49 89 c7	movq	%rax, %r15
100029626:	49 83 cf 0c	orq	$12, %r15
10002962a:	4c 89 e7	movq	%r12, %rdi
10002962d:	4c 89 ee	movq	%r13, %rsi
100029630:	41 ff d6	callq	*%r14
100029633:	48 8b 0d 7e 30 01 00	movq	77950(%rip), %rcx ## literal pool symbol address: _NSPrintPhotoJobStyleHint
10002963a:	48 8b 11	movq	(%rcx), %rdx
10002963d:	48 8b 35 cc 88 02 00	movq	166092(%rip), %rsi ## Objc selector ref: setJobStyleHint:
100029644:	48 89 c7	movq	%rax, %rdi
100029647:	41 ff d6	callq	*%r14
10002964a:	4c 89 e7	movq	%r12, %rdi
10002964d:	4c 89 ee	movq	%r13, %rsi
100029650:	41 ff d6	callq	*%r14
100029653:	48 8b 35 9e 89 02 00	movq	166302(%rip), %rsi ## Objc selector ref: setOptions:
10002965a:	48 89 c7	movq	%rax, %rdi
10002965d:	4c 89 fa	movq	%r15, %rdx
100029660:	4c 8b 7d c0	movq	-64(%rbp), %r15
100029664:	41 ff d6	callq	*%r14
100029667:	4c 89 e7	movq	%r12, %rdi
10002966a:	4c 89 ee	movq	%r13, %rsi
10002966d:	41 ff d6	callq	*%r14
100029670:	48 8d 0d 59 97 02 00	leaq	169817(%rip), %rcx
100029677:	48 8b 09	movq	(%rcx), %rcx
10002967a:	48 8b 14 0b	movq	(%rbx,%rcx), %rdx
10002967e:	48 8b 35 a3 75 02 00	movq	161187(%rip), %rsi ## Objc selector ref: addAccessoryController:
100029685:	48 89 c7	movq	%rax, %rdi
100029688:	41 ff d6	callq	*%r14
10002968b:	4d 85 ff	testq	%r15, %r15
10002968e:	0f 84 8d 00 00 00	je	0x100029721
100029694:	48 8b 1d b5 90 02 00	movq	168117(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSInvocation
10002969b:	48 8b 35 b6 80 02 00	movq	164022(%rip), %rsi ## Objc selector ref: methodSignatureForSelector:
1000296a2:	4c 8b 6d c8	movq	-56(%rbp), %r13
1000296a6:	4c 89 ef	movq	%r13, %rdi
1000296a9:	4c 89 fa	movq	%r15, %rdx
1000296ac:	41 ff d6	callq	*%r14
1000296af:	48 8b 35 8a 7e 02 00	movq	163466(%rip), %rsi ## Objc selector ref: invocationWithMethodSignature:
1000296b6:	48 89 df	movq	%rbx, %rdi
1000296b9:	48 89 c2	movq	%rax, %rdx
1000296bc:	41 ff d6	callq	*%r14
1000296bf:	48 89 c3	movq	%rax, %rbx
1000296c2:	48 8b 35 37 8a 02 00	movq	166455(%rip), %rsi ## Objc selector ref: setTarget:
1000296c9:	48 89 c7	movq	%rax, %rdi
1000296cc:	4c 89 ea	movq	%r13, %rdx
1000296cf:	41 ff d6	callq	*%r14
1000296d2:	48 8b 35 e7 89 02 00	movq	166375(%rip), %rsi ## Objc selector ref: setSelector:
1000296d9:	48 89 df	movq	%rbx, %rdi
1000296dc:	4c 89 fa	movq	%r15, %rdx
1000296df:	41 ff d6	callq	*%r14
1000296e2:	4c 8b 2d b7 85 02 00	movq	165303(%rip), %r13 ## Objc selector ref: setArgument:atIndex:
1000296e9:	4c 8d 7d b8	leaq	-72(%rbp), %r15
1000296ed:	b9 02 00 00 00	movl	$2, %ecx
1000296f2:	48 89 df	movq	%rbx, %rdi
1000296f5:	4c 89 ee	movq	%r13, %rsi
1000296f8:	4c 89 fa	movq	%r15, %rdx
1000296fb:	41 ff d6	callq	*%r14
1000296fe:	48 8d 55 d0	leaq	-48(%rbp), %rdx
100029702:	b9 04 00 00 00	movl	$4, %ecx
100029707:	48 89 df	movq	%rbx, %rdi
10002970a:	4c 89 ee	movq	%r13, %rsi
10002970d:	41 ff d6	callq	*%r14
100029710:	48 89 df	movq	%rbx, %rdi
100029713:	ff 15 47 35 01 00	callq	*79175(%rip) ## literal pool symbol address: _objc_retain
100029719:	49 89 c1	movq	%rax, %r9
10002971c:	49 8b 1f	movq	(%r15), %rbx
10002971f:	eb 03	jmp	0x100029724
100029721:	45 31 c9	xorl	%r9d, %r9d
100029724:	4c 89 4d d0	movq	%r9, -48(%rbp)
100029728:	4c 8b 05 d1 79 02 00	movq	162257(%rip), %r8 ## Objc selector ref: documentDidRunModalPrintOperation:success:contextInfo:
10002972f:	48 8d 7d a8	leaq	-88(%rbp), %rdi
100029733:	48 89 1f	movq	%rbx, (%rdi)
100029736:	48 8b 05 5b 91 02 00	movq	168283(%rip), %rax ## Objc class ref: FilterImageDoc
10002973d:	48 89 47 08	movq	%rax, 8(%rdi)
100029741:	48 8b 35 28 84 02 00	movq	164904(%rip), %rsi ## Objc selector ref: runModalPrintOperation:delegate:didRunSelector:contextInfo:
100029748:	4c 89 e2	movq	%r12, %rdx
10002974b:	48 89 d9	movq	%rbx, %rcx
10002974e:	e8 89 5d 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] runModalPrintOperation:delegate:didRunSelector:contextInfo:]
100029753:	48 83 c4 38	addq	$56, %rsp
100029757:	5b	popq	%rbx
100029758:	41 5c	popq	%r12
10002975a:	41 5d	popq	%r13
10002975c:	41 5e	popq	%r14
10002975e:	41 5f	popq	%r15
100029760:	5d	popq	%rbp
100029761:	c3	retq
100029762:	55	pushq	%rbp
100029763:	48 89 e5	movq	%rsp, %rbp
100029766:	41 57	pushq	%r15
100029768:	41 56	pushq	%r14
10002976a:	53	pushq	%rbx
10002976b:	50	pushq	%rax
10002976c:	4d 89 c6	movq	%r8, %r14
10002976f:	48 89 fb	movq	%rdi, %rbx
100029772:	88 4d e7	movb	%cl, -25(%rbp)
100029775:	48 8d 05 54 96 02 00	leaq	169556(%rip), %rax
10002977c:	4c 8b 38	movq	(%rax), %r15
10002977f:	4a 8b 3c 3f	movq	(%rdi,%r15), %rdi
100029783:	ff 15 cf 34 01 00	callq	*79055(%rip) ## literal pool symbol address: _objc_release
100029789:	4a c7 04 3b 00 00 00 00	movq	$0, (%rbx,%r15)
100029791:	4c 8b 3d 38 a0 02 00	movq	172088(%rip), %r15
100029798:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002979c:	48 85 ff	testq	%rdi, %rdi
10002979f:	74 05	je	0x1000297a6
1000297a1:	e8 6c 57 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
1000297a6:	4a c7 04 3b 00 00 00 00	movq	$0, (%rbx,%r15)
1000297ae:	4d 85 f6	testq	%r14, %r14
1000297b1:	74 31	je	0x1000297e4
1000297b3:	48 8b 35 e6 84 02 00	movq	165094(%rip), %rsi ## Objc selector ref: setArgument:atIndex:
1000297ba:	48 8b 1d 5f 34 01 00	movq	78943(%rip), %rbx ## Objc message: -[%rdi setArgument:atIndex:]
1000297c1:	48 8d 55 e7	leaq	-25(%rbp), %rdx
1000297c5:	b9 03 00 00 00	movl	$3, %ecx
1000297ca:	4c 89 f7	movq	%r14, %rdi
1000297cd:	ff d3	callq	*%rbx
1000297cf:	48 8b 35 72 7d 02 00	movq	163186(%rip), %rsi ## Objc selector ref: invoke
1000297d6:	4c 89 f7	movq	%r14, %rdi
1000297d9:	ff d3	callq	*%rbx
1000297db:	4c 89 f7	movq	%r14, %rdi
1000297de:	ff 15 74 34 01 00	callq	*78964(%rip) ## literal pool symbol address: _objc_release
1000297e4:	48 83 c4 08	addq	$8, %rsp
1000297e8:	5b	popq	%rbx
1000297e9:	41 5e	popq	%r14
1000297eb:	41 5f	popq	%r15
1000297ed:	5d	popq	%rbp
1000297ee:	c3	retq
1000297ef:	55	pushq	%rbp
1000297f0:	48 89 e5	movq	%rsp, %rbp
1000297f3:	41 56	pushq	%r14
1000297f5:	53	pushq	%rbx
1000297f6:	48 83 ec 10	subq	$16, %rsp
1000297fa:	48 89 fb	movq	%rdi, %rbx
1000297fd:	48 8b 3d 0c 8e 02 00	movq	167436(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
100029804:	48 8b 35 4d 78 02 00	movq	161869(%rip), %rsi ## Objc selector ref: defaultCenter
10002980b:	4c 8b 35 0e 34 01 00	movq	78862(%rip), %r14 ## Objc message: +[NSNotificationCenter defaultCenter]
100029812:	41 ff d6	callq	*%r14
100029815:	48 8b 35 e4 82 02 00	movq	164580(%rip), %rsi ## Objc selector ref: removeObserver:
10002981c:	48 89 c7	movq	%rax, %rdi
10002981f:	48 89 da	movq	%rbx, %rdx
100029822:	41 ff d6	callq	*%r14
100029825:	48 8d 7d e0	leaq	-32(%rbp), %rdi
100029829:	48 89 1f	movq	%rbx, (%rdi)
10002982c:	48 8b 05 6d 90 02 00	movq	168045(%rip), %rax ## Objc class ref: FilterImageCorrection
100029833:	48 89 47 08	movq	%rax, 8(%rdi)
100029837:	48 8b 35 12 78 02 00	movq	161810(%rip), %rsi ## Objc selector ref: dealloc
10002983e:	e8 99 5c 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
100029843:	48 83 c4 10	addq	$16, %rsp
100029847:	5b	popq	%rbx
100029848:	41 5e	popq	%r14
10002984a:	5d	popq	%rbp
10002984b:	c3	retq
10002984c:	55	pushq	%rbp
10002984d:	48 89 e5	movq	%rsp, %rbp
100029850:	41 57	pushq	%r15
100029852:	41 56	pushq	%r14
100029854:	41 55	pushq	%r13
100029856:	41 54	pushq	%r12
100029858:	53	pushq	%rbx
100029859:	50	pushq	%rax
10002985a:	49 89 d7	movq	%rdx, %r15
10002985d:	48 89 fb	movq	%rdi, %rbx
100029860:	48 8b 05 71 9f 02 00	movq	171889(%rip), %rax
100029867:	c6 04 07 00	movb	$0, (%rdi,%rax)
10002986b:	4c 8b 35 9e 8c 02 00	movq	167070(%rip), %r14 ## Objc selector ref: window
100029872:	4c 89 f6	movq	%r14, %rsi
100029875:	ff 15 a5 33 01 00	callq	*78757(%rip) ## Objc message: -[%rdi window]
10002987b:	48 85 c0	testq	%rax, %rax
10002987e:	75 3e	jne	0x1000298be
100029880:	48 8b 3d 19 8d 02 00	movq	167193(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100029887:	48 8b 35 92 7d 02 00	movq	163218(%rip), %rsi ## Objc selector ref: loadNibNamed:owner:
10002988e:	4c 8d 25 eb 60 01 00	leaq	90347(%rip), %r12 ## Objc cfstring ref: @"ImageCorrection"
100029895:	4c 8b 2d 84 33 01 00	movq	78724(%rip), %r13 ## Objc message: +[NSBundle loadNibNamed:owner:]
10002989c:	4c 89 e2	movq	%r12, %rdx
10002989f:	48 89 d9	movq	%rbx, %rcx
1000298a2:	41 ff d5	callq	*%r13
1000298a5:	48 89 df	movq	%rbx, %rdi
1000298a8:	4c 89 f6	movq	%r14, %rsi
1000298ab:	41 ff d5	callq	*%r13
1000298ae:	48 8b 35 ab 85 02 00	movq	165291(%rip), %rsi ## Objc selector ref: setFrameAutosaveName:
1000298b5:	48 89 c7	movq	%rax, %rdi
1000298b8:	4c 89 e2	movq	%r12, %rdx
1000298bb:	41 ff d5	callq	*%r13
1000298be:	48 8b 35 2b 78 02 00	movq	161835(%rip), %rsi ## Objc selector ref: documentChanged:
1000298c5:	4c 8b 25 54 33 01 00	movq	78676(%rip), %r12 ## Objc message: -[%rdi documentChanged:]
1000298cc:	48 89 df	movq	%rbx, %rdi
1000298cf:	4c 89 fa	movq	%r15, %rdx
1000298d2:	41 ff d4	callq	*%r12
1000298d5:	48 89 df	movq	%rbx, %rdi
1000298d8:	4c 89 f6	movq	%r14, %rsi
1000298db:	41 ff d4	callq	*%r12
1000298de:	48 8b 35 0b 80 02 00	movq	163851(%rip), %rsi ## Objc selector ref: orderFront:
1000298e5:	48 89 c7	movq	%rax, %rdi
1000298e8:	48 89 da	movq	%rbx, %rdx
1000298eb:	4c 89 e0	movq	%r12, %rax
1000298ee:	48 83 c4 08	addq	$8, %rsp
1000298f2:	5b	popq	%rbx
1000298f3:	41 5c	popq	%r12
1000298f5:	41 5d	popq	%r13
1000298f7:	41 5e	popq	%r14
1000298f9:	41 5f	popq	%r15
1000298fb:	5d	popq	%rbp
1000298fc:	ff e0	jmpq	*%rax
1000298fe:	55	pushq	%rbp
1000298ff:	48 89 e5	movq	%rsp, %rbp
100029902:	53	pushq	%rbx
100029903:	50	pushq	%rax
100029904:	48 8b 35 05 8c 02 00	movq	166917(%rip), %rsi ## Objc selector ref: window
10002990b:	48 8b 1d 0e 33 01 00	movq	78606(%rip), %rbx ## Objc message: -[%rdi window]
100029912:	ff d3	callq	*%rbx
100029914:	48 8b 35 75 75 02 00	movq	161141(%rip), %rsi ## Objc selector ref: close
10002991b:	48 89 c7	movq	%rax, %rdi
10002991e:	48 89 d8	movq	%rbx, %rax
100029921:	48 83 c4 08	addq	$8, %rsp
100029925:	5b	popq	%rbx
100029926:	5d	popq	%rbp
100029927:	ff e0	jmpq	*%rax
100029929:	55	pushq	%rbp
10002992a:	48 89 e5	movq	%rsp, %rbp
10002992d:	41 57	pushq	%r15
10002992f:	41 56	pushq	%r14
100029931:	53	pushq	%rbx
100029932:	50	pushq	%rax
100029933:	48 8b 05 a6 9e 02 00	movq	171686(%rip), %rax
10002993a:	48 89 14 07	movq	%rdx, (%rdi,%rax)
10002993e:	48 85 d2	testq	%rdx, %rdx
100029941:	74 40	je	0x100029983
100029943:	48 89 d3	movq	%rdx, %rbx
100029946:	48 8b 35 c3 8b 02 00	movq	166851(%rip), %rsi ## Objc selector ref: window
10002994d:	4c 8b 3d cc 32 01 00	movq	78540(%rip), %r15 ## Objc message: -[%rdi window]
100029954:	41 ff d7	callq	*%r15
100029957:	49 89 c6	movq	%rax, %r14
10002995a:	48 8b 35 77 77 02 00	movq	161655(%rip), %rsi ## Objc selector ref: displayName
100029961:	48 89 df	movq	%rbx, %rdi
100029964:	41 ff d7	callq	*%r15
100029967:	48 8b 35 aa 87 02 00	movq	165802(%rip), %rsi ## Objc selector ref: setTitle:
10002996e:	4c 89 f7	movq	%r14, %rdi
100029971:	48 89 c2	movq	%rax, %rdx
100029974:	4c 89 f8	movq	%r15, %rax
100029977:	48 83 c4 08	addq	$8, %rsp
10002997b:	5b	popq	%rbx
10002997c:	41 5e	popq	%r14
10002997e:	41 5f	popq	%r15
100029980:	5d	popq	%rbp
100029981:	ff e0	jmpq	*%rax
100029983:	48 83 c4 08	addq	$8, %rsp
100029987:	5b	popq	%rbx
100029988:	41 5e	popq	%r14
10002998a:	41 5f	popq	%r15
10002998c:	5d	popq	%rbp
10002998d:	c3	retq
10002998e:	55	pushq	%rbp
10002998f:	48 89 e5	movq	%rsp, %rbp
100029992:	41 57	pushq	%r15
100029994:	41 56	pushq	%r14
100029996:	41 54	pushq	%r12
100029998:	53	pushq	%rbx
100029999:	48 8b 05 40 9e 02 00	movq	171584(%rip), %rax
1000299a0:	4c 8b 3c 07	movq	(%rdi,%rax), %r15
1000299a4:	4d 85 ff	testq	%r15, %r15
1000299a7:	0f 84 ca 00 00 00	je	0x100029a77
1000299ad:	48 89 fb	movq	%rdi, %rbx
1000299b0:	48 c7 04 07 00 00 00 00	movq	$0, (%rdi,%rax)
1000299b8:	4c 8b 35 69 8a 02 00	movq	166505(%rip), %r14 ## Objc selector ref: undoManager
1000299bf:	4c 8b 25 5a 32 01 00	movq	78426(%rip), %r12 ## Objc message: -[%rdi undoManager]
1000299c6:	4c 89 ff	movq	%r15, %rdi
1000299c9:	4c 89 f6	movq	%r14, %rsi
1000299cc:	41 ff d4	callq	*%r12
1000299cf:	48 8b 35 ea 80 02 00	movq	164074(%rip), %rsi ## Objc selector ref: removeAllActionsWithTarget:
1000299d6:	48 89 c7	movq	%rax, %rdi
1000299d9:	48 89 da	movq	%rbx, %rdx
1000299dc:	41 ff d4	callq	*%r12
1000299df:	48 8b 35 ba 80 02 00	movq	164026(%rip), %rsi ## Objc selector ref: releaseImageCorrection
1000299e6:	4c 89 ff	movq	%r15, %rdi
1000299e9:	41 ff d4	callq	*%r12
1000299ec:	4c 89 ff	movq	%r15, %rdi
1000299ef:	4c 89 f6	movq	%r14, %rsi
1000299f2:	41 ff d4	callq	*%r12
1000299f5:	48 8b 35 24 8a 02 00	movq	166436(%rip), %rsi ## Objc selector ref: undoActionName
1000299fc:	48 89 c7	movq	%rax, %rdi
1000299ff:	41 ff d4	callq	*%r12
100029a02:	48 85 c0	testq	%rax, %rax
100029a05:	74 58	je	0x100029a5f
100029a07:	48 8b 35 62 7b 02 00	movq	162658(%rip), %rsi ## Objc selector ref: isEqual:
100029a0e:	48 8d 15 8b 34 01 00	leaq	78987(%rip), %rdx ## Objc cfstring ref: @""
100029a15:	48 89 c7	movq	%rax, %rdi
100029a18:	ff 15 02 32 01 00	callq	*78338(%rip) ## Objc message: -[%rdi isEqual:]
100029a1e:	84 c0	testb	%al, %al
100029a20:	74 3d	je	0x100029a5f
100029a22:	4c 89 ff	movq	%r15, %rdi
100029a25:	4c 89 f6	movq	%r14, %rsi
100029a28:	41 ff d4	callq	*%r12
100029a2b:	48 8b 1d 86 80 02 00	movq	163974(%rip), %rbx ## Objc selector ref: removeAllActions
100029a32:	48 89 c7	movq	%rax, %rdi
100029a35:	48 89 de	movq	%rbx, %rsi
100029a38:	41 ff d4	callq	*%r12
100029a3b:	48 8b 35 f6 89 02 00	movq	166390(%rip), %rsi ## Objc selector ref: updateChangeCount:
100029a42:	ba 02 00 00 00	movl	$2, %edx
100029a47:	4c 89 ff	movq	%r15, %rdi
100029a4a:	41 ff d4	callq	*%r12
100029a4d:	4c 89 ff	movq	%r15, %rdi
100029a50:	4c 89 f6	movq	%r14, %rsi
100029a53:	41 ff d4	callq	*%r12
100029a56:	48 89 c7	movq	%rax, %rdi
100029a59:	48 89 de	movq	%rbx, %rsi
100029a5c:	41 ff d4	callq	*%r12
100029a5f:	48 8b 35 f2 89 02 00	movq	166386(%rip), %rsi ## Objc selector ref: updatePreview
100029a66:	4c 89 ff	movq	%r15, %rdi
100029a69:	5b	popq	%rbx
100029a6a:	41 5c	popq	%r12
100029a6c:	41 5e	popq	%r14
100029a6e:	41 5f	popq	%r15
100029a70:	5d	popq	%rbp
100029a71:	ff 25 a9 31 01 00	jmpq	*78249(%rip) ## Objc message: -[%rdi updatePreview]
100029a77:	5b	popq	%rbx
100029a78:	41 5c	popq	%r12
100029a7a:	41 5e	popq	%r14
100029a7c:	41 5f	popq	%r15
100029a7e:	5d	popq	%rbp
100029a7f:	c3	retq
100029a80:	55	pushq	%rbp
100029a81:	48 89 e5	movq	%rsp, %rbp
100029a84:	48 8b 05 55 9d 02 00	movq	171349(%rip), %rax
100029a8b:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100029a8f:	48 8b 35 92 89 02 00	movq	166290(%rip), %rsi ## Objc selector ref: undoManager
100029a96:	5d	popq	%rbp
100029a97:	ff 25 83 31 01 00	jmpq	*78211(%rip) ## Objc message: -[%rdi undoManager]
100029a9d:	55	pushq	%rbp
100029a9e:	48 89 e5	movq	%rsp, %rbp
100029aa1:	41 57	pushq	%r15
100029aa3:	41 56	pushq	%r14
100029aa5:	41 54	pushq	%r12
100029aa7:	53	pushq	%rbx
100029aa8:	48 89 fb	movq	%rdi, %rbx
100029aab:	48 8b 35 06 87 02 00	movq	165638(%rip), %rsi ## Objc selector ref: setupExposure
100029ab2:	4c 8b 25 67 31 01 00	movq	78183(%rip), %r12 ## Objc message: -[%rdi setupExposure]
100029ab9:	41 ff d4	callq	*%r12
100029abc:	48 8b 35 45 87 02 00	movq	165701(%rip), %rsi ## Objc selector ref: setupWhiteBlackPoint
100029ac3:	48 89 df	movq	%rbx, %rdi
100029ac6:	41 ff d4	callq	*%r12
100029ac9:	48 8b 35 f0 86 02 00	movq	165616(%rip), %rsi ## Objc selector ref: setupGamma
100029ad0:	48 89 df	movq	%rbx, %rdi
100029ad3:	41 ff d4	callq	*%r12
100029ad6:	48 8b 35 cb 86 02 00	movq	165579(%rip), %rsi ## Objc selector ref: setupColorControl
100029add:	48 89 df	movq	%rbx, %rdi
100029ae0:	41 ff d4	callq	*%r12
100029ae3:	48 8b 35 fe 86 02 00	movq	165630(%rip), %rsi ## Objc selector ref: setupSharpness
100029aea:	48 89 df	movq	%rbx, %rdi
100029aed:	41 ff d4	callq	*%r12
100029af0:	48 8b 35 e9 86 02 00	movq	165609(%rip), %rsi ## Objc selector ref: setupSepia
100029af7:	48 89 df	movq	%rbx, %rdi
100029afa:	41 ff d4	callq	*%r12
100029afd:	4c 8b 3d e4 9c 02 00	movq	171236(%rip), %r15
100029b04:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100029b08:	4c 8b 35 01 8a 02 00	movq	166401(%rip), %r14 ## Objc selector ref: window
100029b0f:	4c 89 f6	movq	%r14, %rsi
100029b12:	41 ff d4	callq	*%r12
100029b15:	48 8b 35 24 83 02 00	movq	164644(%rip), %rsi ## Objc selector ref: setFloatingPanel:
100029b1c:	48 89 c7	movq	%rax, %rdi
100029b1f:	ba 01 00 00 00	movl	$1, %edx
100029b24:	41 ff d4	callq	*%r12
100029b27:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100029b2b:	4c 89 f6	movq	%r14, %rsi
100029b2e:	41 ff d4	callq	*%r12
100029b31:	48 8b 35 98 81 02 00	movq	164248(%rip), %rsi ## Objc selector ref: setBecomesKeyOnlyIfNeeded:
100029b38:	48 89 c7	movq	%rax, %rdi
100029b3b:	ba 01 00 00 00	movl	$1, %edx
100029b40:	4c 89 e0	movq	%r12, %rax
100029b43:	5b	popq	%rbx
100029b44:	41 5c	popq	%r12
100029b46:	41 5e	popq	%r14
100029b48:	41 5f	popq	%r15
100029b4a:	5d	popq	%rbp
100029b4b:	ff e0	jmpq	*%rax
100029b4d:	55	pushq	%rbp
100029b4e:	48 89 e5	movq	%rsp, %rbp
100029b51:	48 8b 05 80 9c 02 00	movq	171136(%rip), %rax
100029b58:	0f be 04 07	movsbl	(%rdi,%rax), %eax
100029b5c:	5d	popq	%rbp
100029b5d:	c3	retq
100029b5e:	55	pushq	%rbp
100029b5f:	48 89 e5	movq	%rsp, %rbp
100029b62:	48 8b 05 6f 9c 02 00	movq	171119(%rip), %rax
100029b69:	c6 04 07 01	movb	$1, (%rdi,%rax)
100029b6d:	48 8b 05 6c 9c 02 00	movq	171116(%rip), %rax
100029b74:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
100029b78:	48 8b 35 61 75 02 00	movq	161121(%rip), %rsi ## Objc selector ref: displayPage
100029b7f:	5d	popq	%rbp
100029b80:	ff 25 9a 30 01 00	jmpq	*77978(%rip) ## Objc message: -[%rdi displayPage]
100029b86:	55	pushq	%rbp
100029b87:	48 89 e5	movq	%rsp, %rbp
100029b8a:	41 57	pushq	%r15
100029b8c:	41 56	pushq	%r14
100029b8e:	41 55	pushq	%r13
100029b90:	41 54	pushq	%r12
100029b92:	53	pushq	%rbx
100029b93:	50	pushq	%rax
100029b94:	48 89 fb	movq	%rdi, %rbx
100029b97:	4c 8b 35 3a 9c 02 00	movq	171066(%rip), %r14
100029b9e:	42 80 3c 37 00	cmpb	$0, (%rdi,%r14)
100029ba3:	4c 8b 3d 36 9c 02 00	movq	171062(%rip), %r15
100029baa:	0f 84 9b 00 00 00	je	0x100029c4b
100029bb0:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100029bb4:	4c 8b 35 6d 88 02 00	movq	165997(%rip), %r14 ## Objc selector ref: undoManager
100029bbb:	4c 8b 2d 5e 30 01 00	movq	77918(%rip), %r13 ## Objc message: -[%rdi undoManager]
100029bc2:	4c 89 f6	movq	%r14, %rsi
100029bc5:	41 ff d5	callq	*%r13
100029bc8:	4d 89 fc	movq	%r15, %r12
100029bcb:	49 89 c7	movq	%rax, %r15
100029bce:	48 8b 35 ab 86 02 00	movq	165547(%rip), %rsi ## Objc selector ref: sliderValues
100029bd5:	48 89 df	movq	%rbx, %rdi
100029bd8:	41 ff d5	callq	*%r13
100029bdb:	48 8b 35 ae 7e 02 00	movq	163502(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
100029be2:	4c 89 ff	movq	%r15, %rdi
100029be5:	4d 89 e7	movq	%r12, %r15
100029be8:	48 89 da	movq	%rbx, %rdx
100029beb:	48 8b 0d e6 84 02 00	movq	165094(%rip), %rcx ## Objc selector ref: setSliders:
100029bf2:	49 89 c0	movq	%rax, %r8
100029bf5:	41 ff d5	callq	*%r13
100029bf8:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
100029bfc:	4c 89 f6	movq	%r14, %rsi
100029bff:	41 ff d5	callq	*%r13
100029c02:	49 89 c6	movq	%rax, %r14
100029c05:	48 8b 3d 94 89 02 00	movq	166292(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
100029c0c:	48 8b 35 d5 7a 02 00	movq	162517(%rip), %rsi ## Objc selector ref: mainBundle
100029c13:	41 ff d5	callq	*%r13
100029c16:	48 8b 35 43 7a 02 00	movq	162371(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
100029c1d:	48 8d 15 3c 38 01 00	leaq	79932(%rip), %rdx ## Objc cfstring ref: @"Reset Sliders"
100029c24:	48 8d 0d 75 32 01 00	leaq	78453(%rip), %rcx ## Objc cfstring ref: @""
100029c2b:	48 89 c7	movq	%rax, %rdi
100029c2e:	45 31 c0	xorl	%r8d, %r8d
100029c31:	41 ff d5	callq	*%r13
100029c34:	48 8b 35 45 80 02 00	movq	163909(%rip), %rsi ## Objc selector ref: setActionName:
100029c3b:	4c 89 f7	movq	%r14, %rdi
100029c3e:	4c 8b 35 93 9b 02 00	movq	170899(%rip), %r14
100029c45:	48 89 c2	movq	%rax, %rdx
100029c48:	41 ff d5	callq	*%r13
100029c4b:	48 8b 35 66 85 02 00	movq	165222(%rip), %rsi ## Objc selector ref: setupExposure
100029c52:	4c 8b 25 c7 2f 01 00	movq	77767(%rip), %r12 ## Objc message: +[NSBundle setupExposure]
100029c59:	48 89 df	movq	%rbx, %rdi
100029c5c:	41 ff d4	callq	*%r12
100029c5f:	48 8b 35 a2 85 02 00	movq	165282(%rip), %rsi ## Objc selector ref: setupWhiteBlackPoint
100029c66:	48 89 df	movq	%rbx, %rdi
100029c69:	41 ff d4	callq	*%r12
100029c6c:	48 8b 35 4d 85 02 00	movq	165197(%rip), %rsi ## Objc selector ref: setupGamma
100029c73:	48 89 df	movq	%rbx, %rdi
100029c76:	41 ff d4	callq	*%r12
100029c79:	48 8b 35 28 85 02 00	movq	165160(%rip), %rsi ## Objc selector ref: setupColorControl
100029c80:	48 89 df	movq	%rbx, %rdi
100029c83:	41 ff d4	callq	*%r12
100029c86:	48 8b 35 5b 85 02 00	movq	165211(%rip), %rsi ## Objc selector ref: setupSharpness
100029c8d:	48 89 df	movq	%rbx, %rdi
100029c90:	41 ff d4	callq	*%r12
100029c93:	48 8b 35 46 85 02 00	movq	165190(%rip), %rsi ## Objc selector ref: setupSepia
100029c9a:	48 89 df	movq	%rbx, %rdi
100029c9d:	41 ff d4	callq	*%r12
100029ca0:	42 c6 04 33 00	movb	$0, (%rbx,%r14)
100029ca5:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
100029ca9:	48 8b 35 30 74 02 00	movq	160816(%rip), %rsi ## Objc selector ref: displayPage
100029cb0:	4c 89 e0	movq	%r12, %rax
100029cb3:	48 83 c4 08	addq	$8, %rsp
100029cb7:	5b	popq	%rbx
100029cb8:	41 5c	popq	%r12
100029cba:	41 5d	popq	%r13
100029cbc:	41 5e	popq	%r14
100029cbe:	41 5f	popq	%r15
100029cc0:	5d	popq	%rbp
100029cc1:	ff e0	jmpq	*%rax
100029cc3:	55	pushq	%rbp
100029cc4:	48 89 e5	movq	%rsp, %rbp
100029cc7:	41 57	pushq	%r15
100029cc9:	41 56	pushq	%r14
100029ccb:	41 55	pushq	%r13
100029ccd:	41 54	pushq	%r12
100029ccf:	53	pushq	%rbx
100029cd0:	50	pushq	%rax
100029cd1:	49 89 ff	movq	%rdi, %r15
100029cd4:	48 8b 3d a5 89 02 00	movq	166309(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
100029cdb:	48 8b 35 8e 75 02 00	movq	161166(%rip), %rsi ## Objc selector ref: filterWithName:
100029ce2:	48 8d 15 77 3a 01 00	leaq	80503(%rip), %rdx ## Objc cfstring ref: @"CIExposureAdjust"
100029ce9:	4c 8b 35 30 2f 01 00	movq	77616(%rip), %r14 ## Objc message: +[CIFilter filterWithName:]
100029cf0:	41 ff d6	callq	*%r14
100029cf3:	48 8b 35 5e 70 02 00	movq	159838(%rip), %rsi ## Objc selector ref: attributes
100029cfa:	48 89 c7	movq	%rax, %rdi
100029cfd:	41 ff d6	callq	*%r14
100029d00:	4c 8b 25 71 7b 02 00	movq	162673(%rip), %r12 ## Objc selector ref: objectForKey:
100029d07:	48 8d 15 32 3b 01 00	leaq	80690(%rip), %rdx ## Objc cfstring ref: @"inputEV"
100029d0e:	48 89 c7	movq	%rax, %rdi
100029d11:	4c 89 e6	movq	%r12, %rsi
100029d14:	41 ff d6	callq	*%r14
100029d17:	48 89 c3	movq	%rax, %rbx
100029d1a:	48 8b 05 cf 9a 02 00	movq	170703(%rip), %rax
100029d21:	4d 8b 2c 07	movq	(%r15,%rax), %r13
100029d25:	48 8d 15 74 5c 01 00	leaq	89204(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
100029d2c:	48 89 df	movq	%rbx, %rdi
100029d2f:	4c 89 e6	movq	%r12, %rsi
100029d32:	41 ff d6	callq	*%r14
100029d35:	4c 8b 25 d4 73 02 00	movq	160724(%rip), %r12 ## Objc selector ref: doubleValue
100029d3c:	48 89 c7	movq	%rax, %rdi
100029d3f:	4c 89 e6	movq	%r12, %rsi
100029d42:	41 ff d6	callq	*%r14
100029d45:	48 8b 35 6c 82 02 00	movq	164460(%rip), %rsi ## Objc selector ref: setMinValue:
100029d4c:	4c 89 ef	movq	%r13, %rdi
100029d4f:	41 ff d6	callq	*%r14
100029d52:	48 8b 05 97 9a 02 00	movq	170647(%rip), %rax
100029d59:	4d 8b 2c 07	movq	(%r15,%rax), %r13
100029d5d:	48 8d 15 5c 5c 01 00	leaq	89180(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
100029d64:	48 89 df	movq	%rbx, %rdi
100029d67:	48 8b 35 0a 7b 02 00	movq	162570(%rip), %rsi ## Objc selector ref: objectForKey:
100029d6e:	41 ff d6	callq	*%r14
100029d71:	48 89 c7	movq	%rax, %rdi
100029d74:	4c 89 e6	movq	%r12, %rsi
100029d77:	41 ff d6	callq	*%r14
100029d7a:	48 8b 35 17 82 02 00	movq	164375(%rip), %rsi ## Objc selector ref: setMaxValue:
100029d81:	4c 89 ef	movq	%r13, %rdi
100029d84:	41 ff d6	callq	*%r14
100029d87:	48 8b 05 62 9a 02 00	movq	170594(%rip), %rax
100029d8e:	4d 8b 2c 07	movq	(%r15,%rax), %r13
100029d92:	4c 8d 25 47 5c 01 00	leaq	89159(%rip), %r12 ## Objc cfstring ref: @"CIAttributeIdentity"
100029d99:	48 89 df	movq	%rbx, %rdi
100029d9c:	48 8b 35 d5 7a 02 00	movq	162517(%rip), %rsi ## Objc selector ref: objectForKey:
100029da3:	4c 89 e2	movq	%r12, %rdx
100029da6:	41 ff d6	callq	*%r14
100029da9:	48 89 c7	movq	%rax, %rdi
100029dac:	48 8b 35 5d 73 02 00	movq	160605(%rip), %rsi ## Objc selector ref: doubleValue
100029db3:	41 ff d6	callq	*%r14
100029db6:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
100029dba:	48 8b 35 77 80 02 00	movq	163959(%rip), %rsi ## Objc selector ref: setFloatValue:
100029dc1:	4c 89 ef	movq	%r13, %rdi
100029dc4:	41 ff d6	callq	*%r14
100029dc7:	48 89 df	movq	%rbx, %rdi
100029dca:	48 8b 35 a7 7a 02 00	movq	162471(%rip), %rsi ## Objc selector ref: objectForKey:
100029dd1:	4c 89 e2	movq	%r12, %rdx
100029dd4:	41 ff d6	callq	*%r14
100029dd7:	48 89 c7	movq	%rax, %rdi
100029dda:	ff 15 80 2e 01 00	callq	*77440(%rip) ## literal pool symbol address: _objc_retain
100029de0:	48 8b 0d 11 9a 02 00	movq	170513(%rip), %rcx
100029de7:	49 89 04 0f	movq	%rax, (%r15,%rcx)
100029deb:	48 83 c4 08	addq	$8, %rsp
100029def:	5b	popq	%rbx
100029df0:	41 5c	popq	%r12
100029df2:	41 5d	popq	%r13
100029df4:	41 5e	popq	%r14
100029df6:	41 5f	popq	%r15
100029df8:	5d	popq	%rbp
100029df9:	c3	retq
100029dfa:	55	pushq	%rbp
100029dfb:	48 89 e5	movq	%rsp, %rbp
100029dfe:	41 56	pushq	%r14
100029e00:	53	pushq	%rbx
100029e01:	48 89 fb	movq	%rdi, %rbx
100029e04:	48 8b 35 e5 73 02 00	movq	160741(%rip), %rsi ## Objc selector ref: exposure
100029e0b:	4c 8b 35 0e 2e 01 00	movq	77326(%rip), %r14 ## Objc message: -[%rdi exposure]
100029e12:	41 ff d6	callq	*%r14
100029e15:	48 8b 35 dc 7f 02 00	movq	163804(%rip), %rsi ## Objc selector ref: setExposure:
100029e1c:	48 89 df	movq	%rbx, %rdi
100029e1f:	48 89 c2	movq	%rax, %rdx
100029e22:	4c 89 f0	movq	%r14, %rax
100029e25:	5b	popq	%rbx
100029e26:	41 5e	popq	%r14
100029e28:	5d	popq	%rbp
100029e29:	ff e0	jmpq	*%rax
100029e2b:	55	pushq	%rbp
100029e2c:	48 89 e5	movq	%rsp, %rbp
100029e2f:	41 57	pushq	%r15
100029e31:	41 56	pushq	%r14
100029e33:	41 55	pushq	%r13
100029e35:	41 54	pushq	%r12
100029e37:	53	pushq	%rbx
100029e38:	48 83 ec 18	subq	$24, %rsp
100029e3c:	49 89 fd	movq	%rdi, %r13
100029e3f:	48 8b 3d 3a 88 02 00	movq	165946(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
100029e46:	48 8b 35 23 74 02 00	movq	160803(%rip), %rsi ## Objc selector ref: filterWithName:
100029e4d:	48 8d 15 2c 39 01 00	leaq	80172(%rip), %rdx ## Objc cfstring ref: @"CIWhitePoint"
100029e54:	4c 8b 35 c5 2d 01 00	movq	77253(%rip), %r14 ## Objc message: +[CIFilter filterWithName:]
100029e5b:	41 ff d6	callq	*%r14
100029e5e:	48 8b 35 f3 6e 02 00	movq	159475(%rip), %rsi ## Objc selector ref: attributes
100029e65:	48 89 c7	movq	%rax, %rdi
100029e68:	41 ff d6	callq	*%r14
100029e6b:	49 89 c7	movq	%rax, %r15
100029e6e:	48 8b 1d 03 7a 02 00	movq	162307(%rip), %rbx ## Objc selector ref: objectForKey:
100029e75:	48 8d 15 e4 39 01 00	leaq	80356(%rip), %rdx ## Objc cfstring ref: @"inputWhitePoint"
100029e7c:	48 89 c7	movq	%rax, %rdi
100029e7f:	48 89 de	movq	%rbx, %rsi
100029e82:	41 ff d6	callq	*%r14
100029e85:	48 8d 15 74 5b 01 00	leaq	88948(%rip), %rdx ## Objc cfstring ref: @"CIAttributeDefault"
100029e8c:	48 89 c7	movq	%rax, %rdi
100029e8f:	48 89 de	movq	%rbx, %rsi
100029e92:	41 ff d6	callq	*%r14
100029e95:	48 89 c3	movq	%rax, %rbx
100029e98:	4c 8b 25 81 87 02 00	movq	165761(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSColor
100029e9f:	48 8b 35 b2 7b 02 00	movq	162738(%rip), %rsi ## Objc selector ref: red
100029ea6:	48 89 c7	movq	%rax, %rdi
100029ea9:	41 ff d6	callq	*%r14
100029eac:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
100029eb1:	48 8b 35 38 74 02 00	movq	160824(%rip), %rsi ## Objc selector ref: green
100029eb8:	48 89 df	movq	%rbx, %rdi
100029ebb:	41 ff d6	callq	*%r14
100029ebe:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100029ec3:	48 8b 35 de 6e 02 00	movq	159454(%rip), %rsi ## Objc selector ref: blue
100029eca:	48 89 df	movq	%rbx, %rdi
100029ecd:	41 ff d6	callq	*%r14
100029ed0:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100029ed5:	48 8b 35 f4 6d 02 00	movq	159220(%rip), %rsi ## Objc selector ref: alpha
100029edc:	48 89 df	movq	%rbx, %rdi
100029edf:	41 ff d6	callq	*%r14
100029ee2:	0f 28 d8	movaps	%xmm0, %xmm3
100029ee5:	48 8b 35 f4 6f 02 00	movq	159732(%rip), %rsi ## Objc selector ref: colorWithCalibratedRed:green:blue:alpha:
100029eec:	4c 89 e7	movq	%r12, %rdi
100029eef:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
100029ef4:	f2 0f 10 4d c8	movsd	-56(%rbp), %xmm1
100029ef9:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100029efe:	41 ff d6	callq	*%r14
100029f01:	48 89 c7	movq	%rax, %rdi
100029f04:	ff 15 56 2d 01 00	callq	*77142(%rip) ## literal pool symbol address: _objc_retain
100029f0a:	48 8b 0d ef 98 02 00	movq	170223(%rip), %rcx
100029f11:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100029f16:	48 8b 0d eb 98 02 00	movq	170219(%rip), %rcx
100029f1d:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
100029f22:	48 8b 35 ff 7d 02 00	movq	163327(%rip), %rsi ## Objc selector ref: setColor:
100029f29:	48 89 c2	movq	%rax, %rdx
100029f2c:	41 ff d6	callq	*%r14
100029f2f:	48 8d 15 4a 39 01 00	leaq	80202(%rip), %rdx ## Objc cfstring ref: @"inputBlackPoint"
100029f36:	4c 89 ff	movq	%r15, %rdi
100029f39:	48 8b 1d 38 79 02 00	movq	162104(%rip), %rbx ## Objc selector ref: objectForKey:
100029f40:	48 89 de	movq	%rbx, %rsi
100029f43:	41 ff d6	callq	*%r14
100029f46:	48 89 c7	movq	%rax, %rdi
100029f49:	48 89 de	movq	%rbx, %rsi
100029f4c:	48 8d 15 ad 5a 01 00	leaq	88749(%rip), %rdx ## Objc cfstring ref: @"CIAttributeDefault"
100029f53:	41 ff d6	callq	*%r14
100029f56:	48 89 c3	movq	%rax, %rbx
100029f59:	4c 8b 25 c0 86 02 00	movq	165568(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSColor
100029f60:	48 89 c7	movq	%rax, %rdi
100029f63:	48 8b 35 ee 7a 02 00	movq	162542(%rip), %rsi ## Objc selector ref: red
100029f6a:	41 ff d6	callq	*%r14
100029f6d:	f2 0f 11 45 c0	movsd	%xmm0, -64(%rbp)
100029f72:	48 89 df	movq	%rbx, %rdi
100029f75:	48 8b 35 74 73 02 00	movq	160628(%rip), %rsi ## Objc selector ref: green
100029f7c:	41 ff d6	callq	*%r14
100029f7f:	f2 0f 11 45 c8	movsd	%xmm0, -56(%rbp)
100029f84:	48 89 df	movq	%rbx, %rdi
100029f87:	48 8b 35 1a 6e 02 00	movq	159258(%rip), %rsi ## Objc selector ref: blue
100029f8e:	41 ff d6	callq	*%r14
100029f91:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
100029f96:	48 89 df	movq	%rbx, %rdi
100029f99:	48 8b 35 30 6d 02 00	movq	159024(%rip), %rsi ## Objc selector ref: alpha
100029fa0:	41 ff d6	callq	*%r14
100029fa3:	0f 28 d8	movaps	%xmm0, %xmm3
100029fa6:	4c 89 e7	movq	%r12, %rdi
100029fa9:	48 8b 35 30 6f 02 00	movq	159536(%rip), %rsi ## Objc selector ref: colorWithCalibratedRed:green:blue:alpha:
100029fb0:	f2 0f 10 45 c0	movsd	-64(%rbp), %xmm0
100029fb5:	f2 0f 10 4d c8	movsd	-56(%rbp), %xmm1
100029fba:	f2 0f 10 55 d0	movsd	-48(%rbp), %xmm2
100029fbf:	41 ff d6	callq	*%r14
100029fc2:	48 89 c7	movq	%rax, %rdi
100029fc5:	ff 15 95 2c 01 00	callq	*76949(%rip) ## literal pool symbol address: _objc_retain
100029fcb:	48 8b 0d 3e 98 02 00	movq	170046(%rip), %rcx
100029fd2:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
100029fd7:	48 8b 0d 3a 98 02 00	movq	170042(%rip), %rcx
100029fde:	49 8b 7c 0d 00	movq	(%r13,%rcx), %rdi
100029fe3:	48 8b 35 3e 7d 02 00	movq	163134(%rip), %rsi ## Objc selector ref: setColor:
100029fea:	48 89 c2	movq	%rax, %rdx
100029fed:	41 ff d6	callq	*%r14
100029ff0:	48 8d 15 a9 38 01 00	leaq	80041(%rip), %rdx ## Objc cfstring ref: @"inputIntensity"
100029ff7:	4c 89 ff	movq	%r15, %rdi
100029ffa:	48 8b 1d 77 78 02 00	movq	161911(%rip), %rbx ## Objc selector ref: objectForKey:
10002a001:	48 89 de	movq	%rbx, %rsi
10002a004:	41 ff d6	callq	*%r14
10002a007:	48 8d 15 d2 59 01 00	leaq	88530(%rip), %rdx ## Objc cfstring ref: @"CIAttributeIdentity"
10002a00e:	48 89 c7	movq	%rax, %rdi
10002a011:	48 89 de	movq	%rbx, %rsi
10002a014:	41 ff d6	callq	*%r14
10002a017:	48 8b 35 f2 70 02 00	movq	159986(%rip), %rsi ## Objc selector ref: doubleValue
10002a01e:	48 89 c7	movq	%rax, %rdi
10002a021:	41 ff d6	callq	*%r14
10002a024:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a028:	48 8b 05 f1 97 02 00	movq	169969(%rip), %rax
10002a02f:	f3 41 0f 11 44 05 00	movss	%xmm0, (%r13,%rax)
10002a036:	48 83 c4 18	addq	$24, %rsp
10002a03a:	5b	popq	%rbx
10002a03b:	41 5c	popq	%r12
10002a03d:	41 5d	popq	%r13
10002a03f:	41 5e	popq	%r14
10002a041:	41 5f	popq	%r15
10002a043:	5d	popq	%rbp
10002a044:	c3	retq
10002a045:	55	pushq	%rbp
10002a046:	48 89 e5	movq	%rsp, %rbp
10002a049:	41 56	pushq	%r14
10002a04b:	53	pushq	%rbx
10002a04c:	48 89 fb	movq	%rdi, %rbx
10002a04f:	48 8b 35 82 84 02 00	movq	164994(%rip), %rsi ## Objc selector ref: whitepoint
10002a056:	4c 8b 35 c3 2b 01 00	movq	76739(%rip), %r14 ## Objc message: +[NSColor whitepoint]
10002a05d:	41 ff d6	callq	*%r14
10002a060:	48 8b 35 01 81 02 00	movq	164097(%rip), %rsi ## Objc selector ref: setWhitePoint:
10002a067:	48 89 df	movq	%rbx, %rdi
10002a06a:	48 89 c2	movq	%rax, %rdx
10002a06d:	4c 89 f0	movq	%r14, %rax
10002a070:	5b	popq	%rbx
10002a071:	41 5e	popq	%r14
10002a073:	5d	popq	%rbp
10002a074:	ff e0	jmpq	*%rax
10002a076:	55	pushq	%rbp
10002a077:	48 89 e5	movq	%rsp, %rbp
10002a07a:	41 56	pushq	%r14
10002a07c:	53	pushq	%rbx
10002a07d:	48 89 fb	movq	%rdi, %rbx
10002a080:	48 8b 35 19 6d 02 00	movq	159001(%rip), %rsi ## Objc selector ref: blackpoint
10002a087:	4c 8b 35 92 2b 01 00	movq	76690(%rip), %r14 ## Objc message: -[%rdi blackpoint]
10002a08e:	41 ff d6	callq	*%r14
10002a091:	48 8b 35 40 7c 02 00	movq	162880(%rip), %rsi ## Objc selector ref: setBlackPoint:
10002a098:	48 89 df	movq	%rbx, %rdi
10002a09b:	48 89 c2	movq	%rax, %rdx
10002a09e:	4c 89 f0	movq	%r14, %rax
10002a0a1:	5b	popq	%rbx
10002a0a2:	41 5e	popq	%r14
10002a0a4:	5d	popq	%rbp
10002a0a5:	ff e0	jmpq	*%rax
10002a0a7:	55	pushq	%rbp
10002a0a8:	48 89 e5	movq	%rsp, %rbp
10002a0ab:	41 57	pushq	%r15
10002a0ad:	41 56	pushq	%r14
10002a0af:	41 55	pushq	%r13
10002a0b1:	41 54	pushq	%r12
10002a0b3:	53	pushq	%rbx
10002a0b4:	50	pushq	%rax
10002a0b5:	49 89 ff	movq	%rdi, %r15
10002a0b8:	48 8b 3d c1 85 02 00	movq	165313(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10002a0bf:	48 8b 35 aa 71 02 00	movq	160170(%rip), %rsi ## Objc selector ref: filterWithName:
10002a0c6:	48 8d 15 d3 36 01 00	leaq	79571(%rip), %rdx ## Objc cfstring ref: @"CIGammaAdjust"
10002a0cd:	4c 8b 25 4c 2b 01 00	movq	76620(%rip), %r12 ## Objc message: +[CIFilter filterWithName:]
10002a0d4:	41 ff d4	callq	*%r12
10002a0d7:	48 8b 35 7a 6c 02 00	movq	158842(%rip), %rsi ## Objc selector ref: attributes
10002a0de:	48 89 c7	movq	%rax, %rdi
10002a0e1:	41 ff d4	callq	*%r12
10002a0e4:	48 8b 35 8d 77 02 00	movq	161677(%rip), %rsi ## Objc selector ref: objectForKey:
10002a0eb:	48 8d 15 ce 37 01 00	leaq	79822(%rip), %rdx ## Objc cfstring ref: @"inputPower"
10002a0f2:	48 89 c7	movq	%rax, %rdi
10002a0f5:	41 ff d4	callq	*%r12
10002a0f8:	48 89 c3	movq	%rax, %rbx
10002a0fb:	4c 8b 35 e6 96 02 00	movq	169702(%rip), %r14
10002a102:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
10002a106:	48 8b 35 cb 7e 02 00	movq	163531(%rip), %rsi ## Objc selector ref: setNumberOfTickMarks:
10002a10d:	ba 04 00 00 00	movl	$4, %edx
10002a112:	41 ff d4	callq	*%r12
10002a115:	4f 8b 2c 37	movq	(%r15,%r14), %r13
10002a119:	48 8d 15 80 58 01 00	leaq	88192(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a120:	48 89 df	movq	%rbx, %rdi
10002a123:	48 8b 35 4e 77 02 00	movq	161614(%rip), %rsi ## Objc selector ref: objectForKey:
10002a12a:	41 ff d4	callq	*%r12
10002a12d:	4c 8b 35 dc 6f 02 00	movq	159708(%rip), %r14 ## Objc selector ref: doubleValue
10002a134:	48 89 c7	movq	%rax, %rdi
10002a137:	4c 89 f6	movq	%r14, %rsi
10002a13a:	41 ff d4	callq	*%r12
10002a13d:	48 8b 35 74 7e 02 00	movq	163444(%rip), %rsi ## Objc selector ref: setMinValue:
10002a144:	4c 89 ef	movq	%r13, %rdi
10002a147:	41 ff d4	callq	*%r12
10002a14a:	48 8b 05 97 96 02 00	movq	169623(%rip), %rax
10002a151:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a155:	48 8d 15 64 58 01 00	leaq	88164(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a15c:	48 89 df	movq	%rbx, %rdi
10002a15f:	48 8b 35 12 77 02 00	movq	161554(%rip), %rsi ## Objc selector ref: objectForKey:
10002a166:	41 ff d4	callq	*%r12
10002a169:	48 89 c7	movq	%rax, %rdi
10002a16c:	4c 89 f6	movq	%r14, %rsi
10002a16f:	41 ff d4	callq	*%r12
10002a172:	48 8b 35 1f 7e 02 00	movq	163359(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a179:	4c 89 ef	movq	%r13, %rdi
10002a17c:	41 ff d4	callq	*%r12
10002a17f:	48 8b 05 62 96 02 00	movq	169570(%rip), %rax
10002a186:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a18a:	4c 8d 35 4f 58 01 00	leaq	88143(%rip), %r14 ## Objc cfstring ref: @"CIAttributeIdentity"
10002a191:	48 89 df	movq	%rbx, %rdi
10002a194:	48 8b 35 dd 76 02 00	movq	161501(%rip), %rsi ## Objc selector ref: objectForKey:
10002a19b:	4c 89 f2	movq	%r14, %rdx
10002a19e:	41 ff d4	callq	*%r12
10002a1a1:	48 89 c7	movq	%rax, %rdi
10002a1a4:	48 8b 35 65 6f 02 00	movq	159589(%rip), %rsi ## Objc selector ref: doubleValue
10002a1ab:	41 ff d4	callq	*%r12
10002a1ae:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a1b2:	48 8b 35 7f 7c 02 00	movq	162943(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a1b9:	4c 89 ef	movq	%r13, %rdi
10002a1bc:	41 ff d4	callq	*%r12
10002a1bf:	48 89 df	movq	%rbx, %rdi
10002a1c2:	48 8b 35 af 76 02 00	movq	161455(%rip), %rsi ## Objc selector ref: objectForKey:
10002a1c9:	4c 89 f2	movq	%r14, %rdx
10002a1cc:	41 ff d4	callq	*%r12
10002a1cf:	48 89 c7	movq	%rax, %rdi
10002a1d2:	ff 15 88 2a 01 00	callq	*76424(%rip) ## literal pool symbol address: _objc_retain
10002a1d8:	48 8b 0d 49 96 02 00	movq	169545(%rip), %rcx
10002a1df:	49 89 04 0f	movq	%rax, (%r15,%rcx)
10002a1e3:	48 83 c4 08	addq	$8, %rsp
10002a1e7:	5b	popq	%rbx
10002a1e8:	41 5c	popq	%r12
10002a1ea:	41 5d	popq	%r13
10002a1ec:	41 5e	popq	%r14
10002a1ee:	41 5f	popq	%r15
10002a1f0:	5d	popq	%rbp
10002a1f1:	c3	retq
10002a1f2:	55	pushq	%rbp
10002a1f3:	48 89 e5	movq	%rsp, %rbp
10002a1f6:	41 56	pushq	%r14
10002a1f8:	53	pushq	%rbx
10002a1f9:	48 89 fb	movq	%rdi, %rbx
10002a1fc:	48 8b 35 b5 70 02 00	movq	159925(%rip), %rsi ## Objc selector ref: gamma
10002a203:	4c 8b 35 16 2a 01 00	movq	76310(%rip), %r14 ## Objc message: -[%rdi gamma]
10002a20a:	41 ff d6	callq	*%r14
10002a20d:	48 8b 35 64 7c 02 00	movq	162916(%rip), %rsi ## Objc selector ref: setGamma:
10002a214:	48 89 df	movq	%rbx, %rdi
10002a217:	48 89 c2	movq	%rax, %rdx
10002a21a:	4c 89 f0	movq	%r14, %rax
10002a21d:	5b	popq	%rbx
10002a21e:	41 5e	popq	%r14
10002a220:	5d	popq	%rbp
10002a221:	ff e0	jmpq	*%rax
10002a223:	55	pushq	%rbp
10002a224:	48 89 e5	movq	%rsp, %rbp
10002a227:	41 57	pushq	%r15
10002a229:	41 56	pushq	%r14
10002a22b:	41 55	pushq	%r13
10002a22d:	41 54	pushq	%r12
10002a22f:	53	pushq	%rbx
10002a230:	50	pushq	%rax
10002a231:	49 89 fd	movq	%rdi, %r13
10002a234:	48 8b 3d 45 84 02 00	movq	164933(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10002a23b:	48 8b 35 2e 70 02 00	movq	159790(%rip), %rsi ## Objc selector ref: filterWithName:
10002a242:	48 8d 15 77 35 01 00	leaq	79223(%rip), %rdx ## Objc cfstring ref: @"CIColorControls"
10002a249:	4c 8b 3d d0 29 01 00	movq	76240(%rip), %r15 ## Objc message: +[CIFilter filterWithName:]
10002a250:	41 ff d7	callq	*%r15
10002a253:	48 8b 35 fe 6a 02 00	movq	158462(%rip), %rsi ## Objc selector ref: attributes
10002a25a:	48 89 c7	movq	%rax, %rdi
10002a25d:	41 ff d7	callq	*%r15
10002a260:	48 89 45 d0	movq	%rax, -48(%rbp)
10002a264:	4c 8b 35 0d 76 02 00	movq	161293(%rip), %r14 ## Objc selector ref: objectForKey:
10002a26b:	48 8d 15 6e 36 01 00	leaq	79470(%rip), %rdx ## Objc cfstring ref: @"inputBrightness"
10002a272:	48 89 c7	movq	%rax, %rdi
10002a275:	4c 89 f6	movq	%r14, %rsi
10002a278:	41 ff d7	callq	*%r15
10002a27b:	48 89 c3	movq	%rax, %rbx
10002a27e:	48 8b 05 ab 95 02 00	movq	169387(%rip), %rax
10002a285:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a28a:	48 8d 15 0f 57 01 00	leaq	87823(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a291:	48 89 df	movq	%rbx, %rdi
10002a294:	4c 89 f6	movq	%r14, %rsi
10002a297:	41 ff d7	callq	*%r15
10002a29a:	48 8b 35 6f 6e 02 00	movq	159343(%rip), %rsi ## Objc selector ref: doubleValue
10002a2a1:	48 89 c7	movq	%rax, %rdi
10002a2a4:	41 ff d7	callq	*%r15
10002a2a7:	48 8b 35 0a 7d 02 00	movq	163082(%rip), %rsi ## Objc selector ref: setMinValue:
10002a2ae:	4c 89 e7	movq	%r12, %rdi
10002a2b1:	41 ff d7	callq	*%r15
10002a2b4:	48 8b 05 75 95 02 00	movq	169333(%rip), %rax
10002a2bb:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a2c0:	48 8d 15 f9 56 01 00	leaq	87801(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a2c7:	48 89 df	movq	%rbx, %rdi
10002a2ca:	4c 89 f6	movq	%r14, %rsi
10002a2cd:	41 ff d7	callq	*%r15
10002a2d0:	48 89 c7	movq	%rax, %rdi
10002a2d3:	48 8b 35 36 6e 02 00	movq	159286(%rip), %rsi ## Objc selector ref: doubleValue
10002a2da:	41 ff d7	callq	*%r15
10002a2dd:	48 8b 35 b4 7c 02 00	movq	162996(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a2e4:	4c 89 e7	movq	%r12, %rdi
10002a2e7:	41 ff d7	callq	*%r15
10002a2ea:	48 8b 05 3f 95 02 00	movq	169279(%rip), %rax
10002a2f1:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a2f6:	48 8d 15 e3 56 01 00	leaq	87779(%rip), %rdx ## Objc cfstring ref: @"CIAttributeIdentity"
10002a2fd:	48 89 df	movq	%rbx, %rdi
10002a300:	4c 89 f6	movq	%r14, %rsi
10002a303:	49 89 d6	movq	%rdx, %r14
10002a306:	41 ff d7	callq	*%r15
10002a309:	48 89 c7	movq	%rax, %rdi
10002a30c:	48 8b 35 fd 6d 02 00	movq	159229(%rip), %rsi ## Objc selector ref: doubleValue
10002a313:	41 ff d7	callq	*%r15
10002a316:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a31a:	48 8b 35 17 7b 02 00	movq	162583(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a321:	4c 89 e7	movq	%r12, %rdi
10002a324:	41 ff d7	callq	*%r15
10002a327:	48 89 df	movq	%rbx, %rdi
10002a32a:	48 8b 35 47 75 02 00	movq	161095(%rip), %rsi ## Objc selector ref: objectForKey:
10002a331:	4c 89 f2	movq	%r14, %rdx
10002a334:	41 ff d7	callq	*%r15
10002a337:	48 89 c7	movq	%rax, %rdi
10002a33a:	ff 15 20 29 01 00	callq	*76064(%rip) ## literal pool symbol address: _objc_retain
10002a340:	48 8b 0d f1 94 02 00	movq	169201(%rip), %rcx
10002a347:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10002a34c:	48 8d 15 ad 35 01 00	leaq	79277(%rip), %rdx ## Objc cfstring ref: @"inputContrast"
10002a353:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002a357:	48 8b 35 1a 75 02 00	movq	161050(%rip), %rsi ## Objc selector ref: objectForKey:
10002a35e:	41 ff d7	callq	*%r15
10002a361:	49 89 c4	movq	%rax, %r12
10002a364:	4c 8b 35 d5 94 02 00	movq	169173(%rip), %r14
10002a36b:	4b 8b 7c 35 00	movq	(%r13,%r14), %rdi
10002a370:	48 8b 35 61 7c 02 00	movq	162913(%rip), %rsi ## Objc selector ref: setNumberOfTickMarks:
10002a377:	ba 05 00 00 00	movl	$5, %edx
10002a37c:	41 ff d7	callq	*%r15
10002a37f:	4b 8b 5c 35 00	movq	(%r13,%r14), %rbx
10002a384:	4c 89 e7	movq	%r12, %rdi
10002a387:	48 8b 35 ea 74 02 00	movq	161002(%rip), %rsi ## Objc selector ref: objectForKey:
10002a38e:	48 8d 15 0b 56 01 00	leaq	87563(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a395:	41 ff d7	callq	*%r15
10002a398:	48 89 c7	movq	%rax, %rdi
10002a39b:	48 8b 35 6e 6d 02 00	movq	159086(%rip), %rsi ## Objc selector ref: doubleValue
10002a3a2:	41 ff d7	callq	*%r15
10002a3a5:	48 89 df	movq	%rbx, %rdi
10002a3a8:	48 8b 35 09 7c 02 00	movq	162825(%rip), %rsi ## Objc selector ref: setMinValue:
10002a3af:	41 ff d7	callq	*%r15
10002a3b2:	4b 8b 5c 35 00	movq	(%r13,%r14), %rbx
10002a3b7:	4c 89 e7	movq	%r12, %rdi
10002a3ba:	4c 8b 35 b7 74 02 00	movq	160951(%rip), %r14 ## Objc selector ref: objectForKey:
10002a3c1:	4c 89 f6	movq	%r14, %rsi
10002a3c4:	48 8d 15 f5 55 01 00	leaq	87541(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a3cb:	41 ff d7	callq	*%r15
10002a3ce:	48 89 c7	movq	%rax, %rdi
10002a3d1:	48 8b 35 38 6d 02 00	movq	159032(%rip), %rsi ## Objc selector ref: doubleValue
10002a3d8:	41 ff d7	callq	*%r15
10002a3db:	48 89 df	movq	%rbx, %rdi
10002a3de:	48 8b 35 b3 7b 02 00	movq	162739(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a3e5:	41 ff d7	callq	*%r15
10002a3e8:	48 8b 05 51 94 02 00	movq	169041(%rip), %rax
10002a3ef:	49 8b 5c 05 00	movq	(%r13,%rax), %rbx
10002a3f4:	4c 89 e7	movq	%r12, %rdi
10002a3f7:	4c 89 f6	movq	%r14, %rsi
10002a3fa:	4c 8d 35 df 55 01 00	leaq	87519(%rip), %r14 ## Objc cfstring ref: @"CIAttributeIdentity"
10002a401:	4c 89 f2	movq	%r14, %rdx
10002a404:	41 ff d7	callq	*%r15
10002a407:	48 89 c7	movq	%rax, %rdi
10002a40a:	48 8b 35 ff 6c 02 00	movq	158975(%rip), %rsi ## Objc selector ref: doubleValue
10002a411:	41 ff d7	callq	*%r15
10002a414:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a418:	48 89 df	movq	%rbx, %rdi
10002a41b:	48 8b 35 16 7a 02 00	movq	162326(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a422:	41 ff d7	callq	*%r15
10002a425:	4c 89 e7	movq	%r12, %rdi
10002a428:	48 8b 1d 49 74 02 00	movq	160841(%rip), %rbx ## Objc selector ref: objectForKey:
10002a42f:	48 89 de	movq	%rbx, %rsi
10002a432:	4c 89 f2	movq	%r14, %rdx
10002a435:	41 ff d7	callq	*%r15
10002a438:	48 89 c7	movq	%rax, %rdi
10002a43b:	ff 15 1f 28 01 00	callq	*75807(%rip) ## literal pool symbol address: _objc_retain
10002a441:	48 8b 0d 00 94 02 00	movq	168960(%rip), %rcx
10002a448:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10002a44d:	48 8d 15 cc 34 01 00	leaq	79052(%rip), %rdx ## Objc cfstring ref: @"inputSaturation"
10002a454:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002a458:	48 89 de	movq	%rbx, %rsi
10002a45b:	49 89 de	movq	%rbx, %r14
10002a45e:	41 ff d7	callq	*%r15
10002a461:	48 89 c3	movq	%rax, %rbx
10002a464:	48 8b 05 e5 93 02 00	movq	168933(%rip), %rax
10002a46b:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a470:	48 89 df	movq	%rbx, %rdi
10002a473:	4c 89 f6	movq	%r14, %rsi
10002a476:	48 8d 15 23 55 01 00	leaq	87331(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a47d:	41 ff d7	callq	*%r15
10002a480:	48 89 c7	movq	%rax, %rdi
10002a483:	4c 8b 35 86 6c 02 00	movq	158854(%rip), %r14 ## Objc selector ref: doubleValue
10002a48a:	4c 89 f6	movq	%r14, %rsi
10002a48d:	41 ff d7	callq	*%r15
10002a490:	4c 89 e7	movq	%r12, %rdi
10002a493:	48 8b 35 1e 7b 02 00	movq	162590(%rip), %rsi ## Objc selector ref: setMinValue:
10002a49a:	41 ff d7	callq	*%r15
10002a49d:	48 8b 05 ac 93 02 00	movq	168876(%rip), %rax
10002a4a4:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a4a9:	48 89 df	movq	%rbx, %rdi
10002a4ac:	48 8b 35 c5 73 02 00	movq	160709(%rip), %rsi ## Objc selector ref: objectForKey:
10002a4b3:	48 8d 15 06 55 01 00	leaq	87302(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a4ba:	41 ff d7	callq	*%r15
10002a4bd:	48 89 c7	movq	%rax, %rdi
10002a4c0:	4c 89 f6	movq	%r14, %rsi
10002a4c3:	41 ff d7	callq	*%r15
10002a4c6:	4c 89 e7	movq	%r12, %rdi
10002a4c9:	48 8b 35 c8 7a 02 00	movq	162504(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a4d0:	41 ff d7	callq	*%r15
10002a4d3:	48 8b 05 76 93 02 00	movq	168822(%rip), %rax
10002a4da:	4d 8b 64 05 00	movq	(%r13,%rax), %r12
10002a4df:	48 89 df	movq	%rbx, %rdi
10002a4e2:	48 8b 35 8f 73 02 00	movq	160655(%rip), %rsi ## Objc selector ref: objectForKey:
10002a4e9:	4c 8d 35 f0 54 01 00	leaq	87280(%rip), %r14 ## Objc cfstring ref: @"CIAttributeIdentity"
10002a4f0:	4c 89 f2	movq	%r14, %rdx
10002a4f3:	41 ff d7	callq	*%r15
10002a4f6:	48 89 c7	movq	%rax, %rdi
10002a4f9:	48 8b 35 10 6c 02 00	movq	158736(%rip), %rsi ## Objc selector ref: doubleValue
10002a500:	41 ff d7	callq	*%r15
10002a503:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a507:	4c 89 e7	movq	%r12, %rdi
10002a50a:	48 8b 35 27 79 02 00	movq	162087(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a511:	41 ff d7	callq	*%r15
10002a514:	48 89 df	movq	%rbx, %rdi
10002a517:	48 8b 35 5a 73 02 00	movq	160602(%rip), %rsi ## Objc selector ref: objectForKey:
10002a51e:	4c 89 f2	movq	%r14, %rdx
10002a521:	41 ff d7	callq	*%r15
10002a524:	48 89 c7	movq	%rax, %rdi
10002a527:	ff 15 33 27 01 00	callq	*75571(%rip) ## literal pool symbol address: _objc_retain
10002a52d:	48 8b 0d 24 93 02 00	movq	168740(%rip), %rcx
10002a534:	49 89 44 0d 00	movq	%rax, (%r13,%rcx)
10002a539:	48 83 c4 08	addq	$8, %rsp
10002a53d:	5b	popq	%rbx
10002a53e:	41 5c	popq	%r12
10002a540:	41 5d	popq	%r13
10002a542:	41 5e	popq	%r14
10002a544:	41 5f	popq	%r15
10002a546:	5d	popq	%rbp
10002a547:	c3	retq
10002a548:	55	pushq	%rbp
10002a549:	48 89 e5	movq	%rsp, %rbp
10002a54c:	41 56	pushq	%r14
10002a54e:	53	pushq	%rbx
10002a54f:	48 89 fb	movq	%rdi, %rbx
10002a552:	48 8b 35 1f 76 02 00	movq	161311(%rip), %rsi ## Objc selector ref: saturation
10002a559:	4c 8b 35 c0 26 01 00	movq	75456(%rip), %r14 ## Objc message: -[%rdi saturation]
10002a560:	41 ff d6	callq	*%r14
10002a563:	48 8b 35 1e 7b 02 00	movq	162590(%rip), %rsi ## Objc selector ref: setSaturation:
10002a56a:	48 89 df	movq	%rbx, %rdi
10002a56d:	48 89 c2	movq	%rax, %rdx
10002a570:	4c 89 f0	movq	%r14, %rax
10002a573:	5b	popq	%rbx
10002a574:	41 5e	popq	%r14
10002a576:	5d	popq	%rbp
10002a577:	ff e0	jmpq	*%rax
10002a579:	55	pushq	%rbp
10002a57a:	48 89 e5	movq	%rsp, %rbp
10002a57d:	41 56	pushq	%r14
10002a57f:	53	pushq	%rbx
10002a580:	48 89 fb	movq	%rdi, %rbx
10002a583:	48 8b 35 de 69 02 00	movq	158174(%rip), %rsi ## Objc selector ref: contrast
10002a58a:	4c 8b 35 8f 26 01 00	movq	75407(%rip), %r14 ## Objc message: -[%rdi contrast]
10002a591:	41 ff d6	callq	*%r14
10002a594:	48 8b 35 ad 77 02 00	movq	161709(%rip), %rsi ## Objc selector ref: setContrast:
10002a59b:	48 89 df	movq	%rbx, %rdi
10002a59e:	48 89 c2	movq	%rax, %rdx
10002a5a1:	4c 89 f0	movq	%r14, %rax
10002a5a4:	5b	popq	%rbx
10002a5a5:	41 5e	popq	%r14
10002a5a7:	5d	popq	%rbp
10002a5a8:	ff e0	jmpq	*%rax
10002a5aa:	55	pushq	%rbp
10002a5ab:	48 89 e5	movq	%rsp, %rbp
10002a5ae:	41 56	pushq	%r14
10002a5b0:	53	pushq	%rbx
10002a5b1:	48 89 fb	movq	%rdi, %rbx
10002a5b4:	48 8b 35 25 68 02 00	movq	157733(%rip), %rsi ## Objc selector ref: brightness
10002a5bb:	4c 8b 35 5e 26 01 00	movq	75358(%rip), %r14 ## Objc message: -[%rdi brightness]
10002a5c2:	41 ff d6	callq	*%r14
10002a5c5:	48 8b 35 3c 77 02 00	movq	161596(%rip), %rsi ## Objc selector ref: setBrightness:
10002a5cc:	48 89 df	movq	%rbx, %rdi
10002a5cf:	48 89 c2	movq	%rax, %rdx
10002a5d2:	4c 89 f0	movq	%r14, %rax
10002a5d5:	5b	popq	%rbx
10002a5d6:	41 5e	popq	%r14
10002a5d8:	5d	popq	%rbp
10002a5d9:	ff e0	jmpq	*%rax
10002a5db:	55	pushq	%rbp
10002a5dc:	48 89 e5	movq	%rsp, %rbp
10002a5df:	41 57	pushq	%r15
10002a5e1:	41 56	pushq	%r14
10002a5e3:	41 55	pushq	%r13
10002a5e5:	41 54	pushq	%r12
10002a5e7:	53	pushq	%rbx
10002a5e8:	50	pushq	%rax
10002a5e9:	49 89 ff	movq	%rdi, %r15
10002a5ec:	48 8b 3d 8d 80 02 00	movq	163981(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10002a5f3:	48 8b 35 76 6c 02 00	movq	158838(%rip), %rsi ## Objc selector ref: filterWithName:
10002a5fa:	48 8d 15 df 31 01 00	leaq	78303(%rip), %rdx ## Objc cfstring ref: @"CISharpenLuminance"
10002a601:	4c 8b 25 18 26 01 00	movq	75288(%rip), %r12 ## Objc message: +[CIFilter filterWithName:]
10002a608:	41 ff d4	callq	*%r12
10002a60b:	48 8b 35 46 67 02 00	movq	157510(%rip), %rsi ## Objc selector ref: attributes
10002a612:	48 89 c7	movq	%rax, %rdi
10002a615:	41 ff d4	callq	*%r12
10002a618:	48 8b 35 59 72 02 00	movq	160345(%rip), %rsi ## Objc selector ref: objectForKey:
10002a61f:	48 8d 15 1a 33 01 00	leaq	78618(%rip), %rdx ## Objc cfstring ref: @"inputSharpness"
10002a626:	48 89 c7	movq	%rax, %rdi
10002a629:	41 ff d4	callq	*%r12
10002a62c:	48 89 c3	movq	%rax, %rbx
10002a62f:	4c 8b 35 2a 92 02 00	movq	168490(%rip), %r14
10002a636:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
10002a63a:	48 8b 35 97 79 02 00	movq	162199(%rip), %rsi ## Objc selector ref: setNumberOfTickMarks:
10002a641:	ba 03 00 00 00	movl	$3, %edx
10002a646:	41 ff d4	callq	*%r12
10002a649:	4f 8b 2c 37	movq	(%r15,%r14), %r13
10002a64d:	48 8d 15 4c 53 01 00	leaq	86860(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a654:	48 89 df	movq	%rbx, %rdi
10002a657:	48 8b 35 1a 72 02 00	movq	160282(%rip), %rsi ## Objc selector ref: objectForKey:
10002a65e:	41 ff d4	callq	*%r12
10002a661:	4c 8b 35 a8 6a 02 00	movq	158376(%rip), %r14 ## Objc selector ref: doubleValue
10002a668:	48 89 c7	movq	%rax, %rdi
10002a66b:	4c 89 f6	movq	%r14, %rsi
10002a66e:	41 ff d4	callq	*%r12
10002a671:	48 8b 35 40 79 02 00	movq	162112(%rip), %rsi ## Objc selector ref: setMinValue:
10002a678:	4c 89 ef	movq	%r13, %rdi
10002a67b:	41 ff d4	callq	*%r12
10002a67e:	48 8b 05 db 91 02 00	movq	168411(%rip), %rax
10002a685:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a689:	48 8d 15 30 53 01 00	leaq	86832(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a690:	48 89 df	movq	%rbx, %rdi
10002a693:	48 8b 35 de 71 02 00	movq	160222(%rip), %rsi ## Objc selector ref: objectForKey:
10002a69a:	41 ff d4	callq	*%r12
10002a69d:	48 89 c7	movq	%rax, %rdi
10002a6a0:	4c 89 f6	movq	%r14, %rsi
10002a6a3:	41 ff d4	callq	*%r12
10002a6a6:	48 8b 35 eb 78 02 00	movq	162027(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a6ad:	4c 89 ef	movq	%r13, %rdi
10002a6b0:	41 ff d4	callq	*%r12
10002a6b3:	48 8b 05 a6 91 02 00	movq	168358(%rip), %rax
10002a6ba:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a6be:	4c 8d 35 1b 53 01 00	leaq	86811(%rip), %r14 ## Objc cfstring ref: @"CIAttributeIdentity"
10002a6c5:	48 89 df	movq	%rbx, %rdi
10002a6c8:	48 8b 35 a9 71 02 00	movq	160169(%rip), %rsi ## Objc selector ref: objectForKey:
10002a6cf:	4c 89 f2	movq	%r14, %rdx
10002a6d2:	41 ff d4	callq	*%r12
10002a6d5:	48 89 c7	movq	%rax, %rdi
10002a6d8:	48 8b 35 31 6a 02 00	movq	158257(%rip), %rsi ## Objc selector ref: doubleValue
10002a6df:	41 ff d4	callq	*%r12
10002a6e2:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a6e6:	48 8b 35 4b 77 02 00	movq	161611(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a6ed:	4c 89 ef	movq	%r13, %rdi
10002a6f0:	41 ff d4	callq	*%r12
10002a6f3:	48 89 df	movq	%rbx, %rdi
10002a6f6:	48 8b 35 7b 71 02 00	movq	160123(%rip), %rsi ## Objc selector ref: objectForKey:
10002a6fd:	4c 89 f2	movq	%r14, %rdx
10002a700:	41 ff d4	callq	*%r12
10002a703:	48 89 c7	movq	%rax, %rdi
10002a706:	ff 15 54 25 01 00	callq	*75092(%rip) ## literal pool symbol address: _objc_retain
10002a70c:	48 8b 0d 55 91 02 00	movq	168277(%rip), %rcx
10002a713:	49 89 04 0f	movq	%rax, (%r15,%rcx)
10002a717:	48 83 c4 08	addq	$8, %rsp
10002a71b:	5b	popq	%rbx
10002a71c:	41 5c	popq	%r12
10002a71e:	41 5d	popq	%r13
10002a720:	41 5e	popq	%r14
10002a722:	41 5f	popq	%r15
10002a724:	5d	popq	%rbp
10002a725:	c3	retq
10002a726:	55	pushq	%rbp
10002a727:	48 89 e5	movq	%rsp, %rbp
10002a72a:	41 56	pushq	%r14
10002a72c:	53	pushq	%rbx
10002a72d:	48 89 fb	movq	%rdi, %rbx
10002a730:	48 8b 35 f9 7a 02 00	movq	162553(%rip), %rsi ## Objc selector ref: sharpness
10002a737:	4c 8b 35 e2 24 01 00	movq	74978(%rip), %r14 ## Objc message: -[%rdi sharpness]
10002a73e:	41 ff d6	callq	*%r14
10002a741:	48 8b 35 88 79 02 00	movq	162184(%rip), %rsi ## Objc selector ref: setSharpness:
10002a748:	48 89 df	movq	%rbx, %rdi
10002a74b:	48 89 c2	movq	%rax, %rdx
10002a74e:	4c 89 f0	movq	%r14, %rax
10002a751:	5b	popq	%rbx
10002a752:	41 5e	popq	%r14
10002a754:	5d	popq	%rbp
10002a755:	ff e0	jmpq	*%rax
10002a757:	55	pushq	%rbp
10002a758:	48 89 e5	movq	%rsp, %rbp
10002a75b:	48 8b 35 5e 6b 02 00	movq	158558(%rip), %rsi ## Objc selector ref: genericAction
10002a762:	5d	popq	%rbp
10002a763:	ff 25 b7 24 01 00	jmpq	*74935(%rip) ## Objc message: -[%rdi genericAction]
10002a769:	55	pushq	%rbp
10002a76a:	48 89 e5	movq	%rsp, %rbp
10002a76d:	41 57	pushq	%r15
10002a76f:	41 56	pushq	%r14
10002a771:	41 55	pushq	%r13
10002a773:	41 54	pushq	%r12
10002a775:	53	pushq	%rbx
10002a776:	50	pushq	%rax
10002a777:	49 89 ff	movq	%rdi, %r15
10002a77a:	48 8b 3d ff 7e 02 00	movq	163583(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_CIFilter
10002a781:	48 8b 35 e8 6a 02 00	movq	158440(%rip), %rsi ## Objc selector ref: filterWithName:
10002a788:	48 8d 15 71 30 01 00	leaq	77937(%rip), %rdx ## Objc cfstring ref: @"CISepiaTone"
10002a78f:	4c 8b 25 8a 24 01 00	movq	74890(%rip), %r12 ## Objc message: +[CIFilter filterWithName:]
10002a796:	41 ff d4	callq	*%r12
10002a799:	48 8b 35 b8 65 02 00	movq	157112(%rip), %rsi ## Objc selector ref: attributes
10002a7a0:	48 89 c7	movq	%rax, %rdi
10002a7a3:	41 ff d4	callq	*%r12
10002a7a6:	48 8b 35 cb 70 02 00	movq	159947(%rip), %rsi ## Objc selector ref: objectForKey:
10002a7ad:	48 8d 15 ec 30 01 00	leaq	78060(%rip), %rdx ## Objc cfstring ref: @"inputIntensity"
10002a7b4:	48 89 c7	movq	%rax, %rdi
10002a7b7:	41 ff d4	callq	*%r12
10002a7ba:	48 89 c3	movq	%rax, %rbx
10002a7bd:	4c 8b 35 ac 90 02 00	movq	168108(%rip), %r14
10002a7c4:	4b 8b 3c 37	movq	(%r15,%r14), %rdi
10002a7c8:	48 8b 35 09 78 02 00	movq	161801(%rip), %rsi ## Objc selector ref: setNumberOfTickMarks:
10002a7cf:	ba 03 00 00 00	movl	$3, %edx
10002a7d4:	41 ff d4	callq	*%r12
10002a7d7:	4f 8b 2c 37	movq	(%r15,%r14), %r13
10002a7db:	48 8d 15 be 51 01 00	leaq	86462(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMin"
10002a7e2:	48 89 df	movq	%rbx, %rdi
10002a7e5:	48 8b 35 8c 70 02 00	movq	159884(%rip), %rsi ## Objc selector ref: objectForKey:
10002a7ec:	41 ff d4	callq	*%r12
10002a7ef:	4c 8b 35 1a 69 02 00	movq	157978(%rip), %r14 ## Objc selector ref: doubleValue
10002a7f6:	48 89 c7	movq	%rax, %rdi
10002a7f9:	4c 89 f6	movq	%r14, %rsi
10002a7fc:	41 ff d4	callq	*%r12
10002a7ff:	48 8b 35 b2 77 02 00	movq	161714(%rip), %rsi ## Objc selector ref: setMinValue:
10002a806:	4c 89 ef	movq	%r13, %rdi
10002a809:	41 ff d4	callq	*%r12
10002a80c:	48 8b 05 5d 90 02 00	movq	168029(%rip), %rax
10002a813:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a817:	48 8d 15 a2 51 01 00	leaq	86434(%rip), %rdx ## Objc cfstring ref: @"CIAttributeSliderMax"
10002a81e:	48 89 df	movq	%rbx, %rdi
10002a821:	48 8b 35 50 70 02 00	movq	159824(%rip), %rsi ## Objc selector ref: objectForKey:
10002a828:	41 ff d4	callq	*%r12
10002a82b:	48 89 c7	movq	%rax, %rdi
10002a82e:	4c 89 f6	movq	%r14, %rsi
10002a831:	41 ff d4	callq	*%r12
10002a834:	48 8b 35 5d 77 02 00	movq	161629(%rip), %rsi ## Objc selector ref: setMaxValue:
10002a83b:	4c 89 ef	movq	%r13, %rdi
10002a83e:	41 ff d4	callq	*%r12
10002a841:	48 8b 05 28 90 02 00	movq	167976(%rip), %rax
10002a848:	4d 8b 2c 07	movq	(%r15,%rax), %r13
10002a84c:	4c 8d 35 8d 51 01 00	leaq	86413(%rip), %r14 ## Objc cfstring ref: @"CIAttributeIdentity"
10002a853:	48 89 df	movq	%rbx, %rdi
10002a856:	48 8b 35 1b 70 02 00	movq	159771(%rip), %rsi ## Objc selector ref: objectForKey:
10002a85d:	4c 89 f2	movq	%r14, %rdx
10002a860:	41 ff d4	callq	*%r12
10002a863:	48 89 c7	movq	%rax, %rdi
10002a866:	48 8b 35 a3 68 02 00	movq	157859(%rip), %rsi ## Objc selector ref: doubleValue
10002a86d:	41 ff d4	callq	*%r12
10002a870:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002a874:	48 8b 35 bd 75 02 00	movq	161213(%rip), %rsi ## Objc selector ref: setFloatValue:
10002a87b:	4c 89 ef	movq	%r13, %rdi
10002a87e:	41 ff d4	callq	*%r12
10002a881:	48 89 df	movq	%rbx, %rdi
10002a884:	48 8b 35 ed 6f 02 00	movq	159725(%rip), %rsi ## Objc selector ref: objectForKey:
10002a88b:	4c 89 f2	movq	%r14, %rdx
10002a88e:	41 ff d4	callq	*%r12
10002a891:	48 89 c7	movq	%rax, %rdi
10002a894:	ff 15 c6 23 01 00	callq	*74694(%rip) ## literal pool symbol address: _objc_retain
10002a89a:	48 8b 0d d7 8f 02 00	movq	167895(%rip), %rcx
10002a8a1:	49 89 04 0f	movq	%rax, (%r15,%rcx)
10002a8a5:	48 83 c4 08	addq	$8, %rsp
10002a8a9:	5b	popq	%rbx
10002a8aa:	41 5c	popq	%r12
10002a8ac:	41 5d	popq	%r13
10002a8ae:	41 5e	popq	%r14
10002a8b0:	41 5f	popq	%r15
10002a8b2:	5d	popq	%rbp
10002a8b3:	c3	retq
10002a8b4:	55	pushq	%rbp
10002a8b5:	48 89 e5	movq	%rsp, %rbp
10002a8b8:	41 56	pushq	%r14
10002a8ba:	53	pushq	%rbx
10002a8bb:	48 89 fb	movq	%rdi, %rbx
10002a8be:	48 8b 35 a3 73 02 00	movq	160675(%rip), %rsi ## Objc selector ref: sepiaintensity
10002a8c5:	4c 8b 35 54 23 01 00	movq	74580(%rip), %r14 ## Objc message: -[%rdi sepiaintensity]
10002a8cc:	41 ff d6	callq	*%r14
10002a8cf:	48 8b 35 f2 77 02 00	movq	161778(%rip), %rsi ## Objc selector ref: setSepiaIntensity:
10002a8d6:	48 89 df	movq	%rbx, %rdi
10002a8d9:	48 89 c2	movq	%rax, %rdx
10002a8dc:	4c 89 f0	movq	%r14, %rax
10002a8df:	5b	popq	%rbx
10002a8e0:	41 5e	popq	%r14
10002a8e2:	5d	popq	%rbp
10002a8e3:	ff e0	jmpq	*%rax
10002a8e5:	55	pushq	%rbp
10002a8e6:	48 89 e5	movq	%rsp, %rbp
10002a8e9:	41 56	pushq	%r14
10002a8eb:	53	pushq	%rbx
10002a8ec:	48 8b 1d fd 7c 02 00	movq	163069(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002a8f3:	48 8b 05 f6 8e 02 00	movq	167670(%rip), %rax
10002a8fa:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002a8fe:	48 8b 35 8b 69 02 00	movq	158091(%rip), %rsi ## Objc selector ref: floatValue
10002a905:	4c 8b 35 14 23 01 00	movq	74516(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002a90c:	41 ff d6	callq	*%r14
10002a90f:	48 8b 35 02 6f 02 00	movq	159490(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002a916:	48 89 df	movq	%rbx, %rdi
10002a919:	4c 89 f0	movq	%r14, %rax
10002a91c:	5b	popq	%rbx
10002a91d:	41 5e	popq	%r14
10002a91f:	5d	popq	%rbp
10002a920:	ff e0	jmpq	*%rax
10002a922:	55	pushq	%rbp
10002a923:	48 89 e5	movq	%rsp, %rbp
10002a926:	48 8b 05 db 8e 02 00	movq	167643(%rip), %rax
10002a92d:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002a931:	48 8b 35 78 65 02 00	movq	157048(%rip), %rsi ## Objc selector ref: color
10002a938:	5d	popq	%rbp
10002a939:	ff 25 e1 22 01 00	jmpq	*74465(%rip) ## Objc message: -[%rdi color]
10002a93f:	55	pushq	%rbp
10002a940:	48 89 e5	movq	%rsp, %rbp
10002a943:	48 8b 05 ce 8e 02 00	movq	167630(%rip), %rax
10002a94a:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002a94e:	48 8b 35 5b 65 02 00	movq	157019(%rip), %rsi ## Objc selector ref: color
10002a955:	5d	popq	%rbp
10002a956:	ff 25 c4 22 01 00	jmpq	*74436(%rip) ## Objc message: -[%rdi color]
10002a95c:	55	pushq	%rbp
10002a95d:	48 89 e5	movq	%rsp, %rbp
10002a960:	48 8b 05 89 7c 02 00	movq	162953(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002a967:	48 8b 0d b2 8e 02 00	movq	167602(%rip), %rcx
10002a96e:	f3 0f 10 04 0f	movss	(%rdi,%rcx), %xmm0
10002a973:	48 8b 35 9e 6e 02 00	movq	159390(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002a97a:	48 89 c7	movq	%rax, %rdi
10002a97d:	5d	popq	%rbp
10002a97e:	ff 25 9c 22 01 00	jmpq	*74396(%rip) ## Objc message: +[NSNumber numberWithFloat:]
10002a984:	55	pushq	%rbp
10002a985:	48 89 e5	movq	%rsp, %rbp
10002a988:	41 56	pushq	%r14
10002a98a:	53	pushq	%rbx
10002a98b:	48 8b 1d 5e 7c 02 00	movq	162910(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002a992:	48 8b 05 4f 8e 02 00	movq	167503(%rip), %rax
10002a999:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002a99d:	48 8b 35 ec 68 02 00	movq	157932(%rip), %rsi ## Objc selector ref: floatValue
10002a9a4:	4c 8b 35 75 22 01 00	movq	74357(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002a9ab:	41 ff d6	callq	*%r14
10002a9ae:	48 8b 35 63 6e 02 00	movq	159331(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002a9b5:	48 89 df	movq	%rbx, %rdi
10002a9b8:	4c 89 f0	movq	%r14, %rax
10002a9bb:	5b	popq	%rbx
10002a9bc:	41 5e	popq	%r14
10002a9be:	5d	popq	%rbp
10002a9bf:	ff e0	jmpq	*%rax
10002a9c1:	55	pushq	%rbp
10002a9c2:	48 89 e5	movq	%rsp, %rbp
10002a9c5:	41 56	pushq	%r14
10002a9c7:	53	pushq	%rbx
10002a9c8:	48 8b 1d 21 7c 02 00	movq	162849(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002a9cf:	48 8b 05 5a 8e 02 00	movq	167514(%rip), %rax
10002a9d6:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002a9da:	48 8b 35 af 68 02 00	movq	157871(%rip), %rsi ## Objc selector ref: floatValue
10002a9e1:	4c 8b 35 38 22 01 00	movq	74296(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002a9e8:	41 ff d6	callq	*%r14
10002a9eb:	48 8b 35 26 6e 02 00	movq	159270(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002a9f2:	48 89 df	movq	%rbx, %rdi
10002a9f5:	4c 89 f0	movq	%r14, %rax
10002a9f8:	5b	popq	%rbx
10002a9f9:	41 5e	popq	%r14
10002a9fb:	5d	popq	%rbp
10002a9fc:	ff e0	jmpq	*%rax
10002a9fe:	55	pushq	%rbp
10002a9ff:	48 89 e5	movq	%rsp, %rbp
10002aa02:	41 56	pushq	%r14
10002aa04:	53	pushq	%rbx
10002aa05:	48 8b 1d e4 7b 02 00	movq	162788(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002aa0c:	48 8b 05 2d 8e 02 00	movq	167469(%rip), %rax
10002aa13:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002aa17:	48 8b 35 72 68 02 00	movq	157810(%rip), %rsi ## Objc selector ref: floatValue
10002aa1e:	4c 8b 35 fb 21 01 00	movq	74235(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002aa25:	41 ff d6	callq	*%r14
10002aa28:	48 8b 35 e9 6d 02 00	movq	159209(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002aa2f:	48 89 df	movq	%rbx, %rdi
10002aa32:	4c 89 f0	movq	%r14, %rax
10002aa35:	5b	popq	%rbx
10002aa36:	41 5e	popq	%r14
10002aa38:	5d	popq	%rbp
10002aa39:	ff e0	jmpq	*%rax
10002aa3b:	55	pushq	%rbp
10002aa3c:	48 89 e5	movq	%rsp, %rbp
10002aa3f:	41 56	pushq	%r14
10002aa41:	53	pushq	%rbx
10002aa42:	48 8b 1d a7 7b 02 00	movq	162727(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002aa49:	48 8b 05 00 8e 02 00	movq	167424(%rip), %rax
10002aa50:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002aa54:	48 8b 35 35 68 02 00	movq	157749(%rip), %rsi ## Objc selector ref: floatValue
10002aa5b:	4c 8b 35 be 21 01 00	movq	74174(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002aa62:	41 ff d6	callq	*%r14
10002aa65:	48 8b 35 ac 6d 02 00	movq	159148(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002aa6c:	48 89 df	movq	%rbx, %rdi
10002aa6f:	4c 89 f0	movq	%r14, %rax
10002aa72:	5b	popq	%rbx
10002aa73:	41 5e	popq	%r14
10002aa75:	5d	popq	%rbp
10002aa76:	ff e0	jmpq	*%rax
10002aa78:	55	pushq	%rbp
10002aa79:	48 89 e5	movq	%rsp, %rbp
10002aa7c:	41 56	pushq	%r14
10002aa7e:	53	pushq	%rbx
10002aa7f:	48 8b 1d 6a 7b 02 00	movq	162666(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002aa86:	48 8b 05 d3 8d 02 00	movq	167379(%rip), %rax
10002aa8d:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002aa91:	48 8b 35 f8 67 02 00	movq	157688(%rip), %rsi ## Objc selector ref: floatValue
10002aa98:	4c 8b 35 81 21 01 00	movq	74113(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002aa9f:	41 ff d6	callq	*%r14
10002aaa2:	48 8b 35 6f 6d 02 00	movq	159087(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002aaa9:	48 89 df	movq	%rbx, %rdi
10002aaac:	4c 89 f0	movq	%r14, %rax
10002aaaf:	5b	popq	%rbx
10002aab0:	41 5e	popq	%r14
10002aab2:	5d	popq	%rbp
10002aab3:	ff e0	jmpq	*%rax
10002aab5:	55	pushq	%rbp
10002aab6:	48 89 e5	movq	%rsp, %rbp
10002aab9:	41 56	pushq	%r14
10002aabb:	53	pushq	%rbx
10002aabc:	48 8b 1d 2d 7b 02 00	movq	162605(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002aac3:	48 8b 05 a6 8d 02 00	movq	167334(%rip), %rax
10002aaca:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002aace:	48 8b 35 bb 67 02 00	movq	157627(%rip), %rsi ## Objc selector ref: floatValue
10002aad5:	4c 8b 35 44 21 01 00	movq	74052(%rip), %r14 ## Objc message: +[NSNumber floatValue]
10002aadc:	41 ff d6	callq	*%r14
10002aadf:	48 8b 35 32 6d 02 00	movq	159026(%rip), %rsi ## Objc selector ref: numberWithFloat:
10002aae6:	48 89 df	movq	%rbx, %rdi
10002aae9:	4c 89 f0	movq	%r14, %rax
10002aaec:	5b	popq	%rbx
10002aaed:	41 5e	popq	%r14
10002aaef:	5d	popq	%rbp
10002aaf0:	ff e0	jmpq	*%rax
10002aaf2:	55	pushq	%rbp
10002aaf3:	48 89 e5	movq	%rsp, %rbp
10002aaf6:	41 57	pushq	%r15
10002aaf8:	41 56	pushq	%r14
10002aafa:	41 55	pushq	%r13
10002aafc:	41 54	pushq	%r12
10002aafe:	53	pushq	%rbx
10002aaff:	50	pushq	%rax
10002ab00:	48 89 fb	movq	%rdi, %rbx
10002ab03:	4c 8b 25 ee 8c 02 00	movq	167150(%rip), %r12
10002ab0a:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002ab0e:	48 39 d7	cmpq	%rdx, %rdi
10002ab11:	0f 84 f3 00 00 00	je	0x10002ac0a
10002ab17:	49 89 d6	movq	%rdx, %r14
10002ab1a:	48 85 ff	testq	%rdi, %rdi
10002ab1d:	0f 84 8b 00 00 00	je	0x10002abae
10002ab23:	4c 8b 3d b6 8c 02 00	movq	167094(%rip), %r15
10002ab2a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ab2e:	48 8b 35 f3 78 02 00	movq	162035(%rip), %rsi ## Objc selector ref: undoManager
10002ab35:	4c 8b 2d e4 20 01 00	movq	73956(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002ab3c:	41 ff d5	callq	*%r13
10002ab3f:	48 8b 0d b2 72 02 00	movq	160434(%rip), %rcx ## Objc selector ref: setExposure:
10002ab46:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002ab4a:	48 8b 35 3f 6f 02 00	movq	159551(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002ab51:	48 89 c7	movq	%rax, %rdi
10002ab54:	48 89 da	movq	%rbx, %rdx
10002ab57:	41 ff d5	callq	*%r13
10002ab5a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ab5e:	48 8b 35 c3 78 02 00	movq	161987(%rip), %rsi ## Objc selector ref: undoManager
10002ab65:	41 ff d5	callq	*%r13
10002ab68:	49 89 c7	movq	%rax, %r15
10002ab6b:	48 8b 3d 2e 7a 02 00	movq	162350(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002ab72:	48 8b 35 6f 6b 02 00	movq	158575(%rip), %rsi ## Objc selector ref: mainBundle
10002ab79:	41 ff d5	callq	*%r13
10002ab7c:	48 8b 35 dd 6a 02 00	movq	158429(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002ab83:	48 8d 15 f6 28 01 00	leaq	76022(%rip), %rdx ## Objc cfstring ref: @"Exposure"
10002ab8a:	48 8d 0d 0f 23 01 00	leaq	74511(%rip), %rcx ## Objc cfstring ref: @""
10002ab91:	48 89 c7	movq	%rax, %rdi
10002ab94:	45 31 c0	xorl	%r8d, %r8d
10002ab97:	41 ff d5	callq	*%r13
10002ab9a:	48 8b 35 df 70 02 00	movq	159967(%rip), %rsi ## Objc selector ref: setActionName:
10002aba1:	4c 89 ff	movq	%r15, %rdi
10002aba4:	48 89 c2	movq	%rax, %rdx
10002aba7:	41 ff d5	callq	*%r13
10002abaa:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002abae:	ff 15 a4 20 01 00	callq	*73892(%rip) ## literal pool symbol address: _objc_release
10002abb4:	4c 89 f7	movq	%r14, %rdi
10002abb7:	ff 15 a3 20 01 00	callq	*73891(%rip) ## literal pool symbol address: _objc_retain
10002abbd:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002abc1:	48 8b 05 28 8c 02 00	movq	166952(%rip), %rax
10002abc8:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002abcc:	48 8b 35 bd 66 02 00	movq	157373(%rip), %rsi ## Objc selector ref: floatValue
10002abd3:	4c 8b 25 46 20 01 00	movq	73798(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002abda:	4c 89 f7	movq	%r14, %rdi
10002abdd:	41 ff d4	callq	*%r12
10002abe0:	48 8b 35 51 72 02 00	movq	160337(%rip), %rsi ## Objc selector ref: setFloatValue:
10002abe7:	4c 89 ff	movq	%r15, %rdi
10002abea:	41 ff d4	callq	*%r12
10002abed:	48 8b 35 cc 66 02 00	movq	157388(%rip), %rsi ## Objc selector ref: genericAction
10002abf4:	48 89 df	movq	%rbx, %rdi
10002abf7:	4c 89 e0	movq	%r12, %rax
10002abfa:	48 83 c4 08	addq	$8, %rsp
10002abfe:	5b	popq	%rbx
10002abff:	41 5c	popq	%r12
10002ac01:	41 5d	popq	%r13
10002ac03:	41 5e	popq	%r14
10002ac05:	41 5f	popq	%r15
10002ac07:	5d	popq	%rbp
10002ac08:	ff e0	jmpq	*%rax
10002ac0a:	48 83 c4 08	addq	$8, %rsp
10002ac0e:	5b	popq	%rbx
10002ac0f:	41 5c	popq	%r12
10002ac11:	41 5d	popq	%r13
10002ac13:	41 5e	popq	%r14
10002ac15:	41 5f	popq	%r15
10002ac17:	5d	popq	%rbp
10002ac18:	c3	retq
10002ac19:	55	pushq	%rbp
10002ac1a:	48 89 e5	movq	%rsp, %rbp
10002ac1d:	41 57	pushq	%r15
10002ac1f:	41 56	pushq	%r14
10002ac21:	41 55	pushq	%r13
10002ac23:	41 54	pushq	%r12
10002ac25:	53	pushq	%rbx
10002ac26:	50	pushq	%rax
10002ac27:	48 89 fb	movq	%rdi, %rbx
10002ac2a:	4c 8b 25 df 8b 02 00	movq	166879(%rip), %r12
10002ac31:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002ac35:	48 39 d7	cmpq	%rdx, %rdi
10002ac38:	0f 84 e6 00 00 00	je	0x10002ad24
10002ac3e:	49 89 d6	movq	%rdx, %r14
10002ac41:	48 85 ff	testq	%rdi, %rdi
10002ac44:	0f 84 8b 00 00 00	je	0x10002acd5
10002ac4a:	4c 8b 3d 8f 8b 02 00	movq	166799(%rip), %r15
10002ac51:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ac55:	48 8b 35 cc 77 02 00	movq	161740(%rip), %rsi ## Objc selector ref: undoManager
10002ac5c:	4c 8b 2d bd 1f 01 00	movq	73661(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002ac63:	41 ff d5	callq	*%r13
10002ac66:	48 8b 0d 6b 70 02 00	movq	159851(%rip), %rcx ## Objc selector ref: setBlackPoint:
10002ac6d:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002ac71:	48 8b 35 18 6e 02 00	movq	159256(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002ac78:	48 89 c7	movq	%rax, %rdi
10002ac7b:	48 89 da	movq	%rbx, %rdx
10002ac7e:	41 ff d5	callq	*%r13
10002ac81:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ac85:	48 8b 35 9c 77 02 00	movq	161692(%rip), %rsi ## Objc selector ref: undoManager
10002ac8c:	41 ff d5	callq	*%r13
10002ac8f:	49 89 c7	movq	%rax, %r15
10002ac92:	48 8b 3d 07 79 02 00	movq	162055(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002ac99:	48 8b 35 48 6a 02 00	movq	158280(%rip), %rsi ## Objc selector ref: mainBundle
10002aca0:	41 ff d5	callq	*%r13
10002aca3:	48 8b 35 b6 69 02 00	movq	158134(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002acaa:	48 8d 15 6f 4d 01 00	leaq	85359(%rip), %rdx ## Objc cfstring ref: @"Black Point"
10002acb1:	48 8d 0d e8 21 01 00	leaq	74216(%rip), %rcx ## Objc cfstring ref: @""
10002acb8:	48 89 c7	movq	%rax, %rdi
10002acbb:	45 31 c0	xorl	%r8d, %r8d
10002acbe:	41 ff d5	callq	*%r13
10002acc1:	48 8b 35 b8 6f 02 00	movq	159672(%rip), %rsi ## Objc selector ref: setActionName:
10002acc8:	4c 89 ff	movq	%r15, %rdi
10002accb:	48 89 c2	movq	%rax, %rdx
10002acce:	41 ff d5	callq	*%r13
10002acd1:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002acd5:	ff 15 7d 1f 01 00	callq	*73597(%rip) ## literal pool symbol address: _objc_release
10002acdb:	4c 89 f7	movq	%r14, %rdi
10002acde:	ff 15 7c 1f 01 00	callq	*73596(%rip) ## literal pool symbol address: _objc_retain
10002ace4:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002ace8:	48 8b 05 29 8b 02 00	movq	166697(%rip), %rax
10002acef:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002acf3:	48 8b 35 2e 70 02 00	movq	159790(%rip), %rsi ## Objc selector ref: setColor:
10002acfa:	4c 8b 3d 1f 1f 01 00	movq	73503(%rip), %r15 ## Objc message: +[NSBundle setColor:]
10002ad01:	4c 89 f2	movq	%r14, %rdx
10002ad04:	41 ff d7	callq	*%r15
10002ad07:	48 8b 35 b2 65 02 00	movq	157106(%rip), %rsi ## Objc selector ref: genericAction
10002ad0e:	48 89 df	movq	%rbx, %rdi
10002ad11:	4c 89 f8	movq	%r15, %rax
10002ad14:	48 83 c4 08	addq	$8, %rsp
10002ad18:	5b	popq	%rbx
10002ad19:	41 5c	popq	%r12
10002ad1b:	41 5d	popq	%r13
10002ad1d:	41 5e	popq	%r14
10002ad1f:	41 5f	popq	%r15
10002ad21:	5d	popq	%rbp
10002ad22:	ff e0	jmpq	*%rax
10002ad24:	48 83 c4 08	addq	$8, %rsp
10002ad28:	5b	popq	%rbx
10002ad29:	41 5c	popq	%r12
10002ad2b:	41 5d	popq	%r13
10002ad2d:	41 5e	popq	%r14
10002ad2f:	41 5f	popq	%r15
10002ad31:	5d	popq	%rbp
10002ad32:	c3	retq
10002ad33:	55	pushq	%rbp
10002ad34:	48 89 e5	movq	%rsp, %rbp
10002ad37:	41 57	pushq	%r15
10002ad39:	41 56	pushq	%r14
10002ad3b:	41 55	pushq	%r13
10002ad3d:	41 54	pushq	%r12
10002ad3f:	53	pushq	%rbx
10002ad40:	50	pushq	%rax
10002ad41:	48 89 fb	movq	%rdi, %rbx
10002ad44:	4c 8b 25 b5 8a 02 00	movq	166581(%rip), %r12
10002ad4b:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002ad4f:	48 39 d7	cmpq	%rdx, %rdi
10002ad52:	0f 84 e6 00 00 00	je	0x10002ae3e
10002ad58:	49 89 d6	movq	%rdx, %r14
10002ad5b:	48 85 ff	testq	%rdi, %rdi
10002ad5e:	0f 84 8b 00 00 00	je	0x10002adef
10002ad64:	4c 8b 3d 75 8a 02 00	movq	166517(%rip), %r15
10002ad6b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ad6f:	48 8b 35 b2 76 02 00	movq	161458(%rip), %rsi ## Objc selector ref: undoManager
10002ad76:	4c 8b 2d a3 1e 01 00	movq	73379(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002ad7d:	41 ff d5	callq	*%r13
10002ad80:	48 8b 0d e1 73 02 00	movq	160737(%rip), %rcx ## Objc selector ref: setWhitePoint:
10002ad87:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002ad8b:	48 8b 35 fe 6c 02 00	movq	158974(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002ad92:	48 89 c7	movq	%rax, %rdi
10002ad95:	48 89 da	movq	%rbx, %rdx
10002ad98:	41 ff d5	callq	*%r13
10002ad9b:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ad9f:	48 8b 35 82 76 02 00	movq	161410(%rip), %rsi ## Objc selector ref: undoManager
10002ada6:	41 ff d5	callq	*%r13
10002ada9:	49 89 c7	movq	%rax, %r15
10002adac:	48 8b 3d ed 77 02 00	movq	161773(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002adb3:	48 8b 35 2e 69 02 00	movq	157998(%rip), %rsi ## Objc selector ref: mainBundle
10002adba:	41 ff d5	callq	*%r13
10002adbd:	48 8b 35 9c 68 02 00	movq	157852(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002adc4:	48 8d 15 75 4c 01 00	leaq	85109(%rip), %rdx ## Objc cfstring ref: @"White Point"
10002adcb:	48 8d 0d ce 20 01 00	leaq	73934(%rip), %rcx ## Objc cfstring ref: @""
10002add2:	48 89 c7	movq	%rax, %rdi
10002add5:	45 31 c0	xorl	%r8d, %r8d
10002add8:	41 ff d5	callq	*%r13
10002addb:	48 8b 35 9e 6e 02 00	movq	159390(%rip), %rsi ## Objc selector ref: setActionName:
10002ade2:	4c 89 ff	movq	%r15, %rdi
10002ade5:	48 89 c2	movq	%rax, %rdx
10002ade8:	41 ff d5	callq	*%r13
10002adeb:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002adef:	ff 15 63 1e 01 00	callq	*73315(%rip) ## literal pool symbol address: _objc_release
10002adf5:	4c 89 f7	movq	%r14, %rdi
10002adf8:	ff 15 62 1e 01 00	callq	*73314(%rip) ## literal pool symbol address: _objc_retain
10002adfe:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002ae02:	48 8b 05 ff 89 02 00	movq	166399(%rip), %rax
10002ae09:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002ae0d:	48 8b 35 14 6f 02 00	movq	159508(%rip), %rsi ## Objc selector ref: setColor:
10002ae14:	4c 8b 3d 05 1e 01 00	movq	73221(%rip), %r15 ## Objc message: +[NSBundle setColor:]
10002ae1b:	4c 89 f2	movq	%r14, %rdx
10002ae1e:	41 ff d7	callq	*%r15
10002ae21:	48 8b 35 98 64 02 00	movq	156824(%rip), %rsi ## Objc selector ref: genericAction
10002ae28:	48 89 df	movq	%rbx, %rdi
10002ae2b:	4c 89 f8	movq	%r15, %rax
10002ae2e:	48 83 c4 08	addq	$8, %rsp
10002ae32:	5b	popq	%rbx
10002ae33:	41 5c	popq	%r12
10002ae35:	41 5d	popq	%r13
10002ae37:	41 5e	popq	%r14
10002ae39:	41 5f	popq	%r15
10002ae3b:	5d	popq	%rbp
10002ae3c:	ff e0	jmpq	*%rax
10002ae3e:	48 83 c4 08	addq	$8, %rsp
10002ae42:	5b	popq	%rbx
10002ae43:	41 5c	popq	%r12
10002ae45:	41 5d	popq	%r13
10002ae47:	41 5e	popq	%r14
10002ae49:	41 5f	popq	%r15
10002ae4b:	5d	popq	%rbp
10002ae4c:	c3	retq
10002ae4d:	55	pushq	%rbp
10002ae4e:	48 89 e5	movq	%rsp, %rbp
10002ae51:	41 57	pushq	%r15
10002ae53:	41 56	pushq	%r14
10002ae55:	41 55	pushq	%r13
10002ae57:	41 54	pushq	%r12
10002ae59:	53	pushq	%rbx
10002ae5a:	50	pushq	%rax
10002ae5b:	48 89 fb	movq	%rdi, %rbx
10002ae5e:	4c 8b 25 c3 89 02 00	movq	166339(%rip), %r12
10002ae65:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002ae69:	48 39 d7	cmpq	%rdx, %rdi
10002ae6c:	0f 84 f3 00 00 00	je	0x10002af65
10002ae72:	49 89 d6	movq	%rdx, %r14
10002ae75:	48 85 ff	testq	%rdi, %rdi
10002ae78:	0f 84 8b 00 00 00	je	0x10002af09
10002ae7e:	4c 8b 3d 5b 89 02 00	movq	166235(%rip), %r15
10002ae85:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002ae89:	48 8b 35 98 75 02 00	movq	161176(%rip), %rsi ## Objc selector ref: undoManager
10002ae90:	4c 8b 2d 89 1d 01 00	movq	73097(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002ae97:	41 ff d5	callq	*%r13
10002ae9a:	48 8b 0d d7 6f 02 00	movq	159703(%rip), %rcx ## Objc selector ref: setGamma:
10002aea1:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002aea5:	48 8b 35 e4 6b 02 00	movq	158692(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002aeac:	48 89 c7	movq	%rax, %rdi
10002aeaf:	48 89 da	movq	%rbx, %rdx
10002aeb2:	41 ff d5	callq	*%r13
10002aeb5:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002aeb9:	48 8b 35 68 75 02 00	movq	161128(%rip), %rsi ## Objc selector ref: undoManager
10002aec0:	41 ff d5	callq	*%r13
10002aec3:	49 89 c7	movq	%rax, %r15
10002aec6:	48 8b 3d d3 76 02 00	movq	161491(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002aecd:	48 8b 35 14 68 02 00	movq	157716(%rip), %rsi ## Objc selector ref: mainBundle
10002aed4:	41 ff d5	callq	*%r13
10002aed7:	48 8b 35 82 67 02 00	movq	157570(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002aede:	48 8d 15 7b 4b 01 00	leaq	84859(%rip), %rdx ## Objc cfstring ref: @"Gamma"
10002aee5:	48 8d 0d b4 1f 01 00	leaq	73652(%rip), %rcx ## Objc cfstring ref: @""
10002aeec:	48 89 c7	movq	%rax, %rdi
10002aeef:	45 31 c0	xorl	%r8d, %r8d
10002aef2:	41 ff d5	callq	*%r13
10002aef5:	48 8b 35 84 6d 02 00	movq	159108(%rip), %rsi ## Objc selector ref: setActionName:
10002aefc:	4c 89 ff	movq	%r15, %rdi
10002aeff:	48 89 c2	movq	%rax, %rdx
10002af02:	41 ff d5	callq	*%r13
10002af05:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002af09:	ff 15 49 1d 01 00	callq	*73033(%rip) ## literal pool symbol address: _objc_release
10002af0f:	4c 89 f7	movq	%r14, %rdi
10002af12:	ff 15 48 1d 01 00	callq	*73032(%rip) ## literal pool symbol address: _objc_retain
10002af18:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002af1c:	48 8b 05 c5 88 02 00	movq	166085(%rip), %rax
10002af23:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002af27:	48 8b 35 62 63 02 00	movq	156514(%rip), %rsi ## Objc selector ref: floatValue
10002af2e:	4c 8b 25 eb 1c 01 00	movq	72939(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002af35:	4c 89 f7	movq	%r14, %rdi
10002af38:	41 ff d4	callq	*%r12
10002af3b:	48 8b 35 f6 6e 02 00	movq	159478(%rip), %rsi ## Objc selector ref: setFloatValue:
10002af42:	4c 89 ff	movq	%r15, %rdi
10002af45:	41 ff d4	callq	*%r12
10002af48:	48 8b 35 71 63 02 00	movq	156529(%rip), %rsi ## Objc selector ref: genericAction
10002af4f:	48 89 df	movq	%rbx, %rdi
10002af52:	4c 89 e0	movq	%r12, %rax
10002af55:	48 83 c4 08	addq	$8, %rsp
10002af59:	5b	popq	%rbx
10002af5a:	41 5c	popq	%r12
10002af5c:	41 5d	popq	%r13
10002af5e:	41 5e	popq	%r14
10002af60:	41 5f	popq	%r15
10002af62:	5d	popq	%rbp
10002af63:	ff e0	jmpq	*%rax
10002af65:	48 83 c4 08	addq	$8, %rsp
10002af69:	5b	popq	%rbx
10002af6a:	41 5c	popq	%r12
10002af6c:	41 5d	popq	%r13
10002af6e:	41 5e	popq	%r14
10002af70:	41 5f	popq	%r15
10002af72:	5d	popq	%rbp
10002af73:	c3	retq
10002af74:	55	pushq	%rbp
10002af75:	48 89 e5	movq	%rsp, %rbp
10002af78:	41 57	pushq	%r15
10002af7a:	41 56	pushq	%r14
10002af7c:	41 55	pushq	%r13
10002af7e:	41 54	pushq	%r12
10002af80:	53	pushq	%rbx
10002af81:	50	pushq	%rax
10002af82:	48 89 fb	movq	%rdi, %rbx
10002af85:	4c 8b 25 cc 88 02 00	movq	166092(%rip), %r12
10002af8c:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002af90:	48 39 d7	cmpq	%rdx, %rdi
10002af93:	0f 84 f3 00 00 00	je	0x10002b08c
10002af99:	49 89 d6	movq	%rdx, %r14
10002af9c:	48 85 ff	testq	%rdi, %rdi
10002af9f:	0f 84 8b 00 00 00	je	0x10002b030
10002afa5:	4c 8b 3d 34 88 02 00	movq	165940(%rip), %r15
10002afac:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002afb0:	48 8b 35 71 74 02 00	movq	160881(%rip), %rsi ## Objc selector ref: undoManager
10002afb7:	4c 8b 2d 62 1c 01 00	movq	72802(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002afbe:	41 ff d5	callq	*%r13
10002afc1:	48 8b 0d c0 70 02 00	movq	159936(%rip), %rcx ## Objc selector ref: setSaturation:
10002afc8:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002afcc:	48 8b 35 bd 6a 02 00	movq	158397(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002afd3:	48 89 c7	movq	%rax, %rdi
10002afd6:	48 89 da	movq	%rbx, %rdx
10002afd9:	41 ff d5	callq	*%r13
10002afdc:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002afe0:	48 8b 35 41 74 02 00	movq	160833(%rip), %rsi ## Objc selector ref: undoManager
10002afe7:	41 ff d5	callq	*%r13
10002afea:	49 89 c7	movq	%rax, %r15
10002afed:	48 8b 3d ac 75 02 00	movq	161196(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002aff4:	48 8b 35 ed 66 02 00	movq	157421(%rip), %rsi ## Objc selector ref: mainBundle
10002affb:	41 ff d5	callq	*%r13
10002affe:	48 8b 35 5b 66 02 00	movq	157275(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002b005:	48 8d 15 d4 36 01 00	leaq	79572(%rip), %rdx ## Objc cfstring ref: @"Saturation"
10002b00c:	48 8d 0d 8d 1e 01 00	leaq	73357(%rip), %rcx ## Objc cfstring ref: @""
10002b013:	48 89 c7	movq	%rax, %rdi
10002b016:	45 31 c0	xorl	%r8d, %r8d
10002b019:	41 ff d5	callq	*%r13
10002b01c:	48 8b 35 5d 6c 02 00	movq	158813(%rip), %rsi ## Objc selector ref: setActionName:
10002b023:	4c 89 ff	movq	%r15, %rdi
10002b026:	48 89 c2	movq	%rax, %rdx
10002b029:	41 ff d5	callq	*%r13
10002b02c:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002b030:	ff 15 22 1c 01 00	callq	*72738(%rip) ## literal pool symbol address: _objc_release
10002b036:	4c 89 f7	movq	%r14, %rdi
10002b039:	ff 15 21 1c 01 00	callq	*72737(%rip) ## literal pool symbol address: _objc_retain
10002b03f:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002b043:	48 8b 05 06 88 02 00	movq	165894(%rip), %rax
10002b04a:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002b04e:	48 8b 35 3b 62 02 00	movq	156219(%rip), %rsi ## Objc selector ref: floatValue
10002b055:	4c 8b 25 c4 1b 01 00	movq	72644(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002b05c:	4c 89 f7	movq	%r14, %rdi
10002b05f:	41 ff d4	callq	*%r12
10002b062:	48 8b 35 cf 6d 02 00	movq	159183(%rip), %rsi ## Objc selector ref: setFloatValue:
10002b069:	4c 89 ff	movq	%r15, %rdi
10002b06c:	41 ff d4	callq	*%r12
10002b06f:	48 8b 35 4a 62 02 00	movq	156234(%rip), %rsi ## Objc selector ref: genericAction
10002b076:	48 89 df	movq	%rbx, %rdi
10002b079:	4c 89 e0	movq	%r12, %rax
10002b07c:	48 83 c4 08	addq	$8, %rsp
10002b080:	5b	popq	%rbx
10002b081:	41 5c	popq	%r12
10002b083:	41 5d	popq	%r13
10002b085:	41 5e	popq	%r14
10002b087:	41 5f	popq	%r15
10002b089:	5d	popq	%rbp
10002b08a:	ff e0	jmpq	*%rax
10002b08c:	48 83 c4 08	addq	$8, %rsp
10002b090:	5b	popq	%rbx
10002b091:	41 5c	popq	%r12
10002b093:	41 5d	popq	%r13
10002b095:	41 5e	popq	%r14
10002b097:	41 5f	popq	%r15
10002b099:	5d	popq	%rbp
10002b09a:	c3	retq
10002b09b:	55	pushq	%rbp
10002b09c:	48 89 e5	movq	%rsp, %rbp
10002b09f:	41 57	pushq	%r15
10002b0a1:	41 56	pushq	%r14
10002b0a3:	41 55	pushq	%r13
10002b0a5:	41 54	pushq	%r12
10002b0a7:	53	pushq	%rbx
10002b0a8:	50	pushq	%rax
10002b0a9:	48 89 fb	movq	%rdi, %rbx
10002b0ac:	4c 8b 25 95 87 02 00	movq	165781(%rip), %r12
10002b0b3:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002b0b7:	48 39 d7	cmpq	%rdx, %rdi
10002b0ba:	0f 84 f3 00 00 00	je	0x10002b1b3
10002b0c0:	49 89 d6	movq	%rdx, %r14
10002b0c3:	48 85 ff	testq	%rdi, %rdi
10002b0c6:	0f 84 8b 00 00 00	je	0x10002b157
10002b0cc:	4c 8b 3d 0d 87 02 00	movq	165645(%rip), %r15
10002b0d3:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b0d7:	48 8b 35 4a 73 02 00	movq	160586(%rip), %rsi ## Objc selector ref: undoManager
10002b0de:	4c 8b 2d 3b 1b 01 00	movq	72507(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002b0e5:	41 ff d5	callq	*%r13
10002b0e8:	48 8b 0d 59 6c 02 00	movq	158809(%rip), %rcx ## Objc selector ref: setContrast:
10002b0ef:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002b0f3:	48 8b 35 96 69 02 00	movq	158102(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002b0fa:	48 89 c7	movq	%rax, %rdi
10002b0fd:	48 89 da	movq	%rbx, %rdx
10002b100:	41 ff d5	callq	*%r13
10002b103:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b107:	48 8b 35 1a 73 02 00	movq	160538(%rip), %rsi ## Objc selector ref: undoManager
10002b10e:	41 ff d5	callq	*%r13
10002b111:	49 89 c7	movq	%rax, %r15
10002b114:	48 8b 3d 85 74 02 00	movq	160901(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002b11b:	48 8b 35 c6 65 02 00	movq	157126(%rip), %rsi ## Objc selector ref: mainBundle
10002b122:	41 ff d5	callq	*%r13
10002b125:	48 8b 35 34 65 02 00	movq	156980(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002b12c:	48 8d 15 4d 49 01 00	leaq	84301(%rip), %rdx ## Objc cfstring ref: @"Contrast"
10002b133:	48 8d 0d 66 1d 01 00	leaq	73062(%rip), %rcx ## Objc cfstring ref: @""
10002b13a:	48 89 c7	movq	%rax, %rdi
10002b13d:	45 31 c0	xorl	%r8d, %r8d
10002b140:	41 ff d5	callq	*%r13
10002b143:	48 8b 35 36 6b 02 00	movq	158518(%rip), %rsi ## Objc selector ref: setActionName:
10002b14a:	4c 89 ff	movq	%r15, %rdi
10002b14d:	48 89 c2	movq	%rax, %rdx
10002b150:	41 ff d5	callq	*%r13
10002b153:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002b157:	ff 15 fb 1a 01 00	callq	*72443(%rip) ## literal pool symbol address: _objc_release
10002b15d:	4c 89 f7	movq	%r14, %rdi
10002b160:	ff 15 fa 1a 01 00	callq	*72442(%rip) ## literal pool symbol address: _objc_retain
10002b166:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002b16a:	48 8b 05 cf 86 02 00	movq	165583(%rip), %rax
10002b171:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002b175:	48 8b 35 14 61 02 00	movq	155924(%rip), %rsi ## Objc selector ref: floatValue
10002b17c:	4c 8b 25 9d 1a 01 00	movq	72349(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002b183:	4c 89 f7	movq	%r14, %rdi
10002b186:	41 ff d4	callq	*%r12
10002b189:	48 8b 35 a8 6c 02 00	movq	158888(%rip), %rsi ## Objc selector ref: setFloatValue:
10002b190:	4c 89 ff	movq	%r15, %rdi
10002b193:	41 ff d4	callq	*%r12
10002b196:	48 8b 35 23 61 02 00	movq	155939(%rip), %rsi ## Objc selector ref: genericAction
10002b19d:	48 89 df	movq	%rbx, %rdi
10002b1a0:	4c 89 e0	movq	%r12, %rax
10002b1a3:	48 83 c4 08	addq	$8, %rsp
10002b1a7:	5b	popq	%rbx
10002b1a8:	41 5c	popq	%r12
10002b1aa:	41 5d	popq	%r13
10002b1ac:	41 5e	popq	%r14
10002b1ae:	41 5f	popq	%r15
10002b1b0:	5d	popq	%rbp
10002b1b1:	ff e0	jmpq	*%rax
10002b1b3:	48 83 c4 08	addq	$8, %rsp
10002b1b7:	5b	popq	%rbx
10002b1b8:	41 5c	popq	%r12
10002b1ba:	41 5d	popq	%r13
10002b1bc:	41 5e	popq	%r14
10002b1be:	41 5f	popq	%r15
10002b1c0:	5d	popq	%rbp
10002b1c1:	c3	retq
10002b1c2:	55	pushq	%rbp
10002b1c3:	48 89 e5	movq	%rsp, %rbp
10002b1c6:	41 57	pushq	%r15
10002b1c8:	41 56	pushq	%r14
10002b1ca:	41 55	pushq	%r13
10002b1cc:	41 54	pushq	%r12
10002b1ce:	53	pushq	%rbx
10002b1cf:	50	pushq	%rax
10002b1d0:	48 89 fb	movq	%rdi, %rbx
10002b1d3:	4c 8b 25 5e 86 02 00	movq	165470(%rip), %r12
10002b1da:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002b1de:	48 39 d7	cmpq	%rdx, %rdi
10002b1e1:	0f 84 f3 00 00 00	je	0x10002b2da
10002b1e7:	49 89 d6	movq	%rdx, %r14
10002b1ea:	48 85 ff	testq	%rdi, %rdi
10002b1ed:	0f 84 8b 00 00 00	je	0x10002b27e
10002b1f3:	4c 8b 3d e6 85 02 00	movq	165350(%rip), %r15
10002b1fa:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b1fe:	48 8b 35 23 72 02 00	movq	160291(%rip), %rsi ## Objc selector ref: undoManager
10002b205:	4c 8b 2d 14 1a 01 00	movq	72212(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002b20c:	41 ff d5	callq	*%r13
10002b20f:	48 8b 0d f2 6a 02 00	movq	158450(%rip), %rcx ## Objc selector ref: setBrightness:
10002b216:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002b21a:	48 8b 35 6f 68 02 00	movq	157807(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002b221:	48 89 c7	movq	%rax, %rdi
10002b224:	48 89 da	movq	%rbx, %rdx
10002b227:	41 ff d5	callq	*%r13
10002b22a:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b22e:	48 8b 35 f3 71 02 00	movq	160243(%rip), %rsi ## Objc selector ref: undoManager
10002b235:	41 ff d5	callq	*%r13
10002b238:	49 89 c7	movq	%rax, %r15
10002b23b:	48 8b 3d 5e 73 02 00	movq	160606(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002b242:	48 8b 35 9f 64 02 00	movq	156831(%rip), %rsi ## Objc selector ref: mainBundle
10002b249:	41 ff d5	callq	*%r13
10002b24c:	48 8b 35 0d 64 02 00	movq	156685(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002b253:	48 8d 15 46 48 01 00	leaq	84038(%rip), %rdx ## Objc cfstring ref: @"Brightness"
10002b25a:	48 8d 0d 3f 1c 01 00	leaq	72767(%rip), %rcx ## Objc cfstring ref: @""
10002b261:	48 89 c7	movq	%rax, %rdi
10002b264:	45 31 c0	xorl	%r8d, %r8d
10002b267:	41 ff d5	callq	*%r13
10002b26a:	48 8b 35 0f 6a 02 00	movq	158223(%rip), %rsi ## Objc selector ref: setActionName:
10002b271:	4c 89 ff	movq	%r15, %rdi
10002b274:	48 89 c2	movq	%rax, %rdx
10002b277:	41 ff d5	callq	*%r13
10002b27a:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002b27e:	ff 15 d4 19 01 00	callq	*72148(%rip) ## literal pool symbol address: _objc_release
10002b284:	4c 89 f7	movq	%r14, %rdi
10002b287:	ff 15 d3 19 01 00	callq	*72147(%rip) ## literal pool symbol address: _objc_retain
10002b28d:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002b291:	48 8b 05 98 85 02 00	movq	165272(%rip), %rax
10002b298:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002b29c:	48 8b 35 ed 5f 02 00	movq	155629(%rip), %rsi ## Objc selector ref: floatValue
10002b2a3:	4c 8b 25 76 19 01 00	movq	72054(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002b2aa:	4c 89 f7	movq	%r14, %rdi
10002b2ad:	41 ff d4	callq	*%r12
10002b2b0:	48 8b 35 81 6b 02 00	movq	158593(%rip), %rsi ## Objc selector ref: setFloatValue:
10002b2b7:	4c 89 ff	movq	%r15, %rdi
10002b2ba:	41 ff d4	callq	*%r12
10002b2bd:	48 8b 35 fc 5f 02 00	movq	155644(%rip), %rsi ## Objc selector ref: genericAction
10002b2c4:	48 89 df	movq	%rbx, %rdi
10002b2c7:	4c 89 e0	movq	%r12, %rax
10002b2ca:	48 83 c4 08	addq	$8, %rsp
10002b2ce:	5b	popq	%rbx
10002b2cf:	41 5c	popq	%r12
10002b2d1:	41 5d	popq	%r13
10002b2d3:	41 5e	popq	%r14
10002b2d5:	41 5f	popq	%r15
10002b2d7:	5d	popq	%rbp
10002b2d8:	ff e0	jmpq	*%rax
10002b2da:	48 83 c4 08	addq	$8, %rsp
10002b2de:	5b	popq	%rbx
10002b2df:	41 5c	popq	%r12
10002b2e1:	41 5d	popq	%r13
10002b2e3:	41 5e	popq	%r14
10002b2e5:	41 5f	popq	%r15
10002b2e7:	5d	popq	%rbp
10002b2e8:	c3	retq
10002b2e9:	55	pushq	%rbp
10002b2ea:	48 89 e5	movq	%rsp, %rbp
10002b2ed:	41 57	pushq	%r15
10002b2ef:	41 56	pushq	%r14
10002b2f1:	41 55	pushq	%r13
10002b2f3:	41 54	pushq	%r12
10002b2f5:	53	pushq	%rbx
10002b2f6:	50	pushq	%rax
10002b2f7:	48 89 fb	movq	%rdi, %rbx
10002b2fa:	4c 8b 25 67 85 02 00	movq	165223(%rip), %r12
10002b301:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002b305:	48 39 d7	cmpq	%rdx, %rdi
10002b308:	0f 84 f3 00 00 00	je	0x10002b401
10002b30e:	49 89 d6	movq	%rdx, %r14
10002b311:	48 85 ff	testq	%rdi, %rdi
10002b314:	0f 84 8b 00 00 00	je	0x10002b3a5
10002b31a:	4c 8b 3d bf 84 02 00	movq	165055(%rip), %r15
10002b321:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b325:	48 8b 35 fc 70 02 00	movq	159996(%rip), %rsi ## Objc selector ref: undoManager
10002b32c:	4c 8b 2d ed 18 01 00	movq	71917(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002b333:	41 ff d5	callq	*%r13
10002b336:	48 8b 0d 93 6d 02 00	movq	159123(%rip), %rcx ## Objc selector ref: setSharpness:
10002b33d:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002b341:	48 8b 35 48 67 02 00	movq	157512(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002b348:	48 89 c7	movq	%rax, %rdi
10002b34b:	48 89 da	movq	%rbx, %rdx
10002b34e:	41 ff d5	callq	*%r13
10002b351:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b355:	48 8b 35 cc 70 02 00	movq	159948(%rip), %rsi ## Objc selector ref: undoManager
10002b35c:	41 ff d5	callq	*%r13
10002b35f:	49 89 c7	movq	%rax, %r15
10002b362:	48 8b 3d 37 72 02 00	movq	160311(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002b369:	48 8b 35 78 63 02 00	movq	156536(%rip), %rsi ## Objc selector ref: mainBundle
10002b370:	41 ff d5	callq	*%r13
10002b373:	48 8b 35 e6 62 02 00	movq	156390(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002b37a:	48 8d 15 3f 47 01 00	leaq	83775(%rip), %rdx ## Objc cfstring ref: @"Sharpness"
10002b381:	48 8d 0d 18 1b 01 00	leaq	72472(%rip), %rcx ## Objc cfstring ref: @""
10002b388:	48 89 c7	movq	%rax, %rdi
10002b38b:	45 31 c0	xorl	%r8d, %r8d
10002b38e:	41 ff d5	callq	*%r13
10002b391:	48 8b 35 e8 68 02 00	movq	157928(%rip), %rsi ## Objc selector ref: setActionName:
10002b398:	4c 89 ff	movq	%r15, %rdi
10002b39b:	48 89 c2	movq	%rax, %rdx
10002b39e:	41 ff d5	callq	*%r13
10002b3a1:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002b3a5:	ff 15 ad 18 01 00	callq	*71853(%rip) ## literal pool symbol address: _objc_release
10002b3ab:	4c 89 f7	movq	%r14, %rdi
10002b3ae:	ff 15 ac 18 01 00	callq	*71852(%rip) ## literal pool symbol address: _objc_retain
10002b3b4:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002b3b8:	48 8b 05 a1 84 02 00	movq	165025(%rip), %rax
10002b3bf:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002b3c3:	48 8b 35 c6 5e 02 00	movq	155334(%rip), %rsi ## Objc selector ref: floatValue
10002b3ca:	4c 8b 25 4f 18 01 00	movq	71759(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002b3d1:	4c 89 f7	movq	%r14, %rdi
10002b3d4:	41 ff d4	callq	*%r12
10002b3d7:	48 8b 35 5a 6a 02 00	movq	158298(%rip), %rsi ## Objc selector ref: setFloatValue:
10002b3de:	4c 89 ff	movq	%r15, %rdi
10002b3e1:	41 ff d4	callq	*%r12
10002b3e4:	48 8b 35 d5 5e 02 00	movq	155349(%rip), %rsi ## Objc selector ref: genericAction
10002b3eb:	48 89 df	movq	%rbx, %rdi
10002b3ee:	4c 89 e0	movq	%r12, %rax
10002b3f1:	48 83 c4 08	addq	$8, %rsp
10002b3f5:	5b	popq	%rbx
10002b3f6:	41 5c	popq	%r12
10002b3f8:	41 5d	popq	%r13
10002b3fa:	41 5e	popq	%r14
10002b3fc:	41 5f	popq	%r15
10002b3fe:	5d	popq	%rbp
10002b3ff:	ff e0	jmpq	*%rax
10002b401:	48 83 c4 08	addq	$8, %rsp
10002b405:	5b	popq	%rbx
10002b406:	41 5c	popq	%r12
10002b408:	41 5d	popq	%r13
10002b40a:	41 5e	popq	%r14
10002b40c:	41 5f	popq	%r15
10002b40e:	5d	popq	%rbp
10002b40f:	c3	retq
10002b410:	55	pushq	%rbp
10002b411:	48 89 e5	movq	%rsp, %rbp
10002b414:	41 57	pushq	%r15
10002b416:	41 56	pushq	%r14
10002b418:	41 55	pushq	%r13
10002b41a:	41 54	pushq	%r12
10002b41c:	53	pushq	%rbx
10002b41d:	50	pushq	%rax
10002b41e:	48 89 fb	movq	%rdi, %rbx
10002b421:	4c 8b 25 50 84 02 00	movq	164944(%rip), %r12
10002b428:	4a 8b 3c 27	movq	(%rdi,%r12), %rdi
10002b42c:	48 39 d7	cmpq	%rdx, %rdi
10002b42f:	0f 84 f3 00 00 00	je	0x10002b528
10002b435:	49 89 d6	movq	%rdx, %r14
10002b438:	48 85 ff	testq	%rdi, %rdi
10002b43b:	0f 84 8b 00 00 00	je	0x10002b4cc
10002b441:	4c 8b 3d 98 83 02 00	movq	164760(%rip), %r15
10002b448:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b44c:	48 8b 35 d5 6f 02 00	movq	159701(%rip), %rsi ## Objc selector ref: undoManager
10002b453:	4c 8b 2d c6 17 01 00	movq	71622(%rip), %r13 ## Objc message: -[%rdi undoManager]
10002b45a:	41 ff d5	callq	*%r13
10002b45d:	48 8b 0d 64 6c 02 00	movq	158820(%rip), %rcx ## Objc selector ref: setSepiaIntensity:
10002b464:	4e 8b 04 23	movq	(%rbx,%r12), %r8
10002b468:	48 8b 35 21 66 02 00	movq	157217(%rip), %rsi ## Objc selector ref: registerUndoWithTarget:selector:object:
10002b46f:	48 89 c7	movq	%rax, %rdi
10002b472:	48 89 da	movq	%rbx, %rdx
10002b475:	41 ff d5	callq	*%r13
10002b478:	4a 8b 3c 3b	movq	(%rbx,%r15), %rdi
10002b47c:	48 8b 35 a5 6f 02 00	movq	159653(%rip), %rsi ## Objc selector ref: undoManager
10002b483:	41 ff d5	callq	*%r13
10002b486:	49 89 c7	movq	%rax, %r15
10002b489:	48 8b 3d 10 71 02 00	movq	160016(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002b490:	48 8b 35 51 62 02 00	movq	156241(%rip), %rsi ## Objc selector ref: mainBundle
10002b497:	41 ff d5	callq	*%r13
10002b49a:	48 8b 35 bf 61 02 00	movq	156095(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002b4a1:	48 8d 15 38 46 01 00	leaq	83512(%rip), %rdx ## Objc cfstring ref: @"Sepia"
10002b4a8:	48 8d 0d f1 19 01 00	leaq	72177(%rip), %rcx ## Objc cfstring ref: @""
10002b4af:	48 89 c7	movq	%rax, %rdi
10002b4b2:	45 31 c0	xorl	%r8d, %r8d
10002b4b5:	41 ff d5	callq	*%r13
10002b4b8:	48 8b 35 c1 67 02 00	movq	157633(%rip), %rsi ## Objc selector ref: setActionName:
10002b4bf:	4c 89 ff	movq	%r15, %rdi
10002b4c2:	48 89 c2	movq	%rax, %rdx
10002b4c5:	41 ff d5	callq	*%r13
10002b4c8:	4a 8b 3c 23	movq	(%rbx,%r12), %rdi
10002b4cc:	ff 15 86 17 01 00	callq	*71558(%rip) ## literal pool symbol address: _objc_release
10002b4d2:	4c 89 f7	movq	%r14, %rdi
10002b4d5:	ff 15 85 17 01 00	callq	*71557(%rip) ## literal pool symbol address: _objc_retain
10002b4db:	4a 89 04 23	movq	%rax, (%rbx,%r12)
10002b4df:	48 8b 05 8a 83 02 00	movq	164746(%rip), %rax
10002b4e6:	4c 8b 3c 03	movq	(%rbx,%rax), %r15
10002b4ea:	48 8b 35 9f 5d 02 00	movq	155039(%rip), %rsi ## Objc selector ref: floatValue
10002b4f1:	4c 8b 25 28 17 01 00	movq	71464(%rip), %r12 ## Objc message: +[NSBundle floatValue]
10002b4f8:	4c 89 f7	movq	%r14, %rdi
10002b4fb:	41 ff d4	callq	*%r12
10002b4fe:	48 8b 35 33 69 02 00	movq	158003(%rip), %rsi ## Objc selector ref: setFloatValue:
10002b505:	4c 89 ff	movq	%r15, %rdi
10002b508:	41 ff d4	callq	*%r12
10002b50b:	48 8b 35 ae 5d 02 00	movq	155054(%rip), %rsi ## Objc selector ref: genericAction
10002b512:	48 89 df	movq	%rbx, %rdi
10002b515:	4c 89 e0	movq	%r12, %rax
10002b518:	48 83 c4 08	addq	$8, %rsp
10002b51c:	5b	popq	%rbx
10002b51d:	41 5c	popq	%r12
10002b51f:	41 5d	popq	%r13
10002b521:	41 5e	popq	%r14
10002b523:	41 5f	popq	%r15
10002b525:	5d	popq	%rbp
10002b526:	ff e0	jmpq	*%rax
10002b528:	48 83 c4 08	addq	$8, %rsp
10002b52c:	5b	popq	%rbx
10002b52d:	41 5c	popq	%r12
10002b52f:	41 5d	popq	%r13
10002b531:	41 5e	popq	%r14
10002b533:	41 5f	popq	%r15
10002b535:	5d	popq	%rbp
10002b536:	c3	retq
10002b537:	55	pushq	%rbp
10002b538:	48 89 e5	movq	%rsp, %rbp
10002b53b:	41 57	pushq	%r15
10002b53d:	41 56	pushq	%r14
10002b53f:	41 55	pushq	%r13
10002b541:	41 54	pushq	%r12
10002b543:	53	pushq	%rbx
10002b544:	48 83 ec 38	subq	$56, %rsp
10002b548:	48 89 fb	movq	%rdi, %rbx
10002b54b:	48 8b 05 5e 70 02 00	movq	159838(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSArray
10002b552:	48 89 45 a8	movq	%rax, -88(%rbp)
10002b556:	48 8b 35 93 5c 02 00	movq	154771(%rip), %rsi ## Objc selector ref: exposure
10002b55d:	4c 8b 3d bc 16 01 00	movq	71356(%rip), %r15 ## Objc message: +[NSArray exposure]
10002b564:	41 ff d7	callq	*%r15
10002b567:	48 89 45 b0	movq	%rax, -80(%rbp)
10002b56b:	48 8b 35 66 6f 02 00	movq	159590(%rip), %rsi ## Objc selector ref: whitepoint
10002b572:	48 89 df	movq	%rbx, %rdi
10002b575:	41 ff d7	callq	*%r15
10002b578:	48 89 45 b8	movq	%rax, -72(%rbp)
10002b57c:	48 8b 35 1d 58 02 00	movq	153629(%rip), %rsi ## Objc selector ref: blackpoint
10002b583:	48 89 df	movq	%rbx, %rdi
10002b586:	41 ff d7	callq	*%r15
10002b589:	48 89 45 c0	movq	%rax, -64(%rbp)
10002b58d:	48 8b 35 24 5d 02 00	movq	154916(%rip), %rsi ## Objc selector ref: gamma
10002b594:	48 89 df	movq	%rbx, %rdi
10002b597:	41 ff d7	callq	*%r15
10002b59a:	48 89 45 c8	movq	%rax, -56(%rbp)
10002b59e:	48 8b 35 3b 58 02 00	movq	153659(%rip), %rsi ## Objc selector ref: brightness
10002b5a5:	48 89 df	movq	%rbx, %rdi
10002b5a8:	41 ff d7	callq	*%r15
10002b5ab:	48 89 45 d0	movq	%rax, -48(%rbp)
10002b5af:	48 8b 35 b2 59 02 00	movq	154034(%rip), %rsi ## Objc selector ref: contrast
10002b5b6:	48 89 df	movq	%rbx, %rdi
10002b5b9:	41 ff d7	callq	*%r15
10002b5bc:	49 89 c4	movq	%rax, %r12
10002b5bf:	48 8b 35 b2 65 02 00	movq	157106(%rip), %rsi ## Objc selector ref: saturation
10002b5c6:	48 89 df	movq	%rbx, %rdi
10002b5c9:	41 ff d7	callq	*%r15
10002b5cc:	49 89 c5	movq	%rax, %r13
10002b5cf:	48 8b 35 5a 6c 02 00	movq	158810(%rip), %rsi ## Objc selector ref: sharpness
10002b5d6:	48 89 df	movq	%rbx, %rdi
10002b5d9:	41 ff d7	callq	*%r15
10002b5dc:	49 89 c6	movq	%rax, %r14
10002b5df:	48 8b 35 82 66 02 00	movq	157314(%rip), %rsi ## Objc selector ref: sepiaintensity
10002b5e6:	48 89 df	movq	%rbx, %rdi
10002b5e9:	41 ff d7	callq	*%r15
10002b5ec:	48 89 c3	movq	%rax, %rbx
10002b5ef:	48 8b 35 42 57 02 00	movq	153410(%rip), %rsi ## Objc selector ref: arrayWithObjects:
10002b5f6:	48 8b 7d a8	movq	-88(%rbp), %rdi
10002b5fa:	48 8b 55 b0	movq	-80(%rbp), %rdx
10002b5fe:	48 8b 4d b8	movq	-72(%rbp), %rcx
10002b602:	4c 8b 45 c0	movq	-64(%rbp), %r8
10002b606:	4c 8b 4d c8	movq	-56(%rbp), %r9
10002b60a:	31 c0	xorl	%eax, %eax
10002b60c:	6a 00	pushq	$0
10002b60e:	53	pushq	%rbx
10002b60f:	41 56	pushq	%r14
10002b611:	41 55	pushq	%r13
10002b613:	41 54	pushq	%r12
10002b615:	ff 75 d0	pushq	-48(%rbp)
10002b618:	41 ff d7	callq	*%r15
10002b61b:	48 83 c4 68	addq	$104, %rsp
10002b61f:	5b	popq	%rbx
10002b620:	41 5c	popq	%r12
10002b622:	41 5d	popq	%r13
10002b624:	41 5e	popq	%r14
10002b626:	41 5f	popq	%r15
10002b628:	5d	popq	%rbp
10002b629:	c3	retq
10002b62a:	55	pushq	%rbp
10002b62b:	48 89 e5	movq	%rsp, %rbp
10002b62e:	41 57	pushq	%r15
10002b630:	41 56	pushq	%r14
10002b632:	41 55	pushq	%r13
10002b634:	41 54	pushq	%r12
10002b636:	53	pushq	%rbx
10002b637:	50	pushq	%rax
10002b638:	49 89 d6	movq	%rdx, %r14
10002b63b:	48 89 fb	movq	%rdi, %rbx
10002b63e:	48 8b 05 b3 81 02 00	movq	164275(%rip), %rax
10002b645:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002b649:	4c 8b 3d 08 16 01 00	movq	71176(%rip), %r15 ## literal pool symbol address: _objc_release
10002b650:	41 ff d7	callq	*%r15
10002b653:	48 8b 05 b6 81 02 00	movq	164278(%rip), %rax
10002b65a:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b65e:	41 ff d7	callq	*%r15
10002b661:	48 8b 05 98 81 02 00	movq	164248(%rip), %rax
10002b668:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b66c:	41 ff d7	callq	*%r15
10002b66f:	48 8b 05 b2 81 02 00	movq	164274(%rip), %rax
10002b676:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b67a:	41 ff d7	callq	*%r15
10002b67d:	48 8b 05 d4 81 02 00	movq	164308(%rip), %rax
10002b684:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b688:	41 ff d7	callq	*%r15
10002b68b:	48 8b 05 b6 81 02 00	movq	164278(%rip), %rax
10002b692:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b696:	41 ff d7	callq	*%r15
10002b699:	48 8b 05 98 81 02 00	movq	164248(%rip), %rax
10002b6a0:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b6a4:	41 ff d7	callq	*%r15
10002b6a7:	48 8b 05 ba 81 02 00	movq	164282(%rip), %rax
10002b6ae:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b6b2:	41 ff d7	callq	*%r15
10002b6b5:	48 8b 05 bc 81 02 00	movq	164284(%rip), %rax
10002b6bc:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b6c0:	41 ff d7	callq	*%r15
10002b6c3:	4c 8b 3d 96 61 02 00	movq	156054(%rip), %r15 ## Objc selector ref: objectAtIndex:
10002b6ca:	4c 8b 2d 4f 15 01 00	movq	70991(%rip), %r13 ## Objc message: -[%rdi objectAtIndex:]
10002b6d1:	4c 89 f7	movq	%r14, %rdi
10002b6d4:	4c 89 fe	movq	%r15, %rsi
10002b6d7:	31 d2	xorl	%edx, %edx
10002b6d9:	41 ff d5	callq	*%r13
10002b6dc:	4c 8b 25 7d 15 01 00	movq	71037(%rip), %r12 ## literal pool symbol address: _objc_retain
10002b6e3:	48 89 c7	movq	%rax, %rdi
10002b6e6:	41 ff d4	callq	*%r12
10002b6e9:	48 8b 0d 08 81 02 00	movq	164104(%rip), %rcx
10002b6f0:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b6f4:	ba 01 00 00 00	movl	$1, %edx
10002b6f9:	4c 89 f7	movq	%r14, %rdi
10002b6fc:	4c 89 fe	movq	%r15, %rsi
10002b6ff:	41 ff d5	callq	*%r13
10002b702:	48 89 c7	movq	%rax, %rdi
10002b705:	41 ff d4	callq	*%r12
10002b708:	48 8b 0d f1 80 02 00	movq	164081(%rip), %rcx
10002b70f:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b713:	ba 02 00 00 00	movl	$2, %edx
10002b718:	4c 89 f7	movq	%r14, %rdi
10002b71b:	4c 89 fe	movq	%r15, %rsi
10002b71e:	41 ff d5	callq	*%r13
10002b721:	48 89 c7	movq	%rax, %rdi
10002b724:	41 ff d4	callq	*%r12
10002b727:	48 8b 0d e2 80 02 00	movq	164066(%rip), %rcx
10002b72e:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b732:	ba 03 00 00 00	movl	$3, %edx
10002b737:	4c 89 f7	movq	%r14, %rdi
10002b73a:	4c 89 fe	movq	%r15, %rsi
10002b73d:	41 ff d5	callq	*%r13
10002b740:	48 89 c7	movq	%rax, %rdi
10002b743:	41 ff d4	callq	*%r12
10002b746:	48 8b 0d db 80 02 00	movq	164059(%rip), %rcx
10002b74d:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b751:	ba 04 00 00 00	movl	$4, %edx
10002b756:	4c 89 f7	movq	%r14, %rdi
10002b759:	4c 89 fe	movq	%r15, %rsi
10002b75c:	41 ff d5	callq	*%r13
10002b75f:	48 89 c7	movq	%rax, %rdi
10002b762:	41 ff d4	callq	*%r12
10002b765:	48 8b 0d cc 80 02 00	movq	164044(%rip), %rcx
10002b76c:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b770:	ba 05 00 00 00	movl	$5, %edx
10002b775:	4c 89 f7	movq	%r14, %rdi
10002b778:	4c 89 fe	movq	%r15, %rsi
10002b77b:	41 ff d5	callq	*%r13
10002b77e:	48 89 c7	movq	%rax, %rdi
10002b781:	41 ff d4	callq	*%r12
10002b784:	48 8b 0d bd 80 02 00	movq	164029(%rip), %rcx
10002b78b:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b78f:	ba 06 00 00 00	movl	$6, %edx
10002b794:	4c 89 f7	movq	%r14, %rdi
10002b797:	4c 89 fe	movq	%r15, %rsi
10002b79a:	41 ff d5	callq	*%r13
10002b79d:	48 89 c7	movq	%rax, %rdi
10002b7a0:	41 ff d4	callq	*%r12
10002b7a3:	48 8b 0d ae 80 02 00	movq	164014(%rip), %rcx
10002b7aa:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b7ae:	ba 07 00 00 00	movl	$7, %edx
10002b7b3:	4c 89 f7	movq	%r14, %rdi
10002b7b6:	4c 89 fe	movq	%r15, %rsi
10002b7b9:	41 ff d5	callq	*%r13
10002b7bc:	48 89 c7	movq	%rax, %rdi
10002b7bf:	41 ff d4	callq	*%r12
10002b7c2:	48 8b 0d 9f 80 02 00	movq	163999(%rip), %rcx
10002b7c9:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b7cd:	ba 08 00 00 00	movl	$8, %edx
10002b7d2:	4c 89 f7	movq	%r14, %rdi
10002b7d5:	4c 89 fe	movq	%r15, %rsi
10002b7d8:	41 ff d5	callq	*%r13
10002b7db:	48 89 c7	movq	%rax, %rdi
10002b7de:	41 ff d4	callq	*%r12
10002b7e1:	48 8b 0d 90 80 02 00	movq	163984(%rip), %rcx
10002b7e8:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002b7ec:	48 8b 05 fd 7f 02 00	movq	163837(%rip), %rax
10002b7f3:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b7f7:	48 8b 05 fa 7f 02 00	movq	163834(%rip), %rax
10002b7fe:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b802:	4c 8b 35 87 5a 02 00	movq	154247(%rip), %r14 ## Objc selector ref: floatValue
10002b809:	4c 89 f6	movq	%r14, %rsi
10002b80c:	41 ff d5	callq	*%r13
10002b80f:	4c 8b 3d 22 66 02 00	movq	157218(%rip), %r15 ## Objc selector ref: setFloatValue:
10002b816:	4c 89 e7	movq	%r12, %rdi
10002b819:	4c 89 fe	movq	%r15, %rsi
10002b81c:	41 ff d5	callq	*%r13
10002b81f:	48 8b 05 e2 7f 02 00	movq	163810(%rip), %rax
10002b826:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b82a:	48 8b 05 cf 7f 02 00	movq	163791(%rip), %rax
10002b831:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10002b835:	4c 8b 25 ec 64 02 00	movq	156908(%rip), %r12 ## Objc selector ref: setColor:
10002b83c:	4c 89 e6	movq	%r12, %rsi
10002b83f:	41 ff d5	callq	*%r13
10002b842:	48 8b 05 cf 7f 02 00	movq	163791(%rip), %rax
10002b849:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b84d:	48 8b 05 bc 7f 02 00	movq	163772(%rip), %rax
10002b854:	48 8b 14 03	movq	(%rbx,%rax), %rdx
10002b858:	4c 89 e6	movq	%r12, %rsi
10002b85b:	41 ff d5	callq	*%r13
10002b85e:	48 8b 05 83 7f 02 00	movq	163715(%rip), %rax
10002b865:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b869:	48 8b 05 b8 7f 02 00	movq	163768(%rip), %rax
10002b870:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b874:	4c 89 f6	movq	%r14, %rsi
10002b877:	41 ff d5	callq	*%r13
10002b87a:	4c 89 e7	movq	%r12, %rdi
10002b87d:	4c 89 fe	movq	%r15, %rsi
10002b880:	41 ff d5	callq	*%r13
10002b883:	48 8b 05 c6 7f 02 00	movq	163782(%rip), %rax
10002b88a:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b88e:	48 8b 05 c3 7f 02 00	movq	163779(%rip), %rax
10002b895:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b899:	4c 89 f6	movq	%r14, %rsi
10002b89c:	41 ff d5	callq	*%r13
10002b89f:	4c 89 e7	movq	%r12, %rdi
10002b8a2:	4c 89 fe	movq	%r15, %rsi
10002b8a5:	41 ff d5	callq	*%r13
10002b8a8:	48 8b 05 91 7f 02 00	movq	163729(%rip), %rax
10002b8af:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b8b3:	48 8b 05 8e 7f 02 00	movq	163726(%rip), %rax
10002b8ba:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b8be:	4c 89 f6	movq	%r14, %rsi
10002b8c1:	41 ff d5	callq	*%r13
10002b8c4:	4c 89 e7	movq	%r12, %rdi
10002b8c7:	4c 89 fe	movq	%r15, %rsi
10002b8ca:	41 ff d5	callq	*%r13
10002b8cd:	48 8b 05 5c 7f 02 00	movq	163676(%rip), %rax
10002b8d4:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b8d8:	48 8b 05 59 7f 02 00	movq	163673(%rip), %rax
10002b8df:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b8e3:	4c 89 f6	movq	%r14, %rsi
10002b8e6:	41 ff d5	callq	*%r13
10002b8e9:	4c 89 e7	movq	%r12, %rdi
10002b8ec:	4c 89 fe	movq	%r15, %rsi
10002b8ef:	41 ff d5	callq	*%r13
10002b8f2:	48 8b 05 67 7f 02 00	movq	163687(%rip), %rax
10002b8f9:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b8fd:	48 8b 05 64 7f 02 00	movq	163684(%rip), %rax
10002b904:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b908:	4c 89 f6	movq	%r14, %rsi
10002b90b:	41 ff d5	callq	*%r13
10002b90e:	4c 89 e7	movq	%r12, %rdi
10002b911:	4c 89 fe	movq	%r15, %rsi
10002b914:	41 ff d5	callq	*%r13
10002b917:	48 8b 05 52 7f 02 00	movq	163666(%rip), %rax
10002b91e:	4c 8b 24 03	movq	(%rbx,%rax), %r12
10002b922:	48 8b 05 4f 7f 02 00	movq	163663(%rip), %rax
10002b929:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002b92d:	4c 89 f6	movq	%r14, %rsi
10002b930:	41 ff d5	callq	*%r13
10002b933:	4c 89 e7	movq	%r12, %rdi
10002b936:	4c 89 fe	movq	%r15, %rsi
10002b939:	41 ff d5	callq	*%r13
10002b93c:	48 8b 35 7d 59 02 00	movq	153981(%rip), %rsi ## Objc selector ref: genericAction
10002b943:	48 89 df	movq	%rbx, %rdi
10002b946:	4c 89 e8	movq	%r13, %rax
10002b949:	48 83 c4 08	addq	$8, %rsp
10002b94d:	5b	popq	%rbx
10002b94e:	41 5c	popq	%r12
10002b950:	41 5d	popq	%r13
10002b952:	41 5e	popq	%r14
10002b954:	41 5f	popq	%r15
10002b956:	5d	popq	%rbp
10002b957:	ff e0	jmpq	*%rax
10002b959:	55	pushq	%rbp
10002b95a:	48 89 e5	movq	%rsp, %rbp
10002b95d:	48 81 ec 10 04 00 00	subq	$1040, %rsp
10002b964:	48 8b 05 ad 0e 01 00	movq	69293(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10002b96b:	48 8b 00	movq	(%rax), %rax
10002b96e:	48 89 45 f8	movq	%rax, -8(%rbp)
10002b972:	48 8b 35 4f 52 02 00	movq	152143(%rip), %rsi ## Objc selector ref: UTF8String
10002b979:	ff 15 a1 12 01 00	callq	*70305(%rip) ## Objc message: -[%rdi UTF8String]
10002b97f:	48 8d b5 f0 fb ff ff	leaq	-1040(%rbp), %rsi
10002b986:	48 89 c7	movq	%rax, %rdi
10002b989:	e8 a2 3b 00 00	callq	0x10002f530 ## symbol stub for: _realpath$DARWIN_EXTSN
10002b98e:	48 85 c0	testq	%rax, %rax
10002b991:	74 1d	je	0x10002b9b0
10002b993:	48 8b 3d 2e 6c 02 00	movq	158766(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002b99a:	48 8b 35 8f 69 02 00	movq	158095(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
10002b9a1:	48 8d 95 f0 fb ff ff	leaq	-1040(%rbp), %rdx
10002b9a8:	ff 15 72 12 01 00	callq	*70258(%rip) ## Objc message: +[NSString stringWithUTF8String:]
10002b9ae:	eb 02	jmp	0x10002b9b2
10002b9b0:	31 c0	xorl	%eax, %eax
10002b9b2:	48 8b 0d 5f 0e 01 00	movq	69215(%rip), %rcx ## literal pool symbol address: ___stack_chk_guard
10002b9b9:	48 8b 09	movq	(%rcx), %rcx
10002b9bc:	48 3b 4d f8	cmpq	-8(%rbp), %rcx
10002b9c0:	75 09	jne	0x10002b9cb
10002b9c2:	48 81 c4 10 04 00 00	addq	$1040, %rsp
10002b9c9:	5d	popq	%rbp
10002b9ca:	c3	retq
10002b9cb:	e8 e0 39 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10002b9d0:	55	pushq	%rbp
10002b9d1:	48 89 e5	movq	%rsp, %rbp
10002b9d4:	41 57	pushq	%r15
10002b9d6:	41 56	pushq	%r14
10002b9d8:	41 55	pushq	%r13
10002b9da:	41 54	pushq	%r12
10002b9dc:	53	pushq	%rbx
10002b9dd:	48 83 ec 28	subq	$40, %rsp
10002b9e1:	49 89 fe	movq	%rdi, %r14
10002b9e4:	48 8b 3d d5 6b 02 00	movq	158677(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSFileManager
10002b9eb:	48 8b 35 6e 56 02 00	movq	153198(%rip), %rsi ## Objc selector ref: defaultManager
10002b9f2:	48 8b 1d 27 12 01 00	movq	70183(%rip), %rbx ## Objc message: +[NSFileManager defaultManager]
10002b9f9:	ff d3	callq	*%rbx
10002b9fb:	49 89 c7	movq	%rax, %r15
10002b9fe:	0f b7 05 bf d9 00 00	movzwl	55743(%rip), %eax
10002ba05:	48 8d 55 b0	leaq	-80(%rbp), %rdx
10002ba09:	66 89 42 04	movw	%ax, 4(%rdx)
10002ba0d:	8b 05 ad d9 00 00	movl	55725(%rip), %eax
10002ba13:	89 02	movl	%eax, (%rdx)
10002ba15:	48 8b 3d ac 6b 02 00	movq	158636(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002ba1c:	48 8b 35 fd 68 02 00	movq	157949(%rip), %rsi ## Objc selector ref: stringWithCharacters:length:
10002ba23:	b9 03 00 00 00	movl	$3, %ecx
10002ba28:	ff d3	callq	*%rbx
10002ba2a:	48 89 45 c8	movq	%rax, -56(%rbp)
10002ba2e:	48 8b 35 ab 68 02 00	movq	157867(%rip), %rsi ## Objc selector ref: stringByStandardizingPath
10002ba35:	4c 89 f7	movq	%r14, %rdi
10002ba38:	ff d3	callq	*%rbx
10002ba3a:	48 8b 35 e7 54 02 00	movq	152807(%rip), %rsi ## Objc selector ref: componentsToDisplayForPath:
10002ba41:	4c 89 ff	movq	%r15, %rdi
10002ba44:	48 89 c2	movq	%rax, %rdx
10002ba47:	ff d3	callq	*%rbx
10002ba49:	49 89 c5	movq	%rax, %r13
10002ba4c:	4c 8b 3d 6d 55 02 00	movq	152941(%rip), %r15 ## Objc selector ref: count
10002ba53:	48 89 c7	movq	%rax, %rdi
10002ba56:	4c 89 fe	movq	%r15, %rsi
10002ba59:	ff d3	callq	*%rbx
10002ba5b:	48 85 c0	testq	%rax, %rax
10002ba5e:	74 7d	je	0x10002badd
10002ba60:	48 8d 05 39 14 01 00	leaq	70713(%rip), %rax ## Objc cfstring ref: @""
10002ba67:	48 89 45 d0	movq	%rax, -48(%rbp)
10002ba6b:	4c 8b 25 66 68 02 00	movq	157798(%rip), %r12 ## Objc selector ref: stringByAppendingString:
10002ba72:	45 31 f6	xorl	%r14d, %r14d
10002ba75:	4c 89 65 c0	movq	%r12, -64(%rbp)
10002ba79:	4c 89 6d b8	movq	%r13, -72(%rbp)
10002ba7d:	4c 89 ef	movq	%r13, %rdi
10002ba80:	48 8b 35 d9 5d 02 00	movq	155097(%rip), %rsi ## Objc selector ref: objectAtIndex:
10002ba87:	4c 89 f2	movq	%r14, %rdx
10002ba8a:	ff d3	callq	*%rbx
10002ba8c:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002ba90:	4c 89 e6	movq	%r12, %rsi
10002ba93:	48 89 c2	movq	%rax, %rdx
10002ba96:	ff d3	callq	*%rbx
10002ba98:	48 89 45 d0	movq	%rax, -48(%rbp)
10002ba9c:	4c 89 ef	movq	%r13, %rdi
10002ba9f:	4d 89 fd	movq	%r15, %r13
10002baa2:	4c 89 fe	movq	%r15, %rsi
10002baa5:	ff d3	callq	*%rbx
10002baa7:	48 ff c8	decq	%rax
10002baaa:	49 39 c6	cmpq	%rax, %r14
10002baad:	74 11	je	0x10002bac0
10002baaf:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002bab3:	4c 89 e6	movq	%r12, %rsi
10002bab6:	48 8b 55 c8	movq	-56(%rbp), %rdx
10002baba:	ff d3	callq	*%rbx
10002babc:	48 89 45 d0	movq	%rax, -48(%rbp)
10002bac0:	49 ff c6	incq	%r14
10002bac3:	48 8b 7d b8	movq	-72(%rbp), %rdi
10002bac7:	4d 89 ef	movq	%r13, %r15
10002baca:	49 89 fd	movq	%rdi, %r13
10002bacd:	4c 89 fe	movq	%r15, %rsi
10002bad0:	ff d3	callq	*%rbx
10002bad2:	49 39 c6	cmpq	%rax, %r14
10002bad5:	4c 8b 65 c0	movq	-64(%rbp), %r12
10002bad9:	72 a2	jb	0x10002ba7d
10002badb:	eb 0b	jmp	0x10002bae8
10002badd:	48 8d 05 bc 13 01 00	leaq	70588(%rip), %rax ## Objc cfstring ref: @""
10002bae4:	48 89 45 d0	movq	%rax, -48(%rbp)
10002bae8:	48 8b 45 d0	movq	-48(%rbp), %rax
10002baec:	48 83 c4 28	addq	$40, %rsp
10002baf0:	5b	popq	%rbx
10002baf1:	41 5c	popq	%r12
10002baf3:	41 5d	popq	%r13
10002baf5:	41 5e	popq	%r14
10002baf7:	41 5f	popq	%r15
10002baf9:	5d	popq	%rbp
10002bafa:	c3	retq
10002bafb:	55	pushq	%rbp
10002bafc:	48 89 e5	movq	%rsp, %rbp
10002baff:	41 57	pushq	%r15
10002bb01:	41 56	pushq	%r14
10002bb03:	41 54	pushq	%r12
10002bb05:	53	pushq	%rbx
10002bb06:	48 81 ec 10 08 00 00	subq	$2064, %rsp
10002bb0d:	49 89 fe	movq	%rdi, %r14
10002bb10:	48 8b 05 01 0d 01 00	movq	68865(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10002bb17:	48 8b 00	movq	(%rax), %rax
10002bb1a:	48 89 45 d8	movq	%rax, -40(%rbp)
10002bb1e:	48 8b 35 bb 67 02 00	movq	157627(%rip), %rsi ## Objc selector ref: stringByStandardizingPath
10002bb25:	4c 8b 25 f4 10 01 00	movq	69876(%rip), %r12 ## Objc message: +[NSString stringByStandardizingPath]
10002bb2c:	41 ff d4	callq	*%r12
10002bb2f:	48 8b 35 9a 67 02 00	movq	157594(%rip), %rsi ## Objc selector ref: stringByAbbreviatingWithTildeInPath
10002bb36:	48 89 c7	movq	%rax, %rdi
10002bb39:	41 ff d4	callq	*%r12
10002bb3c:	48 89 c3	movq	%rax, %rbx
10002bb3f:	48 8b 35 b2 5a 02 00	movq	154290(%rip), %rsi ## Objc selector ref: length
10002bb46:	48 89 c7	movq	%rax, %rdi
10002bb49:	41 ff d4	callq	*%r12
10002bb4c:	48 85 c0	testq	%rax, %rax
10002bb4f:	0f 84 d3 00 00 00	je	0x10002bc28
10002bb55:	48 8b 35 14 53 02 00	movq	152340(%rip), %rsi ## Objc selector ref: characterAtIndex:
10002bb5c:	48 89 df	movq	%rbx, %rdi
10002bb5f:	31 d2	xorl	%edx, %edx
10002bb61:	ff 15 b9 10 01 00	callq	*69817(%rip) ## Objc message: -[%rdi characterAtIndex:]
10002bb67:	66 83 f8 7e	cmpw	$126, %ax
10002bb6b:	0f 84 b7 00 00 00	je	0x10002bc28
10002bb71:	4c 8b 3d 50 50 02 00	movq	151632(%rip), %r15 ## Objc selector ref: UTF8String
10002bb78:	4c 89 f7	movq	%r14, %rdi
10002bb7b:	4c 89 fe	movq	%r15, %rsi
10002bb7e:	ff 15 9c 10 01 00	callq	*69788(%rip) ## Objc message: -[%rdi UTF8String]
10002bb84:	48 8d b5 d0 fb ff ff	leaq	-1072(%rbp), %rsi
10002bb8b:	48 89 c7	movq	%rax, %rdi
10002bb8e:	e8 9d 39 00 00	callq	0x10002f530 ## symbol stub for: _realpath$DARWIN_EXTSN
10002bb93:	48 85 c0	testq	%rax, %rax
10002bb96:	0f 84 8c 00 00 00	je	0x10002bc28
10002bb9c:	e8 49 37 00 00	callq	0x10002f2ea ## symbol stub for: _NSHomeDirectory
10002bba1:	48 89 c7	movq	%rax, %rdi
10002bba4:	4c 89 fe	movq	%r15, %rsi
10002bba7:	ff 15 73 10 01 00	callq	*69747(%rip) ## Objc message: -[%rdi UTF8String]
10002bbad:	48 8d b5 d0 f7 ff ff	leaq	-2096(%rbp), %rsi
10002bbb4:	48 89 c7	movq	%rax, %rdi
10002bbb7:	e8 74 39 00 00	callq	0x10002f530 ## symbol stub for: _realpath$DARWIN_EXTSN
10002bbbc:	48 85 c0	testq	%rax, %rax
10002bbbf:	74 67	je	0x10002bc28
10002bbc1:	80 bd d0 fb ff ff 2f	cmpb	$47, -1072(%rbp)
10002bbc8:	75 5e	jne	0x10002bc28
10002bbca:	80 bd d0 f7 ff ff 2f	cmpb	$47, -2096(%rbp)
10002bbd1:	75 55	jne	0x10002bc28
10002bbd3:	4c 8d bd d0 f7 ff ff	leaq	-2096(%rbp), %r15
10002bbda:	4c 89 ff	movq	%r15, %rdi
10002bbdd:	e8 5a 39 00 00	callq	0x10002f53c ## symbol stub for: _strlen
10002bbe2:	4c 8d b5 d0 fb ff ff	leaq	-1072(%rbp), %r14
10002bbe9:	4c 89 f7	movq	%r14, %rdi
10002bbec:	4c 89 fe	movq	%r15, %rsi
10002bbef:	48 89 c2	movq	%rax, %rdx
10002bbf2:	e8 4b 39 00 00	callq	0x10002f542 ## symbol stub for: _strncmp
10002bbf7:	85 c0	testl	%eax, %eax
10002bbf9:	75 2d	jne	0x10002bc28
10002bbfb:	48 8d bd d0 f7 ff ff	leaq	-2096(%rbp), %rdi
10002bc02:	e8 35 39 00 00	callq	0x10002f53c ## symbol stub for: _strlen
10002bc07:	4a 8d 14 30	leaq	(%rax,%r14), %rdx
10002bc0b:	48 ff ca	decq	%rdx
10002bc0e:	c6 02 7e	movb	$126, (%rdx)
10002bc11:	48 8b 3d b0 69 02 00	movq	158128(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002bc18:	48 8b 35 11 67 02 00	movq	157457(%rip), %rsi ## Objc selector ref: stringWithUTF8String:
10002bc1f:	ff 15 fb 0f 01 00	callq	*69627(%rip) ## Objc message: +[NSString stringWithUTF8String:]
10002bc25:	48 89 c3	movq	%rax, %rbx
10002bc28:	4c 8b 35 f1 56 02 00	movq	153329(%rip), %r14 ## Objc selector ref: hasPrefix:
10002bc2f:	48 8d 15 ca 3e 01 00	leaq	81610(%rip), %rdx ## Objc cfstring ref: @"/var/automount/Network/"
10002bc36:	48 89 df	movq	%rbx, %rdi
10002bc39:	4c 89 f6	movq	%r14, %rsi
10002bc3c:	ff 15 de 0f 01 00	callq	*69598(%rip) ## Objc message: -[%rdi hasPrefix:]
10002bc42:	84 c0	testb	%al, %al
10002bc44:	74 35	je	0x10002bc7b
10002bc46:	4c 8b 3d 7b 69 02 00	movq	158075(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSString
10002bc4d:	48 8b 35 ec 66 02 00	movq	157420(%rip), %rsi ## Objc selector ref: substringFromIndex:
10002bc54:	ba 17 00 00 00	movl	$23, %edx
10002bc59:	48 89 df	movq	%rbx, %rdi
10002bc5c:	41 ff d4	callq	*%r12
10002bc5f:	48 8b 35 c2 66 02 00	movq	157378(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002bc66:	48 8d 15 f3 3b 01 00	leaq	80883(%rip), %rdx ## Objc cfstring ref: @"/Network/%@"
10002bc6d:	4c 89 ff	movq	%r15, %rdi
10002bc70:	48 89 c1	movq	%rax, %rcx
10002bc73:	31 c0	xorl	%eax, %eax
10002bc75:	41 ff d4	callq	*%r12
10002bc78:	48 89 c3	movq	%rax, %rbx
10002bc7b:	48 8d 15 be 3b 01 00	leaq	80830(%rip), %rdx ## Objc cfstring ref: @"/automount/Network/"
10002bc82:	48 89 df	movq	%rbx, %rdi
10002bc85:	4c 89 f6	movq	%r14, %rsi
10002bc88:	ff 15 92 0f 01 00	callq	*69522(%rip) ## Objc message: +[NSString stringWithFormat:]
10002bc8e:	84 c0	testb	%al, %al
10002bc90:	74 35	je	0x10002bcc7
10002bc92:	4c 8b 3d 2f 69 02 00	movq	157999(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSString
10002bc99:	48 8b 35 a0 66 02 00	movq	157344(%rip), %rsi ## Objc selector ref: substringFromIndex:
10002bca0:	ba 13 00 00 00	movl	$19, %edx
10002bca5:	48 89 df	movq	%rbx, %rdi
10002bca8:	41 ff d4	callq	*%r12
10002bcab:	48 8b 35 76 66 02 00	movq	157302(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002bcb2:	48 8d 15 a7 3b 01 00	leaq	80807(%rip), %rdx ## Objc cfstring ref: @"/Network/%@"
10002bcb9:	4c 89 ff	movq	%r15, %rdi
10002bcbc:	48 89 c1	movq	%rax, %rcx
10002bcbf:	31 c0	xorl	%eax, %eax
10002bcc1:	41 ff d4	callq	*%r12
10002bcc4:	48 89 c3	movq	%rax, %rbx
10002bcc7:	48 8d 15 52 3e 01 00	leaq	81490(%rip), %rdx ## Objc cfstring ref: @"/automount/static/Network/"
10002bcce:	48 89 df	movq	%rbx, %rdi
10002bcd1:	4c 89 f6	movq	%r14, %rsi
10002bcd4:	ff 15 46 0f 01 00	callq	*69446(%rip) ## Objc message: +[NSString stringWithFormat:]
10002bcda:	84 c0	testb	%al, %al
10002bcdc:	74 35	je	0x10002bd13
10002bcde:	4c 8b 35 e3 68 02 00	movq	157923(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSString
10002bce5:	48 8b 35 54 66 02 00	movq	157268(%rip), %rsi ## Objc selector ref: substringFromIndex:
10002bcec:	ba 1a 00 00 00	movl	$26, %edx
10002bcf1:	48 89 df	movq	%rbx, %rdi
10002bcf4:	41 ff d4	callq	*%r12
10002bcf7:	48 8b 35 2a 66 02 00	movq	157226(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002bcfe:	48 8d 15 5b 3b 01 00	leaq	80731(%rip), %rdx ## Objc cfstring ref: @"/Network/%@"
10002bd05:	4c 89 f7	movq	%r14, %rdi
10002bd08:	48 89 c1	movq	%rax, %rcx
10002bd0b:	31 c0	xorl	%eax, %eax
10002bd0d:	41 ff d4	callq	*%r12
10002bd10:	48 89 c3	movq	%rax, %rbx
10002bd13:	48 8b 05 fe 0a 01 00	movq	68350(%rip), %rax ## literal pool symbol address: ___stack_chk_guard
10002bd1a:	48 8b 00	movq	(%rax), %rax
10002bd1d:	48 3b 45 d8	cmpq	-40(%rbp), %rax
10002bd21:	75 13	jne	0x10002bd36
10002bd23:	48 89 d8	movq	%rbx, %rax
10002bd26:	48 81 c4 10 08 00 00	addq	$2064, %rsp
10002bd2d:	5b	popq	%rbx
10002bd2e:	41 5c	popq	%r12
10002bd30:	41 5e	popq	%r14
10002bd32:	41 5f	popq	%r15
10002bd34:	5d	popq	%rbp
10002bd35:	c3	retq
10002bd36:	e8 75 36 00 00	callq	0x10002f3b0 ## symbol stub for: ___stack_chk_fail
10002bd3b:	90	nop
10002bd3c:	55	pushq	%rbp
10002bd3d:	48 89 e5	movq	%rsp, %rbp
10002bd40:	41 56	pushq	%r14
10002bd42:	53	pushq	%rbx
10002bd43:	48 83 ec 10	subq	$16, %rsp
10002bd47:	c6 45 ec 00	movb	$0, -20(%rbp)
10002bd4b:	89 d3	movl	%edx, %ebx
10002bd4d:	0f cb	bswapl	%ebx
10002bd4f:	89 5d e8	movl	%ebx, -24(%rbp)
10002bd52:	81 fa 4b 50 50 41	cmpl	$1095782475, %edx
10002bd58:	7e 43	jle	0x10002bd9d
10002bd5a:	81 fa 4c 50 50 41	cmpl	$1095782476, %edx
10002bd60:	74 14	je	0x10002bd76
10002bd62:	81 fa 54 46 53 4d	cmpl	$1297303124, %edx
10002bd68:	74 6a	je	0x10002bdd4
10002bd6a:	81 fa 6c 70 70 61	cmpl	$1634758764, %edx
10002bd70:	0f 85 b9 00 00 00	jne	0x10002be2f
10002bd76:	48 8b 3d 23 68 02 00	movq	157731(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002bd7d:	48 8b 35 64 59 02 00	movq	153956(%rip), %rsi ## Objc selector ref: mainBundle
10002bd84:	48 8b 1d 95 0e 01 00	movq	69269(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002bd8b:	ff d3	callq	*%rbx
10002bd8d:	48 8b 35 cc 58 02 00	movq	153804(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002bd94:	48 8d 15 a5 3d 01 00	leaq	81317(%rip), %rdx ## Objc cfstring ref: @"Apple"
10002bd9b:	eb 5c	jmp	0x10002bdf9
10002bd9d:	85 d2	testl	%edx, %edx
10002bd9f:	74 72	je	0x10002be13
10002bda1:	81 fa 45 42 44 41	cmpl	$1094992453, %edx
10002bda7:	0f 85 82 00 00 00	jne	0x10002be2f
10002bdad:	48 8b 3d ec 67 02 00	movq	157676(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002bdb4:	48 8b 35 2d 59 02 00	movq	153901(%rip), %rsi ## Objc selector ref: mainBundle
10002bdbb:	48 8b 1d 5e 0e 01 00	movq	69214(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002bdc2:	ff d3	callq	*%rbx
10002bdc4:	48 8b 35 95 58 02 00	movq	153749(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002bdcb:	48 8d 15 8e 3d 01 00	leaq	81294(%rip), %rdx ## Objc cfstring ref: @"Adobe"
10002bdd2:	eb 25	jmp	0x10002bdf9
10002bdd4:	48 8b 3d c5 67 02 00	movq	157637(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002bddb:	48 8b 35 06 59 02 00	movq	153862(%rip), %rsi ## Objc selector ref: mainBundle
10002bde2:	48 8b 1d 37 0e 01 00	movq	69175(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002bde9:	ff d3	callq	*%rbx
10002bdeb:	48 8b 35 6e 58 02 00	movq	153710(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002bdf2:	48 8d 15 87 3d 01 00	leaq	81287(%rip), %rdx ## Objc cfstring ref: @"Microsoft"
10002bdf9:	48 8d 0d a0 10 01 00	leaq	69792(%rip), %rcx ## Objc cfstring ref: @""
10002be00:	48 89 c7	movq	%rax, %rdi
10002be03:	45 31 c0	xorl	%r8d, %r8d
10002be06:	48 89 d8	movq	%rbx, %rax
10002be09:	48 83 c4 10	addq	$16, %rsp
10002be0d:	5b	popq	%rbx
10002be0e:	41 5e	popq	%r14
10002be10:	5d	popq	%rbp
10002be11:	ff e0	jmpq	*%rax
10002be13:	48 8b 3d ae 67 02 00	movq	157614(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002be1a:	48 8b 35 a7 64 02 00	movq	156839(%rip), %rsi ## Objc selector ref: string
10002be21:	48 83 c4 10	addq	$16, %rsp
10002be25:	5b	popq	%rbx
10002be26:	41 5e	popq	%r14
10002be28:	5d	popq	%rbp
10002be29:	ff 25 f1 0d 01 00	jmpq	*69105(%rip) ## Objc message: +[NSString string]
10002be2f:	0f be fb	movsbl	%bl, %edi
10002be32:	40 f6 c7 80	testb	$-128, %dil
10002be36:	75 14	jne	0x10002be4c
10002be38:	89 f9	movl	%edi, %ecx
10002be3a:	48 8b 15 6f 09 01 00	movq	67951(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
10002be41:	b8 00 00 04 00	movl	$262144, %eax
10002be46:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
10002be4a:	eb 0a	jmp	0x10002be56
10002be4c:	be 00 00 04 00	movl	$262144, %esi
10002be51:	e8 48 35 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
10002be56:	85 c0	testl	%eax, %eax
10002be58:	0f 84 ef 00 00 00	je	0x10002bf4d
10002be5e:	89 d8	movl	%ebx, %eax
10002be60:	c1 e8 08	shrl	$8, %eax
10002be63:	0f be f8	movsbl	%al, %edi
10002be66:	0f ba e3 0f	btl	$15, %ebx
10002be6a:	72 14	jb	0x10002be80
10002be6c:	89 f9	movl	%edi, %ecx
10002be6e:	48 8b 15 3b 09 01 00	movq	67899(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
10002be75:	b8 00 00 04 00	movl	$262144, %eax
10002be7a:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
10002be7e:	eb 0a	jmp	0x10002be8a
10002be80:	be 00 00 04 00	movl	$262144, %esi
10002be85:	e8 14 35 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
10002be8a:	85 c0	testl	%eax, %eax
10002be8c:	0f 84 bb 00 00 00	je	0x10002bf4d
10002be92:	89 d8	movl	%ebx, %eax
10002be94:	c1 e8 10	shrl	$16, %eax
10002be97:	0f be f8	movsbl	%al, %edi
10002be9a:	0f ba e3 17	btl	$23, %ebx
10002be9e:	72 14	jb	0x10002beb4
10002bea0:	89 f9	movl	%edi, %ecx
10002bea2:	48 8b 15 07 09 01 00	movq	67847(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
10002bea9:	b8 00 00 04 00	movl	$262144, %eax
10002beae:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
10002beb2:	eb 0a	jmp	0x10002bebe
10002beb4:	be 00 00 04 00	movl	$262144, %esi
10002beb9:	e8 e0 34 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
10002bebe:	85 c0	testl	%eax, %eax
10002bec0:	0f 84 87 00 00 00	je	0x10002bf4d
10002bec6:	89 df	movl	%ebx, %edi
10002bec8:	c1 ff 18	sarl	$24, %edi
10002becb:	85 db	testl	%ebx, %ebx
10002becd:	78 14	js	0x10002bee3
10002becf:	89 f9	movl	%edi, %ecx
10002bed1:	48 8b 15 d8 08 01 00	movq	67800(%rip), %rdx ## literal pool symbol address: __DefaultRuneLocale
10002bed8:	b8 00 00 04 00	movl	$262144, %eax
10002bedd:	23 44 8a 3c	andl	60(%rdx,%rcx,4), %eax
10002bee1:	eb 0a	jmp	0x10002beed
10002bee3:	be 00 00 04 00	movl	$262144, %esi
10002bee8:	e8 b1 34 00 00	callq	0x10002f39e ## symbol stub for: ___maskrune
10002beed:	85 c0	testl	%eax, %eax
10002beef:	74 5c	je	0x10002bf4d
10002bef1:	48 8b 1d d0 66 02 00	movq	157392(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSString
10002bef8:	48 8b 3d a1 66 02 00	movq	157345(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002beff:	48 8b 35 e2 57 02 00	movq	153570(%rip), %rsi ## Objc selector ref: mainBundle
10002bf06:	4c 8b 35 13 0d 01 00	movq	68883(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10002bf0d:	41 ff d6	callq	*%r14
10002bf10:	48 8b 35 49 57 02 00	movq	153417(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002bf17:	48 8d 15 82 3c 01 00	leaq	81026(%rip), %rdx ## Objc cfstring ref: @"'%s'"
10002bf1e:	48 8d 0d 7b 0f 01 00	leaq	69499(%rip), %rcx ## Objc cfstring ref: @""
10002bf25:	48 89 c7	movq	%rax, %rdi
10002bf28:	45 31 c0	xorl	%r8d, %r8d
10002bf2b:	41 ff d6	callq	*%r14
10002bf2e:	48 8b 35 f3 63 02 00	movq	156659(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002bf35:	48 8d 4d e8	leaq	-24(%rbp), %rcx
10002bf39:	48 89 df	movq	%rbx, %rdi
10002bf3c:	48 89 c2	movq	%rax, %rdx
10002bf3f:	31 c0	xorl	%eax, %eax
10002bf41:	41 ff d6	callq	*%r14
10002bf44:	48 83 c4 10	addq	$16, %rsp
10002bf48:	5b	popq	%rbx
10002bf49:	41 5e	popq	%r14
10002bf4b:	5d	popq	%rbp
10002bf4c:	c3	retq
10002bf4d:	48 8b 3d 74 66 02 00	movq	157300(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002bf54:	48 8b 35 cd 63 02 00	movq	156621(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002bf5b:	48 8d 15 5e 3c 01 00	leaq	80990(%rip), %rdx ## Objc cfstring ref: @"%u"
10002bf62:	89 d9	movl	%ebx, %ecx
10002bf64:	31 c0	xorl	%eax, %eax
10002bf66:	48 83 c4 10	addq	$16, %rsp
10002bf6a:	5b	popq	%rbx
10002bf6b:	41 5e	popq	%r14
10002bf6d:	5d	popq	%rbp
10002bf6e:	ff 25 ac 0c 01 00	jmpq	*68780(%rip) ## Objc message: +[NSString stringWithFormat:]
10002bf74:	55	pushq	%rbp
10002bf75:	48 89 e5	movq	%rsp, %rbp
10002bf78:	53	pushq	%rbx
10002bf79:	50	pushq	%rax
10002bf7a:	81 fa 1f 62 61 4c	cmpl	$1281450527, %edx
10002bf80:	7f 66	jg	0x10002bfe8
10002bf82:	81 fa 51 4c 43 38	cmpl	$943934545, %edx
10002bf88:	0f 8f 81 00 00 00	jg	0x10002c00f
10002bf8e:	81 fa 51 4c 43 35	cmpl	$893602897, %edx
10002bf94:	0f 8f 29 01 00 00	jg	0x10002c0c3
10002bf9a:	81 fa 52 4c 43 32	cmpl	$843271250, %edx
10002bfa0:	0f 84 bb 02 00 00	je	0x10002c261
10002bfa6:	81 fa 52 4c 43 33	cmpl	$860048466, %edx
10002bfac:	0f 84 d9 02 00 00	je	0x10002c28b
10002bfb2:	81 fa 52 4c 43 34	cmpl	$876825682, %edx
10002bfb8:	0f 85 27 04 00 00	jne	0x10002c3e5
10002bfbe:	48 8b 3d db 65 02 00	movq	157147(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002bfc5:	48 8b 35 1c 57 02 00	movq	153372(%rip), %rsi ## Objc selector ref: mainBundle
10002bfcc:	48 8b 1d 4d 0c 01 00	movq	68685(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002bfd3:	ff d3	callq	*%rbx
10002bfd5:	48 8b 35 84 56 02 00	movq	153220(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002bfdc:	48 8d 15 1d 3d 01 00	leaq	81181(%rip), %rdx ## Objc cfstring ref: @"4-Color"
10002bfe3:	e9 e5 03 00 00	jmp	0x10002c3cd
10002bfe8:	81 fa 44 4d 41 4e	cmpl	$1312902468, %edx
10002bfee:	7f 79	jg	0x10002c069
10002bff0:	8d 82 cb b7 bc b2	leal	-1296255029(%rdx), %eax
10002bff6:	83 f8 03	cmpl	$3, %eax
10002bff9:	0f 87 60 01 00 00	ja	0x10002c15f
10002bfff:	48 8d 0d fa 03 00 00	leaq	1018(%rip), %rcx
10002c006:	48 63 04 81	movslq	(%rcx,%rax,4), %rax
10002c00a:	48 01 c8	addq	%rcx, %rax
10002c00d:	ff e0	jmpq	*%rax
10002c00f:	81 fa 58 41 52 47	cmpl	$1196573016, %edx
10002c015:	0f 8f f6 00 00 00	jg	0x10002c111
10002c01b:	81 fa 52 4c 43 38	cmpl	$943934546, %edx
10002c021:	0f 84 bc 01 00 00	je	0x10002c1e3
10002c027:	81 fa 20 59 4d 43	cmpl	$1129142560, %edx
10002c02d:	0f 84 82 02 00 00	je	0x10002c2b5
10002c033:	81 fa 4b 59 4d 43	cmpl	$1129142603, %edx
10002c039:	0f 85 a6 03 00 00	jne	0x10002c3e5
10002c03f:	48 8b 3d 5a 65 02 00	movq	157018(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c046:	48 8b 35 9b 56 02 00	movq	153243(%rip), %rsi ## Objc selector ref: mainBundle
10002c04d:	48 8b 1d cc 0b 01 00	movq	68556(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c054:	ff d3	callq	*%rbx
10002c056:	48 8b 35 03 56 02 00	movq	153091(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c05d:	48 8d 15 3c 1f 01 00	leaq	73532(%rip), %rdx ## Objc cfstring ref: @"CMYK"
10002c064:	e9 64 03 00 00	jmp	0x10002c3cd
10002c069:	81 fa 1f 5a 59 58	cmpl	$1482250783, %edx
10002c06f:	0f 8e 2c 01 00 00	jle	0x10002c1a1
10002c075:	81 fa 65 6e 6f 6e	cmpl	$1852796517, %edx
10002c07b:	0f 84 5e 02 00 00	je	0x10002c2df
10002c081:	81 fa 20 79 78 59	cmpl	$1501067552, %edx
10002c087:	0f 84 7c 02 00 00	je	0x10002c309
10002c08d:	81 fa 20 5a 59 58	cmpl	$1482250784, %edx
10002c093:	0f 85 4c 03 00 00	jne	0x10002c3e5
10002c099:	48 8b 3d 00 65 02 00	movq	156928(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c0a0:	48 8b 35 41 56 02 00	movq	153153(%rip), %rsi ## Objc selector ref: mainBundle
10002c0a7:	48 8b 1d 72 0b 01 00	movq	68466(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c0ae:	ff d3	callq	*%rbx
10002c0b0:	48 8b 35 a9 55 02 00	movq	153001(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c0b7:	48 8d 15 42 15 01 00	leaq	70978(%rip), %rdx ## Objc cfstring ref: @"XYZ"
10002c0be:	e9 0a 03 00 00	jmp	0x10002c3cd
10002c0c3:	81 fa 52 4c 43 35	cmpl	$893602898, %edx
10002c0c9:	0f 84 3e 01 00 00	je	0x10002c20d
10002c0cf:	81 fa 52 4c 43 36	cmpl	$910380114, %edx
10002c0d5:	0f 84 5c 01 00 00	je	0x10002c237
10002c0db:	81 fa 52 4c 43 37	cmpl	$927157330, %edx
10002c0e1:	0f 85 fe 02 00 00	jne	0x10002c3e5
10002c0e7:	48 8b 3d b2 64 02 00	movq	156850(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c0ee:	48 8b 35 f3 55 02 00	movq	153075(%rip), %rsi ## Objc selector ref: mainBundle
10002c0f5:	48 8b 1d 24 0b 01 00	movq	68388(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c0fc:	ff d3	callq	*%rbx
10002c0fe:	48 8b 35 5b 55 02 00	movq	152923(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c105:	48 8d 15 74 3b 01 00	leaq	80756(%rip), %rdx ## Objc cfstring ref: @"7-Color"
10002c10c:	e9 bc 02 00 00	jmp	0x10002c3cd
10002c111:	81 fa 59 41 52 47	cmpl	$1196573017, %edx
10002c117:	0f 84 16 02 00 00	je	0x10002c333
10002c11d:	81 fa 20 53 4c 48	cmpl	$1212961568, %edx
10002c123:	0f 84 31 02 00 00	je	0x10002c35a
10002c129:	81 fa 20 56 53 48	cmpl	$1213421088, %edx
10002c12f:	0f 85 b0 02 00 00	jne	0x10002c3e5
10002c135:	48 8b 3d 64 64 02 00	movq	156772(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c13c:	48 8b 35 a5 55 02 00	movq	152997(%rip), %rsi ## Objc selector ref: mainBundle
10002c143:	48 8b 1d d6 0a 01 00	movq	68310(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c14a:	ff d3	callq	*%rbx
10002c14c:	48 8b 35 0d 55 02 00	movq	152845(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c153:	48 8d 15 86 3a 01 00	leaq	80518(%rip), %rdx ## Objc cfstring ref: @"HSV"
10002c15a:	e9 6e 02 00 00	jmp	0x10002c3cd
10002c15f:	81 fa 20 62 61 4c	cmpl	$1281450528, %edx
10002c165:	0f 84 16 02 00 00	je	0x10002c381
10002c16b:	81 fa 20 76 75 4c	cmpl	$1282766368, %edx
10002c171:	0f 85 6e 02 00 00	jne	0x10002c3e5
10002c177:	48 8b 3d 22 64 02 00	movq	156706(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c17e:	48 8b 35 63 55 02 00	movq	152931(%rip), %rsi ## Objc selector ref: mainBundle
10002c185:	48 8b 1d 94 0a 01 00	movq	68244(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c18c:	ff d3	callq	*%rbx
10002c18e:	48 8b 35 cb 54 02 00	movq	152779(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c195:	48 8d 15 04 14 01 00	leaq	70660(%rip), %rdx ## Objc cfstring ref: @"Luv"
10002c19c:	e9 2c 02 00 00	jmp	0x10002c3cd
10002c1a1:	81 fa 45 4d 41 4e	cmpl	$1312902469, %edx
10002c1a7:	0f 84 fb 01 00 00	je	0x10002c3a8
10002c1ad:	81 fa 20 42 47 52	cmpl	$1380401696, %edx
10002c1b3:	0f 85 2c 02 00 00	jne	0x10002c3e5
10002c1b9:	48 8b 3d e0 63 02 00	movq	156640(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c1c0:	48 8b 35 21 55 02 00	movq	152865(%rip), %rsi ## Objc selector ref: mainBundle
10002c1c7:	48 8b 1d 52 0a 01 00	movq	68178(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c1ce:	ff d3	callq	*%rbx
10002c1d0:	48 8b 35 89 54 02 00	movq	152713(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c1d7:	48 8d 15 82 1d 01 00	leaq	73090(%rip), %rdx ## Objc cfstring ref: @"RGB"
10002c1de:	e9 ea 01 00 00	jmp	0x10002c3cd
10002c1e3:	48 8b 3d b6 63 02 00	movq	156598(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c1ea:	48 8b 35 f7 54 02 00	movq	152823(%rip), %rsi ## Objc selector ref: mainBundle
10002c1f1:	48 8b 1d 28 0a 01 00	movq	68136(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c1f8:	ff d3	callq	*%rbx
10002c1fa:	48 8b 35 5f 54 02 00	movq	152671(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c201:	48 8d 15 98 3a 01 00	leaq	80536(%rip), %rdx ## Objc cfstring ref: @"8-Color"
10002c208:	e9 c0 01 00 00	jmp	0x10002c3cd
10002c20d:	48 8b 3d 8c 63 02 00	movq	156556(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c214:	48 8b 35 cd 54 02 00	movq	152781(%rip), %rsi ## Objc selector ref: mainBundle
10002c21b:	48 8b 1d fe 09 01 00	movq	68094(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c222:	ff d3	callq	*%rbx
10002c224:	48 8b 35 35 54 02 00	movq	152629(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c22b:	48 8d 15 0e 3a 01 00	leaq	80398(%rip), %rdx ## Objc cfstring ref: @"5-Color"
10002c232:	e9 96 01 00 00	jmp	0x10002c3cd
10002c237:	48 8b 3d 62 63 02 00	movq	156514(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c23e:	48 8b 35 a3 54 02 00	movq	152739(%rip), %rsi ## Objc selector ref: mainBundle
10002c245:	48 8b 1d d4 09 01 00	movq	68052(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c24c:	ff d3	callq	*%rbx
10002c24e:	48 8b 35 0b 54 02 00	movq	152587(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c255:	48 8d 15 04 3a 01 00	leaq	80388(%rip), %rdx ## Objc cfstring ref: @"6-Color"
10002c25c:	e9 6c 01 00 00	jmp	0x10002c3cd
10002c261:	48 8b 3d 38 63 02 00	movq	156472(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c268:	48 8b 35 79 54 02 00	movq	152697(%rip), %rsi ## Objc selector ref: mainBundle
10002c26f:	48 8b 1d aa 09 01 00	movq	68010(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c276:	ff d3	callq	*%rbx
10002c278:	48 8b 35 e1 53 02 00	movq	152545(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c27f:	48 8d 15 3a 3a 01 00	leaq	80442(%rip), %rdx ## Objc cfstring ref: @"2-Color"
10002c286:	e9 42 01 00 00	jmp	0x10002c3cd
10002c28b:	48 8b 3d 0e 63 02 00	movq	156430(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c292:	48 8b 35 4f 54 02 00	movq	152655(%rip), %rsi ## Objc selector ref: mainBundle
10002c299:	48 8b 1d 80 09 01 00	movq	67968(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c2a0:	ff d3	callq	*%rbx
10002c2a2:	48 8b 35 b7 53 02 00	movq	152503(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c2a9:	48 8d 15 30 3a 01 00	leaq	80432(%rip), %rdx ## Objc cfstring ref: @"3-Color"
10002c2b0:	e9 18 01 00 00	jmp	0x10002c3cd
10002c2b5:	48 8b 3d e4 62 02 00	movq	156388(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c2bc:	48 8b 35 25 54 02 00	movq	152613(%rip), %rsi ## Objc selector ref: mainBundle
10002c2c3:	48 8b 1d 56 09 01 00	movq	67926(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c2ca:	ff d3	callq	*%rbx
10002c2cc:	48 8b 35 8d 53 02 00	movq	152461(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c2d3:	48 8d 15 46 39 01 00	leaq	80198(%rip), %rdx ## Objc cfstring ref: @"CMY"
10002c2da:	e9 ee 00 00 00	jmp	0x10002c3cd
10002c2df:	48 8b 3d ba 62 02 00	movq	156346(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c2e6:	48 8b 35 fb 53 02 00	movq	152571(%rip), %rsi ## Objc selector ref: mainBundle
10002c2ed:	48 8b 1d 2c 09 01 00	movq	67884(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c2f4:	ff d3	callq	*%rbx
10002c2f6:	48 8b 35 63 53 02 00	movq	152419(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c2fd:	48 8d 15 3c 3a 01 00	leaq	80444(%rip), %rdx ## Objc cfstring ref: @"none"
10002c304:	e9 c4 00 00 00	jmp	0x10002c3cd
10002c309:	48 8b 3d 90 62 02 00	movq	156304(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c310:	48 8b 35 d1 53 02 00	movq	152529(%rip), %rsi ## Objc selector ref: mainBundle
10002c317:	48 8b 1d 02 09 01 00	movq	67842(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c31e:	ff d3	callq	*%rbx
10002c320:	48 8b 35 39 53 02 00	movq	152377(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c327:	48 8d 15 92 12 01 00	leaq	70290(%rip), %rdx ## Objc cfstring ref: @"Yxy"
10002c32e:	e9 9a 00 00 00	jmp	0x10002c3cd
10002c333:	48 8b 3d 66 62 02 00	movq	156262(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c33a:	48 8b 35 a7 53 02 00	movq	152487(%rip), %rsi ## Objc selector ref: mainBundle
10002c341:	48 8b 1d d8 08 01 00	movq	67800(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c348:	ff d3	callq	*%rbx
10002c34a:	48 8b 35 0f 53 02 00	movq	152335(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c351:	48 8d 15 c8 1b 01 00	leaq	72648(%rip), %rdx ## Objc cfstring ref: @"Gray"
10002c358:	eb 73	jmp	0x10002c3cd
10002c35a:	48 8b 3d 3f 62 02 00	movq	156223(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c361:	48 8b 35 80 53 02 00	movq	152448(%rip), %rsi ## Objc selector ref: mainBundle
10002c368:	48 8b 1d b1 08 01 00	movq	67761(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c36f:	ff d3	callq	*%rbx
10002c371:	48 8b 35 e8 52 02 00	movq	152296(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c378:	48 8d 15 81 38 01 00	leaq	80001(%rip), %rdx ## Objc cfstring ref: @"HSL"
10002c37f:	eb 4c	jmp	0x10002c3cd
10002c381:	48 8b 3d 18 62 02 00	movq	156184(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c388:	48 8b 35 59 53 02 00	movq	152409(%rip), %rsi ## Objc selector ref: mainBundle
10002c38f:	48 8b 1d 8a 08 01 00	movq	67722(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c396:	ff d3	callq	*%rbx
10002c398:	48 8b 35 c1 52 02 00	movq	152257(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c39f:	48 8d 15 da 11 01 00	leaq	70106(%rip), %rdx ## Objc cfstring ref: @"Lab"
10002c3a6:	eb 25	jmp	0x10002c3cd
10002c3a8:	48 8b 3d f1 61 02 00	movq	156145(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c3af:	48 8b 35 32 53 02 00	movq	152370(%rip), %rsi ## Objc selector ref: mainBundle
10002c3b6:	48 8b 1d 63 08 01 00	movq	67683(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c3bd:	ff d3	callq	*%rbx
10002c3bf:	48 8b 35 9a 52 02 00	movq	152218(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c3c6:	48 8d 15 53 39 01 00	leaq	80211(%rip), %rdx ## Objc cfstring ref: @"Named Color"
10002c3cd:	48 8d 0d cc 0a 01 00	leaq	68300(%rip), %rcx ## Objc cfstring ref: @""
10002c3d4:	48 89 c7	movq	%rax, %rdi
10002c3d7:	45 31 c0	xorl	%r8d, %r8d
10002c3da:	48 89 d8	movq	%rbx, %rax
10002c3dd:	48 83 c4 08	addq	$8, %rsp
10002c3e1:	5b	popq	%rbx
10002c3e2:	5d	popq	%rbp
10002c3e3:	ff e0	jmpq	*%rax
10002c3e5:	48 8b 3d dc 61 02 00	movq	156124(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002c3ec:	48 8b 35 1d 5f 02 00	movq	155421(%rip), %rsi ## Objc selector ref: stringForType:
10002c3f3:	48 83 c4 08	addq	$8, %rsp
10002c3f7:	5b	popq	%rbx
10002c3f8:	5d	popq	%rbp
10002c3f9:	ff 25 21 08 01 00	jmpq	*67617(%rip) ## Objc message: +[NSString stringForType:]
10002c3ff:	90	nop
0d fe ff ff	.long 4294966797	@ KIND_JUMP_TABLE32
37 fe ff ff	.long 4294966839	@ KIND_JUMP_TABLE32
e7 fc ff ff	.long 4294966503	@ KIND_JUMP_TABLE32
e3 fd ff ff	.long 4294966755	@ KIND_JUMP_TABLE32
10002c410:	55	pushq	%rbp
10002c411:	48 89 e5	movq	%rsp, %rbp
10002c414:	53	pushq	%rbx
10002c415:	50	pushq	%rax
10002c416:	81 fa 6b 63 6d 6e	cmpl	$1852662635, %edx
10002c41c:	7e 4e	jle	0x10002c46c
10002c41e:	81 fa 71 6e 63 73	cmpl	$1935896177, %edx
10002c424:	0f 8f 90 00 00 00	jg	0x10002c4ba
10002c42a:	81 fa 6c 63 6d 6e	cmpl	$1852662636, %edx
10002c430:	0f 84 c6 00 00 00	je	0x10002c4fc
10002c436:	81 fa 72 74 72 70	cmpl	$1886549106, %edx
10002c43c:	0f 85 32 01 00 00	jne	0x10002c574
10002c442:	48 8b 3d 57 61 02 00	movq	155991(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c449:	48 8b 35 98 52 02 00	movq	152216(%rip), %rsi ## Objc selector ref: mainBundle
10002c450:	48 8b 1d c9 07 01 00	movq	67529(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c457:	ff d3	callq	*%rbx
10002c459:	48 8b 35 00 52 02 00	movq	152064(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c460:	48 8d 15 39 39 01 00	leaq	80185(%rip), %rdx ## Objc cfstring ref: @"Output"
10002c467:	e9 47 01 00 00	jmp	0x10002c5b3
10002c46c:	81 fa 74 73 62 61	cmpl	$1633842036, %edx
10002c472:	0f 84 ae 00 00 00	je	0x10002c526
10002c478:	81 fa 6b 6e 69 6c	cmpl	$1818848875, %edx
10002c47e:	0f 84 0a 01 00 00	je	0x10002c58e
10002c484:	81 fa 72 74 6e 6d	cmpl	$1835955314, %edx
10002c48a:	0f 85 e4 00 00 00	jne	0x10002c574
10002c490:	48 8b 3d 09 61 02 00	movq	155913(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c497:	48 8b 35 4a 52 02 00	movq	152138(%rip), %rsi ## Objc selector ref: mainBundle
10002c49e:	48 8b 1d 7b 07 01 00	movq	67451(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c4a5:	ff d3	callq	*%rbx
10002c4a7:	48 8b 35 b2 51 02 00	movq	151986(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c4ae:	48 8d 15 cb 38 01 00	leaq	80075(%rip), %rdx ## Objc cfstring ref: @"Display"
10002c4b5:	e9 f9 00 00 00	jmp	0x10002c5b3
10002c4ba:	81 fa 63 61 70 73	cmpl	$1936744803, %edx
10002c4c0:	0f 84 87 00 00 00	je	0x10002c54d
10002c4c6:	81 fa 72 6e 63 73	cmpl	$1935896178, %edx
10002c4cc:	0f 85 a2 00 00 00	jne	0x10002c574
10002c4d2:	48 8b 3d c7 60 02 00	movq	155847(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c4d9:	48 8b 35 08 52 02 00	movq	152072(%rip), %rsi ## Objc selector ref: mainBundle
10002c4e0:	48 8b 1d 39 07 01 00	movq	67385(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c4e7:	ff d3	callq	*%rbx
10002c4e9:	48 8b 35 70 51 02 00	movq	151920(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c4f0:	48 8d 15 69 38 01 00	leaq	79977(%rip), %rdx ## Objc cfstring ref: @"Input"
10002c4f7:	e9 b7 00 00 00	jmp	0x10002c5b3
10002c4fc:	48 8b 3d 9d 60 02 00	movq	155805(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c503:	48 8b 35 de 51 02 00	movq	152030(%rip), %rsi ## Objc selector ref: mainBundle
10002c50a:	48 8b 1d 0f 07 01 00	movq	67343(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c511:	ff d3	callq	*%rbx
10002c513:	48 8b 35 46 51 02 00	movq	151878(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c51a:	48 8d 15 ff 37 01 00	leaq	79871(%rip), %rdx ## Objc cfstring ref: @"Named Color"
10002c521:	e9 8d 00 00 00	jmp	0x10002c5b3
10002c526:	48 8b 3d 73 60 02 00	movq	155763(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c52d:	48 8b 35 b4 51 02 00	movq	151988(%rip), %rsi ## Objc selector ref: mainBundle
10002c534:	48 8b 1d e5 06 01 00	movq	67301(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c53b:	ff d3	callq	*%rbx
10002c53d:	48 8b 35 1c 51 02 00	movq	151836(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c544:	48 8d 15 95 38 01 00	leaq	80021(%rip), %rdx ## Objc cfstring ref: @"Abstract"
10002c54b:	eb 66	jmp	0x10002c5b3
10002c54d:	48 8b 3d 4c 60 02 00	movq	155724(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c554:	48 8b 35 8d 51 02 00	movq	151949(%rip), %rsi ## Objc selector ref: mainBundle
10002c55b:	48 8b 1d be 06 01 00	movq	67262(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c562:	ff d3	callq	*%rbx
10002c564:	48 8b 35 f5 50 02 00	movq	151797(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c56b:	48 8d 15 8e 38 01 00	leaq	80014(%rip), %rdx ## Objc cfstring ref: @"Colorspace"
10002c572:	eb 3f	jmp	0x10002c5b3
10002c574:	48 8b 3d 4d 60 02 00	movq	155725(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSString
10002c57b:	48 8b 35 8e 5d 02 00	movq	155022(%rip), %rsi ## Objc selector ref: stringForType:
10002c582:	48 83 c4 08	addq	$8, %rsp
10002c586:	5b	popq	%rbx
10002c587:	5d	popq	%rbp
10002c588:	ff 25 92 06 01 00	jmpq	*67218(%rip) ## Objc message: +[NSString stringForType:]
10002c58e:	48 8b 3d 0b 60 02 00	movq	155659(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002c595:	48 8b 35 4c 51 02 00	movq	151884(%rip), %rsi ## Objc selector ref: mainBundle
10002c59c:	48 8b 1d 7d 06 01 00	movq	67197(%rip), %rbx ## Objc message: +[NSBundle mainBundle]
10002c5a3:	ff d3	callq	*%rbx
10002c5a5:	48 8b 35 b4 50 02 00	movq	151732(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002c5ac:	48 8d 15 0d 38 01 00	leaq	79885(%rip), %rdx ## Objc cfstring ref: @"Device-Link"
10002c5b3:	48 8d 0d e6 08 01 00	leaq	67814(%rip), %rcx ## Objc cfstring ref: @""
10002c5ba:	48 89 c7	movq	%rax, %rdi
10002c5bd:	45 31 c0	xorl	%r8d, %r8d
10002c5c0:	48 89 d8	movq	%rbx, %rax
10002c5c3:	48 83 c4 08	addq	$8, %rsp
10002c5c7:	5b	popq	%rbx
10002c5c8:	5d	popq	%rbp
10002c5c9:	ff e0	jmpq	*%rax
10002c5cb:	55	pushq	%rbp
10002c5cc:	48 89 e5	movq	%rsp, %rbp
10002c5cf:	41 56	pushq	%r14
10002c5d1:	53	pushq	%rbx
10002c5d2:	48 83 ec 50	subq	$80, %rsp
10002c5d6:	49 89 d6	movq	%rdx, %r14
10002c5d9:	0f 57 c0	xorps	%xmm0, %xmm0
10002c5dc:	0f 29 45 d0	movaps	%xmm0, -48(%rbp)
10002c5e0:	0f 28 05 e9 cd 00 00	movaps	52713(%rip), %xmm0
10002c5e7:	0f 29 45 e0	movaps	%xmm0, -32(%rbp)
10002c5eb:	48 8d 45 c0	leaq	-64(%rbp), %rax
10002c5ef:	48 89 38	movq	%rdi, (%rax)
10002c5f2:	48 8b 0d af 62 02 00	movq	156335(%rip), %rcx ## Objc class ref: FilterImagePrintView
10002c5f9:	48 89 48 08	movq	%rcx, 8(%rax)
10002c5fd:	48 8b 35 4c 4e 02 00	movq	151116(%rip), %rsi ## Objc selector ref: initWithFrame:
10002c604:	0f 28 45 d0	movaps	-48(%rbp), %xmm0
10002c608:	0f 28 4d e0	movaps	-32(%rbp), %xmm1
10002c60c:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002c611:	0f 11 04 24	movups	%xmm0, (%rsp)
10002c615:	48 89 c7	movq	%rax, %rdi
10002c618:	e8 bf 2e 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10002c61d:	48 89 c3	movq	%rax, %rbx
10002c620:	48 85 c0	testq	%rax, %rax
10002c623:	74 14	je	0x10002c639
10002c625:	4c 89 f7	movq	%r14, %rdi
10002c628:	ff 15 32 06 01 00	callq	*67122(%rip) ## literal pool symbol address: _objc_retain
10002c62e:	48 8b 0d 5b 72 02 00	movq	160347(%rip), %rcx
10002c635:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002c639:	48 89 d8	movq	%rbx, %rax
10002c63c:	48 83 c4 50	addq	$80, %rsp
10002c640:	5b	popq	%rbx
10002c641:	41 5e	popq	%r14
10002c643:	5d	popq	%rbp
10002c644:	c3	retq
10002c645:	55	pushq	%rbp
10002c646:	48 89 e5	movq	%rsp, %rbp
10002c649:	53	pushq	%rbx
10002c64a:	48 83 ec 18	subq	$24, %rsp
10002c64e:	48 89 fb	movq	%rdi, %rbx
10002c651:	48 8b 05 38 72 02 00	movq	160312(%rip), %rax
10002c658:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002c65c:	ff 15 f6 05 01 00	callq	*67062(%rip) ## literal pool symbol address: _objc_release
10002c662:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10002c666:	48 89 1f	movq	%rbx, (%rdi)
10002c669:	48 8b 05 38 62 02 00	movq	156216(%rip), %rax ## Objc class ref: FilterImagePrintView
10002c670:	48 89 47 08	movq	%rax, 8(%rdi)
10002c674:	48 8b 35 d5 49 02 00	movq	149973(%rip), %rsi ## Objc selector ref: dealloc
10002c67b:	e8 5c 2e 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10002c680:	48 83 c4 18	addq	$24, %rsp
10002c684:	5b	popq	%rbx
10002c685:	5d	popq	%rbp
10002c686:	c3	retq
10002c687:	55	pushq	%rbp
10002c688:	48 89 e5	movq	%rsp, %rbp
10002c68b:	48 8b 05 fe 71 02 00	movq	160254(%rip), %rax
10002c692:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002c696:	48 8b 35 3b 4a 02 00	movq	150075(%rip), %rsi ## Objc selector ref: displayName
10002c69d:	5d	popq	%rbp
10002c69e:	ff 25 7c 05 01 00	jmpq	*66940(%rip) ## Objc message: -[%rdi displayName]
10002c6a4:	55	pushq	%rbp
10002c6a5:	48 89 e5	movq	%rsp, %rbp
10002c6a8:	0f 28 05 01 cd 00 00	movaps	52481(%rip), %xmm0
10002c6af:	0f 11 02	movups	%xmm0, (%rdx)
10002c6b2:	b8 01 00 00 00	movl	$1, %eax
10002c6b7:	5d	popq	%rbp
10002c6b8:	c3	retq
10002c6b9:	55	pushq	%rbp
10002c6ba:	48 89 e5	movq	%rsp, %rbp
10002c6bd:	41 57	pushq	%r15
10002c6bf:	41 56	pushq	%r14
10002c6c1:	41 54	pushq	%r12
10002c6c3:	53	pushq	%rbx
10002c6c4:	48 83 ec 10	subq	$16, %rsp
10002c6c8:	49 89 fe	movq	%rdi, %r14
10002c6cb:	48 8b 3d 36 5f 02 00	movq	155446(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
10002c6d2:	48 8b 35 47 49 02 00	movq	149831(%rip), %rsi ## Objc selector ref: currentOperation
10002c6d9:	4c 8b 25 40 05 01 00	movq	66880(%rip), %r12 ## Objc message: +[NSPrintOperation currentOperation]
10002c6e0:	41 ff d4	callq	*%r12
10002c6e3:	48 8b 35 b6 52 02 00	movq	152246(%rip), %rsi ## Objc selector ref: printInfo
10002c6ea:	48 89 c7	movq	%rax, %rdi
10002c6ed:	41 ff d4	callq	*%r12
10002c6f0:	48 89 c3	movq	%rax, %rbx
10002c6f3:	4c 8b 3d 46 52 02 00	movq	152134(%rip), %r15 ## Objc selector ref: paperSize
10002c6fa:	48 89 c7	movq	%rax, %rdi
10002c6fd:	4c 89 fe	movq	%r15, %rsi
10002c700:	41 ff d4	callq	*%r12
10002c703:	f2 0f 11 45 d8	movsd	%xmm0, -40(%rbp)
10002c708:	48 89 df	movq	%rbx, %rdi
10002c70b:	4c 89 fe	movq	%r15, %rsi
10002c70e:	41 ff d4	callq	*%r12
10002c711:	0f 57 c0	xorps	%xmm0, %xmm0
10002c714:	41 0f 11 06	movups	%xmm0, (%r14)
10002c718:	f2 0f 10 45 d8	movsd	-40(%rbp), %xmm0
10002c71d:	f2 41 0f 11 46 10	movsd	%xmm0, 16(%r14)
10002c723:	f2 41 0f 11 4e 18	movsd	%xmm1, 24(%r14)
10002c729:	4c 89 f0	movq	%r14, %rax
10002c72c:	48 83 c4 10	addq	$16, %rsp
10002c730:	5b	popq	%rbx
10002c731:	41 5c	popq	%r12
10002c733:	41 5e	popq	%r14
10002c735:	41 5f	popq	%r15
10002c737:	5d	popq	%rbp
10002c738:	c3	retq
10002c739:	55	pushq	%rbp
10002c73a:	48 89 e5	movq	%rsp, %rbp
10002c73d:	41 57	pushq	%r15
10002c73f:	41 56	pushq	%r14
10002c741:	41 55	pushq	%r13
10002c743:	41 54	pushq	%r12
10002c745:	53	pushq	%rbx
10002c746:	48 81 ec 58 02 00 00	subq	$600, %rsp
10002c74d:	49 89 ff	movq	%rdi, %r15
10002c750:	4c 8b 2d 39 71 02 00	movq	160057(%rip), %r13
10002c757:	4a 8b 3c 2f	movq	(%rdi,%r13), %rdi
10002c75b:	48 8b 35 0e 4c 02 00	movq	150542(%rip), %rsi ## Objc selector ref: imageFilter
10002c762:	ff 15 b8 04 01 00	callq	*66744(%rip) ## Objc message: -[%rdi imageFilter]
10002c768:	48 85 c0	testq	%rax, %rax
10002c76b:	74 36	je	0x10002c7a3
10002c76d:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c771:	48 8b 1d 98 48 02 00	movq	149656(%rip), %rbx ## Objc selector ref: currentImage
10002c778:	4c 8b 35 a1 04 01 00	movq	66721(%rip), %r14 ## Objc message: -[%rdi currentImage]
10002c77f:	48 89 de	movq	%rbx, %rsi
10002c782:	41 ff d6	callq	*%r14
10002c785:	48 89 c7	movq	%rax, %rdi
10002c788:	e8 8b 27 00 00	callq	0x10002ef18 ## symbol stub for: _CFRetain
10002c78d:	48 89 45 a0	movq	%rax, -96(%rbp)
10002c791:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c795:	48 8b 35 4c 45 02 00	movq	148812(%rip), %rsi ## Objc selector ref: applyFilterAndScaleImage:
10002c79c:	31 d2	xorl	%edx, %edx
10002c79e:	41 ff d6	callq	*%r14
10002c7a1:	eb 0d	jmp	0x10002c7b0
10002c7a3:	48 8b 1d 66 48 02 00	movq	149606(%rip), %rbx ## Objc selector ref: currentImage
10002c7aa:	31 c0	xorl	%eax, %eax
10002c7ac:	48 89 45 a0	movq	%rax, -96(%rbp)
10002c7b0:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c7b4:	4c 8b 35 65 04 01 00	movq	66661(%rip), %r14 ## Objc message: -[%rdi currentImage]
10002c7bb:	48 89 de	movq	%rbx, %rsi
10002c7be:	41 ff d6	callq	*%r14
10002c7c1:	48 89 45 c8	movq	%rax, -56(%rbp)
10002c7c5:	48 8b 3d 3c 5e 02 00	movq	155196(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
10002c7cc:	48 8b 35 4d 48 02 00	movq	149581(%rip), %rsi ## Objc selector ref: currentOperation
10002c7d3:	41 ff d6	callq	*%r14
10002c7d6:	48 8b 35 c3 51 02 00	movq	152003(%rip), %rsi ## Objc selector ref: printInfo
10002c7dd:	48 89 c7	movq	%rax, %rdi
10002c7e0:	41 ff d6	callq	*%r14
10002c7e3:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c7e7:	48 8b 35 3a 58 02 00	movq	153658(%rip), %rsi ## Objc selector ref: setPrintInfo:
10002c7ee:	48 89 45 b0	movq	%rax, -80(%rbp)
10002c7f2:	48 89 c2	movq	%rax, %rdx
10002c7f5:	41 ff d6	callq	*%r14
10002c7f8:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c7fc:	4c 8b 25 55 51 02 00	movq	151893(%rip), %r12 ## Objc selector ref: pdeController
10002c803:	4c 89 e6	movq	%r12, %rsi
10002c806:	41 ff d6	callq	*%r14
10002c809:	48 89 c3	movq	%rax, %rbx
10002c80c:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c810:	48 8b 35 f9 45 02 00	movq	148985(%rip), %rsi ## Objc selector ref: canBePrintingTarget
10002c817:	41 ff d6	callq	*%r14
10002c81a:	48 8b 35 17 58 02 00	movq	153623(%rip), %rsi ## Objc selector ref: setPrintTargetEnabled:
10002c821:	0f be d0	movsbl	%al, %edx
10002c824:	48 89 df	movq	%rbx, %rdi
10002c827:	41 ff d6	callq	*%r14
10002c82a:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c82e:	4c 89 e6	movq	%r12, %rsi
10002c831:	41 ff d6	callq	*%r14
10002c834:	48 8b 1d 6d 51 02 00	movq	151917(%rip), %rbx ## Objc selector ref: printMode
10002c83b:	48 89 c7	movq	%rax, %rdi
10002c83e:	48 89 de	movq	%rbx, %rsi
10002c841:	41 ff d6	callq	*%r14
10002c844:	48 85 c0	testq	%rax, %rax
10002c847:	4c 89 bd 20 ff ff ff	movq	%r15, -224(%rbp)
10002c84e:	0f 84 80 00 00 00	je	0x10002c8d4
10002c854:	4c 8b 65 c8	movq	-56(%rbp), %r12
10002c858:	4c 8b 2d 31 70 02 00	movq	159793(%rip), %r13
10002c85f:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c863:	48 8b 35 ee 50 02 00	movq	151790(%rip), %rsi ## Objc selector ref: pdeController
10002c86a:	41 ff d6	callq	*%r14
10002c86d:	48 89 c7	movq	%rax, %rdi
10002c870:	48 89 de	movq	%rbx, %rsi
10002c873:	41 ff d6	callq	*%r14
10002c876:	48 83 f8 02	cmpq	$2, %rax
10002c87a:	0f 85 67 01 00 00	jne	0x10002c9e7
10002c880:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c884:	48 8b 35 25 5b 02 00	movq	154405(%rip), %rsi ## Objc selector ref: targetIntentDict
10002c88b:	41 ff d6	callq	*%r14
10002c88e:	48 89 c3	movq	%rax, %rbx
10002c891:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c895:	48 8b 35 34 46 02 00	movq	149044(%rip), %rsi ## Objc selector ref: colorSpaceModel
10002c89c:	41 ff d6	callq	*%r14
10002c89f:	31 ff	xorl	%edi, %edi
10002c8a1:	48 85 db	testq	%rbx, %rbx
10002c8a4:	0f 84 46 01 00 00	je	0x10002c9f0
10002c8aa:	83 f8 02	cmpl	$2, %eax
10002c8ad:	4c 8b 7d a0	movq	-96(%rbp), %r15
10002c8b1:	0f 87 3d 01 00 00	ja	0x10002c9f4
10002c8b7:	48 98	cltq
10002c8b9:	48 8d 0d 30 05 01 00	leaq	66864(%rip), %rcx
10002c8c0:	48 8b 34 c1	movq	(%rcx,%rax,8), %rsi
10002c8c4:	48 89 df	movq	%rbx, %rdi
10002c8c7:	e8 16 26 00 00	callq	0x10002eee2 ## symbol stub for: _CFDictionaryGetValue
10002c8cc:	48 89 c7	movq	%rax, %rdi
10002c8cf:	e9 20 01 00 00	jmp	0x10002c9f4
10002c8d4:	48 8b 35 a5 42 02 00	movq	148133(%rip), %rsi ## Objc selector ref: PMPrintSession
10002c8db:	48 8b 5d b0	movq	-80(%rbp), %rbx
10002c8df:	48 89 df	movq	%rbx, %rdi
10002c8e2:	41 ff d6	callq	*%r14
10002c8e5:	49 89 c5	movq	%rax, %r13
10002c8e8:	48 8b 35 99 42 02 00	movq	148121(%rip), %rsi ## Objc selector ref: PMPrintSettings
10002c8ef:	48 89 df	movq	%rbx, %rdi
10002c8f2:	41 ff d6	callq	*%r14
10002c8f5:	4c 8d a5 40 ff ff ff	leaq	-192(%rbp), %r12
10002c8fc:	4c 89 ef	movq	%r13, %rdi
10002c8ff:	48 89 c6	movq	%rax, %rsi
10002c902:	4c 89 e2	movq	%r12, %rdx
10002c905:	e8 34 2a 00 00	callq	0x10002f33e ## symbol stub for: _PMSessionCopyCurrentPrinterColorSyncProfile
10002c90a:	49 8b 3c 24	movq	(%r12), %rdi
10002c90e:	31 f6	xorl	%esi, %esi
10002c910:	e8 d5 26 00 00	callq	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
10002c915:	48 89 45 b0	movq	%rax, -80(%rbp)
10002c919:	4c 8b 25 f8 5c 02 00	movq	154872(%rip), %r12 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10002c920:	48 8b 1d c9 5c 02 00	movq	154825(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002c927:	4c 8b 2d 62 6f 02 00	movq	159586(%rip), %r13
10002c92e:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002c932:	48 8b 35 1f 50 02 00	movq	151583(%rip), %rsi ## Objc selector ref: pdeController
10002c939:	41 ff d6	callq	*%r14
10002c93c:	48 8b 35 0d 42 02 00	movq	147981(%rip), %rsi ## Objc selector ref: BPC
10002c943:	48 89 c7	movq	%rax, %rdi
10002c946:	41 ff d6	callq	*%r14
10002c949:	48 8b 35 b8 4e 02 00	movq	151224(%rip), %rsi ## Objc selector ref: numberWithBool:
10002c950:	0f be d0	movsbl	%al, %edx
10002c953:	48 89 df	movq	%rbx, %rdi
10002c956:	41 ff d6	callq	*%r14
10002c959:	48 8b 0d 60 00 01 00	movq	65632(%rip), %rcx ## literal pool symbol address: _kCGColorTransformBlackPointCompensation
10002c960:	48 8b 09	movq	(%rcx), %rcx
10002c963:	48 8b 35 4e 47 02 00	movq	149326(%rip), %rsi ## Objc selector ref: dictionaryWithObjectsAndKeys:
10002c96a:	4c 89 e7	movq	%r12, %rdi
10002c96d:	48 89 c2	movq	%rax, %rdx
10002c970:	45 31 c0	xorl	%r8d, %r8d
10002c973:	31 c0	xorl	%eax, %eax
10002c975:	41 ff d6	callq	*%r14
10002c978:	48 89 45 d0	movq	%rax, -48(%rbp)
10002c97c:	4c 8b 6d b0	movq	-80(%rbp), %r13
10002c980:	4c 89 ef	movq	%r13, %rdi
10002c983:	31 f6	xorl	%esi, %esi
10002c985:	e8 c6 26 00 00	callq	0x10002f050 ## symbol stub for: _CGColorTransformCreate
10002c98a:	48 89 c3	movq	%rax, %rbx
10002c98d:	48 8b 05 fc 6e 02 00	movq	159484(%rip), %rax
10002c994:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002c998:	48 8b 35 b9 4f 02 00	movq	151481(%rip), %rsi ## Objc selector ref: pdeController
10002c99f:	41 ff d6	callq	*%r14
10002c9a2:	48 8b 35 af 44 02 00	movq	148655(%rip), %rsi ## Objc selector ref: cgRenderingIntent
10002c9a9:	48 89 c7	movq	%rax, %rdi
10002c9ac:	41 ff d6	callq	*%r14
10002c9af:	48 89 df	movq	%rbx, %rdi
10002c9b2:	4c 8b 65 c8	movq	-56(%rbp), %r12
10002c9b6:	4c 89 e6	movq	%r12, %rsi
10002c9b9:	89 c2	movl	%eax, %edx
10002c9bb:	48 8b 4d d0	movq	-48(%rbp), %rcx
10002c9bf:	e8 86 26 00 00	callq	0x10002f04a ## symbol stub for: _CGColorTransformConvertImage
10002c9c4:	49 89 c6	movq	%rax, %r14
10002c9c7:	48 89 df	movq	%rbx, %rdi
10002c9ca:	e8 93 26 00 00	callq	0x10002f062 ## symbol stub for: _CGColorTransformRelease
10002c9cf:	4c 89 ef	movq	%r13, %rdi
10002c9d2:	e8 5b 26 00 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10002c9d7:	4d 85 f6	testq	%r14, %r14
10002c9da:	4d 0f 45 e6	cmovneq	%r14, %r12
10002c9de:	4c 8b 2d ab 6e 02 00	movq	159403(%rip), %r13
10002c9e5:	eb 03	jmp	0x10002c9ea
10002c9e7:	45 31 f6	xorl	%r14d, %r14d
10002c9ea:	4c 8b 7d a0	movq	-96(%rbp), %r15
10002c9ee:	eb 27	jmp	0x10002ca17
10002c9f0:	4c 8b 7d a0	movq	-96(%rbp), %r15
10002c9f4:	31 f6	xorl	%esi, %esi
10002c9f6:	e8 ef 25 00 00	callq	0x10002efea ## symbol stub for: _CGColorSpaceCreateWithColorSyncProfile
10002c9fb:	48 89 c3	movq	%rax, %rbx
10002c9fe:	4c 89 e7	movq	%r12, %rdi
10002ca01:	48 89 c6	movq	%rax, %rsi
10002ca04:	e8 01 27 00 00	callq	0x10002f10a ## symbol stub for: _CGImageCreateCopyWithColorSpace
10002ca09:	49 89 c6	movq	%rax, %r14
10002ca0c:	48 89 df	movq	%rbx, %rdi
10002ca0f:	e8 1e 26 00 00	callq	0x10002f032 ## symbol stub for: _CGColorSpaceRelease
10002ca14:	4d 89 f4	movq	%r14, %r12
10002ca17:	4d 85 e4	testq	%r12, %r12
10002ca1a:	0f 84 71 07 00 00	je	0x10002d191
10002ca20:	4c 89 65 c8	movq	%r12, -56(%rbp)
10002ca24:	48 8b 3d 0d 5c 02 00	movq	154637(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10002ca2b:	48 8b 35 ce 45 02 00	movq	148942(%rip), %rsi ## Objc selector ref: currentContext
10002ca32:	48 8b 1d e7 01 01 00	movq	66023(%rip), %rbx ## Objc message: +[NSGraphicsContext currentContext]
10002ca39:	ff d3	callq	*%rbx
10002ca3b:	48 8b 35 1e 41 02 00	movq	147742(%rip), %rsi ## Objc selector ref: CGContext
10002ca42:	48 89 c7	movq	%rax, %rdi
10002ca45:	ff d3	callq	*%rbx
10002ca47:	48 89 85 28 ff ff ff	movq	%rax, -216(%rbp)
10002ca4e:	48 89 c7	movq	%rax, %rdi
10002ca51:	e8 6c 26 00 00	callq	0x10002f0c2 ## symbol stub for: _CGContextSaveGState
10002ca56:	48 8b 3d ab 5b 02 00	movq	154539(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
10002ca5d:	48 8b 35 bc 45 02 00	movq	148924(%rip), %rsi ## Objc selector ref: currentOperation
10002ca64:	ff d3	callq	*%rbx
10002ca66:	48 89 c7	movq	%rax, %rdi
10002ca69:	48 8b 35 30 4f 02 00	movq	151344(%rip), %rsi ## Objc selector ref: printInfo
10002ca70:	ff d3	callq	*%rbx
10002ca72:	48 89 c3	movq	%rax, %rbx
10002ca75:	48 85 c0	testq	%rax, %rax
10002ca78:	4c 89 75 d0	movq	%r14, -48(%rbp)
10002ca7c:	74 18	je	0x10002ca96
10002ca7e:	48 8b 15 43 49 02 00	movq	149827(%rip), %rdx ## Objc selector ref: imageablePageBounds
10002ca85:	48 8d bd 00 ff ff ff	leaq	-256(%rbp), %rdi
10002ca8c:	48 89 de	movq	%rbx, %rsi
10002ca8f:	e8 4e 2a 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10002ca94:	eb 11	jmp	0x10002caa7
10002ca96:	0f 57 c0	xorps	%xmm0, %xmm0
10002ca99:	0f 29 85 10 ff ff ff	movaps	%xmm0, -240(%rbp)
10002caa0:	0f 29 85 00 ff ff ff	movaps	%xmm0, -256(%rbp)
10002caa7:	0f 57 c0	xorps	%xmm0, %xmm0
10002caaa:	0f 29 85 80 fe ff ff	movaps	%xmm0, -384(%rbp)
10002cab1:	48 8b 35 88 4e 02 00	movq	151176(%rip), %rsi ## Objc selector ref: paperSize
10002cab8:	48 89 df	movq	%rbx, %rdi
10002cabb:	4c 8b 25 5e 01 01 00	movq	65886(%rip), %r12 ## Objc message: +[NSPrintOperation paperSize]
10002cac2:	41 ff d4	callq	*%r12
10002cac5:	f2 0f 11 45 b0	movsd	%xmm0, -80(%rbp)
10002caca:	f2 0f 11 85 90 fe ff ff	movsd	%xmm0, -368(%rbp)
10002cad2:	f2 0f 11 8d 30 ff ff ff	movsd	%xmm1, -208(%rbp)
10002cada:	f2 0f 11 8d 98 fe ff ff	movsd	%xmm1, -360(%rbp)
10002cae2:	4c 8b bd 20 ff ff ff	movq	-224(%rbp), %r15
10002cae9:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002caed:	4c 8b 35 64 4e 02 00	movq	151140(%rip), %r14 ## Objc selector ref: pdeController
10002caf4:	4c 89 f6	movq	%r14, %rsi
10002caf7:	41 ff d4	callq	*%r12
10002cafa:	48 8b 35 cf 50 02 00	movq	151759(%rip), %rsi ## Objc selector ref: scalingMode
10002cb01:	48 89 c7	movq	%rax, %rdi
10002cb04:	41 ff d4	callq	*%r12
10002cb07:	48 89 c3	movq	%rax, %rbx
10002cb0a:	48 8b 05 6f fa 00 00	movq	64111(%rip), %rax ## literal pool symbol address: _CGRectZero
10002cb11:	0f 10 00	movups	(%rax), %xmm0
10002cb14:	0f 10 48 10	movups	16(%rax), %xmm1
10002cb18:	0f 29 4d 80	movaps	%xmm1, -128(%rbp)
10002cb1c:	0f 29 85 70 ff ff ff	movaps	%xmm0, -144(%rbp)
10002cb23:	48 83 fb 01	cmpq	$1, %rbx
10002cb27:	48 89 5d 90	movq	%rbx, -112(%rbp)
10002cb2b:	0f 85 90 00 00 00	jne	0x10002cbc1
10002cb31:	4b 8b 3c 2f	movq	(%r15,%r13), %rdi
10002cb35:	4c 89 f6	movq	%r14, %rsi
10002cb38:	41 ff d4	callq	*%r12
10002cb3b:	48 8b 35 86 50 02 00	movq	151686(%rip), %rsi ## Objc selector ref: scaleToFitMode
10002cb42:	48 89 c7	movq	%rax, %rdi
10002cb45:	41 ff d4	callq	*%r12
10002cb48:	f2 0f 10 95 00 ff ff ff	movsd	-256(%rbp), %xmm2
10002cb50:	48 83 f8 01	cmpq	$1, %rax
10002cb54:	4d 89 e5	movq	%r12, %r13
10002cb57:	0f 85 8d 00 00 00	jne	0x10002cbea
10002cb5d:	f2 0f 10 8d 10 ff ff ff	movsd	-240(%rbp), %xmm1
10002cb65:	f2 0f 58 ca	addsd	%xmm2, %xmm1
10002cb69:	f2 0f 10 45 b0	movsd	-80(%rbp), %xmm0
10002cb6e:	f2 0f 5c c1	subsd	%xmm1, %xmm0
10002cb72:	f2 0f 5f c2	maxsd	%xmm2, %xmm0
10002cb76:	f2 0f 10 95 08 ff ff ff	movsd	-248(%rbp), %xmm2
10002cb7e:	f2 0f 10 9d 18 ff ff ff	movsd	-232(%rbp), %xmm3
10002cb86:	f2 0f 58 da	addsd	%xmm2, %xmm3
10002cb8a:	f2 0f 10 8d 30 ff ff ff	movsd	-208(%rbp), %xmm1
10002cb92:	f2 0f 5c cb	subsd	%xmm3, %xmm1
10002cb96:	f2 0f 5f ca	maxsd	%xmm2, %xmm1
10002cb9a:	66 0f 28 95 80 fe ff ff	movapd	-384(%rbp), %xmm2
10002cba2:	0f 28 9d 90 fe ff ff	movaps	-368(%rbp), %xmm3
10002cba9:	0f 11 5c 24 10	movups	%xmm3, 16(%rsp)
10002cbae:	66 0f 11 14 24	movupd	%xmm2, (%rsp)
10002cbb3:	48 8d bd 70 ff ff ff	leaq	-144(%rbp), %rdi
10002cbba:	e8 31 27 00 00	callq	0x10002f2f0 ## symbol stub for: _NSInsetRect
10002cbbf:	eb 4e	jmp	0x10002cc0f
10002cbc1:	66 0f 28 85 00 ff ff ff	movapd	-256(%rbp), %xmm0
10002cbc9:	66 0f 28 8d 10 ff ff ff	movapd	-240(%rbp), %xmm1
10002cbd1:	66 0f 29 85 70 ff ff ff	movapd	%xmm0, -144(%rbp)
10002cbd9:	66 0f 29 4d 80	movapd	%xmm1, -128(%rbp)
10002cbde:	48 8b 5d c8	movq	-56(%rbp), %rbx
10002cbe2:	4d 89 e5	movq	%r12, %r13
10002cbe5:	4d 89 f4	movq	%r14, %r12
10002cbe8:	eb 30	jmp	0x10002cc1a
10002cbea:	f2 0f 10 8d 18 ff ff ff	movsd	-232(%rbp), %xmm1
10002cbf2:	f2 0f 11 95 70 ff ff ff	movsd	%xmm2, -144(%rbp)
10002cbfa:	66 0f 10 85 08 ff ff ff	movupd	-248(%rbp), %xmm0
10002cc02:	66 0f 11 85 78 ff ff ff	movupd	%xmm0, -136(%rbp)
10002cc0a:	f2 0f 11 4d 88	movsd	%xmm1, -120(%rbp)
10002cc0f:	48 8b 5d c8	movq	-56(%rbp), %rbx
10002cc13:	4c 8b 25 3e 4d 02 00	movq	150846(%rip), %r12 ## Objc selector ref: pdeController
10002cc1a:	4c 8b 75 d0	movq	-48(%rbp), %r14
10002cc1e:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10002cc22:	66 0f 29 85 e0 fe ff ff	movapd	%xmm0, -288(%rbp)
10002cc2a:	48 89 df	movq	%rbx, %rdi
10002cc2d:	e8 4a 25 00 00	callq	0x10002f17c ## symbol stub for: _CGImageGetWidth
10002cc32:	66 48 0f 6e c0	movq	%rax, %xmm0
10002cc37:	66 0f 62 05 d1 b9 00 00	punpckldq	47569(%rip), %xmm0
10002cc3f:	66 0f 5c 05 d9 b9 00 00	subpd	47577(%rip), %xmm0
10002cc47:	66 0f 7c c0	haddpd	%xmm0, %xmm0
10002cc4b:	66 0f 13 85 f0 fe ff ff	movlpd	%xmm0, -272(%rbp)
10002cc53:	48 89 df	movq	%rbx, %rdi
10002cc56:	e8 03 25 00 00	callq	0x10002f15e ## symbol stub for: _CGImageGetHeight
10002cc5b:	66 48 0f 6e c0	movq	%rax, %xmm0
10002cc60:	66 0f 62 05 a8 b9 00 00	punpckldq	47528(%rip), %xmm0
10002cc68:	66 0f 5c 05 b0 b9 00 00	subpd	47536(%rip), %xmm0
10002cc70:	66 0f 7c c0	haddpd	%xmm0, %xmm0
10002cc74:	66 0f 13 85 f8 fe ff ff	movlpd	%xmm0, -264(%rbp)
10002cc7c:	48 8b 05 0d 6c 02 00	movq	158733(%rip), %rax
10002cc83:	49 8b 34 07	movq	(%r15,%rax), %rsi
10002cc87:	48 85 f6	testq	%rsi, %rsi
10002cc8a:	74 15	je	0x10002cca1
10002cc8c:	48 8b 15 1d 40 02 00	movq	147485(%rip), %rdx ## Objc selector ref: affineTransform
10002cc93:	48 8d bd 40 ff ff ff	leaq	-192(%rbp), %rdi
10002cc9a:	e8 43 28 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10002cc9f:	eb 1c	jmp	0x10002ccbd
10002cca1:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10002cca5:	66 0f 29 85 60 ff ff ff	movapd	%xmm0, -160(%rbp)
10002ccad:	66 0f 29 85 50 ff ff ff	movapd	%xmm0, -176(%rbp)
10002ccb5:	66 0f 29 85 40 ff ff ff	movapd	%xmm0, -192(%rbp)
10002ccbd:	0f 28 85 40 ff ff ff	movaps	-192(%rbp), %xmm0
10002ccc4:	0f 28 8d 50 ff ff ff	movaps	-176(%rbp), %xmm1
10002cccb:	0f 28 95 60 ff ff ff	movaps	-160(%rbp), %xmm2
10002ccd2:	0f 11 54 24 40	movups	%xmm2, 64(%rsp)
10002ccd7:	0f 11 4c 24 30	movups	%xmm1, 48(%rsp)
10002ccdc:	0f 11 44 24 20	movups	%xmm0, 32(%rsp)
10002cce1:	0f 28 85 e0 fe ff ff	movaps	-288(%rbp), %xmm0
10002cce8:	66 0f 28 8d f0 fe ff ff	movapd	-272(%rbp), %xmm1
10002ccf0:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10002ccf6:	0f 11 04 24	movups	%xmm0, (%rsp)
10002ccfa:	48 8d 9d 10 fe ff ff	leaq	-496(%rbp), %rbx
10002cd01:	48 89 df	movq	%rbx, %rdi
10002cd04:	e8 21 25 00 00	callq	0x10002f22a ## symbol stub for: _CGRectApplyAffineTransform
10002cd09:	66 0f 10 43 10	movupd	16(%rbx), %xmm0
10002cd0e:	66 0f 29 45 b0	movapd	%xmm0, -80(%rbp)
10002cd13:	48 8b 05 76 6b 02 00	movq	158582(%rip), %rax
10002cd1a:	49 8b 3c 07	movq	(%r15,%rax), %rdi
10002cd1e:	4c 89 e6	movq	%r12, %rsi
10002cd21:	41 ff d5	callq	*%r13
10002cd24:	48 8b 35 35 40 02 00	movq	147509(%rip), %rsi ## Objc selector ref: autoRotate
10002cd2b:	48 89 c7	movq	%rax, %rdi
10002cd2e:	41 ff d5	callq	*%r13
10002cd31:	3c 01	cmpb	$1, %al
10002cd33:	0f 85 43 01 00 00	jne	0x10002ce7c
10002cd39:	66 0f 28 4d b0	movapd	-80(%rbp), %xmm1
10002cd3e:	66 0f 28 c1	movapd	%xmm1, %xmm0
10002cd42:	66 0f 15 c1	unpckhpd	%xmm1, %xmm0
10002cd46:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10002cd4a:	76 0c	jbe	0x10002cd58
10002cd4c:	f2 0f 10 4d 88	movsd	-120(%rbp), %xmm1
10002cd51:	66 0f 2e 4d 80	ucomisd	-128(%rbp), %xmm1
10002cd56:	77 1b	ja	0x10002cd73
10002cd58:	66 0f 2e 45 b0	ucomisd	-80(%rbp), %xmm0
10002cd5d:	0f 86 19 01 00 00	jbe	0x10002ce7c
10002cd63:	f2 0f 10 45 80	movsd	-128(%rbp), %xmm0
10002cd68:	66 0f 2e 45 88	ucomisd	-120(%rbp), %xmm0
10002cd6d:	0f 86 09 01 00 00	jbe	0x10002ce7c
10002cd73:	66 0f 57 c0	xorpd	%xmm0, %xmm0
10002cd77:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10002cd7b:	66 0f 16 0d 5d c6 00 00	movhpd	50781(%rip), %xmm1
10002cd83:	66 0f 29 8d b0 fe ff ff	movapd	%xmm1, -336(%rbp)
10002cd8b:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
10002cd95:	48 89 85 c0 fe ff ff	movq	%rax, -320(%rbp)
10002cd9c:	66 0f 11 85 c8 fe ff ff	movupd	%xmm0, -312(%rbp)
10002cda4:	0f 28 45 b0	movaps	-80(%rbp), %xmm0
10002cda8:	f2 0f 11 85 d8 fe ff ff	movsd	%xmm0, -296(%rbp)
10002cdb0:	0f 28 85 b0 fe ff ff	movaps	-336(%rbp), %xmm0
10002cdb7:	0f 28 8d c0 fe ff ff	movaps	-320(%rbp), %xmm1
10002cdbe:	0f 28 95 d0 fe ff ff	movaps	-304(%rbp), %xmm2
10002cdc5:	0f 11 54 24 40	movups	%xmm2, 64(%rsp)
10002cdca:	0f 11 4c 24 30	movups	%xmm1, 48(%rsp)
10002cdcf:	0f 11 44 24 20	movups	%xmm0, 32(%rsp)
10002cdd4:	0f 28 85 e0 fe ff ff	movaps	-288(%rbp), %xmm0
10002cddb:	0f 28 8d f0 fe ff ff	movaps	-272(%rbp), %xmm1
10002cde2:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002cde7:	0f 11 04 24	movups	%xmm0, (%rsp)
10002cdeb:	48 8d 9d 30 fe ff ff	leaq	-464(%rbp), %rbx
10002cdf2:	48 89 df	movq	%rbx, %rdi
10002cdf5:	e8 30 24 00 00	callq	0x10002f22a ## symbol stub for: _CGRectApplyAffineTransform
10002cdfa:	0f 10 43 10	movups	16(%rbx), %xmm0
10002cdfe:	0f 29 45 b0	movaps	%xmm0, -80(%rbp)
10002ce02:	0f 28 85 40 ff ff ff	movaps	-192(%rbp), %xmm0
10002ce09:	0f 28 8d 50 ff ff ff	movaps	-176(%rbp), %xmm1
10002ce10:	0f 28 95 60 ff ff ff	movaps	-160(%rbp), %xmm2
10002ce17:	0f 11 54 24 50	movups	%xmm2, 80(%rsp)
10002ce1c:	0f 11 4c 24 40	movups	%xmm1, 64(%rsp)
10002ce21:	0f 11 44 24 30	movups	%xmm0, 48(%rsp)
10002ce26:	0f 28 85 b0 fe ff ff	movaps	-336(%rbp), %xmm0
10002ce2d:	0f 28 8d c0 fe ff ff	movaps	-320(%rbp), %xmm1
10002ce34:	0f 28 95 d0 fe ff ff	movaps	-304(%rbp), %xmm2
10002ce3b:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10002ce40:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002ce45:	0f 11 04 24	movups	%xmm0, (%rsp)
10002ce49:	48 8d 9d 50 fe ff ff	leaq	-432(%rbp), %rbx
10002ce50:	48 89 df	movq	%rbx, %rdi
10002ce53:	e8 20 21 00 00	callq	0x10002ef78 ## symbol stub for: _CGAffineTransformConcat
10002ce58:	66 0f 10 03	movupd	(%rbx), %xmm0
10002ce5c:	66 0f 10 4b 10	movupd	16(%rbx), %xmm1
10002ce61:	0f 10 53 20	movups	32(%rbx), %xmm2
10002ce65:	0f 29 95 60 ff ff ff	movaps	%xmm2, -160(%rbp)
10002ce6c:	66 0f 29 8d 50 ff ff ff	movapd	%xmm1, -176(%rbp)
10002ce74:	66 0f 29 85 40 ff ff ff	movapd	%xmm0, -192(%rbp)
10002ce7c:	48 8b 1d 0d 6a 02 00	movq	158221(%rip), %rbx
10002ce83:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002ce87:	48 8b 35 92 42 02 00	movq	148114(%rip), %rsi ## Objc selector ref: dpiWidth
10002ce8e:	41 ff d5	callq	*%r13
10002ce91:	f3 0f 11 85 30 ff ff ff	movss	%xmm0, -208(%rbp)
10002ce99:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002ce9d:	48 8b 35 74 42 02 00	movq	148084(%rip), %rsi ## Objc selector ref: dpiHeight
10002cea4:	41 ff d5	callq	*%r13
10002cea7:	f3 0f 10 8d 30 ff ff ff	movss	-208(%rbp), %xmm1
10002ceaf:	f3 0f 5f c8	maxss	%xmm0, %xmm1
10002ceb3:	f3 0f 10 05 ed c4 00 00	movss	50413(%rip), %xmm0
10002cebb:	f3 0f 5e c1	divss	%xmm1, %xmm0
10002cebf:	48 83 7d 90 01	cmpq	$1, -112(%rbp)
10002cec4:	0f 29 85 a0 fe ff ff	movaps	%xmm0, -352(%rbp)
10002cecb:	75 64	jne	0x10002cf31
10002cecd:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10002ced1:	66 0f 28 4d 80	movapd	-128(%rbp), %xmm1
10002ced6:	66 0f 29 8d 30 ff ff ff	movapd	%xmm1, -208(%rbp)
10002cede:	66 0f 5e 4d b0	divpd	-80(%rbp), %xmm1
10002cee3:	f2 0f 12 c0	movddup	%xmm0, %xmm0
10002cee7:	66 0f 5e c8	divpd	%xmm0, %xmm1
10002ceeb:	66 0f 5a c1	cvtpd2ps	%xmm1, %xmm0
10002ceef:	66 0f 29 45 90	movapd	%xmm0, -112(%rbp)
10002cef4:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002cef8:	4c 89 e6	movq	%r12, %rsi
10002cefb:	41 ff d5	callq	*%r13
10002cefe:	4d 89 e6	movq	%r12, %r14
10002cf01:	4c 8b 25 c0 4c 02 00	movq	150720(%rip), %r12 ## Objc selector ref: scaleToFitMode
10002cf08:	48 89 c7	movq	%rax, %rdi
10002cf0b:	4c 89 e6	movq	%r12, %rsi
10002cf0e:	41 ff d5	callq	*%r13
10002cf11:	48 83 f8 01	cmpq	$1, %rax
10002cf15:	75 5b	jne	0x10002cf72
10002cf17:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10002cf1b:	f3 0f 16 c1	movshdup	%xmm1, %xmm0
10002cf1f:	f3 0f 5d c8	minss	%xmm0, %xmm1
10002cf23:	f3 0f 12 c9	movsldup	%xmm1, %xmm1
10002cf27:	0f 29 4d 90	movaps	%xmm1, -112(%rbp)
10002cf2b:	4c 8b 75 d0	movq	-48(%rbp), %r14
10002cf2f:	eb 72	jmp	0x10002cfa3
10002cf31:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002cf35:	4c 89 e6	movq	%r12, %rsi
10002cf38:	41 ff d5	callq	*%r13
10002cf3b:	48 8b 35 7e 4c 02 00	movq	150654(%rip), %rsi ## Objc selector ref: scaleFactor
10002cf42:	48 89 c7	movq	%rax, %rdi
10002cf45:	41 ff d5	callq	*%r13
10002cf48:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002cf4c:	0f 28 4d 80	movaps	-128(%rbp), %xmm1
10002cf50:	0f 29 8d 30 ff ff ff	movaps	%xmm1, -208(%rbp)
10002cf57:	f3 0f 12 c8	movsldup	%xmm0, %xmm1
10002cf5b:	0f 28 85 a0 fe ff ff	movaps	-352(%rbp), %xmm0
10002cf62:	4c 8b 7d a0	movq	-96(%rbp), %r15
10002cf66:	4c 8b ad 28 ff ff ff	movq	-216(%rbp), %r13
10002cf6d:	e9 8e 00 00 00	jmp	0x10002d000
10002cf72:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002cf76:	4c 89 f6	movq	%r14, %rsi
10002cf79:	41 ff d5	callq	*%r13
10002cf7c:	48 89 c7	movq	%rax, %rdi
10002cf7f:	4c 89 e6	movq	%r12, %rsi
10002cf82:	41 ff d5	callq	*%r13
10002cf85:	48 83 f8 02	cmpq	$2, %rax
10002cf89:	4c 8b 75 d0	movq	-48(%rbp), %r14
10002cf8d:	75 14	jne	0x10002cfa3
10002cf8f:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10002cf93:	f3 0f 16 c1	movshdup	%xmm1, %xmm0
10002cf97:	f3 0f 5f c1	maxss	%xmm1, %xmm0
10002cf9b:	f3 0f 12 c0	movsldup	%xmm0, %xmm0
10002cf9f:	0f 29 45 90	movaps	%xmm0, -112(%rbp)
10002cfa3:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002cfa7:	48 8b 35 aa 49 02 00	movq	149930(%rip), %rsi ## Objc selector ref: pdeController
10002cfae:	41 ff d5	callq	*%r13
10002cfb1:	48 89 c3	movq	%rax, %rbx
10002cfb4:	4c 8b 25 85 54 02 00	movq	152709(%rip), %r12 ## Objc selector ref: updateComputedScale:
10002cfbb:	48 8b 3d 2e 56 02 00	movq	153134(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002cfc2:	0f 57 c0	xorps	%xmm0, %xmm0
10002cfc5:	f3 0f 5a 45 90	cvtss2sd	-112(%rbp), %xmm0
10002cfca:	48 8b 35 3f 48 02 00	movq	149567(%rip), %rsi ## Objc selector ref: numberWithDouble:
10002cfd1:	41 ff d5	callq	*%r13
10002cfd4:	48 8b 35 95 49 02 00	movq	149909(%rip), %rsi ## Objc selector ref: performSelector:withObject:afterDelay:
10002cfdb:	0f 57 c0	xorps	%xmm0, %xmm0
10002cfde:	48 89 df	movq	%rbx, %rdi
10002cfe1:	4c 89 e2	movq	%r12, %rdx
10002cfe4:	48 89 c1	movq	%rax, %rcx
10002cfe7:	41 ff d5	callq	*%r13
10002cfea:	4c 8b 7d a0	movq	-96(%rbp), %r15
10002cfee:	4c 8b ad 28 ff ff ff	movq	-216(%rbp), %r13
10002cff5:	0f 28 85 a0 fe ff ff	movaps	-352(%rbp), %xmm0
10002cffc:	0f 28 4d 90	movaps	-112(%rbp), %xmm1
10002d000:	f3 0f 12 c0	movsldup	%xmm0, %xmm0
10002d004:	0f 59 c1	mulps	%xmm1, %xmm0
10002d007:	0f 5a c0	cvtps2pd	%xmm0, %xmm0
10002d00a:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10002d00e:	48 8d 9d e0 fd ff ff	leaq	-544(%rbp), %rbx
10002d015:	48 89 df	movq	%rbx, %rdi
10002d018:	0f 28 c8	movaps	%xmm0, %xmm1
10002d01b:	e8 64 1f 00 00	callq	0x10002ef84 ## symbol stub for: _CGAffineTransformMakeScale
10002d020:	0f 10 03	movups	(%rbx), %xmm0
10002d023:	0f 10 4b 10	movups	16(%rbx), %xmm1
10002d027:	0f 10 53 20	movups	32(%rbx), %xmm2
10002d02b:	0f 11 54 24 50	movups	%xmm2, 80(%rsp)
10002d030:	0f 11 4c 24 40	movups	%xmm1, 64(%rsp)
10002d035:	0f 11 44 24 30	movups	%xmm0, 48(%rsp)
10002d03a:	0f 28 85 40 ff ff ff	movaps	-192(%rbp), %xmm0
10002d041:	0f 28 8d 50 ff ff ff	movaps	-176(%rbp), %xmm1
10002d048:	0f 28 95 60 ff ff ff	movaps	-160(%rbp), %xmm2
10002d04f:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10002d054:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d059:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d05d:	48 8d 9d b0 fe ff ff	leaq	-336(%rbp), %rbx
10002d064:	48 89 df	movq	%rbx, %rdi
10002d067:	e8 0c 1f 00 00	callq	0x10002ef78 ## symbol stub for: _CGAffineTransformConcat
10002d06c:	0f 10 03	movups	(%rbx), %xmm0
10002d06f:	0f 10 4b 10	movups	16(%rbx), %xmm1
10002d073:	0f 10 53 20	movups	32(%rbx), %xmm2
10002d077:	0f 29 95 60 ff ff ff	movaps	%xmm2, -160(%rbp)
10002d07e:	0f 29 8d 50 ff ff ff	movaps	%xmm1, -176(%rbp)
10002d085:	66 0f 28 4d b0	movapd	-80(%rbp), %xmm1
10002d08a:	66 0f 59 4d a0	mulpd	-96(%rbp), %xmm1
10002d08f:	66 0f 28 95 30 ff ff ff	movapd	-208(%rbp), %xmm2
10002d097:	66 0f 5c d1	subpd	%xmm1, %xmm2
10002d09b:	66 0f 59 15 bd b5 00 00	mulpd	46525(%rip), %xmm2
10002d0a3:	66 0f 58 95 70 ff ff ff	addpd	-144(%rbp), %xmm2
10002d0ab:	66 0f 5a ca	cvtpd2ps	%xmm2, %xmm1
10002d0af:	0f 5a c9	cvtps2pd	%xmm1, %xmm1
10002d0b2:	0f 29 85 40 ff ff ff	movaps	%xmm0, -192(%rbp)
10002d0b9:	66 0f 58 8d 60 ff ff ff	addpd	-160(%rbp), %xmm1
10002d0c1:	66 0f 29 8d 60 ff ff ff	movapd	%xmm1, -160(%rbp)
10002d0c9:	4c 89 ef	movq	%r13, %rdi
10002d0cc:	e8 df 1f 00 00	callq	0x10002f0b0 ## symbol stub for: _CGContextGetType
10002d0d1:	83 f8 04	cmpl	$4, %eax
10002d0d4:	75 1e	jne	0x10002d0f4
10002d0d6:	0f 28 85 70 ff ff ff	movaps	-144(%rbp), %xmm0
10002d0dd:	66 0f 28 4d 80	movapd	-128(%rbp), %xmm1
10002d0e2:	66 0f 11 4c 24 10	movupd	%xmm1, 16(%rsp)
10002d0e8:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d0ec:	4c 89 ef	movq	%r13, %rdi
10002d0ef:	e8 80 1f 00 00	callq	0x10002f074 ## symbol stub for: _CGContextClipToRect
10002d0f4:	4c 8d a5 b0 fe ff ff	leaq	-336(%rbp), %r12
10002d0fb:	4c 89 e7	movq	%r12, %rdi
10002d0fe:	4c 89 ee	movq	%r13, %rsi
10002d101:	e8 9e 1f 00 00	callq	0x10002f0a4 ## symbol stub for: _CGContextGetCTM
10002d106:	0f 28 85 40 ff ff ff	movaps	-192(%rbp), %xmm0
10002d10d:	0f 28 8d 50 ff ff ff	movaps	-176(%rbp), %xmm1
10002d114:	0f 28 95 60 ff ff ff	movaps	-160(%rbp), %xmm2
10002d11b:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10002d120:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d125:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d129:	4c 89 ef	movq	%r13, %rdi
10002d12c:	e8 49 1f 00 00	callq	0x10002f07a ## symbol stub for: _CGContextConcatCTM
10002d131:	48 8d 9d 50 fe ff ff	leaq	-432(%rbp), %rbx
10002d138:	48 89 df	movq	%rbx, %rdi
10002d13b:	4c 89 ee	movq	%r13, %rsi
10002d13e:	e8 61 1f 00 00	callq	0x10002f0a4 ## symbol stub for: _CGContextGetCTM
10002d143:	0f 10 03	movups	(%rbx), %xmm0
10002d146:	0f 10 4b 10	movups	16(%rbx), %xmm1
10002d14a:	0f 10 53 20	movups	32(%rbx), %xmm2
10002d14e:	41 0f 29 54 24 20	movaps	%xmm2, 32(%r12)
10002d154:	41 0f 29 4c 24 10	movaps	%xmm1, 16(%r12)
10002d15a:	41 0f 29 04 24	movaps	%xmm0, (%r12)
10002d15f:	0f 28 85 e0 fe ff ff	movaps	-288(%rbp), %xmm0
10002d166:	0f 28 8d f0 fe ff ff	movaps	-272(%rbp), %xmm1
10002d16d:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d172:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d176:	4c 89 ef	movq	%r13, %rdi
10002d179:	48 8b 75 c8	movq	-56(%rbp), %rsi
10002d17d:	e8 fe 1e 00 00	callq	0x10002f080 ## symbol stub for: _CGContextDrawImage
10002d182:	4c 89 ef	movq	%r13, %rdi
10002d185:	e8 32 1f 00 00	callq	0x10002f0bc ## symbol stub for: _CGContextRestoreGState
10002d18a:	4c 8b 2d ff 66 02 00	movq	157439(%rip), %r13
10002d191:	4d 85 f6	testq	%r14, %r14
10002d194:	74 08	je	0x10002d19e
10002d196:	4c 89 f7	movq	%r14, %rdi
10002d199:	e8 ea 1f 00 00	callq	0x10002f188 ## symbol stub for: _CGImageRelease
10002d19e:	4d 85 ff	testq	%r15, %r15
10002d1a1:	74 23	je	0x10002d1c6
10002d1a3:	48 8b 85 20 ff ff ff	movq	-224(%rbp), %rax
10002d1aa:	4a 8b 3c 28	movq	(%rax,%r13), %rdi
10002d1ae:	48 8b 35 f3 4c 02 00	movq	150771(%rip), %rsi ## Objc selector ref: setImage:
10002d1b5:	4c 89 fa	movq	%r15, %rdx
10002d1b8:	ff 15 62 fa 00 00	callq	*64098(%rip) ## Objc message: +[NSNumber setImage:]
10002d1be:	4c 89 ff	movq	%r15, %rdi
10002d1c1:	e8 4c 1d 00 00	callq	0x10002ef12 ## symbol stub for: _CFRelease
10002d1c6:	48 81 c4 58 02 00 00	addq	$600, %rsp
10002d1cd:	5b	popq	%rbx
10002d1ce:	41 5c	popq	%r12
10002d1d0:	41 5d	popq	%r13
10002d1d2:	41 5e	popq	%r14
10002d1d4:	41 5f	popq	%r15
10002d1d6:	5d	popq	%rbp
10002d1d7:	c3	retq
10002d1d8:	55	pushq	%rbp
10002d1d9:	48 89 e5	movq	%rsp, %rbp
10002d1dc:	41 57	pushq	%r15
10002d1de:	41 56	pushq	%r14
10002d1e0:	53	pushq	%rbx
10002d1e1:	48 83 ec 38	subq	$56, %rsp
10002d1e5:	49 89 ce	movq	%rcx, %r14
10002d1e8:	49 89 d7	movq	%rdx, %r15
10002d1eb:	48 8d 45 d8	leaq	-40(%rbp), %rax
10002d1ef:	48 89 38	movq	%rdi, (%rax)
10002d1f2:	48 8b 0d b7 56 02 00	movq	153271(%rip), %rcx ## Objc class ref: FilterPDFPrintView
10002d1f9:	48 89 48 08	movq	%rcx, 8(%rax)
10002d1fd:	48 8b 35 4c 42 02 00	movq	148044(%rip), %rsi ## Objc selector ref: initWithFrame:
10002d204:	0f 28 45 10	movaps	16(%rbp), %xmm0
10002d208:	0f 28 4d 20	movaps	32(%rbp), %xmm1
10002d20c:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d211:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d215:	48 89 c7	movq	%rax, %rdi
10002d218:	e8 bf 22 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithFrame:]
10002d21d:	48 89 c3	movq	%rax, %rbx
10002d220:	48 85 c0	testq	%rax, %rax
10002d223:	74 2d	je	0x10002d252
10002d225:	4c 89 ff	movq	%r15, %rdi
10002d228:	ff 15 32 fa 00 00	callq	*64050(%rip) ## literal pool symbol address: _objc_retain
10002d22e:	48 8b 0d 63 66 02 00	movq	157283(%rip), %rcx
10002d235:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002d239:	4d 85 f6	testq	%r14, %r14
10002d23c:	74 14	je	0x10002d252
10002d23e:	4c 89 f7	movq	%r14, %rdi
10002d241:	ff 15 19 fa 00 00	callq	*64025(%rip) ## literal pool symbol address: _objc_retain
10002d247:	48 8b 0d 52 66 02 00	movq	157266(%rip), %rcx
10002d24e:	48 89 04 0b	movq	%rax, (%rbx,%rcx)
10002d252:	48 89 d8	movq	%rbx, %rax
10002d255:	48 83 c4 38	addq	$56, %rsp
10002d259:	5b	popq	%rbx
10002d25a:	41 5e	popq	%r14
10002d25c:	41 5f	popq	%r15
10002d25e:	5d	popq	%rbp
10002d25f:	c3	retq
10002d260:	55	pushq	%rbp
10002d261:	48 89 e5	movq	%rsp, %rbp
10002d264:	53	pushq	%rbx
10002d265:	48 83 ec 18	subq	$24, %rsp
10002d269:	48 89 fb	movq	%rdi, %rbx
10002d26c:	48 8b 05 25 66 02 00	movq	157221(%rip), %rax
10002d273:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002d277:	ff 15 db f9 00 00	callq	*63963(%rip) ## literal pool symbol address: _objc_release
10002d27d:	48 8b 05 1c 66 02 00	movq	157212(%rip), %rax
10002d284:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002d288:	48 85 ff	testq	%rdi, %rdi
10002d28b:	74 06	je	0x10002d293
10002d28d:	ff 15 c5 f9 00 00	callq	*63941(%rip) ## literal pool symbol address: _objc_release
10002d293:	48 8d 7d e8	leaq	-24(%rbp), %rdi
10002d297:	48 89 1f	movq	%rbx, (%rdi)
10002d29a:	48 8b 05 0f 56 02 00	movq	153103(%rip), %rax ## Objc class ref: FilterPDFPrintView
10002d2a1:	48 89 47 08	movq	%rax, 8(%rdi)
10002d2a5:	48 8b 35 a4 3d 02 00	movq	146852(%rip), %rsi ## Objc selector ref: dealloc
10002d2ac:	e8 2b 22 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10002d2b1:	48 83 c4 18	addq	$24, %rsp
10002d2b5:	5b	popq	%rbx
10002d2b6:	5d	popq	%rbp
10002d2b7:	c3	retq
10002d2b8:	55	pushq	%rbp
10002d2b9:	48 89 e5	movq	%rsp, %rbp
10002d2bc:	48 8b 05 d5 65 02 00	movq	157141(%rip), %rax
10002d2c3:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002d2c7:	48 8b 35 0a 3e 02 00	movq	146954(%rip), %rsi ## Objc selector ref: displayName
10002d2ce:	5d	popq	%rbp
10002d2cf:	ff 25 4b f9 00 00	jmpq	*63819(%rip) ## Objc message: -[%rdi displayName]
10002d2d5:	55	pushq	%rbp
10002d2d6:	48 89 e5	movq	%rsp, %rbp
10002d2d9:	53	pushq	%rbx
10002d2da:	50	pushq	%rax
10002d2db:	48 89 d3	movq	%rdx, %rbx
10002d2de:	48 c7 02 01 00 00 00	movq	$1, (%rdx)
10002d2e5:	48 8b 05 ac 65 02 00	movq	157100(%rip), %rax
10002d2ec:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002d2f0:	48 8b 35 49 3f 02 00	movq	147273(%rip), %rsi ## Objc selector ref: filterDocument
10002d2f7:	ff 15 23 f9 00 00	callq	*63779(%rip) ## Objc message: -[%rdi filterDocument]
10002d2fd:	48 89 c7	movq	%rax, %rdi
10002d300:	e8 e3 1e 00 00	callq	0x10002f1e8 ## symbol stub for: _CGPDFDocumentGetNumberOfPages
10002d305:	48 89 43 08	movq	%rax, 8(%rbx)
10002d309:	b8 01 00 00 00	movl	$1, %eax
10002d30e:	48 83 c4 08	addq	$8, %rsp
10002d312:	5b	popq	%rbx
10002d313:	5d	popq	%rbp
10002d314:	c3	retq
10002d315:	55	pushq	%rbp
10002d316:	48 89 e5	movq	%rsp, %rbp
10002d319:	41 56	pushq	%r14
10002d31b:	53	pushq	%rbx
10002d31c:	48 89 fb	movq	%rdi, %rbx
10002d31f:	48 8b 05 82 65 02 00	movq	157058(%rip), %rax
10002d326:	48 89 0c 06	movq	%rcx, (%rsi,%rax)
10002d32a:	48 8b 3d d7 52 02 00	movq	152279(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
10002d331:	48 8b 35 e8 3c 02 00	movq	146664(%rip), %rsi ## Objc selector ref: currentOperation
10002d338:	4c 8b 35 e1 f8 00 00	movq	63713(%rip), %r14 ## Objc message: +[NSPrintOperation currentOperation]
10002d33f:	41 ff d6	callq	*%r14
10002d342:	48 8b 35 57 46 02 00	movq	149079(%rip), %rsi ## Objc selector ref: printInfo
10002d349:	48 89 c7	movq	%rax, %rdi
10002d34c:	41 ff d6	callq	*%r14
10002d34f:	48 8b 35 ea 45 02 00	movq	148970(%rip), %rsi ## Objc selector ref: paperSize
10002d356:	48 89 c7	movq	%rax, %rdi
10002d359:	41 ff d6	callq	*%r14
10002d35c:	0f 57 d2	xorps	%xmm2, %xmm2
10002d35f:	0f 11 13	movups	%xmm2, (%rbx)
10002d362:	f2 0f 11 43 10	movsd	%xmm0, 16(%rbx)
10002d367:	f2 0f 11 4b 18	movsd	%xmm1, 24(%rbx)
10002d36c:	48 89 d8	movq	%rbx, %rax
10002d36f:	5b	popq	%rbx
10002d370:	41 5e	popq	%r14
10002d372:	5d	popq	%rbp
10002d373:	c3	retq
10002d374:	55	pushq	%rbp
10002d375:	48 89 e5	movq	%rsp, %rbp
10002d378:	48 8b 05 91 f3 00 00	movq	62353(%rip), %rax ## literal pool symbol address: _NSZeroPoint
10002d37f:	f2 0f 10 00	movsd	(%rax), %xmm0
10002d383:	f2 0f 10 48 08	movsd	8(%rax), %xmm1
10002d388:	5d	popq	%rbp
10002d389:	c3	retq
10002d38a:	55	pushq	%rbp
10002d38b:	48 89 e5	movq	%rsp, %rbp
10002d38e:	41 57	pushq	%r15
10002d390:	41 56	pushq	%r14
10002d392:	41 55	pushq	%r13
10002d394:	41 54	pushq	%r12
10002d396:	53	pushq	%rbx
10002d397:	48 81 ec 58 01 00 00	subq	$344, %rsp
10002d39e:	48 89 fb	movq	%rdi, %rbx
10002d3a1:	48 8b 3d 90 52 02 00	movq	152208(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSGraphicsContext
10002d3a8:	48 8b 35 51 3c 02 00	movq	146513(%rip), %rsi ## Objc selector ref: currentContext
10002d3af:	4c 8b 35 6a f8 00 00	movq	63594(%rip), %r14 ## Objc message: +[NSGraphicsContext currentContext]
10002d3b6:	41 ff d6	callq	*%r14
10002d3b9:	48 8b 35 a0 37 02 00	movq	145312(%rip), %rsi ## Objc selector ref: CGContext
10002d3c0:	48 89 c7	movq	%rax, %rdi
10002d3c3:	41 ff d6	callq	*%r14
10002d3c6:	48 89 45 a0	movq	%rax, -96(%rbp)
10002d3ca:	4c 8b 2d c7 64 02 00	movq	156871(%rip), %r13
10002d3d1:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10002d3d5:	48 8b 35 64 3e 02 00	movq	147044(%rip), %rsi ## Objc selector ref: filterDocument
10002d3dc:	41 ff d6	callq	*%r14
10002d3df:	48 89 45 c0	movq	%rax, -64(%rbp)
10002d3e3:	48 8b 3d 1e 52 02 00	movq	152094(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSPrintOperation
10002d3ea:	48 8b 35 2f 3c 02 00	movq	146479(%rip), %rsi ## Objc selector ref: currentOperation
10002d3f1:	41 ff d6	callq	*%r14
10002d3f4:	48 8b 35 a5 45 02 00	movq	148901(%rip), %rsi ## Objc selector ref: printInfo
10002d3fb:	48 89 c7	movq	%rax, %rdi
10002d3fe:	41 ff d6	callq	*%r14
10002d401:	49 89 c4	movq	%rax, %r12
10002d404:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10002d408:	4c 8b 3d 49 45 02 00	movq	148809(%rip), %r15 ## Objc selector ref: pdeController
10002d40f:	4c 89 fe	movq	%r15, %rsi
10002d412:	41 ff d6	callq	*%r14
10002d415:	48 8b 35 a4 47 02 00	movq	149412(%rip), %rsi ## Objc selector ref: scaleFactor
10002d41c:	48 89 c7	movq	%rax, %rdi
10002d41f:	41 ff d6	callq	*%r14
10002d422:	f2 0f 11 85 68 ff ff ff	movsd	%xmm0, -152(%rbp)
10002d42a:	4a 8b 3c 2b	movq	(%rbx,%r13), %rdi
10002d42e:	4c 89 fe	movq	%r15, %rsi
10002d431:	41 ff d6	callq	*%r14
10002d434:	48 8b 35 25 39 02 00	movq	145701(%rip), %rsi ## Objc selector ref: autoRotate
10002d43b:	48 89 c7	movq	%rax, %rdi
10002d43e:	41 ff d6	callq	*%r14
10002d441:	88 45 90	movb	%al, -112(%rbp)
10002d444:	48 8b 35 f5 44 02 00	movq	148725(%rip), %rsi ## Objc selector ref: paperSize
10002d44b:	4c 89 65 b8	movq	%r12, -72(%rbp)
10002d44f:	4c 89 e7	movq	%r12, %rdi
10002d452:	41 ff d6	callq	*%r14
10002d455:	0f 29 45 80	movaps	%xmm0, -128(%rbp)
10002d459:	0f 29 8d 70 ff ff ff	movaps	%xmm1, -144(%rbp)
10002d460:	48 8b 05 41 64 02 00	movq	156737(%rip), %rax
10002d467:	48 89 5d d0	movq	%rbx, -48(%rbp)
10002d46b:	48 8b 34 03	movq	(%rbx,%rax), %rsi
10002d46f:	48 8b 7d c0	movq	-64(%rbp), %rdi
10002d473:	e8 76 1d 00 00	callq	0x10002f1ee ## symbol stub for: _CGPDFDocumentGetPage
10002d478:	49 89 c7	movq	%rax, %r15
10002d47b:	48 8d 9d b0 fe ff ff	leaq	-336(%rbp), %rbx
10002d482:	48 89 df	movq	%rbx, %rdi
10002d485:	48 89 c6	movq	%rax, %rsi
10002d488:	ba 01 00 00 00	movl	$1, %edx
10002d48d:	e8 74 1d 00 00	callq	0x10002f206 ## symbol stub for: _CGPDFPageGetBoxRect
10002d492:	0f 10 43 10	movups	16(%rbx), %xmm0
10002d496:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10002d49a:	48 8b 7d a0	movq	-96(%rbp), %rdi
10002d49e:	49 89 fc	movq	%rdi, %r12
10002d4a1:	e8 0a 1c 00 00	callq	0x10002f0b0 ## symbol stub for: _CGContextGetType
10002d4a6:	83 f8 04	cmpl	$4, %eax
10002d4a9:	0f 85 89 00 00 00	jne	0x10002d538
10002d4af:	48 8b 75 b8	movq	-72(%rbp), %rsi
10002d4b3:	48 85 f6	testq	%rsi, %rsi
10002d4b6:	74 15	je	0x10002d4cd
10002d4b8:	48 8b 15 09 3f 02 00	movq	147209(%rip), %rdx ## Objc selector ref: imageablePageBounds
10002d4bf:	48 8d bd 10 ff ff ff	leaq	-240(%rbp), %rdi
10002d4c6:	e8 17 20 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10002d4cb:	eb 11	jmp	0x10002d4de
10002d4cd:	0f 57 c0	xorps	%xmm0, %xmm0
10002d4d0:	0f 29 85 20 ff ff ff	movaps	%xmm0, -224(%rbp)
10002d4d7:	0f 29 85 10 ff ff ff	movaps	%xmm0, -240(%rbp)
10002d4de:	0f 28 85 10 ff ff ff	movaps	-240(%rbp), %xmm0
10002d4e5:	0f 28 8d 20 ff ff ff	movaps	-224(%rbp), %xmm1
10002d4ec:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d4f1:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d4f5:	48 8d 9d 30 ff ff ff	leaq	-208(%rbp), %rbx
10002d4fc:	48 89 df	movq	%rbx, %rdi
10002d4ff:	e8 f2 1d 00 00	callq	0x10002f2f6 ## symbol stub for: _NSIntegralRect
10002d504:	0f 28 03	movaps	(%rbx), %xmm0
10002d507:	0f 28 4b 10	movaps	16(%rbx), %xmm1
10002d50b:	0f 29 85 f0 fe ff ff	movaps	%xmm0, -272(%rbp)
10002d512:	0f 29 8d 00 ff ff ff	movaps	%xmm1, -256(%rbp)
10002d519:	0f 28 85 f0 fe ff ff	movaps	-272(%rbp), %xmm0
10002d520:	0f 28 8d 00 ff ff ff	movaps	-256(%rbp), %xmm1
10002d527:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d52c:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d530:	4c 89 e7	movq	%r12, %rdi
10002d533:	e8 3c 1b 00 00	callq	0x10002f074 ## symbol stub for: _CGContextClipToRect
10002d538:	48 8b 05 79 ec 00 00	movq	60537(%rip), %rax ## literal pool symbol address: _CGAffineTransformIdentity
10002d53f:	0f 10 00	movups	(%rax), %xmm0
10002d542:	66 0f 10 48 10	movupd	16(%rax), %xmm1
10002d547:	66 0f 10 50 20	movupd	32(%rax), %xmm2
10002d54c:	66 0f 29 95 50 ff ff ff	movapd	%xmm2, -176(%rbp)
10002d554:	66 0f 29 8d 40 ff ff ff	movapd	%xmm1, -192(%rbp)
10002d55c:	0f 29 85 30 ff ff ff	movaps	%xmm0, -208(%rbp)
10002d563:	4c 89 ff	movq	%r15, %rdi
10002d566:	e8 a1 1c 00 00	callq	0x10002f20c ## symbol stub for: _CGPDFPageGetRotationAngle
10002d56b:	3d 0e 01 00 00	cmpl	$270, %eax
10002d570:	74 05	je	0x10002d577
10002d572:	83 f8 5a	cmpl	$90, %eax
10002d575:	75 15	jne	0x10002d58c
10002d577:	0f 28 5d c0	movaps	-64(%rbp), %xmm3
10002d57b:	0f 57 c0	xorps	%xmm0, %xmm0
10002d57e:	f2 0f 5a c3	cvtsd2ss	%xmm3, %xmm0
10002d582:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10002d586:	0f c6 d8 4e	shufps	$78, %xmm0, %xmm3
10002d58a:	eb 04	jmp	0x10002d590
10002d58c:	0f 28 5d c0	movaps	-64(%rbp), %xmm3
10002d590:	48 8b 1d 01 63 02 00	movq	156417(%rip), %rbx
10002d597:	80 7d 90 00	cmpb	$0, -112(%rbp)
10002d59b:	74 29	je	0x10002d5c6
10002d59d:	0f 28 c3	movaps	%xmm3, %xmm0
10002d5a0:	66 0f 15 c3	unpckhpd	%xmm3, %xmm0
10002d5a4:	0f 28 cb	movaps	%xmm3, %xmm1
10002d5a7:	66 0f c2 c8 05	cmpnltpd	%xmm0, %xmm1
10002d5ac:	66 0f 28 55 80	movapd	-128(%rbp), %xmm2
10002d5b1:	66 0f c2 95 70 ff ff ff 01	cmpltpd	-144(%rbp), %xmm2
10002d5ba:	66 0f 57 d1	xorpd	%xmm1, %xmm2
10002d5be:	66 0f 7e d0	movd	%xmm2, %eax
10002d5c2:	a8 01	testb	$1, %al
10002d5c4:	74 06	je	0x10002d5cc
10002d5c6:	0f 29 5d c0	movaps	%xmm3, -64(%rbp)
10002d5ca:	eb 47	jmp	0x10002d613
10002d5cc:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10002d5d0:	66 0f 11 8d 48 ff ff ff	movupd	%xmm1, -184(%rbp)
10002d5d8:	66 0f 16 0d 00 be 00 00	movhpd	48640(%rip), %xmm1
10002d5e0:	66 0f 29 8d 30 ff ff ff	movapd	%xmm1, -208(%rbp)
10002d5e8:	48 b8 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rax
10002d5f2:	48 89 85 40 ff ff ff	movq	%rax, -192(%rbp)
10002d5f9:	f2 0f 11 9d 58 ff ff ff	movsd	%xmm3, -168(%rbp)
10002d601:	0f 57 c9	xorps	%xmm1, %xmm1
10002d604:	f2 0f 5a cb	cvtsd2ss	%xmm3, %xmm1
10002d608:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
10002d60c:	0f 16 c1	movlhps	%xmm1, %xmm0
10002d60f:	0f 29 45 c0	movaps	%xmm0, -64(%rbp)
10002d613:	4c 8b 2d 3e 43 02 00	movq	148286(%rip), %r13 ## Objc selector ref: pdeController
10002d61a:	48 8b 45 d0	movq	-48(%rbp), %rax
10002d61e:	48 8b 3c 18	movq	(%rax,%rbx), %rdi
10002d622:	4c 89 ee	movq	%r13, %rsi
10002d625:	41 ff d6	callq	*%r14
10002d628:	48 8b 35 a1 45 02 00	movq	148897(%rip), %rsi ## Objc selector ref: scalingMode
10002d62f:	48 89 c7	movq	%rax, %rdi
10002d632:	41 ff d6	callq	*%r14
10002d635:	66 0f 28 4d c0	movapd	-64(%rbp), %xmm1
10002d63a:	66 0f 28 d9	movapd	%xmm1, %xmm3
10002d63e:	66 0f 15 d9	unpckhpd	%xmm1, %xmm3
10002d642:	48 83 f8 01	cmpq	$1, %rax
10002d646:	4c 89 bd 60 ff ff ff	movq	%r15, -160(%rbp)
10002d64d:	75 39	jne	0x10002d688
10002d64f:	48 8b 75 b8	movq	-72(%rbp), %rsi
10002d653:	48 85 f6	testq	%rsi, %rsi
10002d656:	66 0f 29 5d 90	movapd	%xmm3, -112(%rbp)
10002d65b:	0f 84 83 00 00 00	je	0x10002d6e4
10002d661:	48 8b 15 60 3d 02 00	movq	146784(%rip), %rdx ## Objc selector ref: imageablePageBounds
10002d668:	48 8d 9d d0 fe ff ff	leaq	-304(%rbp), %rbx
10002d66f:	48 89 df	movq	%rbx, %rdi
10002d672:	e8 6b 1e 00 00	callq	0x10002f4e2 ## symbol stub for: _objc_msgSend_stret
10002d677:	0f 10 43 10	movups	16(%rbx), %xmm0
10002d67b:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10002d67f:	48 8b 1d 12 62 02 00	movq	156178(%rip), %rbx
10002d686:	eb 77	jmp	0x10002d6ff
10002d688:	0f 57 c0	xorps	%xmm0, %xmm0
10002d68b:	f2 0f 5a 85 68 ff ff ff	cvtsd2ss	-152(%rbp), %xmm0
10002d693:	f3 0f 10 25 f9 a8 00 00	movss	43257(%rip), %xmm4
10002d69b:	0f 2e c4	ucomiss	%xmm4, %xmm0
10002d69e:	4c 8b 7d d0	movq	-48(%rbp), %r15
10002d6a2:	75 06	jne	0x10002d6aa
10002d6a4:	0f 8b 55 01 00 00	jnp	0x10002d7ff
10002d6aa:	66 0f 29 5d 90	movapd	%xmm3, -112(%rbp)
10002d6af:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10002d6b3:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10002d6b7:	f2 0f 11 45 b8	movsd	%xmm0, -72(%rbp)
10002d6bc:	48 8b 3d 95 50 02 00	movq	151701(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAffineTransform
10002d6c3:	48 8b 35 36 4d 02 00	movq	150838(%rip), %rsi ## Objc selector ref: transform
10002d6ca:	41 ff d6	callq	*%r14
10002d6cd:	48 89 c3	movq	%rax, %rbx
10002d6d0:	48 8b 35 e1 44 02 00	movq	148705(%rip), %rsi ## Objc selector ref: scaleBy:
10002d6d7:	48 89 c7	movq	%rax, %rdi
10002d6da:	f2 0f 10 45 b8	movsd	-72(%rbp), %xmm0
10002d6df:	e9 fa 00 00 00	jmp	0x10002d7de
10002d6e4:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10002d6e8:	66 0f 29 8d e0 fe ff ff	movapd	%xmm1, -288(%rbp)
10002d6f0:	0f 57 c0	xorps	%xmm0, %xmm0
10002d6f3:	0f 29 45 a0	movaps	%xmm0, -96(%rbp)
10002d6f7:	66 0f 29 8d d0 fe ff ff	movapd	%xmm1, -304(%rbp)
10002d6ff:	4c 8b 7d d0	movq	-48(%rbp), %r15
10002d703:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002d707:	4c 89 ee	movq	%r13, %rsi
10002d70a:	41 ff d6	callq	*%r14
10002d70d:	48 8b 35 b4 44 02 00	movq	148660(%rip), %rsi ## Objc selector ref: scaleToFitMode
10002d714:	48 89 c7	movq	%rax, %rdi
10002d717:	41 ff d6	callq	*%r14
10002d71a:	48 83 f8 01	cmpq	$1, %rax
10002d71e:	75 40	jne	0x10002d760
10002d720:	66 0f 28 65 a0	movapd	-96(%rbp), %xmm4
10002d725:	66 0f 28 c4	movapd	%xmm4, %xmm0
10002d729:	66 0f 28 4d c0	movapd	-64(%rbp), %xmm1
10002d72e:	f2 0f 5e c1	divsd	%xmm1, %xmm0
10002d732:	0f 57 d2	xorps	%xmm2, %xmm2
10002d735:	f2 0f 5a d0	cvtsd2ss	%xmm0, %xmm2
10002d739:	0f 57 c0	xorps	%xmm0, %xmm0
10002d73c:	f3 0f 5a c2	cvtss2sd	%xmm2, %xmm0
10002d740:	66 0f 28 5d 90	movapd	-112(%rbp), %xmm3
10002d745:	f2 0f 59 c3	mulsd	%xmm3, %xmm0
10002d749:	66 0f 15 e4	unpckhpd	%xmm4, %xmm4
10002d74d:	66 0f 2e c4	ucomisd	%xmm4, %xmm0
10002d751:	76 49	jbe	0x10002d79c
10002d753:	f2 0f 5e e3	divsd	%xmm3, %xmm4
10002d757:	0f 57 d2	xorps	%xmm2, %xmm2
10002d75a:	f2 0f 5a d4	cvtsd2ss	%xmm4, %xmm2
10002d75e:	eb 3c	jmp	0x10002d79c
10002d760:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002d764:	4c 89 ee	movq	%r13, %rsi
10002d767:	41 ff d6	callq	*%r14
10002d76a:	48 89 c7	movq	%rax, %rdi
10002d76d:	48 8b 35 54 44 02 00	movq	148564(%rip), %rsi ## Objc selector ref: scaleToFitMode
10002d774:	41 ff d6	callq	*%r14
10002d777:	48 83 f8 02	cmpq	$2, %rax
10002d77b:	66 0f 28 4d c0	movapd	-64(%rbp), %xmm1
10002d780:	66 0f 28 5d 90	movapd	-112(%rbp), %xmm3
10002d785:	75 24	jne	0x10002d7ab
10002d787:	66 0f 28 c1	movapd	%xmm1, %xmm0
10002d78b:	66 0f 5e 45 a0	divpd	-96(%rbp), %xmm0
10002d790:	66 0f 5a c0	cvtpd2ps	%xmm0, %xmm0
10002d794:	f3 0f 16 d0	movshdup	%xmm0, %xmm2
10002d798:	f3 0f 5f d0	maxss	%xmm0, %xmm2
10002d79c:	f3 0f 10 25 f0 a7 00 00	movss	42992(%rip), %xmm4
10002d7a4:	0f 2e d4	ucomiss	%xmm4, %xmm2
10002d7a7:	75 02	jne	0x10002d7ab
10002d7a9:	7b 54	jnp	0x10002d7ff
10002d7ab:	0f 29 55 a0	movaps	%xmm2, -96(%rbp)
10002d7af:	0f 57 c0	xorps	%xmm0, %xmm0
10002d7b2:	f3 0f 5a c2	cvtss2sd	%xmm2, %xmm0
10002d7b6:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
10002d7bb:	48 8b 3d 96 4f 02 00	movq	151446(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAffineTransform
10002d7c2:	48 8b 35 37 4c 02 00	movq	150583(%rip), %rsi ## Objc selector ref: transform
10002d7c9:	41 ff d6	callq	*%r14
10002d7cc:	48 89 c3	movq	%rax, %rbx
10002d7cf:	48 8b 35 e2 43 02 00	movq	148450(%rip), %rsi ## Objc selector ref: scaleBy:
10002d7d6:	48 89 c7	movq	%rax, %rdi
10002d7d9:	f2 0f 10 45 d0	movsd	-48(%rbp), %xmm0
10002d7de:	41 ff d6	callq	*%r14
10002d7e1:	48 8b 35 48 37 02 00	movq	145224(%rip), %rsi ## Objc selector ref: concat
10002d7e8:	48 89 df	movq	%rbx, %rdi
10002d7eb:	ff 15 2f f4 00 00	callq	*62511(%rip) ## Objc message: +[NSAffineTransform concat]
10002d7f1:	0f 28 65 a0	movaps	-96(%rbp), %xmm4
10002d7f5:	66 0f 28 4d c0	movapd	-64(%rbp), %xmm1
10002d7fa:	66 0f 28 5d 90	movapd	-112(%rbp), %xmm3
10002d7ff:	66 0f 28 45 80	movapd	-128(%rbp), %xmm0
10002d804:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10002d808:	75 16	jne	0x10002d820
10002d80a:	7a 14	jp	0x10002d820
10002d80c:	66 0f 28 85 70 ff ff ff	movapd	-144(%rbp), %xmm0
10002d814:	66 0f 2e c3	ucomisd	%xmm3, %xmm0
10002d818:	75 06	jne	0x10002d820
10002d81a:	0f 8b 98 00 00 00	jnp	0x10002d8b8
10002d820:	0f 57 c0	xorps	%xmm0, %xmm0
10002d823:	f3 0f 5a c4	cvtss2sd	%xmm4, %xmm0
10002d827:	f2 0f 59 c8	mulsd	%xmm0, %xmm1
10002d82b:	66 0f 28 55 80	movapd	-128(%rbp), %xmm2
10002d830:	f2 0f 5c d1	subsd	%xmm1, %xmm2
10002d834:	f2 0f 10 0d e4 a7 00 00	movsd	42980(%rip), %xmm1
10002d83c:	f2 0f 59 d1	mulsd	%xmm1, %xmm2
10002d840:	f2 0f 5a d2	cvtsd2ss	%xmm2, %xmm2
10002d844:	f3 0f 11 55 c0	movss	%xmm2, -64(%rbp)
10002d849:	f2 0f 59 d8	mulsd	%xmm0, %xmm3
10002d84d:	66 0f 28 85 70 ff ff ff	movapd	-144(%rbp), %xmm0
10002d855:	f2 0f 5c c3	subsd	%xmm3, %xmm0
10002d859:	f2 0f 59 c1	mulsd	%xmm1, %xmm0
10002d85d:	f2 0f 5a c0	cvtsd2ss	%xmm0, %xmm0
10002d861:	f3 0f 11 45 80	movss	%xmm0, -128(%rbp)
10002d866:	48 8b 3d eb 4e 02 00	movq	151275(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSAffineTransform
10002d86d:	48 8b 35 8c 4b 02 00	movq	150412(%rip), %rsi ## Objc selector ref: transform
10002d874:	f3 0f 11 65 d0	movss	%xmm4, -48(%rbp)
10002d879:	41 ff d6	callq	*%r14
10002d87c:	48 89 c3	movq	%rax, %rbx
10002d87f:	f3 0f 10 45 c0	movss	-64(%rbp), %xmm0
10002d884:	f3 0f 10 55 d0	movss	-48(%rbp), %xmm2
10002d889:	f3 0f 5e c2	divss	%xmm2, %xmm0
10002d88d:	f3 0f 5a c0	cvtss2sd	%xmm0, %xmm0
10002d891:	f3 0f 10 4d 80	movss	-128(%rbp), %xmm1
10002d896:	f3 0f 5e ca	divss	%xmm2, %xmm1
10002d89a:	f3 0f 5a c9	cvtss2sd	%xmm1, %xmm1
10002d89e:	48 8b 35 63 4b 02 00	movq	150371(%rip), %rsi ## Objc selector ref: translateXBy:yBy:
10002d8a5:	48 89 c7	movq	%rax, %rdi
10002d8a8:	41 ff d6	callq	*%r14
10002d8ab:	48 8b 35 7e 36 02 00	movq	145022(%rip), %rsi ## Objc selector ref: concat
10002d8b2:	48 89 df	movq	%rbx, %rdi
10002d8b5:	41 ff d6	callq	*%r14
10002d8b8:	0f 28 85 30 ff ff ff	movaps	-208(%rbp), %xmm0
10002d8bf:	0f 28 8d 40 ff ff ff	movaps	-192(%rbp), %xmm1
10002d8c6:	0f 28 95 50 ff ff ff	movaps	-176(%rbp), %xmm2
10002d8cd:	0f 11 54 24 20	movups	%xmm2, 32(%rsp)
10002d8d2:	0f 11 4c 24 10	movups	%xmm1, 16(%rsp)
10002d8d7:	0f 11 04 24	movups	%xmm0, (%rsp)
10002d8db:	4c 89 e7	movq	%r12, %rdi
10002d8de:	e8 97 17 00 00	callq	0x10002f07a ## symbol stub for: _CGContextConcatCTM
10002d8e3:	48 8b 1d b6 5f 02 00	movq	155574(%rip), %rbx
10002d8ea:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002d8ee:	48 85 ff	testq	%rdi, %rdi
10002d8f1:	74 10	je	0x10002d903
10002d8f3:	48 8b 35 06 34 02 00	movq	144390(%rip), %rsi ## Objc selector ref: applyToContext:
10002d8fa:	4c 89 e2	movq	%r12, %rdx
10002d8fd:	ff 15 1d f3 00 00	callq	*62237(%rip) ## Objc message: +[NSAffineTransform applyToContext:]
10002d903:	48 8d b5 b0 fe ff ff	leaq	-336(%rbp), %rsi
10002d90a:	4c 89 e7	movq	%r12, %rdi
10002d90d:	e8 56 17 00 00	callq	0x10002f068 ## symbol stub for: _CGContextBeginPage
10002d912:	4c 89 e7	movq	%r12, %rdi
10002d915:	48 8b b5 60 ff ff ff	movq	-160(%rbp), %rsi
10002d91c:	e8 65 17 00 00	callq	0x10002f086 ## symbol stub for: _CGContextDrawPDFPage
10002d921:	4c 89 e7	movq	%r12, %rdi
10002d924:	e8 69 17 00 00	callq	0x10002f092 ## symbol stub for: _CGContextEndPage
10002d929:	49 8b 3c 1f	movq	(%r15,%rbx), %rdi
10002d92d:	48 85 ff	testq	%rdi, %rdi
10002d930:	74 10	je	0x10002d942
10002d932:	48 8b 35 a7 41 02 00	movq	147879(%rip), %rsi ## Objc selector ref: removeFromContext:
10002d939:	4c 89 e2	movq	%r12, %rdx
10002d93c:	ff 15 de f2 00 00	callq	*62174(%rip) ## Objc message: -[%rdi removeFromContext:]
10002d942:	48 81 c4 58 01 00 00	addq	$344, %rsp
10002d949:	5b	popq	%rbx
10002d94a:	41 5c	popq	%r12
10002d94c:	41 5d	popq	%r13
10002d94e:	41 5e	popq	%r14
10002d950:	41 5f	popq	%r15
10002d952:	5d	popq	%rbp
10002d953:	c3	retq
10002d954:	55	pushq	%rbp
10002d955:	48 89 e5	movq	%rsp, %rbp
10002d958:	41 57	pushq	%r15
10002d95a:	41 56	pushq	%r14
10002d95c:	41 54	pushq	%r12
10002d95e:	53	pushq	%rbx
10002d95f:	48 83 ec 10	subq	$16, %rsp
10002d963:	45 89 c6	movl	%r8d, %r14d
10002d966:	41 89 cf	movl	%ecx, %r15d
10002d969:	49 89 d4	movq	%rdx, %r12
10002d96c:	48 89 fb	movq	%rdi, %rbx
10002d96f:	48 8b 3d 2a 4c 02 00	movq	150570(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002d976:	48 8b 35 6b 3d 02 00	movq	146795(%rip), %rsi ## Objc selector ref: mainBundle
10002d97d:	ff 15 9d f2 00 00	callq	*62109(%rip) ## Objc message: +[NSBundle mainBundle]
10002d983:	48 8d 7d d0	leaq	-48(%rbp), %rdi
10002d987:	48 89 1f	movq	%rbx, (%rdi)
10002d98a:	48 8b 0d 27 4f 02 00	movq	151335(%rip), %rcx ## Objc class ref: FilterDocPDEController
10002d991:	48 89 4f 08	movq	%rcx, 8(%rdi)
10002d995:	48 8b 35 f4 3a 02 00	movq	146164(%rip), %rsi ## Objc selector ref: initWithNibName:bundle:
10002d99c:	48 8d 15 dd 24 01 00	leaq	74973(%rip), %rdx ## Objc cfstring ref: @"FilterDocPDE"
10002d9a3:	48 89 c1	movq	%rax, %rcx
10002d9a6:	e8 31 1b 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] initWithNibName:bundle:]
10002d9ab:	48 85 c0	testq	%rax, %rax
10002d9ae:	74 36	je	0x10002d9e6
10002d9b0:	48 8b 0d f9 5e 02 00	movq	155385(%rip), %rcx
10002d9b7:	4c 89 24 08	movq	%r12, (%rax,%rcx)
10002d9bb:	48 8b 0d f6 5e 02 00	movq	155382(%rip), %rcx
10002d9c2:	48 ba 00 00 00 00 00 00 f0 3f	movabsq	$4607182418800017408, %rdx
10002d9cc:	48 89 14 08	movq	%rdx, (%rax,%rcx)
10002d9d0:	48 8b 0d e9 5e 02 00	movq	155369(%rip), %rcx
10002d9d7:	44 88 3c 08	movb	%r15b, (%rax,%rcx)
10002d9db:	48 8b 0d e6 5e 02 00	movq	155366(%rip), %rcx
10002d9e2:	44 88 34 08	movb	%r14b, (%rax,%rcx)
10002d9e6:	48 83 c4 10	addq	$16, %rsp
10002d9ea:	5b	popq	%rbx
10002d9eb:	41 5c	popq	%r12
10002d9ed:	41 5e	popq	%r14
10002d9ef:	41 5f	popq	%r15
10002d9f1:	5d	popq	%rbp
10002d9f2:	c3	retq
10002d9f3:	55	pushq	%rbp
10002d9f4:	48 89 e5	movq	%rsp, %rbp
10002d9f7:	41 56	pushq	%r14
10002d9f9:	53	pushq	%rbx
10002d9fa:	48 83 ec 10	subq	$16, %rsp
10002d9fe:	48 89 fb	movq	%rdi, %rbx
10002da01:	48 8b 3d 08 4c 02 00	movq	150536(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
10002da08:	48 8b 35 49 36 02 00	movq	144969(%rip), %rsi ## Objc selector ref: defaultCenter
10002da0f:	4c 8b 35 0a f2 00 00	movq	61962(%rip), %r14 ## Objc message: +[NSNotificationCenter defaultCenter]
10002da16:	41 ff d6	callq	*%r14
10002da19:	48 8b 35 e0 40 02 00	movq	147680(%rip), %rsi ## Objc selector ref: removeObserver:
10002da20:	48 89 c7	movq	%rax, %rdi
10002da23:	48 89 da	movq	%rbx, %rdx
10002da26:	41 ff d6	callq	*%r14
10002da29:	48 8b 35 58 34 02 00	movq	144472(%rip), %rsi ## Objc selector ref: cleanup
10002da30:	48 89 df	movq	%rbx, %rdi
10002da33:	41 ff d6	callq	*%r14
10002da36:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10002da3a:	48 89 1f	movq	%rbx, (%rdi)
10002da3d:	48 8b 05 74 4e 02 00	movq	151156(%rip), %rax ## Objc class ref: FilterDocPDEController
10002da44:	48 89 47 08	movq	%rax, 8(%rdi)
10002da48:	48 8b 35 01 36 02 00	movq	144897(%rip), %rsi ## Objc selector ref: dealloc
10002da4f:	e8 88 1a 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] dealloc]
10002da54:	48 83 c4 10	addq	$16, %rsp
10002da58:	5b	popq	%rbx
10002da59:	41 5e	popq	%r14
10002da5b:	5d	popq	%rbp
10002da5c:	c3	retq
10002da5d:	55	pushq	%rbp
10002da5e:	48 89 e5	movq	%rsp, %rbp
10002da61:	41 56	pushq	%r14
10002da63:	53	pushq	%rbx
10002da64:	48 89 fb	movq	%rdi, %rbx
10002da67:	48 8b 05 62 5e 02 00	movq	155234(%rip), %rax
10002da6e:	48 8b 3c 07	movq	(%rdi,%rax), %rdi
10002da72:	48 8b 05 47 5e 02 00	movq	155207(%rip), %rax
10002da79:	0f be 14 03	movsbl	(%rbx,%rax), %edx
10002da7d:	48 8b 35 6c 43 02 00	movq	148332(%rip), %rsi ## Objc selector ref: setEnabled:
10002da84:	4c 8b 35 95 f1 00 00	movq	61845(%rip), %r14 ## Objc message: -[%rdi setEnabled:]
10002da8b:	41 ff d6	callq	*%r14
10002da8e:	48 8b 3d 7b 4b 02 00	movq	150395(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNotificationCenter
10002da95:	48 8b 35 bc 35 02 00	movq	144828(%rip), %rsi ## Objc selector ref: defaultCenter
10002da9c:	41 ff d6	callq	*%r14
10002da9f:	48 8b 0d d2 49 02 00	movq	149970(%rip), %rcx ## Objc selector ref: updateUI:
10002daa6:	48 8b 35 d3 31 02 00	movq	143827(%rip), %rsi ## Objc selector ref: addObserver:selector:name:object:
10002daad:	4c 8d 05 ec 23 01 00	leaq	74732(%rip), %r8 ## Objc cfstring ref: @"PMPrintColorMatchingTypeDidChangeNotification"
10002dab4:	48 89 c7	movq	%rax, %rdi
10002dab7:	48 89 da	movq	%rbx, %rdx
10002daba:	45 31 c9	xorl	%r9d, %r9d
10002dabd:	4c 89 f0	movq	%r14, %rax
10002dac0:	5b	popq	%rbx
10002dac1:	41 5e	popq	%r14
10002dac3:	5d	popq	%rbp
10002dac4:	ff e0	jmpq	*%rax
10002dac6:	55	pushq	%rbp
10002dac7:	48 89 e5	movq	%rsp, %rbp
10002daca:	41 56	pushq	%r14
10002dacc:	53	pushq	%rbx
10002dacd:	48 83 ec 10	subq	$16, %rsp
10002dad1:	48 89 d3	movq	%rdx, %rbx
10002dad4:	49 89 fe	movq	%rdi, %r14
10002dad7:	48 8b 35 aa 3a 02 00	movq	146090(%rip), %rsi ## Objc selector ref: isEqualToString:
10002dade:	48 8d 15 db 23 01 00	leaq	74715(%rip), %rdx ## Objc cfstring ref: @"scaleFactor"
10002dae5:	48 89 df	movq	%rbx, %rdi
10002dae8:	ff 15 32 f1 00 00	callq	*61746(%rip) ## Objc message: +[NSNotificationCenter isEqualToString:]
10002daee:	84 c0	testb	%al, %al
10002daf0:	75 21	jne	0x10002db13
10002daf2:	48 8d 7d e0	leaq	-32(%rbp), %rdi
10002daf6:	4c 89 37	movq	%r14, (%rdi)
10002daf9:	48 8b 05 b8 4d 02 00	movq	150968(%rip), %rax ## Objc class ref: FilterDocPDEController
10002db00:	48 89 47 08	movq	%rax, 8(%rdi)
10002db04:	48 8b 35 c5 44 02 00	movq	148677(%rip), %rsi ## Objc selector ref: setNilValueForKey:
10002db0b:	48 89 da	movq	%rbx, %rdx
10002db0e:	e8 c9 19 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setNilValueForKey:]
10002db13:	48 83 c4 10	addq	$16, %rsp
10002db17:	5b	popq	%rbx
10002db18:	41 5e	popq	%r14
10002db1a:	5d	popq	%rbp
10002db1b:	c3	retq
10002db1c:	55	pushq	%rbp
10002db1d:	48 89 e5	movq	%rsp, %rbp
10002db20:	41 57	pushq	%r15
10002db22:	41 56	pushq	%r14
10002db24:	53	pushq	%rbx
10002db25:	48 83 ec 18	subq	$24, %rsp
10002db29:	49 89 d6	movq	%rdx, %r14
10002db2c:	48 8d 45 d8	leaq	-40(%rbp), %rax
10002db30:	48 89 38	movq	%rdi, (%rax)
10002db33:	48 8b 0d 86 4d 02 00	movq	150918(%rip), %rcx ## Objc class ref: FilterDocPDEController
10002db3a:	48 89 48 08	movq	%rcx, 8(%rax)
10002db3e:	48 8b 35 8b 3a 02 00	movq	146059(%rip), %rsi ## Objc selector ref: keyPathsForValuesAffectingValueForKey:
10002db45:	48 89 c7	movq	%rax, %rdi
10002db48:	e8 8f 19 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] keyPathsForValuesAffectingValueForKey:]
10002db4d:	48 89 c3	movq	%rax, %rbx
10002db50:	4c 8b 3d 31 3a 02 00	movq	145969(%rip), %r15 ## Objc selector ref: isEqualToString:
10002db57:	48 8d 15 62 23 01 00	leaq	74594(%rip), %rdx ## Objc cfstring ref: @"scaleFactor"
10002db5e:	4c 89 f7	movq	%r14, %rdi
10002db61:	4c 89 fe	movq	%r15, %rsi
10002db64:	ff 15 b6 f0 00 00	callq	*61622(%rip) ## Objc message: -[%rdi isEqualToString:]
10002db6a:	84 c0	testb	%al, %al
10002db6c:	75 45	jne	0x10002dbb3
10002db6e:	48 8d 15 6b 23 01 00	leaq	74603(%rip), %rdx ## Objc cfstring ref: @"scalingMode"
10002db75:	4c 89 f7	movq	%r14, %rdi
10002db78:	4c 89 fe	movq	%r15, %rsi
10002db7b:	ff 15 9f f0 00 00	callq	*61599(%rip) ## Objc message: -[%rdi isEqualToString:]
10002db81:	84 c0	testb	%al, %al
10002db83:	75 2e	jne	0x10002dbb3
10002db85:	48 8d 15 74 23 01 00	leaq	74612(%rip), %rdx ## Objc cfstring ref: @"scaleToFitMode"
10002db8c:	4c 89 f7	movq	%r14, %rdi
10002db8f:	4c 89 fe	movq	%r15, %rsi
10002db92:	ff 15 88 f0 00 00	callq	*61576(%rip) ## Objc message: -[%rdi isEqualToString:]
10002db98:	84 c0	testb	%al, %al
10002db9a:	75 17	jne	0x10002dbb3
10002db9c:	48 8d 15 7d 23 01 00	leaq	74621(%rip), %rdx ## Objc cfstring ref: @"autoRotate"
10002dba3:	4c 89 f7	movq	%r14, %rdi
10002dba6:	4c 89 fe	movq	%r15, %rsi
10002dba9:	ff 15 71 f0 00 00	callq	*61553(%rip) ## Objc message: -[%rdi isEqualToString:]
10002dbaf:	84 c0	testb	%al, %al
10002dbb1:	74 1a	je	0x10002dbcd
10002dbb3:	48 8b 35 56 41 02 00	movq	147798(%rip), %rsi ## Objc selector ref: setByAddingObject:
10002dbba:	48 8d 15 7f 23 01 00	leaq	74623(%rip), %rdx ## Objc cfstring ref: @"representedObject"
10002dbc1:	48 89 df	movq	%rbx, %rdi
10002dbc4:	ff 15 56 f0 00 00	callq	*61526(%rip) ## Objc message: -[%rdi setByAddingObject:]
10002dbca:	48 89 c3	movq	%rax, %rbx
10002dbcd:	48 89 d8	movq	%rbx, %rax
10002dbd0:	48 83 c4 18	addq	$24, %rsp
10002dbd4:	5b	popq	%rbx
10002dbd5:	41 5e	popq	%r14
10002dbd7:	41 5f	popq	%r15
10002dbd9:	5d	popq	%rbp
10002dbda:	c3	retq
10002dbdb:	55	pushq	%rbp
10002dbdc:	48 89 e5	movq	%rsp, %rbp
10002dbdf:	41 57	pushq	%r15
10002dbe1:	41 56	pushq	%r14
10002dbe3:	53	pushq	%rbx
10002dbe4:	48 83 ec 18	subq	$24, %rsp
10002dbe8:	49 89 d6	movq	%rdx, %r14
10002dbeb:	48 89 fb	movq	%rdi, %rbx
10002dbee:	e8 f5 18 00 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10002dbf3:	49 89 c7	movq	%rax, %r15
10002dbf6:	4c 89 f7	movq	%r14, %rdi
10002dbf9:	e8 ea 18 00 00	callq	0x10002f4e8 ## symbol stub for: _objc_opt_class
10002dbfe:	48 8d 3d 5b 23 01 00	leaq	74587(%rip), %rdi ## Objc cfstring ref: @">>> self: <%@:%p>      setRepresentedObject: <%@:%p>"
10002dc05:	4c 89 fe	movq	%r15, %rsi
10002dc08:	48 89 da	movq	%rbx, %rdx
10002dc0b:	48 89 c1	movq	%rax, %rcx
10002dc0e:	4d 89 f0	movq	%r14, %r8
10002dc11:	31 c0	xorl	%eax, %eax
10002dc13:	e8 e4 16 00 00	callq	0x10002f2fc ## symbol stub for: _NSLog
10002dc18:	48 8d 7d d8	leaq	-40(%rbp), %rdi
10002dc1c:	48 89 1f	movq	%rbx, (%rdi)
10002dc1f:	48 8b 05 92 4c 02 00	movq	150674(%rip), %rax ## Objc class ref: FilterDocPDEController
10002dc26:	48 89 47 08	movq	%rax, 8(%rdi)
10002dc2a:	48 8b 35 47 44 02 00	movq	148551(%rip), %rsi ## Objc selector ref: setRepresentedObject:
10002dc31:	4c 89 f2	movq	%r14, %rdx
10002dc34:	e8 a3 18 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] setRepresentedObject:]
10002dc39:	48 8b 35 98 38 02 00	movq	145560(%rip), %rsi ## Objc selector ref: initializeApplicationDataInPrintInfo:
10002dc40:	48 89 df	movq	%rbx, %rdi
10002dc43:	4c 89 f2	movq	%r14, %rdx
10002dc46:	ff 15 d4 ef 00 00	callq	*61396(%rip) ## Objc message: -[%rdi initializeApplicationDataInPrintInfo:]
10002dc4c:	48 83 c4 18	addq	$24, %rsp
10002dc50:	5b	popq	%rbx
10002dc51:	41 5e	popq	%r14
10002dc53:	41 5f	popq	%r15
10002dc55:	5d	popq	%rbp
10002dc56:	c3	retq
10002dc57:	55	pushq	%rbp
10002dc58:	48 89 e5	movq	%rsp, %rbp
10002dc5b:	41 57	pushq	%r15
10002dc5d:	41 56	pushq	%r14
10002dc5f:	41 54	pushq	%r12
10002dc61:	53	pushq	%rbx
10002dc62:	48 83 ec 20	subq	$32, %rsp
10002dc66:	48 89 fb	movq	%rdi, %rbx
10002dc69:	4c 8b 35 88 48 02 00	movq	149640(%rip), %r14 ## Objc selector ref: willChangeValueForKey:
10002dc70:	48 8d 15 09 23 01 00	leaq	74505(%rip), %rdx ## Objc cfstring ref: @"printMode"
10002dc77:	4c 8b 25 a2 ef 00 00	movq	61346(%rip), %r12 ## Objc message: -[%rdi willChangeValueForKey:]
10002dc7e:	4c 89 f6	movq	%r14, %rsi
10002dc81:	41 ff d4	callq	*%r12
10002dc84:	48 8d 15 55 1c 01 00	leaq	72789(%rip), %rdx ## Objc cfstring ref: @"BPC"
10002dc8b:	48 89 df	movq	%rbx, %rdi
10002dc8e:	4c 89 f6	movq	%r14, %rsi
10002dc91:	41 ff d4	callq	*%r12
10002dc94:	48 8d 15 05 23 01 00	leaq	74501(%rip), %rdx ## Objc cfstring ref: @"intent"
10002dc9b:	48 89 df	movq	%rbx, %rdi
10002dc9e:	4c 89 f6	movq	%r14, %rsi
10002dca1:	41 ff d4	callq	*%r12
10002dca4:	4c 8b 3d f5 3c 02 00	movq	146677(%rip), %r15 ## Objc selector ref: printInfo
10002dcab:	48 89 df	movq	%rbx, %rdi
10002dcae:	4c 89 fe	movq	%r15, %rsi
10002dcb1:	41 ff d4	callq	*%r12
10002dcb4:	48 8b 35 c5 2e 02 00	movq	143045(%rip), %rsi ## Objc selector ref: PMPrintSession
10002dcbb:	48 89 c7	movq	%rax, %rdi
10002dcbe:	41 ff d4	callq	*%r12
10002dcc1:	49 89 c6	movq	%rax, %r14
10002dcc4:	48 89 df	movq	%rbx, %rdi
10002dcc7:	4c 89 fe	movq	%r15, %rsi
10002dcca:	41 ff d4	callq	*%r12
10002dccd:	48 8b 35 b4 2e 02 00	movq	143028(%rip), %rsi ## Objc selector ref: PMPrintSettings
10002dcd4:	48 89 c7	movq	%rax, %rdi
10002dcd7:	41 ff d4	callq	*%r12
10002dcda:	48 8d 55 d0	leaq	-48(%rbp), %rdx
10002dcde:	48 c7 02 00 00 00 00	movq	$0, (%rdx)
10002dce5:	4c 89 f7	movq	%r14, %rdi
10002dce8:	48 89 c6	movq	%rax, %rsi
10002dceb:	e8 5a 16 00 00	callq	0x10002f34a ## symbol stub for: _PMSessionGetColorMatchingMode
10002dcf0:	85 c0	testl	%eax, %eax
10002dcf2:	75 09	jne	0x10002dcfd
10002dcf4:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002dcf8:	48 85 ff	testq	%rdi, %rdi
10002dcfb:	75 3f	jne	0x10002dd3c
10002dcfd:	4c 8d 7d c8	leaq	-56(%rbp), %r15
10002dd01:	49 c7 07 00 00 00 00	movq	$0, (%r15)
10002dd08:	4c 89 f7	movq	%r14, %rdi
10002dd0b:	4c 89 fe	movq	%r15, %rsi
10002dd0e:	e8 3d 16 00 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
10002dd13:	49 8b 3f	movq	(%r15), %rdi
10002dd16:	4c 8d 75 df	leaq	-33(%rbp), %r14
10002dd1a:	4c 89 f6	movq	%r14, %rsi
10002dd1d:	e8 04 16 00 00	callq	0x10002f326 ## symbol stub for: _PMPrinterIsPostScriptPrinter
10002dd22:	41 80 3e 00	cmpb	$0, (%r14)
10002dd26:	48 8d 05 d3 1b 01 00	leaq	72659(%rip), %rax ## Objc cfstring ref: @"AP_VendorColorMatching"
10002dd2d:	48 8d 3d 4c fd 00 00	leaq	64844(%rip), %rdi ## Objc cfstring ref: @"AP_ApplicationColorMatching"
10002dd34:	48 0f 44 f8	cmoveq	%rax, %rdi
10002dd38:	48 89 7d d0	movq	%rdi, -48(%rbp)
10002dd3c:	48 8d 35 bd 1b 01 00	leaq	72637(%rip), %rsi ## Objc cfstring ref: @"AP_VendorColorMatching"
10002dd43:	ba 01 00 00 00	movl	$1, %edx
10002dd48:	e8 d7 11 00 00	callq	0x10002ef24 ## symbol stub for: _CFStringCompare
10002dd4d:	31 d2	xorl	%edx, %edx
10002dd4f:	48 85 c0	testq	%rax, %rax
10002dd52:	0f 94 c2	sete	%dl
10002dd55:	48 8b 35 d4 42 02 00	movq	148180(%rip), %rsi ## Objc selector ref: setPrintMode:
10002dd5c:	48 89 df	movq	%rbx, %rdi
10002dd5f:	41 ff d4	callq	*%r12
10002dd62:	4c 8b 35 57 33 02 00	movq	144215(%rip), %r14 ## Objc selector ref: didChangeValueForKey:
10002dd69:	48 8d 15 10 22 01 00	leaq	74256(%rip), %rdx ## Objc cfstring ref: @"printMode"
10002dd70:	48 89 df	movq	%rbx, %rdi
10002dd73:	4c 89 f6	movq	%r14, %rsi
10002dd76:	41 ff d4	callq	*%r12
10002dd79:	48 8d 15 60 1b 01 00	leaq	72544(%rip), %rdx ## Objc cfstring ref: @"BPC"
10002dd80:	48 89 df	movq	%rbx, %rdi
10002dd83:	4c 89 f6	movq	%r14, %rsi
10002dd86:	41 ff d4	callq	*%r12
10002dd89:	48 8d 15 10 22 01 00	leaq	74256(%rip), %rdx ## Objc cfstring ref: @"intent"
10002dd90:	48 89 df	movq	%rbx, %rdi
10002dd93:	4c 89 f6	movq	%r14, %rsi
10002dd96:	41 ff d4	callq	*%r12
10002dd99:	48 83 c4 20	addq	$32, %rsp
10002dd9d:	5b	popq	%rbx
10002dd9e:	41 5c	popq	%r12
10002dda0:	41 5e	popq	%r14
10002dda2:	41 5f	popq	%r15
10002dda4:	5d	popq	%rbp
10002dda5:	c3	retq
10002dda6:	55	pushq	%rbp
10002dda7:	48 89 e5	movq	%rsp, %rbp
10002ddaa:	48 8b 35 67 3d 02 00	movq	146791(%rip), %rsi ## Objc selector ref: representedObject
10002ddb1:	5d	popq	%rbp
10002ddb2:	ff 25 68 ee 00 00	jmpq	*61032(%rip) ## Objc message: -[%rdi representedObject]
10002ddb8:	55	pushq	%rbp
10002ddb9:	48 89 e5	movq	%rsp, %rbp
10002ddbc:	41 57	pushq	%r15
10002ddbe:	41 56	pushq	%r14
10002ddc0:	41 55	pushq	%r13
10002ddc2:	41 54	pushq	%r12
10002ddc4:	53	pushq	%rbx
10002ddc5:	48 83 ec 28	subq	$40, %rsp
10002ddc9:	48 8b 35 d0 3b 02 00	movq	146384(%rip), %rsi ## Objc selector ref: printInfo
10002ddd0:	4c 8b 3d 49 ee 00 00	movq	61001(%rip), %r15 ## Objc message: -[%rdi printInfo]
10002ddd7:	41 ff d7	callq	*%r15
10002ddda:	48 8b 35 af 32 02 00	movq	144047(%rip), %rsi ## Objc selector ref: dictionary
10002dde1:	48 89 c7	movq	%rax, %rdi
10002dde4:	41 ff d7	callq	*%r15
10002dde7:	48 89 c3	movq	%rax, %rbx
10002ddea:	4c 8b 35 bf 46 02 00	movq	149183(%rip), %r14 ## Objc selector ref: valueForKey:
10002ddf1:	48 8d 15 28 20 01 00	leaq	73768(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleMode"
10002ddf8:	48 89 c7	movq	%rax, %rdi
10002ddfb:	4c 89 f6	movq	%r14, %rsi
10002ddfe:	41 ff d7	callq	*%r15
10002de01:	49 89 c5	movq	%rax, %r13
10002de04:	48 8d 15 35 20 01 00	leaq	73781(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleToFitMode"
10002de0b:	48 89 df	movq	%rbx, %rdi
10002de0e:	4c 89 f6	movq	%r14, %rsi
10002de11:	41 ff d7	callq	*%r15
10002de14:	49 89 c4	movq	%rax, %r12
10002de17:	48 8d 15 42 20 01 00	leaq	73794(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocAutoRotate"
10002de1e:	48 89 df	movq	%rbx, %rdi
10002de21:	4c 89 f6	movq	%r14, %rsi
10002de24:	41 ff d7	callq	*%r15
10002de27:	48 89 45 c8	movq	%rax, -56(%rbp)
10002de2b:	48 8b 35 ee 36 02 00	movq	145134(%rip), %rsi ## Objc selector ref: integerValue
10002de32:	4c 89 ef	movq	%r13, %rdi
10002de35:	41 ff d7	callq	*%r15
10002de38:	48 89 c3	movq	%rax, %rbx
10002de3b:	48 8b 3d 5e 47 02 00	movq	149342(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002de42:	48 8b 35 9f 38 02 00	movq	145567(%rip), %rsi ## Objc selector ref: mainBundle
10002de49:	41 ff d7	callq	*%r15
10002de4c:	48 85 db	testq	%rbx, %rbx
10002de4f:	4c 8b 2d 0a 38 02 00	movq	145418(%rip), %r13 ## Objc selector ref: localizedStringForKey:value:table:
10002de56:	48 8d 0d 63 21 01 00	leaq	74083(%rip), %rcx ## Objc cfstring ref: @"Percentage"
10002de5d:	48 8d 15 7c 21 01 00	leaq	74108(%rip), %rdx ## Objc cfstring ref: @"Scale to Fit"
10002de64:	48 0f 44 d1	cmoveq	%rcx, %rdx
10002de68:	4c 8d 35 31 f0 00 00	leaq	61489(%rip), %r14 ## Objc cfstring ref: @""
10002de6f:	48 89 c7	movq	%rax, %rdi
10002de72:	4c 89 ee	movq	%r13, %rsi
10002de75:	4c 89 f1	movq	%r14, %rcx
10002de78:	45 31 c0	xorl	%r8d, %r8d
10002de7b:	41 ff d7	callq	*%r15
10002de7e:	48 89 45 c0	movq	%rax, -64(%rbp)
10002de82:	4c 89 e7	movq	%r12, %rdi
10002de85:	48 8b 35 94 36 02 00	movq	145044(%rip), %rsi ## Objc selector ref: integerValue
10002de8c:	41 ff d7	callq	*%r15
10002de8f:	48 83 f8 02	cmpq	$2, %rax
10002de93:	48 8d 05 66 21 01 00	leaq	74086(%rip), %rax ## Objc cfstring ref: @"Fill Entire Paper"
10002de9a:	48 8d 1d 7f 21 01 00	leaq	74111(%rip), %rbx ## Objc cfstring ref: @"Print Entire Image"
10002dea1:	48 0f 44 d8	cmoveq	%rax, %rbx
10002dea5:	48 8b 3d f4 46 02 00	movq	149236(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002deac:	48 8b 35 35 38 02 00	movq	145461(%rip), %rsi ## Objc selector ref: mainBundle
10002deb3:	49 89 f4	movq	%rsi, %r12
10002deb6:	41 ff d7	callq	*%r15
10002deb9:	48 89 c7	movq	%rax, %rdi
10002debc:	4c 89 ee	movq	%r13, %rsi
10002debf:	48 89 da	movq	%rbx, %rdx
10002dec2:	4c 89 f1	movq	%r14, %rcx
10002dec5:	45 31 c0	xorl	%r8d, %r8d
10002dec8:	41 ff d7	callq	*%r15
10002decb:	48 89 45 b8	movq	%rax, -72(%rbp)
10002decf:	48 8b 35 f2 2e 02 00	movq	143090(%rip), %rsi ## Objc selector ref: boolValue
10002ded6:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002deda:	41 ff d7	callq	*%r15
10002dedd:	84 c0	testb	%al, %al
10002dedf:	48 8d 05 7a 21 01 00	leaq	74106(%rip), %rax ## Objc cfstring ref: @"Off"
10002dee6:	48 8d 1d 53 21 01 00	leaq	74067(%rip), %rbx ## Objc cfstring ref: @"On"
10002deed:	48 0f 44 d8	cmoveq	%rax, %rbx
10002def1:	48 8b 3d a8 46 02 00	movq	149160(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002def8:	4c 89 e6	movq	%r12, %rsi
10002defb:	41 ff d7	callq	*%r15
10002defe:	48 89 c7	movq	%rax, %rdi
10002df01:	4c 89 ee	movq	%r13, %rsi
10002df04:	48 89 da	movq	%rbx, %rdx
10002df07:	4c 89 f3	movq	%r14, %rbx
10002df0a:	4c 89 f1	movq	%r14, %rcx
10002df0d:	45 31 c0	xorl	%r8d, %r8d
10002df10:	41 ff d7	callq	*%r15
10002df13:	48 89 45 d0	movq	%rax, -48(%rbp)
10002df17:	48 8b 05 92 46 02 00	movq	149138(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSArray
10002df1e:	48 89 45 c8	movq	%rax, -56(%rbp)
10002df22:	4c 8b 35 ef 46 02 00	movq	149231(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10002df29:	48 8b 3d 70 46 02 00	movq	149104(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002df30:	4c 89 e6	movq	%r12, %rsi
10002df33:	41 ff d7	callq	*%r15
10002df36:	48 8d 15 43 21 01 00	leaq	74051(%rip), %rdx ## Objc cfstring ref: @"Auto Rotate"
10002df3d:	48 89 c7	movq	%rax, %rdi
10002df40:	4c 89 ee	movq	%r13, %rsi
10002df43:	48 89 d9	movq	%rbx, %rcx
10002df46:	45 31 c0	xorl	%r8d, %r8d
10002df49:	41 ff d7	callq	*%r15
10002df4c:	48 8b 0d 5d e7 00 00	movq	59229(%rip), %rcx ## literal pool symbol address: _NSPrintPanelAccessorySummaryItemNameKey
10002df53:	4c 8b 29	movq	(%rcx), %r13
10002df56:	48 8b 0d 4b e7 00 00	movq	59211(%rip), %rcx ## literal pool symbol address: _NSPrintPanelAccessorySummaryItemDescriptionKey
10002df5d:	4c 8b 21	movq	(%rcx), %r12
10002df60:	48 8b 35 51 31 02 00	movq	143697(%rip), %rsi ## Objc selector ref: dictionaryWithObjectsAndKeys:
10002df67:	31 c9	xorl	%ecx, %ecx
10002df69:	48 89 0c 24	movq	%rcx, (%rsp)
10002df6d:	4c 89 f7	movq	%r14, %rdi
10002df70:	49 89 f6	movq	%rsi, %r14
10002df73:	48 89 c2	movq	%rax, %rdx
10002df76:	4c 89 e9	movq	%r13, %rcx
10002df79:	4c 8b 45 d0	movq	-48(%rbp), %r8
10002df7d:	4d 89 e1	movq	%r12, %r9
10002df80:	31 c0	xorl	%eax, %eax
10002df82:	41 ff d7	callq	*%r15
10002df85:	48 89 45 d0	movq	%rax, -48(%rbp)
10002df89:	48 8b 1d 88 46 02 00	movq	149128(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10002df90:	48 8b 3d 09 46 02 00	movq	149001(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002df97:	48 8b 35 4a 37 02 00	movq	145226(%rip), %rsi ## Objc selector ref: mainBundle
10002df9e:	41 ff d7	callq	*%r15
10002dfa1:	48 8d 15 f8 20 01 00	leaq	73976(%rip), %rdx ## Objc cfstring ref: @"Scale Mode"
10002dfa8:	48 89 c7	movq	%rax, %rdi
10002dfab:	48 8b 35 ae 36 02 00	movq	145070(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002dfb2:	48 8d 0d e7 ee 00 00	leaq	61159(%rip), %rcx ## Objc cfstring ref: @""
10002dfb9:	45 31 c0	xorl	%r8d, %r8d
10002dfbc:	41 ff d7	callq	*%r15
10002dfbf:	31 c9	xorl	%ecx, %ecx
10002dfc1:	48 89 0c 24	movq	%rcx, (%rsp)
10002dfc5:	48 89 df	movq	%rbx, %rdi
10002dfc8:	4c 89 f6	movq	%r14, %rsi
10002dfcb:	48 89 c2	movq	%rax, %rdx
10002dfce:	4c 89 e9	movq	%r13, %rcx
10002dfd1:	4c 8b 45 c0	movq	-64(%rbp), %r8
10002dfd5:	4d 89 e1	movq	%r12, %r9
10002dfd8:	31 c0	xorl	%eax, %eax
10002dfda:	41 ff d7	callq	*%r15
10002dfdd:	48 89 c3	movq	%rax, %rbx
10002dfe0:	4c 8b 35 31 46 02 00	movq	149041(%rip), %r14 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10002dfe7:	48 8b 3d b2 45 02 00	movq	148914(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002dfee:	48 8b 35 f3 36 02 00	movq	145139(%rip), %rsi ## Objc selector ref: mainBundle
10002dff5:	41 ff d7	callq	*%r15
10002dff8:	48 8d 15 c1 20 01 00	leaq	73921(%rip), %rdx ## Objc cfstring ref: @"Scale to Fit Mode"
10002dfff:	48 89 c7	movq	%rax, %rdi
10002e002:	48 8b 35 57 36 02 00	movq	144983(%rip), %rsi ## Objc selector ref: localizedStringForKey:value:table:
10002e009:	48 8d 0d 90 ee 00 00	leaq	61072(%rip), %rcx ## Objc cfstring ref: @""
10002e010:	45 31 c0	xorl	%r8d, %r8d
10002e013:	41 ff d7	callq	*%r15
10002e016:	31 c9	xorl	%ecx, %ecx
10002e018:	48 89 0c 24	movq	%rcx, (%rsp)
10002e01c:	4c 89 f7	movq	%r14, %rdi
10002e01f:	48 8b 35 92 30 02 00	movq	143506(%rip), %rsi ## Objc selector ref: dictionaryWithObjectsAndKeys:
10002e026:	48 89 c2	movq	%rax, %rdx
10002e029:	4c 89 e9	movq	%r13, %rcx
10002e02c:	4c 8b 45 b8	movq	-72(%rbp), %r8
10002e030:	4d 89 e1	movq	%r12, %r9
10002e033:	31 c0	xorl	%eax, %eax
10002e035:	41 ff d7	callq	*%r15
10002e038:	48 8b 35 f9 2c 02 00	movq	142585(%rip), %rsi ## Objc selector ref: arrayWithObjects:
10002e03f:	48 8b 7d c8	movq	-56(%rbp), %rdi
10002e043:	48 8b 55 d0	movq	-48(%rbp), %rdx
10002e047:	48 89 d9	movq	%rbx, %rcx
10002e04a:	49 89 c0	movq	%rax, %r8
10002e04d:	45 31 c9	xorl	%r9d, %r9d
10002e050:	31 c0	xorl	%eax, %eax
10002e052:	4d 89 fb	movq	%r15, %r11
10002e055:	48 83 c4 28	addq	$40, %rsp
10002e059:	5b	popq	%rbx
10002e05a:	41 5c	popq	%r12
10002e05c:	41 5d	popq	%r13
10002e05e:	41 5e	popq	%r14
10002e060:	41 5f	popq	%r15
10002e062:	5d	popq	%rbp
10002e063:	41 ff e3	jmpq	*%r11
10002e066:	55	pushq	%rbp
10002e067:	48 89 e5	movq	%rsp, %rbp
10002e06a:	41 56	pushq	%r14
10002e06c:	53	pushq	%rbx
10002e06d:	48 8b 3d ec 46 02 00	movq	149228(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSSet
10002e074:	48 8b 35 0d 41 02 00	movq	147725(%rip), %rsi ## Objc selector ref: setWithObjects:
10002e07b:	48 83 ec 08	subq	$8, %rsp
10002e07f:	4c 8d 15 5a 20 01 00	leaq	73818(%rip), %r10 ## Objc cfstring ref: @"representedObject.PMPrintSettings"
10002e086:	4c 8d 1d 13 1f 01 00	leaq	73491(%rip), %r11 ## Objc cfstring ref: @"intent"
10002e08d:	48 8d 1d ec 1e 01 00	leaq	73452(%rip), %rbx ## Objc cfstring ref: @"printMode"
10002e094:	4c 8d 35 45 18 01 00	leaq	71749(%rip), %r14 ## Objc cfstring ref: @"BPC"
10002e09b:	48 8d 15 1e 1e 01 00	leaq	73246(%rip), %rdx ## Objc cfstring ref: @"scaleFactor"
10002e0a2:	48 8d 0d 37 1e 01 00	leaq	73271(%rip), %rcx ## Objc cfstring ref: @"scalingMode"
10002e0a9:	4c 8d 05 50 1e 01 00	leaq	73296(%rip), %r8 ## Objc cfstring ref: @"scaleToFitMode"
10002e0b0:	4c 8d 0d 69 1e 01 00	leaq	73321(%rip), %r9 ## Objc cfstring ref: @"autoRotate"
10002e0b7:	31 c0	xorl	%eax, %eax
10002e0b9:	6a 00	pushq	$0
10002e0bb:	41 52	pushq	%r10
10002e0bd:	41 53	pushq	%r11
10002e0bf:	53	pushq	%rbx
10002e0c0:	41 56	pushq	%r14
10002e0c2:	ff 15 58 eb 00 00	callq	*60248(%rip) ## Objc message: +[NSSet setWithObjects:]
10002e0c8:	48 83 c4 30	addq	$48, %rsp
10002e0cc:	5b	popq	%rbx
10002e0cd:	41 5e	popq	%r14
10002e0cf:	5d	popq	%rbp
10002e0d0:	c3	retq
10002e0d1:	55	pushq	%rbp
10002e0d2:	48 89 e5	movq	%rsp, %rbp
10002e0d5:	53	pushq	%rbx
10002e0d6:	50	pushq	%rax
10002e0d7:	48 8b 35 3a 3a 02 00	movq	145978(%rip), %rsi ## Objc selector ref: representedObject
10002e0de:	48 8b 1d 3b eb 00 00	movq	60219(%rip), %rbx ## Objc message: -[%rdi representedObject]
10002e0e5:	ff d3	callq	*%rbx
10002e0e7:	48 8b 35 a2 2f 02 00	movq	143266(%rip), %rsi ## Objc selector ref: dictionary
10002e0ee:	48 89 c7	movq	%rax, %rdi
10002e0f1:	ff d3	callq	*%rbx
10002e0f3:	48 8b 0d c6 e5 00 00	movq	58822(%rip), %rcx ## literal pool symbol address: _NSPrintScalingFactor
10002e0fa:	48 8b 11	movq	(%rcx), %rdx
10002e0fd:	48 8b 35 74 37 02 00	movq	145268(%rip), %rsi ## Objc selector ref: objectForKey:
10002e104:	48 89 c7	movq	%rax, %rdi
10002e107:	ff d3	callq	*%rbx
10002e109:	48 8b 35 00 30 02 00	movq	143360(%rip), %rsi ## Objc selector ref: doubleValue
10002e110:	48 89 c7	movq	%rax, %rdi
10002e113:	48 89 d8	movq	%rbx, %rax
10002e116:	48 83 c4 08	addq	$8, %rsp
10002e11a:	5b	popq	%rbx
10002e11b:	5d	popq	%rbp
10002e11c:	ff e0	jmpq	*%rax
10002e11e:	55	pushq	%rbp
10002e11f:	48 89 e5	movq	%rsp, %rbp
10002e122:	41 57	pushq	%r15
10002e124:	41 56	pushq	%r14
10002e126:	53	pushq	%rbx
10002e127:	48 83 ec 18	subq	$24, %rsp
10002e12b:	f2 0f 11 45 d8	movsd	%xmm0, -40(%rbp)
10002e130:	48 8b 35 e1 39 02 00	movq	145889(%rip), %rsi ## Objc selector ref: representedObject
10002e137:	4c 8b 3d e2 ea 00 00	movq	60130(%rip), %r15 ## Objc message: -[%rdi representedObject]
10002e13e:	41 ff d7	callq	*%r15
10002e141:	49 89 c6	movq	%rax, %r14
10002e144:	48 8b 3d a5 44 02 00	movq	148645(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002e14b:	48 8b 35 be 36 02 00	movq	145086(%rip), %rsi ## Objc selector ref: numberWithDouble:
10002e152:	f2 0f 10 45 d8	movsd	-40(%rbp), %xmm0
10002e157:	41 ff d7	callq	*%r15
10002e15a:	48 89 c3	movq	%rax, %rbx
10002e15d:	48 8b 35 2c 2f 02 00	movq	143148(%rip), %rsi ## Objc selector ref: dictionary
10002e164:	4c 89 f7	movq	%r14, %rdi
10002e167:	41 ff d7	callq	*%r15
10002e16a:	48 8b 0d 4f e5 00 00	movq	58703(%rip), %rcx ## literal pool symbol address: _NSPrintScalingFactor
10002e171:	48 8b 09	movq	(%rcx), %rcx
10002e174:	48 8b 35 65 3e 02 00	movq	147045(%rip), %rsi ## Objc selector ref: setObject:forKey:
10002e17b:	48 89 c7	movq	%rax, %rdi
10002e17e:	48 89 da	movq	%rbx, %rdx
10002e181:	41 ff d7	callq	*%r15
10002e184:	48 8b 35 ed 29 02 00	movq	141805(%rip), %rsi ## Objc selector ref: PMPageFormat
10002e18b:	4c 89 f7	movq	%r14, %rdi
10002e18e:	41 ff d7	callq	*%r15
10002e191:	48 85 c0	testq	%rax, %rax
10002e194:	74 54	je	0x10002e1ea
10002e196:	48 89 c3	movq	%rax, %rbx
10002e199:	48 8b 35 e0 29 02 00	movq	141792(%rip), %rsi ## Objc selector ref: PMPrintSession
10002e1a0:	4c 89 f7	movq	%r14, %rdi
10002e1a3:	ff 15 77 ea 00 00	callq	*60023(%rip) ## Objc message: +[NSNumber PMPrintSession]
10002e1a9:	49 89 c7	movq	%rax, %r15
10002e1ac:	f2 0f 10 45 d8	movsd	-40(%rbp), %xmm0
10002e1b1:	f2 0f 59 05 7f a2 00 00	mulsd	41599(%rip), %xmm0
10002e1b9:	48 89 df	movq	%rbx, %rdi
10002e1bc:	e8 ad 11 00 00	callq	0x10002f36e ## symbol stub for: _PMSetScale
10002e1c1:	66 85 c0	testw	%ax, %ax
10002e1c4:	75 24	jne	0x10002e1ea
10002e1c6:	48 8d 55 e7	leaq	-25(%rbp), %rdx
10002e1ca:	4c 89 ff	movq	%r15, %rdi
10002e1cd:	48 89 de	movq	%rbx, %rsi
10002e1d0:	e8 93 11 00 00	callq	0x10002f368 ## symbol stub for: _PMSessionValidatePageFormat
10002e1d5:	66 85 c0	testw	%ax, %ax
10002e1d8:	75 10	jne	0x10002e1ea
10002e1da:	48 8b 35 67 42 02 00	movq	148071(%rip), %rsi ## Objc selector ref: updateFromPMPageFormat
10002e1e1:	4c 89 f7	movq	%r14, %rdi
10002e1e4:	ff 15 36 ea 00 00	callq	*59958(%rip) ## Objc message: -[%rdi updateFromPMPageFormat]
10002e1ea:	48 83 c4 18	addq	$24, %rsp
10002e1ee:	5b	popq	%rbx
10002e1ef:	41 5e	popq	%r14
10002e1f1:	41 5f	popq	%r15
10002e1f3:	5d	popq	%rbp
10002e1f4:	c3	retq
10002e1f5:	55	pushq	%rbp
10002e1f6:	48 89 e5	movq	%rsp, %rbp
10002e1f9:	53	pushq	%rbx
10002e1fa:	50	pushq	%rax
10002e1fb:	48 8b 35 16 39 02 00	movq	145686(%rip), %rsi ## Objc selector ref: representedObject
10002e202:	48 8b 1d 17 ea 00 00	movq	59927(%rip), %rbx ## Objc message: -[%rdi representedObject]
10002e209:	ff d3	callq	*%rbx
10002e20b:	48 8b 35 7e 2e 02 00	movq	142974(%rip), %rsi ## Objc selector ref: dictionary
10002e212:	48 89 c7	movq	%rax, %rdi
10002e215:	ff d3	callq	*%rbx
10002e217:	48 8b 35 5a 36 02 00	movq	144986(%rip), %rsi ## Objc selector ref: objectForKey:
10002e21e:	48 8d 15 fb 1b 01 00	leaq	72699(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleMode"
10002e225:	48 89 c7	movq	%rax, %rdi
10002e228:	ff d3	callq	*%rbx
10002e22a:	48 8b 35 ef 32 02 00	movq	144111(%rip), %rsi ## Objc selector ref: integerValue
10002e231:	48 89 c7	movq	%rax, %rdi
10002e234:	48 89 d8	movq	%rbx, %rax
10002e237:	48 83 c4 08	addq	$8, %rsp
10002e23b:	5b	popq	%rbx
10002e23c:	5d	popq	%rbp
10002e23d:	ff e0	jmpq	*%rax
10002e23f:	55	pushq	%rbp
10002e240:	48 89 e5	movq	%rsp, %rbp
10002e243:	41 57	pushq	%r15
10002e245:	41 56	pushq	%r14
10002e247:	41 55	pushq	%r13
10002e249:	41 54	pushq	%r12
10002e24b:	53	pushq	%rbx
10002e24c:	50	pushq	%rax
10002e24d:	49 89 d7	movq	%rdx, %r15
10002e250:	49 89 fe	movq	%rdi, %r14
10002e253:	48 8b 35 be 38 02 00	movq	145598(%rip), %rsi ## Objc selector ref: representedObject
10002e25a:	4c 8b 2d bf e9 00 00	movq	59839(%rip), %r13 ## Objc message: -[%rdi representedObject]
10002e261:	41 ff d5	callq	*%r13
10002e264:	48 89 c3	movq	%rax, %rbx
10002e267:	48 8b 3d 82 43 02 00	movq	148354(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002e26e:	48 8b 35 b3 35 02 00	movq	144819(%rip), %rsi ## Objc selector ref: numberWithInteger:
10002e275:	4c 89 fa	movq	%r15, %rdx
10002e278:	41 ff d5	callq	*%r13
10002e27b:	49 89 c4	movq	%rax, %r12
10002e27e:	48 8b 35 0b 2e 02 00	movq	142859(%rip), %rsi ## Objc selector ref: dictionary
10002e285:	48 89 df	movq	%rbx, %rdi
10002e288:	41 ff d5	callq	*%r13
10002e28b:	48 8b 35 4e 3d 02 00	movq	146766(%rip), %rsi ## Objc selector ref: setObject:forKey:
10002e292:	48 8d 0d 87 1b 01 00	leaq	72583(%rip), %rcx ## Objc cfstring ref: @"CSUImageDocScaleMode"
10002e299:	48 89 c7	movq	%rax, %rdi
10002e29c:	4c 89 e2	movq	%r12, %rdx
10002e29f:	41 ff d5	callq	*%r13
10002e2a2:	4d 85 ff	testq	%r15, %r15
10002e2a5:	74 0f	je	0x10002e2b6
10002e2a7:	48 83 c4 08	addq	$8, %rsp
10002e2ab:	5b	popq	%rbx
10002e2ac:	41 5c	popq	%r12
10002e2ae:	41 5d	popq	%r13
10002e2b0:	41 5e	popq	%r14
10002e2b2:	41 5f	popq	%r15
10002e2b4:	5d	popq	%rbp
10002e2b5:	c3	retq
10002e2b6:	48 8b 05 fb 55 02 00	movq	153083(%rip), %rax
10002e2bd:	f2 41 0f 10 04 06	movsd	(%r14,%rax), %xmm0
10002e2c3:	48 8b 35 c6 3d 02 00	movq	146886(%rip), %rsi ## Objc selector ref: setScaleFactor:
10002e2ca:	4c 89 f7	movq	%r14, %rdi
10002e2cd:	48 83 c4 08	addq	$8, %rsp
10002e2d1:	5b	popq	%rbx
10002e2d2:	41 5c	popq	%r12
10002e2d4:	41 5d	popq	%r13
10002e2d6:	41 5e	popq	%r14
10002e2d8:	41 5f	popq	%r15
10002e2da:	5d	popq	%rbp
10002e2db:	ff 25 3f e9 00 00	jmpq	*59711(%rip) ## Objc message: +[NSNumber setScaleFactor:]
10002e2e1:	55	pushq	%rbp
10002e2e2:	48 89 e5	movq	%rsp, %rbp
10002e2e5:	53	pushq	%rbx
10002e2e6:	50	pushq	%rax
10002e2e7:	48 8b 35 2a 38 02 00	movq	145450(%rip), %rsi ## Objc selector ref: representedObject
10002e2ee:	48 8b 1d 2b e9 00 00	movq	59691(%rip), %rbx ## Objc message: -[%rdi representedObject]
10002e2f5:	ff d3	callq	*%rbx
10002e2f7:	48 8b 35 92 2d 02 00	movq	142738(%rip), %rsi ## Objc selector ref: dictionary
10002e2fe:	48 89 c7	movq	%rax, %rdi
10002e301:	ff d3	callq	*%rbx
10002e303:	48 8b 35 6e 35 02 00	movq	144750(%rip), %rsi ## Objc selector ref: objectForKey:
10002e30a:	48 8d 15 2f 1b 01 00	leaq	72495(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleToFitMode"
10002e311:	48 89 c7	movq	%rax, %rdi
10002e314:	ff d3	callq	*%rbx
10002e316:	48 8b 35 03 32 02 00	movq	143875(%rip), %rsi ## Objc selector ref: integerValue
10002e31d:	48 89 c7	movq	%rax, %rdi
10002e320:	48 89 d8	movq	%rbx, %rax
10002e323:	48 83 c4 08	addq	$8, %rsp
10002e327:	5b	popq	%rbx
10002e328:	5d	popq	%rbp
10002e329:	ff e0	jmpq	*%rax
10002e32b:	55	pushq	%rbp
10002e32c:	48 89 e5	movq	%rsp, %rbp
10002e32f:	41 57	pushq	%r15
10002e331:	41 56	pushq	%r14
10002e333:	53	pushq	%rbx
10002e334:	50	pushq	%rax
10002e335:	49 89 d6	movq	%rdx, %r14
10002e338:	48 8b 35 d9 37 02 00	movq	145369(%rip), %rsi ## Objc selector ref: representedObject
10002e33f:	4c 8b 3d da e8 00 00	movq	59610(%rip), %r15 ## Objc message: -[%rdi representedObject]
10002e346:	41 ff d7	callq	*%r15
10002e349:	48 89 c3	movq	%rax, %rbx
10002e34c:	48 8b 3d 9d 42 02 00	movq	148125(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002e353:	48 8b 35 ce 34 02 00	movq	144590(%rip), %rsi ## Objc selector ref: numberWithInteger:
10002e35a:	4c 89 f2	movq	%r14, %rdx
10002e35d:	41 ff d7	callq	*%r15
10002e360:	49 89 c6	movq	%rax, %r14
10002e363:	48 8b 35 26 2d 02 00	movq	142630(%rip), %rsi ## Objc selector ref: dictionary
10002e36a:	48 89 df	movq	%rbx, %rdi
10002e36d:	41 ff d7	callq	*%r15
10002e370:	48 8b 35 69 3c 02 00	movq	146537(%rip), %rsi ## Objc selector ref: setObject:forKey:
10002e377:	48 8d 0d c2 1a 01 00	leaq	72386(%rip), %rcx ## Objc cfstring ref: @"CSUImageDocScaleToFitMode"
10002e37e:	48 89 c7	movq	%rax, %rdi
10002e381:	4c 89 f2	movq	%r14, %rdx
10002e384:	4c 89 f8	movq	%r15, %rax
10002e387:	48 83 c4 08	addq	$8, %rsp
10002e38b:	5b	popq	%rbx
10002e38c:	41 5e	popq	%r14
10002e38e:	41 5f	popq	%r15
10002e390:	5d	popq	%rbp
10002e391:	ff e0	jmpq	*%rax
10002e393:	55	pushq	%rbp
10002e394:	48 89 e5	movq	%rsp, %rbp
10002e397:	53	pushq	%rbx
10002e398:	50	pushq	%rax
10002e399:	48 8b 35 78 37 02 00	movq	145272(%rip), %rsi ## Objc selector ref: representedObject
10002e3a0:	48 8b 1d 79 e8 00 00	movq	59513(%rip), %rbx ## Objc message: +[NSNumber representedObject]
10002e3a7:	ff d3	callq	*%rbx
10002e3a9:	48 8b 35 e0 2c 02 00	movq	142560(%rip), %rsi ## Objc selector ref: dictionary
10002e3b0:	48 89 c7	movq	%rax, %rdi
10002e3b3:	ff d3	callq	*%rbx
10002e3b5:	48 8b 35 bc 34 02 00	movq	144572(%rip), %rsi ## Objc selector ref: objectForKey:
10002e3bc:	48 8d 15 3d 1d 01 00	leaq	73021(%rip), %rdx ## Objc cfstring ref: @"PVPDFAutoRotate"
10002e3c3:	48 89 c7	movq	%rax, %rdi
10002e3c6:	ff d3	callq	*%rbx
10002e3c8:	48 8b 35 f9 29 02 00	movq	141817(%rip), %rsi ## Objc selector ref: boolValue
10002e3cf:	48 89 c7	movq	%rax, %rdi
10002e3d2:	48 89 d8	movq	%rbx, %rax
10002e3d5:	48 83 c4 08	addq	$8, %rsp
10002e3d9:	5b	popq	%rbx
10002e3da:	5d	popq	%rbp
10002e3db:	ff e0	jmpq	*%rax
10002e3dd:	55	pushq	%rbp
10002e3de:	48 89 e5	movq	%rsp, %rbp
10002e3e1:	41 57	pushq	%r15
10002e3e3:	41 56	pushq	%r14
10002e3e5:	53	pushq	%rbx
10002e3e6:	50	pushq	%rax
10002e3e7:	41 89 d6	movl	%edx, %r14d
10002e3ea:	48 8b 35 27 37 02 00	movq	145191(%rip), %rsi ## Objc selector ref: representedObject
10002e3f1:	4c 8b 3d 28 e8 00 00	movq	59432(%rip), %r15 ## Objc message: -[%rdi representedObject]
10002e3f8:	41 ff d7	callq	*%r15
10002e3fb:	48 89 c3	movq	%rax, %rbx
10002e3fe:	48 8b 3d eb 41 02 00	movq	147947(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002e405:	48 8b 35 fc 33 02 00	movq	144380(%rip), %rsi ## Objc selector ref: numberWithBool:
10002e40c:	44 89 f2	movl	%r14d, %edx
10002e40f:	41 ff d7	callq	*%r15
10002e412:	49 89 c6	movq	%rax, %r14
10002e415:	48 8b 35 74 2c 02 00	movq	142452(%rip), %rsi ## Objc selector ref: dictionary
10002e41c:	48 89 df	movq	%rbx, %rdi
10002e41f:	41 ff d7	callq	*%r15
10002e422:	48 8b 35 b7 3b 02 00	movq	146359(%rip), %rsi ## Objc selector ref: setObject:forKey:
10002e429:	48 8d 0d d0 1c 01 00	leaq	72912(%rip), %rcx ## Objc cfstring ref: @"PVPDFAutoRotate"
10002e430:	48 89 c7	movq	%rax, %rdi
10002e433:	4c 89 f2	movq	%r14, %rdx
10002e436:	4c 89 f8	movq	%r15, %rax
10002e439:	48 83 c4 08	addq	$8, %rsp
10002e43d:	5b	popq	%rbx
10002e43e:	41 5e	popq	%r14
10002e440:	41 5f	popq	%r15
10002e442:	5d	popq	%rbp
10002e443:	ff e0	jmpq	*%rax
10002e445:	55	pushq	%rbp
10002e446:	48 89 e5	movq	%rsp, %rbp
10002e449:	53	pushq	%rbx
10002e44a:	50	pushq	%rax
10002e44b:	48 89 fb	movq	%rdi, %rbx
10002e44e:	48 8b 35 63 2a 02 00	movq	141923(%rip), %rsi ## Objc selector ref: colorMatchingActive
10002e455:	ff 15 c5 e7 00 00	callq	*59333(%rip) ## Objc message: +[NSNumber colorMatchingActive]
10002e45b:	84 c0	testb	%al, %al
10002e45d:	74 10	je	0x10002e46f
10002e45f:	48 8b 05 72 54 02 00	movq	152690(%rip), %rax
10002e466:	80 3c 03 00	cmpb	$0, (%rbx,%rax)
10002e46a:	0f 95 c0	setne	%al
10002e46d:	eb 02	jmp	0x10002e471
10002e46f:	31 c0	xorl	%eax, %eax
10002e471:	0f b6 c0	movzbl	%al, %eax
10002e474:	48 83 c4 08	addq	$8, %rsp
10002e478:	5b	popq	%rbx
10002e479:	5d	popq	%rbp
10002e47a:	c3	retq
10002e47b:	55	pushq	%rbp
10002e47c:	48 89 e5	movq	%rsp, %rbp
10002e47f:	48 8b 05 52 54 02 00	movq	152658(%rip), %rax
10002e486:	88 14 07	movb	%dl, (%rdi,%rax)
10002e489:	5d	popq	%rbp
10002e48a:	c3	retq
10002e48b:	55	pushq	%rbp
10002e48c:	48 89 e5	movq	%rsp, %rbp
10002e48f:	41 57	pushq	%r15
10002e491:	41 56	pushq	%r14
10002e493:	41 54	pushq	%r12
10002e495:	53	pushq	%rbx
10002e496:	48 83 ec 20	subq	$32, %rsp
10002e49a:	49 89 ff	movq	%rdi, %r15
10002e49d:	4c 8b 25 fc 34 02 00	movq	144636(%rip), %r12 ## Objc selector ref: printInfo
10002e4a4:	48 8b 1d 75 e7 00 00	movq	59253(%rip), %rbx ## Objc message: -[%rdi printInfo]
10002e4ab:	4c 89 e6	movq	%r12, %rsi
10002e4ae:	ff d3	callq	*%rbx
10002e4b0:	48 8b 35 c9 26 02 00	movq	141001(%rip), %rsi ## Objc selector ref: PMPrintSession
10002e4b7:	48 89 c7	movq	%rax, %rdi
10002e4ba:	ff d3	callq	*%rbx
10002e4bc:	49 89 c6	movq	%rax, %r14
10002e4bf:	4c 89 ff	movq	%r15, %rdi
10002e4c2:	4c 89 e6	movq	%r12, %rsi
10002e4c5:	ff d3	callq	*%rbx
10002e4c7:	48 8b 35 ba 26 02 00	movq	140986(%rip), %rsi ## Objc selector ref: PMPrintSettings
10002e4ce:	48 89 c7	movq	%rax, %rdi
10002e4d1:	ff d3	callq	*%rbx
10002e4d3:	48 8d 55 d0	leaq	-48(%rbp), %rdx
10002e4d7:	48 c7 02 00 00 00 00	movq	$0, (%rdx)
10002e4de:	4c 89 f7	movq	%r14, %rdi
10002e4e1:	48 89 c6	movq	%rax, %rsi
10002e4e4:	e8 61 0e 00 00	callq	0x10002f34a ## symbol stub for: _PMSessionGetColorMatchingMode
10002e4e9:	85 c0	testl	%eax, %eax
10002e4eb:	75 09	jne	0x10002e4f6
10002e4ed:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002e4f1:	48 85 ff	testq	%rdi, %rdi
10002e4f4:	75 3e	jne	0x10002e534
10002e4f6:	48 8d 5d c8	leaq	-56(%rbp), %rbx
10002e4fa:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
10002e501:	4c 89 f7	movq	%r14, %rdi
10002e504:	48 89 de	movq	%rbx, %rsi
10002e507:	e8 44 0e 00 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
10002e50c:	48 8b 3b	movq	(%rbx), %rdi
10002e50f:	48 8d 5d df	leaq	-33(%rbp), %rbx
10002e513:	48 89 de	movq	%rbx, %rsi
10002e516:	e8 0b 0e 00 00	callq	0x10002f326 ## symbol stub for: _PMPrinterIsPostScriptPrinter
10002e51b:	80 3b 00	cmpb	$0, (%rbx)
10002e51e:	48 8d 05 db 13 01 00	leaq	70619(%rip), %rax ## Objc cfstring ref: @"AP_VendorColorMatching"
10002e525:	48 8d 3d 54 f5 00 00	leaq	62804(%rip), %rdi ## Objc cfstring ref: @"AP_ApplicationColorMatching"
10002e52c:	48 0f 44 f8	cmoveq	%rax, %rdi
10002e530:	48 89 7d d0	movq	%rdi, -48(%rbp)
10002e534:	48 8d 35 c5 13 01 00	leaq	70597(%rip), %rsi ## Objc cfstring ref: @"AP_VendorColorMatching"
10002e53b:	bb 01 00 00 00	movl	$1, %ebx
10002e540:	ba 01 00 00 00	movl	$1, %edx
10002e545:	e8 da 09 00 00	callq	0x10002ef24 ## symbol stub for: _CFStringCompare
10002e54a:	48 85 c0	testq	%rax, %rax
10002e54d:	75 0f	jne	0x10002e55e
10002e54f:	48 8b 05 8a 53 02 00	movq	152458(%rip), %rax
10002e556:	49 c7 04 07 01 00 00 00	movq	$1, (%r15,%rax)
10002e55e:	48 8b 05 5b 53 02 00	movq	152411(%rip), %rax
10002e565:	41 80 3c 07 00	cmpb	$0, (%r15,%rax)
10002e56a:	74 0b	je	0x10002e577
10002e56c:	48 8b 05 6d 53 02 00	movq	152429(%rip), %rax
10002e573:	49 8b 1c 07	movq	(%r15,%rax), %rbx
10002e577:	48 89 d8	movq	%rbx, %rax
10002e57a:	48 83 c4 20	addq	$32, %rsp
10002e57e:	5b	popq	%rbx
10002e57f:	41 5c	popq	%r12
10002e581:	41 5e	popq	%r14
10002e583:	41 5f	popq	%r15
10002e585:	5d	popq	%rbp
10002e586:	c3	retq
10002e587:	55	pushq	%rbp
10002e588:	48 89 e5	movq	%rsp, %rbp
10002e58b:	41 57	pushq	%r15
10002e58d:	41 56	pushq	%r14
10002e58f:	41 55	pushq	%r13
10002e591:	41 54	pushq	%r12
10002e593:	53	pushq	%rbx
10002e594:	48 83 ec 18	subq	$24, %rsp
10002e598:	49 89 d6	movq	%rdx, %r14
10002e59b:	49 89 fd	movq	%rdi, %r13
10002e59e:	4c 8b 3d 53 3f 02 00	movq	147283(%rip), %r15 ## Objc selector ref: willChangeValueForKey:
10002e5a5:	48 8d 15 34 13 01 00	leaq	70452(%rip), %rdx ## Objc cfstring ref: @"BPC"
10002e5ac:	48 8b 1d 6d e6 00 00	movq	58989(%rip), %rbx ## Objc message: -[%rdi willChangeValueForKey:]
10002e5b3:	4c 89 fe	movq	%r15, %rsi
10002e5b6:	ff d3	callq	*%rbx
10002e5b8:	48 8d 15 e1 19 01 00	leaq	72161(%rip), %rdx ## Objc cfstring ref: @"intent"
10002e5bf:	4c 89 ef	movq	%r13, %rdi
10002e5c2:	4c 89 fe	movq	%r15, %rsi
10002e5c5:	ff d3	callq	*%rbx
10002e5c7:	48 8b 05 12 53 02 00	movq	152338(%rip), %rax
10002e5ce:	4d 89 74 05 00	movq	%r14, (%r13,%rax)
10002e5d3:	4c 8b 3d c6 33 02 00	movq	144326(%rip), %r15 ## Objc selector ref: printInfo
10002e5da:	4c 89 ef	movq	%r13, %rdi
10002e5dd:	4c 89 fe	movq	%r15, %rsi
10002e5e0:	ff d3	callq	*%rbx
10002e5e2:	48 8b 35 97 25 02 00	movq	140695(%rip), %rsi ## Objc selector ref: PMPrintSession
10002e5e9:	48 89 c7	movq	%rax, %rdi
10002e5ec:	ff d3	callq	*%rbx
10002e5ee:	49 89 c6	movq	%rax, %r14
10002e5f1:	4c 89 ef	movq	%r13, %rdi
10002e5f4:	4c 89 fe	movq	%r15, %rsi
10002e5f7:	ff d3	callq	*%rbx
10002e5f9:	48 8b 35 88 25 02 00	movq	140680(%rip), %rsi ## Objc selector ref: PMPrintSettings
10002e600:	48 89 c7	movq	%rax, %rdi
10002e603:	ff d3	callq	*%rbx
10002e605:	49 89 c4	movq	%rax, %r12
10002e608:	48 8d 5d c8	leaq	-56(%rbp), %rbx
10002e60c:	48 c7 03 00 00 00 00	movq	$0, (%rbx)
10002e613:	4c 89 f7	movq	%r14, %rdi
10002e616:	48 89 de	movq	%rbx, %rsi
10002e619:	e8 32 0d 00 00	callq	0x10002f350 ## symbol stub for: _PMSessionGetCurrentPrinter
10002e61e:	48 8b 3b	movq	(%rbx), %rdi
10002e621:	48 8b 1d b8 52 02 00	movq	152248(%rip), %rbx
10002e628:	48 8d 75 d7	leaq	-41(%rbp), %rsi
10002e62c:	e8 fb 0c 00 00	callq	0x10002f32c ## symbol stub for: _PMPrinterIsRemote
10002e631:	49 8b 44 1d 00	movq	(%r13,%rbx), %rax
10002e636:	48 83 f8 01	cmpq	$1, %rax
10002e63a:	74 43	je	0x10002e67f
10002e63c:	48 8d 15 3d f4 00 00	leaq	62525(%rip), %rdx ## Objc cfstring ref: @"AP_ApplicationColorMatching"
10002e643:	48 85 c0	testq	%rax, %rax
10002e646:	74 4b	je	0x10002e693
10002e648:	4c 89 f7	movq	%r14, %rdi
10002e64b:	4c 89 e6	movq	%r12, %rsi
10002e64e:	e8 09 0d 00 00	callq	0x10002f35c ## symbol stub for: _PMSessionSetColorMatchingMode
10002e653:	41 89 c7	movl	%eax, %r15d
10002e656:	48 8b 05 53 52 02 00	movq	152147(%rip), %rax
10002e65d:	49 8b 7c 05 00	movq	(%r13,%rax), %rdi
10002e662:	48 8b 35 47 3d 02 00	movq	146759(%rip), %rsi ## Objc selector ref: targetIntentDict
10002e669:	ff 15 b1 e5 00 00	callq	*58801(%rip) ## Objc message: -[%rdi targetIntentDict]
10002e66f:	4c 89 f7	movq	%r14, %rdi
10002e672:	4c 89 e6	movq	%r12, %rsi
10002e675:	48 89 c2	movq	%rax, %rdx
10002e678:	e8 d9 0c 00 00	callq	0x10002f356 ## symbol stub for: _PMSessionSetApplicationOutputIntentWithColorSyncProfiles
10002e67d:	eb 22	jmp	0x10002e6a1
10002e67f:	4c 89 f7	movq	%r14, %rdi
10002e682:	4c 89 e6	movq	%r12, %rsi
10002e685:	31 d2	xorl	%edx, %edx
10002e687:	e8 ca 0c 00 00	callq	0x10002f356 ## symbol stub for: _PMSessionSetApplicationOutputIntentWithColorSyncProfiles
10002e68c:	48 8d 15 6d 12 01 00	leaq	70253(%rip), %rdx ## Objc cfstring ref: @"AP_VendorColorMatching"
10002e693:	4c 89 f7	movq	%r14, %rdi
10002e696:	4c 89 e6	movq	%r12, %rsi
10002e699:	e8 be 0c 00 00	callq	0x10002f35c ## symbol stub for: _PMSessionSetColorMatchingMode
10002e69e:	41 89 c7	movl	%eax, %r15d
10002e6a1:	49 83 7c 1d 00 01	cmpq	$1, (%r13,%rbx)
10002e6a7:	77 0c	ja	0x10002e6b5
10002e6a9:	4c 89 f7	movq	%r14, %rdi
10002e6ac:	31 f6	xorl	%esi, %esi
10002e6ae:	e8 af 0c 00 00	callq	0x10002f362 ## symbol stub for: _PMSessionSetColorMatchingModeLock
10002e6b3:	eb 1a	jmp	0x10002e6cf
10002e6b5:	4c 89 f7	movq	%r14, %rdi
10002e6b8:	be 01 00 00 00	movl	$1, %esi
10002e6bd:	e8 a0 0c 00 00	callq	0x10002f362 ## symbol stub for: _PMSessionSetColorMatchingModeLock
10002e6c2:	48 8b 05 0f 52 02 00	movq	152079(%rip), %rax
10002e6c9:	41 c6 44 05 00 00	movb	$0, (%r13,%rax)
10002e6cf:	4c 8b 35 ea 29 02 00	movq	141802(%rip), %r14 ## Objc selector ref: didChangeValueForKey:
10002e6d6:	48 8d 15 03 12 01 00	leaq	70147(%rip), %rdx ## Objc cfstring ref: @"BPC"
10002e6dd:	4c 89 ef	movq	%r13, %rdi
10002e6e0:	4c 89 f6	movq	%r14, %rsi
10002e6e3:	48 8b 1d 36 e5 00 00	movq	58678(%rip), %rbx ## Objc message: -[%rdi didChangeValueForKey:]
10002e6ea:	ff d3	callq	*%rbx
10002e6ec:	48 8d 15 ad 18 01 00	leaq	71853(%rip), %rdx ## Objc cfstring ref: @"intent"
10002e6f3:	4c 89 ef	movq	%r13, %rdi
10002e6f6:	4c 89 f6	movq	%r14, %rsi
10002e6f9:	ff d3	callq	*%rbx
10002e6fb:	45 85 ff	testl	%r15d, %r15d
10002e6fe:	74 11	je	0x10002e711
10002e700:	48 8d 3d 73 ca 00 00	leaq	51827(%rip), %rdi ## literal pool for: "err = %d\n"
10002e707:	44 89 fe	movl	%r15d, %esi
10002e70a:	31 c0	xorl	%eax, %eax
10002e70c:	e8 01 0e 00 00	callq	0x10002f512 ## symbol stub for: _printf
10002e711:	48 83 c4 18	addq	$24, %rsp
10002e715:	5b	popq	%rbx
10002e716:	41 5c	popq	%r12
10002e718:	41 5d	popq	%r13
10002e71a:	41 5e	popq	%r14
10002e71c:	41 5f	popq	%r15
10002e71e:	5d	popq	%rbp
10002e71f:	c3	retq
10002e720:	55	pushq	%rbp
10002e721:	48 89 e5	movq	%rsp, %rbp
10002e724:	53	pushq	%rbx
10002e725:	50	pushq	%rax
10002e726:	48 89 fb	movq	%rdi, %rbx
10002e729:	48 8b 35 88 27 02 00	movq	141192(%rip), %rsi ## Objc selector ref: colorMatchingActive
10002e730:	ff 15 ea e4 00 00	callq	*58602(%rip) ## Objc message: -[%rdi colorMatchingActive]
10002e736:	84 c0	testb	%al, %al
10002e738:	74 0d	je	0x10002e747
10002e73a:	48 8b 05 a7 51 02 00	movq	151975(%rip), %rax
10002e741:	48 8b 04 03	movq	(%rbx,%rax), %rax
10002e745:	eb 07	jmp	0x10002e74e
10002e747:	48 c7 c0 ff ff ff ff	movq	$-1, %rax
10002e74e:	48 83 c4 08	addq	$8, %rsp
10002e752:	5b	popq	%rbx
10002e753:	5d	popq	%rbp
10002e754:	c3	retq
10002e755:	55	pushq	%rbp
10002e756:	48 89 e5	movq	%rsp, %rbp
10002e759:	48 8b 05 88 51 02 00	movq	151944(%rip), %rax
10002e760:	48 89 14 07	movq	%rdx, (%rdi,%rax)
10002e764:	5d	popq	%rbp
10002e765:	c3	retq
10002e766:	55	pushq	%rbp
10002e767:	48 89 e5	movq	%rsp, %rbp
10002e76a:	48 8b 05 4f 51 02 00	movq	151887(%rip), %rax
10002e771:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002e775:	5d	popq	%rbp
10002e776:	c3	retq
10002e777:	55	pushq	%rbp
10002e778:	48 89 e5	movq	%rsp, %rbp
10002e77b:	48 8b 05 3e 51 02 00	movq	151870(%rip), %rax
10002e782:	88 14 07	movb	%dl, (%rdi,%rax)
10002e785:	5d	popq	%rbp
10002e786:	c3	retq
10002e787:	55	pushq	%rbp
10002e788:	48 89 e5	movq	%rsp, %rbp
10002e78b:	48 8b 05 2e 51 02 00	movq	151854(%rip), %rax
10002e792:	80 3c 07 00	cmpb	$0, (%rdi,%rax)
10002e796:	74 11	je	0x10002e7a9
10002e798:	48 8b 05 41 51 02 00	movq	151873(%rip), %rax
10002e79f:	48 83 3c 07 00	cmpq	$0, (%rdi,%rax)
10002e7a4:	0f 94 c0	sete	%al
10002e7a7:	eb 02	jmp	0x10002e7ab
10002e7a9:	31 c0	xorl	%eax, %eax
10002e7ab:	0f b6 c0	movzbl	%al, %eax
10002e7ae:	5d	popq	%rbp
10002e7af:	c3	retq
10002e7b0:	55	pushq	%rbp
10002e7b1:	48 89 e5	movq	%rsp, %rbp
10002e7b4:	48 8b 05 05 51 02 00	movq	151813(%rip), %rax
10002e7bb:	88 14 07	movb	%dl, (%rdi,%rax)
10002e7be:	5d	popq	%rbp
10002e7bf:	c3	retq
10002e7c0:	55	pushq	%rbp
10002e7c1:	48 89 e5	movq	%rsp, %rbp
10002e7c4:	41 56	pushq	%r14
10002e7c6:	53	pushq	%rbx
10002e7c7:	48 89 fb	movq	%rdi, %rbx
10002e7ca:	48 8b 35 3f 29 02 00	movq	141631(%rip), %rsi ## Objc selector ref: doubleValue
10002e7d1:	4c 8b 35 48 e4 00 00	movq	58440(%rip), %r14 ## Objc message: -[%rdi doubleValue]
10002e7d8:	48 89 d7	movq	%rdx, %rdi
10002e7db:	41 ff d6	callq	*%r14
10002e7de:	48 8b 05 d3 50 02 00	movq	151763(%rip), %rax
10002e7e5:	f2 0f 11 04 03	movsd	%xmm0, (%rbx,%rax)
10002e7ea:	48 8b 05 ff 50 02 00	movq	151807(%rip), %rax
10002e7f1:	48 8b 3c 03	movq	(%rbx,%rax), %rdi
10002e7f5:	48 8b 35 b4 35 02 00	movq	144820(%rip), %rsi ## Objc selector ref: setDoubleValue:
10002e7fc:	4c 89 f0	movq	%r14, %rax
10002e7ff:	5b	popq	%rbx
10002e800:	41 5e	popq	%r14
10002e802:	5d	popq	%rbp
10002e803:	ff e0	jmpq	*%rax
10002e805:	55	pushq	%rbp
10002e806:	48 89 e5	movq	%rsp, %rbp
10002e809:	48 8b 05 b8 50 02 00	movq	151736(%rip), %rax
10002e810:	0f be 04 07	movsbl	(%rdi,%rax), %eax
10002e814:	5d	popq	%rbp
10002e815:	c3	retq
10002e816:	55	pushq	%rbp
10002e817:	48 89 e5	movq	%rsp, %rbp
10002e81a:	53	pushq	%rbx
10002e81b:	50	pushq	%rax
10002e81c:	48 8b 05 a5 50 02 00	movq	151717(%rip), %rax
10002e823:	88 14 07	movb	%dl, (%rdi,%rax)
10002e826:	84 d2	testb	%dl, %dl
10002e828:	75 31	jne	0x10002e85b
10002e82a:	48 89 fb	movq	%rdi, %rbx
10002e82d:	48 8b 35 74 31 02 00	movq	143732(%rip), %rsi ## Objc selector ref: printMode
10002e834:	ff 15 e6 e3 00 00	callq	*58342(%rip) ## Objc message: -[%rdi printMode]
10002e83a:	48 83 f8 02	cmpq	$2, %rax
10002e83e:	75 1b	jne	0x10002e85b
10002e840:	48 8b 35 e9 37 02 00	movq	145385(%rip), %rsi ## Objc selector ref: setPrintMode:
10002e847:	ba 01 00 00 00	movl	$1, %edx
10002e84c:	48 89 df	movq	%rbx, %rdi
10002e84f:	48 83 c4 08	addq	$8, %rsp
10002e853:	5b	popq	%rbx
10002e854:	5d	popq	%rbp
10002e855:	ff 25 c5 e3 00 00	jmpq	*58309(%rip) ## Objc message: -[%rdi setPrintMode:]
10002e85b:	48 83 c4 08	addq	$8, %rsp
10002e85f:	5b	popq	%rbx
10002e860:	5d	popq	%rbp
10002e861:	c3	retq
10002e862:	55	pushq	%rbp
10002e863:	48 89 e5	movq	%rsp, %rbp
10002e866:	48 8b 35 bb 2c 02 00	movq	142523(%rip), %rsi ## Objc selector ref: intent
10002e86d:	ff 15 ad e3 00 00	callq	*58285(%rip) ## Objc message: -[%rdi intent]
10002e873:	48 89 c1	movq	%rax, %rcx
10002e876:	31 c0	xorl	%eax, %eax
10002e878:	48 83 f9 03	cmpq	$3, %rcx
10002e87c:	77 0a	ja	0x10002e888
10002e87e:	48 8d 05 6b ab 00 00	leaq	43883(%rip), %rax
10002e885:	8b 04 88	movl	(%rax,%rcx,4), %eax
10002e888:	5d	popq	%rbp
10002e889:	c3	retq
10002e88a:	55	pushq	%rbp
10002e88b:	48 89 e5	movq	%rsp, %rbp
10002e88e:	41 56	pushq	%r14
10002e890:	53	pushq	%rbx
10002e891:	48 8b 3d 08 3d 02 00	movq	146696(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSBundle
10002e898:	48 8b 35 49 2e 02 00	movq	142921(%rip), %rsi ## Objc selector ref: mainBundle
10002e89f:	4c 8b 35 7a e3 00 00	movq	58234(%rip), %r14 ## Objc message: +[NSBundle mainBundle]
10002e8a6:	41 ff d6	callq	*%r14
10002e8a9:	48 8b 35 c0 2f 02 00	movq	143296(%rip), %rsi ## Objc selector ref: objectForInfoDictionaryKey:
10002e8b0:	48 8d 15 69 18 01 00	leaq	71785(%rip), %rdx ## Objc cfstring ref: @"CFBundleHelpBookName"
10002e8b7:	48 89 c7	movq	%rax, %rdi
10002e8ba:	41 ff d6	callq	*%r14
10002e8bd:	48 89 c3	movq	%rax, %rbx
10002e8c0:	48 8b 3d a1 3e 02 00	movq	147105(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSHelpManager
10002e8c7:	48 8b 35 52 39 02 00	movq	145746(%rip), %rsi ## Objc selector ref: sharedHelpManager
10002e8ce:	41 ff d6	callq	*%r14
10002e8d1:	48 8b 35 e0 2f 02 00	movq	143328(%rip), %rsi ## Objc selector ref: openHelpAnchor:inBook:
10002e8d8:	48 8d 15 61 18 01 00	leaq	71777(%rip), %rdx ## Objc cfstring ref: @"csu35935"
10002e8df:	48 89 c7	movq	%rax, %rdi
10002e8e2:	48 89 d9	movq	%rbx, %rcx
10002e8e5:	4c 89 f0	movq	%r14, %rax
10002e8e8:	5b	popq	%rbx
10002e8e9:	41 5e	popq	%r14
10002e8eb:	5d	popq	%rbp
10002e8ec:	ff e0	jmpq	*%rax
10002e8ee:	55	pushq	%rbp
10002e8ef:	48 89 e5	movq	%rsp, %rbp
10002e8f2:	41 57	pushq	%r15
10002e8f4:	41 56	pushq	%r14
10002e8f6:	41 55	pushq	%r13
10002e8f8:	41 54	pushq	%r12
10002e8fa:	53	pushq	%rbx
10002e8fb:	50	pushq	%rax
10002e8fc:	49 89 fe	movq	%rdi, %r14
10002e8ff:	48 8b 35 8a 27 02 00	movq	141194(%rip), %rsi ## Objc selector ref: dictionary
10002e906:	48 8b 1d 13 e3 00 00	movq	58131(%rip), %rbx ## Objc message: +[NSHelpManager dictionary]
10002e90d:	48 89 d7	movq	%rdx, %rdi
10002e910:	ff d3	callq	*%rbx
10002e912:	49 89 c5	movq	%rax, %r13
10002e915:	4c 8b 3d 5c 2f 02 00	movq	143196(%rip), %r15 ## Objc selector ref: objectForKey:
10002e91c:	48 8d 15 3d 15 01 00	leaq	70973(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocAutoRotate"
10002e923:	48 89 c7	movq	%rax, %rdi
10002e926:	4c 89 fe	movq	%r15, %rsi
10002e929:	49 89 dc	movq	%rbx, %r12
10002e92c:	ff d3	callq	*%rbx
10002e92e:	48 85 c0	testq	%rax, %rax
10002e931:	75 49	jne	0x10002e97c
10002e933:	48 8b 3d 56 3c 02 00	movq	146518(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10002e93a:	48 8b 35 6f 39 02 00	movq	145775(%rip), %rsi ## Objc selector ref: standardUserDefaults
10002e941:	4c 89 e3	movq	%r12, %rbx
10002e944:	41 ff d4	callq	*%r12
10002e947:	48 8b 35 72 24 02 00	movq	140402(%rip), %rsi ## Objc selector ref: boolForKey:
10002e94e:	48 8d 15 0b 18 01 00	leaq	71691(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocPrintingAutoRotate"
10002e955:	48 89 c7	movq	%rax, %rdi
10002e958:	41 ff d4	callq	*%r12
10002e95b:	48 8b 0d 96 4f 02 00	movq	151446(%rip), %rcx
10002e962:	49 83 3c 0e 00	cmpq	$0, (%r14,%rcx)
10002e967:	74 13	je	0x10002e97c
10002e969:	48 8b 35 40 33 02 00	movq	144192(%rip), %rsi ## Objc selector ref: setAutoRotate:
10002e970:	0f be d0	movsbl	%al, %edx
10002e973:	4c 89 f7	movq	%r14, %rdi
10002e976:	ff 15 a4 e2 00 00	callq	*58020(%rip) ## Objc message: +[NSUserDefaults setAutoRotate:]
10002e97c:	48 8d 15 9d 14 01 00	leaq	70813(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleMode"
10002e983:	4c 89 ef	movq	%r13, %rdi
10002e986:	4c 89 fe	movq	%r15, %rsi
10002e989:	ff 15 91 e2 00 00	callq	*58001(%rip) ## Objc message: -[%rdi setAutoRotate:]
10002e98f:	48 85 c0	testq	%rax, %rax
10002e992:	75 38	jne	0x10002e9cc
10002e994:	48 8b 3d f5 3b 02 00	movq	146421(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10002e99b:	48 8b 35 0e 39 02 00	movq	145678(%rip), %rsi ## Objc selector ref: standardUserDefaults
10002e9a2:	4c 89 e3	movq	%r12, %rbx
10002e9a5:	41 ff d4	callq	*%r12
10002e9a8:	48 8b 35 69 2b 02 00	movq	142185(%rip), %rsi ## Objc selector ref: integerForKey:
10002e9af:	48 8d 15 ca 17 01 00	leaq	71626(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocPrintingScaleMode"
10002e9b6:	48 89 c7	movq	%rax, %rdi
10002e9b9:	41 ff d4	callq	*%r12
10002e9bc:	48 8b 35 dd 36 02 00	movq	145117(%rip), %rsi ## Objc selector ref: setScalingMode:
10002e9c3:	4c 89 f7	movq	%r14, %rdi
10002e9c6:	48 89 c2	movq	%rax, %rdx
10002e9c9:	41 ff d4	callq	*%r12
10002e9cc:	48 8d 15 6d 14 01 00	leaq	70765(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocScaleToFitMode"
10002e9d3:	4c 89 ef	movq	%r13, %rdi
10002e9d6:	4c 89 fe	movq	%r15, %rsi
10002e9d9:	ff 15 41 e2 00 00	callq	*57921(%rip) ## Objc message: +[NSUserDefaults setScalingMode:]
10002e9df:	48 85 c0	testq	%rax, %rax
10002e9e2:	74 0f	je	0x10002e9f3
10002e9e4:	48 83 c4 08	addq	$8, %rsp
10002e9e8:	5b	popq	%rbx
10002e9e9:	41 5c	popq	%r12
10002e9eb:	41 5d	popq	%r13
10002e9ed:	41 5e	popq	%r14
10002e9ef:	41 5f	popq	%r15
10002e9f1:	5d	popq	%rbp
10002e9f2:	c3	retq
10002e9f3:	48 8b 3d 96 3b 02 00	movq	146326(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10002e9fa:	48 8b 35 af 38 02 00	movq	145583(%rip), %rsi ## Objc selector ref: standardUserDefaults
10002ea01:	41 ff d4	callq	*%r12
10002ea04:	48 8b 35 0d 2b 02 00	movq	142093(%rip), %rsi ## Objc selector ref: integerForKey:
10002ea0b:	48 8d 15 8e 17 01 00	leaq	71566(%rip), %rdx ## Objc cfstring ref: @"CSUImageDocPrintingScaleToFitMode"
10002ea12:	48 89 c7	movq	%rax, %rdi
10002ea15:	41 ff d4	callq	*%r12
10002ea18:	48 8b 35 79 36 02 00	movq	145017(%rip), %rsi ## Objc selector ref: setScaleToFitMode:
10002ea1f:	4c 89 f7	movq	%r14, %rdi
10002ea22:	48 89 c2	movq	%rax, %rdx
10002ea25:	4c 89 e0	movq	%r12, %rax
10002ea28:	48 83 c4 08	addq	$8, %rsp
10002ea2c:	5b	popq	%rbx
10002ea2d:	41 5c	popq	%r12
10002ea2f:	41 5d	popq	%r13
10002ea31:	41 5e	popq	%r14
10002ea33:	41 5f	popq	%r15
10002ea35:	5d	popq	%rbp
10002ea36:	ff e0	jmpq	*%rax
10002ea38:	55	pushq	%rbp
10002ea39:	48 89 e5	movq	%rsp, %rbp
10002ea3c:	41 56	pushq	%r14
10002ea3e:	53	pushq	%rbx
10002ea3f:	89 d3	movl	%edx, %ebx
10002ea41:	48 8b 3d 48 3b 02 00	movq	146248(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10002ea48:	48 8b 35 61 38 02 00	movq	145505(%rip), %rsi ## Objc selector ref: standardUserDefaults
10002ea4f:	4c 8b 35 ca e1 00 00	movq	57802(%rip), %r14 ## Objc message: +[NSUserDefaults standardUserDefaults]
10002ea56:	41 ff d6	callq	*%r14
10002ea59:	48 8b 35 80 32 02 00	movq	144000(%rip), %rsi ## Objc selector ref: setBool:forKey:
10002ea60:	48 8d 0d 59 17 01 00	leaq	71513(%rip), %rcx ## Objc cfstring ref: @"PMPrintingExpandedStateForPrint"
10002ea67:	48 89 c7	movq	%rax, %rdi
10002ea6a:	89 da	movl	%ebx, %edx
10002ea6c:	4c 89 f0	movq	%r14, %rax
10002ea6f:	5b	popq	%rbx
10002ea70:	41 5e	popq	%r14
10002ea72:	5d	popq	%rbp
10002ea73:	ff e0	jmpq	*%rax
10002ea75:	55	pushq	%rbp
10002ea76:	48 89 e5	movq	%rsp, %rbp
10002ea79:	5d	popq	%rbp
10002ea7a:	c3	retq
10002ea7b:	55	pushq	%rbp
10002ea7c:	48 89 e5	movq	%rsp, %rbp
10002ea7f:	41 57	pushq	%r15
10002ea81:	41 56	pushq	%r14
10002ea83:	41 55	pushq	%r13
10002ea85:	41 54	pushq	%r12
10002ea87:	53	pushq	%rbx
10002ea88:	50	pushq	%rax
10002ea89:	48 89 fb	movq	%rdi, %rbx
10002ea8c:	48 8b 3d 0d 3c 02 00	movq	146445(%rip), %rdi ## Objc class ref: FilterDocPDEController
10002ea93:	e8 62 0a 00 00	callq	0x10002f4fa ## symbol stub for: _objc_opt_self
10002ea98:	48 39 d8	cmpq	%rbx, %rax
10002ea9b:	74 0f	je	0x10002eaac
10002ea9d:	48 83 c4 08	addq	$8, %rsp
10002eaa1:	5b	popq	%rbx
10002eaa2:	41 5c	popq	%r12
10002eaa4:	41 5d	popq	%r13
10002eaa6:	41 5e	popq	%r14
10002eaa8:	41 5f	popq	%r15
10002eaaa:	5d	popq	%rbp
10002eaab:	c3	retq
10002eaac:	48 8b 3d bd 3c 02 00	movq	146621(%rip), %rdi ## Objc class ref: CSUPercentTransformer
10002eab3:	e8 0c 0a 00 00	callq	0x10002f4c4 ## symbol stub for: _objc_alloc_init
10002eab8:	48 89 c7	movq	%rax, %rdi
10002eabb:	e8 0a 0a 00 00	callq	0x10002f4ca ## symbol stub for: _objc_autorelease
10002eac0:	48 8b 3d b1 3c 02 00	movq	146609(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSValueTransformer
10002eac7:	48 8b 35 82 36 02 00	movq	145026(%rip), %rsi ## Objc selector ref: setValueTransformer:forName:
10002eace:	48 8d 0d 0b 17 01 00	leaq	71435(%rip), %rcx ## Objc cfstring ref: @"CSUPercentTransformer"
10002ead5:	4c 8b 35 44 e1 00 00	movq	57668(%rip), %r14 ## Objc message: +[NSValueTransformer setValueTransformer:forName:]
10002eadc:	48 89 c2	movq	%rax, %rdx
10002eadf:	41 ff d6	callq	*%r14
10002eae2:	4c 8b 3d 2f 3b 02 00	movq	146223(%rip), %r15 ## Objc class ref: _OBJC_CLASS_$_NSDictionary
10002eae9:	48 8b 05 90 de 00 00	movq	56976(%rip), %rax ## literal pool symbol address: _kCFBooleanTrue
10002eaf0:	48 8b 00	movq	(%rax), %rax
10002eaf3:	48 89 45 d0	movq	%rax, -48(%rbp)
10002eaf7:	48 8b 3d f2 3a 02 00	movq	146162(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002eafe:	4c 8b 25 23 2d 02 00	movq	142627(%rip), %r12 ## Objc selector ref: numberWithInteger:
10002eb05:	ba 01 00 00 00	movl	$1, %edx
10002eb0a:	4c 89 e6	movq	%r12, %rsi
10002eb0d:	41 ff d6	callq	*%r14
10002eb10:	49 89 c5	movq	%rax, %r13
10002eb13:	48 8b 3d d6 3a 02 00	movq	146134(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002eb1a:	ba 01 00 00 00	movl	$1, %edx
10002eb1f:	4c 89 e6	movq	%r12, %rsi
10002eb22:	41 ff d6	callq	*%r14
10002eb25:	48 89 c3	movq	%rax, %rbx
10002eb28:	48 8b 35 89 25 02 00	movq	140681(%rip), %rsi ## Objc selector ref: dictionaryWithObjectsAndKeys:
10002eb2f:	48 83 ec 08	subq	$8, %rsp
10002eb33:	4c 8d 15 66 16 01 00	leaq	71270(%rip), %r10 ## Objc cfstring ref: @"CSUImageDocPrintingScaleToFitMode"
10002eb3a:	48 8d 0d 1f 16 01 00	leaq	71199(%rip), %rcx ## Objc cfstring ref: @"CSUImageDocPrintingAutoRotate"
10002eb41:	4c 8d 0d 38 16 01 00	leaq	71224(%rip), %r9 ## Objc cfstring ref: @"CSUImageDocPrintingScaleMode"
10002eb48:	4c 89 ff	movq	%r15, %rdi
10002eb4b:	48 8b 55 d0	movq	-48(%rbp), %rdx
10002eb4f:	4d 89 e8	movq	%r13, %r8
10002eb52:	31 c0	xorl	%eax, %eax
10002eb54:	6a 00	pushq	$0
10002eb56:	41 52	pushq	%r10
10002eb58:	53	pushq	%rbx
10002eb59:	41 ff d6	callq	*%r14
10002eb5c:	48 83 c4 20	addq	$32, %rsp
10002eb60:	48 89 c3	movq	%rax, %rbx
10002eb63:	48 8b 3d 26 3a 02 00	movq	145958(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSUserDefaults
10002eb6a:	48 8b 35 3f 37 02 00	movq	145215(%rip), %rsi ## Objc selector ref: standardUserDefaults
10002eb71:	41 ff d6	callq	*%r14
10002eb74:	48 8b 35 05 2f 02 00	movq	143109(%rip), %rsi ## Objc selector ref: registerDefaults:
10002eb7b:	48 89 c7	movq	%rax, %rdi
10002eb7e:	48 89 da	movq	%rbx, %rdx
10002eb81:	4c 89 f0	movq	%r14, %rax
10002eb84:	48 83 c4 08	addq	$8, %rsp
10002eb88:	5b	popq	%rbx
10002eb89:	41 5c	popq	%r12
10002eb8b:	41 5d	popq	%r13
10002eb8d:	41 5e	popq	%r14
10002eb8f:	41 5f	popq	%r15
10002eb91:	5d	popq	%rbp
10002eb92:	ff e0	jmpq	*%rax
10002eb94:	55	pushq	%rbp
10002eb95:	48 89 e5	movq	%rsp, %rbp
10002eb98:	41 57	pushq	%r15
10002eb9a:	41 56	pushq	%r14
10002eb9c:	41 55	pushq	%r13
10002eb9e:	41 54	pushq	%r12
10002eba0:	53	pushq	%rbx
10002eba1:	48 83 ec 28	subq	$40, %rsp
10002eba5:	4d 89 c6	movq	%r8, %r14
10002eba8:	49 89 cf	movq	%rcx, %r15
10002ebab:	48 89 d3	movq	%rdx, %rbx
10002ebae:	49 89 fc	movq	%rdi, %r12
10002ebb1:	48 8d 7d b0	leaq	-80(%rbp), %rdi
10002ebb5:	4c 89 27	movq	%r12, (%rdi)
10002ebb8:	48 8b 05 09 3d 02 00	movq	146697(%rip), %rax ## Objc class ref: CSUPercentNumberFormatter
10002ebbf:	48 89 47 08	movq	%rax, 8(%rdi)
10002ebc3:	48 8b 35 1e 27 02 00	movq	141086(%rip), %rsi ## Objc selector ref: getObjectValue:forString:errorDescription:
10002ebca:	e8 0d 09 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] getObjectValue:forString:errorDescription:]
10002ebcf:	41 89 c5	movl	%eax, %r13d
10002ebd2:	84 c0	testb	%al, %al
10002ebd4:	0f 85 b0 01 00 00	jne	0x10002ed8a
10002ebda:	48 8b 35 7f 2d 02 00	movq	142719(%rip), %rsi ## Objc selector ref: percentSymbol
10002ebe1:	4c 8b 2d 38 e0 00 00	movq	57400(%rip), %r13 ## Objc message: -[%rdi percentSymbol]
10002ebe8:	4c 89 e7	movq	%r12, %rdi
10002ebeb:	41 ff d5	callq	*%r13
10002ebee:	48 8b 35 53 2e 02 00	movq	142931(%rip), %rsi ## Objc selector ref: rangeOfString:options:
10002ebf5:	b9 0c 00 00 00	movl	$12, %ecx
10002ebfa:	4c 89 ff	movq	%r15, %rdi
10002ebfd:	48 89 c2	movq	%rax, %rdx
10002ec00:	41 ff d5	callq	*%r13
10002ec03:	48 b9 ff ff ff ff ff ff ff 7f	movabsq	$9223372036854775807, %rcx
10002ec0d:	48 39 c8	cmpq	%rcx, %rax
10002ec10:	0f 85 71 01 00 00	jne	0x10002ed87
10002ec16:	4d 85 f6	testq	%r14, %r14
10002ec19:	74 0d	je	0x10002ec28
10002ec1b:	49 83 3e 00	cmpq	$0, (%r14)
10002ec1f:	74 07	je	0x10002ec28
10002ec21:	49 c7 06 00 00 00 00	movq	$0, (%r14)
10002ec28:	48 8b 05 99 39 02 00	movq	145817(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSString
10002ec2f:	48 89 45 d0	movq	%rax, -48(%rbp)
10002ec33:	4c 89 e7	movq	%r12, %rdi
10002ec36:	48 8b 35 23 2d 02 00	movq	142627(%rip), %rsi ## Objc selector ref: percentSymbol
10002ec3d:	4c 8b 2d dc df 00 00	movq	57308(%rip), %r13 ## Objc message: +[NSString percentSymbol]
10002ec44:	41 ff d5	callq	*%r13
10002ec47:	48 8b 35 da 36 02 00	movq	145114(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002ec4e:	48 8d 15 ab 15 01 00	leaq	71083(%rip), %rdx ## Objc cfstring ref: @"%@%@"
10002ec55:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002ec59:	4c 89 f9	movq	%r15, %rcx
10002ec5c:	49 89 c0	movq	%rax, %r8
10002ec5f:	31 c0	xorl	%eax, %eax
10002ec61:	41 ff d5	callq	*%r13
10002ec64:	49 89 c7	movq	%rax, %r15
10002ec67:	48 8d 7d c0	leaq	-64(%rbp), %rdi
10002ec6b:	4c 89 27	movq	%r12, (%rdi)
10002ec6e:	48 8b 05 53 3c 02 00	movq	146515(%rip), %rax ## Objc class ref: CSUPercentNumberFormatter
10002ec75:	48 89 47 08	movq	%rax, 8(%rdi)
10002ec79:	48 8b 35 68 26 02 00	movq	140904(%rip), %rsi ## Objc selector ref: getObjectValue:forString:errorDescription:
10002ec80:	48 89 da	movq	%rbx, %rdx
10002ec83:	4c 89 f9	movq	%r15, %rcx
10002ec86:	4d 89 f0	movq	%r14, %r8
10002ec89:	e8 4e 08 00 00	callq	0x10002f4dc ## Objc message: -[[%rdi super] getObjectValue:forString:errorDescription:]
10002ec8e:	41 89 c5	movl	%eax, %r13d
10002ec91:	4d 85 f6	testq	%r14, %r14
10002ec94:	0f 84 f0 00 00 00	je	0x10002ed8a
10002ec9a:	45 84 ed	testb	%r13b, %r13b
10002ec9d:	0f 85 e7 00 00 00	jne	0x10002ed8a
10002eca3:	48 8b 1d 66 24 02 00	movq	140390(%rip), %rbx ## Objc selector ref: doubleValue
10002ecaa:	4c 89 ff	movq	%r15, %rdi
10002ecad:	48 89 de	movq	%rbx, %rsi
10002ecb0:	ff 15 6a df 00 00	callq	*57194(%rip) ## Objc message: -[%rdi doubleValue]
10002ecb6:	f2 0f 5e 05 7a 97 00 00	divsd	38778(%rip), %xmm0
10002ecbe:	66 0f 57 c9	xorpd	%xmm1, %xmm1
10002ecc2:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10002ecc6:	75 06	jne	0x10002ecce
10002ecc8:	0f 8b b9 00 00 00	jnp	0x10002ed87
10002ecce:	4c 8b 2d 9b 2a 02 00	movq	141979(%rip), %r13 ## Objc selector ref: minimum
10002ecd5:	4c 89 e7	movq	%r12, %rdi
10002ecd8:	4c 89 ee	movq	%r13, %rsi
10002ecdb:	4c 8b 3d 3e df 00 00	movq	57150(%rip), %r15 ## Objc message: -[%rdi minimum]
10002ece2:	f2 0f 11 45 d0	movsd	%xmm0, -48(%rbp)
10002ece7:	41 ff d7	callq	*%r15
10002ecea:	48 89 c7	movq	%rax, %rdi
10002eced:	48 89 de	movq	%rbx, %rsi
10002ecf0:	41 ff d7	callq	*%r15
10002ecf3:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10002ecf8:	66 0f 2e c1	ucomisd	%xmm1, %xmm0
10002ecfc:	77 21	ja	0x10002ed1f
10002ecfe:	4c 89 e7	movq	%r12, %rdi
10002ed01:	48 8b 35 38 2a 02 00	movq	141880(%rip), %rsi ## Objc selector ref: maximum
10002ed08:	41 ff d7	callq	*%r15
10002ed0b:	48 89 c7	movq	%rax, %rdi
10002ed0e:	48 89 de	movq	%rbx, %rsi
10002ed11:	41 ff d7	callq	*%r15
10002ed14:	f2 0f 10 4d d0	movsd	-48(%rbp), %xmm1
10002ed19:	66 0f 2e c8	ucomisd	%xmm0, %xmm1
10002ed1d:	76 68	jbe	0x10002ed87
10002ed1f:	48 8b 05 a2 38 02 00	movq	145570(%rip), %rax ## Objc class ref: _OBJC_CLASS_$_NSString
10002ed26:	48 89 45 d0	movq	%rax, -48(%rbp)
10002ed2a:	4c 89 e7	movq	%r12, %rdi
10002ed2d:	4c 89 ee	movq	%r13, %rsi
10002ed30:	41 ff d7	callq	*%r15
10002ed33:	4c 8b 2d c6 35 02 00	movq	144838(%rip), %r13 ## Objc selector ref: stringForObjectValue:
10002ed3a:	4c 89 e7	movq	%r12, %rdi
10002ed3d:	4c 89 ee	movq	%r13, %rsi
10002ed40:	48 89 c2	movq	%rax, %rdx
10002ed43:	41 ff d7	callq	*%r15
10002ed46:	48 89 c3	movq	%rax, %rbx
10002ed49:	4c 89 e7	movq	%r12, %rdi
10002ed4c:	48 8b 35 ed 29 02 00	movq	141805(%rip), %rsi ## Objc selector ref: maximum
10002ed53:	41 ff d7	callq	*%r15
10002ed56:	4c 89 e7	movq	%r12, %rdi
10002ed59:	4c 89 ee	movq	%r13, %rsi
10002ed5c:	48 89 c2	movq	%rax, %rdx
10002ed5f:	41 ff d7	callq	*%r15
10002ed62:	48 8d 15 b7 14 01 00	leaq	70839(%rip), %rdx ## Objc cfstring ref: @"Range error. Please enter a number between %@ and %@"
10002ed69:	45 31 ed	xorl	%r13d, %r13d
10002ed6c:	48 8b 7d d0	movq	-48(%rbp), %rdi
10002ed70:	48 8b 35 b1 35 02 00	movq	144817(%rip), %rsi ## Objc selector ref: stringWithFormat:
10002ed77:	48 89 d9	movq	%rbx, %rcx
10002ed7a:	49 89 c0	movq	%rax, %r8
10002ed7d:	31 c0	xorl	%eax, %eax
10002ed7f:	41 ff d7	callq	*%r15
10002ed82:	49 89 06	movq	%rax, (%r14)
10002ed85:	eb 03	jmp	0x10002ed8a
10002ed87:	45 31 ed	xorl	%r13d, %r13d
10002ed8a:	41 0f be c5	movsbl	%r13b, %eax
10002ed8e:	48 83 c4 28	addq	$40, %rsp
10002ed92:	5b	popq	%rbx
10002ed93:	41 5c	popq	%r12
10002ed95:	41 5d	popq	%r13
10002ed97:	41 5e	popq	%r14
10002ed99:	41 5f	popq	%r15
10002ed9b:	5d	popq	%rbp
10002ed9c:	c3	retq
10002ed9d:	55	pushq	%rbp
10002ed9e:	48 89 e5	movq	%rsp, %rbp
10002eda1:	48 8b 3d 48 38 02 00	movq	145480(%rip), %rdi ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002eda8:	5d	popq	%rbp
10002eda9:	e9 3a 07 00 00	jmp	0x10002f4e8 ## symbol stub for: _objc_opt_class
10002edae:	55	pushq	%rbp
10002edaf:	48 89 e5	movq	%rsp, %rbp
10002edb2:	b8 01 00 00 00	movl	$1, %eax
10002edb7:	5d	popq	%rbp
10002edb8:	c3	retq
10002edb9:	48 85 d2	testq	%rdx, %rdx
10002edbc:	74 35	je	0x10002edf3
10002edbe:	55	pushq	%rbp
10002edbf:	48 89 e5	movq	%rsp, %rbp
10002edc2:	41 56	pushq	%r14
10002edc4:	53	pushq	%rbx
10002edc5:	48 8b 1d 24 38 02 00	movq	145444(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002edcc:	48 8b 35 3d 23 02 00	movq	140093(%rip), %rsi ## Objc selector ref: doubleValue
10002edd3:	4c 8b 35 46 de 00 00	movq	56902(%rip), %r14 ## Objc message: +[NSNumber doubleValue]
10002edda:	48 89 d7	movq	%rdx, %rdi
10002eddd:	41 ff d6	callq	*%r14
10002ede0:	48 8b 35 29 2a 02 00	movq	141865(%rip), %rsi ## Objc selector ref: numberWithDouble:
10002ede7:	48 89 df	movq	%rbx, %rdi
10002edea:	4c 89 f0	movq	%r14, %rax
10002eded:	5b	popq	%rbx
10002edee:	41 5e	popq	%r14
10002edf0:	5d	popq	%rbp
10002edf1:	ff e0	jmpq	*%rax
10002edf3:	31 c0	xorl	%eax, %eax
10002edf5:	c3	retq
10002edf6:	48 85 d2	testq	%rdx, %rdx
10002edf9:	74 35	je	0x10002ee30
10002edfb:	55	pushq	%rbp
10002edfc:	48 89 e5	movq	%rsp, %rbp
10002edff:	41 56	pushq	%r14
10002ee01:	53	pushq	%rbx
10002ee02:	48 8b 1d e7 37 02 00	movq	145383(%rip), %rbx ## Objc class ref: _OBJC_CLASS_$_NSNumber
10002ee09:	48 8b 35 00 23 02 00	movq	140032(%rip), %rsi ## Objc selector ref: doubleValue
10002ee10:	4c 8b 35 09 de 00 00	movq	56841(%rip), %r14 ## Objc message: +[NSNumber doubleValue]
10002ee17:	48 89 d7	movq	%rdx, %rdi
10002ee1a:	41 ff d6	callq	*%r14
10002ee1d:	48 8b 35 ec 29 02 00	movq	141804(%rip), %rsi ## Objc selector ref: numberWithDouble:
10002ee24:	48 89 df	movq	%rbx, %rdi
10002ee27:	4c 89 f0	movq	%r14, %rax
10002ee2a:	5b	popq	%rbx
10002ee2b:	41 5e	popq	%r14
10002ee2d:	5d	popq	%rbp
10002ee2e:	ff e0	jmpq	*%rax
10002ee30:	31 c0	xorl	%eax, %eax
10002ee32:	c3	retq

Sections:
Idx Name             Size     VMA              Type
  0 __text           0002da23 0000000100001410 TEXT
  1 __stubs          00000720 000000010002ee34 TEXT
  2 __objc_methname  00006bae 000000010002f554 DATA
  3 __objc_classname 00000377 0000000100036102 DATA
  4 __objc_methtype  00001abb 0000000100036479 DATA
  5 __const          000014c0 0000000100037f40 DATA
  6 __cstring        00001e6f 0000000100039400 DATA
  7 __gcc_except_tab 00000010 000000010003b270 DATA
  8 __unwind_info    00000894 000000010003b280 DATA
  9 __eh_frame       000004e0 000000010003bb18 DATA
 10 __got            00000cd8 000000010003c000 DATA
 11 __const          00000148 000000010003ccd8 DATA
 12 __cfstring       00003420 000000010003ce20 DATA
 13 __objc_classlist 000001a8 0000000100040240 DATA
 14 __objc_catlist   00000008 00000001000403e8 DATA
 15 __objc_protolist 00000030 00000001000403f0 DATA
 16 __objc_imageinfo 00000008 0000000100040420 DATA
 17 __objc_floatobj  00000020 0000000100040428 DATA
 18 __objc_const     0000cb40 0000000100044000 DATA
 19 __objc_selrefs   00001a30 0000000100050b40 DATA
 20 __objc_classrefs 00000210 0000000100052570 DATA
 21 __objc_superrefs 00000150 0000000100052780 DATA
 22 __objc_ivar      00001040 00000001000528d0 DATA
 23 __objc_data      00001130 0000000100053910 DATA
 24 __data           00000250 0000000100054a40 DATA
 25 __bss            00000020 0000000100054c90 BSS
